[
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/50",
    "id": 2242762802,
    "node_id": "PR_kwDONDG85c6Frdgy",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/50",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/50.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/50.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/50",
    "number": 50,
    "state": "closed",
    "locked": false,
    "title": "Version 2.0.1",
    "user": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-18T17:27:40Z",
    "updated_at": "2024-12-18T17:29:46Z",
    "closed_at": "2024-12-18T17:29:46Z",
    "merged_at": "2024-12-18T17:29:46Z",
    "merge_commit_sha": "52d704029f06277350ba2a86f9acfb66e0c11935",
    "assignee": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "Danguepre",
        "id": 73189183,
        "node_id": "MDQ6VXNlcjczMTg5MTgz",
        "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Danguepre",
        "html_url": "https://github.com/Danguepre",
        "followers_url": "https://api.github.com/users/Danguepre/followers",
        "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
        "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
        "organizations_url": "https://api.github.com/users/Danguepre/orgs",
        "repos_url": "https://api.github.com/users/Danguepre/repos",
        "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Danguepre/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      {
        "login": "Javiruizg",
        "id": 91947377,
        "node_id": "U_kgDOBXsBcQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Javiruizg",
        "html_url": "https://github.com/Javiruizg",
        "followers_url": "https://api.github.com/users/Javiruizg/followers",
        "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
        "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
        "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
        "repos_url": "https://api.github.com/users/Javiruizg/repos",
        "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      {
        "login": "JoseGTD",
        "id": 91948919,
        "node_id": "U_kgDOBXsHdw",
        "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JoseGTD",
        "html_url": "https://github.com/JoseGTD",
        "followers_url": "https://api.github.com/users/JoseGTD/followers",
        "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
        "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
        "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
        "repos_url": "https://api.github.com/users/JoseGTD/repos",
        "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
        "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/50/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/50/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/50/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/33e68f7edd0f16f8776cd3381572063604b485af",
    "head": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "33e68f7edd0f16f8776cd3381572063604b485af",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:main",
      "ref": "main",
      "sha": "57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/50"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/50"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/50"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/50/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/50/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/50/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/33e68f7edd0f16f8776cd3381572063604b485af"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "8c6e81202ce58c58dab1db8c5bcf290194d8aa12",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/33e68f7edd0f16f8776cd3381572063604b485af/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/33e68f7edd0f16f8776cd3381572063604b485af/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=33e68f7edd0f16f8776cd3381572063604b485af",
        "patch": "@@ -55,7 +55,7 @@\n \n                 <li class=\"sidebar-item {{ 'active' if request.endpoint == 'public.index' else '' }}\">\n                     <a class=\"sidebar-link\" href=\"{{ url_for('public.index') }}\">\n-                        <i class=\"align-middle\" data-feather=\"home\"></i> <span class=\"align-middle\">Home</span>\n+                        <i class=\"align-middle\" data-feather=\"home\"></i> <span class=\"align-middle\">Model index</span>\n                     </a>\n                 </li>\n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/49",
    "id": 2242756933,
    "node_id": "PR_kwDONDG85c6FrcFF",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/49",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/49.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/49.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/49",
    "number": 49,
    "state": "closed",
    "locked": false,
    "title": "misc(public): change navbar",
    "user": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Changed the display texxt of the home button",
    "created_at": "2024-12-18T17:24:00Z",
    "updated_at": "2024-12-18T17:26:54Z",
    "closed_at": "2024-12-18T17:26:54Z",
    "merged_at": "2024-12-18T17:26:54Z",
    "merge_commit_sha": "33e68f7edd0f16f8776cd3381572063604b485af",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/49/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/49/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/49/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/7864ba5cc86c489e29125e0323b324131dfc9240",
    "head": {
      "label": "flamenquin-hub-single:miscelanous-change-title",
      "ref": "miscelanous-change-title",
      "sha": "7864ba5cc86c489e29125e0323b324131dfc9240",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "b942a1d6694112b3f215336ce243a94b3250b8aa",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/49"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/49"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/49"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/49/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/49/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/49/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/7864ba5cc86c489e29125e0323b324131dfc9240"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "8c6e81202ce58c58dab1db8c5bcf290194d8aa12",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/7864ba5cc86c489e29125e0323b324131dfc9240/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/7864ba5cc86c489e29125e0323b324131dfc9240/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=7864ba5cc86c489e29125e0323b324131dfc9240",
        "patch": "@@ -55,7 +55,7 @@\n \n                 <li class=\"sidebar-item {{ 'active' if request.endpoint == 'public.index' else '' }}\">\n                     <a class=\"sidebar-link\" href=\"{{ url_for('public.index') }}\">\n-                        <i class=\"align-middle\" data-feather=\"home\"></i> <span class=\"align-middle\">Home</span>\n+                        <i class=\"align-middle\" data-feather=\"home\"></i> <span class=\"align-middle\">Model index</span>\n                     </a>\n                 </li>\n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/44",
    "id": 2240679300,
    "node_id": "PR_kwDONDG85c6Fjg2E",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/44",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/44.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/44.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/44",
    "number": 44,
    "state": "closed",
    "locked": false,
    "title": "Version 3.0",
    "user": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Added missing tests",
    "created_at": "2024-12-17T21:07:41Z",
    "updated_at": "2024-12-17T21:12:52Z",
    "closed_at": "2024-12-17T21:12:52Z",
    "merged_at": "2024-12-17T21:12:52Z",
    "merge_commit_sha": "57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/44/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/44/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/44/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/b942a1d6694112b3f215336ce243a94b3250b8aa",
    "head": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "b942a1d6694112b3f215336ce243a94b3250b8aa",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:main",
      "ref": "main",
      "sha": "edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/44"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/44"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/44"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/44/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/44/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/44/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/b942a1d6694112b3f215336ce243a94b3250b8aa"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "8261c08ef6ed1d87d60f12a6edd0fb02d49443cf",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=b942a1d6694112b3f215336ce243a94b3250b8aa",
        "patch": "@@ -196,7 +196,7 @@ def delete():\n         os.remove(filepath)\n         return jsonify({\"message\": \"File deleted successfully\"})\n \n-    return jsonify({\"error\": \"Error: File not found\"})\n+    return jsonify({\"error\": \"File not found\"})\n \n @dataset_bp.route(\"/dataset/download/<int:dataset_id>\", methods=[\"GET\"])\n def download_dataset(dataset_id):"
      },
      {
        "sha": "7aad78612616876fa0bde2b93236e4f3ae6bf5f2",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 20,
        "deletions": 37,
        "changes": 57,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=b942a1d6694112b3f215336ce243a94b3250b8aa",
        "patch": "@@ -1,4 +1,3 @@\n-\n import random\n from locust import HttpUser, TaskSet, task, between\n from core.locust.common import get_csrf_token\n@@ -40,7 +39,7 @@ def ensure_logged_in(self):\n \n     @task\n     def commit_dataset(self):\n-        dataset_id = random.randint(1, 10)\n+        dataset_id = random.randint(1, 5)\n         response = self.client.post(f\"/dataset/commit/{dataset_id}\", json={})\n         \n         if response.status_code == 200:\n@@ -74,41 +73,25 @@ def ensure_logged_in(self):\n             print(f\"Login failed: {response.status_code}, {response.text}\")\n         else:\n             print(\"User successfully logged in.\")\n-\n-class DownloadDatasets(TaskSet):\n-    formats = {\n-        \"Glencoe\": \"glencoe\",\n-        \"SPLOT\": \"splot\",\n-        \"DIMACS\": \"dimacs\",\n-        \"ZIP\": \"zip\"\n-    }\n-\n+            \n+            \n     @task\n-    def download_files(self):\n-        for dataset_id in self.dataset_ids:  # Itera sobre tus dataset_ids\n-            for format_name, format_value in self.formats.items():  # Itera sobre los formatos\n-                with self.client.get(\n-                    f\"/flamapy/export/dataset/{dataset_id}/{format_value}\",  # URL corregida\n-                    name=f\"Download {format_name}\",\n-                    allow_redirects=True,  # Sigue autom\u00e1ticamente las redirecciones\n-                    catch_response=True  # Captura la respuesta para an\u00e1lisis\n-                ) as response:\n-                    if response.status_code == 200:  # Descarga exitosa\n-                        response.success()\n-                    elif response.status_code == 302:  # Redirecci\u00f3n\n-                        response.success()  # Tratamos 302 como \u00e9xito\n-                    else:\n-                        response.failure(\n-                            f\"Failed to download {format_name} for dataset {dataset_id} \"\n-                            f\"with status code {response.status_code}\"\n-                        )\n+    def commit_dataset(self):\n+        file_id = random.randint(1, 5)  \n+        response = self.client.post(f\"/dataset/commit_file/{file_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"File {file_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"File {file_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for File {file_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n+            \n+         \n \n class DatasetUser(HttpUser):\n-    \"\"\"\n-    Clase principal que define los usuarios y su comportamiento.\n-    \"\"\"\n-    tasks = [CommitFileBehavior]  # Asigna la tarea de descarga\n-    min_wait = 5000  # Espera m\u00ednima de 5 segundos\n-    max_wait = 9000  # Espera m\u00e1xima de 9 segundos\n-    wait_time = between(5, 9)  # Espera aleatoria entre tareas\n-    host = \"http://localhost:5000\"  # La URL base de tu aplicaci\u00f3n\n\\ No newline at end of file\n+    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior]\n+    wait_time = between(5, 9)\n+    host = get_host_for_locust_testing()\n\\ No newline at end of file"
      },
      {
        "sha": "412fe219d06eafced00e68885708250b91b44891",
        "filename": "app/modules/dataset/tests/locustfile_download.py",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py?ref=b942a1d6694112b3f215336ce243a94b3250b8aa",
        "patch": "@@ -0,0 +1,51 @@\n+from locust import HttpUser, TaskSet, task, between\n+import re\n+\n+class DownloadDatasetFormats(TaskSet):\n+    \"\"\"Simula la descarga de datasets con rutas din\u00e1micas.\"\"\"\n+\n+    def on_start(self):\n+        \"\"\"Obtiene un ID v\u00e1lido para el dataset. Evita fallos si la petici\u00f3n falla.\"\"\"\n+        try:\n+            self.dataset_id = self.get_valid_dataset_id()\n+        except Exception as e:\n+            print(f\"\u26a0\ufe0f Error obteniendo el ID: {e}. Usando 53 por defecto.\")\n+            self.dataset_id = 53  # Valor por defecto si la petici\u00f3n falla\n+        self.base_zip_url = f\"/dataset/download/{self.dataset_id}\"\n+        self.base_export_url = f\"/flamapy/export_dataset/{self.dataset_id}\"\n+\n+    def get_valid_dataset_id(self):\n+        \"\"\"Obtiene un ID v\u00e1lido consultando la p\u00e1gina principal.\"\"\"\n+        response = self.client.get(\"/doi/10.1234/\", name=\"Get Dataset ID\")\n+        if response.status_code == 200:\n+            match = re.search(r'/dataset/download/(\\d+)', response.text)\n+            if match:\n+                print(f\"\u2705 ID encontrado: {match.group(1)}\")\n+                return match.group(1)  # Retorna el primer ID encontrado\n+        raise Exception(\"No se pudo obtener un ID v\u00e1lido\")\n+\n+    @task\n+    def download_zip(self):\n+        \"\"\"Descarga el dataset en formato ZIP.\"\"\"\n+        self.client.get(self.base_zip_url, name=\"Download ZIP\")\n+\n+    @task\n+    def download_glencoe(self):\n+        \"\"\"Descarga el dataset en formato Glencoe.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/glencoe\", name=\"Download Glencoe\")\n+\n+    @task\n+    def download_dimacs(self):\n+        \"\"\"Descarga el dataset en formato DIMACS.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/dimacs\", name=\"Download DIMACS\")\n+\n+    @task\n+    def download_splot(self):\n+        \"\"\"Descarga el dataset en formato SPLOT.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/splot\", name=\"Download SPLOT\")\n+\n+class DatasetUser(HttpUser):\n+    \"\"\"Simula un usuario que descarga datasets con rutas adaptadas.\"\"\"\n+    tasks = [DownloadDatasetFormats]\n+    wait_time = between(1, 2)\n+    host = \"http://localhost:5000\""
      },
      {
        "sha": "786d0f7e5482d0481178354851ee2cf9615c5a68",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=b942a1d6694112b3f215336ce243a94b3250b8aa",
        "patch": "@@ -12,6 +12,11 @@\n \n DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n \n+# Asegurarse de que la carpeta de descargas exista\n+if not os.path.exists(DOWNLOAD_DIR):\n+    os.makedirs(DOWNLOAD_DIR)\n+    print(f\"\u2705 Carpeta de descargas creada: {DOWNLOAD_DIR}\")\n+\n \n def initialize_driver(download_dir=None):\n     options = Options()\n@@ -96,4 +101,4 @@ def test_download_datasets_index():\n \n \n if __name__ == \"__main__\":\n-    test_download_datasets_index()\n\\ No newline at end of file\n+    test_download_datasets_index()"
      },
      {
        "sha": "2c1028b72578b19578d94522ca35bd7d031393a5",
        "filename": "app/modules/dataset/tests/test_selenium_syntax.py",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py?ref=b942a1d6694112b3f215336ce243a94b3250b8aa",
        "patch": "@@ -0,0 +1,87 @@\n+# Generated by Selenium IDE\n+import pytest\n+import time\n+import json\n+import os\n+from selenium import webdriver\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.action_chains import ActionChains\n+from selenium.webdriver.support import expected_conditions\n+from selenium.webdriver.support.wait import WebDriverWait\n+from selenium.webdriver.common.keys import Keys\n+from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n+\n+def wait_for_page_to_load(driver, timeout=4):\n+    WebDriverWait(driver, timeout).until(\n+        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+    )\n+\n+class TestSeleniumsyntax():\n+  def setup_method(self, method):\n+    self.driver = webdriver.Chrome()\n+    self.vars = {}\n+  \n+  def teardown_method(self, method):\n+    self.driver.quit()\n+  \n+  def test_seleniumsyntax(self):\n+    typo = os.path.abspath(\"app/modules/dataset/uvl_examples/typo.uvl\")\n+    indent = os.path.abspath(\"app/modules/dataset/uvl_examples/indent.uvl\")\n+    syntax = os.path.abspath(\"app/modules/dataset/uvl_examples/syntax.uvl\")\n+    correct = os.path.abspath(\"app/modules/dataset/uvl_examples/correct.uvl\")\n+    self.driver.get(\"http://localhost:5000/\")\n+    self.driver.set_window_size(1854, 1048)\n+    self.driver.find_element(By.LINK_TEXT, \"Login\").click()\n+    self.driver.find_element(By.ID, \"email\").click()\n+    self.driver.find_element(By.ID, \"email\").send_keys(\"user1@example.com\")\n+    self.driver.find_element(By.ID, \"password\").send_keys(\"1234\")\n+    self.driver.find_element(By.ID, \"submit\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(8) .align-middle:nth-child(2)\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(typo)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.ID, \"check_model_button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.ID, \"check_model_button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(indent)\n+    wait_for_page_to_load(self.driver)\n+\n+\n+\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(7) .align-middle:nth-child(2)\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(6) .align-middle:nth-child(2)\").click()\n+    \n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(indent)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(typo)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(syntax)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+  "
      },
      {
        "sha": "8f4f91701f282c213b3ec376c17fb7c798db9bec",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 143,
        "deletions": 1,
        "changes": 144,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=b942a1d6694112b3f215336ce243a94b3250b8aa",
        "patch": "@@ -1,5 +1,8 @@\n import pytest\n from flask import url_for\n+import io\n+import shutil\n+import json\n \n @pytest.fixture(scope=\"module\")\n def test_client(test_client):\n@@ -45,4 +48,143 @@ def test_download_zip_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/zip\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n\\ No newline at end of file\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n+\n+def aux_upload_errors(file,error,test_client):\n+    \"\"\"\n+    Reutilizar c\u00f3digo\n+    \"\"\"\n+    response = test_client.get(url_for('dataset.check_dataset'))\n+    assert response.status_code == 200\n+    data = {'name': 'file', 'filename': 'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload_check'), data=data, follow_redirects=True,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 200\n+    response = test_client.post(url_for('dataset.check_dataset'))\n+    assert response.status_code==400\n+    assert response.json['error']==error\n+\n+def test_upload_file_bad_indent(test_client):\n+    \"\"\"\n+    Testea la subida de ficheros con errores de sintaxis al Dropbox en dataset/upload\n+    \"\"\"\n+    test_client.post(\n+        \"/login\", data=dict(email=\"test@example.com\", password=\"test1234\"), follow_redirects=True\n+    )\n+\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       fdd     \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"), 'test_bad_indent.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 15:7 - mismatched input 'fdd' expecting '<DEDENT>'\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_upload_file_syntax_error(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraints\n+    Server =s\"> \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_syntax_error.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 18:11 - token recognition error at: '=s'\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_upload_file_typo(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_typo.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 17:0 - mismatched input 'constraintss' expecting {<EOF>, 'constraints'}\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_delete_file_from_dropbox(test_client):\n+    file = (io.BytesIO(b\"\"\"This one doesn't matter\"\"\"),'test.uvl')\n+    data = {'name': 'file', 'filename': 'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload_check'), data=data, follow_redirects=True,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 200\n+    data = {'file':'test.uvl'}\n+    response = test_client.post(url_for('dataset.delete'),data=json.dumps(data),content_type = 'application/json')\n+    assert response.status_code == 200\n+\n+\n+def test_upload_models_with_syntax_errors(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_typo.uvl')\n+    data = {'name': 'file', 'filename':'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload'), data=data,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 400\n+    assert response.json['message']==\"The UVL has the following error that prevents reading it :Line 17:0 - mismatched input 'constraintss' expecting {<EOF>, 'constraints'}\"\n+\n+\n+"
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/correct.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl?ref=b942a1d6694112b3f215336ce243a94b3250b8aa",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "e1b263ae91a6fb98489f8c7ba432b0635aa4412d",
        "filename": "app/modules/dataset/uvl_examples/indent.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl?ref=b942a1d6694112b3f215336ce243a94b3250b8aa",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       fdd     \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "bae007211410442932e10a374723735b056c3b3a",
        "filename": "app/modules/dataset/uvl_examples/syntax.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl?ref=b942a1d6694112b3f215336ce243a94b3250b8aa",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraints\n+    Server =s\"> \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "cd5786189c2b2e5a6a3730665a46c72c49c75e2c",
        "filename": "app/modules/dataset/uvl_examples/typo.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b942a1d6694112b3f215336ce243a94b3250b8aa/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl?ref=b942a1d6694112b3f215336ce243a94b3250b8aa",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/43",
    "id": 2240192155,
    "node_id": "PR_kwDONDG85c6Fhp6b",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/43",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/43.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/43.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/43",
    "number": 43,
    "state": "closed",
    "locked": false,
    "title": "Fix dataset tests",
    "user": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-17T17:12:16Z",
    "updated_at": "2024-12-17T18:02:10Z",
    "closed_at": "2024-12-17T18:02:10Z",
    "merged_at": "2024-12-17T18:02:10Z",
    "merge_commit_sha": "322829b2d1730511830b536f8a0b7cde5532d691",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/43/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/43/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/43/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/e01a8566a1aa26751267086d9dae0583d348e8b4",
    "head": {
      "label": "flamenquin-hub-single:fix-dataset-tests",
      "ref": "fix-dataset-tests",
      "sha": "e01a8566a1aa26751267086d9dae0583d348e8b4",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "e67a6435885d2428b35df57bc1217a9e60f5ce11",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/43"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/43"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/43"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/43/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/43/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/43/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/e01a8566a1aa26751267086d9dae0583d348e8b4"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "7aad78612616876fa0bde2b93236e4f3ae6bf5f2",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 20,
        "deletions": 37,
        "changes": 57,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e01a8566a1aa26751267086d9dae0583d348e8b4/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e01a8566a1aa26751267086d9dae0583d348e8b4/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=e01a8566a1aa26751267086d9dae0583d348e8b4",
        "patch": "@@ -1,4 +1,3 @@\n-\n import random\n from locust import HttpUser, TaskSet, task, between\n from core.locust.common import get_csrf_token\n@@ -40,7 +39,7 @@ def ensure_logged_in(self):\n \n     @task\n     def commit_dataset(self):\n-        dataset_id = random.randint(1, 10)\n+        dataset_id = random.randint(1, 5)\n         response = self.client.post(f\"/dataset/commit/{dataset_id}\", json={})\n         \n         if response.status_code == 200:\n@@ -74,41 +73,25 @@ def ensure_logged_in(self):\n             print(f\"Login failed: {response.status_code}, {response.text}\")\n         else:\n             print(\"User successfully logged in.\")\n-\n-class DownloadDatasets(TaskSet):\n-    formats = {\n-        \"Glencoe\": \"glencoe\",\n-        \"SPLOT\": \"splot\",\n-        \"DIMACS\": \"dimacs\",\n-        \"ZIP\": \"zip\"\n-    }\n-\n+            \n+            \n     @task\n-    def download_files(self):\n-        for dataset_id in self.dataset_ids:  # Itera sobre tus dataset_ids\n-            for format_name, format_value in self.formats.items():  # Itera sobre los formatos\n-                with self.client.get(\n-                    f\"/flamapy/export/dataset/{dataset_id}/{format_value}\",  # URL corregida\n-                    name=f\"Download {format_name}\",\n-                    allow_redirects=True,  # Sigue autom\u00e1ticamente las redirecciones\n-                    catch_response=True  # Captura la respuesta para an\u00e1lisis\n-                ) as response:\n-                    if response.status_code == 200:  # Descarga exitosa\n-                        response.success()\n-                    elif response.status_code == 302:  # Redirecci\u00f3n\n-                        response.success()  # Tratamos 302 como \u00e9xito\n-                    else:\n-                        response.failure(\n-                            f\"Failed to download {format_name} for dataset {dataset_id} \"\n-                            f\"with status code {response.status_code}\"\n-                        )\n+    def commit_dataset(self):\n+        file_id = random.randint(1, 5)  \n+        response = self.client.post(f\"/dataset/commit_file/{file_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"File {file_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"File {file_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for File {file_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n+            \n+         \n \n class DatasetUser(HttpUser):\n-    \"\"\"\n-    Clase principal que define los usuarios y su comportamiento.\n-    \"\"\"\n-    tasks = [CommitFileBehavior]  # Asigna la tarea de descarga\n-    min_wait = 5000  # Espera m\u00ednima de 5 segundos\n-    max_wait = 9000  # Espera m\u00e1xima de 9 segundos\n-    wait_time = between(5, 9)  # Espera aleatoria entre tareas\n-    host = \"http://localhost:5000\"  # La URL base de tu aplicaci\u00f3n\n\\ No newline at end of file\n+    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior]\n+    wait_time = between(5, 9)\n+    host = get_host_for_locust_testing()\n\\ No newline at end of file"
      },
      {
        "sha": "412fe219d06eafced00e68885708250b91b44891",
        "filename": "app/modules/dataset/tests/locustfile_download.py",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e01a8566a1aa26751267086d9dae0583d348e8b4/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e01a8566a1aa26751267086d9dae0583d348e8b4/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py?ref=e01a8566a1aa26751267086d9dae0583d348e8b4",
        "patch": "@@ -0,0 +1,51 @@\n+from locust import HttpUser, TaskSet, task, between\n+import re\n+\n+class DownloadDatasetFormats(TaskSet):\n+    \"\"\"Simula la descarga de datasets con rutas din\u00e1micas.\"\"\"\n+\n+    def on_start(self):\n+        \"\"\"Obtiene un ID v\u00e1lido para el dataset. Evita fallos si la petici\u00f3n falla.\"\"\"\n+        try:\n+            self.dataset_id = self.get_valid_dataset_id()\n+        except Exception as e:\n+            print(f\"\u26a0\ufe0f Error obteniendo el ID: {e}. Usando 53 por defecto.\")\n+            self.dataset_id = 53  # Valor por defecto si la petici\u00f3n falla\n+        self.base_zip_url = f\"/dataset/download/{self.dataset_id}\"\n+        self.base_export_url = f\"/flamapy/export_dataset/{self.dataset_id}\"\n+\n+    def get_valid_dataset_id(self):\n+        \"\"\"Obtiene un ID v\u00e1lido consultando la p\u00e1gina principal.\"\"\"\n+        response = self.client.get(\"/doi/10.1234/\", name=\"Get Dataset ID\")\n+        if response.status_code == 200:\n+            match = re.search(r'/dataset/download/(\\d+)', response.text)\n+            if match:\n+                print(f\"\u2705 ID encontrado: {match.group(1)}\")\n+                return match.group(1)  # Retorna el primer ID encontrado\n+        raise Exception(\"No se pudo obtener un ID v\u00e1lido\")\n+\n+    @task\n+    def download_zip(self):\n+        \"\"\"Descarga el dataset en formato ZIP.\"\"\"\n+        self.client.get(self.base_zip_url, name=\"Download ZIP\")\n+\n+    @task\n+    def download_glencoe(self):\n+        \"\"\"Descarga el dataset en formato Glencoe.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/glencoe\", name=\"Download Glencoe\")\n+\n+    @task\n+    def download_dimacs(self):\n+        \"\"\"Descarga el dataset en formato DIMACS.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/dimacs\", name=\"Download DIMACS\")\n+\n+    @task\n+    def download_splot(self):\n+        \"\"\"Descarga el dataset en formato SPLOT.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/splot\", name=\"Download SPLOT\")\n+\n+class DatasetUser(HttpUser):\n+    \"\"\"Simula un usuario que descarga datasets con rutas adaptadas.\"\"\"\n+    tasks = [DownloadDatasetFormats]\n+    wait_time = between(1, 2)\n+    host = \"http://localhost:5000\""
      },
      {
        "sha": "786d0f7e5482d0481178354851ee2cf9615c5a68",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e01a8566a1aa26751267086d9dae0583d348e8b4/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e01a8566a1aa26751267086d9dae0583d348e8b4/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=e01a8566a1aa26751267086d9dae0583d348e8b4",
        "patch": "@@ -12,6 +12,11 @@\n \n DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n \n+# Asegurarse de que la carpeta de descargas exista\n+if not os.path.exists(DOWNLOAD_DIR):\n+    os.makedirs(DOWNLOAD_DIR)\n+    print(f\"\u2705 Carpeta de descargas creada: {DOWNLOAD_DIR}\")\n+\n \n def initialize_driver(download_dir=None):\n     options = Options()\n@@ -96,4 +101,4 @@ def test_download_datasets_index():\n \n \n if __name__ == \"__main__\":\n-    test_download_datasets_index()\n\\ No newline at end of file\n+    test_download_datasets_index()"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/42",
    "id": 2238526512,
    "node_id": "PR_kwDONDG85c6FbTQw",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/42",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/42.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/42.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/42",
    "number": 42,
    "state": "closed",
    "locked": false,
    "title": "Feature test upload analyse and repair uvl",
    "user": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-17T00:34:08Z",
    "updated_at": "2024-12-17T16:32:24Z",
    "closed_at": "2024-12-17T16:32:24Z",
    "merged_at": "2024-12-17T16:32:24Z",
    "merge_commit_sha": "e67a6435885d2428b35df57bc1217a9e60f5ce11",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/42/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/42/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/42/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
    "head": {
      "label": "flamenquin-hub-single:feature_test-upload_analyse_and_repair_UVL",
      "ref": "feature_test-upload_analyse_and_repair_UVL",
      "sha": "6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "ed5db7b107035a537212a33ca3d914566243de59",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/42"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/42"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/42"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/42/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/42/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/42/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "1d6340e82489a939545026312b2cd435cf2b7df7",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "patch": "@@ -196,7 +196,7 @@ def delete():\n         os.remove(filepath)\n         return jsonify({\"message\": \"File deleted successfully\"})\n \n-    return jsonify({\"error\": \"Error: File not found\"})\n+    return jsonify({\"error\": \"File not found\"})\n \n @dataset_bp.route(\"/dataset/download/<int:dataset_id>\", methods=[\"GET\"])\n def download_dataset(dataset_id):"
      },
      {
        "sha": "2c1028b72578b19578d94522ca35bd7d031393a5",
        "filename": "app/modules/dataset/tests/test_selenium_syntax.py",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py?ref=6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "patch": "@@ -0,0 +1,87 @@\n+# Generated by Selenium IDE\n+import pytest\n+import time\n+import json\n+import os\n+from selenium import webdriver\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.action_chains import ActionChains\n+from selenium.webdriver.support import expected_conditions\n+from selenium.webdriver.support.wait import WebDriverWait\n+from selenium.webdriver.common.keys import Keys\n+from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n+\n+def wait_for_page_to_load(driver, timeout=4):\n+    WebDriverWait(driver, timeout).until(\n+        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+    )\n+\n+class TestSeleniumsyntax():\n+  def setup_method(self, method):\n+    self.driver = webdriver.Chrome()\n+    self.vars = {}\n+  \n+  def teardown_method(self, method):\n+    self.driver.quit()\n+  \n+  def test_seleniumsyntax(self):\n+    typo = os.path.abspath(\"app/modules/dataset/uvl_examples/typo.uvl\")\n+    indent = os.path.abspath(\"app/modules/dataset/uvl_examples/indent.uvl\")\n+    syntax = os.path.abspath(\"app/modules/dataset/uvl_examples/syntax.uvl\")\n+    correct = os.path.abspath(\"app/modules/dataset/uvl_examples/correct.uvl\")\n+    self.driver.get(\"http://localhost:5000/\")\n+    self.driver.set_window_size(1854, 1048)\n+    self.driver.find_element(By.LINK_TEXT, \"Login\").click()\n+    self.driver.find_element(By.ID, \"email\").click()\n+    self.driver.find_element(By.ID, \"email\").send_keys(\"user1@example.com\")\n+    self.driver.find_element(By.ID, \"password\").send_keys(\"1234\")\n+    self.driver.find_element(By.ID, \"submit\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(8) .align-middle:nth-child(2)\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(typo)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.ID, \"check_model_button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.ID, \"check_model_button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(indent)\n+    wait_for_page_to_load(self.driver)\n+\n+\n+\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(7) .align-middle:nth-child(2)\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(6) .align-middle:nth-child(2)\").click()\n+    \n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(indent)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(typo)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(syntax)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+  "
      },
      {
        "sha": "8f4f91701f282c213b3ec376c17fb7c798db9bec",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 143,
        "deletions": 1,
        "changes": 144,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "patch": "@@ -1,5 +1,8 @@\n import pytest\n from flask import url_for\n+import io\n+import shutil\n+import json\n \n @pytest.fixture(scope=\"module\")\n def test_client(test_client):\n@@ -45,4 +48,143 @@ def test_download_zip_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/zip\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n\\ No newline at end of file\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n+\n+def aux_upload_errors(file,error,test_client):\n+    \"\"\"\n+    Reutilizar c\u00f3digo\n+    \"\"\"\n+    response = test_client.get(url_for('dataset.check_dataset'))\n+    assert response.status_code == 200\n+    data = {'name': 'file', 'filename': 'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload_check'), data=data, follow_redirects=True,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 200\n+    response = test_client.post(url_for('dataset.check_dataset'))\n+    assert response.status_code==400\n+    assert response.json['error']==error\n+\n+def test_upload_file_bad_indent(test_client):\n+    \"\"\"\n+    Testea la subida de ficheros con errores de sintaxis al Dropbox en dataset/upload\n+    \"\"\"\n+    test_client.post(\n+        \"/login\", data=dict(email=\"test@example.com\", password=\"test1234\"), follow_redirects=True\n+    )\n+\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       fdd     \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"), 'test_bad_indent.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 15:7 - mismatched input 'fdd' expecting '<DEDENT>'\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_upload_file_syntax_error(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraints\n+    Server =s\"> \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_syntax_error.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 18:11 - token recognition error at: '=s'\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_upload_file_typo(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_typo.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 17:0 - mismatched input 'constraintss' expecting {<EOF>, 'constraints'}\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_delete_file_from_dropbox(test_client):\n+    file = (io.BytesIO(b\"\"\"This one doesn't matter\"\"\"),'test.uvl')\n+    data = {'name': 'file', 'filename': 'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload_check'), data=data, follow_redirects=True,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 200\n+    data = {'file':'test.uvl'}\n+    response = test_client.post(url_for('dataset.delete'),data=json.dumps(data),content_type = 'application/json')\n+    assert response.status_code == 200\n+\n+\n+def test_upload_models_with_syntax_errors(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_typo.uvl')\n+    data = {'name': 'file', 'filename':'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload'), data=data,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 400\n+    assert response.json['message']==\"The UVL has the following error that prevents reading it :Line 17:0 - mismatched input 'constraintss' expecting {<EOF>, 'constraints'}\"\n+\n+\n+"
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/correct.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl?ref=6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "e1b263ae91a6fb98489f8c7ba432b0635aa4412d",
        "filename": "app/modules/dataset/uvl_examples/indent.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl?ref=6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       fdd     \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "bae007211410442932e10a374723735b056c3b3a",
        "filename": "app/modules/dataset/uvl_examples/syntax.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl?ref=6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraints\n+    Server =s\"> \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "cd5786189c2b2e5a6a3730665a46c72c49c75e2c",
        "filename": "app/modules/dataset/uvl_examples/typo.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl?ref=6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/40",
    "id": 2238214886,
    "node_id": "PR_kwDONDG85c6FaHLm",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/40",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/40.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/40.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/40",
    "number": 40,
    "state": "closed",
    "locked": false,
    "title": "Version 2.0",
    "user": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Stable release with all WIs and related testing and features finished",
    "created_at": "2024-12-16T20:27:39Z",
    "updated_at": "2024-12-16T21:59:20Z",
    "closed_at": "2024-12-16T21:59:20Z",
    "merged_at": "2024-12-16T21:59:20Z",
    "merge_commit_sha": "edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/40/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/40/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/40/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/ed5db7b107035a537212a33ca3d914566243de59",
    "head": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "ed5db7b107035a537212a33ca3d914566243de59",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:main",
      "ref": "main",
      "sha": "effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/40"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/40"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/40"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/40/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/40/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/40/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/ed5db7b107035a537212a33ca3d914566243de59"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "3ac01b8f10bb827b95ce6876277e804d60170a31",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -17,3 +17,4 @@ jobs:\n     steps:\n       - uses: actions/checkout@v2\n       - uses: webiny/action-conventional-commits@v1.0.3\n+"
      },
      {
        "sha": "f0fa9647a57c3e3213cde3c10727cf217393c1ff",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -50,6 +50,7 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        WORKING_DIR: \"\"\n       run: |\n         pytest app/modules/ --ignore-glob='*selenium*'\n "
      },
      {
        "sha": "cfd1de2c2d675ce525e364852c9c40031e8bde19",
        "filename": ".github/workflows/render_main.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/.github%2Fworkflows%2Frender_main.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/.github%2Fworkflows%2Frender_main.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender_main.yml?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -48,6 +48,7 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        WORKING_DIR: \"\"\n       run: |\n         pytest app/modules/ --ignore-glob='*selenium*'\n "
      },
      {
        "sha": "c2f01a0ae80ec18e56cb1fc86e13b5ec720d1347",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -47,5 +47,6 @@ jobs:\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n         ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+        WORKING_DIR: \"\"\n       run: |\n         pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      },
      {
        "sha": "3572f8a686c870b5140ee42d0dcdaa070e302a32",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitignore?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -15,4 +15,7 @@ nginx.prod.ssl.conf\n .version\n entrypoint.sh\n deployments.log\n-test_file.txt\n\\ No newline at end of file\n+test_file.txt\n+uploads/\n+egc/\n+app.log.*"
      },
      {
        "sha": "e4637074898a1a93c1a06f57ccd6ac82c64c8065",
        "filename": "app/modules/auth/tests/locustfile.py",
        "status": "modified",
        "additions": 52,
        "deletions": 1,
        "changes": 53,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -1,4 +1,5 @@\n from locust import HttpUser, TaskSet, task\n+import requests\n from core.locust.common import get_csrf_token, fake\n from core.environment.host import get_host_for_locust_testing\n \n@@ -51,8 +52,58 @@ def login(self):\n             print(f\"Login failed: {response.status_code}\")\n \n \n+class InviteBehavior(TaskSet):\n+    def on_start(self):\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def invite_user(self):\n+        github_user_response = requests.get(\"https://api.github.com/user\", headers={\n+            \"Authorization\": \"token example_valid_token\",\n+            \"Accept\": \"application/vnd.github.v3+json\"\n+        })\n+\n+        if github_user_response.status_code != 200:\n+            print(f\"Failed to fetch GitHub user info: {github_user_response.status_code}\")\n+\n+        username = github_user_response.json().get(\"login\")\n+        if not username:\n+            print(\"Failed to fetch GitHub username.\")\n+\n+        response = self.client.post(\"/invite\", json={\n+            \"github_username\": username\n+        })\n+        \n+        if response.status_code == 201:\n+            print(f\"Invitation sent successfully to {username}.\")\n+        elif response.status_code == 404:\n+            print(f\"GitHub user {username} not found.\")\n+        elif response.status_code == 422:\n+            print(f\"User {username} already belongs to the organization.\")\n+        else:\n+            print(f\"Invitation failed with status: {response.status_code} - {response.text}\")\n+\n+\n+\n+\n class AuthUser(HttpUser):\n-    tasks = [SignupBehavior, LoginBehavior]\n+    tasks = [SignupBehavior, LoginBehavior, InviteBehavior]\n     min_wait = 5000\n     max_wait = 9000\n     host = get_host_for_locust_testing()\n+    \n+    "
      },
      {
        "sha": "729195481b361557670716d39a2979257d9a1374",
        "filename": "app/modules/auth/tests/test_unit.py",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -1,3 +1,4 @@\n+from unittest.mock import MagicMock, patch\n import pytest\n from flask import url_for\n \n@@ -117,3 +118,39 @@ def test_service_create_with_profile_fail_no_password(clean_database):\n \n     assert UserRepository().count() == 0\n     assert UserProfileRepository().count() == 0\n+    \n+    \n+    \n+@patch('flask_dance.contrib.github.github')  \n+def test_redirect_to_login(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(authorized=False)\n+\n+    response = test_client.get('/gitlogin')\n+\n+    assert response.status_code == 302\n+    assert \"/github\" in response.location, f\"Expected redirection to github, got {response.request.path}\"\n+    \n+    \n+\n+@patch('flask_dance.contrib.github.github')\n+def test_invite_user_no_sync_error(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(ok=False)\n+\n+    response = test_client.post('/invite')\n+\n+    assert response.status_code == 200\n+    assert b\"First sync your github account.\" in response.data\n+\n+\n+@patch('flask_dance.contrib.github.github')\n+def test_create_repo_no_sync_error(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(ok=False)\n+\n+    response = test_client.post('/create_repo')\n+\n+    assert response.status_code == 200\n+    assert b\"First sync your github account.\" in response.data\n+    \n+\n+\n+"
      },
      {
        "sha": "0b7d1cc88c4b7e7859e7dab081dcdaa0c8395a97",
        "filename": "app/modules/dataset/UVLCustomLexer.py",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -0,0 +1,97 @@\n+import re\n+from .UVLPythonLexer import UVLPythonLexer\n+\n+from .UVLPythonParser import UVLPythonParser\n+from antlr4.Token import Token\n+from antlr4.Token import CommonToken\n+\n+class UVLCustomLexer(UVLPythonLexer):\n+   \n+    def __init__(self, input_stream):\n+        super().__init__(input_stream)\n+        self.tokens = []\n+        self.indents = []\n+        self.opened = 0\n+        self.lastToken = None\n+        \n+    def emitToken(self, t):\n+        super().emitToken(t)\n+        self.tokens.append(t)  \n+\n+    def nextToken(self):\n+        # Check if the end-of-file is ahead and there are still some DEDENTS expected.\n+        if self._input.LA(1) == Token.EOF and len(self.indents) != 0:\n+            # Remove any trailing EOF tokens from our buffer.\n+            while len(self.tokens) > 0 and self.tokens[-1].type == Token.EOF:\n+                del self.tokens[-1]\n+\n+            # First emit an extra line break that serves as the end of the statement.\n+            self.emitToken(self.common_token(UVLPythonLexer.NEWLINE, \"\\n\"));\n+\n+\n+            # Now emit as much DEDENT tokens as needed.\n+            while len(self.indents) != 0:\n+                self.emitToken(self.create_dedent())\n+                del self.indents[-1]              \n+            # Put the EOF back on the token stream.\n+            self.emitToken(self.common_token(Token.EOF, \"<EOF>\"));\n+\n+        next_token = super().nextToken()\n+\n+        if next_token.channel == Token.DEFAULT_CHANNEL:\n+            # Keep track of the last token on the default channel.\n+            self.lastToken = next_token\n+\n+        return self.tokens.pop(0) if len(self.tokens) > 0 else next_token\n+\n+    def create_dedent(self):\n+        dedent = self.common_token(self.DEDENT, \"\")\n+        dedent.line = self.lastToken.line\n+        return dedent\n+\n+    def common_token(self, type, text):\n+        stop = self.getCharIndex() - 1\n+        start = stop - len(text) + 1 if text else stop\n+        return CommonToken(self._tokenFactorySourcePair, type, Token.DEFAULT_CHANNEL, start, stop)\n+\n+    @staticmethod\n+    def getIndentationCount(spaces):\n+        count = 0\n+        for ch in spaces:\n+            if ch == '\\t':\n+                count += 8 - (count % 8)\n+            else:  # A normal space char.\n+                count += 1\n+        return count\n+    \n+    def skipToken(self):\n+        self.skip()\n+\n+    def atStartOfInput(self):\n+        return self._interp.column == 0 and self._interp.line == 1\n+    \n+    def handleNewline(self):\n+      new_line = re.sub(r\"[^\\r\\n\\f]+\", \"\", self._interp.getText(self._input)) #.replaceAll(\"[^\\r\\n\\f]+\", \"\")\n+      spaces = re.sub(r\"[\\r\\n\\f]+\", \"\", self._interp.getText(self._input)) #.replaceAll(\"[\\r\\n\\f]+\", \"\")\n+      next = self._input.LA(1)\n+\n+      if self.opened > 0 or next == '\\r' or next == '\\n' or next == '\\f' or next == '#':\n+        self.skip()\n+      else:\n+        self.emitToken(self.common_token(self.NEWLINE, new_line))\n+\n+        indent = self.getIndentationCount(spaces)\n+        if len(self.indents) == 0:\n+            previous = 0\n+        else:\n+            previous = self.indents[-1]\n+\n+        if indent == previous:\n+            self.skip()\n+        elif indent > previous:\n+            self.indents.append(indent)\n+            self.emitToken(self.common_token(UVLPythonParser.INDENT, spaces))\n+        else:\n+            while len(self.indents) > 0 and self.indents[-1] > indent:\n+                self.emitToken(self.create_dedent())\n+                del self.indents[-1]\n\\ No newline at end of file"
      },
      {
        "sha": "26b18c2644779529b71f900e01adaeeccb9e7aec",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 62,
        "deletions": 122,
        "changes": 184,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -117,7 +117,11 @@ var currentId = 0;\n \t}\n \n         function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n+\t    if (document.getElementById(\"upload_button\")) {\n+            \tdocument.getElementById(\"upload_button\").style.display = \"block\";\n+\t    } else {\n+\t\tdocument.getElementById(\"check_model_button\").style.display = \"block\";\n+\t    }\n             document.getElementById(\"loading\").style.display = \"none\";\n         }\n \n@@ -139,152 +143,75 @@ var currentId = 0;\n \n         window.onload = function () {\n \n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n+\t\ttest_zenodo_connection();\n \n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n-\n-        function downloadDataset(datasetId, format) {\n-            const url = `/dataset/download/${datasetId}/${format}`;\n-            window.location.href = url;\n-        }\n-        \n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n-\t\t\t\tconsole.log(\"hi\");\n \t\t\t\tclean_upload_errors();\n \t\t\t\tshow_loading(\"check\");\n \n-\t\t\t\t\n+\n \t\t\t\tfetch('/dataset/check', {\n \t\t\t\t\tmethod: 'POST',\n \t\t\t\t\tbody: ''\n \t\t\t\t})\n \t\t\t\t\t.then(response => {\n+\t\t\t\t\t\tlet model = document.getElementById('rendered_model')\n+\t\t\t\t\t\twhile (model.firstChild) {\n+\t\t\t\t\t\t\tmodel.removeChild(model.firstChild)\n+\t\t\t\t\t\t};\n \t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\tlet first_row = document.createElement('p');\n+\t\t\t\t\t\t\tfirst_row.bottom_margin = '15';\n+\t\t\t\t\t\t\tfirst_row.textContent = 'This model contains no errors. Here\\'s the model:';\t\n+\t\t\t\t\t\t\tmodel.appendChild(first_row);\n \t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n \t\t\t\t\t\t\tresponse.json().then(data => {\n-\t\t\t\t\t\t\t\tconsole.log(data.message);\n-\t\t\t\t\t\t\t\t//window.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\tfor (let i=0;i<data.message.length;i++) {\n+\t\t\t\t\t\t\t\t\tlet row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\trow.style.margin = '0';\n+\t\t\t\t\t\t\t\t\trow.style.padding = '0';\n+\t\t\t\t\t\t\t\t\tlet row_text = data.message[i];\n+\t\t\t\t\t\t\t\t\trow_text = row_text.replace(/\\s/g, '\\u00A0');\n+\t\t\t\t\t\t\t\t\trow.textContent = row_text;\n+\t\t\t\t\t\t\t\t\tmodel.appendChild(row);\n+\t\t\t\t\t\t\t\t};\n+\t\t\t\t\t\t\t\tmodel.style.display = 'block';\n+\t\t\t\t\t\t\t\thide_loading();\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tresponse.json().then(data => {\n-\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.error);\n+\t\t\t\t\t\t\t\tif (data.syntax) {\n+\t\t\t\t\t\t\t\t\tlet first_row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\tfirst_row.bottom_margin = '15';\n+\t\t\t\t\t\t\t\t\tfirst_row.top_margin = '15';\n+\t\t\t\t\t\t\t\t\tfirst_row.textContent = 'Here\\'s the model with the error highlighted:';\t\n+\t\t\t\t\t\t\t\t\tmodel.appendChild(first_row);\n+\t\t\t\t\t\t\t\t\tfor (let i=0;i<data.message.length;i++) {\n+\t\t\t\t\t\t\t\t\t\tlet row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\t\trow.style.margin = '0';\n+\t\t\t\t\t\t\t\t\t\trow.style.padding = '0';\n+\t\t\t\t\t\t\t\t\t\tlet row_text = data.message[i];\n+\t\t\t\t\t\t\t\t\t\trow_text = row_text.replace(/\\s/g, '\\u00A0');\n+\t\t\t\t\t\t\t\t\t\trow.textContent = row_text;\n+\t\t\t\t\t\t\t\t\t\tmodel.appendChild(row);\n+\t\t\t\t\t\t\t\t\t};\n+\t\t\t\t\t\t\t\t};\n \t\t\t\t\t\t\t\thide_loading();\n-\n-\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\t\t\t\t\t\t\t\tif (data.syntax) {\n+\t\t\t\t\t\t\t\t\twrite_upload_error(data.error);\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\t\t\t\t\t\t\t\t};\n \n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t})\n \t\t\t\t\t.catch(error => {\n \t\t\t\t\t\tconsole.error('Error in POST request:', error);\n \t\t\t\t\t});\n-\t\t\t\tconsole.log(\"yeah\")\n \n \t\t\t});\n \t\t}\n@@ -387,9 +314,22 @@ var currentId = 0;\n \n \n \t\t\t});\n-\t\t}\n+\t\t};\n+\t};\n+\n \n \n+function isValidOrcid(orcid) {\n+\tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+\treturn orcidRegex.test(orcid);\n+}\n+\n+function downloadDataset(datasetId, format) {\n+\tconst url = `/dataset/download/${datasetId}/${format}`;\n+\twindow.location.href = url;\n+}\n+        \n+\t\t\n function isValidOrcid(orcid) {\n \tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n \treturn orcidRegex.test(orcid);"
      },
      {
        "sha": "03c2e1a6418ec2dc70695cdfa30b36d1d71ebff5",
        "filename": "app/modules/dataset/parser.py",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Fparser.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Fparser.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fparser.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -0,0 +1,62 @@\n+from antlr4 import CommonTokenStream, FileStream\n+from uvl.UVLCustomLexer import UVLCustomLexer\n+from uvl.UVLPythonParser import UVLPythonParser\n+from antlr4.error.ErrorListener import ErrorListener\n+\n+class CustomErrorListener(ErrorListener):\n+    def syntaxError(self, recognizer, offendingSymbol, line, column, msg, e):\n+        # If the error message contains a specific keyword related to tabulation, ignore it\n+        if \"\\\\t\" in msg:\n+            print(f\"The UVL has the following warning that prevents reading it :Line {line}:{column} - {msg}\")\n+            return\n+        else:\n+            # Otherwise, print the error (or handle it in another way)\n+            raise Exception(f\"The UVL has the following error that prevents reading it :Line {line}:{column} - {msg}\")\n+            \n+\n+def get_tree(argv):\n+    input_stream = FileStream(argv)\n+    lexer = UVLCustomLexer(input_stream)\n+    \n+    # Attach the custom error listener to the lexer\n+    lexer.removeErrorListeners()\n+    lexer.addErrorListener(CustomErrorListener())\n+\n+    stream = CommonTokenStream(lexer)\n+    parser = UVLPythonParser(stream)\n+    \n+    # Attach the custom error listener to the parser\n+    parser.removeErrorListeners()\n+    parser.addErrorListener(CustomErrorListener())\n+\n+    tree = parser.featureModel()\n+\n+    return tree\n+\n+\n+if __name__ == \"__main__\":\n+    import sys\n+\n+    # Check if the user provided a file argument\n+    if len(sys.argv) < 2:\n+        print(\"Usage: python script_name.py <path_to_uvl_file>\")\n+        sys.exit(1)\n+\n+    # Parse the provided file\n+    input_stream = FileStream(sys.argv[1])\n+    lexer = UVLCustomLexer(input_stream)\n+    \n+    # Attach the custom error listener to the lexer\n+    lexer.removeErrorListeners()\n+    lexer.addErrorListener(CustomErrorListener())\n+\n+    stream = CommonTokenStream(lexer)\n+    parser = UVLPythonParser(stream)\n+    \n+    # Attach the custom error listener to the parser\n+    parser.removeErrorListeners()\n+    parser.addErrorListener(CustomErrorListener())\n+\n+    tree = parser.featureModel()\n+    # Print the parse tree (optional)\n+    print(tree.toStringTree(recog=parser))"
      },
      {
        "sha": "56beffd37b451ca0fa3e8be2615fc56cddafe7e6",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 37,
        "deletions": 28,
        "changes": 65,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -26,8 +26,7 @@\n from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n from flask_dance.contrib.github import github\n-\n-\n+from .parser import get_tree\n logger = logging.getLogger(__name__)\n \n dataset_service = DataSetService()\n@@ -113,10 +112,14 @@ def check_dataset():\n         file_path = os.path.join(temp_folder, filename)\n         \n         with open(file_path) as f:\n-            indent = 0\n-            x = \"\".join([i for i in f])\n-            print(x)\n-        return jsonify({\"message\": x}),200\n+            x = [i.rstrip() for i in f]\n+        try:\n+            get_tree(file_path)\n+        except Exception as e:\n+            line = int(str(e).split(':')[1].split(' ')[-1])\n+            x[line-1] = x[line-1] + \"   <--- HERE'S THE ERROR\"\n+            return jsonify({\"message\":x,\"error\":str(e),\"syntax\":True}),400\n+        return jsonify({\"message\": x,\"error\":False}),200\n    \n     # setting things up for the checker to have only one file available\n     temp_folder = current_user.temp_folder()\n@@ -126,10 +129,7 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-@dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n-@login_required\n-def upload():\n-    file = request.files[\"file\"]\n+def upload_aux(file,check):\n     temp_folder = current_user.temp_folder()\n \n     if not file or not file.filename.endswith(\".uvl\"):\n@@ -156,7 +156,12 @@ def upload():\n         file.save(file_path)\n     except Exception as e:\n         return jsonify({\"message\": str(e)}), 500\n-\n+    if check:\n+        try:\n+            get_tree(file_path)\n+        except Exception as e:\n+            os.remove(file_path)\n+            return jsonify({\"message\": str(e),\"syntax\": True}),400\n     return (\n         jsonify(\n             {\n@@ -167,6 +172,19 @@ def upload():\n         200,\n     )\n \n+@dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n+@login_required\n+def upload():\n+    file = request.files[\"file\"]\n+    return upload_aux(file,True)\n+\n+@dataset_bp.route(\"/dataset/file/upload/check\", methods=[\"POST\"])\n+@login_required\n+def upload_check():\n+    file = request.files[\"file\"]\n+    return upload_aux(file,False)\n+\n+\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()\n@@ -293,8 +311,10 @@ def get_unsynchronized_dataset(dataset_id):\n         \"annote\": ds_meta_data.description\n     }\n     texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n-    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n-    \n+    if ds_meta_data.deposition_id:\n+        bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    else:\n+        bibtex_propiedades.pop(\"howpublished\")\n     lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n     lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n \n@@ -395,18 +415,7 @@ def commit_file(file_id):\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n-@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n-def download_dataset_format(file_id, format):\n-    \"\"\"Endpoint to download dataset in the specified format.\n-    Formats supported: glencoe, splot, dimacs, zip.\n-    \"\"\"\n-    if format == \"glencoe\":\n-        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n-    elif format == \"splot\":\n-        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n-    elif format == \"dimacs\":\n-        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n-    elif format == \"zip\":\n-        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n-    else:\n-        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+@dataset_bp.route(\"/dataset/download/<int:dataset_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(dataset_id, format):\n+    \"\"\"Redirect to Flamapy's export_dataset endpoint.\"\"\"\n+    return redirect(url_for(\"flamapy.export_dataset\", dataset_id=dataset_id, format=format))"
      },
      {
        "sha": "e344337cbd0bb2f488c040d1559d8d601b8a9879",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "modified",
        "additions": 55,
        "deletions": 75,
        "changes": 130,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -1,140 +1,139 @@\n {% extends \"base_template.html\" %}\n-\n {% block title %}Check UVL model{% endblock %}\n-\n {% block content %}\n-\n     <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n \n+    <div class=\"row\">\n+        <div class=\"col-12 mb-3\">\n+            <div class=\"alert alert-warning\" role=\"alert\" id=\"test_zenodo_connection_error\" style=\"display: none\">\n+                <div class=\"alert-message\">\n+\n+                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n+                        connection to the Zenodo API</h4>\n+                    <p class=\"p-0 m-0\">\n+                        There seems to be some kind of problem with the Zenodo API and synchronization of your dataset\n+                        files may not be possible. We will save your files locally to eventually synchronize them with\n+                        Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n+                        anything about it.\n+                    </p>\n+                </div>\n+            </div>\n+        </div>\n+\n+    </div>\n+\n     {% if messages %}\n         <ul>\n             {% for message in messages %}\n                 <li>{{ message }}</li>\n             {% endfor %}\n         </ul>\n     {% endif %}\n-\n     <div class=\"row\">\n-\n         <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n-\n             <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n-\n             <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n                 \n \t\t{{ form.hidden_tag() }}\n-\n-\n                 <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n                     <div id=\"dropzone-text\"></div>\n                 </form>\n-\n                 <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n                     </span>\n-\n                 <ul class=\"mt-2\" id=\"file-list\"></ul>\n-\n                 <script>\n                     let dropzone = Dropzone.options.myDropzone = {\n-                        url: \"/dataset/file/upload\",\n+                        url: \"/dataset/file/upload/check\",\n                         paramName: 'file',\n                         maxFilesize: 10,\n                         acceptedFiles: '.uvl',\n                         init: function () {\n-\n \t\t\t\tlet fileList = document.getElementById('file-list');\n \t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n \t\t\t\tlet alerts = document.getElementById('alerts');\n \t\t\t\tthis.on('addedfile', function (file) {\n-\n \t\t\t\t\tlet ext = file.name.split('.').pop();\n \t\t\t\t\tif (ext !== 'uvl') {\n \t\t\t\t\t\tthis.removeFile(file);\n-\n \t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t\t\t}\n \t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n \t\t\t\t\t\talerts.appendChild(alert);\n \t\t\t\t\t\talerts.style.display = 'block';\n \t\t\t\t\t}\n-\t\t\t\t\tif (fileList.childElementCount > 0) {\n+\t\t\t\t\telse if (fileList.childElementCount > 0) {\n \t\t\t\t\t\tthis.removeFile(file);\n+\t\t\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t\t\t}\n \n \t\t\t\t\t\tlet alert = document.createElement('p');\n \t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n \t\t\t\t\t\talerts.appendChild(alert);\n \t\t\t\t\t\talerts.style.display = 'block';\n \t\t\t\t\t}\n                             });\n-\n                             this.on('success', function (file, response) {\n-\n                                 let dropzone = this;\n-\n                                 show_upload_dataset();\n-\n                                 console.log(\"File uploaded: \", response);\n                                 // actions when UVL model is uploaded\n                                 let listItem = document.createElement('li');\n                                 let h4Element = document.createElement('h4');\n                                 h4Element.textContent = response.filename;\n                                 listItem.appendChild(h4Element);\n-\n                                 // generate incremental id for form\n                                 let formUniqueId = generateIncrementalId();\n-\n                                /*\n                                     ##########################################\n                                     REMOVE BUTTON\n                                     ##########################################\n                                 */\n-\n                                 // remove button\n                                 let removeButton = document.createElement('button');\n                                 removeButton.innerHTML = 'Delete model';\n                                 removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n                                 removeButton.style.borderRadius = '5px';\n-\n                                 removeButton.addEventListener('click', function () {\n+\t\t\t\t    let model = document.getElementById('rendered_model')\n+\t\t\t\t    while (model.firstChild) {\n+\t\t\t\t\t    model.removeChild(model.firstChild)\n+\t\t\t\t    };\n                                     fileList.removeChild(listItem);\n                                     this.removeFile(file);\n-\n                                     // Ajax request\n                                     let xhr = new XMLHttpRequest();\n                                     xhr.open('POST', '/dataset/file/delete', true);\n                                     xhr.setRequestHeader('Content-Type', 'application/json');\n                                     xhr.onload = function () {\n                                         if (xhr.status === 200) {\n                                             console.log('Deleted file from server');\n-\n                                             if (dropzone.files.length === 0) {\n                                                 document.getElementById(\"upload_dataset\").style.display = \"none\";\n                                                 clean_upload_errors();\n                                             }\n-\n                                         }\n                                     };\n                                     xhr.send(JSON.stringify({file: file.name}));\n                                 }.bind(this));\n-\n                                 /*\n                                     ##########################################\n                                     APPEND BUTTONS\n                                     ##########################################\n                                 */\n                                 listItem.appendChild(removeButton);\n-\n                                 /*\n                                     ##########################################\n                                     UVL FORM\n                                     ##########################################\n                                 */\n-\n                                 // create specific form for UVL\n                                 let formContainer = document.createElement('div');\n                                 formContainer.id = formUniqueId + \"_form\";\n                                 formContainer.classList.add('uvl_form', \"mt-3\");\n                                 formContainer.style.display = \"none\";\n-\n                                 formContainer.innerHTML = `\n                                     <div class=\"row\">\n                                         <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n@@ -208,78 +207,59 @@ <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n                                         </div>\n                                     </div>\n                                     `;\n-\n                                 listItem.appendChild(formContainer);\n                                 fileList.appendChild(listItem);\n-\n                             });\n+                            this.on('addedfile', function (file) {\n \n-                            this.on('error', function (file, response) {\n-                                console.error(\"Error uploading file: \", response);\n-                                let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n-                                alerts.appendChild(alert);\n-                                alerts.style.display = 'block';\n-                            });\n+                                let ext = file.name.split('.').pop();\n+                                if (ext !== 'uvl') {\n+                                    this.removeFile(file);\n \n+                                    let alert = document.createElement('p');\n+                                    alert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t    if (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t    }\n+                                    alerts.appendChild(alert);\n+                                    alerts.style.display = 'block';\n+                                }\n+\n+                            });\n                         }\n                     };\n-\n-\n                 </script>\n-\n             </div>\n         </div>\n-\n     </div>\n-\n     <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n-\n         <div class=\"col-12\">\n-\n             <hr>\n-\n-            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n-\n+            <h1 class=\"h3 mb-3 mt-2\">Check model and render errors</h1>\n             <div style=\"padding-left: 2rem\">\n-\n                 <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n                     <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n-                    Upload dataset</button>\n-\n+                    Check</button>\n                 <div id=\"loading\" style=\"display: none\">\n                     <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n-                    Uploading dataset, please wait...\n+                    Uploading and checking model, please wait...\n                 </div>\n-\n                 <div class=\"row\">\n                     <div class=\"col-12 mb-3\">\n-\n                     </div>\n                 </div>\n-\n                 \n-                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n-\n-                    </span>\n-\n-                <script>\n-                    const upload_button = document.getElementById('check_model_button');\n-\t\t\tupload_button.disabled = false;\n-                </script>\n-\n-            </div>\n-\n-\n-\n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\"></span>\n+                <p class=\"p-0 m-0\" id=\"rendered_model\"></p>\n+\t    </div>\n+\t    <script>\n+\t\t    const upload_button = document.getElementById('check_model_button');\n+\t\t    upload_button.disabled = false;\n+\t    </script>\n \n         </div>\n-\n     </div>\n-\n-\n {% endblock %}\n-\n {% block scripts %}\n     <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n     <script src=\"{{ url_for('dataset.scripts') }}\"></script>"
      },
      {
        "sha": "b803f06d34fae75f4ed4f2cf088836bd347ec819",
        "filename": "app/modules/dataset/templates/dataset/upload_dataset.html",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -247,6 +247,9 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n \n                                     let alert = document.createElement('p');\n                                     alert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t    if (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t    }\n                                     alerts.appendChild(alert);\n                                     alerts.style.display = 'block';\n                                 }\n@@ -434,7 +437,20 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n                             this.on('error', function (file, response) {\n                                 console.error(\"Error uploading file: \", response);\n                                 let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n+\t\t\t\tif (response.syntax) {\n+                                \talert.textContent = 'UVL not valid: ' + file.name +'. Error: '+response.message;\n+\t\t\t\t} else {\n+\t\t\t\t\tif ( response!=\"You can't upload files of this type.\") {\n+\n+\t\t\t\t\t\talert.textContent = 'Something went wrong while saving the file, try again please';\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\talert.textContent = \"You can't upload files of this type.\";\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tthis.removeFile(file);\n+\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0]);\n+\t\t\t\t}\n                                 alerts.appendChild(alert);\n                                 alerts.style.display = 'block';\n                             });\n@@ -529,4 +545,4 @@ <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\">\n {% block scripts %}\n     <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n     <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n-{% endblock %}\n\\ No newline at end of file\n+{% endblock %}"
      },
      {
        "sha": "3940aa59758ec6e27c5aef6a1f49793dedf19ffd",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 10,
        "deletions": 12,
        "changes": 22,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -41,35 +41,33 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n-                <div class=\"mt-2\">\n                     <div class=\"btn-group\" role=\"group\">\n                         <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n                             <i data-feather=\"download\"></i> Download\n                         </button>\n                         <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='glencoe') }}\">\n                                     Glencoe\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='dimacs') }}\">\n                                     DIMACS\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='splot') }}\">\n                                     SPLOT\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n-                                    ZIP\n-                                </a>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">\n+                                    ZIP (Original UVLs)\n+                                </a>                                \n                             </li>\n                         </ul>\n-                    </div>\n-                </div>\n+                    </div>     \n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">\n@@ -191,7 +189,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n                 <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n-                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                <button id=\"bibtex_preview_btn\" onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                     <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n \n@@ -423,7 +421,7 @@ <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex\n                         style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n                         <i data-feather=\"download\"></i>\n                     </a>\n-                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                    <button id=\"bibtex_copy_btn\" onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n                         style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n                         <i data-feather=\"copy\"></i>\n                     </button>\n@@ -589,4 +587,4 @@ <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex\n     }\n </script>\n \n-{% endblock %}\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "275fbf9bd9d3ad0655d68861bc8799a8415e9560",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 101,
        "deletions": 7,
        "changes": 108,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -1,20 +1,114 @@\n-from locust import HttpUser, TaskSet, task\n+\n+import random\n+from locust import HttpUser, TaskSet, task, between\n from core.locust.common import get_csrf_token\n from core.environment.host import get_host_for_locust_testing\n \n \n class DatasetBehavior(TaskSet):\n     def on_start(self):\n-        self.dataset()\n+        \"\"\"Acci\u00f3n que se ejecuta al inicio del test.\"\"\"\n+        self.dataset_upload()\n \n     @task\n-    def dataset(self):\n+    def dataset_upload(self):\n+        \"\"\"Simula la carga de la p\u00e1gina de subida de datasets.\"\"\"\n         response = self.client.get(\"/dataset/upload\")\n         get_csrf_token(response)\n+        \n+        \n+class CommitDatasetBehavior(TaskSet):\n+    def on_start(self):\n+        \"\"\"Simulate user login before running the commit task.\"\"\"\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        \"\"\"Ensure the user is authenticated.\"\"\"\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}, {response.text}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def commit_dataset(self):\n+        dataset_id = random.randint(1, 10)\n+        response = self.client.post(f\"/dataset/commit/{dataset_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"Dataset {dataset_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"Dataset {dataset_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for dataset {dataset_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for dataset {dataset_id}: {response.status_code} - {response.text}\")\n+\n \n \n+class CommitFileBehavior(TaskSet):\n+    def on_start(self):\n+        \"\"\"Simulate user login before running the commit task.\"\"\"\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        \"\"\"Ensure the user is authenticated.\"\"\"\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}, {response.text}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+class DownloadDatasets(TaskSet):\n+    formats = {\n+        \"Glencoe\": \"glencoe\",\n+        \"SPLOT\": \"splot\",\n+        \"DIMACS\": \"dimacs\",\n+        \"ZIP\": \"zip\"\n+    }\n+\n+    @task\n+    def download_files(self):\n+        for dataset_id in self.dataset_ids:  # Itera sobre tus dataset_ids\n+            for format_name, format_value in self.formats.items():  # Itera sobre los formatos\n+                with self.client.get(\n+                    f\"/flamapy/export/dataset/{dataset_id}/{format_value}\",  # URL corregida\n+                    name=f\"Download {format_name}\",\n+                    allow_redirects=True,  # Sigue autom\u00e1ticamente las redirecciones\n+                    catch_response=True  # Captura la respuesta para an\u00e1lisis\n+                ) as response:\n+                    if response.status_code == 200:  # Descarga exitosa\n+                        response.success()\n+                    elif response.status_code == 302:  # Redirecci\u00f3n\n+                        response.success()  # Tratamos 302 como \u00e9xito\n+                    else:\n+                        response.failure(\n+                            f\"Failed to download {format_name} for dataset {dataset_id} \"\n+                            f\"with status code {response.status_code}\"\n+                        )\n+\n class DatasetUser(HttpUser):\n-    tasks = [DatasetBehavior]\n-    min_wait = 5000\n-    max_wait = 9000\n-    host = get_host_for_locust_testing()\n+    \"\"\"\n+    Clase principal que define los usuarios y su comportamiento.\n+    \"\"\"\n+    tasks = [CommitFileBehavior]  # Asigna la tarea de descarga\n+    min_wait = 5000  # Espera m\u00ednima de 5 segundos\n+    max_wait = 9000  # Espera m\u00e1xima de 9 segundos\n+    wait_time = between(5, 9)  # Espera aleatoria entre tareas\n+    host = \"http://localhost:5000\"  # La URL base de tu aplicaci\u00f3n\n\\ No newline at end of file"
      },
      {
        "sha": "2e2bee0c10bc622be92542708879256151e0f9db",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "added",
        "additions": 99,
        "deletions": 0,
        "changes": 99,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -0,0 +1,99 @@\n+import os\n+import time\n+import glob\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.action_chains import ActionChains\n+from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.webdriver.chrome.options import Options\n+from selenium import webdriver\n+from core.selenium.common import close_driver\n+from core.environment.host import get_host_for_selenium_testing\n+\n+DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n+\n+\n+def initialize_driver(download_dir=None):\n+    options = Options()\n+    if download_dir:\n+        prefs = {\n+            \"download.default_directory\": download_dir,\n+            \"download.prompt_for_download\": False,\n+            \"directory_upgrade\": True\n+        }\n+        options.add_experimental_option(\"prefs\", prefs)\n+    driver = webdriver.Chrome(options=options)\n+    return driver\n+\n+\n+def clean_download_folder():\n+    \"\"\"Elimina todos los archivos previos en la carpeta de descargas.\"\"\"\n+    if os.path.exists(DOWNLOAD_DIR):\n+        for file in os.listdir(DOWNLOAD_DIR):\n+            file_path = os.path.join(DOWNLOAD_DIR, file)\n+            os.remove(file_path)\n+\n+\n+def is_file_downloaded_by_extension(extension, timeout=20, exact=False):\n+    \"\"\"\n+    Verifica si un archivo con una extensi\u00f3n espec\u00edfica ha sido descargado.\n+\n+    :param extension: Extensi\u00f3n del archivo o patr\u00f3n para b\u00fasqueda.\n+    :param timeout: Tiempo m\u00e1ximo de espera.\n+    :param exact: Si es True, busca archivos con nombre exacto. Si no, busca solo por extensi\u00f3n.\n+    \"\"\"\n+    for _ in range(timeout):\n+        files = glob.glob(os.path.join(DOWNLOAD_DIR, f\"{extension}\" if exact else f\"*{extension}\"))\n+        print(\"Archivos actuales en la carpeta:\", os.listdir(DOWNLOAD_DIR))  # Debug\n+        print(\"Coincidencias encontradas:\", files)  # Debug\n+        if files:\n+            return True\n+        time.sleep(1)\n+    return False\n+\n+\n+def test_download_datasets_index():\n+    \"\"\"Prueba la descarga de datasets desde el index en diferentes formatos.\"\"\"\n+    driver = initialize_driver(download_dir=DOWNLOAD_DIR)\n+    clean_download_folder()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+        driver.get(f\"{host}/\")  # P\u00e1gina index\n+        WebDriverWait(driver, 10).until(lambda d: d.execute_script(\"return document.readyState\") == \"complete\")\n+\n+        formats = {\n+            \"Glencoe\": \"_glencoe.zip\",\n+            \"SPLOT\": \"_splot.zip\",\n+            \"DIMACS\": \"_dimacs.zip\",\n+            \"ZIP\": \".zip\"  # Validar cualquier archivo con extensi\u00f3n .zip\n+        }\n+\n+        for format_name, file_extension in formats.items():\n+            print(f\"Probando descarga para el formato: {format_name}\")  # Debug\n+            download_button = WebDriverWait(driver, 10).until(\n+                EC.element_to_be_clickable((By.XPATH, \"//button[contains(@id, 'btnDownloadDropdown')]\"))\n+            )\n+            ActionChains(driver).move_to_element(download_button).click().perform()\n+\n+            dropdown_option = WebDriverWait(driver, 10).until(\n+                EC.element_to_be_clickable((By.XPATH, f\"//a[contains(@onclick, \\\"{format_name.lower()}\\\") or contains(text(), 'ZIP')]\"))\n+            )\n+            dropdown_option.click()\n+\n+            if format_name == \"ZIP\":\n+                # Validar cualquier archivo .zip descargado\n+                assert is_file_downloaded_by_extension(\".zip\"), f\"Archivo ZIP no descargado desde index.\"\n+            else:\n+                assert is_file_downloaded_by_extension(file_extension), f\"Archivo *{file_extension} no descargado desde index.\"\n+\n+            print(f\"Archivo *{file_extension} descargado correctamente.\")\n+            clean_download_folder()\n+\n+        print(\"Todos los archivos se descargaron correctamente desde el index.\")\n+    finally:\n+        close_driver(driver)\n+\n+\n+if __name__ == \"__main__\":\n+    test_download_datasets_index()\n\\ No newline at end of file"
      },
      {
        "sha": "7f2bcf42ace80c1743ddc5ab39335e96e6aaf4a4",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 425,
        "deletions": 0,
        "changes": 425,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -1,14 +1,44 @@\n import os\n import time\n+from flask import url_for\n+from datetime import datetime\n+from pathlib import Path\n \n+from selenium import webdriver\n from selenium.webdriver.common.by import By\n from selenium.webdriver.common.keys import Keys\n from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.common.exceptions import NoSuchElementException\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.webdriver.chrome.service import Service\n+from webdriver_manager.chrome import ChromeDriverManager\n \n from core.environment.host import get_host_for_selenium_testing\n from core.selenium.common import initialize_driver, close_driver\n \n \n+def get_driver_with_download_cwdir():\n+    # Initializes the browser options\n+    prefs = {\n+        \"download.default_directory\": os.getcwd(),\n+        \"download.directory_upgrade\": True,\n+        \"download.prompt_for_download\": False,\n+    }\n+    options = webdriver.ChromeOptions()\n+    options.add_experimental_option(\"prefs\", prefs)\n+\n+    driver_path = ChromeDriverManager().install()\n+\n+\n+    # Initialise the browser using WebDriver Manager\n+    chrome_driver_binary = os.path.join(os.path.dirname(driver_path), 'chromedriver')\n+    \n+    service = Service(chrome_driver_binary)\n+    \n+    \n+    driver = webdriver.Chrome(service=service, options=options)\n+    return driver\n+\n def wait_for_page_to_load(driver, timeout=4):\n     WebDriverWait(driver, timeout).until(\n         lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n@@ -25,6 +55,158 @@ def count_datasets(driver, host):\n         amount_datasets = 0\n     return amount_datasets\n \n+def has_datasets_synced(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//div[@class='card-body']//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets\n+\n+def has_datasets_unsynced(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//div[@class='card-body']//div[@class='card-body']//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets>0\n+\n+def exist_published_datasets(driver, host):\n+    driver.get(f\"{host}/explore\")\n+    wait_for_page_to_load(driver)\n+    try:\n+        amount_datasets = len(driver.find_element(By.ID, 'results').find_elements(By.CSS_SELECTOR, 'div.card'))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets>0\n+\n+def get_url_detalles(driver, host):\n+    if exist_published_datasets(driver, host):\n+        result = driver.find_element(By.ID, 'results').find_element(By.XPATH, '//div[@class=\"card\"]//a').get_attribute('href')\n+    else:\n+        # Open the login page\n+        driver.get(f\"{host}/login\")\n+        wait_for_page_to_load(driver)\n+\n+        # Find the username and password field and enter the values\n+        email_field = driver.find_element(By.NAME, \"email\")\n+        password_field = driver.find_element(By.NAME, \"password\")\n+\n+        email_field.send_keys(\"user1@example.com\")\n+        password_field.send_keys(\"1234\")\n+\n+        # Send the form\n+        password_field.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        if has_datasets_synced(driver, host): # tiene datasets publicados, usar esos\n+            result = driver.find_element(By.XPATH, \"//div[@class='card-body']//table//tbody//tr//td//a\").get_attribute('href')\n+        elif has_datasets_unsynced(driver, host): # solo tiene datasets sin publicar\n+            result = f\"{host}\" + driver.find_element(By.XPATH, \"//div[@class='card-body']//div[@class='card-body']//table//tbody//tr//td//a\").get_attribute('href')\n+        else: # No tiene datasets, crear uno\n+            # Count initial datasets\n+            initial_datasets = count_datasets(driver, host)\n+\n+            # Open the upload dataset\n+            driver.get(f\"{host}/dataset/upload\")\n+            wait_for_page_to_load(driver)\n+\n+            datos_dataset = {\n+                \"titulo\": \"Titulo prueba bibtex\",\n+                \"descripcion\": \"Descripcion prueba bibtex\",\n+                \"tags\": \"tag1,tag2\"\n+            }\n+            autores_dataset = [\n+                    {\"name\": \"AutorBibtex0\", \"affiliation\": \"Club0\",\"orcid\":\"0000-0000-0000-0000\"},\n+                    {\"name\": \"AutorBibtex1\", \"affiliation\": \"Club1\"},\n+                    {\"name\": \"AutorBibtex3\", \"affiliation\": \"Club3\"}\n+            ]\n+\n+            # Find basic info and UVL model and fill values\n+            title_field = driver.find_element(By.NAME, \"title\")\n+            title_field.send_keys(datos_dataset.get(\"titulo\"))\n+            desc_field = driver.find_element(By.NAME, \"desc\")\n+            desc_field.send_keys(datos_dataset.get(\"descripcion\"))\n+            tags_field = driver.find_element(By.NAME, \"tags\")\n+            tags_field.send_keys(datos_dataset.get(\"tags\"))\n+\n+            # Add two authors and fill\n+            add_author_button = driver.find_element(By.ID, \"add_author\")\n+            add_author_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+            add_author_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+            name_field0 = driver.find_element(By.NAME, \"authors-0-name\")\n+            name_field0.send_keys(autores_dataset[0].get(\"name\"))\n+            affiliation_field0 = driver.find_element(By.NAME, \"authors-0-affiliation\")\n+            affiliation_field0.send_keys(autores_dataset[0].get(\"affiliation\"))\n+            orcid_field0 = driver.find_element(By.NAME, \"authors-0-orcid\")\n+            orcid_field0.send_keys(autores_dataset[0].get(\"orcid\"))\n+\n+            name_field1 = driver.find_element(By.NAME, \"authors-1-name\")\n+            name_field1.send_keys(autores_dataset[1].get(\"name\"))\n+            affiliation_field1 = driver.find_element(By.NAME, \"authors-1-affiliation\")\n+            affiliation_field1.send_keys(autores_dataset[1].get(\"affiliation\"))\n+\n+            # Obt\u00e9n las rutas absolutas de los archivos\n+            file1_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file1.uvl\")\n+            file2_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file2.uvl\")\n+\n+            # Subir el primer archivo\n+            dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+            dropzone.send_keys(file1_path)\n+            wait_for_page_to_load(driver)\n+\n+            # Subir el segundo archivo\n+            dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+            dropzone.send_keys(file2_path)\n+            wait_for_page_to_load(driver)\n+\n+            # Add authors in UVL models\n+            show_button = driver.find_element(By.ID, \"0_button\")\n+            show_button.send_keys(Keys.RETURN)\n+            add_author_uvl_button = driver.find_element(By.ID, \"0_form_authors_button\")\n+            add_author_uvl_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+            name_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-name\")\n+            name_field.send_keys(\"AutorBibtex3\")\n+            affiliation_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-affiliation\")\n+            affiliation_field.send_keys(\"Club3\")\n+\n+            # Check I agree and send form\n+            check = driver.find_element(By.ID, \"agreeCheckbox\")\n+            check.send_keys(Keys.SPACE)\n+            wait_for_page_to_load(driver)\n+\n+            upload_btn = driver.find_element(By.ID, \"upload_button\")\n+            upload_btn.send_keys(Keys.RETURN)\n+            \n+            wait_for_page_to_load(driver)\n+            time.sleep(2)  # Force wait time\n+\n+            assert driver.current_url == f\"{host}/dataset/list\", \"Test failed!\"\n+\n+            # Count final datasets\n+            final_datasets = count_datasets(driver, host)\n+            assert final_datasets == initial_datasets + 1, \"Test failed!\"\n+            \n+            listado_unsync = driver.find_element(By.CLASS_NAME, \"row\") # TODO: encontrar el primer elemento de tipo tbody\n+            dataset_creado = listado_unsync.find_element(By.XPATH, \"//table//tbody//tr\")\n+            \n+            info_dataset_creado = dataset_creado.find_elements(By.TAG_NAME, \"td\")\n+\n+            title_matches = info_dataset_creado[0].find_element(By.TAG_NAME, 'a').text==datos_dataset.get(\"titulo\")\n+            desc_matches = info_dataset_creado[1].text==datos_dataset.get(\"descripcion\")\n+            pub_type_matches = info_dataset_creado[2].text==\"None\"\n+\n+            assert title_matches and desc_matches and pub_type_matches, \"Test failed!\"\n+            result = f\"{host}\" + info_dataset_creado[0].find_element(By.TAG_NAME, 'a').get_attribute('href')\n+    return result\n \n def test_upload_dataset():\n     driver = initialize_driver()\n@@ -130,6 +312,249 @@ def test_upload_dataset():\n         # Close the browser\n         close_driver(driver)\n \n+def test_bibtex_preview():\n+    driver = initialize_driver()\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LA PREVIEW MUESTRA EL DATASET EXPORTADO A BIBTEX CORRECTAMENTE\n+        contenido_bibtex = driver.find_element(By.ID, \"bibtexContent\").text\n+        assert contenido_bibtex is not None and contenido_bibtex!=\"None\", \"Test failed!\"\n+\n+        lineas = contenido_bibtex.splitlines()\n+\n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        \n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+def test_bibtex_copy():\n+    driver = initialize_driver()\n+    \n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LOS DATOS SE COPIAN CORRECTAMENTE EN FORMATO BIBTEX\n+        bibtex_copy_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_copy_btn']\")\n+        bibtex_copy_btn.click()\n+        time.sleep(2)\n+        \n+\n+        try:\n+            driver.find_element(By.XPATH, \"//a[@href='/logout']\")\n+        except NoSuchElementException: # No ha iniciado sesion\n+            driver.get(f\"{host}/login\")\n+            wait_for_page_to_load(driver)\n+            \n+            # Find the username and password field and enter the values\n+            email_field = driver.find_element(By.NAME, \"email\")\n+            password_field = driver.find_element(By.NAME, \"password\")\n+\n+            email_field.send_keys(\"user1@example.com\")\n+            password_field.send_keys(\"1234\")\n+\n+            # Send the form\n+            password_field.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+        # Open the upload dataset\n+        driver.get(f\"{host}/dataset/upload\")\n+        wait_for_page_to_load(driver)\n+\n+        desc_field = driver.find_element(By.NAME, \"desc\")\n+        desc_field.send_keys(Keys.LEFT_CONTROL, 'v')\n+        \n+        lineas = desc_field.get_attribute(\"value\").strip().splitlines()\n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+\n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+def test_bibtex_download():\n+    driver = get_driver_with_download_cwdir()\n+    \n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LOS DATOS SE DESCARGAN CORRECTAMENTE EN FORMATO BIBTEX\n+        bibtex_download_btn = driver.find_element(By.XPATH, \"//a[@id='bibtexDownloadButton']\")\n+        bibtex_download_btn.click()\n+        time.sleep(2)\n+        \n+        file_path = os.path.join(os.getcwd(), bibtex_download_btn.get_attribute('download'))\n+\n+        lineas = []\n+\n+        with open(file_path, 'r', encoding='utf-8') as archivo:\n+            lineas.extend(archivo.readlines())\n+        os.remove(file_path)\n+        \n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+        \n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n \n # Call the test function\n test_upload_dataset()\n+test_bibtex_preview()\n+test_bibtex_copy()\n+test_bibtex_download()\n\\ No newline at end of file"
      },
      {
        "sha": "124cfcf72bfbe3604302247f142bb0613bdd53d8",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 4,
        "deletions": 14,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -1,7 +1,5 @@\n import pytest\n from flask import url_for\n-from app.modules.dataset.routes import download_dataset_format\n-\n \n @pytest.fixture(scope=\"module\")\n def test_client(test_client):\n@@ -20,7 +18,7 @@ def test_download_glencoe_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/glencoe\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"glencoe\") in response.location\n \n \n def test_download_splot_redirect(test_client):\n@@ -29,7 +27,7 @@ def test_download_splot_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/splot\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"splot\") in response.location\n \n \n def test_download_dimacs_redirect(test_client):\n@@ -38,7 +36,7 @@ def test_download_dimacs_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/dimacs\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"dimacs\") in response.location\n \n \n def test_download_zip_redirect(test_client):\n@@ -47,12 +45,4 @@ def test_download_zip_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/zip\")\n     assert response.status_code == 302\n-    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n-\n-def test_download_invalid_format(test_client):\n-    \"\"\"\n-    Testea que se retorne un error 400 para un formato no soportado.\n-    \"\"\"\n-    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n-    assert response.status_code == 400\n-    assert response.json == {\"error\": \"Formato no soportado\"}\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n\\ No newline at end of file"
      },
      {
        "sha": "60ac481b376c09e6ea0c8b828c153b2740ae6395",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -111,7 +111,6 @@ def filter(self, query=\"\", sorting=\"newest\",\n \n                 if leaf_feature_name:\n                     leaf_feature_names = model.get_leaf_feature_names()\n-                    print(leaf_feature_name)\n                     if leaf_feature_name not in leaf_feature_names:\n                         continue\n "
      },
      {
        "sha": "ced80b7517d89a162d492da956699330c37a4fc4",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -164,7 +164,7 @@ <h3 class=\"h3 mb-3\">\n                         <div class=\"col-6\">\n \n                             <div>\n-                                Sort results by creation date\n+                                Sort results by creation date and dataset size\n                                 <label class=\"form-check\">\n                                     <input class=\"form-check-input\" type=\"radio\" value=\"newest\" name=\"sorting\"\n                                            checked=\"\">"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/explore/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py?ref=ed5db7b107035a537212a33ca3d914566243de59"
      },
      {
        "sha": "76f065ed0e5628ded1f600437129886e692c1912",
        "filename": "app/modules/explore/tests/locustfile.py",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -0,0 +1,38 @@\n+from flask import json\n+from locust import HttpUser, TaskSet, task\n+from core.locust.common import get_csrf_token, fake\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class ExploreBehavior(TaskSet):\n+\n+    @task\n+    def explore(self):\n+        response = self.client.get(\"/explore\")\n+        if response.status_code != 200:\n+            print(f\"Explore failed: {response.status_code}\")\n+\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/explore\",\n+                                    headers={\"Content-Type\": \"application/json\"},\n+                                    data=json.dumps({\n+                                        \"min_files\": fake.random_int(min=1, max=5),\n+                                        \"max_files\": fake.random_int(min=2, max=6),\n+                                        \"max_depth\": fake.random_int(min=0, max=3),\n+                                        \"min_depth\": fake.random_int(min=2, max=6),\n+                                        \"min_leaf_count\": fake.random_int(min=0, max=10),\n+                                        \"max_leaf_count\": fake.random_int(min=5, max=15),\n+                                        \"min_av_branching_factor\": fake.random_int(min=0, max=2),\n+                                        \"max_av_branching_factor\": fake.random_int(min=1, max=4),\n+                                        \"csrf_token\": csrf_token\n+                                    }))\n+        if response.status_code != 200:\n+            print(f\"Filtering failed: {response.status_code}\")\n+\n+\n+class ExploreUser(HttpUser):\n+    tasks = [ExploreBehavior]\n+    min_wait = 3000\n+    max_wait = 7000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "4e155914f9dbbabc2336450f156f1534d51a3c3d",
        "filename": "app/modules/explore/tests/test_selenium.py",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -0,0 +1,74 @@\n+import pytest\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.common.exceptions import TimeoutException, NoSuchElementException\n+from core.selenium.common import initialize_driver, close_driver\n+import time\n+\n+\n+def test_check_smallest_first():\n+    driver = initialize_driver()\n+    try:\n+        driver.get(\"http://localhost:5000/explore\")\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.XPATH, \"//input[@value='filesize_asc']\"))\n+        )\n+        driver.execute_script(\"arguments[0].click();\", results_container)\n+        time.sleep(3)\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"results\"))\n+        )\n+        first_result = WebDriverWait(results_container, 10).until(\n+            EC.presence_of_element_located((By.CSS_SELECTOR, \"div:nth-child(1)\"))\n+        )\n+        dataset_name = first_result.text\n+\n+        assert \"Sample dataset 4\" in dataset_name, f\"Test failed: Expected 'Sample dataset 4', but got '{dataset_name}'\"\n+        print(\"Test passed: The first dataset is 'Sample dataset 4'.\")\n+\n+    except TimeoutException:\n+        pytest.fail(\"Error: Timeout while waiting for elements to load.\")\n+    except NoSuchElementException:\n+        pytest.fail(\"Error: Unable to locate the required element.\")\n+    except AssertionError as e:\n+        pytest.fail(f\"Test failed: {e}\")\n+\n+    finally:\n+        close_driver(driver)\n+\n+\n+def test_check_largest_first():\n+    driver = initialize_driver()\n+    try:\n+        driver.get(\"http://localhost:5000/explore\")\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.XPATH, \"//input[@value='filesize_desc']\"))\n+        )\n+        driver.execute_script(\"arguments[0].click();\", results_container)\n+        time.sleep(3)\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"results\"))\n+        )\n+        first_result = WebDriverWait(results_container, 10).until(\n+            EC.presence_of_element_located((By.CSS_SELECTOR, \"div:nth-child(1)\"))\n+        )\n+        dataset_name = first_result.text\n+\n+        assert \"Sample dataset 2\" in dataset_name, f\"Test failed: Expected 'Sample dataset 2', but got '{dataset_name}'\"\n+        print(\"Test passed: The first dataset is 'Sample dataset 2'.\")\n+\n+    except TimeoutException:\n+        pytest.fail(\"Error: Timeout while waiting for elements to load.\")\n+    except NoSuchElementException:\n+        pytest.fail(\"Error: Unable to locate the required element.\")\n+    except AssertionError as e:\n+        pytest.fail(f\"Test failed: {e}\")\n+\n+    finally:\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_check_smallest_first()\n+test_check_largest_first()"
      },
      {
        "sha": "4d5c6df3f18720dcb307ee18edf67c413e3a5a4e",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "added",
        "additions": 133,
        "deletions": 0,
        "changes": 133,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -0,0 +1,133 @@\n+import pytest\n+from app.modules.explore.services import ExploreService\n+from app.modules.auth.seeders import AuthSeeder\n+from app.modules.dataset.seeders import DataSetSeeder\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Fixture that sets up the test environment by initializing necessary data:\n+    - Seeds users via AuthSeeder.\n+    - Seeds datasets via DataSetSeeder.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        users = AuthSeeder()\n+        users.run()\n+\n+        seeder = DataSetSeeder()\n+        seeder.run()\n+\n+    yield test_client\n+\n+\n+def test_filtering_service_file_count(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the number of files within the specified range (0 to 10).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_files=0, max_files=10)\n+    expected_dataset_count = 4  # Expected all datasets, 4.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_num_of_leaf(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the number of leaf nodes within the specified range (2 to 6).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_leaf_count=2, max_leaf_count=6)\n+    expected_dataset_count = 1  # Expect only dataset 4, as it is the file \"file10.uvl,\" which has 6 leaves.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_check_filtering_service_no_results(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly filters all datasets\n+    based on the number of leaf nodes, as the maximum is lower than the minimum.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_leaf_count=300, max_leaf_count=299)\n+    expected_dataset_count = 0  # Expect no datasets.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_depth(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the depth within the specified range (3 to 10).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_depth=3, max_depth=10)\n+    expected_dataset_count = 3\n+    # Expect all datasets except dataset 3, as it is the file \"file10.uvl,\" which has a depth of 2.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_average_branching_factor(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the average branching factor within the specified range (0 to 2).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_av_branching_factor=0, max_av_branching_factor=2)\n+    expected_dataset_count = 2\n+    # Expect datasets \"sample dataset 2\" and \"sample dataset 4\" for the file \"file5.uvl\"\n+    # and \"file10.uvl\" as both files have an average branching factor of 2.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_leaf_feature_name(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the leaf feature name \"Server\".\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(leaf_feature_name=\"Server\")\n+    expected_dataset_count = 2\n+    # Expected datasets \"sample dataset 1\" and \"sample dataset 3\" for the files \"file1.uvl\"\n+    # and \"file9.uvl\" as they are identical and contain \"Server\" in the leaf feature name.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_core_feature_name(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the core feature name \"FitnessMonitor\".\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(core_feature_name=\"FitnessMonitor\")\n+    expected_dataset_count = 2\n+    # Expected datasets \"sample dataset 1\" and \"sample dataset 2\" for the files \"file2.uvl\"\n+    # and \"file5.uvl\" as they contain \"FitnessMonitor\" in the core feature name.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_check_sorting_smallest_first(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly sorts datasets\n+    based on the size, with smallest first.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets_sorted = explore_service.filter(sorting=\"filesize_asc\")\n+    first_ds = datasets_sorted[0]\n+    assert first_ds.name()==\"Sample dataset 4\", f\"Expected smallest dataset to be 'Sample dataset 4', but got '{first_ds.name()}' instead\"\n+\n+def test_check_sorting_largest_first(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly sorts datasets\n+    based on the size, with largest first.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets_sorted = explore_service.filter(sorting=\"filesize_desc\")\n+    first_ds = datasets_sorted[0]\n+    assert first_ds.name()==\"Sample dataset 2\", f\"Expected smallest dataset to be 'Sample dataset 2', but got '{first_ds.name()}' instead\"\n\\ No newline at end of file"
      },
      {
        "sha": "77dba20ebcd49a483100e4fc73b712128864295b",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 43,
        "deletions": 3,
        "changes": 46,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -1,11 +1,14 @@\n+import os\n+import zipfile\n+import tempfile\n import logging\n+\n+from flask import send_file, jsonify, redirect, url_for\n from app.modules.hubfile.services import HubfileService\n-from flask import send_file, jsonify\n from app.modules.flamapy import flamapy_bp\n+\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n-import tempfile\n-import os\n \n from antlr4 import CommonTokenStream, FileStream\n from uvl.UVLCustomLexer import UVLCustomLexer\n@@ -115,3 +118,40 @@ def to_cnf(file_id):\n     finally:\n         # Clean up the temporary file\n         os.remove(temp_file.name)\n+\n+@flamapy_bp.route('/flamapy/export_dataset/<int:dataset_id>/<string:format>', methods=['GET'])\n+def export_dataset(dataset_id, format):\n+    \"\"\"Export all UVL files in the dataset to the specified format and package as a ZIP.\"\"\"\n+    hubfile_service = HubfileService()\n+    files = hubfile_service.get_files_by_dataset_id(dataset_id)\n+\n+    if not files:\n+        return jsonify({\"error\": \"No files found for this dataset\"}), 404\n+\n+    with tempfile.TemporaryDirectory() as temp_dir:\n+        zip_filename = os.path.join(temp_dir, f\"dataset_{dataset_id}_{format}.zip\")\n+\n+        with zipfile.ZipFile(zip_filename, 'w') as zipf:\n+            for file in files:\n+                uvl_path = file.get_path()\n+                fm = UVLReader(uvl_path).transform()\n+\n+                # Transform the file to the desired format\n+                temp_file = tempfile.NamedTemporaryFile(delete=False, suffix=f\".{format}\")\n+                try:\n+                    if format == \"glencoe\":\n+                        GlencoeWriter(temp_file.name, fm).transform()\n+                    elif format == \"splot\":\n+                        SPLOTWriter(temp_file.name, fm).transform()\n+                    elif format == \"dimacs\":\n+                        sat = FmToPysat(fm).transform()\n+                        DimacsWriter(temp_file.name, sat).transform()\n+                    else:\n+                        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+\n+                    # Add transformed file to ZIP\n+                    zipf.write(temp_file.name, arcname=f\"{file.name}.{format}\")\n+                finally:\n+                    os.remove(temp_file.name)\n+\n+        return send_file(zip_filename, as_attachment=True, download_name=f\"dataset_{dataset_id}_{format}.zip\")\n\\ No newline at end of file"
      },
      {
        "sha": "40b4d5e3509a247e2d035c5099f5ce170695a430",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -26,6 +26,16 @@ def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n     \n     def get_hubfile_by_id(self, hubfile_id: int) -> Hubfile:\n         return db.session.query(Hubfile).filter(Hubfile.id == hubfile_id).first()\n+    \n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos relacionados con un dataset.\"\"\"\n+        dataset = DataSet.query.get(dataset_id)\n+        if not dataset:\n+            return []\n+\n+        # Extrae todos los archivos de los FeatureModels relacionados\n+        files = [file for fm in dataset.feature_models for file in fm.files]\n+        return files\n \n \n class HubfileViewRecordRepository(BaseRepository):\n@@ -43,4 +53,4 @@ def __init__(self):\n \n     def total_hubfile_downloads(self) -> int:\n         max_id = self.model.query.with_entities(func.max(self.model.id)).scalar()\n-        return max_id if max_id is not None else 0\n+        return max_id if max_id is not None else 0\n\\ No newline at end of file"
      },
      {
        "sha": "1d61da9482d23b082661e52920a34f734c13d12b",
        "filename": "app/modules/hubfile/services.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fhubfile%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fhubfile%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Fservices.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -16,6 +16,11 @@ def __init__(self):\n         self.hubfile_view_record_repository = HubfileViewRecordRepository()\n         self.hubfile_download_record_repository = HubfileDownloadRecordRepository()\n \n+    # Nuevo m\u00e9todo para obtener archivos por dataset\n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos UVL asociados a un dataset.\"\"\"\n+        return self.repository.get_files_by_dataset_id(dataset_id)\n+\n     def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n         return self.repository.get_owner_user_by_hubfile(hubfile)\n \n@@ -46,4 +51,4 @@ def total_hubfile_downloads(self) -> int:\n \n class HubfileDownloadRecordService(BaseService):\n     def __init__(self):\n-        super().__init__(HubfileDownloadRecordRepository())\n+        super().__init__(HubfileDownloadRecordRepository())\n\\ No newline at end of file"
      },
      {
        "sha": "3e8b608a1a2409a516addb103772a79cfe7c30be",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -99,7 +99,7 @@ <h2>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'glencoe')\">Glencoe</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'splot')\">SPLOT</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'dimacs')\">DIMACS</a></li>\n-                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'zip')\">ZIP</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">ZIP</a></li>\n                                     </ul>\n                                 </div>                                \n                             </div>"
      },
      {
        "sha": "046d16ed02077bce70fa94658634c90c5525ac89",
        "filename": "app/modules/zenodo/services.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fzenodo%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fmodules%2Fzenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Fservices.py?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -27,11 +27,11 @@ def get_zenodo_url(self):\n         ZENODO_API_URL = \"\"\n \n         if FLASK_ENV == \"development\":\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n         elif FLASK_ENV == \"production\":\n             ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://zenodo.org/api/deposit/depositions\")\n         else:\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n \n         return ZENODO_API_URL\n \n@@ -83,7 +83,6 @@ def test_full_connection(self) -> Response:\n                 \"creators\": [{\"name\": \"John Doe\"}],\n             }\n         }\n-\n         response = requests.post(self.ZENODO_API_URL, json=data, params=self.params, headers=self.headers)\n \n         if response.status_code != 201:"
      },
      {
        "sha": "65ffa266d710b0ee8f02416aeb1319e5f0aed671",
        "filename": "app/static/js/scripts.js",
        "status": "modified",
        "additions": 4,
        "deletions": 244,
        "changes": 248,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/app%2Fstatic%2Fjs%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/app%2Fstatic%2Fjs%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fscripts.js?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -1,246 +1,6 @@\n-var currentId = 0;\n-        var amount_authors = 0;\n-\n-        function show_upload_dataset() {\n-            document.getElementById(\"upload_dataset\").style.display = \"block\";\n-        }\n-\n-        function generateIncrementalId() {\n-            return currentId++;\n-        }\n-\n-        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n-            let fieldWrapper = document.createElement('div');\n-            fieldWrapper.className = className;\n-\n-            let label = document.createElement('label');\n-            label.className = 'form-label';\n-            label.for = name;\n-            label.textContent = text;\n-\n-            let field = document.createElement('input');\n-            field.name = name;\n-            field.className = 'form-control';\n-\n-            fieldWrapper.appendChild(label);\n-            fieldWrapper.appendChild(field);\n-            newAuthor.appendChild(fieldWrapper);\n-        }\n-\n-        function addRemoveButton(newAuthor) {\n-            let buttonWrapper = document.createElement('div');\n-            buttonWrapper.className = 'col-12 mb-2';\n-\n-            let button = document.createElement('button');\n-            button.textContent = 'Remove author';\n-            button.className = 'btn btn-danger btn-sm';\n-            button.type = 'button';\n-            button.addEventListener('click', function (event) {\n-                event.preventDefault();\n-                newAuthor.remove();\n-            });\n-\n-            buttonWrapper.appendChild(button);\n-            newAuthor.appendChild(buttonWrapper);\n-        }\n-\n-        function createAuthorBlock(idx, suffix) {\n-            let newAuthor = document.createElement('div');\n-            newAuthor.className = 'author row';\n-            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n-\n-            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n-            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n-            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n-            addRemoveButton(newAuthor);\n-\n-            return newAuthor;\n-        }\n-\n-        function check_title_and_description() {\n-            let titleInput = document.querySelector('input[name=\"title\"]');\n-            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n-\n-            titleInput.classList.remove(\"error\");\n-            descriptionTextarea.classList.remove(\"error\");\n-            clean_upload_errors();\n-\n-            let titleLength = titleInput.value.trim().length;\n-            let descriptionLength = descriptionTextarea.value.trim().length;\n-\n-            if (titleLength < 3) {\n-                write_upload_error(\"title must be of minimum length 3\");\n-                titleInput.classList.add(\"error\");\n-            }\n-\n-            if (descriptionLength < 3) {\n-                write_upload_error(\"description must be of minimum length 3\");\n-                descriptionTextarea.classList.add(\"error\");\n-            }\n-\n-            return (titleLength >= 3 && descriptionLength >= 3);\n-        }\n-\n-\n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n-\n-        document.addEventListener('click', function (event) {\n-            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n-\n-                let authorsButtonId = event.target.id;\n-                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n-                let authors = document.getElementById(authorsId);\n-                let id = authorsId.replace(\"_form_authors\", \"\")\n-                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n-                authors.appendChild(newAuthor);\n-\n-            }\n-        });\n-\n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n-\n-        function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n-            document.getElementById(\"loading\").style.display = \"none\";\n-        }\n-\n-        function clean_upload_errors() {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            upload_error.innerHTML = \"\";\n-            upload_error.style.display = 'none';\n-        }\n-\n-        function write_upload_error(error_message) {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            let alert = document.createElement('p');\n-            alert.style.margin = '0';\n-            alert.style.padding = '0';\n-            alert.textContent = 'Upload error: ' + error_message;\n-            upload_error.appendChild(alert);\n-            upload_error.style.display = 'block';\n-        }\n-\n-        window.onload = function () {\n-\n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n-\n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n-\n-        function downloadDataset(datasetId, format) {\n-            const url = `/dataset/download/${datasetId}/${format}`;\n-            window.location.href = url;\n-        }\n+    function downloadDataset(datasetId, format) {\n+        const url = `/dataset/download/${datasetId}/${format}`;\n+        window.location.href = url;\n+    }\n         \n         \n\\ No newline at end of file"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/39",
    "id": 2238070305,
    "node_id": "PR_kwDONDG85c6FZj4h",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/39",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/39.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/39.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/39",
    "number": 39,
    "state": "closed",
    "locked": false,
    "title": "fix(workflow): Added environment variable",
    "user": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-16T19:12:32Z",
    "updated_at": "2024-12-16T19:14:37Z",
    "closed_at": "2024-12-16T19:14:37Z",
    "merged_at": "2024-12-16T19:14:37Z",
    "merge_commit_sha": "ed5db7b107035a537212a33ca3d914566243de59",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/39/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/39/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/39/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/5bb7e28a0fa250aa7ae946489bd834180a07589e",
    "head": {
      "label": "flamenquin-hub-single:feature-test-advanced-filtering",
      "ref": "feature-test-advanced-filtering",
      "sha": "5bb7e28a0fa250aa7ae946489bd834180a07589e",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/39"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/39"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/39"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/39/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/39/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/39/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/5bb7e28a0fa250aa7ae946489bd834180a07589e"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "f0fa9647a57c3e3213cde3c10727cf217393c1ff",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5bb7e28a0fa250aa7ae946489bd834180a07589e/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5bb7e28a0fa250aa7ae946489bd834180a07589e/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=5bb7e28a0fa250aa7ae946489bd834180a07589e",
        "patch": "@@ -50,6 +50,7 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        WORKING_DIR: \"\"\n       run: |\n         pytest app/modules/ --ignore-glob='*selenium*'\n "
      },
      {
        "sha": "cfd1de2c2d675ce525e364852c9c40031e8bde19",
        "filename": ".github/workflows/render_main.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5bb7e28a0fa250aa7ae946489bd834180a07589e/.github%2Fworkflows%2Frender_main.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5bb7e28a0fa250aa7ae946489bd834180a07589e/.github%2Fworkflows%2Frender_main.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender_main.yml?ref=5bb7e28a0fa250aa7ae946489bd834180a07589e",
        "patch": "@@ -48,6 +48,7 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        WORKING_DIR: \"\"\n       run: |\n         pytest app/modules/ --ignore-glob='*selenium*'\n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/37",
    "id": 2236097098,
    "node_id": "PR_kwDONDG85c6FSCJK",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/37",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/37.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/37.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/37",
    "number": 37,
    "state": "closed",
    "locked": false,
    "title": "View added for checking syntax on models",
    "user": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "This pull request adds a new view in the dataset module (dataset/check) that allows the user to upload their model, send it to the server, and have it returned to them with any syntax error that's found highlighted.",
    "created_at": "2024-12-15T23:55:40Z",
    "updated_at": "2024-12-16T16:58:18Z",
    "closed_at": "2024-12-16T16:58:18Z",
    "merged_at": "2024-12-16T16:58:18Z",
    "merge_commit_sha": "eba68babde8cc4e7528686357f04221be82ebcf1",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/37/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/37/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/37/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/37293581ec0728fb350a7c2fd3633193be9962a6",
    "head": {
      "label": "flamenquin-hub-single:feature-upload_analyse_and_repair_UVL",
      "ref": "feature-upload_analyse_and_repair_UVL",
      "sha": "37293581ec0728fb350a7c2fd3633193be9962a6",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "abd20bce07616b1bf137272e273c6799bf35ed80",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/37"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/37"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/37"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/37/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/37/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/37/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/37293581ec0728fb350a7c2fd3633193be9962a6"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "26b18c2644779529b71f900e01adaeeccb9e7aec",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 46,
        "deletions": 8,
        "changes": 54,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -117,7 +117,11 @@ var currentId = 0;\n \t}\n \n         function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n+\t    if (document.getElementById(\"upload_button\")) {\n+            \tdocument.getElementById(\"upload_button\").style.display = \"block\";\n+\t    } else {\n+\t\tdocument.getElementById(\"check_model_button\").style.display = \"block\";\n+\t    }\n             document.getElementById(\"loading\").style.display = \"none\";\n         }\n \n@@ -144,7 +148,6 @@ var currentId = 0;\n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n-\t\t\t\tconsole.log(\"hi\");\n \t\t\t\tclean_upload_errors();\n \t\t\t\tshow_loading(\"check\");\n \n@@ -154,26 +157,61 @@ var currentId = 0;\n \t\t\t\t\tbody: ''\n \t\t\t\t})\n \t\t\t\t\t.then(response => {\n+\t\t\t\t\t\tlet model = document.getElementById('rendered_model')\n+\t\t\t\t\t\twhile (model.firstChild) {\n+\t\t\t\t\t\t\tmodel.removeChild(model.firstChild)\n+\t\t\t\t\t\t};\n \t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\tlet first_row = document.createElement('p');\n+\t\t\t\t\t\t\tfirst_row.bottom_margin = '15';\n+\t\t\t\t\t\t\tfirst_row.textContent = 'This model contains no errors. Here\\'s the model:';\t\n+\t\t\t\t\t\t\tmodel.appendChild(first_row);\n \t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n \t\t\t\t\t\t\tresponse.json().then(data => {\n-\t\t\t\t\t\t\t\tconsole.log(data.message);\n-\t\t\t\t\t\t\t\t//window.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\tfor (let i=0;i<data.message.length;i++) {\n+\t\t\t\t\t\t\t\t\tlet row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\trow.style.margin = '0';\n+\t\t\t\t\t\t\t\t\trow.style.padding = '0';\n+\t\t\t\t\t\t\t\t\tlet row_text = data.message[i];\n+\t\t\t\t\t\t\t\t\trow_text = row_text.replace(/\\s/g, '\\u00A0');\n+\t\t\t\t\t\t\t\t\trow.textContent = row_text;\n+\t\t\t\t\t\t\t\t\tmodel.appendChild(row);\n+\t\t\t\t\t\t\t\t};\n+\t\t\t\t\t\t\t\tmodel.style.display = 'block';\n+\t\t\t\t\t\t\t\thide_loading();\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tresponse.json().then(data => {\n-\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.error);\n+\t\t\t\t\t\t\t\tif (data.syntax) {\n+\t\t\t\t\t\t\t\t\tlet first_row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\tfirst_row.bottom_margin = '15';\n+\t\t\t\t\t\t\t\t\tfirst_row.top_margin = '15';\n+\t\t\t\t\t\t\t\t\tfirst_row.textContent = 'Here\\'s the model with the error highlighted:';\t\n+\t\t\t\t\t\t\t\t\tmodel.appendChild(first_row);\n+\t\t\t\t\t\t\t\t\tfor (let i=0;i<data.message.length;i++) {\n+\t\t\t\t\t\t\t\t\t\tlet row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\t\trow.style.margin = '0';\n+\t\t\t\t\t\t\t\t\t\trow.style.padding = '0';\n+\t\t\t\t\t\t\t\t\t\tlet row_text = data.message[i];\n+\t\t\t\t\t\t\t\t\t\trow_text = row_text.replace(/\\s/g, '\\u00A0');\n+\t\t\t\t\t\t\t\t\t\trow.textContent = row_text;\n+\t\t\t\t\t\t\t\t\t\tmodel.appendChild(row);\n+\t\t\t\t\t\t\t\t\t};\n+\t\t\t\t\t\t\t\t};\n \t\t\t\t\t\t\t\thide_loading();\n-\n-\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\t\t\t\t\t\t\t\tif (data.syntax) {\n+\t\t\t\t\t\t\t\t\twrite_upload_error(data.error);\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\t\t\t\t\t\t\t\t};\n \n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t})\n \t\t\t\t\t.catch(error => {\n \t\t\t\t\t\tconsole.error('Error in POST request:', error);\n \t\t\t\t\t});\n-\t\t\t\tconsole.log(\"yeah\")\n \n \t\t\t});\n \t\t}"
      },
      {
        "sha": "86e6b56012689ca3e69fde4daad26f2de2d79789",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 29,
        "deletions": 11,
        "changes": 40,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -26,8 +26,7 @@\n from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n from flask_dance.contrib.github import github\n-\n-\n+from .parser import get_tree\n logger = logging.getLogger(__name__)\n \n dataset_service = DataSetService()\n@@ -113,10 +112,14 @@ def check_dataset():\n         file_path = os.path.join(temp_folder, filename)\n         \n         with open(file_path) as f:\n-            indent = 0\n-            x = \"\".join([i for i in f])\n-            print(x)\n-        return jsonify({\"message\": x}),200\n+            x = [i.rstrip() for i in f]\n+        try:\n+            get_tree(file_path)\n+        except Exception as e:\n+            line = int(str(e).split(':')[1].split(' ')[-1])\n+            x[line-1] = x[line-1] + \"   <--- HERE'S THE ERROR\"\n+            return jsonify({\"message\":x,\"error\":str(e),\"syntax\":True}),400\n+        return jsonify({\"message\": x,\"error\":False}),200\n    \n     # setting things up for the checker to have only one file available\n     temp_folder = current_user.temp_folder()\n@@ -126,10 +129,7 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-@dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n-@login_required\n-def upload():\n-    file = request.files[\"file\"]\n+def upload_aux(file,check):\n     temp_folder = current_user.temp_folder()\n \n     if not file or not file.filename.endswith(\".uvl\"):\n@@ -156,7 +156,12 @@ def upload():\n         file.save(file_path)\n     except Exception as e:\n         return jsonify({\"message\": str(e)}), 500\n-\n+    if check:\n+        try:\n+            get_tree(file_path)\n+        except Exception as e:\n+            os.remove(file_path)\n+            return jsonify({\"message\": str(e),\"syntax\": True}),400\n     return (\n         jsonify(\n             {\n@@ -167,6 +172,19 @@ def upload():\n         200,\n     )\n \n+@dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n+@login_required\n+def upload():\n+    file = request.files[\"file\"]\n+    return upload_aux(file,True)\n+\n+@dataset_bp.route(\"/dataset/file/upload/check\", methods=[\"POST\"])\n+@login_required\n+def upload_check():\n+    file = request.files[\"file\"]\n+    return upload_aux(file,False)\n+\n+\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()"
      },
      {
        "sha": "e344337cbd0bb2f488c040d1559d8d601b8a9879",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "added",
        "additions": 266,
        "deletions": 0,
        "changes": 266,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -0,0 +1,266 @@\n+{% extends \"base_template.html\" %}\n+{% block title %}Check UVL model{% endblock %}\n+{% block content %}\n+    <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n+\n+    <div class=\"row\">\n+        <div class=\"col-12 mb-3\">\n+            <div class=\"alert alert-warning\" role=\"alert\" id=\"test_zenodo_connection_error\" style=\"display: none\">\n+                <div class=\"alert-message\">\n+\n+                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n+                        connection to the Zenodo API</h4>\n+                    <p class=\"p-0 m-0\">\n+                        There seems to be some kind of problem with the Zenodo API and synchronization of your dataset\n+                        files may not be possible. We will save your files locally to eventually synchronize them with\n+                        Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n+                        anything about it.\n+                    </p>\n+                </div>\n+            </div>\n+        </div>\n+\n+    </div>\n+\n+    {% if messages %}\n+        <ul>\n+            {% for message in messages %}\n+                <li>{{ message }}</li>\n+            {% endfor %}\n+        </ul>\n+    {% endif %}\n+    <div class=\"row\">\n+        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+            <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n+            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n+                \n+\t\t{{ form.hidden_tag() }}\n+                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n+                    <div id=\"dropzone-text\"></div>\n+                </form>\n+                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n+                    </span>\n+                <ul class=\"mt-2\" id=\"file-list\"></ul>\n+                <script>\n+                    let dropzone = Dropzone.options.myDropzone = {\n+                        url: \"/dataset/file/upload/check\",\n+                        paramName: 'file',\n+                        maxFilesize: 10,\n+                        acceptedFiles: '.uvl',\n+                        init: function () {\n+\t\t\t\tlet fileList = document.getElementById('file-list');\n+\t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n+\t\t\t\tlet alerts = document.getElementById('alerts');\n+\t\t\t\tthis.on('addedfile', function (file) {\n+\t\t\t\t\tlet ext = file.name.split('.').pop();\n+\t\t\t\t\tif (ext !== 'uvl') {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+\t\t\t\t\telse if (fileList.childElementCount > 0) {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\t\t\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+                            });\n+                            this.on('success', function (file, response) {\n+                                let dropzone = this;\n+                                show_upload_dataset();\n+                                console.log(\"File uploaded: \", response);\n+                                // actions when UVL model is uploaded\n+                                let listItem = document.createElement('li');\n+                                let h4Element = document.createElement('h4');\n+                                h4Element.textContent = response.filename;\n+                                listItem.appendChild(h4Element);\n+                                // generate incremental id for form\n+                                let formUniqueId = generateIncrementalId();\n+                               /*\n+                                    ##########################################\n+                                    REMOVE BUTTON\n+                                    ##########################################\n+                                */\n+                                // remove button\n+                                let removeButton = document.createElement('button');\n+                                removeButton.innerHTML = 'Delete model';\n+                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n+                                removeButton.style.borderRadius = '5px';\n+                                removeButton.addEventListener('click', function () {\n+\t\t\t\t    let model = document.getElementById('rendered_model')\n+\t\t\t\t    while (model.firstChild) {\n+\t\t\t\t\t    model.removeChild(model.firstChild)\n+\t\t\t\t    };\n+                                    fileList.removeChild(listItem);\n+                                    this.removeFile(file);\n+                                    // Ajax request\n+                                    let xhr = new XMLHttpRequest();\n+                                    xhr.open('POST', '/dataset/file/delete', true);\n+                                    xhr.setRequestHeader('Content-Type', 'application/json');\n+                                    xhr.onload = function () {\n+                                        if (xhr.status === 200) {\n+                                            console.log('Deleted file from server');\n+                                            if (dropzone.files.length === 0) {\n+                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n+                                                clean_upload_errors();\n+                                            }\n+                                        }\n+                                    };\n+                                    xhr.send(JSON.stringify({file: file.name}));\n+                                }.bind(this));\n+                                /*\n+                                    ##########################################\n+                                    APPEND BUTTONS\n+                                    ##########################################\n+                                */\n+                                listItem.appendChild(removeButton);\n+                                /*\n+                                    ##########################################\n+                                    UVL FORM\n+                                    ##########################################\n+                                */\n+                                // create specific form for UVL\n+                                let formContainer = document.createElement('div');\n+                                formContainer.id = formUniqueId + \"_form\";\n+                                formContainer.classList.add('uvl_form', \"mt-3\");\n+                                formContainer.style.display = \"none\";\n+                                formContainer.innerHTML = `\n+                                    <div class=\"row\">\n+                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n+                                        <div class=\"col-12\">\n+                                            <div class=\"row\">\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Title</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Description</label>\n+                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n+                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n+                                                            <option value=\"none\">None</option>\n+                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n+                                                            <option value=\"book\">Book</option>\n+                                                            <option value=\"section\">Book Section</option>\n+                                                            <option value=\"conferencepaper\">Conference Paper</option>\n+                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n+                                                            <option value=\"article\">Journal Article</option>\n+                                                            <option value=\"patent\">Patent</option>\n+                                                            <option value=\"preprint\">Preprint</option>\n+                                                            <option value=\"deliverable\">Project Deliverable</option>\n+                                                            <option value=\"milestone\">Project Milestone</option>\n+                                                            <option value=\"proposal\">Proposal</option>\n+                                                            <option value=\"report\">Report</option>\n+                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n+                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n+                                                            <option value=\"technicalnote\">Technical Note</option>\n+                                                            <option value=\"thesis\">Thesis</option>\n+                                                            <option value=\"workingpaper\">Working Paper</option>\n+                                                            <option value=\"other\">Other</option>\n+                                                        </select>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n+                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">UVL version</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Authors</label>\n+                                                        <div id=\"` + formContainer.id + `_authors\">\n+                                                        </div>\n+                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n+                                                    </div>\n+                                                </div>\n+                                            </div>\n+                                        </div>\n+                                    </div>\n+                                    `;\n+                                listItem.appendChild(formContainer);\n+                                fileList.appendChild(listItem);\n+                            });\n+                            this.on('addedfile', function (file) {\n+\n+                                let ext = file.name.split('.').pop();\n+                                if (ext !== 'uvl') {\n+                                    this.removeFile(file);\n+\n+                                    let alert = document.createElement('p');\n+                                    alert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t    if (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t    }\n+                                    alerts.appendChild(alert);\n+                                    alerts.style.display = 'block';\n+                                }\n+\n+                            });\n+                        }\n+                    };\n+                </script>\n+            </div>\n+        </div>\n+    </div>\n+    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n+        <div class=\"col-12\">\n+            <hr>\n+            <h1 class=\"h3 mb-3 mt-2\">Check model and render errors</h1>\n+            <div style=\"padding-left: 2rem\">\n+                <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n+                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n+                    Check</button>\n+                <div id=\"loading\" style=\"display: none\">\n+                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n+                    Uploading and checking model, please wait...\n+                </div>\n+                <div class=\"row\">\n+                    <div class=\"col-12 mb-3\">\n+                    </div>\n+                </div>\n+                \n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\"></span>\n+                <p class=\"p-0 m-0\" id=\"rendered_model\"></p>\n+\t    </div>\n+\t    <script>\n+\t\t    const upload_button = document.getElementById('check_model_button');\n+\t\t    upload_button.disabled = false;\n+\t    </script>\n+\n+        </div>\n+    </div>\n+{% endblock %}\n+{% block scripts %}\n+    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "dbca6f3d31a8c62779ec70dd7c38e3c30e4b6915",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -110,7 +110,12 @@\n                                 class=\"align-middle\">My datasets</span>\n                         </a>\n                     </li>\n-\n+\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.check_dataset' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n+                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n+                                class=\"align-middle\">Check model</span>\n+                        </a>\n+                    </li>\t\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/36",
    "id": 2236027309,
    "node_id": "PR_kwDONDG85c6FRxGt",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/36",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/36.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/36.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/36",
    "number": 36,
    "state": "closed",
    "locked": false,
    "title": "fix(dataset):Donwload dataset on index and viewDataset",
    "user": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Fix some problems with the download of the different datasets",
    "created_at": "2024-12-15T21:49:53Z",
    "updated_at": "2024-12-15T21:52:37Z",
    "closed_at": "2024-12-15T21:52:37Z",
    "merged_at": "2024-12-15T21:52:37Z",
    "merge_commit_sha": "abd20bce07616b1bf137272e273c6799bf35ed80",
    "assignee": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "raumonmar1",
        "id": 72814383,
        "node_id": "MDQ6VXNlcjcyODE0Mzgz",
        "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/raumonmar1",
        "html_url": "https://github.com/raumonmar1",
        "followers_url": "https://api.github.com/users/raumonmar1/followers",
        "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
        "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
        "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
        "repos_url": "https://api.github.com/users/raumonmar1/repos",
        "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
        "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [
      {
        "id": 7630944205,
        "node_id": "LA_kwDONDG85c8AAAABxtb3zQ",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels/bug",
        "name": "bug",
        "color": "d73a4a",
        "default": true,
        "description": "Something isn't working"
      },
      {
        "id": 7886279345,
        "node_id": "LA_kwDONDG85c8AAAAB1g8SsQ",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels/high",
        "name": "high",
        "color": "901E94",
        "default": false,
        "description": "High priority"
      }
    ],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/36/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/36/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/36/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/d085e179819445f9eaae806700084b31e2577bbe",
    "head": {
      "label": "flamenquin-hub-single:fix_download_differents_formats",
      "ref": "fix_download_differents_formats",
      "sha": "d085e179819445f9eaae806700084b31e2577bbe",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "dcd158894d58f9295a608747a99d74748c9fa7c7",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/36"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/36"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/36"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/36/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/36/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/36/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/d085e179819445f9eaae806700084b31e2577bbe"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "07513d506e71b0fe1cb8b2e4da180503759e91ed",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 4,
        "deletions": 24,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -25,8 +25,6 @@\n )\n from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n-from app.modules.dataset.parser import get_tree\n-logger = logging.getLogger(__name__)\n from flask_dance.contrib.github import github\n \n \n@@ -101,7 +99,6 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n-\n @dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n @login_required\n def check_dataset():\n@@ -129,7 +126,6 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -160,11 +156,6 @@ def upload():\n         file.save(file_path)\n     except Exception as e:\n         return jsonify({\"message\": str(e)}), 500\n-    try:\n-        get_tree(file_path)\n-    except Exception as e:\n-        os.remove(file_path)\n-        return jsonify({\"message\": str(e),\"syntax\": True}),400\n \n     return (\n         jsonify(\n@@ -404,18 +395,7 @@ def commit_file(file_id):\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n-@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n-def download_dataset_format(file_id, format):\n-    \"\"\"Endpoint to download dataset in the specified format.\n-    Formats supported: glencoe, splot, dimacs, zip.\n-    \"\"\"\n-    if format == \"glencoe\":\n-        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n-    elif format == \"splot\":\n-        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n-    elif format == \"dimacs\":\n-        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n-    elif format == \"zip\":\n-        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n-    else:\n-        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+@dataset_bp.route(\"/dataset/download/<int:dataset_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(dataset_id, format):\n+    \"\"\"Redirect to Flamapy's export_dataset endpoint.\"\"\"\n+    return redirect(url_for(\"flamapy.export_dataset\", dataset_id=dataset_id, format=format))"
      },
      {
        "sha": "0d473574be64451c4ad63c85c34c85026d4a20be",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -41,35 +41,33 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n-                <div class=\"mt-2\">\n                     <div class=\"btn-group\" role=\"group\">\n                         <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n                             <i data-feather=\"download\"></i> Download\n                         </button>\n                         <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='glencoe') }}\">\n                                     Glencoe\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='dimacs') }}\">\n                                     DIMACS\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='splot') }}\">\n                                     SPLOT\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n-                                    ZIP\n-                                </a>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">\n+                                    ZIP (Original UVLs)\n+                                </a>                                \n                             </li>\n                         </ul>\n-                    </div>\n-                </div>\n+                    </div>     \n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">\n@@ -589,4 +587,4 @@ <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex\n     }\n </script>\n \n-{% endblock %}\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "275fbf9bd9d3ad0655d68861bc8799a8415e9560",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 34,
        "deletions": 44,
        "changes": 78,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -75,50 +75,40 @@ def ensure_logged_in(self):\n         else:\n             print(\"User successfully logged in.\")\n \n-    @task\n-    def commit_dataset(self):\n-        file_id = random.randint(1, 30)  \n-        response = self.client.post(f\"/dataset/commit_file/{file_id}\", json={})\n-        \n-        if response.status_code == 200:\n-            print(f\"File {file_id} committed successfully: {response.text}\")\n-        elif response.status_code == 404:\n-            print(f\"File {file_id} not found: {response.status_code}\")\n-        elif response.status_code == 500:\n-            print(f\"Server error for File {file_id}: {response.status_code} - {response.text}\")\n-        else:\n-            print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n-\n-\n-    @task(4)\n-    def download_dataset_glencoe(self):\n-        \"\"\"Simula la descarga del dataset en formato Glencoe.\"\"\"\n-        dataset_id = 4  # Ajusta el ID del dataset si es necesario\n-        self.client.get(f\"/dataset/download/{dataset_id}/glencoe\", name=\"/dataset/download/glencoe\")\n-\n-    @task(3)\n-    def download_dataset_splot(self):\n-        \"\"\"Simula la descarga del dataset en formato SPLOT.\"\"\"\n-        dataset_id = 4\n-        self.client.get(f\"/dataset/download/{dataset_id}/splot\", name=\"/dataset/download/splot\")\n-\n-    @task(2)\n-    def download_dataset_dimacs(self):\n-        \"\"\"Simula la descarga del dataset en formato DIMACS.\"\"\"\n-        dataset_id = 4\n-        self.client.get(f\"/dataset/download/{dataset_id}/dimacs\", name=\"/dataset/download/dimacs\")\n-\n-    @task(1)\n-    def download_dataset_zip(self):\n-        \"\"\"Simula la descarga del dataset en formato ZIP.\"\"\"\n-        dataset_id = 4\n-        self.client.get(f\"/dataset/download/{dataset_id}/zip\", name=\"/dataset/download/zip\")\n+class DownloadDatasets(TaskSet):\n+    formats = {\n+        \"Glencoe\": \"glencoe\",\n+        \"SPLOT\": \"splot\",\n+        \"DIMACS\": \"dimacs\",\n+        \"ZIP\": \"zip\"\n+    }\n \n+    @task\n+    def download_files(self):\n+        for dataset_id in self.dataset_ids:  # Itera sobre tus dataset_ids\n+            for format_name, format_value in self.formats.items():  # Itera sobre los formatos\n+                with self.client.get(\n+                    f\"/flamapy/export/dataset/{dataset_id}/{format_value}\",  # URL corregida\n+                    name=f\"Download {format_name}\",\n+                    allow_redirects=True,  # Sigue autom\u00e1ticamente las redirecciones\n+                    catch_response=True  # Captura la respuesta para an\u00e1lisis\n+                ) as response:\n+                    if response.status_code == 200:  # Descarga exitosa\n+                        response.success()\n+                    elif response.status_code == 302:  # Redirecci\u00f3n\n+                        response.success()  # Tratamos 302 como \u00e9xito\n+                    else:\n+                        response.failure(\n+                            f\"Failed to download {format_name} for dataset {dataset_id} \"\n+                            f\"with status code {response.status_code}\"\n+                        )\n \n class DatasetUser(HttpUser):\n-      \"\"\"Clase principal que define los usuarios y su comportamiento.\"\"\"\n-    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior]\n-    min_wait = 5000\n-    max_wait = 9000\n-    wait_time = between(5, 9)  # Espera entre 5 y 9 segundos entre tareas\n-    host = get_host_for_locust_testing()\n+    \"\"\"\n+    Clase principal que define los usuarios y su comportamiento.\n+    \"\"\"\n+    tasks = [CommitFileBehavior]  # Asigna la tarea de descarga\n+    min_wait = 5000  # Espera m\u00ednima de 5 segundos\n+    max_wait = 9000  # Espera m\u00e1xima de 9 segundos\n+    wait_time = between(5, 9)  # Espera aleatoria entre tareas\n+    host = \"http://localhost:5000\"  # La URL base de tu aplicaci\u00f3n\n\\ No newline at end of file"
      },
      {
        "sha": "2e2bee0c10bc622be92542708879256151e0f9db",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "modified",
        "additions": 36,
        "deletions": 27,
        "changes": 63,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -12,6 +12,7 @@\n \n DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n \n+\n def initialize_driver(download_dir=None):\n     options = Options()\n     if download_dir:\n@@ -24,67 +25,75 @@ def initialize_driver(download_dir=None):\n     driver = webdriver.Chrome(options=options)\n     return driver\n \n+\n def clean_download_folder():\n     \"\"\"Elimina todos los archivos previos en la carpeta de descargas.\"\"\"\n     if os.path.exists(DOWNLOAD_DIR):\n         for file in os.listdir(DOWNLOAD_DIR):\n             file_path = os.path.join(DOWNLOAD_DIR, file)\n             os.remove(file_path)\n \n-def is_file_downloaded_by_extension(extension, timeout=10):\n-    \"\"\"Verifica si un archivo con una extensi\u00f3n espec\u00edfica ha sido descargado.\"\"\"\n+\n+def is_file_downloaded_by_extension(extension, timeout=20, exact=False):\n+    \"\"\"\n+    Verifica si un archivo con una extensi\u00f3n espec\u00edfica ha sido descargado.\n+\n+    :param extension: Extensi\u00f3n del archivo o patr\u00f3n para b\u00fasqueda.\n+    :param timeout: Tiempo m\u00e1ximo de espera.\n+    :param exact: Si es True, busca archivos con nombre exacto. Si no, busca solo por extensi\u00f3n.\n+    \"\"\"\n     for _ in range(timeout):\n-        files = glob.glob(os.path.join(DOWNLOAD_DIR, f\"*.{extension}\"))\n+        files = glob.glob(os.path.join(DOWNLOAD_DIR, f\"{extension}\" if exact else f\"*{extension}\"))\n+        print(\"Archivos actuales en la carpeta:\", os.listdir(DOWNLOAD_DIR))  # Debug\n+        print(\"Coincidencias encontradas:\", files)  # Debug\n         if files:\n             return True\n         time.sleep(1)\n     return False\n \n-def test_download_datasets():\n-    \"\"\"Prueba la descarga de datasets en diferentes formatos.\"\"\"\n+\n+def test_download_datasets_index():\n+    \"\"\"Prueba la descarga de datasets desde el index en diferentes formatos.\"\"\"\n     driver = initialize_driver(download_dir=DOWNLOAD_DIR)\n     clean_download_folder()\n \n     try:\n         host = get_host_for_selenium_testing()\n-        driver.get(f\"{host}/\")\n-        WebDriverWait(driver, 10).until(\n-            lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n-        )\n+        driver.get(f\"{host}/\")  # P\u00e1gina index\n+        WebDriverWait(driver, 10).until(lambda d: d.execute_script(\"return document.readyState\") == \"complete\")\n \n-        # Lista de formatos y extensiones esperadas\n         formats = {\n-            \"Glencoe\": \"txt\",\n-            \"SPLOT\": \"txt\",\n-            \"DIMACS\": \"txt\",\n-            \"ZIP\": \"zip\"\n+            \"Glencoe\": \"_glencoe.zip\",\n+            \"SPLOT\": \"_splot.zip\",\n+            \"DIMACS\": \"_dimacs.zip\",\n+            \"ZIP\": \".zip\"  # Validar cualquier archivo con extensi\u00f3n .zip\n         }\n \n         for format_name, file_extension in formats.items():\n-            # Hacer clic en el bot\u00f3n \"Download\"\n+            print(f\"Probando descarga para el formato: {format_name}\")  # Debug\n             download_button = WebDriverWait(driver, 10).until(\n                 EC.element_to_be_clickable((By.XPATH, \"//button[contains(@id, 'btnDownloadDropdown')]\"))\n             )\n             ActionChains(driver).move_to_element(download_button).click().perform()\n \n-            # Seleccionar el formato del desplegable\n             dropdown_option = WebDriverWait(driver, 10).until(\n-                EC.element_to_be_clickable((By.XPATH, f\"//a[contains(@onclick, \\\"{format_name.lower()}\\\")]\"))\n+                EC.element_to_be_clickable((By.XPATH, f\"//a[contains(@onclick, \\\"{format_name.lower()}\\\") or contains(text(), 'ZIP')]\"))\n             )\n             dropdown_option.click()\n \n-            # Verificar que el archivo se ha descargado por su extensi\u00f3n\n-            print(f\"Esperando la descarga del archivo con extensi\u00f3n .{file_extension}...\")\n-            assert is_file_downloaded_by_extension(file_extension), f\"El archivo con extensi\u00f3n .{file_extension} no se descarg\u00f3 correctamente.\"\n-            print(f\"El archivo con extensi\u00f3n .{file_extension} se descarg\u00f3 correctamente.\")\n-\n-            time.sleep(2)  # Espera breve antes de continuar\n+            if format_name == \"ZIP\":\n+                # Validar cualquier archivo .zip descargado\n+                assert is_file_downloaded_by_extension(\".zip\"), f\"Archivo ZIP no descargado desde index.\"\n+            else:\n+                assert is_file_downloaded_by_extension(file_extension), f\"Archivo *{file_extension} no descargado desde index.\"\n \n-        print(\"Todos los archivos se descargaron correctamente. Test completado con \u00e9xito.\")\n+            print(f\"Archivo *{file_extension} descargado correctamente.\")\n+            clean_download_folder()\n \n+        print(\"Todos los archivos se descargaron correctamente desde el index.\")\n     finally:\n-        close_driver(driver)  # Cerrar el navegador al finalizar el test\n+        close_driver(driver)\n+\n \n-# Ejecutar el test\n if __name__ == \"__main__\":\n-    test_download_datasets()\n\\ No newline at end of file\n+    test_download_datasets_index()\n\\ No newline at end of file"
      },
      {
        "sha": "124cfcf72bfbe3604302247f142bb0613bdd53d8",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 4,
        "deletions": 14,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -1,7 +1,5 @@\n import pytest\n from flask import url_for\n-from app.modules.dataset.routes import download_dataset_format\n-\n \n @pytest.fixture(scope=\"module\")\n def test_client(test_client):\n@@ -20,7 +18,7 @@ def test_download_glencoe_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/glencoe\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"glencoe\") in response.location\n \n \n def test_download_splot_redirect(test_client):\n@@ -29,7 +27,7 @@ def test_download_splot_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/splot\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"splot\") in response.location\n \n \n def test_download_dimacs_redirect(test_client):\n@@ -38,7 +36,7 @@ def test_download_dimacs_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/dimacs\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"dimacs\") in response.location\n \n \n def test_download_zip_redirect(test_client):\n@@ -47,12 +45,4 @@ def test_download_zip_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/zip\")\n     assert response.status_code == 302\n-    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n-\n-def test_download_invalid_format(test_client):\n-    \"\"\"\n-    Testea que se retorne un error 400 para un formato no soportado.\n-    \"\"\"\n-    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n-    assert response.status_code == 400\n-    assert response.json == {\"error\": \"Formato no soportado\"}\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n\\ No newline at end of file"
      },
      {
        "sha": "77dba20ebcd49a483100e4fc73b712128864295b",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 43,
        "deletions": 3,
        "changes": 46,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -1,11 +1,14 @@\n+import os\n+import zipfile\n+import tempfile\n import logging\n+\n+from flask import send_file, jsonify, redirect, url_for\n from app.modules.hubfile.services import HubfileService\n-from flask import send_file, jsonify\n from app.modules.flamapy import flamapy_bp\n+\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n-import tempfile\n-import os\n \n from antlr4 import CommonTokenStream, FileStream\n from uvl.UVLCustomLexer import UVLCustomLexer\n@@ -115,3 +118,40 @@ def to_cnf(file_id):\n     finally:\n         # Clean up the temporary file\n         os.remove(temp_file.name)\n+\n+@flamapy_bp.route('/flamapy/export_dataset/<int:dataset_id>/<string:format>', methods=['GET'])\n+def export_dataset(dataset_id, format):\n+    \"\"\"Export all UVL files in the dataset to the specified format and package as a ZIP.\"\"\"\n+    hubfile_service = HubfileService()\n+    files = hubfile_service.get_files_by_dataset_id(dataset_id)\n+\n+    if not files:\n+        return jsonify({\"error\": \"No files found for this dataset\"}), 404\n+\n+    with tempfile.TemporaryDirectory() as temp_dir:\n+        zip_filename = os.path.join(temp_dir, f\"dataset_{dataset_id}_{format}.zip\")\n+\n+        with zipfile.ZipFile(zip_filename, 'w') as zipf:\n+            for file in files:\n+                uvl_path = file.get_path()\n+                fm = UVLReader(uvl_path).transform()\n+\n+                # Transform the file to the desired format\n+                temp_file = tempfile.NamedTemporaryFile(delete=False, suffix=f\".{format}\")\n+                try:\n+                    if format == \"glencoe\":\n+                        GlencoeWriter(temp_file.name, fm).transform()\n+                    elif format == \"splot\":\n+                        SPLOTWriter(temp_file.name, fm).transform()\n+                    elif format == \"dimacs\":\n+                        sat = FmToPysat(fm).transform()\n+                        DimacsWriter(temp_file.name, sat).transform()\n+                    else:\n+                        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+\n+                    # Add transformed file to ZIP\n+                    zipf.write(temp_file.name, arcname=f\"{file.name}.{format}\")\n+                finally:\n+                    os.remove(temp_file.name)\n+\n+        return send_file(zip_filename, as_attachment=True, download_name=f\"dataset_{dataset_id}_{format}.zip\")\n\\ No newline at end of file"
      },
      {
        "sha": "40b4d5e3509a247e2d035c5099f5ce170695a430",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -26,6 +26,16 @@ def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n     \n     def get_hubfile_by_id(self, hubfile_id: int) -> Hubfile:\n         return db.session.query(Hubfile).filter(Hubfile.id == hubfile_id).first()\n+    \n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos relacionados con un dataset.\"\"\"\n+        dataset = DataSet.query.get(dataset_id)\n+        if not dataset:\n+            return []\n+\n+        # Extrae todos los archivos de los FeatureModels relacionados\n+        files = [file for fm in dataset.feature_models for file in fm.files]\n+        return files\n \n \n class HubfileViewRecordRepository(BaseRepository):\n@@ -43,4 +53,4 @@ def __init__(self):\n \n     def total_hubfile_downloads(self) -> int:\n         max_id = self.model.query.with_entities(func.max(self.model.id)).scalar()\n-        return max_id if max_id is not None else 0\n+        return max_id if max_id is not None else 0\n\\ No newline at end of file"
      },
      {
        "sha": "1d61da9482d23b082661e52920a34f734c13d12b",
        "filename": "app/modules/hubfile/services.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fhubfile%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fhubfile%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Fservices.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -16,6 +16,11 @@ def __init__(self):\n         self.hubfile_view_record_repository = HubfileViewRecordRepository()\n         self.hubfile_download_record_repository = HubfileDownloadRecordRepository()\n \n+    # Nuevo m\u00e9todo para obtener archivos por dataset\n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos UVL asociados a un dataset.\"\"\"\n+        return self.repository.get_files_by_dataset_id(dataset_id)\n+\n     def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n         return self.repository.get_owner_user_by_hubfile(hubfile)\n \n@@ -46,4 +51,4 @@ def total_hubfile_downloads(self) -> int:\n \n class HubfileDownloadRecordService(BaseService):\n     def __init__(self):\n-        super().__init__(HubfileDownloadRecordRepository())\n+        super().__init__(HubfileDownloadRecordRepository())\n\\ No newline at end of file"
      },
      {
        "sha": "3e8b608a1a2409a516addb103772a79cfe7c30be",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -99,7 +99,7 @@ <h2>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'glencoe')\">Glencoe</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'splot')\">SPLOT</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'dimacs')\">DIMACS</a></li>\n-                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'zip')\">ZIP</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">ZIP</a></li>\n                                     </ul>\n                                 </div>                                \n                             </div>"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/35",
    "id": 2235887019,
    "node_id": "PR_kwDONDG85c6FRO2r",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/35",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/35.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/35.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/35",
    "number": 35,
    "state": "closed",
    "locked": false,
    "title": "Feature fakenodo",
    "user": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Fakenodo functionality",
    "created_at": "2024-12-15T16:51:07Z",
    "updated_at": "2024-12-15T19:50:29Z",
    "closed_at": "2024-12-15T19:50:29Z",
    "merged_at": "2024-12-15T19:50:29Z",
    "merge_commit_sha": "dcd158894d58f9295a608747a99d74748c9fa7c7",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/35/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/35/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/35/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/d6e9198db88472fed91bf40633cf3000218e828d",
    "head": {
      "label": "flamenquin-hub-single:feature-fakenodo",
      "ref": "feature-fakenodo",
      "sha": "d6e9198db88472fed91bf40633cf3000218e828d",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "275789936b5f3be522fdcc4489b66e8abe8aa0da",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/35"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/35"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/35"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/35/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/35/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/35/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/d6e9198db88472fed91bf40633cf3000218e828d"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "046d16ed02077bce70fa94658634c90c5525ac89",
        "filename": "app/modules/zenodo/services.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6e9198db88472fed91bf40633cf3000218e828d/app%2Fmodules%2Fzenodo%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6e9198db88472fed91bf40633cf3000218e828d/app%2Fmodules%2Fzenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Fservices.py?ref=d6e9198db88472fed91bf40633cf3000218e828d",
        "patch": "@@ -27,11 +27,11 @@ def get_zenodo_url(self):\n         ZENODO_API_URL = \"\"\n \n         if FLASK_ENV == \"development\":\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n         elif FLASK_ENV == \"production\":\n             ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://zenodo.org/api/deposit/depositions\")\n         else:\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n \n         return ZENODO_API_URL\n \n@@ -83,7 +83,6 @@ def test_full_connection(self) -> Response:\n                 \"creators\": [{\"name\": \"John Doe\"}],\n             }\n         }\n-\n         response = requests.post(self.ZENODO_API_URL, json=data, params=self.params, headers=self.headers)\n \n         if response.status_code != 201:"
      },
      {
        "sha": "54a33e2de92fe07a170425aae5155b7722058055",
        "filename": "fakenodo/__init__.py",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2F__init__.py?ref=d6e9198db88472fed91bf40633cf3000218e828d",
        "patch": "@@ -0,0 +1,8 @@\n+from fakenodo.app.routes import api_bp\n+from flask import Flask\n+\n+def create_app():\n+    app = Flask(__name__)\n+    with app.app_context():\n+        app.register_blueprint(api_bp)\n+    return app"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "fakenodo/app/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Fapp%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Fapp%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2F__init__.py?ref=d6e9198db88472fed91bf40633cf3000218e828d"
      },
      {
        "sha": "34c7f26a0ccf44b709399eb34685c72851a158d4",
        "filename": "fakenodo/app/models.py",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Fapp%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Fapp%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fmodels.py?ref=d6e9198db88472fed91bf40633cf3000218e828d",
        "patch": "@@ -0,0 +1,71 @@\n+class Creator:\n+    def __init__(self, name: str, id: int = None, deposition_id: int = None):\n+        self.id = id\n+        self.name = name\n+        self.deposition_id = deposition_id\n+\n+    def to_dict(self):\n+        return {\n+            'id': self.id,\n+            'name': self.name,\n+            'deposition_id': self.deposition_id\n+        }\n+\n+\n+class File:\n+    _id_counter = 1\n+\n+    def __init__(self, name: str, size: int, checksum, deposition_id: str):\n+        self.id = File._id_counter\n+        File._id_counter += 1\n+        self.name = name\n+        self.size = size\n+        self.checksum = checksum\n+        self.deposition_id = deposition_id\n+\n+    def to_dict(self):\n+        return {\n+            \"id\": self.id,\n+            \"name\": self.name,\n+            \"size\": self.size,\n+            \"checksum\": self.checksum\n+        }\n+\n+\n+class Deposition:\n+    _id_counter = 1\n+\n+    def __init__(self, title=None, upload_type=None, publication_type=None, description=None,\n+                 creators=None, keywords=None, access_right=None, license=None, doi=None, published=False, files=None):\n+        self.id = Deposition._id_counter\n+        Deposition._id_counter += 1\n+\n+        self.title = title\n+        self.upload_type = upload_type\n+        self.publication_type = publication_type\n+        self.description = description\n+        self.creators = creators\n+        self.keywords = keywords\n+        self.access_right = access_right\n+        self.license = license\n+        self.doi = doi\n+        self.published = published\n+        self.files = files\n+        self.conceptrecid = self.id - 1\n+\n+    def to_dict(self):\n+        return {\n+            \"id\": self.id,\n+            \"title\": self.title,\n+            \"upload_type\": self.upload_type,\n+            \"publication_type\": self.publication_type,\n+            \"description\": self.description,\n+            \"creators\": self.creators,\n+            \"keywords\": self.keywords,\n+            \"access_right\": self.access_right,\n+            \"license\": self.license,\n+            \"doi\": self.doi,\n+            \"published\": self.published,\n+            \"files\": self.files,\n+            \"conceptrecid\": self.conceptrecid\n+        }"
      },
      {
        "sha": "dc60d2ea029585a302642dd662a05b8cd96b19ca",
        "filename": "fakenodo/app/routes.py",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Fapp%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Fapp%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Froutes.py?ref=d6e9198db88472fed91bf40633cf3000218e828d",
        "patch": "@@ -0,0 +1,97 @@\n+import logging\n+import requests\n+from flask import Blueprint, jsonify, request\n+from fakenodo.app.models import Deposition\n+from fakenodo.app.services import Service\n+\n+api_bp = Blueprint(\"api_bp\", __name__)\n+logger = logging.getLogger(__name__)\n+service = Service()\n+\n+\n+@api_bp.route('/api/fakenodo/depositions', methods=['GET', 'POST'])\n+def depositions() -> tuple:\n+    def get_all_depositions() -> tuple:\n+        try:\n+            depositions = service.get_all_depositions()\n+            return jsonify(depositions), 200\n+\n+        except Exception as e:\n+            return jsonify({\"success\": False, \"message\": str(e)}), 500\n+\n+    def create_deposition() -> tuple:\n+        data = request.json\n+        try:\n+            # Create a Deposition instance with the request metadata\n+            deposition = Deposition(**data[\"metadata\"])\n+\n+            # Save the deposition in a local list\n+            response_data = service.create_new_deposition(deposition)\n+\n+            return jsonify(response_data), 201\n+        except Exception as e:\n+            return jsonify({\"success\": False, \"message\": str(e)}), 500\n+\n+    if request.method == \"GET\":\n+        return get_all_depositions()\n+    else:\n+        return create_deposition()\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/files', methods=['POST'])\n+def upload_file(deposition_id) -> tuple:\n+    try:\n+        for file in request.files.getlist('file'):\n+            if not file:\n+                return jsonify({\"success\": False, \"message\": \"Missing file\"}), 400\n+            service.upload_file(file, deposition_id)\n+\n+        return jsonify('File uploaded succesfully'), 201\n+    except Exception as e:\n+        error_message = f\"Failed to upload files. Error details: {e}\"\n+        raise Exception(error_message)\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>', methods=['GET', 'DELETE'])\n+def deposition(deposition_id):\n+    try:\n+        # Target deposition\n+        deposition = service.get_deposition(deposition_id)\n+\n+        def get_deposition():\n+            resposne = deposition.to_dict()\n+            return jsonify(resposne), 200\n+\n+        def delete_deposition():\n+            service.delete_deposition(deposition)\n+            return jsonify(f\"Deposition with id {deposition_id} deleted succesfully\"), 204\n+\n+        if request.method == 'GET':\n+            return get_deposition()\n+        else:\n+            return delete_deposition()\n+\n+    except Exception:\n+        return jsonify(f\"Cannot find deposition with id {deposition_id}\"), 404\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/actions/publish', methods=['POST'])\n+def publish_deposition(deposition_id) -> tuple:\n+    try:\n+        # Target deposition\n+        deposition = service.get_deposition(deposition_id)\n+        service.generate_doi(deposition_id)\n+        service.publish_deposition(deposition)\n+        return jsonify(f\"Deposition with id {deposition_id} published succesfully\"), 202\n+\n+    except Exception:\n+        return jsonify(\"Deposition not found\"), 404\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/doi', methods=['GET'])\n+def get_doi(deposition_id) -> tuple:\n+    try:\n+        doi = service.get_doi(deposition_id)\n+        return jsonify({\"doi\": doi}), 200\n+    except Exception as e:\n+        return jsonify({\"success\": False, \"message\": str(e)}), 500"
      },
      {
        "sha": "9792be9468ae3f990042133d2afbb4fda5bd3877",
        "filename": "fakenodo/app/services.py",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Fapp%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Fapp%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fservices.py?ref=d6e9198db88472fed91bf40633cf3000218e828d",
        "patch": "@@ -0,0 +1,75 @@\n+import hashlib\n+import logging\n+from random import randint\n+from typing import List\n+from fakenodo.app.models import Deposition, File\n+from dotenv import load_dotenv\n+from core.services.BaseService import BaseService\n+\n+logger = logging.getLogger(__name__)\n+\n+load_dotenv()\n+\n+depositions = []\n+\n+class Service(BaseService):\n+    def __init__(self):\n+        self.headers = {\"Content-Type\": \"application/json\"}\n+\n+    def get_all_depositions(self) -> list:\n+        return [deposition.to_dict() for deposition in depositions]\n+\n+    def create_new_deposition(self, deposition: Deposition) -> dict:\n+        depositions.append(deposition)\n+        return deposition.to_dict()\n+\n+    def upload_file(self, file, deposition_id) -> None:\n+        try:\n+            # Read file content\n+            file_data = file.read()\n+\n+            # Create the file instance\n+            file_instance = File(\n+                name=file.filename,\n+                size=len(file_data),\n+                checksum=hashlib.md5(file_data).hexdigest(),\n+                deposition_id=deposition_id\n+            )\n+\n+            target_deposition = self.get_deposition(deposition_id)\n+            if target_deposition is None:\n+                raise FileNotFoundError(\"Deposition not found\")\n+            if target_deposition.files is None:\n+                target_deposition.files = [file_instance.to_dict()]\n+            else:\n+                target_deposition.files.append(file_instance.to_dict())\n+\n+        except Exception as e:\n+            print(f\"Error en la subida del archivo: {e}\")\n+\n+    def publish_deposition(self, deposition: Deposition) -> dict:\n+        if deposition.doi!=None:\n+            deposition.published = True\n+        return deposition.to_dict()\n+\n+    def delete_deposition(self, deposition: Deposition) -> None:\n+        depositions.remove(deposition)\n+\n+    def get_deposition(self, deposition_id: int) -> Deposition | None:\n+        return [deposition for deposition in depositions if deposition_id == deposition.id][0]\n+\n+    def get_doi(self, deposition_id: int) -> str:\n+        return self.get_deposition(deposition_id).doi\n+\n+    def generate_doi_id():\n+        identifier = randint(10000,1000000)\n+        while True:\n+            yield identifier\n+            identifier+=1\n+\n+    doi_generator = generate_doi_id()\n+\n+    def generate_doi(self,deposition_id):\n+        deposition = self.get_deposition(deposition_id)\n+        doi_id = next(self.doi_generator)\n+        deposition.doi = str(doi_id)+\"/dataset.\"+str(doi_id)"
      },
      {
        "sha": "d2a599dd699a849fbac0b49bf05c76c52b5f516c",
        "filename": "fakenodo/conftest.py",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Fconftest.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Fconftest.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fconftest.py?ref=d6e9198db88472fed91bf40633cf3000218e828d",
        "patch": "@@ -0,0 +1,14 @@\n+import pytest\n+from flask import Flask\n+from fakenodo.app.routes import api_bp\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client():\n+    app = Flask(__name__)\n+    app.config[\"TESTING\"] = True\n+    app.config[\"SERVER_NAME\"] = \"localhost:5001\"\n+    app.register_blueprint(api_bp)\n+    with app.test_client() as client:\n+        with app.app_context():\n+            yield client"
      },
      {
        "sha": "6073984d83d3c02a135714af400b13bac9c32687",
        "filename": "fakenodo/pytest.ini",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Fpytest.ini",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Fpytest.ini",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fpytest.ini?ref=d6e9198db88472fed91bf40633cf3000218e828d",
        "patch": "@@ -0,0 +1,4 @@\n+[pytest]\n+filterwarnings =\n+    ignore::DeprecationWarning\n+testpaths = fakenodo tests"
      },
      {
        "sha": "65e0caf5717f6844e459e42f72073254d12b694a",
        "filename": "fakenodo/run.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Frun.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6e9198db88472fed91bf40633cf3000218e828d/fakenodo%2Frun.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Frun.py?ref=d6e9198db88472fed91bf40633cf3000218e828d",
        "patch": "@@ -0,0 +1,6 @@\n+from fakenodo import create_app\n+\n+\n+app = create_app()\n+if __name__ == \"__main__\":\n+    app.run(host=\"0.0.0.0\", port=5001, debug=True)"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/34",
    "id": 2235797691,
    "node_id": "PR_kwDONDG85c6FQ5C7",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/34",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/34.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/34.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/34",
    "number": 34,
    "state": "closed",
    "locked": false,
    "title": "Fix uploading duplicate datasets",
    "user": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "This fix resolves the duplication of datasets during the update process.",
    "created_at": "2024-12-15T13:18:04Z",
    "updated_at": "2024-12-15T17:16:57Z",
    "closed_at": "2024-12-15T17:16:56Z",
    "merged_at": "2024-12-15T17:16:56Z",
    "merge_commit_sha": "732a8972958cbd57022d507430543ae695f53dde",
    "assignee": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "raumonmar1",
        "id": 72814383,
        "node_id": "MDQ6VXNlcjcyODE0Mzgz",
        "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/raumonmar1",
        "html_url": "https://github.com/raumonmar1",
        "followers_url": "https://api.github.com/users/raumonmar1/followers",
        "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
        "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
        "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
        "repos_url": "https://api.github.com/users/raumonmar1/repos",
        "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
        "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [
      {
        "id": 7630944205,
        "node_id": "LA_kwDONDG85c8AAAABxtb3zQ",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels/bug",
        "name": "bug",
        "color": "d73a4a",
        "default": true,
        "description": "Something isn't working"
      },
      {
        "id": 7886279345,
        "node_id": "LA_kwDONDG85c8AAAAB1g8SsQ",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels/high",
        "name": "high",
        "color": "901E94",
        "default": false,
        "description": "High priority"
      }
    ],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/34/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/34/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/34/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/b214242455f4c87bc468175ce99fe75f52818d27",
    "head": {
      "label": "flamenquin-hub-single:fix-uploading_duplicate_datasets",
      "ref": "fix-uploading_duplicate_datasets",
      "sha": "b214242455f4c87bc468175ce99fe75f52818d27",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "d362c35fbac6c96940b11b050579a0b3244013fe",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/34"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/34"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/34"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/34/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/34/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/34/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/b214242455f4c87bc468175ce99fe75f52818d27"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "5a503969d21b686acd317e8d8396c923771290ec",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 16,
        "deletions": 114,
        "changes": 130,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b214242455f4c87bc468175ce99fe75f52818d27/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b214242455f4c87bc468175ce99fe75f52818d27/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=b214242455f4c87bc468175ce99fe75f52818d27",
        "patch": "@@ -139,127 +139,16 @@ var currentId = 0;\n \n         window.onload = function () {\n \n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n+\t\ttest_zenodo_connection();\n \n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n-\n-        function downloadDataset(datasetId, format) {\n-            const url = `/dataset/download/${datasetId}/${format}`;\n-            window.location.href = url;\n-        }\n-        \n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n \t\t\t\tconsole.log(\"hi\");\n \t\t\t\tclean_upload_errors();\n \t\t\t\tshow_loading(\"check\");\n \n-\t\t\t\t\n+\n \t\t\t\tfetch('/dataset/check', {\n \t\t\t\t\tmethod: 'POST',\n \t\t\t\t\tbody: ''\n@@ -387,9 +276,22 @@ var currentId = 0;\n \n \n \t\t\t});\n-\t\t}\n+\t\t};\n+\t};\n+\n \n \n+function isValidOrcid(orcid) {\n+\tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+\treturn orcidRegex.test(orcid);\n+}\n+\n+function downloadDataset(datasetId, format) {\n+\tconst url = `/dataset/download/${datasetId}/${format}`;\n+\twindow.location.href = url;\n+}\n+        \n+\t\t\n function isValidOrcid(orcid) {\n \tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n \treturn orcidRegex.test(orcid);"
      },
      {
        "sha": "65ffa266d710b0ee8f02416aeb1319e5f0aed671",
        "filename": "app/static/js/scripts.js",
        "status": "modified",
        "additions": 4,
        "deletions": 244,
        "changes": 248,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b214242455f4c87bc468175ce99fe75f52818d27/app%2Fstatic%2Fjs%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b214242455f4c87bc468175ce99fe75f52818d27/app%2Fstatic%2Fjs%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fscripts.js?ref=b214242455f4c87bc468175ce99fe75f52818d27",
        "patch": "@@ -1,246 +1,6 @@\n-var currentId = 0;\n-        var amount_authors = 0;\n-\n-        function show_upload_dataset() {\n-            document.getElementById(\"upload_dataset\").style.display = \"block\";\n-        }\n-\n-        function generateIncrementalId() {\n-            return currentId++;\n-        }\n-\n-        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n-            let fieldWrapper = document.createElement('div');\n-            fieldWrapper.className = className;\n-\n-            let label = document.createElement('label');\n-            label.className = 'form-label';\n-            label.for = name;\n-            label.textContent = text;\n-\n-            let field = document.createElement('input');\n-            field.name = name;\n-            field.className = 'form-control';\n-\n-            fieldWrapper.appendChild(label);\n-            fieldWrapper.appendChild(field);\n-            newAuthor.appendChild(fieldWrapper);\n-        }\n-\n-        function addRemoveButton(newAuthor) {\n-            let buttonWrapper = document.createElement('div');\n-            buttonWrapper.className = 'col-12 mb-2';\n-\n-            let button = document.createElement('button');\n-            button.textContent = 'Remove author';\n-            button.className = 'btn btn-danger btn-sm';\n-            button.type = 'button';\n-            button.addEventListener('click', function (event) {\n-                event.preventDefault();\n-                newAuthor.remove();\n-            });\n-\n-            buttonWrapper.appendChild(button);\n-            newAuthor.appendChild(buttonWrapper);\n-        }\n-\n-        function createAuthorBlock(idx, suffix) {\n-            let newAuthor = document.createElement('div');\n-            newAuthor.className = 'author row';\n-            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n-\n-            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n-            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n-            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n-            addRemoveButton(newAuthor);\n-\n-            return newAuthor;\n-        }\n-\n-        function check_title_and_description() {\n-            let titleInput = document.querySelector('input[name=\"title\"]');\n-            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n-\n-            titleInput.classList.remove(\"error\");\n-            descriptionTextarea.classList.remove(\"error\");\n-            clean_upload_errors();\n-\n-            let titleLength = titleInput.value.trim().length;\n-            let descriptionLength = descriptionTextarea.value.trim().length;\n-\n-            if (titleLength < 3) {\n-                write_upload_error(\"title must be of minimum length 3\");\n-                titleInput.classList.add(\"error\");\n-            }\n-\n-            if (descriptionLength < 3) {\n-                write_upload_error(\"description must be of minimum length 3\");\n-                descriptionTextarea.classList.add(\"error\");\n-            }\n-\n-            return (titleLength >= 3 && descriptionLength >= 3);\n-        }\n-\n-\n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n-\n-        document.addEventListener('click', function (event) {\n-            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n-\n-                let authorsButtonId = event.target.id;\n-                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n-                let authors = document.getElementById(authorsId);\n-                let id = authorsId.replace(\"_form_authors\", \"\")\n-                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n-                authors.appendChild(newAuthor);\n-\n-            }\n-        });\n-\n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n-\n-        function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n-            document.getElementById(\"loading\").style.display = \"none\";\n-        }\n-\n-        function clean_upload_errors() {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            upload_error.innerHTML = \"\";\n-            upload_error.style.display = 'none';\n-        }\n-\n-        function write_upload_error(error_message) {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            let alert = document.createElement('p');\n-            alert.style.margin = '0';\n-            alert.style.padding = '0';\n-            alert.textContent = 'Upload error: ' + error_message;\n-            upload_error.appendChild(alert);\n-            upload_error.style.display = 'block';\n-        }\n-\n-        window.onload = function () {\n-\n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n-\n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n-\n-        function downloadDataset(datasetId, format) {\n-            const url = `/dataset/download/${datasetId}/${format}`;\n-            window.location.href = url;\n-        }\n+    function downloadDataset(datasetId, format) {\n+        const url = `/dataset/download/${datasetId}/${format}`;\n+        window.location.href = url;\n+    }\n         \n         \n\\ No newline at end of file"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/33",
    "id": 2235585737,
    "node_id": "PR_kwDONDG85c6FQFTJ",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/33",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/33.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/33.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/33",
    "number": 33,
    "state": "closed",
    "locked": false,
    "title": "feat(dataset): Added tests for BibTex export WI",
    "user": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Added selenium tests for the preview of the bibtex formatted data, for the copy to clipboard, and for the download in bibtex format.\r\nAlso fixed bibtex field for \"howpublished\" ending in \"None\" value when the dataset has not been uploaded to zenodo or fakenodo",
    "created_at": "2024-12-15T08:41:35Z",
    "updated_at": "2024-12-16T17:03:14Z",
    "closed_at": "2024-12-16T17:03:13Z",
    "merged_at": "2024-12-16T17:03:13Z",
    "merge_commit_sha": "8624b3452499ecb0f273c673db5c5c9e38a5707b",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/33/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/33/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/33/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/ef2278271a8b51a44550f305ad73a17f2b4867bc",
    "head": {
      "label": "flamenquin-hub-single:feature-test-bibtex-download",
      "ref": "feature-test-bibtex-download",
      "sha": "ef2278271a8b51a44550f305ad73a17f2b4867bc",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "3de08af2771e0ba486dc575110bd89585e161678",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/33"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/33"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/33"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/33/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/33/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/33/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/ef2278271a8b51a44550f305ad73a17f2b4867bc"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "cfb2ad07ac4f4d23b584e066d708e1f13866002d",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ef2278271a8b51a44550f305ad73a17f2b4867bc/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ef2278271a8b51a44550f305ad73a17f2b4867bc/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=ef2278271a8b51a44550f305ad73a17f2b4867bc",
        "patch": "@@ -293,8 +293,10 @@ def get_unsynchronized_dataset(dataset_id):\n         \"annote\": ds_meta_data.description\n     }\n     texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n-    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n-    \n+    if ds_meta_data.deposition_id:\n+        bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    else:\n+        bibtex_propiedades.pop(\"howpublished\")\n     lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n     lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n "
      },
      {
        "sha": "c2a647f24808048b133237ed3ce6906e4b48f786",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ef2278271a8b51a44550f305ad73a17f2b4867bc/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ef2278271a8b51a44550f305ad73a17f2b4867bc/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=ef2278271a8b51a44550f305ad73a17f2b4867bc",
        "patch": "@@ -191,7 +191,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n                 <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n-                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                <button id=\"bibtex_preview_btn\" onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                     <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n \n@@ -423,7 +423,7 @@ <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex\n                         style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n                         <i data-feather=\"download\"></i>\n                     </a>\n-                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                    <button id=\"bibtex_copy_btn\" onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n                         style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n                         <i data-feather=\"copy\"></i>\n                     </button>"
      },
      {
        "sha": "7f2bcf42ace80c1743ddc5ab39335e96e6aaf4a4",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 425,
        "deletions": 0,
        "changes": 425,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ef2278271a8b51a44550f305ad73a17f2b4867bc/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ef2278271a8b51a44550f305ad73a17f2b4867bc/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=ef2278271a8b51a44550f305ad73a17f2b4867bc",
        "patch": "@@ -1,14 +1,44 @@\n import os\n import time\n+from flask import url_for\n+from datetime import datetime\n+from pathlib import Path\n \n+from selenium import webdriver\n from selenium.webdriver.common.by import By\n from selenium.webdriver.common.keys import Keys\n from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.common.exceptions import NoSuchElementException\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.webdriver.chrome.service import Service\n+from webdriver_manager.chrome import ChromeDriverManager\n \n from core.environment.host import get_host_for_selenium_testing\n from core.selenium.common import initialize_driver, close_driver\n \n \n+def get_driver_with_download_cwdir():\n+    # Initializes the browser options\n+    prefs = {\n+        \"download.default_directory\": os.getcwd(),\n+        \"download.directory_upgrade\": True,\n+        \"download.prompt_for_download\": False,\n+    }\n+    options = webdriver.ChromeOptions()\n+    options.add_experimental_option(\"prefs\", prefs)\n+\n+    driver_path = ChromeDriverManager().install()\n+\n+\n+    # Initialise the browser using WebDriver Manager\n+    chrome_driver_binary = os.path.join(os.path.dirname(driver_path), 'chromedriver')\n+    \n+    service = Service(chrome_driver_binary)\n+    \n+    \n+    driver = webdriver.Chrome(service=service, options=options)\n+    return driver\n+\n def wait_for_page_to_load(driver, timeout=4):\n     WebDriverWait(driver, timeout).until(\n         lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n@@ -25,6 +55,158 @@ def count_datasets(driver, host):\n         amount_datasets = 0\n     return amount_datasets\n \n+def has_datasets_synced(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//div[@class='card-body']//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets\n+\n+def has_datasets_unsynced(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//div[@class='card-body']//div[@class='card-body']//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets>0\n+\n+def exist_published_datasets(driver, host):\n+    driver.get(f\"{host}/explore\")\n+    wait_for_page_to_load(driver)\n+    try:\n+        amount_datasets = len(driver.find_element(By.ID, 'results').find_elements(By.CSS_SELECTOR, 'div.card'))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets>0\n+\n+def get_url_detalles(driver, host):\n+    if exist_published_datasets(driver, host):\n+        result = driver.find_element(By.ID, 'results').find_element(By.XPATH, '//div[@class=\"card\"]//a').get_attribute('href')\n+    else:\n+        # Open the login page\n+        driver.get(f\"{host}/login\")\n+        wait_for_page_to_load(driver)\n+\n+        # Find the username and password field and enter the values\n+        email_field = driver.find_element(By.NAME, \"email\")\n+        password_field = driver.find_element(By.NAME, \"password\")\n+\n+        email_field.send_keys(\"user1@example.com\")\n+        password_field.send_keys(\"1234\")\n+\n+        # Send the form\n+        password_field.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        if has_datasets_synced(driver, host): # tiene datasets publicados, usar esos\n+            result = driver.find_element(By.XPATH, \"//div[@class='card-body']//table//tbody//tr//td//a\").get_attribute('href')\n+        elif has_datasets_unsynced(driver, host): # solo tiene datasets sin publicar\n+            result = f\"{host}\" + driver.find_element(By.XPATH, \"//div[@class='card-body']//div[@class='card-body']//table//tbody//tr//td//a\").get_attribute('href')\n+        else: # No tiene datasets, crear uno\n+            # Count initial datasets\n+            initial_datasets = count_datasets(driver, host)\n+\n+            # Open the upload dataset\n+            driver.get(f\"{host}/dataset/upload\")\n+            wait_for_page_to_load(driver)\n+\n+            datos_dataset = {\n+                \"titulo\": \"Titulo prueba bibtex\",\n+                \"descripcion\": \"Descripcion prueba bibtex\",\n+                \"tags\": \"tag1,tag2\"\n+            }\n+            autores_dataset = [\n+                    {\"name\": \"AutorBibtex0\", \"affiliation\": \"Club0\",\"orcid\":\"0000-0000-0000-0000\"},\n+                    {\"name\": \"AutorBibtex1\", \"affiliation\": \"Club1\"},\n+                    {\"name\": \"AutorBibtex3\", \"affiliation\": \"Club3\"}\n+            ]\n+\n+            # Find basic info and UVL model and fill values\n+            title_field = driver.find_element(By.NAME, \"title\")\n+            title_field.send_keys(datos_dataset.get(\"titulo\"))\n+            desc_field = driver.find_element(By.NAME, \"desc\")\n+            desc_field.send_keys(datos_dataset.get(\"descripcion\"))\n+            tags_field = driver.find_element(By.NAME, \"tags\")\n+            tags_field.send_keys(datos_dataset.get(\"tags\"))\n+\n+            # Add two authors and fill\n+            add_author_button = driver.find_element(By.ID, \"add_author\")\n+            add_author_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+            add_author_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+            name_field0 = driver.find_element(By.NAME, \"authors-0-name\")\n+            name_field0.send_keys(autores_dataset[0].get(\"name\"))\n+            affiliation_field0 = driver.find_element(By.NAME, \"authors-0-affiliation\")\n+            affiliation_field0.send_keys(autores_dataset[0].get(\"affiliation\"))\n+            orcid_field0 = driver.find_element(By.NAME, \"authors-0-orcid\")\n+            orcid_field0.send_keys(autores_dataset[0].get(\"orcid\"))\n+\n+            name_field1 = driver.find_element(By.NAME, \"authors-1-name\")\n+            name_field1.send_keys(autores_dataset[1].get(\"name\"))\n+            affiliation_field1 = driver.find_element(By.NAME, \"authors-1-affiliation\")\n+            affiliation_field1.send_keys(autores_dataset[1].get(\"affiliation\"))\n+\n+            # Obt\u00e9n las rutas absolutas de los archivos\n+            file1_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file1.uvl\")\n+            file2_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file2.uvl\")\n+\n+            # Subir el primer archivo\n+            dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+            dropzone.send_keys(file1_path)\n+            wait_for_page_to_load(driver)\n+\n+            # Subir el segundo archivo\n+            dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+            dropzone.send_keys(file2_path)\n+            wait_for_page_to_load(driver)\n+\n+            # Add authors in UVL models\n+            show_button = driver.find_element(By.ID, \"0_button\")\n+            show_button.send_keys(Keys.RETURN)\n+            add_author_uvl_button = driver.find_element(By.ID, \"0_form_authors_button\")\n+            add_author_uvl_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+            name_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-name\")\n+            name_field.send_keys(\"AutorBibtex3\")\n+            affiliation_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-affiliation\")\n+            affiliation_field.send_keys(\"Club3\")\n+\n+            # Check I agree and send form\n+            check = driver.find_element(By.ID, \"agreeCheckbox\")\n+            check.send_keys(Keys.SPACE)\n+            wait_for_page_to_load(driver)\n+\n+            upload_btn = driver.find_element(By.ID, \"upload_button\")\n+            upload_btn.send_keys(Keys.RETURN)\n+            \n+            wait_for_page_to_load(driver)\n+            time.sleep(2)  # Force wait time\n+\n+            assert driver.current_url == f\"{host}/dataset/list\", \"Test failed!\"\n+\n+            # Count final datasets\n+            final_datasets = count_datasets(driver, host)\n+            assert final_datasets == initial_datasets + 1, \"Test failed!\"\n+            \n+            listado_unsync = driver.find_element(By.CLASS_NAME, \"row\") # TODO: encontrar el primer elemento de tipo tbody\n+            dataset_creado = listado_unsync.find_element(By.XPATH, \"//table//tbody//tr\")\n+            \n+            info_dataset_creado = dataset_creado.find_elements(By.TAG_NAME, \"td\")\n+\n+            title_matches = info_dataset_creado[0].find_element(By.TAG_NAME, 'a').text==datos_dataset.get(\"titulo\")\n+            desc_matches = info_dataset_creado[1].text==datos_dataset.get(\"descripcion\")\n+            pub_type_matches = info_dataset_creado[2].text==\"None\"\n+\n+            assert title_matches and desc_matches and pub_type_matches, \"Test failed!\"\n+            result = f\"{host}\" + info_dataset_creado[0].find_element(By.TAG_NAME, 'a').get_attribute('href')\n+    return result\n \n def test_upload_dataset():\n     driver = initialize_driver()\n@@ -130,6 +312,249 @@ def test_upload_dataset():\n         # Close the browser\n         close_driver(driver)\n \n+def test_bibtex_preview():\n+    driver = initialize_driver()\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LA PREVIEW MUESTRA EL DATASET EXPORTADO A BIBTEX CORRECTAMENTE\n+        contenido_bibtex = driver.find_element(By.ID, \"bibtexContent\").text\n+        assert contenido_bibtex is not None and contenido_bibtex!=\"None\", \"Test failed!\"\n+\n+        lineas = contenido_bibtex.splitlines()\n+\n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        \n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+def test_bibtex_copy():\n+    driver = initialize_driver()\n+    \n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LOS DATOS SE COPIAN CORRECTAMENTE EN FORMATO BIBTEX\n+        bibtex_copy_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_copy_btn']\")\n+        bibtex_copy_btn.click()\n+        time.sleep(2)\n+        \n+\n+        try:\n+            driver.find_element(By.XPATH, \"//a[@href='/logout']\")\n+        except NoSuchElementException: # No ha iniciado sesion\n+            driver.get(f\"{host}/login\")\n+            wait_for_page_to_load(driver)\n+            \n+            # Find the username and password field and enter the values\n+            email_field = driver.find_element(By.NAME, \"email\")\n+            password_field = driver.find_element(By.NAME, \"password\")\n+\n+            email_field.send_keys(\"user1@example.com\")\n+            password_field.send_keys(\"1234\")\n+\n+            # Send the form\n+            password_field.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+        # Open the upload dataset\n+        driver.get(f\"{host}/dataset/upload\")\n+        wait_for_page_to_load(driver)\n+\n+        desc_field = driver.find_element(By.NAME, \"desc\")\n+        desc_field.send_keys(Keys.LEFT_CONTROL, 'v')\n+        \n+        lineas = desc_field.get_attribute(\"value\").strip().splitlines()\n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+\n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+def test_bibtex_download():\n+    driver = get_driver_with_download_cwdir()\n+    \n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LOS DATOS SE DESCARGAN CORRECTAMENTE EN FORMATO BIBTEX\n+        bibtex_download_btn = driver.find_element(By.XPATH, \"//a[@id='bibtexDownloadButton']\")\n+        bibtex_download_btn.click()\n+        time.sleep(2)\n+        \n+        file_path = os.path.join(os.getcwd(), bibtex_download_btn.get_attribute('download'))\n+\n+        lineas = []\n+\n+        with open(file_path, 'r', encoding='utf-8') as archivo:\n+            lineas.extend(archivo.readlines())\n+        os.remove(file_path)\n+        \n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+        \n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n \n # Call the test function\n test_upload_dataset()\n+test_bibtex_preview()\n+test_bibtex_copy()\n+test_bibtex_download()\n\\ No newline at end of file"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/32",
    "id": 2235378590,
    "node_id": "PR_kwDONDG85c6FPSue",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/32",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/32.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/32.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/32",
    "number": 32,
    "state": "closed",
    "locked": false,
    "title": "feat(tests): sync with github tests",
    "user": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-14T21:56:05Z",
    "updated_at": "2024-12-15T17:40:46Z",
    "closed_at": "2024-12-15T17:40:46Z",
    "merged_at": "2024-12-15T17:40:46Z",
    "merge_commit_sha": "3c4d410132066dd89296aa0920764acddb6f2265",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/32/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/32/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/32/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
    "head": {
      "label": "flamenquin-hub-single:feature-sync-with-github",
      "ref": "feature-sync-with-github",
      "sha": "e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "275789936b5f3be522fdcc4489b66e8abe8aa0da",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/32"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/32"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/32"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/32/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/32/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/32/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "e4637074898a1a93c1a06f57ccd6ac82c64c8065",
        "filename": "app/modules/auth/tests/locustfile.py",
        "status": "modified",
        "additions": 52,
        "deletions": 1,
        "changes": 53,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,4 +1,5 @@\n from locust import HttpUser, TaskSet, task\n+import requests\n from core.locust.common import get_csrf_token, fake\n from core.environment.host import get_host_for_locust_testing\n \n@@ -51,8 +52,58 @@ def login(self):\n             print(f\"Login failed: {response.status_code}\")\n \n \n+class InviteBehavior(TaskSet):\n+    def on_start(self):\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def invite_user(self):\n+        github_user_response = requests.get(\"https://api.github.com/user\", headers={\n+            \"Authorization\": \"token example_valid_token\",\n+            \"Accept\": \"application/vnd.github.v3+json\"\n+        })\n+\n+        if github_user_response.status_code != 200:\n+            print(f\"Failed to fetch GitHub user info: {github_user_response.status_code}\")\n+\n+        username = github_user_response.json().get(\"login\")\n+        if not username:\n+            print(\"Failed to fetch GitHub username.\")\n+\n+        response = self.client.post(\"/invite\", json={\n+            \"github_username\": username\n+        })\n+        \n+        if response.status_code == 201:\n+            print(f\"Invitation sent successfully to {username}.\")\n+        elif response.status_code == 404:\n+            print(f\"GitHub user {username} not found.\")\n+        elif response.status_code == 422:\n+            print(f\"User {username} already belongs to the organization.\")\n+        else:\n+            print(f\"Invitation failed with status: {response.status_code} - {response.text}\")\n+\n+\n+\n+\n class AuthUser(HttpUser):\n-    tasks = [SignupBehavior, LoginBehavior]\n+    tasks = [SignupBehavior, LoginBehavior, InviteBehavior]\n     min_wait = 5000\n     max_wait = 9000\n     host = get_host_for_locust_testing()\n+    \n+    "
      },
      {
        "sha": "729195481b361557670716d39a2979257d9a1374",
        "filename": "app/modules/auth/tests/test_unit.py",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,3 +1,4 @@\n+from unittest.mock import MagicMock, patch\n import pytest\n from flask import url_for\n \n@@ -117,3 +118,39 @@ def test_service_create_with_profile_fail_no_password(clean_database):\n \n     assert UserRepository().count() == 0\n     assert UserProfileRepository().count() == 0\n+    \n+    \n+    \n+@patch('flask_dance.contrib.github.github')  \n+def test_redirect_to_login(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(authorized=False)\n+\n+    response = test_client.get('/gitlogin')\n+\n+    assert response.status_code == 302\n+    assert \"/github\" in response.location, f\"Expected redirection to github, got {response.request.path}\"\n+    \n+    \n+\n+@patch('flask_dance.contrib.github.github')\n+def test_invite_user_no_sync_error(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(ok=False)\n+\n+    response = test_client.post('/invite')\n+\n+    assert response.status_code == 200\n+    assert b\"First sync your github account.\" in response.data\n+\n+\n+@patch('flask_dance.contrib.github.github')\n+def test_create_repo_no_sync_error(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(ok=False)\n+\n+    response = test_client.post('/create_repo')\n+\n+    assert response.status_code == 200\n+    assert b\"First sync your github account.\" in response.data\n+    \n+\n+\n+"
      },
      {
        "sha": "7fcee88cff634a5c5758ca28e81b4f9d89ad904b",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 81,
        "deletions": 3,
        "changes": 84,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,3 +1,5 @@\n+\n+import random\n from locust import HttpUser, TaskSet, task, between\n from core.locust.common import get_csrf_token\n from core.environment.host import get_host_for_locust_testing\n@@ -13,6 +15,80 @@ def dataset_upload(self):\n         \"\"\"Simula la carga de la p\u00e1gina de subida de datasets.\"\"\"\n         response = self.client.get(\"/dataset/upload\")\n         get_csrf_token(response)\n+        \n+        \n+class CommitDatasetBehavior(TaskSet):\n+    def on_start(self):\n+        \"\"\"Simulate user login before running the commit task.\"\"\"\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        \"\"\"Ensure the user is authenticated.\"\"\"\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}, {response.text}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def commit_dataset(self):\n+        dataset_id = random.randint(1, 10)\n+        response = self.client.post(f\"/dataset/commit/{dataset_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"Dataset {dataset_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"Dataset {dataset_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for dataset {dataset_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for dataset {dataset_id}: {response.status_code} - {response.text}\")\n+\n+\n+\n+class CommitFileBehavior(TaskSet):\n+    def on_start(self):\n+        \"\"\"Simulate user login before running the commit task.\"\"\"\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        \"\"\"Ensure the user is authenticated.\"\"\"\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}, {response.text}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def commit_dataset(self):\n+        file_id = random.randint(1, 30)  \n+        response = self.client.post(f\"/dataset/commit_file/{file_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"File {file_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"File {file_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for File {file_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n+\n \n     @task(4)\n     def download_dataset_glencoe(self):\n@@ -40,7 +116,9 @@ def download_dataset_zip(self):\n \n \n class DatasetUser(HttpUser):\n-    \"\"\"Clase principal que define los usuarios y su comportamiento.\"\"\"\n-    tasks = [DatasetBehavior]\n+      \"\"\"Clase principal que define los usuarios y su comportamiento.\"\"\"\n+    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n     wait_time = between(5, 9)  # Espera entre 5 y 9 segundos entre tareas\n-    host = get_host_for_locust_testing()\n\\ No newline at end of file\n+    host = get_host_for_locust_testing()"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/30",
    "id": 2234367713,
    "node_id": "PR_kwDONDG85c6FLb7h",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/30",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/30.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/30.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/30",
    "number": 30,
    "state": "closed",
    "locked": false,
    "title": "Feature test advanced filtering",
    "user": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Add unit, Locust and Selenium tests for advanced filtering",
    "created_at": "2024-12-13T18:56:00Z",
    "updated_at": "2024-12-16T18:44:05Z",
    "closed_at": "2024-12-16T18:44:04Z",
    "merged_at": "2024-12-16T18:44:04Z",
    "merge_commit_sha": "b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/30/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/30/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/30/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/98f1e1474a4010bc1ed69fbccb52d551a20378e2",
    "head": {
      "label": "flamenquin-hub-single:feature-test-advanced-filtering",
      "ref": "feature-test-advanced-filtering",
      "sha": "98f1e1474a4010bc1ed69fbccb52d551a20378e2",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "8624b3452499ecb0f273c673db5c5c9e38a5707b",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/30"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/30"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/30"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/30/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/30/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/30/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/98f1e1474a4010bc1ed69fbccb52d551a20378e2"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "3ac01b8f10bb827b95ce6876277e804d60170a31",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -17,3 +17,4 @@ jobs:\n     steps:\n       - uses: actions/checkout@v2\n       - uses: webiny/action-conventional-commits@v1.0.3\n+"
      },
      {
        "sha": "60ac481b376c09e6ea0c8b828c153b2740ae6395",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -111,7 +111,6 @@ def filter(self, query=\"\", sorting=\"newest\",\n \n                 if leaf_feature_name:\n                     leaf_feature_names = model.get_leaf_feature_names()\n-                    print(leaf_feature_name)\n                     if leaf_feature_name not in leaf_feature_names:\n                         continue\n "
      },
      {
        "sha": "ced80b7517d89a162d492da956699330c37a4fc4",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -164,7 +164,7 @@ <h3 class=\"h3 mb-3\">\n                         <div class=\"col-6\">\n \n                             <div>\n-                                Sort results by creation date\n+                                Sort results by creation date and dataset size\n                                 <label class=\"form-check\">\n                                     <input class=\"form-check-input\" type=\"radio\" value=\"newest\" name=\"sorting\"\n                                            checked=\"\">"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/explore/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2"
      },
      {
        "sha": "76f065ed0e5628ded1f600437129886e692c1912",
        "filename": "app/modules/explore/tests/locustfile.py",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,38 @@\n+from flask import json\n+from locust import HttpUser, TaskSet, task\n+from core.locust.common import get_csrf_token, fake\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class ExploreBehavior(TaskSet):\n+\n+    @task\n+    def explore(self):\n+        response = self.client.get(\"/explore\")\n+        if response.status_code != 200:\n+            print(f\"Explore failed: {response.status_code}\")\n+\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/explore\",\n+                                    headers={\"Content-Type\": \"application/json\"},\n+                                    data=json.dumps({\n+                                        \"min_files\": fake.random_int(min=1, max=5),\n+                                        \"max_files\": fake.random_int(min=2, max=6),\n+                                        \"max_depth\": fake.random_int(min=0, max=3),\n+                                        \"min_depth\": fake.random_int(min=2, max=6),\n+                                        \"min_leaf_count\": fake.random_int(min=0, max=10),\n+                                        \"max_leaf_count\": fake.random_int(min=5, max=15),\n+                                        \"min_av_branching_factor\": fake.random_int(min=0, max=2),\n+                                        \"max_av_branching_factor\": fake.random_int(min=1, max=4),\n+                                        \"csrf_token\": csrf_token\n+                                    }))\n+        if response.status_code != 200:\n+            print(f\"Filtering failed: {response.status_code}\")\n+\n+\n+class ExploreUser(HttpUser):\n+    tasks = [ExploreBehavior]\n+    min_wait = 3000\n+    max_wait = 7000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "4e155914f9dbbabc2336450f156f1534d51a3c3d",
        "filename": "app/modules/explore/tests/test_selenium.py",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,74 @@\n+import pytest\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.common.exceptions import TimeoutException, NoSuchElementException\n+from core.selenium.common import initialize_driver, close_driver\n+import time\n+\n+\n+def test_check_smallest_first():\n+    driver = initialize_driver()\n+    try:\n+        driver.get(\"http://localhost:5000/explore\")\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.XPATH, \"//input[@value='filesize_asc']\"))\n+        )\n+        driver.execute_script(\"arguments[0].click();\", results_container)\n+        time.sleep(3)\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"results\"))\n+        )\n+        first_result = WebDriverWait(results_container, 10).until(\n+            EC.presence_of_element_located((By.CSS_SELECTOR, \"div:nth-child(1)\"))\n+        )\n+        dataset_name = first_result.text\n+\n+        assert \"Sample dataset 4\" in dataset_name, f\"Test failed: Expected 'Sample dataset 4', but got '{dataset_name}'\"\n+        print(\"Test passed: The first dataset is 'Sample dataset 4'.\")\n+\n+    except TimeoutException:\n+        pytest.fail(\"Error: Timeout while waiting for elements to load.\")\n+    except NoSuchElementException:\n+        pytest.fail(\"Error: Unable to locate the required element.\")\n+    except AssertionError as e:\n+        pytest.fail(f\"Test failed: {e}\")\n+\n+    finally:\n+        close_driver(driver)\n+\n+\n+def test_check_largest_first():\n+    driver = initialize_driver()\n+    try:\n+        driver.get(\"http://localhost:5000/explore\")\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.XPATH, \"//input[@value='filesize_desc']\"))\n+        )\n+        driver.execute_script(\"arguments[0].click();\", results_container)\n+        time.sleep(3)\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"results\"))\n+        )\n+        first_result = WebDriverWait(results_container, 10).until(\n+            EC.presence_of_element_located((By.CSS_SELECTOR, \"div:nth-child(1)\"))\n+        )\n+        dataset_name = first_result.text\n+\n+        assert \"Sample dataset 2\" in dataset_name, f\"Test failed: Expected 'Sample dataset 2', but got '{dataset_name}'\"\n+        print(\"Test passed: The first dataset is 'Sample dataset 2'.\")\n+\n+    except TimeoutException:\n+        pytest.fail(\"Error: Timeout while waiting for elements to load.\")\n+    except NoSuchElementException:\n+        pytest.fail(\"Error: Unable to locate the required element.\")\n+    except AssertionError as e:\n+        pytest.fail(f\"Test failed: {e}\")\n+\n+    finally:\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_check_smallest_first()\n+test_check_largest_first()"
      },
      {
        "sha": "4d5c6df3f18720dcb307ee18edf67c413e3a5a4e",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "added",
        "additions": 133,
        "deletions": 0,
        "changes": 133,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,133 @@\n+import pytest\n+from app.modules.explore.services import ExploreService\n+from app.modules.auth.seeders import AuthSeeder\n+from app.modules.dataset.seeders import DataSetSeeder\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Fixture that sets up the test environment by initializing necessary data:\n+    - Seeds users via AuthSeeder.\n+    - Seeds datasets via DataSetSeeder.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        users = AuthSeeder()\n+        users.run()\n+\n+        seeder = DataSetSeeder()\n+        seeder.run()\n+\n+    yield test_client\n+\n+\n+def test_filtering_service_file_count(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the number of files within the specified range (0 to 10).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_files=0, max_files=10)\n+    expected_dataset_count = 4  # Expected all datasets, 4.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_num_of_leaf(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the number of leaf nodes within the specified range (2 to 6).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_leaf_count=2, max_leaf_count=6)\n+    expected_dataset_count = 1  # Expect only dataset 4, as it is the file \"file10.uvl,\" which has 6 leaves.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_check_filtering_service_no_results(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly filters all datasets\n+    based on the number of leaf nodes, as the maximum is lower than the minimum.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_leaf_count=300, max_leaf_count=299)\n+    expected_dataset_count = 0  # Expect no datasets.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_depth(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the depth within the specified range (3 to 10).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_depth=3, max_depth=10)\n+    expected_dataset_count = 3\n+    # Expect all datasets except dataset 3, as it is the file \"file10.uvl,\" which has a depth of 2.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_average_branching_factor(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the average branching factor within the specified range (0 to 2).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_av_branching_factor=0, max_av_branching_factor=2)\n+    expected_dataset_count = 2\n+    # Expect datasets \"sample dataset 2\" and \"sample dataset 4\" for the file \"file5.uvl\"\n+    # and \"file10.uvl\" as both files have an average branching factor of 2.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_leaf_feature_name(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the leaf feature name \"Server\".\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(leaf_feature_name=\"Server\")\n+    expected_dataset_count = 2\n+    # Expected datasets \"sample dataset 1\" and \"sample dataset 3\" for the files \"file1.uvl\"\n+    # and \"file9.uvl\" as they are identical and contain \"Server\" in the leaf feature name.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_core_feature_name(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the core feature name \"FitnessMonitor\".\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(core_feature_name=\"FitnessMonitor\")\n+    expected_dataset_count = 2\n+    # Expected datasets \"sample dataset 1\" and \"sample dataset 2\" for the files \"file2.uvl\"\n+    # and \"file5.uvl\" as they contain \"FitnessMonitor\" in the core feature name.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_check_sorting_smallest_first(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly sorts datasets\n+    based on the size, with smallest first.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets_sorted = explore_service.filter(sorting=\"filesize_asc\")\n+    first_ds = datasets_sorted[0]\n+    assert first_ds.name()==\"Sample dataset 4\", f\"Expected smallest dataset to be 'Sample dataset 4', but got '{first_ds.name()}' instead\"\n+\n+def test_check_sorting_largest_first(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly sorts datasets\n+    based on the size, with largest first.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets_sorted = explore_service.filter(sorting=\"filesize_desc\")\n+    first_ds = datasets_sorted[0]\n+    assert first_ds.name()==\"Sample dataset 2\", f\"Expected smallest dataset to be 'Sample dataset 2', but got '{first_ds.name()}' instead\"\n\\ No newline at end of file"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/29",
    "id": 2233632648,
    "node_id": "PR_kwDONDG85c6FIoeI",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/29",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/29.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/29.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/29",
    "number": 29,
    "state": "closed",
    "locked": false,
    "title": "Version 1.0",
    "user": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Stable release with proper progress in WI and related testing and features",
    "created_at": "2024-12-13T11:29:39Z",
    "updated_at": "2024-12-13T17:00:13Z",
    "closed_at": "2024-12-13T17:00:13Z",
    "merged_at": "2024-12-13T17:00:13Z",
    "merge_commit_sha": "effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/29/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/29/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/29/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/3de08af2771e0ba486dc575110bd89585e161678",
    "head": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "3de08af2771e0ba486dc575110bd89585e161678",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:main",
      "ref": "main",
      "sha": "aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/29"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/29"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/29"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/29/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/29/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/29/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/3de08af2771e0ba486dc575110bd89585e161678"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "3a4460bd0a2880b2fee2b1af57cf067bd57495e0",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,18 +1,19 @@\n-name: Commits Syntax Checker\n+name: Commit Message Check\n \n-on:\n+on: \n   pull_request:\n-    branches: [main]\n+    branches: [develop]\n     types: [opened, reopened, edited, review_requested, synchronize]\n   push:\n     branches:\n       - \"main\"\n+      - \"develop\"\n   workflow_call:\n \n jobs:\n-  check:\n+  commit-check:\n     name: Conventional Commits\n     runs-on: ubuntu-latest\n     steps:\n       - uses: actions/checkout@v2\n-      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file\n+      - uses: webiny/action-conventional-commits@v1.0.3"
      },
      {
        "sha": "c5b9dbad0e7570244cb84942b53b859bf041af6c",
        "filename": ".github/workflows/deloyment_on_webhook.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeloyment_on_webhook.yml?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -1,32 +0,0 @@\n-name: Deploy on Webhook\n-\n-on:\n-  workflow_run:\n-    workflows: \n-      - \"Python Lint\"\n-      - \"Run tests\"\n-    types:\n-      - completed\n-\n-jobs:\n-  deploy:\n-    if: github.ref == 'refs/heads/main'\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Check lint and test results\n-      run: |\n-        if [ \"${{ github.event.workflow_run.conclusion }}\" != \"success\" ]; then\n-          echo \"Lint or Test workflow did not succeed. Exiting.\"\n-          exit 1\n-        fi\n-\n-    - name: Trigger Deployment Webhook\n-      env:\n-        WEBHOOK_DOMAIN: ${{ secrets.WEBHOOK_DOMAIN }}\n-        WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}\n-      run: |\n-        curl -X POST https://${{ secrets.WEBHOOK_DOMAIN }}/webhook/deploy -H \"Authorization: Bearer ${{ secrets.WEBHOOK_TOKEN }}\""
      },
      {
        "sha": "f7dfe75eb96badbdd3ee434377bee31f33a173df",
        "filename": ".github/workflows/deployment_on_dockerhub.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -1,43 +0,0 @@\n-# This workflow uses actions that are not certified by GitHub.\n-# They are provided by a third-party and are governed by\n-# separate terms of service, privacy policy, and support\n-# documentation.\n-\n-# GitHub recommends pinning actions to a commit SHA.\n-# To get a newer version, you will need to update the SHA.\n-# You can also reference a tag or branch, but the action may change without warning.\n-\n-name: Publish image in Docker Hub\n-\n-on:\n-  release:\n-    types: [published]\n-\n-jobs:\n-  push_to_registry:\n-    name: Push Docker image to Docker Hub\n-    runs-on: ubuntu-latest\n-    steps:\n-      - name: Check out the repo\n-        uses: actions/checkout@v3\n-\n-      - name: Log in to Docker Hub\n-        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a\n-        with:\n-          username: ${{ secrets.DOCKER_USER }}\n-          password: ${{ secrets.DOCKER_PASSWORD }}\n-\n-      - name: Build and push Docker image\n-        run: docker build --build-arg VERSION_TAG=${{ github.event.release.tag_name }} -t drorganvidez/uvlhub:${{ github.event.release.tag_name }} -f docker/images/Dockerfile.prod .\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled\n-\n-      - name: Push Docker image to Docker Hub\n-        run: docker push drorganvidez/uvlhub:${{ github.event.release.tag_name }}\n-\n-      - name: Tag and push latest\n-        run: |\n-          docker tag drorganvidez/uvlhub:${{ github.event.release.tag_name }} drorganvidez/uvlhub:latest\n-          docker push drorganvidez/uvlhub:latest\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled"
      },
      {
        "sha": "ccbd3311ba585fae0de19dc7a96de461fce8de9c",
        "filename": ".github/workflows/lint.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2Fworkflows%2Flint.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2Fworkflows%2Flint.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Flint.yml?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -1,28 +0,0 @@\n-name: Python Lint\n-\n-on:\n-  push:\n-    branches: [main, develop]\n-  pull_request:\n-    branches: [main, develop]\n-\n-jobs:\n-  lint:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - uses: actions/checkout@v2\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: '3.x'\n-\n-    - name: Install Dependencies\n-      run: |\n-        python -m pip install --upgrade pip\n-        pip install flake8\n-\n-    - name: Lint with flake8\n-      run: |\n-        flake8 app"
      },
      {
        "sha": "b9ea75aabfdbeb0e5b637b8d0741cec8dc7d86a2",
        "filename": ".github/workflows/render.yml",
        "status": "added",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -0,0 +1,73 @@\n+name: Deploy develop branch to Render\n+\n+on:\n+    push:\n+      branches:\n+        - develop\n+    pull_request:\n+      branches:\n+        - develop\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+      with:\n+        ref: 'develop'\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_DEVELOP }}\n+          ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+          GH_TOKEN: ${{ secrets.GH_TOKEN }}\n+          GH_PAT: ${{ secrets.GH_PAT }}\n+          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}\n+        run: |\n+          curl \"$deploy_url\"\n+      \n\\ No newline at end of file"
      },
      {
        "sha": "5da736f7ffdcb35e11a740078b764998001a201b",
        "filename": ".github/workflows/render_main.yml",
        "status": "added",
        "additions": 70,
        "deletions": 0,
        "changes": 70,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/.github%2Fworkflows%2Frender_main.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/.github%2Fworkflows%2Frender_main.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender_main.yml?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -0,0 +1,70 @@\n+name: Deploy main branch to Render\n+\n+on:\n+    push:\n+      branches:\n+        - main\n+    pull_request:\n+      branches:\n+        - main\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_RENDER }}\n+          ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+          GH_TOKEN: ${{ secrets.GH_TOKEN }}\n+          GH_PAT: ${{ secrets.GH_PAT }}\n+        run: |\n+          curl \"$deploy_url\"\n+      "
      },
      {
        "sha": "8ad25762a0dbb9b820352c6abaf50a7e089c893d",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -46,5 +46,6 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n       run: |\n-        pytest app/modules/ --ignore-glob='*selenium*'\n+        pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      },
      {
        "sha": "b0431891f8f32b950472e8d4adf47ba6b271e288",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitignore?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,7 +1,6 @@\n .env\n __pycache__/\n .idea\n-uploads/\n app.log\n .DS_Store\n rosemary.egg-info/"
      },
      {
        "sha": "fdd63b05e87cb4c63240ad04afb83e89340a1d1c",
        "filename": "app/__init__.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2F__init__.py?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -67,4 +67,4 @@ def inject_vars_into_jinja():\n     return app\n \n \n-app = create_app()\n+app = create_app()\n\\ No newline at end of file"
      },
      {
        "sha": "c8105b78321f80b32919280eedbd30d2feeed6e7",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 106,
        "deletions": 2,
        "changes": 108,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,15 +1,28 @@\n-from flask import render_template, redirect, url_for, request\n+import os\n+import shutil\n+import subprocess\n+from flask import Flask, jsonify, render_template, redirect, url_for, request\n from flask_login import current_user, login_user, logout_user\n-\n+import requests\n from app.modules.auth import auth_bp\n from app.modules.auth.forms import SignupForm, LoginForm\n from app.modules.auth.services import AuthenticationService\n from app.modules.profile.services import UserProfileService\n+from flask_dance.contrib.github import make_github_blueprint, github\n \n \n authentication_service = AuthenticationService()\n user_profile_service = UserProfileService()\n \n+app = Flask(__name__)\n+token_admin = os.getenv(\"ORG_TOKEN_ADMIN\")\n+client_secret = os.getenv(\"CLIENT_SECRET\")\n+\n+\n+github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g', client_secret=client_secret)\n+\n+app.register_blueprint(github_blueprint, url_prefix='/github_login')\n+\n \n @auth_bp.route(\"/signup/\", methods=[\"GET\", \"POST\"])\n def show_signup_form():\n@@ -53,3 +66,94 @@ def login():\n def logout():\n     logout_user()\n     return redirect(url_for('public.index'))\n+\n+\n+@auth_bp.route('/gitlogin')\n+def github_login():\n+    \n+   if not github.authorized:\n+        return redirect(url_for('github.login'))\n+   else:\n+       account_info = github.get('/user/repos')\n+       if account_info.ok:\n+           account_info_json = account_info.json()\n+           return 'Your github account is already sync with uvlhub.'\n+\n+   return 'Request failed!'\n+\n+\n+@auth_bp.route('/invite', methods=['GET', 'POST'])\n+def invite_user():\n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return 'First sync your github account.'\n+              \n+    url = f'https://api.github.com/orgs/uvlhub/invitations'  \n+    headers = {\n+        'Authorization': f'token {token_admin}',\n+        'Accept': 'application/vnd.github.v3+json'\n+    }\n+    payload = {\n+        \"invitee_id\": None, \n+    }\n+\n+    # OBTENER EL ID DEL USUARIO DE GITHUB\n+    user_url = f'https://api.github.com/users/{username}'\n+    user_response = requests.get(user_url, headers=headers)\n+    \n+    if user_response.status_code == 200:\n+        user_id = user_response.json().get(\"id\")\n+        payload[\"invitee_id\"] = user_id  \n+        \n+    elif user_response.status_code == 404:\n+        return jsonify({\"error\": f\"Can't find the user: {username}\"}), 404\n+    else:\n+        return jsonify({\"error\": f\"Something went wrong\"}), user_response.status_code\n+        \n+    response = requests.post(url, json=payload, headers=headers)\n+\n+    if response.status_code == 201:\n+        return f\"Now {username} can join our github organization. Accept it in github. Once joined, you don't have to repeat this process.\"\n+    \n+    elif response.status_code == 404:\n+        return jsonify({\"error\": f\"Username {username} not found\"}), 404\n+    \n+    elif response.status_code == 422:\n+        return f'User {username} already belongs to our github organization or have a valid invitation to join. You have to find out in github.'\n+    \n+    else:\n+        return jsonify({\"error\": \"Can't send the invitation\", \"details\": response.json()}), response.status_code\n+    \n+\n+\n+@auth_bp.route('/create_repo', methods=['GET', 'POST'])\n+def crear_repo():\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return 'First sync your github account.'\n+\n+    comando = f\"gh repo create uvlhub/{username} --public\"\n+    url_repo = f\"https://github.com/uvlhub/{username}.git\"\n+    \n+    try:\n+        \n+        subprocess.run(comando, check=True, shell=True)\n+        directory = f\"/app/uvl_git/{username}\"\n+        os.makedirs(directory, exist_ok=True)\n+        subprocess.run(f\"git clone {url_repo} {directory}\",cwd=directory, check=True, shell=True)\n+        return f\"Repository '{username}' created in our github organization correctly.\"\n+    \n+    except subprocess.CalledProcessError as e:\n+        \n+        return (\n+            f\"Something went wrong, it may be caused by:<br>\"\n+            f\"1) Repository '{username}' is already created. Don't worry, now always you are sync with github, you can push from here your datasets or models to github.<br>\"\n+            f\"2) If you are a developer on localhost, you will have to give administrator permission.\"\n+        )    "
      },
      {
        "sha": "a76c25ccdf881eb721e29af34f2d893b5fb6d677",
        "filename": "app/modules/auth/services.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fauth%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fauth%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fservices.py?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -9,6 +9,7 @@\n from core.configuration.configuration import uploads_folder_name\n from core.services.BaseService import BaseService\n \n+os.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'\n \n class AuthenticationService(BaseService):\n     def __init__(self):"
      },
      {
        "sha": "e9ebaefb7b58ae220dcdaedf018126e58f6149b8",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 113,
        "deletions": 1,
        "changes": 114,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -139,6 +139,119 @@ var currentId = 0;\n \n         window.onload = function () {\n \n+            test_zenodo_connection();\n+\n+            document.getElementById('upload_button').addEventListener('click', function () {\n+\n+                clean_upload_errors();\n+                show_loading();\n+\n+                // check title and description\n+                let check = check_title_and_description();\n+\n+                if (check) {\n+                    // process data form\n+                    const formData = {};\n+\n+                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                        const form = document.getElementById(formId);\n+                        const inputs = form.querySelectorAll('input, select, textarea');\n+                        inputs.forEach(input => {\n+                            if (input.name) {\n+                                formData[input.name] = formData[input.name] || [];\n+                                formData[input.name].push(input.value);\n+                            }\n+                        });\n+                    });\n+\n+                    let formDataJson = JSON.stringify(formData);\n+                    console.log(formDataJson);\n+\n+                    const csrfToken = document.getElementById('csrf_token').value;\n+                    const formUploadData = new FormData();\n+                    formUploadData.append('csrf_token', csrfToken);\n+\n+                    for (let key in formData) {\n+                        if (formData.hasOwnProperty(key)) {\n+                            formUploadData.set(key, formData[key]);\n+                        }\n+                    }\n+\n+                    let checked_orcid = true;\n+                    if (Array.isArray(formData.author_orcid)) {\n+                        for (let orcid of formData.author_orcid) {\n+                            orcid = orcid.trim();\n+                            if (orcid !== '' && !isValidOrcid(orcid)) {\n+                                hide_loading();\n+                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                                checked_orcid = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    let checked_name = true;\n+                    if (Array.isArray(formData.author_name)) {\n+                        for (let name of formData.author_name) {\n+                            name = name.trim();\n+                            if (name === '') {\n+                                hide_loading();\n+                                write_upload_error(\"The author's name cannot be empty\");\n+                                checked_name = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    if (checked_orcid && checked_name) {\n+                        fetch('/dataset/upload', {\n+                            method: 'POST',\n+                            body: formUploadData\n+                        })\n+                            .then(response => {\n+                                if (response.ok) {\n+                                    console.log('Dataset sent successfully');\n+                                    response.json().then(data => {\n+                                        console.log(data.message);\n+                                        window.location.href = \"/dataset/list\";\n+                                    });\n+                                } else {\n+                                    response.json().then(data => {\n+                                        console.error('Error: ' + data.message);\n+                                        hide_loading();\n+\n+                                        write_upload_error(data.message);\n+\n+                                    });\n+                                }\n+                            })\n+                            .catch(error => {\n+                                console.error('Error in POST request:', error);\n+                            });\n+                    }\n+\n+\n+                } else {\n+                    hide_loading();\n+                }\n+\n+\n+            });\n+        };\n+\n+\n+        function isValidOrcid(orcid) {\n+            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+            return orcidRegex.test(orcid);\n+        }\n+\n+        function downloadDataset(datasetId, format) {\n+            const url = `/dataset/download/${datasetId}/${format}`;\n+            window.location.href = url;\n+        }\n+        \n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n@@ -275,7 +388,6 @@ var currentId = 0;\n \n \t\t\t});\n \t\t}\n-\t};\n \n \n function isValidOrcid(orcid) {"
      },
      {
        "sha": "bea556e6faeac932fc225d0430e8bfb3d8ee2a7c",
        "filename": "app/modules/dataset/repositories.py",
        "status": "modified",
        "additions": 33,
        "deletions": 2,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,5 +1,6 @@\n from datetime import datetime, timezone\n import logging\n+import re\n from flask_login import current_user\n from typing import Optional\n \n@@ -38,7 +39,7 @@ def __init__(self):\n \n     def filter_by_doi(self, doi: str) -> Optional[DSMetaData]:\n         return self.model.query.filter_by(dataset_doi=doi).first()\n-\n+    \n \n class DSViewRecordRepository(BaseRepository):\n     def __init__(self):\n@@ -113,7 +114,37 @@ def latest_synchronized(self):\n             .limit(5)\n             .all()\n         )\n-\n+        \n+    def get_all_files_for_dataset(self, dataset_id: int):\n+        dataset = self.model.query.get(dataset_id)\n+        if not dataset:\n+            return None\n+        all_files = []\n+        for feature_model in dataset.feature_models:\n+            all_files.extend(feature_model.files)\n+        return all_files\n+    \n+    def _normalize_folder_name(self, folder_name: str) -> str:\n+   \n+        normalized_name = re.sub(r'[^\\w\\s-]', '', folder_name)\n+        normalized_name = re.sub(r'\\s+', '_', normalized_name.strip())\n+        return normalized_name\n+    \n+    def get_dataset_name(self, dataset_id: int) -> str:\n+        dataset = (\n+        self.model.query\n+        .filter_by(id=dataset_id)\n+        .first()\n+    )\n+        if dataset and dataset.ds_meta_data:\n+            title = dataset.ds_meta_data.title\n+            return self._normalize_folder_name(title)\n+        \n+        return None\n+    \n+\n+\n+    \n \n class DOIMappingRepository(BaseRepository):\n     def __init__(self):"
      },
      {
        "sha": "a6a251eeb11690091da84b66796c075f41bfb048",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 158,
        "deletions": 91,
        "changes": 249,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -2,28 +2,19 @@\n import os\n import json\n import shutil\n+import subprocess\n import tempfile\n import uuid\n from datetime import datetime, timezone\n from zipfile import ZipFile\n-\n-from flask import (\n-    redirect,\n-    render_template,\n-    request,\n-    jsonify,\n-    send_from_directory,\n-    make_response,\n-    abort,\n-    url_for,\n-)\n+from flask import jsonify, redirect, url_for, render_template, request, send_from_directory, make_response, abort\n from flask_login import login_required, current_user\n-\n+import requests\n+from app.modules.dataset.repositories import DSMetaDataRepository\n from app.modules.dataset.forms import DataSetForm\n-from app.modules.dataset.models import (\n-    DSDownloadRecord\n-)\n+from app.modules.dataset.models import DSDownloadRecord\n from app.modules.dataset import dataset_bp\n+from app.modules.dataset.repositories import DataSetRepository\n from app.modules.dataset.services import (\n     AuthorService,\n     DSDownloadRecordService,\n@@ -32,10 +23,12 @@\n     DataSetService,\n     DOIMappingService\n )\n+from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n+from flask_dance.contrib.github import github\n \n-logger = logging.getLogger(__name__)\n \n+logger = logging.getLogger(__name__)\n \n dataset_service = DataSetService()\n author_service = AuthorService()\n@@ -44,13 +37,11 @@\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n \n-\n @dataset_bp.route(\"/dataset/upload\", methods=[\"GET\", \"POST\"])\n @login_required\n def create_dataset():\n     form = DataSetForm()\n     if request.method == \"POST\":\n-\n         dataset = None\n \n         if not form.validate_on_submit():\n@@ -62,8 +53,8 @@ def create_dataset():\n             logger.info(f\"Created dataset: {dataset}\")\n             dataset_service.move_feature_models(dataset)\n         except Exception as exc:\n-            logger.exception(f\"Exception while create dataset data in local {exc}\")\n-            return jsonify({\"Exception while create dataset data in local: \": str(exc)}), 400\n+            logger.exception(f\"Exception while creating dataset data in local {exc}\")\n+            return jsonify({\"Exception while creating dataset data in local\": str(exc)}), 400\n \n         # send dataset as deposition to Zenodo\n         data = {}\n@@ -74,30 +65,22 @@ def create_dataset():\n         except Exception as exc:\n             data = {}\n             zenodo_response_json = {}\n-            logger.exception(f\"Exception while create dataset data in Zenodo {exc}\")\n+            logger.exception(f\"Exception while creating dataset data in Zenodo {exc}\")\n \n         if data.get(\"conceptrecid\"):\n             deposition_id = data.get(\"id\")\n-\n-            # update dataset with deposition id in Zenodo\n             dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n \n             try:\n-                # iterate for each feature model (one feature model = one request to Zenodo)\n                 for feature_model in dataset.feature_models:\n                     zenodo_service.upload_file(dataset, deposition_id, feature_model)\n-\n-                # publish deposition\n                 zenodo_service.publish_deposition(deposition_id)\n-\n-                # update DOI\n                 deposition_doi = zenodo_service.get_doi(deposition_id)\n                 dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n             except Exception as e:\n-                msg = f\"it has not been possible upload feature models in Zenodo and update the DOI: {e}\"\n+                msg = f\"it has not been possible to upload feature models in Zenodo and update the DOI: {e}\"\n                 return jsonify({\"message\": msg}), 200\n \n-        # Delete temp folder\n         file_path = current_user.temp_folder()\n         if os.path.exists(file_path) and os.path.isdir(file_path):\n             shutil.rmtree(file_path)\n@@ -107,7 +90,6 @@ def create_dataset():\n \n     return render_template(\"dataset/upload_dataset.html\", form=form)\n \n-\n @dataset_bp.route(\"/dataset/list\", methods=[\"GET\", \"POST\"])\n @login_required\n def list_dataset():\n@@ -144,9 +126,6 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-\n-\n-\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -156,14 +135,12 @@ def upload():\n     if not file or not file.filename.endswith(\".uvl\"):\n         return jsonify({\"message\": \"No valid file\"}), 400\n \n-    # create temp folder\n     if not os.path.exists(temp_folder):\n         os.makedirs(temp_folder)\n \n     file_path = os.path.join(temp_folder, file.filename)\n \n     if os.path.exists(file_path):\n-        # Generate unique filename (by recursion)\n         base_name, extension = os.path.splitext(file.filename)\n         i = 1\n         while os.path.exists(\n@@ -190,8 +167,6 @@ def upload():\n         200,\n     )\n \n-\n-\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()\n@@ -205,23 +180,18 @@ def delete():\n \n     return jsonify({\"error\": \"Error: File not found\"})\n \n-\n @dataset_bp.route(\"/dataset/download/<int:dataset_id>\", methods=[\"GET\"])\n def download_dataset(dataset_id):\n     dataset = dataset_service.get_or_404(dataset_id)\n-\n     file_path = f\"uploads/user_{dataset.user_id}/dataset_{dataset.id}/\"\n-\n     temp_dir = tempfile.mkdtemp()\n     zip_path = os.path.join(temp_dir, f\"dataset_{dataset_id}.zip\")\n \n     with ZipFile(zip_path, \"w\") as zipf:\n         for subdir, dirs, files in os.walk(file_path):\n             for file in files:\n                 full_path = os.path.join(subdir, file)\n-\n                 relative_path = os.path.relpath(full_path, file_path)\n-\n                 zipf.write(\n                     full_path,\n                     arcname=os.path.join(\n@@ -231,10 +201,7 @@ def download_dataset(dataset_id):\n \n     user_cookie = request.cookies.get(\"download_cookie\")\n     if not user_cookie:\n-        user_cookie = str(\n-            uuid.uuid4()\n-        )  # Generate a new unique identifier if it does not exist\n-        # Save the cookie to the user's browser\n+        user_cookie = str(uuid.uuid4())\n         resp = make_response(\n             send_from_directory(\n                 temp_dir,\n@@ -252,15 +219,13 @@ def download_dataset(dataset_id):\n             mimetype=\"application/zip\",\n         )\n \n-    # Check if the download record already exists for this cookie\n     existing_record = DSDownloadRecord.query.filter_by(\n         user_id=current_user.id if current_user.is_authenticated else None,\n         dataset_id=dataset_id,\n         download_cookie=user_cookie\n     ).first()\n \n     if not existing_record:\n-        # Record the download in your database\n         DSDownloadRecordService().create(\n             user_id=current_user.id if current_user.is_authenticated else None,\n             dataset_id=dataset_id,\n@@ -270,76 +235,178 @@ def download_dataset(dataset_id):\n \n     return resp\n \n-\n @dataset_bp.route(\"/doi/<path:doi>/\", methods=[\"GET\"])\n def subdomain_index(doi):\n-\n-    # Check if the DOI is an old DOI\n     new_doi = doi_mapping_service.get_new_doi(doi)\n     if new_doi:\n-        # Redirect to the same path with the new DOI\n         return redirect(url_for('dataset.subdomain_index', doi=new_doi), code=302)\n \n-    # Try to search the dataset by the provided DOI (which should already be the new one)\n     ds_meta_data = dsmetadata_service.filter_by_doi(doi)\n \n     if not ds_meta_data:\n         abort(404)\n \n-    # Get dataset\n     dataset = ds_meta_data.data_set\n-\n-\n+    \n     # Export DataSet to BibTex\n-    closing_ = \"},\"\n-    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n-    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n-    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n     \n-    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n-        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    else:\n-        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n-    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n-    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n-\n-    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n-    bibtex_properties.append(\"}\")\n-    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n     \n-    max_preview_len = 60\n-    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n \n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    \n-    n_px = 17*(int(len(bibtex_properties)/2)+1)\n-\n-    page_render = render_template(\"dataset/view_dataset.html\",\n-                    dataset=dataset,\n-                    bibtex_dataset=bibtex_dataset,\n-                    bibtex_preview=bibtex_preview,\n-                    bibtex_preview_start = bibtex_properties[0],\n-                    bibtex_preview_lines=bibtex_properties[1:-1],\n-                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n-                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n-\n-    resp = make_response(page_render)\n-    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+\n+    resp = make_response(render_template(\"dataset/view_dataset.html\",dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp\n \n-\n @dataset_bp.route(\"/dataset/unsynchronized/<int:dataset_id>/\", methods=[\"GET\"])\n @login_required\n def get_unsynchronized_dataset(dataset_id):\n-\n-    # Get dataset\n     dataset = dataset_service.get_unsynchronized_dataset(current_user.id, dataset_id)\n \n     if not dataset:\n         abort(404)\n+    \n+    ds_meta_data = dsmetadata_service.get_by_id(dataset.ds_meta_data_id)\n+\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    \n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n+   \n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name)\n+\n+\n+@dataset_bp.route('/dataset/commit/<int:dataset_id>', methods=['GET','POST'])\n+def commit(dataset_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n+    else:\n+        return 'First sync your github account.'\n+    \n+    try:\n+            \n+        ruta_repositorio = f\"/app/uvl_git/{username}\"   \n+        \n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        token = os.getenv('GH_PAT')\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n+             \n+        # Obtener el nombre y los archivos del dataset\n+        repository = DataSetRepository()\n+        nombre = repository.get_dataset_name(dataset_id)\n+        ruta_carpeta = os.path.join(ruta_repositorio, nombre)\n+        os.makedirs(ruta_carpeta, exist_ok=True)\n+        \n+        all_files = repository.get_all_files_for_dataset(dataset_id)\n+        \n+        # Copiar archivos, llevarlos al directorio de git y stagearlos\n+        for archivo in all_files:\n+            ruta_archivo_origen = archivo.get_path()\n+            ruta_destino_archivo = os.path.join(ruta_carpeta, os.path.basename(ruta_archivo_origen))\n+            shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+            subprocess.run(f\"git add {os.path.relpath(ruta_destino_archivo, ruta_repositorio)}\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"Dataset has been pushed to GitHub correctly.\"\n+\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"This dataset is already in your github repository.\"\n+    \n+    \n+    \n+@dataset_bp.route('/dataset/commit_file/<int:file_id>', methods=['GET','POST'])\n+def commit_file(file_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n+        \n+    else:\n+        return 'First sync your github account.'\n+    \n+    try:\n+       \n+        ruta_repositorio = f\"/app/uvl_git/{username}\"\n+    \n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        # Configurar URL remota con el PAT\n+        token = os.getenv('GH_PAT')\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        # Obtener archivo y copiarlo al directorio de git\n+        hubfile_repository = HubfileRepository()\n+        hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n+        ruta_archivo_origen = hubfile.get_path()\n+        ruta_destino_archivo = os.path.join(ruta_repositorio, hubfile.name)\n+        shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+\n+        subprocess.run(f\"git add {hubfile.name}\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"This model has been pushed to GitHub correctly.\"\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"This model is already in your github repository.\"\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+\n+@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(file_id, format):\n+    \"\"\"Endpoint to download dataset in the specified format.\n+    Formats supported: glencoe, splot, dimacs, zip.\n+    \"\"\"\n+    if format == \"glencoe\":\n+        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n+    elif format == \"splot\":\n+        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n+    elif format == \"dimacs\":\n+        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n+    elif format == \"zip\":\n+        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n+    else:\n+        return jsonify({\"error\": \"Formato no soportado\"}), 400"
      },
      {
        "sha": "ef40cc6e3f7bdfc6d7a7bae844294277c4952f62",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 88,
        "deletions": 32,
        "changes": 120,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -41,6 +41,35 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n+                <div class=\"mt-2\">\n+                    <div class=\"btn-group\" role=\"group\">\n+                        <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n+                            <i data-feather=\"download\"></i> Download\n+                        </button>\n+                        <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                    Glencoe\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                    DIMACS\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                    SPLOT\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n+                                    ZIP\n+                                </a>\n+                            </li>\n+                        </ul>\n+                    </div>\n+                </div>\n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">\n@@ -159,44 +188,24 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n \n             {% if bibtex_dataset %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n-                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n-                    {{ bibtex_dataset }}\n-                </div>\n-\n-                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n-                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n-                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n-                        <b>BibTex</b>\n-                    </span>\n \n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_dataset }}\n-                    </span> -->\n-                   \n-                    \n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_preview }}\n-                    </span> -->\n-                   \n-\n-                    \n-                    <div class=\"doi_text\">\n-                        <div>{{ bibtex_preview_start }}</div>\n-                        {% for bib_line in bibtex_preview_lines %}\n-                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n-                        {% endfor %}\n-                        <div>{{ bibtex_preview_end }}</div>\n-                    </div>\n-                   \n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n+                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                    <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n+\n+                <a href=\"{{ url_for('dataset.commit', dataset_id=dataset.id) }}\" class=\"btn btn-primary mt-3\" style=\"border-radius: 5px;\">\n+                    <i class=\"center-button-icon\"></i>\n+                    Upload dataset to github\n+                </a>\n             </div>\n             {% endif %}\n \n+            \n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n \n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n@@ -215,6 +224,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n                 </div>\n+\n                 \n             </div>\n             {% endif %}\n@@ -308,6 +318,10 @@ <h4 style=\"margin-bottom: 0px;\"><span class=\"badge bg-dark\">{{ dataset.get_files\n                             </div>\n                             <div class=\"col-12 text-end\" >\n \n+                                <a href=\"{{ url_for('dataset.commit_file', file_id=file.id) }}\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                                    <i data-feather=\"github\"></i> Upload\n+                                </a>\n+\n                                 <button onclick=\"viewFile('{{ file.id }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                                     <i data-feather=\"eye\"></i> View\n                                 </button>\n@@ -399,6 +413,30 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n     </div>\n </div>\n \n+<div class=\"modal fade\" id=\"bibtexViewerModal\" tabindex=\"-1\" aria-labelledby=\"bibtexViewerModalLabel\" aria-hidden=\"true\">\n+    <div class=\"modal-dialog modal-lg\" style=\"height: 80vh; display: flex; align-items: center;\">\n+        <div class=\"modal-content\" style=\"height: 80vh;\">\n+            <div class=\"modal-header\" style=\"display: flex; justify-content: space-between; align-items: center;\">\n+                <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex format</h5>\n+                <div>\n+                    <a href=\"#\" class=\"btn btn-outline-primary btn-sm\" id=\"bibtexDownloadButton\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"download\"></i>\n+                    </a>\n+                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"copy\"></i>\n+                    </button>\n+                    <button onclick=\"freeBibtexUrl()\" type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n+                </div>\n+            </div>\n+            <div class=\"modal-body\" style=\"overflow-y: auto; height: calc(100vh - 50px);\">\n+                <pre id=\"bibtexContent\" style=\"height: 100%; overflow-y: auto; white-space: pre-wrap; word-wrap: break-word; background-color: #f5f5f5; padding: 20px; border-radius: 5px; border: 1px solid #ccc;\"></pre>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js\"></script>\n \n \n@@ -410,6 +448,24 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n \n     var currentFileId;\n \n+    function freeBibtexUrl() {\n+        console.log(\"entra en freeBibtexUrl\")\n+        URL.revokeObjectURL(document.getElementById('bibtexDownloadButton').href)\n+    }\n+\n+    function viewBibtex(bibfilename) {\n+        var bib_content_display = document.getElementById('dataset_bibtex_export').textContent;\n+\n+        var blob = new Blob([bib_content_display], { type: 'text/plain' });\n+        var fileURL = URL.createObjectURL(blob);\n+        document.getElementById('bibtexDownloadButton').href = fileURL;\n+        document.getElementById('bibtexDownloadButton').download = bibfilename;\n+        document.getElementById('bibtexContent').textContent = bib_content_display;\n+\n+        var modal = new bootstrap.Modal(document.getElementById('bibtexViewerModal'));\n+        modal.show();\n+    }\n+\n     function viewFile(fileId) {\n         fetch(`/file/view/${fileId}`)\n             .then(response => response.json())"
      },
      {
        "sha": "d316841d1aca77398773dbb07abb7cbd5dd4e3dc",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -0,0 +1,58 @@\n+import pytest\n+from flask import url_for\n+from app.modules.dataset.routes import download_dataset_format\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client(test_client):\n+    \"\"\"\n+    Extiende la fixture test_client para el m\u00f3dulo dataset.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_download_glencoe_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato Glencoe.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/glencoe\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+\n+\n+def test_download_splot_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato SPLOT.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/splot\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+\n+\n+def test_download_dimacs_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato DIMACS.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/dimacs\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+\n+\n+def test_download_zip_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato ZIP.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/zip\")\n+    assert response.status_code == 302\n+    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n+\n+def test_download_invalid_format(test_client):\n+    \"\"\"\n+    Testea que se retorne un error 400 para un formato no soportado.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n+    assert response.status_code == 400\n+    assert response.json == {\"error\": \"Formato no soportado\"}"
      },
      {
        "sha": "6f2edac23ceec557545bb8eaf134f3dcfa88d657",
        "filename": "app/modules/dataset/uvl_examples/file10.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tMessaging\t\n+\t\t\t\tor\n+\t\t\t\t\tSMS\n+\t\t\t\t\tMMS\n+\t\t\t\"Utility Features\"\t\n+\t\t\t\toptional\n+\t\t\t\t\tCalculator\n+\t\t\t\t\t\"Currency Exchange\"\n+\t\t\tOS\t\n+\t\t\t\talternative\n+\t\t\t\t\tSymbian\n+\t\t\t\t\tWinCE\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Currency Exchange\" => Calculator\n\\ No newline at end of file"
      },
      {
        "sha": "141cad170eaca409c3974334791706a0cc319f3b",
        "filename": "app/modules/dataset/uvl_examples/file11.uvl",
        "status": "modified",
        "additions": 25,
        "deletions": 17,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,19 +1,27 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tOnlineshop {abstract}\t\n+\t\tmandatory\n+\t\t\tPayment {abstract}\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Debit Card\"\n+\t\t\t\t\t\"Credit Card\"\n+\t\t\t\"Product Selection\" {abstract}\t\n+\t\t\t\tmandatory\n+\t\t\t\t\tCatalog\t\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tCategories\n+\t\t\t\t\t\t\tSort\n+\t\t\t\toptional\n+\t\t\t\t\tSearch\n+\t\toptional\n+\t\t\tUserManagement {abstract}\t\n+\t\t\t\tor\n+\t\t\t\t\tOrders\n+\t\t\t\t\tSecurity\n+\t\t\t\t\tPayments\n+\t\t\t\t\tWishlist\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSearch => Security\n+\tSecurity => !Payments\n+\tPayments => !Security\n+\tSort | Search\n\\ No newline at end of file"
      },
      {
        "sha": "117471c9d2dc5561b9562f672aec92d9af73450d",
        "filename": "app/modules/dataset/uvl_examples/file12.uvl",
        "status": "modified",
        "additions": 22,
        "deletions": 18,
        "changes": 40,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,19 +1,23 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Movies_App\" \n+\t\tmandatory\n+\t\t\t\"GUI\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Thin\" \n+\t\t\t\t\t\"Rich\" \n+\t\tmandatory\n+\t\t\t\"DB\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Local\" \n+\t\t\t\t\t\"Remote\" \n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\t\"Cache_Policy\" \n+\t\tmandatory\n+\t\t\t\"Network\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Wifi\" \n+\t\t\t\t\t\"Bluetooth\" \n+\t\toptional\n+\t\t\t\"GPS\" \n+\t\t\t\toptional\n+\t\t\t\t\t\"Built-In\" \n\\ No newline at end of file"
      },
      {
        "sha": "924a2f013c74f6bbea7f911b884dd9fd94e26f8b",
        "filename": "app/modules/dataset/uvl_examples/file2.uvl",
        "status": "modified",
        "additions": 19,
        "deletions": 18,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,19 +1,20 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40"
      },
      {
        "sha": "9e14cb807f57d510839a4d68aff29e690523ac78",
        "filename": "app/modules/dataset/uvl_examples/file3.uvl",
        "status": "modified",
        "additions": 17,
        "deletions": 18,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,19 +1,18 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "ad06cc4f7e038d2e2ab96ed02ae7ae1c2ef24dd0",
        "filename": "app/modules/dataset/uvl_examples/file4.uvl",
        "status": "modified",
        "additions": 20,
        "deletions": 17,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,19 +1,22 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tsmartwatch {abstract true}\n+\t\tmandatory\n+\t\t\tscreen\n+\t\t\t\talternative\n+\t\t\t\t\ttouch\n+\t\t\t\t\tstandard\n+\t\t\t\"energy management\"\n+\t\t\t\talternative\n+\t\t\t\t\tbasic\n+\t\t\t\t\t\"advanced solar\"\n+\t\toptional\n+\t\t\tpayment\n+\t\t\tgps\n+\t\t\t\"sports tracking\"\n+\t\t\t\tor\n+\t\t\t\t\trunning\n+\t\t\t\t\tskiing\n+\t\t\t\t\thiking\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t!(payment & standard)\n+\t\"sports tracking\" => gps"
      },
      {
        "sha": "2ed3f8f650ad498e4e3ca0220d63dc841fc39db0",
        "filename": "app/modules/dataset/uvl_examples/file5.uvl",
        "status": "modified",
        "additions": 33,
        "deletions": 18,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,19 +1,34 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "9234e685c686a0589a2f477bfc0f83156e104c5d",
        "filename": "app/modules/dataset/uvl_examples/file6.uvl",
        "status": "modified",
        "additions": 40,
        "deletions": 16,
        "changes": 56,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,19 +1,43 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\toptional\n+\t\t\t\t\tTouchScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\t\toptional\n+\t\t\t\t\tContactlessPayment\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n+\t\t\t\toptional\n+\t\t\t\t\tNFC\n \n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tContactlessPayment => NFC"
      },
      {
        "sha": "3d881f9b14f76d1a693988f487862607e513ce69",
        "filename": "app/modules/dataset/uvl_examples/file7.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tGSM_Protocol_1900\n+\t\t\tMP3_Recording\n+\t\t\tCamera_Resolution\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"2_1MP\"\n+\t\t\t\t\t\"5 MP\"\n+\t\t\t\t\t\"3_1MP\"\n+\t\t\tCamera\n+\t\t\tAudio_Formats\t\n+\t\t\t\tor\n+\t\t\t\t\tWAV\n+\t\t\t\t\tMP3\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tMP3_Recording => MP3\n\\ No newline at end of file"
      },
      {
        "sha": "10dddc5e29b5fc9da5ba4b8692ecbf437448f719",
        "filename": "app/modules/dataset/uvl_examples/file8.uvl",
        "status": "modified",
        "additions": 36,
        "deletions": 18,
        "changes": 54,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1,19 +1,37 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tSV_Solution\t\n+\t\t\t\talternative\n+\t\t\t\t\tBMD\n+\t\t\t\t\tBMDCRM\n+\t\t\tCV_Documents\t\n+\t\t\t\tor\n+\t\t\t\t\t\"scan new\"\n+\t\t\t\t\t\"import external\"\n+\t\t\t\t\tarchive\n+\t\t\t\t\t\"read existing\"\n+\t\t\tCV_Claims\t\n+\t\t\t\tor\n+\t\t\t\t\tjournal\n+\t\t\t\t\t\"task manager\"\n+\t\t\tSV\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Particular Packages\"\n+\t\t\t\t\tSolution\n+\t\t\tCV_Customer\t\n+\t\t\t\tor\n+\t\t\t\t\tmail\n+\t\t\t\t\tphone\n+\t\t\tCV\t\n+\t\t\t\tor\n+\t\t\t\t\t\"Document Management\"\n+\t\t\t\t\t\"Claims Management\"\n+\t\t\t\t\t\"Customer Management\"\n+\t\t\tSV_Particular_Package\t\n+\t\t\t\tor\n+\t\t\t\t\tOrganizer\n+\t\t\t\t\t\"Label Printing\"\n+\t\t\t\t\tElse\n+\t\t\t\t\tDocs\n+\t\t\t\t\t\"Standard Letter\"\n\\ No newline at end of file"
      },
      {
        "sha": "1609b0318fca78c64b66a9f332daf50d08bb7879",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 41,
        "deletions": 1,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -16,13 +16,31 @@ function send_query() {\n         filter.addEventListener('input', () => {\n             const csrfToken = document.getElementById('csrf_token').value;\n \n+            const minFiles = document.getElementById('min_files').value || null;\n+            const maxFiles = document.getElementById('max_files').value || null;\n+            const minAvBranchingFactor = document.getElementById('min_av_branching_factor').value || null;\n+            const maxAvBranchingFactor = document.getElementById('max_av_branching_factor').value || null;\n+            const minLeafCount = document.getElementById('min_leaf_count').value || null;\n+            const maxLeafCount = document.getElementById('max_leaf_count').value || null;\n+            const minDepth = document.getElementById('min_depth').value || null;\n+            const maxDepth = document.getElementById('max_depth').value || null;\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n                 publication_type: document.querySelector('#publication_type').value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n+                min_files: minFiles,\n+                max_files: maxFiles,\n+                min_av_branching_factor: minAvBranchingFactor,\n+                max_av_branching_factor: maxAvBranchingFactor,\n+                min_leaf_count: minLeafCount,\n+                max_leaf_count: maxLeafCount,\n+                min_depth: minDepth,\n+                max_depth: maxDepth,\n+                leaf_feature_name: document.querySelector('#leaf_feature_name').value,\n+                core_feature_name: document.querySelector('#core_feature_name').value\n             };\n-\n+            \n             console.log(document.querySelector('#publication_type').value);\n \n             fetch('/explore', {\n@@ -179,6 +197,28 @@ function clearFilters() {\n         // option.dispatchEvent(new Event('input', {bubbles: true}));\n     });\n \n+    let minFilesInput = document.querySelector('#min_files');\n+    let maxFilesInput = document.querySelector('#max_files');\n+    minFilesInput.value = \"\"; \n+    maxFilesInput.value = \"\"; \n+    let minAvBranchingFactor = document.querySelector('#min_av_branching_factor');\n+    let maxAvBranchingFactor = document.querySelector('#max_av_branching_factor');\n+    minAvBranchingFactor.value = \"\"; \n+    maxAvBranchingFactor.value = \"\"; \n+    let minLeafCount = document.querySelector('#min_leaf_count');\n+    let maxLeafCount = document.querySelector('#max_leaf_count');\n+    minLeafCount.value = \"\"; \n+    maxLeafCount.value = \"\"; \n+    let minDepth = document.querySelector('#min_depth');\n+    let maxDepth = document.querySelector('#max_depth');\n+    minDepth.value = \"\"; \n+    maxDepth.value = \"\"; \n+    let leafFeatureName = document.querySelector('#leaf_feature_name');\n+    leafFeatureName.value = \"\";\n+    let coreFeatureName = document.querySelector('#core_feature_name');\n+    coreFeatureName.value = \"\";\n+\n+\n     // Perform a new search with the reset filters\n     queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n }"
      },
      {
        "sha": "fa37bd56d033abe4b84370094d21a3850923875b",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 71,
        "deletions": 2,
        "changes": 73,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -10,12 +10,31 @@ class ExploreRepository(BaseRepository):\n     def __init__(self):\n         super().__init__(DataSet)\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None, max_av_branching_factor=None,\n+               leaf_feature_name=\"\", core_feature_name=\"\",\n+               **kwargs):\n         # Normalize and remove unwanted characters\n         normalized_query = unidecode.unidecode(query).lower()\n         cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n \n         filters = []\n+        min_files = int(min_files) if min_files is not None else None\n+        max_files = int(max_files) if max_files is not None else None\n+\n+        min_leaf_count = int(min_leaf_count) if min_leaf_count is not None else None\n+        max_leaf_count = int(max_leaf_count) if max_leaf_count is not None else None\n+\n+        min_depth = int(min_depth) if min_depth is not None else None\n+        max_depth = int(max_depth) if max_depth is not None else None\n+\n+        min_av_branching_factor = float(min_av_branching_factor) if min_av_branching_factor is not None else None\n+        max_av_branching_factor = float(max_av_branching_factor) if max_av_branching_factor is not None else None\n+\n         for word in cleaned_query.split():\n             filters.append(DSMetaData.title.ilike(f\"%{word}%\"))\n             filters.append(DSMetaData.description.ilike(f\"%{word}%\"))\n@@ -55,7 +74,57 @@ def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **\n         # Order by created_at\n         if sorting == \"oldest\":\n             datasets = datasets.order_by(self.model.created_at.asc())\n+        elif sorting == \"filesize_asc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=False)\n+        elif sorting == \"filesize_desc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=True)\n         else:\n             datasets = datasets.order_by(self.model.created_at.desc())\n \n-        return datasets.all()\n+        if min_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() >= min_files]\n+        if max_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() <= max_files]\n+\n+        filtered_datasets = []\n+\n+        for dataset in datasets:\n+            feature_models = dataset.feature_models  \n+            dataset_passes_filter = False  \n+\n+            for model in feature_models:\n+                stats = model.calculate_statistics()  \n+                leaf_count = stats[\"leaf_count\"]\n+                depth = stats[\"max_depth\"]\n+                branching_factor = stats[\"branching_factor\"]\n+\n+                # Aplicar filtros a las estad\u00edsticas del modelo\n+                if ((min_leaf_count is not None and leaf_count < min_leaf_count) or\n+                    (max_leaf_count is not None and leaf_count > max_leaf_count) or\n+                    (min_depth is not None and depth < min_depth) or\n+                    (max_depth is not None and depth > max_depth) or\n+                    (min_av_branching_factor is not None and branching_factor < min_av_branching_factor) or\n+                        (max_av_branching_factor is not None and branching_factor > max_av_branching_factor)):\n+                    continue\n+\n+                if leaf_feature_name:\n+                    leaf_feature_names = model.get_leaf_feature_names()\n+                    print(leaf_feature_name)\n+                    if leaf_feature_name not in leaf_feature_names:\n+                        continue\n+\n+                if core_feature_name:\n+                    core_feature_names = model.get_core_feature_names()\n+                    if core_feature_name not in core_feature_names:\n+                        continue\n+\n+                dataset_passes_filter = True\n+                print(\"dataset_passes_filter\")\n+                break\n+\n+            if dataset_passes_filter:\n+                filtered_datasets.append(dataset)  \n+\n+        return filtered_datasets"
      },
      {
        "sha": "ecbed8e137e0f7d447b1b710e823b81cf204c427",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -6,5 +6,16 @@ class ExploreService(BaseService):\n     def __init__(self):\n         super().__init__(ExploreRepository())\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n-        return self.repository.filter(query, sorting, publication_type, tags, **kwargs)\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None,\n+               max_av_branching_factor=None,\n+               leaf_feature_name=\"\",\n+               core_feature_name=\"\", **kwargs):\n+        return self.repository.filter(query, sorting, publication_type, tags, min_files, max_files,\n+                                      min_leaf_count, max_leaf_count, min_depth, max_depth,\n+                                      min_av_branching_factor, max_av_branching_factor, leaf_feature_name,\n+                                      core_feature_name, **kwargs)"
      },
      {
        "sha": "f062144cdd68583a147b585fa2fa2d66cd94fb46",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 88,
        "deletions": 4,
        "changes": 92,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -54,8 +54,7 @@ <h3 class=\"h3 mb-3\">\n                                        value=\"\" autofocus>\n                             </div>\n                         </div>\n-\n-                        <div class=\"col-lg-6\">\n+                        <div class=\"col-lg-12\">\n                             <div class=\"mb-3\">\n                                 <label class=\"form-label\" for=\"publication_type\">Filter by publication\n                                     type</label>\n@@ -83,7 +82,79 @@ <h3 class=\"h3 mb-3\">\n                                     <option value=\"other\">Other</option>\n                                 </select>\n                             </div>\n-\n+                        </div>\n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_files\">Min Files:</label>\n+                                    <input type=\"number\" id=\"min_files\" name=\"min_files\" class=\"form-control\" placeholder=\"Min Files\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_files\">Max Files:</label>\n+                                    <input type=\"number\" id=\"max_files\" name=\"max_files\" class=\"form-control\" placeholder=\"Max Files\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_leaf_count\">Min Leaf Count:</label>\n+                                    <input type=\"number\" id=\"min_leaf_count\" name=\"min_leaf_count\" class=\"form-control\" placeholder=\"Min Leaf Count\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_leaf_count\">Max Leaf Count:</label>\n+                                    <input type=\"number\" id=\"max_leaf_count\" name=\"max_leaf_count\" class=\"form-control\" placeholder=\"Max Leaf Count\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_depth\">Min Depth:</label>\n+                                    <input type=\"number\" id=\"min_depth\" name=\"min_depth\" class=\"form-control\" placeholder=\"Min Depth\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_depth\">Max Depth:</label>\n+                                    <input type=\"number\" id=\"max_depth\" name=\"max_depth\" class=\"form-control\" placeholder=\"Max Depth\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_av_branching_factor\">Min Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"min_av_branching_factor\" name=\"min_av_branching_factor\" class=\"form-control\" placeholder=\"Min Average Branching Factor\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_av_branching_factor\">Max Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"max_av_branching_factor\" name=\"max_av_branching_factor\" class=\"form-control\" placeholder=\"Max Average Branching Factor\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"leaf_feature_name\">Leaf Feature Name:</label>\n+                                <input type=\"text\" id=\"leaf_feature_name\" name=\"leaf_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter leaf feature name\">\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"core_feature_name\">Core Feature Name:</label>\n+                                <input type=\"text\" id=\"core_feature_name\" name=\"core_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter core feature name\">\n+                            </div>\n                         </div>\n \n                     </div>\n@@ -108,7 +179,20 @@ <h3 class=\"h3 mb-3\">\n                                     </span>\n                                 </label>\n                             </div>\n-\n+                            <div>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_asc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Smallest first\n+                                    </span>\n+                                </label>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_desc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Largest first\n+                                    </span>\n+                                </label>\n+                            </div>\n                         </div>\n \n                     </div>"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/27",
    "id": 2232641884,
    "node_id": "PR_kwDONDG85c6FE2lc",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/27",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/27.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/27.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/27",
    "number": 27,
    "state": "closed",
    "locked": false,
    "title": "Feature upload analyse and repair uvl",
    "user": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Added parser for checking the syntax and proper alert handling",
    "created_at": "2024-12-12T22:09:36Z",
    "updated_at": "2024-12-15T17:17:39Z",
    "closed_at": "2024-12-15T17:17:39Z",
    "merged_at": "2024-12-15T17:17:38Z",
    "merge_commit_sha": "c2038affafab5b5bb1b94964b2bdab1330df57a1",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/27/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/27/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/27/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
    "head": {
      "label": "flamenquin-hub-single:feature-upload_analyse_and_repair_UVL",
      "ref": "feature-upload_analyse_and_repair_UVL",
      "sha": "adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/27"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/27"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/27"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/27/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/27/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/27/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "049e06399eb565e07bbbbcf9aa7c402177651378",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitignore?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -15,4 +15,5 @@ nginx.prod.ssl.conf\n .version\n entrypoint.sh\n deployments.log\n-test_file.txt\n\\ No newline at end of file\n+test_file.txt\n+egc/"
      },
      {
        "sha": "0b7d1cc88c4b7e7859e7dab081dcdaa0c8395a97",
        "filename": "app/modules/dataset/UVLCustomLexer.py",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,97 @@\n+import re\n+from .UVLPythonLexer import UVLPythonLexer\n+\n+from .UVLPythonParser import UVLPythonParser\n+from antlr4.Token import Token\n+from antlr4.Token import CommonToken\n+\n+class UVLCustomLexer(UVLPythonLexer):\n+   \n+    def __init__(self, input_stream):\n+        super().__init__(input_stream)\n+        self.tokens = []\n+        self.indents = []\n+        self.opened = 0\n+        self.lastToken = None\n+        \n+    def emitToken(self, t):\n+        super().emitToken(t)\n+        self.tokens.append(t)  \n+\n+    def nextToken(self):\n+        # Check if the end-of-file is ahead and there are still some DEDENTS expected.\n+        if self._input.LA(1) == Token.EOF and len(self.indents) != 0:\n+            # Remove any trailing EOF tokens from our buffer.\n+            while len(self.tokens) > 0 and self.tokens[-1].type == Token.EOF:\n+                del self.tokens[-1]\n+\n+            # First emit an extra line break that serves as the end of the statement.\n+            self.emitToken(self.common_token(UVLPythonLexer.NEWLINE, \"\\n\"));\n+\n+\n+            # Now emit as much DEDENT tokens as needed.\n+            while len(self.indents) != 0:\n+                self.emitToken(self.create_dedent())\n+                del self.indents[-1]              \n+            # Put the EOF back on the token stream.\n+            self.emitToken(self.common_token(Token.EOF, \"<EOF>\"));\n+\n+        next_token = super().nextToken()\n+\n+        if next_token.channel == Token.DEFAULT_CHANNEL:\n+            # Keep track of the last token on the default channel.\n+            self.lastToken = next_token\n+\n+        return self.tokens.pop(0) if len(self.tokens) > 0 else next_token\n+\n+    def create_dedent(self):\n+        dedent = self.common_token(self.DEDENT, \"\")\n+        dedent.line = self.lastToken.line\n+        return dedent\n+\n+    def common_token(self, type, text):\n+        stop = self.getCharIndex() - 1\n+        start = stop - len(text) + 1 if text else stop\n+        return CommonToken(self._tokenFactorySourcePair, type, Token.DEFAULT_CHANNEL, start, stop)\n+\n+    @staticmethod\n+    def getIndentationCount(spaces):\n+        count = 0\n+        for ch in spaces:\n+            if ch == '\\t':\n+                count += 8 - (count % 8)\n+            else:  # A normal space char.\n+                count += 1\n+        return count\n+    \n+    def skipToken(self):\n+        self.skip()\n+\n+    def atStartOfInput(self):\n+        return self._interp.column == 0 and self._interp.line == 1\n+    \n+    def handleNewline(self):\n+      new_line = re.sub(r\"[^\\r\\n\\f]+\", \"\", self._interp.getText(self._input)) #.replaceAll(\"[^\\r\\n\\f]+\", \"\")\n+      spaces = re.sub(r\"[\\r\\n\\f]+\", \"\", self._interp.getText(self._input)) #.replaceAll(\"[\\r\\n\\f]+\", \"\")\n+      next = self._input.LA(1)\n+\n+      if self.opened > 0 or next == '\\r' or next == '\\n' or next == '\\f' or next == '#':\n+        self.skip()\n+      else:\n+        self.emitToken(self.common_token(self.NEWLINE, new_line))\n+\n+        indent = self.getIndentationCount(spaces)\n+        if len(self.indents) == 0:\n+            previous = 0\n+        else:\n+            previous = self.indents[-1]\n+\n+        if indent == previous:\n+            self.skip()\n+        elif indent > previous:\n+            self.indents.append(indent)\n+            self.emitToken(self.common_token(UVLPythonParser.INDENT, spaces))\n+        else:\n+            while len(self.indents) > 0 and self.indents[-1] > indent:\n+                self.emitToken(self.create_dedent())\n+                del self.indents[-1]\n\\ No newline at end of file"
      },
      {
        "sha": "03c2e1a6418ec2dc70695cdfa30b36d1d71ebff5",
        "filename": "app/modules/dataset/parser.py",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fparser.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fparser.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fparser.py?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,62 @@\n+from antlr4 import CommonTokenStream, FileStream\n+from uvl.UVLCustomLexer import UVLCustomLexer\n+from uvl.UVLPythonParser import UVLPythonParser\n+from antlr4.error.ErrorListener import ErrorListener\n+\n+class CustomErrorListener(ErrorListener):\n+    def syntaxError(self, recognizer, offendingSymbol, line, column, msg, e):\n+        # If the error message contains a specific keyword related to tabulation, ignore it\n+        if \"\\\\t\" in msg:\n+            print(f\"The UVL has the following warning that prevents reading it :Line {line}:{column} - {msg}\")\n+            return\n+        else:\n+            # Otherwise, print the error (or handle it in another way)\n+            raise Exception(f\"The UVL has the following error that prevents reading it :Line {line}:{column} - {msg}\")\n+            \n+\n+def get_tree(argv):\n+    input_stream = FileStream(argv)\n+    lexer = UVLCustomLexer(input_stream)\n+    \n+    # Attach the custom error listener to the lexer\n+    lexer.removeErrorListeners()\n+    lexer.addErrorListener(CustomErrorListener())\n+\n+    stream = CommonTokenStream(lexer)\n+    parser = UVLPythonParser(stream)\n+    \n+    # Attach the custom error listener to the parser\n+    parser.removeErrorListeners()\n+    parser.addErrorListener(CustomErrorListener())\n+\n+    tree = parser.featureModel()\n+\n+    return tree\n+\n+\n+if __name__ == \"__main__\":\n+    import sys\n+\n+    # Check if the user provided a file argument\n+    if len(sys.argv) < 2:\n+        print(\"Usage: python script_name.py <path_to_uvl_file>\")\n+        sys.exit(1)\n+\n+    # Parse the provided file\n+    input_stream = FileStream(sys.argv[1])\n+    lexer = UVLCustomLexer(input_stream)\n+    \n+    # Attach the custom error listener to the lexer\n+    lexer.removeErrorListeners()\n+    lexer.addErrorListener(CustomErrorListener())\n+\n+    stream = CommonTokenStream(lexer)\n+    parser = UVLPythonParser(stream)\n+    \n+    # Attach the custom error listener to the parser\n+    parser.removeErrorListeners()\n+    parser.addErrorListener(CustomErrorListener())\n+\n+    tree = parser.featureModel()\n+    # Print the parse tree (optional)\n+    print(tree.toStringTree(recog=parser))"
      },
      {
        "sha": "b0a566f87929fd2c6d643c9793868f10e1135fe6",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -25,6 +25,8 @@\n )\n from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n+from app.modules.dataset.parser import get_tree\n+logger = logging.getLogger(__name__)\n from flask_dance.contrib.github import github\n \n \n@@ -99,6 +101,7 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n+\n @dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n @login_required\n def check_dataset():\n@@ -126,6 +129,7 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n+\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -156,6 +160,11 @@ def upload():\n         file.save(file_path)\n     except Exception as e:\n         return jsonify({\"message\": str(e)}), 500\n+    try:\n+        get_tree(file_path)\n+    except Exception as e:\n+        os.remove(file_path)\n+        return jsonify({\"message\": str(e),\"syntax\": True}),400\n \n     return (\n         jsonify("
      },
      {
        "sha": "9c39a7ba463e67ba1cf726d260f7a84a1d8cbd14",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "removed",
        "additions": 0,
        "deletions": 286,
        "changes": 286,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -1,286 +0,0 @@\n-{% extends \"base_template.html\" %}\n-\n-{% block title %}Check UVL model{% endblock %}\n-\n-{% block content %}\n-\n-    <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n-\n-    {% if messages %}\n-        <ul>\n-            {% for message in messages %}\n-                <li>{{ message }}</li>\n-            {% endfor %}\n-        </ul>\n-    {% endif %}\n-\n-    <div class=\"row\">\n-\n-        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n-\n-            <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n-\n-            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n-                \n-\t\t{{ form.hidden_tag() }}\n-\n-\n-                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n-                    <div id=\"dropzone-text\"></div>\n-                </form>\n-\n-                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n-                    </span>\n-\n-                <ul class=\"mt-2\" id=\"file-list\"></ul>\n-\n-                <script>\n-                    let dropzone = Dropzone.options.myDropzone = {\n-                        url: \"/dataset/file/upload\",\n-                        paramName: 'file',\n-                        maxFilesize: 10,\n-                        acceptedFiles: '.uvl',\n-                        init: function () {\n-\n-\t\t\t\tlet fileList = document.getElementById('file-list');\n-\t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n-\t\t\t\tlet alerts = document.getElementById('alerts');\n-\t\t\t\tthis.on('addedfile', function (file) {\n-\n-\t\t\t\t\tlet ext = file.name.split('.').pop();\n-\t\t\t\t\tif (ext !== 'uvl') {\n-\t\t\t\t\t\tthis.removeFile(file);\n-\n-\t\t\t\t\t\tlet alert = document.createElement('p');\n-\t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n-\t\t\t\t\t\talerts.appendChild(alert);\n-\t\t\t\t\t\talerts.style.display = 'block';\n-\t\t\t\t\t}\n-\t\t\t\t\tif (fileList.childElementCount > 0) {\n-\t\t\t\t\t\tthis.removeFile(file);\n-\n-\t\t\t\t\t\tlet alert = document.createElement('p');\n-\t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n-\t\t\t\t\t\talerts.appendChild(alert);\n-\t\t\t\t\t\talerts.style.display = 'block';\n-\t\t\t\t\t}\n-                            });\n-\n-                            this.on('success', function (file, response) {\n-\n-                                let dropzone = this;\n-\n-                                show_upload_dataset();\n-\n-                                console.log(\"File uploaded: \", response);\n-                                // actions when UVL model is uploaded\n-                                let listItem = document.createElement('li');\n-                                let h4Element = document.createElement('h4');\n-                                h4Element.textContent = response.filename;\n-                                listItem.appendChild(h4Element);\n-\n-                                // generate incremental id for form\n-                                let formUniqueId = generateIncrementalId();\n-\n-                               /*\n-                                    ##########################################\n-                                    REMOVE BUTTON\n-                                    ##########################################\n-                                */\n-\n-                                // remove button\n-                                let removeButton = document.createElement('button');\n-                                removeButton.innerHTML = 'Delete model';\n-                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n-                                removeButton.style.borderRadius = '5px';\n-\n-                                removeButton.addEventListener('click', function () {\n-                                    fileList.removeChild(listItem);\n-                                    this.removeFile(file);\n-\n-                                    // Ajax request\n-                                    let xhr = new XMLHttpRequest();\n-                                    xhr.open('POST', '/dataset/file/delete', true);\n-                                    xhr.setRequestHeader('Content-Type', 'application/json');\n-                                    xhr.onload = function () {\n-                                        if (xhr.status === 200) {\n-                                            console.log('Deleted file from server');\n-\n-                                            if (dropzone.files.length === 0) {\n-                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n-                                                clean_upload_errors();\n-                                            }\n-\n-                                        }\n-                                    };\n-                                    xhr.send(JSON.stringify({file: file.name}));\n-                                }.bind(this));\n-\n-                                /*\n-                                    ##########################################\n-                                    APPEND BUTTONS\n-                                    ##########################################\n-                                */\n-                                listItem.appendChild(removeButton);\n-\n-                                /*\n-                                    ##########################################\n-                                    UVL FORM\n-                                    ##########################################\n-                                */\n-\n-                                // create specific form for UVL\n-                                let formContainer = document.createElement('div');\n-                                formContainer.id = formUniqueId + \"_form\";\n-                                formContainer.classList.add('uvl_form', \"mt-3\");\n-                                formContainer.style.display = \"none\";\n-\n-                                formContainer.innerHTML = `\n-                                    <div class=\"row\">\n-                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n-                                        <div class=\"col-12\">\n-                                            <div class=\"row\">\n-                                                <div class=\"col-12\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">Title</label>\n-                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-12\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">Description</label>\n-                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-lg-6 col-12\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n-                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n-                                                            <option value=\"none\">None</option>\n-                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n-                                                            <option value=\"book\">Book</option>\n-                                                            <option value=\"section\">Book Section</option>\n-                                                            <option value=\"conferencepaper\">Conference Paper</option>\n-                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n-                                                            <option value=\"article\">Journal Article</option>\n-                                                            <option value=\"patent\">Patent</option>\n-                                                            <option value=\"preprint\">Preprint</option>\n-                                                            <option value=\"deliverable\">Project Deliverable</option>\n-                                                            <option value=\"milestone\">Project Milestone</option>\n-                                                            <option value=\"proposal\">Proposal</option>\n-                                                            <option value=\"report\">Report</option>\n-                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n-                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n-                                                            <option value=\"technicalnote\">Technical Note</option>\n-                                                            <option value=\"thesis\">Thesis</option>\n-                                                            <option value=\"workingpaper\">Working Paper</option>\n-                                                            <option value=\"other\">Other</option>\n-                                                        </select>\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-lg-6 col-6\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n-                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-6\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n-                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-6\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">UVL version</label>\n-                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-12\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">Authors</label>\n-                                                        <div id=\"` + formContainer.id + `_authors\">\n-                                                        </div>\n-                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n-                                                    </div>\n-                                                </div>\n-                                            </div>\n-                                        </div>\n-                                    </div>\n-                                    `;\n-\n-                                listItem.appendChild(formContainer);\n-                                fileList.appendChild(listItem);\n-\n-                            });\n-\n-                            this.on('error', function (file, response) {\n-                                console.error(\"Error uploading file: \", response);\n-                                let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n-                                alerts.appendChild(alert);\n-                                alerts.style.display = 'block';\n-                            });\n-\n-                        }\n-                    };\n-\n-\n-                </script>\n-\n-            </div>\n-        </div>\n-\n-    </div>\n-\n-    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n-\n-        <div class=\"col-12\">\n-\n-            <hr>\n-\n-            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n-\n-            <div style=\"padding-left: 2rem\">\n-\n-                <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n-                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n-                    Upload dataset</button>\n-\n-                <div id=\"loading\" style=\"display: none\">\n-                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n-                    Uploading dataset, please wait...\n-                </div>\n-\n-                <div class=\"row\">\n-                    <div class=\"col-12 mb-3\">\n-\n-                    </div>\n-                </div>\n-\n-                \n-                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n-\n-                    </span>\n-\n-                <script>\n-                    const upload_button = document.getElementById('check_model_button');\n-\t\t\tupload_button.disabled = false;\n-                </script>\n-\n-            </div>\n-\n-\n-\n-\n-        </div>\n-\n-    </div>\n-\n-\n-{% endblock %}\n-\n-{% block scripts %}\n-    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n-    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n-{% endblock %}"
      },
      {
        "sha": "b803f06d34fae75f4ed4f2cf088836bd347ec819",
        "filename": "app/modules/dataset/templates/dataset/upload_dataset.html",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -247,6 +247,9 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n \n                                     let alert = document.createElement('p');\n                                     alert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t    if (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t    }\n                                     alerts.appendChild(alert);\n                                     alerts.style.display = 'block';\n                                 }\n@@ -434,7 +437,20 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n                             this.on('error', function (file, response) {\n                                 console.error(\"Error uploading file: \", response);\n                                 let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n+\t\t\t\tif (response.syntax) {\n+                                \talert.textContent = 'UVL not valid: ' + file.name +'. Error: '+response.message;\n+\t\t\t\t} else {\n+\t\t\t\t\tif ( response!=\"You can't upload files of this type.\") {\n+\n+\t\t\t\t\t\talert.textContent = 'Something went wrong while saving the file, try again please';\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\talert.textContent = \"You can't upload files of this type.\";\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tthis.removeFile(file);\n+\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0]);\n+\t\t\t\t}\n                                 alerts.appendChild(alert);\n                                 alerts.style.display = 'block';\n                             });\n@@ -529,4 +545,4 @@ <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\">\n {% block scripts %}\n     <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n     <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n-{% endblock %}\n\\ No newline at end of file\n+{% endblock %}"
      },
      {
        "sha": "6ce8c18b46f0e4c830b76d1e81b378f2cf840f3e",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -111,14 +111,6 @@\n                         </a>\n                     </li>\n \n-\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.list_dataset' else '' }}\">\n-                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n-                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n-                                class=\"align-middle\">Check model</span>\n-                        </a>\n-                    </li>\n-\n-\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/25",
    "id": 2231665695,
    "node_id": "PR_kwDONDG85c6FBIQf",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/25",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/25.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/25.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/25",
    "number": 25,
    "state": "closed",
    "locked": false,
    "title": "fix(dataset, auth): client secret token added and some fixes",
    "user": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-12T13:19:19Z",
    "updated_at": "2024-12-12T22:22:04Z",
    "closed_at": "2024-12-12T22:22:04Z",
    "merged_at": "2024-12-12T22:22:04Z",
    "merge_commit_sha": "3187bd9499715fe18985ef0f177e4ec5824fb129",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/25/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/25/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/25/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/d6f3d8664f474e87c766708c6fd8372f6fe853b0",
    "head": {
      "label": "flamenquin-hub-single:feature-sync-with-github",
      "ref": "feature-sync-with-github",
      "sha": "d6f3d8664f474e87c766708c6fd8372f6fe853b0",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "e99889a2e31685dedd1aace0e5b9522b0634e9e2",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/25"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/25"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/25"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/25/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/25/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/25/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/d6f3d8664f474e87c766708c6fd8372f6fe853b0"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "b9ea75aabfdbeb0e5b637b8d0741cec8dc7d86a2",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6f3d8664f474e87c766708c6fd8372f6fe853b0/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6f3d8664f474e87c766708c6fd8372f6fe853b0/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=d6f3d8664f474e87c766708c6fd8372f6fe853b0",
        "patch": "@@ -67,6 +67,7 @@ jobs:\n           ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n           GH_TOKEN: ${{ secrets.GH_TOKEN }}\n           GH_PAT: ${{ secrets.GH_PAT }}\n+          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}\n         run: |\n           curl \"$deploy_url\"\n       \n\\ No newline at end of file"
      },
      {
        "sha": "c8105b78321f80b32919280eedbd30d2feeed6e7",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 8,
        "deletions": 20,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6f3d8664f474e87c766708c6fd8372f6fe853b0/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6f3d8664f474e87c766708c6fd8372f6fe853b0/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=d6f3d8664f474e87c766708c6fd8372f6fe853b0",
        "patch": "@@ -15,11 +15,11 @@\n user_profile_service = UserProfileService()\n \n app = Flask(__name__)\n-#app.config[\"SECRET_KEY\"] = \"SECRET KEY  \"\n token_admin = os.getenv(\"ORG_TOKEN_ADMIN\")\n+client_secret = os.getenv(\"CLIENT_SECRET\")\n \n-github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g',\n-                                        client_secret='00b92023ceb36020d4d0a7f34d5a583e2e386611')\n+\n+github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g', client_secret=client_secret)\n \n app.register_blueprint(github_blueprint, url_prefix='/github_login')\n \n@@ -117,7 +117,6 @@ def invite_user():\n \n     if response.status_code == 201:\n         return f\"Now {username} can join our github organization. Accept it in github. Once joined, you don't have to repeat this process.\"\n-        #return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n     \n     elif response.status_code == 404:\n         return jsonify({\"error\": f\"Username {username} not found\"}), 404\n@@ -153,19 +152,8 @@ def crear_repo():\n     \n     except subprocess.CalledProcessError as e:\n         \n-        if e.returncode == 127:\n-            return '''\n-                The command 'gh' is not recognized. Please install GitHub CLI by following these steps in your command line:\n-\n-                    1. Update your package list:\n-                sudo apt update\n-                \n-                    2. Install the GitHub CLI:\n-                sudo apt install gh\n-                \n-                    3. You can verify the installation:\n-                gh --version\n-                '''\n-        \n-        return f\"Repository '{username}' is already created. Now, always you are sync with github, you can push from here your datasets or models to github.\"\n-    \n+        return (\n+            f\"Something went wrong, it may be caused by:<br>\"\n+            f\"1) Repository '{username}' is already created. Don't worry, now always you are sync with github, you can push from here your datasets or models to github.<br>\"\n+            f\"2) If you are a developer on localhost, you will have to give administrator permission.\"\n+        )    "
      },
      {
        "sha": "ce5ed9799afe5ba69c13299f6adb0fe295f3ca82",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6f3d8664f474e87c766708c6fd8372f6fe853b0/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6f3d8664f474e87c766708c6fd8372f6fe853b0/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=d6f3d8664f474e87c766708c6fd8372f6fe853b0",
        "patch": "@@ -385,14 +385,13 @@ def commit(dataset_id):\n         \n         all_files = repository.get_all_files_for_dataset(dataset_id)\n         \n-        # Copiar archivos y a\u00f1adirlos al commit\n+        # Copiar archivos, llevarlos al directorio de git y stagearlos\n         for archivo in all_files:\n             ruta_archivo_origen = archivo.get_path()\n             ruta_destino_archivo = os.path.join(ruta_carpeta, os.path.basename(ruta_archivo_origen))\n             shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n             subprocess.run(f\"git add {os.path.relpath(ruta_destino_archivo, ruta_repositorio)}\", cwd=ruta_repositorio, check=True, shell=True)\n         \n-        # Realizar el commit y el push\n         subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n         subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n \n@@ -421,16 +420,15 @@ def commit_file(file_id):\n        \n         ruta_repositorio = f\"/app/uvl_git/{username}\"\n     \n-        # Configurar usuario de Git\n         subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n         subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n \n         # Configurar URL remota con el PAT\n-        token = os.getenv('GH_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n+        token = os.getenv('GH_PAT')\n         repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n         subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n \n-        # Obtener archivo y hacer commit\n+        # Obtener archivo y copiarlo al directorio de git\n         hubfile_repository = HubfileRepository()\n         hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n         ruta_archivo_origen = hubfile.get_path()"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/21",
    "id": 2222375216,
    "node_id": "PR_kwDONDG85c6EdsEw",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/21",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/21.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/21.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/21",
    "number": 21,
    "state": "closed",
    "locked": false,
    "title": "fix(dataset): change name of the token",
    "user": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-09T00:38:23Z",
    "updated_at": "2024-12-09T00:42:43Z",
    "closed_at": "2024-12-09T00:42:43Z",
    "merged_at": "2024-12-09T00:42:43Z",
    "merge_commit_sha": "d6e307820805348d54b8bb3fa19d938db0210958",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/21/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/21/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/21/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/da200f12479507535e09c260aad4b26f598a7087",
    "head": {
      "label": "flamenquin-hub-single:feature-sync-with-github",
      "ref": "feature-sync-with-github",
      "sha": "da200f12479507535e09c260aad4b26f598a7087",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "b6a54bf03c23da2b108598770e203f7c7a6974c3",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/21"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/21"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/21"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/21/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/21/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/21/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/da200f12479507535e09c260aad4b26f598a7087"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "deb17a1db679f04f2787e6525e6a0ff67f98ac5f",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/da200f12479507535e09c260aad4b26f598a7087/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/da200f12479507535e09c260aad4b26f598a7087/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=da200f12479507535e09c260aad4b26f598a7087",
        "patch": "@@ -373,7 +373,7 @@ def commit(dataset_id):\n         subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n         subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n         \n-        token = os.getenv('GITHUB_PAT')\n+        token = os.getenv('GH_PAT')\n         repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n         subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n              \n@@ -426,7 +426,7 @@ def commit_file(file_id):\n         subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n \n         # Configurar URL remota con el PAT\n-        token = os.getenv('GITHUB_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n+        token = os.getenv('GH_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n         repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n         subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/19",
    "id": 2211141278,
    "node_id": "PR_kwDONDG85c6Dy1ae",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/19",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/19.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/19.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/19",
    "number": 19,
    "state": "closed",
    "locked": false,
    "title": "Feature(explore): Advanced filtering",
    "user": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-02T19:18:40Z",
    "updated_at": "2024-12-10T18:53:36Z",
    "closed_at": "2024-12-10T18:53:36Z",
    "merged_at": "2024-12-10T18:53:36Z",
    "merge_commit_sha": "365790be6d10225b670fbb6e5804a3de3daf090a",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [
      {
        "id": 7630944211,
        "node_id": "LA_kwDONDG85c8AAAABxtb30w",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      }
    ],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/19/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/19/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/19/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/ce6a18dfb9ed920305c01833ecda6c680f84f291",
    "head": {
      "label": "flamenquin-hub-single:feature-advanced_filtering",
      "ref": "feature-advanced_filtering",
      "sha": "ce6a18dfb9ed920305c01833ecda6c680f84f291",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "ba3c464f4122ed6dded6c97dc115b20a7400150a",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/19"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/19"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/19"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/19/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/19/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/19/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/ce6a18dfb9ed920305c01833ecda6c680f84f291"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "6f2edac23ceec557545bb8eaf134f3dcfa88d657",
        "filename": "app/modules/dataset/uvl_examples/file10.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tMessaging\t\n+\t\t\t\tor\n+\t\t\t\t\tSMS\n+\t\t\t\t\tMMS\n+\t\t\t\"Utility Features\"\t\n+\t\t\t\toptional\n+\t\t\t\t\tCalculator\n+\t\t\t\t\t\"Currency Exchange\"\n+\t\t\tOS\t\n+\t\t\t\talternative\n+\t\t\t\t\tSymbian\n+\t\t\t\t\tWinCE\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Currency Exchange\" => Calculator\n\\ No newline at end of file"
      },
      {
        "sha": "141cad170eaca409c3974334791706a0cc319f3b",
        "filename": "app/modules/dataset/uvl_examples/file11.uvl",
        "status": "modified",
        "additions": 25,
        "deletions": 17,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,27 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tOnlineshop {abstract}\t\n+\t\tmandatory\n+\t\t\tPayment {abstract}\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Debit Card\"\n+\t\t\t\t\t\"Credit Card\"\n+\t\t\t\"Product Selection\" {abstract}\t\n+\t\t\t\tmandatory\n+\t\t\t\t\tCatalog\t\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tCategories\n+\t\t\t\t\t\t\tSort\n+\t\t\t\toptional\n+\t\t\t\t\tSearch\n+\t\toptional\n+\t\t\tUserManagement {abstract}\t\n+\t\t\t\tor\n+\t\t\t\t\tOrders\n+\t\t\t\t\tSecurity\n+\t\t\t\t\tPayments\n+\t\t\t\t\tWishlist\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSearch => Security\n+\tSecurity => !Payments\n+\tPayments => !Security\n+\tSort | Search\n\\ No newline at end of file"
      },
      {
        "sha": "117471c9d2dc5561b9562f672aec92d9af73450d",
        "filename": "app/modules/dataset/uvl_examples/file12.uvl",
        "status": "modified",
        "additions": 22,
        "deletions": 18,
        "changes": 40,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,23 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Movies_App\" \n+\t\tmandatory\n+\t\t\t\"GUI\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Thin\" \n+\t\t\t\t\t\"Rich\" \n+\t\tmandatory\n+\t\t\t\"DB\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Local\" \n+\t\t\t\t\t\"Remote\" \n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\t\"Cache_Policy\" \n+\t\tmandatory\n+\t\t\t\"Network\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Wifi\" \n+\t\t\t\t\t\"Bluetooth\" \n+\t\toptional\n+\t\t\t\"GPS\" \n+\t\t\t\toptional\n+\t\t\t\t\t\"Built-In\" \n\\ No newline at end of file"
      },
      {
        "sha": "924a2f013c74f6bbea7f911b884dd9fd94e26f8b",
        "filename": "app/modules/dataset/uvl_examples/file2.uvl",
        "status": "modified",
        "additions": 19,
        "deletions": 18,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,20 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40"
      },
      {
        "sha": "9e14cb807f57d510839a4d68aff29e690523ac78",
        "filename": "app/modules/dataset/uvl_examples/file3.uvl",
        "status": "modified",
        "additions": 17,
        "deletions": 18,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,18 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "ad06cc4f7e038d2e2ab96ed02ae7ae1c2ef24dd0",
        "filename": "app/modules/dataset/uvl_examples/file4.uvl",
        "status": "modified",
        "additions": 20,
        "deletions": 17,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,22 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tsmartwatch {abstract true}\n+\t\tmandatory\n+\t\t\tscreen\n+\t\t\t\talternative\n+\t\t\t\t\ttouch\n+\t\t\t\t\tstandard\n+\t\t\t\"energy management\"\n+\t\t\t\talternative\n+\t\t\t\t\tbasic\n+\t\t\t\t\t\"advanced solar\"\n+\t\toptional\n+\t\t\tpayment\n+\t\t\tgps\n+\t\t\t\"sports tracking\"\n+\t\t\t\tor\n+\t\t\t\t\trunning\n+\t\t\t\t\tskiing\n+\t\t\t\t\thiking\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t!(payment & standard)\n+\t\"sports tracking\" => gps"
      },
      {
        "sha": "2ed3f8f650ad498e4e3ca0220d63dc841fc39db0",
        "filename": "app/modules/dataset/uvl_examples/file5.uvl",
        "status": "modified",
        "additions": 33,
        "deletions": 18,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,34 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "9234e685c686a0589a2f477bfc0f83156e104c5d",
        "filename": "app/modules/dataset/uvl_examples/file6.uvl",
        "status": "modified",
        "additions": 40,
        "deletions": 16,
        "changes": 56,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,43 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\toptional\n+\t\t\t\t\tTouchScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\t\toptional\n+\t\t\t\t\tContactlessPayment\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n+\t\t\t\toptional\n+\t\t\t\t\tNFC\n \n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tContactlessPayment => NFC"
      },
      {
        "sha": "3d881f9b14f76d1a693988f487862607e513ce69",
        "filename": "app/modules/dataset/uvl_examples/file7.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tGSM_Protocol_1900\n+\t\t\tMP3_Recording\n+\t\t\tCamera_Resolution\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"2_1MP\"\n+\t\t\t\t\t\"5 MP\"\n+\t\t\t\t\t\"3_1MP\"\n+\t\t\tCamera\n+\t\t\tAudio_Formats\t\n+\t\t\t\tor\n+\t\t\t\t\tWAV\n+\t\t\t\t\tMP3\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tMP3_Recording => MP3\n\\ No newline at end of file"
      },
      {
        "sha": "10dddc5e29b5fc9da5ba4b8692ecbf437448f719",
        "filename": "app/modules/dataset/uvl_examples/file8.uvl",
        "status": "modified",
        "additions": 36,
        "deletions": 18,
        "changes": 54,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,37 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tSV_Solution\t\n+\t\t\t\talternative\n+\t\t\t\t\tBMD\n+\t\t\t\t\tBMDCRM\n+\t\t\tCV_Documents\t\n+\t\t\t\tor\n+\t\t\t\t\t\"scan new\"\n+\t\t\t\t\t\"import external\"\n+\t\t\t\t\tarchive\n+\t\t\t\t\t\"read existing\"\n+\t\t\tCV_Claims\t\n+\t\t\t\tor\n+\t\t\t\t\tjournal\n+\t\t\t\t\t\"task manager\"\n+\t\t\tSV\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Particular Packages\"\n+\t\t\t\t\tSolution\n+\t\t\tCV_Customer\t\n+\t\t\t\tor\n+\t\t\t\t\tmail\n+\t\t\t\t\tphone\n+\t\t\tCV\t\n+\t\t\t\tor\n+\t\t\t\t\t\"Document Management\"\n+\t\t\t\t\t\"Claims Management\"\n+\t\t\t\t\t\"Customer Management\"\n+\t\t\tSV_Particular_Package\t\n+\t\t\t\tor\n+\t\t\t\t\tOrganizer\n+\t\t\t\t\t\"Label Printing\"\n+\t\t\t\t\tElse\n+\t\t\t\t\tDocs\n+\t\t\t\t\t\"Standard Letter\"\n\\ No newline at end of file"
      },
      {
        "sha": "1609b0318fca78c64b66a9f332daf50d08bb7879",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 41,
        "deletions": 1,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -16,13 +16,31 @@ function send_query() {\n         filter.addEventListener('input', () => {\n             const csrfToken = document.getElementById('csrf_token').value;\n \n+            const minFiles = document.getElementById('min_files').value || null;\n+            const maxFiles = document.getElementById('max_files').value || null;\n+            const minAvBranchingFactor = document.getElementById('min_av_branching_factor').value || null;\n+            const maxAvBranchingFactor = document.getElementById('max_av_branching_factor').value || null;\n+            const minLeafCount = document.getElementById('min_leaf_count').value || null;\n+            const maxLeafCount = document.getElementById('max_leaf_count').value || null;\n+            const minDepth = document.getElementById('min_depth').value || null;\n+            const maxDepth = document.getElementById('max_depth').value || null;\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n                 publication_type: document.querySelector('#publication_type').value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n+                min_files: minFiles,\n+                max_files: maxFiles,\n+                min_av_branching_factor: minAvBranchingFactor,\n+                max_av_branching_factor: maxAvBranchingFactor,\n+                min_leaf_count: minLeafCount,\n+                max_leaf_count: maxLeafCount,\n+                min_depth: minDepth,\n+                max_depth: maxDepth,\n+                leaf_feature_name: document.querySelector('#leaf_feature_name').value,\n+                core_feature_name: document.querySelector('#core_feature_name').value\n             };\n-\n+            \n             console.log(document.querySelector('#publication_type').value);\n \n             fetch('/explore', {\n@@ -179,6 +197,28 @@ function clearFilters() {\n         // option.dispatchEvent(new Event('input', {bubbles: true}));\n     });\n \n+    let minFilesInput = document.querySelector('#min_files');\n+    let maxFilesInput = document.querySelector('#max_files');\n+    minFilesInput.value = \"\"; \n+    maxFilesInput.value = \"\"; \n+    let minAvBranchingFactor = document.querySelector('#min_av_branching_factor');\n+    let maxAvBranchingFactor = document.querySelector('#max_av_branching_factor');\n+    minAvBranchingFactor.value = \"\"; \n+    maxAvBranchingFactor.value = \"\"; \n+    let minLeafCount = document.querySelector('#min_leaf_count');\n+    let maxLeafCount = document.querySelector('#max_leaf_count');\n+    minLeafCount.value = \"\"; \n+    maxLeafCount.value = \"\"; \n+    let minDepth = document.querySelector('#min_depth');\n+    let maxDepth = document.querySelector('#max_depth');\n+    minDepth.value = \"\"; \n+    maxDepth.value = \"\"; \n+    let leafFeatureName = document.querySelector('#leaf_feature_name');\n+    leafFeatureName.value = \"\";\n+    let coreFeatureName = document.querySelector('#core_feature_name');\n+    coreFeatureName.value = \"\";\n+\n+\n     // Perform a new search with the reset filters\n     queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n }"
      },
      {
        "sha": "fa37bd56d033abe4b84370094d21a3850923875b",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 71,
        "deletions": 2,
        "changes": 73,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -10,12 +10,31 @@ class ExploreRepository(BaseRepository):\n     def __init__(self):\n         super().__init__(DataSet)\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None, max_av_branching_factor=None,\n+               leaf_feature_name=\"\", core_feature_name=\"\",\n+               **kwargs):\n         # Normalize and remove unwanted characters\n         normalized_query = unidecode.unidecode(query).lower()\n         cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n \n         filters = []\n+        min_files = int(min_files) if min_files is not None else None\n+        max_files = int(max_files) if max_files is not None else None\n+\n+        min_leaf_count = int(min_leaf_count) if min_leaf_count is not None else None\n+        max_leaf_count = int(max_leaf_count) if max_leaf_count is not None else None\n+\n+        min_depth = int(min_depth) if min_depth is not None else None\n+        max_depth = int(max_depth) if max_depth is not None else None\n+\n+        min_av_branching_factor = float(min_av_branching_factor) if min_av_branching_factor is not None else None\n+        max_av_branching_factor = float(max_av_branching_factor) if max_av_branching_factor is not None else None\n+\n         for word in cleaned_query.split():\n             filters.append(DSMetaData.title.ilike(f\"%{word}%\"))\n             filters.append(DSMetaData.description.ilike(f\"%{word}%\"))\n@@ -55,7 +74,57 @@ def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **\n         # Order by created_at\n         if sorting == \"oldest\":\n             datasets = datasets.order_by(self.model.created_at.asc())\n+        elif sorting == \"filesize_asc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=False)\n+        elif sorting == \"filesize_desc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=True)\n         else:\n             datasets = datasets.order_by(self.model.created_at.desc())\n \n-        return datasets.all()\n+        if min_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() >= min_files]\n+        if max_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() <= max_files]\n+\n+        filtered_datasets = []\n+\n+        for dataset in datasets:\n+            feature_models = dataset.feature_models  \n+            dataset_passes_filter = False  \n+\n+            for model in feature_models:\n+                stats = model.calculate_statistics()  \n+                leaf_count = stats[\"leaf_count\"]\n+                depth = stats[\"max_depth\"]\n+                branching_factor = stats[\"branching_factor\"]\n+\n+                # Aplicar filtros a las estad\u00edsticas del modelo\n+                if ((min_leaf_count is not None and leaf_count < min_leaf_count) or\n+                    (max_leaf_count is not None and leaf_count > max_leaf_count) or\n+                    (min_depth is not None and depth < min_depth) or\n+                    (max_depth is not None and depth > max_depth) or\n+                    (min_av_branching_factor is not None and branching_factor < min_av_branching_factor) or\n+                        (max_av_branching_factor is not None and branching_factor > max_av_branching_factor)):\n+                    continue\n+\n+                if leaf_feature_name:\n+                    leaf_feature_names = model.get_leaf_feature_names()\n+                    print(leaf_feature_name)\n+                    if leaf_feature_name not in leaf_feature_names:\n+                        continue\n+\n+                if core_feature_name:\n+                    core_feature_names = model.get_core_feature_names()\n+                    if core_feature_name not in core_feature_names:\n+                        continue\n+\n+                dataset_passes_filter = True\n+                print(\"dataset_passes_filter\")\n+                break\n+\n+            if dataset_passes_filter:\n+                filtered_datasets.append(dataset)  \n+\n+        return filtered_datasets"
      },
      {
        "sha": "ecbed8e137e0f7d447b1b710e823b81cf204c427",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -6,5 +6,16 @@ class ExploreService(BaseService):\n     def __init__(self):\n         super().__init__(ExploreRepository())\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n-        return self.repository.filter(query, sorting, publication_type, tags, **kwargs)\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None,\n+               max_av_branching_factor=None,\n+               leaf_feature_name=\"\",\n+               core_feature_name=\"\", **kwargs):\n+        return self.repository.filter(query, sorting, publication_type, tags, min_files, max_files,\n+                                      min_leaf_count, max_leaf_count, min_depth, max_depth,\n+                                      min_av_branching_factor, max_av_branching_factor, leaf_feature_name,\n+                                      core_feature_name, **kwargs)"
      },
      {
        "sha": "f062144cdd68583a147b585fa2fa2d66cd94fb46",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 88,
        "deletions": 4,
        "changes": 92,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -54,8 +54,7 @@ <h3 class=\"h3 mb-3\">\n                                        value=\"\" autofocus>\n                             </div>\n                         </div>\n-\n-                        <div class=\"col-lg-6\">\n+                        <div class=\"col-lg-12\">\n                             <div class=\"mb-3\">\n                                 <label class=\"form-label\" for=\"publication_type\">Filter by publication\n                                     type</label>\n@@ -83,7 +82,79 @@ <h3 class=\"h3 mb-3\">\n                                     <option value=\"other\">Other</option>\n                                 </select>\n                             </div>\n-\n+                        </div>\n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_files\">Min Files:</label>\n+                                    <input type=\"number\" id=\"min_files\" name=\"min_files\" class=\"form-control\" placeholder=\"Min Files\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_files\">Max Files:</label>\n+                                    <input type=\"number\" id=\"max_files\" name=\"max_files\" class=\"form-control\" placeholder=\"Max Files\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_leaf_count\">Min Leaf Count:</label>\n+                                    <input type=\"number\" id=\"min_leaf_count\" name=\"min_leaf_count\" class=\"form-control\" placeholder=\"Min Leaf Count\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_leaf_count\">Max Leaf Count:</label>\n+                                    <input type=\"number\" id=\"max_leaf_count\" name=\"max_leaf_count\" class=\"form-control\" placeholder=\"Max Leaf Count\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_depth\">Min Depth:</label>\n+                                    <input type=\"number\" id=\"min_depth\" name=\"min_depth\" class=\"form-control\" placeholder=\"Min Depth\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_depth\">Max Depth:</label>\n+                                    <input type=\"number\" id=\"max_depth\" name=\"max_depth\" class=\"form-control\" placeholder=\"Max Depth\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_av_branching_factor\">Min Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"min_av_branching_factor\" name=\"min_av_branching_factor\" class=\"form-control\" placeholder=\"Min Average Branching Factor\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_av_branching_factor\">Max Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"max_av_branching_factor\" name=\"max_av_branching_factor\" class=\"form-control\" placeholder=\"Max Average Branching Factor\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"leaf_feature_name\">Leaf Feature Name:</label>\n+                                <input type=\"text\" id=\"leaf_feature_name\" name=\"leaf_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter leaf feature name\">\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"core_feature_name\">Core Feature Name:</label>\n+                                <input type=\"text\" id=\"core_feature_name\" name=\"core_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter core feature name\">\n+                            </div>\n                         </div>\n \n                     </div>\n@@ -108,7 +179,20 @@ <h3 class=\"h3 mb-3\">\n                                     </span>\n                                 </label>\n                             </div>\n-\n+                            <div>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_asc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Smallest first\n+                                    </span>\n+                                </label>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_desc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Largest first\n+                                    </span>\n+                                </label>\n+                            </div>\n                         </div>\n \n                     </div>"
      },
      {
        "sha": "9ed55640f52bbfc44bf4d95f0b7cd378428fd9e5",
        "filename": "app/modules/featuremodel/models.py",
        "status": "modified",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Fmodels.py?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -2,6 +2,9 @@\n from sqlalchemy import Enum as SQLAlchemyEnum\n \n from app.modules.dataset.models import Author, PublicationType\n+from flamapy.metamodels.fm_metamodel.transformations import UVLReader\n+from flamapy.metamodels.fm_metamodel.operations import FMAverageBranchingFactor, FMCountLeafs\n+from flamapy.metamodels.fm_metamodel.operations import FMMaxDepthTree, FMLeafFeatures, FMCoreFeatures\n \n \n class FeatureModel(db.Model):\n@@ -14,6 +17,51 @@ class FeatureModel(db.Model):\n     def __repr__(self):\n         return f'FeatureModel<{self.id}>'\n \n+    def calculate_statistics(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        leaf_counter = FMCountLeafs()\n+        leaf_counter.execute(fm)\n+        leaf_count = leaf_counter.get_result()\n+\n+        depth_calculator = FMMaxDepthTree()\n+        depth_calculator.execute(fm)\n+        max_tree_depth = depth_calculator.get_result()\n+\n+        branching_factor_calculator = FMAverageBranchingFactor()\n+        branching_factor_calculator.execute(fm)\n+        average_branching_factor = branching_factor_calculator.get_result()\n+\n+        return {\n+            \"leaf_count\": leaf_count,\n+            \"max_depth\": max_tree_depth,\n+            \"branching_factor\": average_branching_factor\n+        }\n+\n+    def get_leaf_feature_names(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        leaf_features_operation = FMLeafFeatures()\n+        leaf_features_operation.execute(fm)\n+        leaf_features = leaf_features_operation.get_result()\n+\n+        return [feature.name for feature in leaf_features]\n+\n+    def get_core_feature_names(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        core_features_operation = FMCoreFeatures()\n+        core_features_operation.execute(fm)\n+        core_features = core_features_operation.get_result()\n+\n+        return [feature.name for feature in core_features]\n+\n \n class FMMetaData(db.Model):\n     id = db.Column(db.Integer, primary_key=True)"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/17",
    "id": 2207812075,
    "node_id": "PR_kwDONDG85c6DmInr",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/17",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/17.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/17.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/17",
    "number": 17,
    "state": "closed",
    "locked": false,
    "title": "fix: Changed bibtex export to match uvl model view",
    "user": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Changed bibtex export method to use a preview, similar to the preview of a uvl model before downloading it",
    "created_at": "2024-11-29T18:08:52Z",
    "updated_at": "2024-12-02T18:58:04Z",
    "closed_at": "2024-12-02T18:58:04Z",
    "merged_at": "2024-12-02T18:58:03Z",
    "merge_commit_sha": "ba3c464f4122ed6dded6c97dc115b20a7400150a",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/17/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/17/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/17/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/c0d47f94d525bb619130d51138ceb39f585b83cd",
    "head": {
      "label": "flamenquin-hub-single:feature-export_dataset_bibtex",
      "ref": "feature-export_dataset_bibtex",
      "sha": "c0d47f94d525bb619130d51138ceb39f585b83cd",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "5dcb03ef81e8e2ece83592f0d7c6a743ccb8f42e",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/17"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/17"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/17"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/17/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/17/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/17/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/c0d47f94d525bb619130d51138ceb39f585b83cd"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "83912e71bdd7d9910afb53f0fdf0a67a9b272be7",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 35,
        "deletions": 32,
        "changes": 67,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c0d47f94d525bb619130d51138ceb39f585b83cd/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c0d47f94d525bb619130d51138ceb39f585b83cd/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=c0d47f94d525bb619130d51138ceb39f585b83cd",
        "patch": "@@ -291,42 +291,27 @@ def subdomain_index(doi):\n \n \n     # Export DataSet to BibTex\n-    closing_ = \"},\"\n-    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n-    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n-    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n     \n-    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n-        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    else:\n-        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n-    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n-    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n-\n-    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n-    bibtex_properties.append(\"}\")\n-    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n     \n-    max_preview_len = 60\n-    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n \n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    \n-    n_px = 17*(int(len(bibtex_properties)/2)+1)\n-\n-    page_render = render_template(\"dataset/view_dataset.html\",\n-                    dataset=dataset,\n-                    bibtex_dataset=bibtex_dataset,\n-                    bibtex_preview=bibtex_preview,\n-                    bibtex_preview_start = bibtex_properties[0],\n-                    bibtex_preview_lines=bibtex_properties[1:-1],\n-                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n-                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n-\n-    resp = make_response(page_render)\n-    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+\n+    resp = make_response(render_template(\"dataset/view_dataset.html\",dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp\n@@ -341,5 +326,23 @@ def get_unsynchronized_dataset(dataset_id):\n \n     if not dataset:\n         abort(404)\n+    \n+    ds_meta_data = dsmetadata_service.get_by_id(dataset.ds_meta_data_id)\n+\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    \n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n \n-    return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name)"
      },
      {
        "sha": "1adb3be4d273cc0921f5759f7ae1f44480da1cd1",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 46,
        "deletions": 31,
        "changes": 77,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c0d47f94d525bb619130d51138ceb39f585b83cd/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c0d47f94d525bb619130d51138ceb39f585b83cd/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=c0d47f94d525bb619130d51138ceb39f585b83cd",
        "patch": "@@ -159,38 +159,11 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n \n             {% if bibtex_dataset %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n-                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n-                    {{ bibtex_dataset }}\n-                </div>\n \n-                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n-                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n-                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n-                        <b>BibTex</b>\n-                    </span>\n-\n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_dataset }}\n-                    </span> -->\n-                   \n-                    \n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_preview }}\n-                    </span> -->\n-                   \n-\n-                    \n-                    <div class=\"doi_text\">\n-                        <div>{{ bibtex_preview_start }}</div>\n-                        {% for bib_line in bibtex_preview_lines %}\n-                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n-                        {% endfor %}\n-                        <div>{{ bibtex_preview_end }}</div>\n-                    </div>\n-                   \n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n+                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                    <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n             </div>\n             {% endif %}\n@@ -399,6 +372,30 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n     </div>\n </div>\n \n+<div class=\"modal fade\" id=\"bibtexViewerModal\" tabindex=\"-1\" aria-labelledby=\"bibtexViewerModalLabel\" aria-hidden=\"true\">\n+    <div class=\"modal-dialog modal-lg\" style=\"height: 80vh; display: flex; align-items: center;\">\n+        <div class=\"modal-content\" style=\"height: 80vh;\">\n+            <div class=\"modal-header\" style=\"display: flex; justify-content: space-between; align-items: center;\">\n+                <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex format</h5>\n+                <div>\n+                    <a href=\"#\" class=\"btn btn-outline-primary btn-sm\" id=\"bibtexDownloadButton\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"download\"></i>\n+                    </a>\n+                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"copy\"></i>\n+                    </button>\n+                    <button onclick=\"freeBibtexUrl()\" type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n+                </div>\n+            </div>\n+            <div class=\"modal-body\" style=\"overflow-y: auto; height: calc(100vh - 50px);\">\n+                <pre id=\"bibtexContent\" style=\"height: 100%; overflow-y: auto; white-space: pre-wrap; word-wrap: break-word; background-color: #f5f5f5; padding: 20px; border-radius: 5px; border: 1px solid #ccc;\"></pre>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js\"></script>\n \n \n@@ -410,6 +407,24 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n \n     var currentFileId;\n \n+    function freeBibtexUrl() {\n+        console.log(\"entra en freeBibtexUrl\")\n+        URL.revokeObjectURL(document.getElementById('bibtexDownloadButton').href)\n+    }\n+\n+    function viewBibtex(bibfilename) {\n+        var bib_content_display = document.getElementById('dataset_bibtex_export').textContent;\n+\n+        var blob = new Blob([bib_content_display], { type: 'text/plain' });\n+        var fileURL = URL.createObjectURL(blob);\n+        document.getElementById('bibtexDownloadButton').href = fileURL;\n+        document.getElementById('bibtexDownloadButton').download = bibfilename;\n+        document.getElementById('bibtexContent').textContent = bib_content_display;\n+\n+        var modal = new bootstrap.Modal(document.getElementById('bibtexViewerModal'));\n+        modal.show();\n+    }\n+\n     function viewFile(fileId) {\n         fetch(`/file/view/${fileId}`)\n             .then(response => response.json())"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/15",
    "id": 2206193417,
    "node_id": "PR_kwDONDG85c6Df9cJ",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/15",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/15.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/15.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/15",
    "number": 15,
    "state": "closed",
    "locked": false,
    "title": "Feature create workflows",
    "user": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-28T17:58:30Z",
    "updated_at": "2024-11-29T17:52:21Z",
    "closed_at": "2024-11-29T17:52:21Z",
    "merged_at": "2024-11-29T17:52:21Z",
    "merge_commit_sha": "fc37c4ec3764b8321f4269f382ce352b13d3ea2e",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/15/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/15/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/15/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2",
    "head": {
      "label": "flamenquin-hub-single:feature-create_workflows",
      "ref": "feature-create_workflows",
      "sha": "c4ef4f46604ed8c08fc0ca1506915ec9b060bef2",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "722d52117374611b812d6a91cc77682da2a5afe2",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/15"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/15"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/15"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/15/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/15/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/15/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "cecdd33c479807f9136a24c334ed2061c27240a8",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 15,
        "deletions": 13,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=c4ef4f46604ed8c08fc0ca1506915ec9b060bef2",
        "patch": "@@ -1,18 +1,20 @@\n-name: Commits Syntax Checker\n+name: Commit Message Check\n \n-on:\n-  pull_request:\n-    branches: [main]\n-    types: [opened, reopened, edited, review_requested, synchronize]\n-  push:\n-    branches:\n-      - \"main\"\n-  workflow_call:\n+on: [push]\n \n jobs:\n-  check:\n-    name: Conventional Commits\n+  commit-check:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@v2\n-      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file\n+      - name: Checkout code\n+        uses: actions/checkout@v1\n+        with:\n+          fetch-depth: 0\n+\n+      - name: Install dependencies\n+        run: npm install @commitlint/config-conventional @commitlint/cli husky\n+\n+      - name: Run CommitLint\n+        run: npx commitlint --from=HEAD~1 --to=HEAD --config @commitlint/config-conventional\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      },
      {
        "sha": "f4e983893e1b2152433c609db453d6ac3e1c883d",
        "filename": ".github/workflows/render.yml",
        "status": "added",
        "additions": 79,
        "deletions": 0,
        "changes": 79,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=c4ef4f46604ed8c08fc0ca1506915ec9b060bef2",
        "patch": "@@ -0,0 +1,79 @@\n+name: Deploy to Render\n+\n+on:\n+    push:\n+      tags:\n+      - 'v*' \n+    pull_request:\n+      branches:\n+        - main\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+        run: |\n+          curl \"$deploy_url\"\n+      - name: Send Notification\n+        if: always()\n+        env:\n+          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n+        run: |\n+          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment completed successfully!\"}' $SLACK_WEBHOOK_URL\n+      - name: Send Deployment Failure Notification\n+        if: failure()\n+        env:\n+          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n+        run: |\n+          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment failed!\"}' $SLACK_WEBHOOK_URL\n+      \n\\ No newline at end of file"
      },
      {
        "sha": "4fa0ff24534f55b52d3f9f6a37ddab522612f79a",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=c4ef4f46604ed8c08fc0ca1506915ec9b060bef2",
        "patch": "@@ -47,4 +47,4 @@ jobs:\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n       run: |\n-        pytest app/modules/ --ignore-glob='*selenium*'\n+        pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/13",
    "id": 2179423819,
    "node_id": "PR_kwDONDG85c6B515L",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/13",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/13.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/13.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/13",
    "number": 13,
    "state": "closed",
    "locked": false,
    "title": "feat: Implemented 2 Work Items and added issue templates",
    "user": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Added the WIs;\r\n\r\n- Export dataset in bibtex format\r\n- Upload, analyse and repair UVLs\r\n\r\nAdded issue templates for issues related to WIs, bug reports, and document changes\r\n",
    "created_at": "2024-11-14T10:47:51Z",
    "updated_at": "2024-11-29T15:52:54Z",
    "closed_at": "2024-11-29T15:52:54Z",
    "merged_at": "2024-11-29T15:52:54Z",
    "merge_commit_sha": "aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "JoseGTD",
        "id": 91948919,
        "node_id": "U_kgDOBXsHdw",
        "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JoseGTD",
        "html_url": "https://github.com/JoseGTD",
        "followers_url": "https://api.github.com/users/JoseGTD/followers",
        "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
        "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
        "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
        "repos_url": "https://api.github.com/users/JoseGTD/repos",
        "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
        "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/13/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/13/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/13/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/722d52117374611b812d6a91cc77682da2a5afe2",
    "head": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "722d52117374611b812d6a91cc77682da2a5afe2",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:main",
      "ref": "main",
      "sha": "68bda8a260f5f4856b774b4ffe9186a072feb08b",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/13"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/13"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/13"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/13/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/13/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/13/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/722d52117374611b812d6a91cc77682da2a5afe2"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "7a6013bf8ee1dfc7f2da495d18d7b020e9b0d3f0",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/722d52117374611b812d6a91cc77682da2a5afe2/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/722d52117374611b812d6a91cc77682da2a5afe2/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fbug_report.md?ref=722d52117374611b812d6a91cc77682da2a5afe2",
        "patch": "@@ -0,0 +1,38 @@\n+---\n+name: Bug report\n+about: For bugs you may find\n+title: Brief bug description\n+labels: bug\n+assignees: ''\n+\n+---\n+\n+**Describe the bug**\n+A clear and concise description of what the bug is.\n+\n+**To Reproduce**\n+Steps to reproduce the behavior:\n+1. Go to '...'\n+2. Click on '....'\n+3. Scroll down to '....'\n+4. See error\n+\n+**Expected behavior**\n+A clear and concise description of what you expected to happen.\n+\n+**Screenshots**\n+If applicable, add screenshots to help explain your problem.\n+\n+**Desktop (please complete the following information):**\n+ - OS: [e.g. iOS]\n+ - Browser [e.g. chrome, safari]\n+ - Version [e.g. 22]\n+\n+**Smartphone (please complete the following information):**\n+ - Device: [e.g. iPhone6]\n+ - OS: [e.g. iOS8.1]\n+ - Browser [e.g. stock browser, safari]\n+ - Version [e.g. 22]\n+\n+**Additional context**\n+Add any other context about the problem here."
      },
      {
        "sha": "ca07ee63e773329b8606abfa23190baa1209b303",
        "filename": ".github/ISSUE_TEMPLATE/documentation.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/722d52117374611b812d6a91cc77682da2a5afe2/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/722d52117374611b812d6a91cc77682da2a5afe2/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fdocumentation.md?ref=722d52117374611b812d6a91cc77682da2a5afe2",
        "patch": "@@ -0,0 +1,11 @@\n+---\n+name: Documentation\n+about: For documents that may need updating\n+title: Update for [document name]\n+labels: documentation\n+assignees: ''\n+\n+---\n+\n+**Name the document and describe the necessary updates**\n+Describe the updates that the document needs"
      },
      {
        "sha": "a4608544700957f9174c6c537bf9664fc3667d94",
        "filename": ".github/ISSUE_TEMPLATE/work-item.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/722d52117374611b812d6a91cc77682da2a5afe2/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/722d52117374611b812d6a91cc77682da2a5afe2/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fwork-item.md?ref=722d52117374611b812d6a91cc77682da2a5afe2",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Work Item\n+about: For Work Items\n+title: Work Item name\n+labels: enhancement\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n+\n+**Describe the solution you'd like**\n+A clear and concise description of what you want to happen.\n+\n+**Describe alternatives you've considered**\n+A clear and concise description of any alternative solutions or features you've considered.\n+\n+**Additional context**\n+Add any other context or screenshots about the feature request here."
      },
      {
        "sha": "4edc9174dc51d519b9495a2c564aabdf49b9f1d5",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 162,
        "deletions": 117,
        "changes": 279,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/722d52117374611b812d6a91cc77682da2a5afe2/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/722d52117374611b812d6a91cc77682da2a5afe2/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=722d52117374611b812d6a91cc77682da2a5afe2",
        "patch": "@@ -5,6 +5,10 @@ var currentId = 0;\n             document.getElementById(\"upload_dataset\").style.display = \"block\";\n         }\n \n+\tfunction show_check_dataset() {\n+\t\tdocument.getElementById(\"check_dataset\").style.display = \"block\";\n+\t}\n+\n         function generateIncrementalId() {\n             return currentId++;\n         }\n@@ -81,13 +85,14 @@ var currentId = 0;\n             return (titleLength >= 3 && descriptionLength >= 3);\n         }\n \n+\tif (document.getElementById('add_author')) {\n+\t\tdocument.getElementById('add_author').addEventListener('click', function () {\n+\t\t\tlet authors = document.getElementById('authors');\n+\t\t\tlet newAuthor = createAuthorBlock(amount_authors++, \"\");\n+\t\t\tauthors.appendChild(newAuthor);\n+\t\t});\n \n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n+\t}        \n \n         document.addEventListener('click', function (event) {\n             if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n@@ -102,10 +107,14 @@ var currentId = 0;\n             }\n         });\n \n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n+        function show_loading(type) {\n+\t\tif (type===\"check\") {\n+\t\t\tdocument.getElementById(\"check_model_button\").style.display = \"none\";\n+\t\t} else {\n+\t\t\tdocument.getElementById(\"upload_button\").style.display = \"none\";\n+\t\t}\n+\t\tdocument.getElementById(\"loading\").style.display = \"block\";\n+\t}\n \n         function hide_loading() {\n             document.getElementById(\"upload_button\").style.display = \"block\";\n@@ -130,110 +139,146 @@ var currentId = 0;\n \n         window.onload = function () {\n \n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n-\n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n\\ No newline at end of file\n+\t\tif (document.getElementById('check_model_button')) {\n+\n+\t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n+\t\t\t\tconsole.log(\"hi\");\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"check\");\n+\n+\t\t\t\t\n+\t\t\t\tfetch('/dataset/check', {\n+\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\tbody: ''\n+\t\t\t\t})\n+\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\t//window.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t}\n+\t\t\t\t\t})\n+\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t});\n+\t\t\t\tconsole.log(\"yeah\")\n+\n+\t\t\t});\n+\t\t}\n+\t\tif (document.getElementById('upload_button')){\n+\t\t\tdocument.getElementById('upload_button').addEventListener('click', function () {\n+\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"upload\");\n+\n+\t\t\t\t// check title and description\n+\t\t\t\tlet check = check_title_and_description();\n+\n+\t\t\t\tif (check) {\n+\t\t\t\t\t// process data form\n+\t\t\t\t\tconst formData = {};\n+\n+\t\t\t\t\t[\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+\t\t\t\t\t\tconst form = document.getElementById(formId);\n+\t\t\t\t\t\tconst inputs = form.querySelectorAll('input, select, textarea');\n+\t\t\t\t\t\tinputs.forEach(input => {\n+\t\t\t\t\t\t\tif (input.name) {\n+\t\t\t\t\t\t\t\tformData[input.name] = formData[input.name] || [];\n+\t\t\t\t\t\t\t\tformData[input.name].push(input.value);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t});\n+\t\t\t\t\t});\n+\n+\t\t\t\t\tlet formDataJson = JSON.stringify(formData);\n+\t\t\t\t\tconsole.log(formDataJson);\n+\n+\t\t\t\t\tconst csrfToken = document.getElementById('csrf_token').value;\n+\t\t\t\t\tconst formUploadData = new FormData();\n+\t\t\t\t\tformUploadData.append('csrf_token', csrfToken);\n+\n+\t\t\t\t\tfor (let key in formData) {\n+\t\t\t\t\t\tif (formData.hasOwnProperty(key)) {\n+\t\t\t\t\t\t\tformUploadData.set(key, formData[key]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tlet checked_orcid = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_orcid)) {\n+\t\t\t\t\t\tfor (let orcid of formData.author_orcid) {\n+\t\t\t\t\t\t\torcid = orcid.trim();\n+\t\t\t\t\t\t\tif (orcid !== '' && !isValidOrcid(orcid)) {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+\t\t\t\t\t\t\t\tchecked_orcid = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tlet checked_name = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_name)) {\n+\t\t\t\t\t\tfor (let name of formData.author_name) {\n+\t\t\t\t\t\t\tname = name.trim();\n+\t\t\t\t\t\t\tif (name === '') {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"The author's name cannot be empty\");\n+\t\t\t\t\t\t\t\tchecked_name = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tif (checked_orcid && checked_name) {\n+\t\t\t\t\t\tfetch('/dataset/upload', {\n+\t\t\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\t\t\tbody: formUploadData\n+\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\t\t\twindow.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t} else {\n+\t\t\t\t\thide_loading();\n+\t\t\t\t}\n+\n+\n+\t\t\t});\n+\t\t}\n+\t};\n+\n+\n+function isValidOrcid(orcid) {\n+\tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+\treturn orcidRegex.test(orcid);\n+}"
      },
      {
        "sha": "a2b1204eeb812d4ea6f9c9dd9d85aa28c0341c11",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 66,
        "deletions": 1,
        "changes": 67,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/722d52117374611b812d6a91cc77682da2a5afe2/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/722d52117374611b812d6a91cc77682da2a5afe2/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=722d52117374611b812d6a91cc77682da2a5afe2",
        "patch": "@@ -117,6 +117,35 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n+@dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n+@login_required\n+def check_dataset():\n+    form = DataSetForm()\n+    if request.method==\"POST\": \n+\n+        temp_folder = current_user.temp_folder()\n+        if not os.path.exists(temp_folder):\n+           return jsonify({\"message\": \"Something went wrong, try again\"}), 400\n+        \n+        filename = os.listdir(temp_folder)[0]\n+        file_path = os.path.join(temp_folder, filename)\n+        \n+        with open(file_path) as f:\n+            indent = 0\n+            x = \"\".join([i for i in f])\n+            print(x)\n+        return jsonify({\"message\": x}),200\n+   \n+    # setting things up for the checker to have only one file available\n+    temp_folder = current_user.temp_folder()\n+    if os.path.exists(temp_folder) and os.path.isdir(temp_folder):\n+            shutil.rmtree(temp_folder)\n+\n+    return render_template(\n+        \"dataset/check_datasets.html\", form = form )\n+\n+\n+\n \n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n@@ -162,6 +191,7 @@ def upload():\n     )\n \n \n+\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()\n@@ -259,9 +289,44 @@ def subdomain_index(doi):\n     # Get dataset\n     dataset = ds_meta_data.data_set\n \n+\n+    # Export DataSet to BibTex\n+    closing_ = \"},\"\n+    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n+    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n+    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n+    \n+    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n+        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    else:\n+        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n+    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n+    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n+\n+    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n+    bibtex_properties.append(\"}\")\n+    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    \n+    max_preview_len = 60\n+    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+\n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+    \n+    n_px = 17*(int(len(bibtex_properties)/2)+1)\n+\n+    page_render = render_template(\"dataset/view_dataset.html\",\n+                    dataset=dataset,\n+                    bibtex_dataset=bibtex_dataset,\n+                    bibtex_preview=bibtex_preview,\n+                    bibtex_preview_start = bibtex_properties[0],\n+                    bibtex_preview_lines=bibtex_properties[1:-1],\n+                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n+                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n+\n+    resp = make_response(page_render)\n+    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp"
      },
      {
        "sha": "9c39a7ba463e67ba1cf726d260f7a84a1d8cbd14",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "added",
        "additions": 286,
        "deletions": 0,
        "changes": 286,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/722d52117374611b812d6a91cc77682da2a5afe2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/722d52117374611b812d6a91cc77682da2a5afe2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=722d52117374611b812d6a91cc77682da2a5afe2",
        "patch": "@@ -0,0 +1,286 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}Check UVL model{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n+\n+    {% if messages %}\n+        <ul>\n+            {% for message in messages %}\n+                <li>{{ message }}</li>\n+            {% endfor %}\n+        </ul>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+\n+            <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n+\n+            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n+                \n+\t\t{{ form.hidden_tag() }}\n+\n+\n+                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n+                    <div id=\"dropzone-text\"></div>\n+                </form>\n+\n+                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n+                    </span>\n+\n+                <ul class=\"mt-2\" id=\"file-list\"></ul>\n+\n+                <script>\n+                    let dropzone = Dropzone.options.myDropzone = {\n+                        url: \"/dataset/file/upload\",\n+                        paramName: 'file',\n+                        maxFilesize: 10,\n+                        acceptedFiles: '.uvl',\n+                        init: function () {\n+\n+\t\t\t\tlet fileList = document.getElementById('file-list');\n+\t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n+\t\t\t\tlet alerts = document.getElementById('alerts');\n+\t\t\t\tthis.on('addedfile', function (file) {\n+\n+\t\t\t\t\tlet ext = file.name.split('.').pop();\n+\t\t\t\t\tif (ext !== 'uvl') {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+\t\t\t\t\tif (fileList.childElementCount > 0) {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+                            });\n+\n+                            this.on('success', function (file, response) {\n+\n+                                let dropzone = this;\n+\n+                                show_upload_dataset();\n+\n+                                console.log(\"File uploaded: \", response);\n+                                // actions when UVL model is uploaded\n+                                let listItem = document.createElement('li');\n+                                let h4Element = document.createElement('h4');\n+                                h4Element.textContent = response.filename;\n+                                listItem.appendChild(h4Element);\n+\n+                                // generate incremental id for form\n+                                let formUniqueId = generateIncrementalId();\n+\n+                               /*\n+                                    ##########################################\n+                                    REMOVE BUTTON\n+                                    ##########################################\n+                                */\n+\n+                                // remove button\n+                                let removeButton = document.createElement('button');\n+                                removeButton.innerHTML = 'Delete model';\n+                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n+                                removeButton.style.borderRadius = '5px';\n+\n+                                removeButton.addEventListener('click', function () {\n+                                    fileList.removeChild(listItem);\n+                                    this.removeFile(file);\n+\n+                                    // Ajax request\n+                                    let xhr = new XMLHttpRequest();\n+                                    xhr.open('POST', '/dataset/file/delete', true);\n+                                    xhr.setRequestHeader('Content-Type', 'application/json');\n+                                    xhr.onload = function () {\n+                                        if (xhr.status === 200) {\n+                                            console.log('Deleted file from server');\n+\n+                                            if (dropzone.files.length === 0) {\n+                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n+                                                clean_upload_errors();\n+                                            }\n+\n+                                        }\n+                                    };\n+                                    xhr.send(JSON.stringify({file: file.name}));\n+                                }.bind(this));\n+\n+                                /*\n+                                    ##########################################\n+                                    APPEND BUTTONS\n+                                    ##########################################\n+                                */\n+                                listItem.appendChild(removeButton);\n+\n+                                /*\n+                                    ##########################################\n+                                    UVL FORM\n+                                    ##########################################\n+                                */\n+\n+                                // create specific form for UVL\n+                                let formContainer = document.createElement('div');\n+                                formContainer.id = formUniqueId + \"_form\";\n+                                formContainer.classList.add('uvl_form', \"mt-3\");\n+                                formContainer.style.display = \"none\";\n+\n+                                formContainer.innerHTML = `\n+                                    <div class=\"row\">\n+                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n+                                        <div class=\"col-12\">\n+                                            <div class=\"row\">\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Title</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Description</label>\n+                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n+                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n+                                                            <option value=\"none\">None</option>\n+                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n+                                                            <option value=\"book\">Book</option>\n+                                                            <option value=\"section\">Book Section</option>\n+                                                            <option value=\"conferencepaper\">Conference Paper</option>\n+                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n+                                                            <option value=\"article\">Journal Article</option>\n+                                                            <option value=\"patent\">Patent</option>\n+                                                            <option value=\"preprint\">Preprint</option>\n+                                                            <option value=\"deliverable\">Project Deliverable</option>\n+                                                            <option value=\"milestone\">Project Milestone</option>\n+                                                            <option value=\"proposal\">Proposal</option>\n+                                                            <option value=\"report\">Report</option>\n+                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n+                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n+                                                            <option value=\"technicalnote\">Technical Note</option>\n+                                                            <option value=\"thesis\">Thesis</option>\n+                                                            <option value=\"workingpaper\">Working Paper</option>\n+                                                            <option value=\"other\">Other</option>\n+                                                        </select>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n+                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">UVL version</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Authors</label>\n+                                                        <div id=\"` + formContainer.id + `_authors\">\n+                                                        </div>\n+                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n+                                                    </div>\n+                                                </div>\n+                                            </div>\n+                                        </div>\n+                                    </div>\n+                                    `;\n+\n+                                listItem.appendChild(formContainer);\n+                                fileList.appendChild(listItem);\n+\n+                            });\n+\n+                            this.on('error', function (file, response) {\n+                                console.error(\"Error uploading file: \", response);\n+                                let alert = document.createElement('p');\n+                                alert.textContent = 'UVL not valid: ' + file.name;\n+                                alerts.appendChild(alert);\n+                                alerts.style.display = 'block';\n+                            });\n+\n+                        }\n+                    };\n+\n+\n+                </script>\n+\n+            </div>\n+        </div>\n+\n+    </div>\n+\n+    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n+\n+        <div class=\"col-12\">\n+\n+            <hr>\n+\n+            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n+\n+            <div style=\"padding-left: 2rem\">\n+\n+                <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n+                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n+                    Upload dataset</button>\n+\n+                <div id=\"loading\" style=\"display: none\">\n+                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n+                    Uploading dataset, please wait...\n+                </div>\n+\n+                <div class=\"row\">\n+                    <div class=\"col-12 mb-3\">\n+\n+                    </div>\n+                </div>\n+\n+                \n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n+\n+                    </span>\n+\n+                <script>\n+                    const upload_button = document.getElementById('check_model_button');\n+\t\t\tupload_button.disabled = false;\n+                </script>\n+\n+            </div>\n+\n+\n+\n+\n+        </div>\n+\n+    </div>\n+\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "d6c86796f02635516ddddabf1bd9491dd205e985",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/722d52117374611b812d6a91cc77682da2a5afe2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/722d52117374611b812d6a91cc77682da2a5afe2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=722d52117374611b812d6a91cc77682da2a5afe2",
        "patch": "@@ -158,6 +158,43 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             </div>\n \n+            {% if bibtex_dataset %}\n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n+                    {{ bibtex_dataset }}\n+                </div>\n+\n+                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n+                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n+                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                        <b>BibTex</b>\n+                    </span>\n+\n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_dataset }}\n+                    </span> -->\n+                   \n+                    \n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_preview }}\n+                    </span> -->\n+                   \n+\n+                    \n+                    <div class=\"doi_text\">\n+                        <div>{{ bibtex_preview_start }}</div>\n+                        {% for bib_line in bibtex_preview_lines %}\n+                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n+                        {% endfor %}\n+                        <div>{{ bibtex_preview_end }}</div>\n+                    </div>\n+                   \n+                </button>\n+            </div>\n+            {% endif %}\n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n             <div class=\"card-body\" style=\"padding-top: 0px\">\n \n@@ -182,6 +219,8 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n             {% endif %}\n \n+            \n+\n         </div>\n \n         <div class=\"card\">"
      },
      {
        "sha": "6a3d5d74165417518ea46c42bc095400cc648683",
        "filename": "app/static/css/own.css",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/722d52117374611b812d6a91cc77682da2a5afe2/app%2Fstatic%2Fcss%2Fown.css",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/722d52117374611b812d6a91cc77682da2a5afe2/app%2Fstatic%2Fcss%2Fown.css",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fcss%2Fown.css?ref=722d52117374611b812d6a91cc77682da2a5afe2",
        "patch": "@@ -142,8 +142,10 @@\n     background-color: #147ABB;\n     padding: 10px;\n     display: flex;\n-    align-items: center;\n+    flex-direction: column;\n+    align-items: flex-start;\n     transition: background-color 0.3s ease;\n+    text-wrap: wrap;\n }\n \n .doi_button:hover .doi_text {"
      },
      {
        "sha": "59133f56c0ce9befb57f7f8318e60aedafcf0f41",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/722d52117374611b812d6a91cc77682da2a5afe2/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/722d52117374611b812d6a91cc77682da2a5afe2/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=722d52117374611b812d6a91cc77682da2a5afe2",
        "patch": "@@ -110,6 +110,14 @@\n                         </a>\n                     </li>\n \n+\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.list_dataset' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n+                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n+                                class=\"align-middle\">Check model</span>\n+                        </a>\n+                    </li>\n+\n+\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>\n@@ -305,4 +313,4 @@\n \n </body>\n \n-</html>\n\\ No newline at end of file\n+</html>"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/12",
    "id": 2179406959,
    "node_id": "PR_kwDONDG85c6B5xxv",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/12",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/12.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/12.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/12",
    "number": 12,
    "state": "closed",
    "locked": false,
    "title": "docs: Update issue templates",
    "user": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Added templates for issues related to Work Items, bug reports, and documentation",
    "created_at": "2024-11-14T10:39:14Z",
    "updated_at": "2024-11-14T10:41:42Z",
    "closed_at": "2024-11-14T10:40:45Z",
    "merged_at": "2024-11-14T10:40:45Z",
    "merge_commit_sha": "722d52117374611b812d6a91cc77682da2a5afe2",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/12/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/12/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/12/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/928910ddf52a393d90a42e14a51c02bee9eb79cd",
    "head": {
      "label": "flamenquin-hub-single:misc-issue-templates",
      "ref": "misc-issue-templates",
      "sha": "928910ddf52a393d90a42e14a51c02bee9eb79cd",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "a3ecdacf869603862ed3463b553ac645d5cb92f4",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/12"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/12"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/12"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/12/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/12/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/12/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/928910ddf52a393d90a42e14a51c02bee9eb79cd"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "7a6013bf8ee1dfc7f2da495d18d7b020e9b0d3f0",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/928910ddf52a393d90a42e14a51c02bee9eb79cd/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/928910ddf52a393d90a42e14a51c02bee9eb79cd/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fbug_report.md?ref=928910ddf52a393d90a42e14a51c02bee9eb79cd",
        "patch": "@@ -0,0 +1,38 @@\n+---\n+name: Bug report\n+about: For bugs you may find\n+title: Brief bug description\n+labels: bug\n+assignees: ''\n+\n+---\n+\n+**Describe the bug**\n+A clear and concise description of what the bug is.\n+\n+**To Reproduce**\n+Steps to reproduce the behavior:\n+1. Go to '...'\n+2. Click on '....'\n+3. Scroll down to '....'\n+4. See error\n+\n+**Expected behavior**\n+A clear and concise description of what you expected to happen.\n+\n+**Screenshots**\n+If applicable, add screenshots to help explain your problem.\n+\n+**Desktop (please complete the following information):**\n+ - OS: [e.g. iOS]\n+ - Browser [e.g. chrome, safari]\n+ - Version [e.g. 22]\n+\n+**Smartphone (please complete the following information):**\n+ - Device: [e.g. iPhone6]\n+ - OS: [e.g. iOS8.1]\n+ - Browser [e.g. stock browser, safari]\n+ - Version [e.g. 22]\n+\n+**Additional context**\n+Add any other context about the problem here."
      },
      {
        "sha": "ca07ee63e773329b8606abfa23190baa1209b303",
        "filename": ".github/ISSUE_TEMPLATE/documentation.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/928910ddf52a393d90a42e14a51c02bee9eb79cd/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/928910ddf52a393d90a42e14a51c02bee9eb79cd/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fdocumentation.md?ref=928910ddf52a393d90a42e14a51c02bee9eb79cd",
        "patch": "@@ -0,0 +1,11 @@\n+---\n+name: Documentation\n+about: For documents that may need updating\n+title: Update for [document name]\n+labels: documentation\n+assignees: ''\n+\n+---\n+\n+**Name the document and describe the necessary updates**\n+Describe the updates that the document needs"
      },
      {
        "sha": "a4608544700957f9174c6c537bf9664fc3667d94",
        "filename": ".github/ISSUE_TEMPLATE/work-item.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/928910ddf52a393d90a42e14a51c02bee9eb79cd/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/928910ddf52a393d90a42e14a51c02bee9eb79cd/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fwork-item.md?ref=928910ddf52a393d90a42e14a51c02bee9eb79cd",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Work Item\n+about: For Work Items\n+title: Work Item name\n+labels: enhancement\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n+\n+**Describe the solution you'd like**\n+A clear and concise description of what you want to happen.\n+\n+**Describe alternatives you've considered**\n+A clear and concise description of any alternative solutions or features you've considered.\n+\n+**Additional context**\n+Add any other context or screenshots about the feature request here."
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/11",
    "id": 2179302682,
    "node_id": "PR_kwDONDG85c6B5YUa",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/11",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/11.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/11.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/11",
    "number": 11,
    "state": "closed",
    "locked": false,
    "title": "docs: Added issue templates",
    "user": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Added templates for issues related to Work Items, bug reports, and documentation",
    "created_at": "2024-11-14T09:51:42Z",
    "updated_at": "2024-11-14T10:33:23Z",
    "closed_at": "2024-11-14T10:33:13Z",
    "merged_at": null,
    "merge_commit_sha": "a3d576430808716e73c81d1f260ccee40896cb6b",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/11/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/11/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/11/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/770a0b9242cf976ad16f8e0d9a7fa3a712ccbf61",
    "head": {
      "label": "flamenquin-hub-single:misc-issue-templates",
      "ref": "misc-issue-templates",
      "sha": "770a0b9242cf976ad16f8e0d9a7fa3a712ccbf61",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "a3ecdacf869603862ed3463b553ac645d5cb92f4",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/11"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/11"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/11"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/11/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/11/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/11/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/770a0b9242cf976ad16f8e0d9a7fa3a712ccbf61"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "7a6013bf8ee1dfc7f2da495d18d7b020e9b0d3f0",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/770a0b9242cf976ad16f8e0d9a7fa3a712ccbf61/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/770a0b9242cf976ad16f8e0d9a7fa3a712ccbf61/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fbug_report.md?ref=770a0b9242cf976ad16f8e0d9a7fa3a712ccbf61",
        "patch": "@@ -0,0 +1,38 @@\n+---\n+name: Bug report\n+about: For bugs you may find\n+title: Brief bug description\n+labels: bug\n+assignees: ''\n+\n+---\n+\n+**Describe the bug**\n+A clear and concise description of what the bug is.\n+\n+**To Reproduce**\n+Steps to reproduce the behavior:\n+1. Go to '...'\n+2. Click on '....'\n+3. Scroll down to '....'\n+4. See error\n+\n+**Expected behavior**\n+A clear and concise description of what you expected to happen.\n+\n+**Screenshots**\n+If applicable, add screenshots to help explain your problem.\n+\n+**Desktop (please complete the following information):**\n+ - OS: [e.g. iOS]\n+ - Browser [e.g. chrome, safari]\n+ - Version [e.g. 22]\n+\n+**Smartphone (please complete the following information):**\n+ - Device: [e.g. iPhone6]\n+ - OS: [e.g. iOS8.1]\n+ - Browser [e.g. stock browser, safari]\n+ - Version [e.g. 22]\n+\n+**Additional context**\n+Add any other context about the problem here."
      },
      {
        "sha": "ca07ee63e773329b8606abfa23190baa1209b303",
        "filename": ".github/ISSUE_TEMPLATE/documentation.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/770a0b9242cf976ad16f8e0d9a7fa3a712ccbf61/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/770a0b9242cf976ad16f8e0d9a7fa3a712ccbf61/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fdocumentation.md?ref=770a0b9242cf976ad16f8e0d9a7fa3a712ccbf61",
        "patch": "@@ -0,0 +1,11 @@\n+---\n+name: Documentation\n+about: For documents that may need updating\n+title: Update for [document name]\n+labels: documentation\n+assignees: ''\n+\n+---\n+\n+**Name the document and describe the necessary updates**\n+Describe the updates that the document needs"
      },
      {
        "sha": "a4608544700957f9174c6c537bf9664fc3667d94",
        "filename": ".github/ISSUE_TEMPLATE/work-item.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/770a0b9242cf976ad16f8e0d9a7fa3a712ccbf61/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/770a0b9242cf976ad16f8e0d9a7fa3a712ccbf61/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fwork-item.md?ref=770a0b9242cf976ad16f8e0d9a7fa3a712ccbf61",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Work Item\n+about: For Work Items\n+title: Work Item name\n+labels: enhancement\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n+\n+**Describe the solution you'd like**\n+A clear and concise description of what you want to happen.\n+\n+**Describe alternatives you've considered**\n+A clear and concise description of any alternative solutions or features you've considered.\n+\n+**Additional context**\n+Add any other context or screenshots about the feature request here."
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/9",
    "id": 2177704990,
    "node_id": "PR_kwDONDG85c6BzSQe",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/9",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/9.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/9.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/9",
    "number": 9,
    "state": "closed",
    "locked": false,
    "title": "Feature upload analyse and repair uvl",
    "user": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Peque\u00f1o cambio al base template para a\u00f1adir una nueva screen, creaci\u00f3n del html de la screen nueva, y editado el dataset/routes.py para conectarlo al backend",
    "created_at": "2024-11-13T15:29:26Z",
    "updated_at": "2024-11-13T16:58:17Z",
    "closed_at": "2024-11-13T16:58:17Z",
    "merged_at": "2024-11-13T16:58:17Z",
    "merge_commit_sha": "a3ecdacf869603862ed3463b553ac645d5cb92f4",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/9/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/9/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/9/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
    "head": {
      "label": "flamenquin-hub-single:feature-upload_analyse_and_repair_UVL",
      "ref": "feature-upload_analyse_and_repair_UVL",
      "sha": "3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "0747a5a100176c8f57a7dd372e0ff745842391c4",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/9"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/9"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/9"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/9/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/9/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/9/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "4edc9174dc51d519b9495a2c564aabdf49b9f1d5",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 162,
        "deletions": 117,
        "changes": 279,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
        "patch": "@@ -5,6 +5,10 @@ var currentId = 0;\n             document.getElementById(\"upload_dataset\").style.display = \"block\";\n         }\n \n+\tfunction show_check_dataset() {\n+\t\tdocument.getElementById(\"check_dataset\").style.display = \"block\";\n+\t}\n+\n         function generateIncrementalId() {\n             return currentId++;\n         }\n@@ -81,13 +85,14 @@ var currentId = 0;\n             return (titleLength >= 3 && descriptionLength >= 3);\n         }\n \n+\tif (document.getElementById('add_author')) {\n+\t\tdocument.getElementById('add_author').addEventListener('click', function () {\n+\t\t\tlet authors = document.getElementById('authors');\n+\t\t\tlet newAuthor = createAuthorBlock(amount_authors++, \"\");\n+\t\t\tauthors.appendChild(newAuthor);\n+\t\t});\n \n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n+\t}        \n \n         document.addEventListener('click', function (event) {\n             if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n@@ -102,10 +107,14 @@ var currentId = 0;\n             }\n         });\n \n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n+        function show_loading(type) {\n+\t\tif (type===\"check\") {\n+\t\t\tdocument.getElementById(\"check_model_button\").style.display = \"none\";\n+\t\t} else {\n+\t\t\tdocument.getElementById(\"upload_button\").style.display = \"none\";\n+\t\t}\n+\t\tdocument.getElementById(\"loading\").style.display = \"block\";\n+\t}\n \n         function hide_loading() {\n             document.getElementById(\"upload_button\").style.display = \"block\";\n@@ -130,110 +139,146 @@ var currentId = 0;\n \n         window.onload = function () {\n \n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n-\n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n\\ No newline at end of file\n+\t\tif (document.getElementById('check_model_button')) {\n+\n+\t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n+\t\t\t\tconsole.log(\"hi\");\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"check\");\n+\n+\t\t\t\t\n+\t\t\t\tfetch('/dataset/check', {\n+\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\tbody: ''\n+\t\t\t\t})\n+\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\t//window.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t}\n+\t\t\t\t\t})\n+\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t});\n+\t\t\t\tconsole.log(\"yeah\")\n+\n+\t\t\t});\n+\t\t}\n+\t\tif (document.getElementById('upload_button')){\n+\t\t\tdocument.getElementById('upload_button').addEventListener('click', function () {\n+\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"upload\");\n+\n+\t\t\t\t// check title and description\n+\t\t\t\tlet check = check_title_and_description();\n+\n+\t\t\t\tif (check) {\n+\t\t\t\t\t// process data form\n+\t\t\t\t\tconst formData = {};\n+\n+\t\t\t\t\t[\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+\t\t\t\t\t\tconst form = document.getElementById(formId);\n+\t\t\t\t\t\tconst inputs = form.querySelectorAll('input, select, textarea');\n+\t\t\t\t\t\tinputs.forEach(input => {\n+\t\t\t\t\t\t\tif (input.name) {\n+\t\t\t\t\t\t\t\tformData[input.name] = formData[input.name] || [];\n+\t\t\t\t\t\t\t\tformData[input.name].push(input.value);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t});\n+\t\t\t\t\t});\n+\n+\t\t\t\t\tlet formDataJson = JSON.stringify(formData);\n+\t\t\t\t\tconsole.log(formDataJson);\n+\n+\t\t\t\t\tconst csrfToken = document.getElementById('csrf_token').value;\n+\t\t\t\t\tconst formUploadData = new FormData();\n+\t\t\t\t\tformUploadData.append('csrf_token', csrfToken);\n+\n+\t\t\t\t\tfor (let key in formData) {\n+\t\t\t\t\t\tif (formData.hasOwnProperty(key)) {\n+\t\t\t\t\t\t\tformUploadData.set(key, formData[key]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tlet checked_orcid = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_orcid)) {\n+\t\t\t\t\t\tfor (let orcid of formData.author_orcid) {\n+\t\t\t\t\t\t\torcid = orcid.trim();\n+\t\t\t\t\t\t\tif (orcid !== '' && !isValidOrcid(orcid)) {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+\t\t\t\t\t\t\t\tchecked_orcid = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tlet checked_name = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_name)) {\n+\t\t\t\t\t\tfor (let name of formData.author_name) {\n+\t\t\t\t\t\t\tname = name.trim();\n+\t\t\t\t\t\t\tif (name === '') {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"The author's name cannot be empty\");\n+\t\t\t\t\t\t\t\tchecked_name = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tif (checked_orcid && checked_name) {\n+\t\t\t\t\t\tfetch('/dataset/upload', {\n+\t\t\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\t\t\tbody: formUploadData\n+\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\t\t\twindow.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t} else {\n+\t\t\t\t\thide_loading();\n+\t\t\t\t}\n+\n+\n+\t\t\t});\n+\t\t}\n+\t};\n+\n+\n+function isValidOrcid(orcid) {\n+\tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+\treturn orcidRegex.test(orcid);\n+}"
      },
      {
        "sha": "718b38dceefcd18e24fa95ffe7384f3007b8940d",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
        "patch": "@@ -117,6 +117,35 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n+@dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n+@login_required\n+def check_dataset():\n+    form = DataSetForm()\n+    if request.method==\"POST\": \n+\n+        temp_folder = current_user.temp_folder()\n+        if not os.path.exists(temp_folder):\n+           return jsonify({\"message\": \"Something went wrong, try again\"}), 400\n+        \n+        filename = os.listdir(temp_folder)[0]\n+        file_path = os.path.join(temp_folder, filename)\n+        \n+        with open(file_path) as f:\n+            indent = 0\n+            x = \"\".join([i for i in f])\n+            print(x)\n+        return jsonify({\"message\": x}),200\n+   \n+    # setting things up for the checker to have only one file available\n+    temp_folder = current_user.temp_folder()\n+    if os.path.exists(temp_folder) and os.path.isdir(temp_folder):\n+            shutil.rmtree(temp_folder)\n+\n+    return render_template(\n+        \"dataset/check_datasets.html\", form = form )\n+\n+\n+\n \n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n@@ -162,6 +191,7 @@ def upload():\n     )\n \n \n+\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()"
      },
      {
        "sha": "9c39a7ba463e67ba1cf726d260f7a84a1d8cbd14",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "added",
        "additions": 286,
        "deletions": 0,
        "changes": 286,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
        "patch": "@@ -0,0 +1,286 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}Check UVL model{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n+\n+    {% if messages %}\n+        <ul>\n+            {% for message in messages %}\n+                <li>{{ message }}</li>\n+            {% endfor %}\n+        </ul>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+\n+            <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n+\n+            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n+                \n+\t\t{{ form.hidden_tag() }}\n+\n+\n+                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n+                    <div id=\"dropzone-text\"></div>\n+                </form>\n+\n+                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n+                    </span>\n+\n+                <ul class=\"mt-2\" id=\"file-list\"></ul>\n+\n+                <script>\n+                    let dropzone = Dropzone.options.myDropzone = {\n+                        url: \"/dataset/file/upload\",\n+                        paramName: 'file',\n+                        maxFilesize: 10,\n+                        acceptedFiles: '.uvl',\n+                        init: function () {\n+\n+\t\t\t\tlet fileList = document.getElementById('file-list');\n+\t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n+\t\t\t\tlet alerts = document.getElementById('alerts');\n+\t\t\t\tthis.on('addedfile', function (file) {\n+\n+\t\t\t\t\tlet ext = file.name.split('.').pop();\n+\t\t\t\t\tif (ext !== 'uvl') {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+\t\t\t\t\tif (fileList.childElementCount > 0) {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+                            });\n+\n+                            this.on('success', function (file, response) {\n+\n+                                let dropzone = this;\n+\n+                                show_upload_dataset();\n+\n+                                console.log(\"File uploaded: \", response);\n+                                // actions when UVL model is uploaded\n+                                let listItem = document.createElement('li');\n+                                let h4Element = document.createElement('h4');\n+                                h4Element.textContent = response.filename;\n+                                listItem.appendChild(h4Element);\n+\n+                                // generate incremental id for form\n+                                let formUniqueId = generateIncrementalId();\n+\n+                               /*\n+                                    ##########################################\n+                                    REMOVE BUTTON\n+                                    ##########################################\n+                                */\n+\n+                                // remove button\n+                                let removeButton = document.createElement('button');\n+                                removeButton.innerHTML = 'Delete model';\n+                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n+                                removeButton.style.borderRadius = '5px';\n+\n+                                removeButton.addEventListener('click', function () {\n+                                    fileList.removeChild(listItem);\n+                                    this.removeFile(file);\n+\n+                                    // Ajax request\n+                                    let xhr = new XMLHttpRequest();\n+                                    xhr.open('POST', '/dataset/file/delete', true);\n+                                    xhr.setRequestHeader('Content-Type', 'application/json');\n+                                    xhr.onload = function () {\n+                                        if (xhr.status === 200) {\n+                                            console.log('Deleted file from server');\n+\n+                                            if (dropzone.files.length === 0) {\n+                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n+                                                clean_upload_errors();\n+                                            }\n+\n+                                        }\n+                                    };\n+                                    xhr.send(JSON.stringify({file: file.name}));\n+                                }.bind(this));\n+\n+                                /*\n+                                    ##########################################\n+                                    APPEND BUTTONS\n+                                    ##########################################\n+                                */\n+                                listItem.appendChild(removeButton);\n+\n+                                /*\n+                                    ##########################################\n+                                    UVL FORM\n+                                    ##########################################\n+                                */\n+\n+                                // create specific form for UVL\n+                                let formContainer = document.createElement('div');\n+                                formContainer.id = formUniqueId + \"_form\";\n+                                formContainer.classList.add('uvl_form', \"mt-3\");\n+                                formContainer.style.display = \"none\";\n+\n+                                formContainer.innerHTML = `\n+                                    <div class=\"row\">\n+                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n+                                        <div class=\"col-12\">\n+                                            <div class=\"row\">\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Title</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Description</label>\n+                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n+                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n+                                                            <option value=\"none\">None</option>\n+                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n+                                                            <option value=\"book\">Book</option>\n+                                                            <option value=\"section\">Book Section</option>\n+                                                            <option value=\"conferencepaper\">Conference Paper</option>\n+                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n+                                                            <option value=\"article\">Journal Article</option>\n+                                                            <option value=\"patent\">Patent</option>\n+                                                            <option value=\"preprint\">Preprint</option>\n+                                                            <option value=\"deliverable\">Project Deliverable</option>\n+                                                            <option value=\"milestone\">Project Milestone</option>\n+                                                            <option value=\"proposal\">Proposal</option>\n+                                                            <option value=\"report\">Report</option>\n+                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n+                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n+                                                            <option value=\"technicalnote\">Technical Note</option>\n+                                                            <option value=\"thesis\">Thesis</option>\n+                                                            <option value=\"workingpaper\">Working Paper</option>\n+                                                            <option value=\"other\">Other</option>\n+                                                        </select>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n+                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">UVL version</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Authors</label>\n+                                                        <div id=\"` + formContainer.id + `_authors\">\n+                                                        </div>\n+                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n+                                                    </div>\n+                                                </div>\n+                                            </div>\n+                                        </div>\n+                                    </div>\n+                                    `;\n+\n+                                listItem.appendChild(formContainer);\n+                                fileList.appendChild(listItem);\n+\n+                            });\n+\n+                            this.on('error', function (file, response) {\n+                                console.error(\"Error uploading file: \", response);\n+                                let alert = document.createElement('p');\n+                                alert.textContent = 'UVL not valid: ' + file.name;\n+                                alerts.appendChild(alert);\n+                                alerts.style.display = 'block';\n+                            });\n+\n+                        }\n+                    };\n+\n+\n+                </script>\n+\n+            </div>\n+        </div>\n+\n+    </div>\n+\n+    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n+\n+        <div class=\"col-12\">\n+\n+            <hr>\n+\n+            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n+\n+            <div style=\"padding-left: 2rem\">\n+\n+                <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n+                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n+                    Upload dataset</button>\n+\n+                <div id=\"loading\" style=\"display: none\">\n+                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n+                    Uploading dataset, please wait...\n+                </div>\n+\n+                <div class=\"row\">\n+                    <div class=\"col-12 mb-3\">\n+\n+                    </div>\n+                </div>\n+\n+                \n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n+\n+                    </span>\n+\n+                <script>\n+                    const upload_button = document.getElementById('check_model_button');\n+\t\t\tupload_button.disabled = false;\n+                </script>\n+\n+            </div>\n+\n+\n+\n+\n+        </div>\n+\n+    </div>\n+\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "59133f56c0ce9befb57f7f8318e60aedafcf0f41",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
        "patch": "@@ -110,6 +110,14 @@\n                         </a>\n                     </li>\n \n+\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.list_dataset' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n+                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n+                                class=\"align-middle\">Check model</span>\n+                        </a>\n+                    </li>\n+\n+\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>\n@@ -305,4 +313,4 @@\n \n </body>\n \n-</html>\n\\ No newline at end of file\n+</html>"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/8",
    "id": 2177698832,
    "node_id": "PR_kwDONDG85c6BzQwQ",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/8",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/8.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/8.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/8",
    "number": 8,
    "state": "closed",
    "locked": false,
    "title": "Feature(notepad): download different formats",
    "user": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Convert the download button into a dropdown to download the notepads in the different formats that Flamapy converts them into.",
    "created_at": "2024-11-13T15:26:36Z",
    "updated_at": "2024-12-09T14:06:22Z",
    "closed_at": "2024-12-09T14:06:22Z",
    "merged_at": "2024-12-09T14:06:21Z",
    "merge_commit_sha": "ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
    "assignee": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "raumonmar1",
        "id": 72814383,
        "node_id": "MDQ6VXNlcjcyODE0Mzgz",
        "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/raumonmar1",
        "html_url": "https://github.com/raumonmar1",
        "followers_url": "https://api.github.com/users/raumonmar1/followers",
        "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
        "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
        "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
        "repos_url": "https://api.github.com/users/raumonmar1/repos",
        "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
        "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [
      {
        "login": "JoseGTD",
        "id": 91948919,
        "node_id": "U_kgDOBXsHdw",
        "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JoseGTD",
        "html_url": "https://github.com/JoseGTD",
        "followers_url": "https://api.github.com/users/JoseGTD/followers",
        "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
        "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
        "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
        "repos_url": "https://api.github.com/users/JoseGTD/repos",
        "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
        "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "labels": [
      {
        "id": 7630944211,
        "node_id": "LA_kwDONDG85c8AAAABxtb30w",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      },
      {
        "id": 7838104351,
        "node_id": "LA_kwDONDG85c8AAAAB0y_7Hw",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels/Testing",
        "name": "Testing",
        "color": "0E8A16",
        "default": false,
        "description": "Testing features"
      }
    ],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/8/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/8/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/8/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/5c9321b2b8342f50742156b721c5f8f94d57c6e3",
    "head": {
      "label": "flamenquin-hub-single:feature-download_different_formats",
      "ref": "feature-download_different_formats",
      "sha": "5c9321b2b8342f50742156b721c5f8f94d57c6e3",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "d6e307820805348d54b8bb3fa19d938db0210958",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/8"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/8"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/8"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/8/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/8/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/8/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/5c9321b2b8342f50742156b721c5f8f94d57c6e3"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "7f38d141209c35b92dd1f1a3919add56d2f8acd0",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 113,
        "deletions": 0,
        "changes": 113,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=5c9321b2b8342f50742156b721c5f8f94d57c6e3",
        "patch": "@@ -139,6 +139,119 @@ var currentId = 0;\n \n         window.onload = function () {\n \n+            test_zenodo_connection();\n+\n+            document.getElementById('upload_button').addEventListener('click', function () {\n+\n+                clean_upload_errors();\n+                show_loading();\n+\n+                // check title and description\n+                let check = check_title_and_description();\n+\n+                if (check) {\n+                    // process data form\n+                    const formData = {};\n+\n+                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                        const form = document.getElementById(formId);\n+                        const inputs = form.querySelectorAll('input, select, textarea');\n+                        inputs.forEach(input => {\n+                            if (input.name) {\n+                                formData[input.name] = formData[input.name] || [];\n+                                formData[input.name].push(input.value);\n+                            }\n+                        });\n+                    });\n+\n+                    let formDataJson = JSON.stringify(formData);\n+                    console.log(formDataJson);\n+\n+                    const csrfToken = document.getElementById('csrf_token').value;\n+                    const formUploadData = new FormData();\n+                    formUploadData.append('csrf_token', csrfToken);\n+\n+                    for (let key in formData) {\n+                        if (formData.hasOwnProperty(key)) {\n+                            formUploadData.set(key, formData[key]);\n+                        }\n+                    }\n+\n+                    let checked_orcid = true;\n+                    if (Array.isArray(formData.author_orcid)) {\n+                        for (let orcid of formData.author_orcid) {\n+                            orcid = orcid.trim();\n+                            if (orcid !== '' && !isValidOrcid(orcid)) {\n+                                hide_loading();\n+                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                                checked_orcid = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    let checked_name = true;\n+                    if (Array.isArray(formData.author_name)) {\n+                        for (let name of formData.author_name) {\n+                            name = name.trim();\n+                            if (name === '') {\n+                                hide_loading();\n+                                write_upload_error(\"The author's name cannot be empty\");\n+                                checked_name = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    if (checked_orcid && checked_name) {\n+                        fetch('/dataset/upload', {\n+                            method: 'POST',\n+                            body: formUploadData\n+                        })\n+                            .then(response => {\n+                                if (response.ok) {\n+                                    console.log('Dataset sent successfully');\n+                                    response.json().then(data => {\n+                                        console.log(data.message);\n+                                        window.location.href = \"/dataset/list\";\n+                                    });\n+                                } else {\n+                                    response.json().then(data => {\n+                                        console.error('Error: ' + data.message);\n+                                        hide_loading();\n+\n+                                        write_upload_error(data.message);\n+\n+                                    });\n+                                }\n+                            })\n+                            .catch(error => {\n+                                console.error('Error in POST request:', error);\n+                            });\n+                    }\n+\n+\n+                } else {\n+                    hide_loading();\n+                }\n+\n+\n+            });\n+        };\n+\n+\n+        function isValidOrcid(orcid) {\n+            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+            return orcidRegex.test(orcid);\n+        }\n+\n+        function downloadDataset(datasetId, format) {\n+            const url = `/dataset/download/${datasetId}/${format}`;\n+            window.location.href = url;\n+        }\n+        \n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {"
      },
      {
        "sha": "23d72338ddbcd462278af6be5b323670d5cea7cb",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 25,
        "deletions": 59,
        "changes": 84,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=5c9321b2b8342f50742156b721c5f8f94d57c6e3",
        "patch": "@@ -7,24 +7,12 @@\n import uuid\n from datetime import datetime, timezone\n from zipfile import ZipFile\n-\n-from flask import (\n-    redirect,\n-    render_template,\n-    request,\n-    jsonify,\n-    send_from_directory,\n-    make_response,\n-    abort,\n-    url_for,\n-)\n+from flask import jsonify, redirect, url_for, render_template, request, send_from_directory, make_response, abort\n from flask_login import login_required, current_user\n import requests\n from app.modules.dataset.repositories import DSMetaDataRepository\n from app.modules.dataset.forms import DataSetForm\n-from app.modules.dataset.models import (\n-    DSDownloadRecord\n-)\n+from app.modules.dataset.models import DSDownloadRecord\n from app.modules.dataset import dataset_bp\n from app.modules.dataset.repositories import DataSetRepository\n from app.modules.dataset.services import (\n@@ -42,21 +30,18 @@\n \n logger = logging.getLogger(__name__)\n \n-\n dataset_service = DataSetService()\n author_service = AuthorService()\n dsmetadata_service = DSMetaDataService()\n zenodo_service = ZenodoService()\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n \n-\n @dataset_bp.route(\"/dataset/upload\", methods=[\"GET\", \"POST\"])\n @login_required\n def create_dataset():\n     form = DataSetForm()\n     if request.method == \"POST\":\n-\n         dataset = None\n \n         if not form.validate_on_submit():\n@@ -68,8 +53,8 @@ def create_dataset():\n             logger.info(f\"Created dataset: {dataset}\")\n             dataset_service.move_feature_models(dataset)\n         except Exception as exc:\n-            logger.exception(f\"Exception while create dataset data in local {exc}\")\n-            return jsonify({\"Exception while create dataset data in local: \": str(exc)}), 400\n+            logger.exception(f\"Exception while creating dataset data in local {exc}\")\n+            return jsonify({\"Exception while creating dataset data in local\": str(exc)}), 400\n \n         # send dataset as deposition to Zenodo\n         data = {}\n@@ -80,30 +65,22 @@ def create_dataset():\n         except Exception as exc:\n             data = {}\n             zenodo_response_json = {}\n-            logger.exception(f\"Exception while create dataset data in Zenodo {exc}\")\n+            logger.exception(f\"Exception while creating dataset data in Zenodo {exc}\")\n \n         if data.get(\"conceptrecid\"):\n             deposition_id = data.get(\"id\")\n-\n-            # update dataset with deposition id in Zenodo\n             dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n \n             try:\n-                # iterate for each feature model (one feature model = one request to Zenodo)\n                 for feature_model in dataset.feature_models:\n                     zenodo_service.upload_file(dataset, deposition_id, feature_model)\n-\n-                # publish deposition\n                 zenodo_service.publish_deposition(deposition_id)\n-\n-                # update DOI\n                 deposition_doi = zenodo_service.get_doi(deposition_id)\n                 dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n             except Exception as e:\n-                msg = f\"it has not been possible upload feature models in Zenodo and update the DOI: {e}\"\n+                msg = f\"it has not been possible to upload feature models in Zenodo and update the DOI: {e}\"\n                 return jsonify({\"message\": msg}), 200\n \n-        # Delete temp folder\n         file_path = current_user.temp_folder()\n         if os.path.exists(file_path) and os.path.isdir(file_path):\n             shutil.rmtree(file_path)\n@@ -113,7 +90,6 @@ def create_dataset():\n \n     return render_template(\"dataset/upload_dataset.html\", form=form)\n \n-\n @dataset_bp.route(\"/dataset/list\", methods=[\"GET\", \"POST\"])\n @login_required\n def list_dataset():\n@@ -150,9 +126,6 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-\n-\n-\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -162,14 +135,12 @@ def upload():\n     if not file or not file.filename.endswith(\".uvl\"):\n         return jsonify({\"message\": \"No valid file\"}), 400\n \n-    # create temp folder\n     if not os.path.exists(temp_folder):\n         os.makedirs(temp_folder)\n \n     file_path = os.path.join(temp_folder, file.filename)\n \n     if os.path.exists(file_path):\n-        # Generate unique filename (by recursion)\n         base_name, extension = os.path.splitext(file.filename)\n         i = 1\n         while os.path.exists(\n@@ -196,8 +167,6 @@ def upload():\n         200,\n     )\n \n-\n-\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()\n@@ -211,23 +180,18 @@ def delete():\n \n     return jsonify({\"error\": \"Error: File not found\"})\n \n-\n @dataset_bp.route(\"/dataset/download/<int:dataset_id>\", methods=[\"GET\"])\n def download_dataset(dataset_id):\n     dataset = dataset_service.get_or_404(dataset_id)\n-\n     file_path = f\"uploads/user_{dataset.user_id}/dataset_{dataset.id}/\"\n-\n     temp_dir = tempfile.mkdtemp()\n     zip_path = os.path.join(temp_dir, f\"dataset_{dataset_id}.zip\")\n \n     with ZipFile(zip_path, \"w\") as zipf:\n         for subdir, dirs, files in os.walk(file_path):\n             for file in files:\n                 full_path = os.path.join(subdir, file)\n-\n                 relative_path = os.path.relpath(full_path, file_path)\n-\n                 zipf.write(\n                     full_path,\n                     arcname=os.path.join(\n@@ -237,10 +201,7 @@ def download_dataset(dataset_id):\n \n     user_cookie = request.cookies.get(\"download_cookie\")\n     if not user_cookie:\n-        user_cookie = str(\n-            uuid.uuid4()\n-        )  # Generate a new unique identifier if it does not exist\n-        # Save the cookie to the user's browser\n+        user_cookie = str(uuid.uuid4())\n         resp = make_response(\n             send_from_directory(\n                 temp_dir,\n@@ -258,15 +219,13 @@ def download_dataset(dataset_id):\n             mimetype=\"application/zip\",\n         )\n \n-    # Check if the download record already exists for this cookie\n     existing_record = DSDownloadRecord.query.filter_by(\n         user_id=current_user.id if current_user.is_authenticated else None,\n         dataset_id=dataset_id,\n         download_cookie=user_cookie\n     ).first()\n \n     if not existing_record:\n-        # Record the download in your database\n         DSDownloadRecordService().create(\n             user_id=current_user.id if current_user.is_authenticated else None,\n             dataset_id=dataset_id,\n@@ -276,26 +235,19 @@ def download_dataset(dataset_id):\n \n     return resp\n \n-\n @dataset_bp.route(\"/doi/<path:doi>/\", methods=[\"GET\"])\n def subdomain_index(doi):\n-\n-    # Check if the DOI is an old DOI\n     new_doi = doi_mapping_service.get_new_doi(doi)\n     if new_doi:\n-        # Redirect to the same path with the new DOI\n         return redirect(url_for('dataset.subdomain_index', doi=new_doi), code=302)\n \n-    # Try to search the dataset by the provided DOI (which should already be the new one)\n     ds_meta_data = dsmetadata_service.filter_by_doi(doi)\n \n     if not ds_meta_data:\n         abort(404)\n \n-    # Get dataset\n     dataset = ds_meta_data.data_set\n-\n-\n+    \n     # Export DataSet to BibTex\n     \n     bibtex_propiedades = {\n@@ -322,12 +274,9 @@ def subdomain_index(doi):\n \n     return resp\n \n-\n @dataset_bp.route(\"/dataset/unsynchronized/<int:dataset_id>/\", methods=[\"GET\"])\n @login_required\n def get_unsynchronized_dataset(dataset_id):\n-\n-    # Get dataset\n     dataset = dataset_service.get_unsynchronized_dataset(current_user.id, dataset_id)\n \n     if not dataset:\n@@ -446,3 +395,20 @@ def commit_file(file_id):\n     except subprocess.CalledProcessError as e:\n         return f\"This model is already in your github repository.\"\n \n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+\n+@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(file_id, format):\n+    \"\"\"Endpoint to download dataset in the specified format.\n+    Formats supported: glencoe, splot, dimacs, zip.\n+    \"\"\"\n+    if format == \"glencoe\":\n+        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n+    elif format == \"splot\":\n+        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n+    elif format == \"dimacs\":\n+        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n+    elif format == \"zip\":\n+        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n+    else:\n+        return jsonify({\"error\": \"Formato no soportado\"}), 400"
      },
      {
        "sha": "70bffb940afd8ec36c1e1fc138476075cf8a6353",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=5c9321b2b8342f50742156b721c5f8f94d57c6e3",
        "patch": "@@ -41,6 +41,40 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n+                <div class=\"mt-2\">\n+                    <div class=\"btn-group\" role=\"group\">\n+                        <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n+                            <i data-feather=\"download\"></i> Download\n+                        </button>\n+                        <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n+                                    UVL\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                    Glencoe\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                    DIMACS\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                    SPLOT\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n+                                    ZIP\n+                                </a>\n+                            </li>\n+                        </ul>\n+                    </div>\n+                </div>\n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">"
      },
      {
        "sha": "d316841d1aca77398773dbb07abb7cbd5dd4e3dc",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=5c9321b2b8342f50742156b721c5f8f94d57c6e3",
        "patch": "@@ -0,0 +1,58 @@\n+import pytest\n+from flask import url_for\n+from app.modules.dataset.routes import download_dataset_format\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client(test_client):\n+    \"\"\"\n+    Extiende la fixture test_client para el m\u00f3dulo dataset.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_download_glencoe_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato Glencoe.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/glencoe\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+\n+\n+def test_download_splot_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato SPLOT.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/splot\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+\n+\n+def test_download_dimacs_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato DIMACS.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/dimacs\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+\n+\n+def test_download_zip_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato ZIP.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/zip\")\n+    assert response.status_code == 302\n+    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n+\n+def test_download_invalid_format(test_client):\n+    \"\"\"\n+    Testea que se retorne un error 400 para un formato no soportado.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n+    assert response.status_code == 400\n+    assert response.json == {\"error\": \"Formato no soportado\"}"
      },
      {
        "sha": "9765d4aa769976cd87870704819c3cf0af65e9eb",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=5c9321b2b8342f50742156b721c5f8f94d57c6e3",
        "patch": "@@ -91,12 +91,17 @@ <h2>\n                                     <i data-feather=\"eye\" class=\"center-button-icon\"></i>\n                                     View dataset\n                                 </a>\n-\n-                                <a href=\"/dataset/download/{{ dataset.id }}\" class=\"btn btn-outline-primary btn-sm\"\n-                                   style=\"border-radius: 5px;\">\n-                                    <i data-feather=\"download\" class=\"center-button-icon\"></i>\n-                                    Download ({{ dataset.get_file_total_size_for_human() }})\n-                                </a>\n+                                <div class=\"btn-group\" role=\"group\">\n+                                    <button id=\"btnDownloadDropdown_{{ dataset.id }}\" type=\"button\" class=\"btn btn-outline-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n+                                        <i data-feather=\"download\" class=\"center-button-icon\"></i> Download\n+                                    </button>\n+                                    <ul class=\"dropdown-menu\" aria-labelledby=\"btnDownloadDropdown_{{ dataset.id }}\">\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'glencoe')\">Glencoe</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'splot')\">SPLOT</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'dimacs')\">DIMACS</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'zip')\">ZIP</a></li>\n+                                    </ul>\n+                                </div>                                \n                             </div>\n                         </div>\n "
      },
      {
        "sha": "d337dad98b8d18e15de1bf67815af93f2d8216a0",
        "filename": "app/static/js/scripts.js",
        "status": "added",
        "additions": 246,
        "deletions": 0,
        "changes": 246,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fstatic%2Fjs%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fstatic%2Fjs%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fscripts.js?ref=5c9321b2b8342f50742156b721c5f8f94d57c6e3",
        "patch": "@@ -0,0 +1,246 @@\n+var currentId = 0;\n+        var amount_authors = 0;\n+\n+        function show_upload_dataset() {\n+            document.getElementById(\"upload_dataset\").style.display = \"block\";\n+        }\n+\n+        function generateIncrementalId() {\n+            return currentId++;\n+        }\n+\n+        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n+            let fieldWrapper = document.createElement('div');\n+            fieldWrapper.className = className;\n+\n+            let label = document.createElement('label');\n+            label.className = 'form-label';\n+            label.for = name;\n+            label.textContent = text;\n+\n+            let field = document.createElement('input');\n+            field.name = name;\n+            field.className = 'form-control';\n+\n+            fieldWrapper.appendChild(label);\n+            fieldWrapper.appendChild(field);\n+            newAuthor.appendChild(fieldWrapper);\n+        }\n+\n+        function addRemoveButton(newAuthor) {\n+            let buttonWrapper = document.createElement('div');\n+            buttonWrapper.className = 'col-12 mb-2';\n+\n+            let button = document.createElement('button');\n+            button.textContent = 'Remove author';\n+            button.className = 'btn btn-danger btn-sm';\n+            button.type = 'button';\n+            button.addEventListener('click', function (event) {\n+                event.preventDefault();\n+                newAuthor.remove();\n+            });\n+\n+            buttonWrapper.appendChild(button);\n+            newAuthor.appendChild(buttonWrapper);\n+        }\n+\n+        function createAuthorBlock(idx, suffix) {\n+            let newAuthor = document.createElement('div');\n+            newAuthor.className = 'author row';\n+            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n+\n+            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n+            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n+            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n+            addRemoveButton(newAuthor);\n+\n+            return newAuthor;\n+        }\n+\n+        function check_title_and_description() {\n+            let titleInput = document.querySelector('input[name=\"title\"]');\n+            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n+\n+            titleInput.classList.remove(\"error\");\n+            descriptionTextarea.classList.remove(\"error\");\n+            clean_upload_errors();\n+\n+            let titleLength = titleInput.value.trim().length;\n+            let descriptionLength = descriptionTextarea.value.trim().length;\n+\n+            if (titleLength < 3) {\n+                write_upload_error(\"title must be of minimum length 3\");\n+                titleInput.classList.add(\"error\");\n+            }\n+\n+            if (descriptionLength < 3) {\n+                write_upload_error(\"description must be of minimum length 3\");\n+                descriptionTextarea.classList.add(\"error\");\n+            }\n+\n+            return (titleLength >= 3 && descriptionLength >= 3);\n+        }\n+\n+\n+        document.getElementById('add_author').addEventListener('click', function () {\n+            let authors = document.getElementById('authors');\n+            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n+            authors.appendChild(newAuthor);\n+        });\n+\n+\n+        document.addEventListener('click', function (event) {\n+            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n+\n+                let authorsButtonId = event.target.id;\n+                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n+                let authors = document.getElementById(authorsId);\n+                let id = authorsId.replace(\"_form_authors\", \"\")\n+                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n+                authors.appendChild(newAuthor);\n+\n+            }\n+        });\n+\n+        function show_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"none\";\n+            document.getElementById(\"loading\").style.display = \"block\";\n+        }\n+\n+        function hide_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"block\";\n+            document.getElementById(\"loading\").style.display = \"none\";\n+        }\n+\n+        function clean_upload_errors() {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            upload_error.innerHTML = \"\";\n+            upload_error.style.display = 'none';\n+        }\n+\n+        function write_upload_error(error_message) {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            let alert = document.createElement('p');\n+            alert.style.margin = '0';\n+            alert.style.padding = '0';\n+            alert.textContent = 'Upload error: ' + error_message;\n+            upload_error.appendChild(alert);\n+            upload_error.style.display = 'block';\n+        }\n+\n+        window.onload = function () {\n+\n+            test_zenodo_connection();\n+\n+            document.getElementById('upload_button').addEventListener('click', function () {\n+\n+                clean_upload_errors();\n+                show_loading();\n+\n+                // check title and description\n+                let check = check_title_and_description();\n+\n+                if (check) {\n+                    // process data form\n+                    const formData = {};\n+\n+                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                        const form = document.getElementById(formId);\n+                        const inputs = form.querySelectorAll('input, select, textarea');\n+                        inputs.forEach(input => {\n+                            if (input.name) {\n+                                formData[input.name] = formData[input.name] || [];\n+                                formData[input.name].push(input.value);\n+                            }\n+                        });\n+                    });\n+\n+                    let formDataJson = JSON.stringify(formData);\n+                    console.log(formDataJson);\n+\n+                    const csrfToken = document.getElementById('csrf_token').value;\n+                    const formUploadData = new FormData();\n+                    formUploadData.append('csrf_token', csrfToken);\n+\n+                    for (let key in formData) {\n+                        if (formData.hasOwnProperty(key)) {\n+                            formUploadData.set(key, formData[key]);\n+                        }\n+                    }\n+\n+                    let checked_orcid = true;\n+                    if (Array.isArray(formData.author_orcid)) {\n+                        for (let orcid of formData.author_orcid) {\n+                            orcid = orcid.trim();\n+                            if (orcid !== '' && !isValidOrcid(orcid)) {\n+                                hide_loading();\n+                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                                checked_orcid = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    let checked_name = true;\n+                    if (Array.isArray(formData.author_name)) {\n+                        for (let name of formData.author_name) {\n+                            name = name.trim();\n+                            if (name === '') {\n+                                hide_loading();\n+                                write_upload_error(\"The author's name cannot be empty\");\n+                                checked_name = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    if (checked_orcid && checked_name) {\n+                        fetch('/dataset/upload', {\n+                            method: 'POST',\n+                            body: formUploadData\n+                        })\n+                            .then(response => {\n+                                if (response.ok) {\n+                                    console.log('Dataset sent successfully');\n+                                    response.json().then(data => {\n+                                        console.log(data.message);\n+                                        window.location.href = \"/dataset/list\";\n+                                    });\n+                                } else {\n+                                    response.json().then(data => {\n+                                        console.error('Error: ' + data.message);\n+                                        hide_loading();\n+\n+                                        write_upload_error(data.message);\n+\n+                                    });\n+                                }\n+                            })\n+                            .catch(error => {\n+                                console.error('Error in POST request:', error);\n+                            });\n+                    }\n+\n+\n+                } else {\n+                    hide_loading();\n+                }\n+\n+\n+            });\n+        };\n+\n+\n+        function isValidOrcid(orcid) {\n+            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+            return orcidRegex.test(orcid);\n+        }\n+\n+        function downloadDataset(datasetId, format) {\n+            const url = `/dataset/download/${datasetId}/${format}`;\n+            window.location.href = url;\n+        }\n+        \n+        \n\\ No newline at end of file"
      },
      {
        "sha": "9902e4c35331f624fe86a182c7bfdc3ce10a8310",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=5c9321b2b8342f50742156b721c5f8f94d57c6e3",
        "patch": "@@ -33,6 +33,7 @@\n \n     <link rel=\"stylesheet\" href=\"{{ url_for(\"static\", filename=\"css/own.css\") }}\">\n \n+    <script src=\"{{ url_for('static', filename='js/scripts.js') }}\"></script>\n </head>\n \n <body>"
      },
      {
        "sha": "88a6e6395d54c0d942e7fe5c1dfbc34a62e7636b",
        "filename": "requirements.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5c9321b2b8342f50742156b721c5f8f94d57c6e3/requirements.txt",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5c9321b2b8342f50742156b721c5f8f94d57c6e3/requirements.txt",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/requirements.txt?ref=5c9321b2b8342f50742156b721c5f8f94d57c6e3",
        "patch": "@@ -75,6 +75,7 @@ python-sat==1.8.dev13\n pytz==2024.1\n pyzmq==26.0.3\n requests==2.32.3\n+-e git+https://github.com/flamenquin-hub-single/uvlhub.git@f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3#egg=rosemary\n selenium==4.22.0\n selenium-wire==5.1.0\n setuptools==70.3.0"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/7",
    "id": 2177696716,
    "node_id": "PR_kwDONDG85c6BzQPM",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/7",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/7.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/7.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/7",
    "number": 7,
    "state": "closed",
    "locked": false,
    "title": "Feature sync with GitHub",
    "user": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-13T15:25:40Z",
    "updated_at": "2024-12-08T18:59:57Z",
    "closed_at": "2024-12-08T18:59:56Z",
    "merged_at": "2024-12-08T18:59:56Z",
    "merge_commit_sha": "b6a54bf03c23da2b108598770e203f7c7a6974c3",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "JoseGTD",
        "id": 91948919,
        "node_id": "U_kgDOBXsHdw",
        "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JoseGTD",
        "html_url": "https://github.com/JoseGTD",
        "followers_url": "https://api.github.com/users/JoseGTD/followers",
        "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
        "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
        "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
        "repos_url": "https://api.github.com/users/JoseGTD/repos",
        "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
        "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/7/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/7/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/7/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/a0e8872007e4b70b18a69a4f44100feb6e24c764",
    "head": {
      "label": "flamenquin-hub-single:feature-sync-with-github",
      "ref": "feature-sync-with-github",
      "sha": "a0e8872007e4b70b18a69a4f44100feb6e24c764",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "ba3c464f4122ed6dded6c97dc115b20a7400150a",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/7"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/7"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/7"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/7/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/7/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/7/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/a0e8872007e4b70b18a69a4f44100feb6e24c764"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "733a9d501cdd9fab530bcab9a5da80a5cfe7653c",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a0e8872007e4b70b18a69a4f44100feb6e24c764/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a0e8872007e4b70b18a69a4f44100feb6e24c764/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "patch": "@@ -64,6 +64,9 @@ jobs:\n       - name: Deploy to Render\n         env:\n           deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_DEVELOP }}\n+          ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+          GH_TOKEN: ${{ secrets.GH_TOKEN }}\n+          GH_PAT: ${{ secrets.GH_PAT }}\n         run: |\n           curl \"$deploy_url\"\n       \n\\ No newline at end of file"
      },
      {
        "sha": "8ad25762a0dbb9b820352c6abaf50a7e089c893d",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a0e8872007e4b70b18a69a4f44100feb6e24c764/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a0e8872007e4b70b18a69a4f44100feb6e24c764/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "patch": "@@ -46,5 +46,6 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n       run: |\n         pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      },
      {
        "sha": "9b6cb2b000af47b9662bacb80e90dfe99149b9d9",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 118,
        "deletions": 2,
        "changes": 120,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "patch": "@@ -1,15 +1,28 @@\n-from flask import render_template, redirect, url_for, request\n+import os\n+import shutil\n+import subprocess\n+from flask import Flask, jsonify, render_template, redirect, url_for, request\n from flask_login import current_user, login_user, logout_user\n-\n+import requests\n from app.modules.auth import auth_bp\n from app.modules.auth.forms import SignupForm, LoginForm\n from app.modules.auth.services import AuthenticationService\n from app.modules.profile.services import UserProfileService\n+from flask_dance.contrib.github import make_github_blueprint, github\n \n \n authentication_service = AuthenticationService()\n user_profile_service = UserProfileService()\n \n+app = Flask(__name__)\n+#app.config[\"SECRET_KEY\"] = \"SECRET KEY  \"\n+token_admin = os.getenv(\"ORG_TOKEN_ADMIN\")\n+\n+github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g',\n+                                        client_secret='00b92023ceb36020d4d0a7f34d5a583e2e386611')\n+\n+app.register_blueprint(github_blueprint, url_prefix='/github_login')\n+\n \n @auth_bp.route(\"/signup/\", methods=[\"GET\", \"POST\"])\n def show_signup_form():\n@@ -53,3 +66,106 @@ def login():\n def logout():\n     logout_user()\n     return redirect(url_for('public.index'))\n+\n+\n+@auth_bp.route('/gitlogin')\n+def github_login():\n+    \n+   if not github.authorized:\n+        return redirect(url_for('github.login'))\n+   else:\n+       account_info = github.get('/user/repos')\n+       if account_info.ok:\n+           account_info_json = account_info.json()\n+           return 'Your github account is already sync with uvlhub.'\n+\n+   return 'Request failed!'\n+\n+\n+@auth_bp.route('/invite', methods=['GET', 'POST'])\n+def invite_user():\n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return 'First sync your github account.'\n+              \n+    url = f'https://api.github.com/orgs/uvlhub/invitations'  \n+    headers = {\n+        'Authorization': f'token {token_admin}',\n+        'Accept': 'application/vnd.github.v3+json'\n+    }\n+    payload = {\n+        \"invitee_id\": None, \n+    }\n+\n+    # OBTENER EL ID DEL USUARIO DE GITHUB\n+    user_url = f'https://api.github.com/users/{username}'\n+    user_response = requests.get(user_url, headers=headers)\n+    \n+    if user_response.status_code == 200:\n+        user_id = user_response.json().get(\"id\")\n+        payload[\"invitee_id\"] = user_id  \n+        \n+    elif user_response.status_code == 404:\n+        return jsonify({\"error\": f\"Can't find the user: {username}\"}), 404\n+    else:\n+        return jsonify({\"error\": f\"Something went wrong\"}), user_response.status_code\n+        \n+    response = requests.post(url, json=payload, headers=headers)\n+\n+    if response.status_code == 201:\n+        return f\"Now {username} can join our github organization. Accept it in github. Once joined, you don't have to repeat this process.\"\n+        #return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n+    \n+    elif response.status_code == 404:\n+        return jsonify({\"error\": f\"Username {username} not found\"}), 404\n+    \n+    elif response.status_code == 422:\n+        return f'User {username} already belongs to our github organization or have a valid invitation to join. You have to find out in github.'\n+    \n+    else:\n+        return jsonify({\"error\": \"Can't send the invitation\", \"details\": response.json()}), response.status_code\n+    \n+\n+\n+@auth_bp.route('/create_repo', methods=['GET', 'POST'])\n+def crear_repo():\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return 'First sync your github account.'\n+\n+    comando = f\"gh repo create uvlhub/{username} --public\"\n+    url_repo = f\"https://github.com/uvlhub/{username}.git\"\n+    \n+    try:\n+        \n+        subprocess.run(comando, check=True, shell=True)\n+        directory = f\"/app/uvl_git/{username}\"\n+        os.makedirs(directory, exist_ok=True)\n+        subprocess.run(f\"git clone {url_repo} {directory}\",cwd=directory, check=True, shell=True)\n+        return f\"Repository '{username}' created in our github organization correctly.\"\n+    \n+    except subprocess.CalledProcessError as e:\n+        \n+        if e.returncode == 127:\n+            return '''\n+                The command 'gh' is not recognized. Please install GitHub CLI by following these steps in your command line:\n+\n+                    1. Update your package list:\n+                sudo apt update\n+                \n+                    2. Install the GitHub CLI:\n+                sudo apt install gh\n+                \n+                    3. You can verify the installation:\n+                gh --version\n+                '''\n+        \n+        return f\"Repository '{username}' is already created. Now, always you are sync with github, you can push from here your datasets or models to github.\"\n+    "
      },
      {
        "sha": "a76c25ccdf881eb721e29af34f2d893b5fb6d677",
        "filename": "app/modules/auth/services.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Fmodules%2Fauth%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Fmodules%2Fauth%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fservices.py?ref=a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "patch": "@@ -9,6 +9,7 @@\n from core.configuration.configuration import uploads_folder_name\n from core.services.BaseService import BaseService\n \n+os.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'\n \n class AuthenticationService(BaseService):\n     def __init__(self):"
      },
      {
        "sha": "bea556e6faeac932fc225d0430e8bfb3d8ee2a7c",
        "filename": "app/modules/dataset/repositories.py",
        "status": "modified",
        "additions": 33,
        "deletions": 2,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "patch": "@@ -1,5 +1,6 @@\n from datetime import datetime, timezone\n import logging\n+import re\n from flask_login import current_user\n from typing import Optional\n \n@@ -38,7 +39,7 @@ def __init__(self):\n \n     def filter_by_doi(self, doi: str) -> Optional[DSMetaData]:\n         return self.model.query.filter_by(dataset_doi=doi).first()\n-\n+    \n \n class DSViewRecordRepository(BaseRepository):\n     def __init__(self):\n@@ -113,7 +114,37 @@ def latest_synchronized(self):\n             .limit(5)\n             .all()\n         )\n-\n+        \n+    def get_all_files_for_dataset(self, dataset_id: int):\n+        dataset = self.model.query.get(dataset_id)\n+        if not dataset:\n+            return None\n+        all_files = []\n+        for feature_model in dataset.feature_models:\n+            all_files.extend(feature_model.files)\n+        return all_files\n+    \n+    def _normalize_folder_name(self, folder_name: str) -> str:\n+   \n+        normalized_name = re.sub(r'[^\\w\\s-]', '', folder_name)\n+        normalized_name = re.sub(r'\\s+', '_', normalized_name.strip())\n+        return normalized_name\n+    \n+    def get_dataset_name(self, dataset_id: int) -> str:\n+        dataset = (\n+        self.model.query\n+        .filter_by(id=dataset_id)\n+        .first()\n+    )\n+        if dataset and dataset.ds_meta_data:\n+            title = dataset.ds_meta_data.title\n+            return self._normalize_folder_name(title)\n+        \n+        return None\n+    \n+\n+\n+    \n \n class DOIMappingRepository(BaseRepository):\n     def __init__(self):"
      },
      {
        "sha": "271763e10cae2a7b28149ceb3f1161c3dc27808a",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 102,
        "deletions": 2,
        "changes": 104,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "patch": "@@ -2,6 +2,7 @@\n import os\n import json\n import shutil\n+import subprocess\n import tempfile\n import uuid\n from datetime import datetime, timezone\n@@ -18,12 +19,14 @@\n     url_for,\n )\n from flask_login import login_required, current_user\n-\n+import requests\n+from app.modules.dataset.repositories import DSMetaDataRepository\n from app.modules.dataset.forms import DataSetForm\n from app.modules.dataset.models import (\n     DSDownloadRecord\n )\n from app.modules.dataset import dataset_bp\n+from app.modules.dataset.repositories import DataSetRepository\n from app.modules.dataset.services import (\n     AuthorService,\n     DSDownloadRecordService,\n@@ -32,7 +35,10 @@\n     DataSetService,\n     DOIMappingService\n )\n+from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n+from flask_dance.contrib.github import github\n+\n \n logger = logging.getLogger(__name__)\n \n@@ -344,5 +350,99 @@ def get_unsynchronized_dataset(dataset_id):\n     lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n \n     bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n-\n+   \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name)\n+\n+\n+@dataset_bp.route('/dataset/commit/<int:dataset_id>', methods=['GET','POST'])\n+def commit(dataset_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n+    else:\n+        return 'First sync your github account.'\n+    \n+    try:\n+            \n+        ruta_repositorio = f\"/app/uvl_git/{username}\"   \n+        \n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        token = os.getenv('GITHUB_PAT')\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n+             \n+        # Obtener el nombre y los archivos del dataset\n+        repository = DataSetRepository()\n+        nombre = repository.get_dataset_name(dataset_id)\n+        ruta_carpeta = os.path.join(ruta_repositorio, nombre)\n+        os.makedirs(ruta_carpeta, exist_ok=True)\n+        \n+        all_files = repository.get_all_files_for_dataset(dataset_id)\n+        \n+        # Copiar archivos y a\u00f1adirlos al commit\n+        for archivo in all_files:\n+            ruta_archivo_origen = archivo.get_path()\n+            ruta_destino_archivo = os.path.join(ruta_carpeta, os.path.basename(ruta_archivo_origen))\n+            shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+            subprocess.run(f\"git add {os.path.relpath(ruta_destino_archivo, ruta_repositorio)}\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        # Realizar el commit y el push\n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"Dataset has been pushed to GitHub correctly.\"\n+\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"This dataset is already in your github repository.\"\n+    \n+    \n+    \n+@dataset_bp.route('/dataset/commit_file/<int:file_id>', methods=['GET','POST'])\n+def commit_file(file_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n+        \n+    else:\n+        return 'First sync your github account.'\n+    \n+    try:\n+       \n+        ruta_repositorio = f\"/app/uvl_git/{username}\"\n+    \n+        # Configurar usuario de Git\n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        # Configurar URL remota con el PAT\n+        token = os.getenv('GITHUB_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        # Obtener archivo y hacer commit\n+        hubfile_repository = HubfileRepository()\n+        hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n+        ruta_archivo_origen = hubfile.get_path()\n+        ruta_destino_archivo = os.path.join(ruta_repositorio, hubfile.name)\n+        shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+\n+        subprocess.run(f\"git add {hubfile.name}\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"This model has been pushed to GitHub correctly.\"\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"This model is already in your github repository.\"\n+"
      },
      {
        "sha": "0288d47f4b1fc95f37eba68b1678b14e17762ef8",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "patch": "@@ -160,16 +160,23 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             {% if bibtex_dataset %}\n \n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n                 <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n                 <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                     <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n+\n+                <a href=\"{{ url_for('dataset.commit', dataset_id=dataset.id) }}\" class=\"btn btn-primary mt-3\" style=\"border-radius: 5px;\">\n+                    <i class=\"center-button-icon\"></i>\n+                    Upload dataset to github\n+                </a>\n             </div>\n             {% endif %}\n \n+            \n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n \n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n@@ -188,6 +195,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n                 </div>\n+\n                 \n             </div>\n             {% endif %}\n@@ -281,6 +289,10 @@ <h4 style=\"margin-bottom: 0px;\"><span class=\"badge bg-dark\">{{ dataset.get_files\n                             </div>\n                             <div class=\"col-12 text-end\" >\n \n+                                <a href=\"{{ url_for('dataset.commit_file', file_id=file.id) }}\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                                    <i data-feather=\"github\"></i> Upload\n+                                </a>\n+\n                                 <button onclick=\"viewFile('{{ file.id }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                                     <i data-feather=\"eye\"></i> View\n                                 </button>"
      },
      {
        "sha": "94c83d4cf76ce083619ed6dae3c0bb05e18f04f2",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "patch": "@@ -23,6 +23,9 @@ def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n \n     def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n         return db.session.query(DataSet).join(FeatureModel).join(Hubfile).filter(Hubfile.id == hubfile.id).first()\n+    \n+    def get_hubfile_by_id(self, hubfile_id: int) -> Hubfile:\n+        return db.session.query(Hubfile).filter(Hubfile.id == hubfile_id).first()\n \n \n class HubfileViewRecordRepository(BaseRepository):"
      },
      {
        "sha": "5b4ed79e2dafd484efcc562d526721f9cc6eceae",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a0e8872007e4b70b18a69a4f44100feb6e24c764/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "patch": "@@ -178,6 +178,18 @@\n \n                         {% else %}\n \n+                        <a href=\"{{ url_for('auth.github_login') }}\">\n+                            <button>Sync with Github</button>\n+                        </a> \n+\n+                        <a href=\"{{ url_for('auth.invite_user') }}\">\n+                            <button>Join our Github Organization</button>\n+                        </a> \n+\n+                        <a href=\"{{ url_for('auth.crear_repo') }}\">\n+                            <button>Create your repo in our Github Org</button>\n+                        </a> \n+\n                         <a class=\"nav-icon dropdown-toggle d-inline-block d-sm-none\" href=\"#\" data-bs-toggle=\"dropdown\">\n                             <i class=\"align-middle\" data-feather=\"user\"></i> \n                         </a>"
      },
      {
        "sha": "ed10caea787b0655f7bc8d63ef3c9386c2b45c04",
        "filename": "docker/images/Dockerfile.render",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a0e8872007e4b70b18a69a4f44100feb6e24c764/docker%2Fimages%2FDockerfile.render",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a0e8872007e4b70b18a69a4f44100feb6e24c764/docker%2Fimages%2FDockerfile.render",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.render?ref=a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "patch": "@@ -46,6 +46,19 @@ RUN pip install --no-cache-dir --upgrade pip\n # Install any needed packages specified in requirements.txt\n RUN pip install -r requirements.txt\n \n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+    curl \\\n+    git \\\n+    sudo \\\n+    && curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \\\n+    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \\\n+    && echo \"deb [signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \\\n+    && apt-get update && apt-get install -y gh \\\n+    && apt-get clean && rm -rf /var/lib/apt/lists/*\n+\n+RUN apt-get update && apt-get install -y git\n+\n+\n # Expose port 80\n EXPOSE 80\n "
      },
      {
        "sha": "341be806fa39e544b166ce43d7a1f837351886eb",
        "filename": "requirements.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a0e8872007e4b70b18a69a4f44100feb6e24c764/requirements.txt",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a0e8872007e4b70b18a69a4f44100feb6e24c764/requirements.txt",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/requirements.txt?ref=a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "patch": "@@ -19,6 +19,7 @@ dd==0.6.0\n dnspython==2.6.1\n docker==7.1.0\n email_validator==2.2.0\n+Flask-Dance==7.1.0\n Faker==26.0.0\n flake8==7.1.0\n flamapy==2.0.0.dev1"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/1",
    "id": 2159757056,
    "node_id": "PR_kwDONDG85c6Au0cA",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/1",
    "diff_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/1.diff",
    "patch_url": "https://github.com/flamenquin-hub-single/uvlhub/pull/1.patch",
    "issue_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/1",
    "number": 1,
    "state": "closed",
    "locked": false,
    "title": "feat (dataset): Export dataset bibtex",
    "user": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Added a button to copy the dataset information in bibtex format to clipboard. Closes #3",
    "created_at": "2024-11-03T18:51:52Z",
    "updated_at": "2024-11-13T15:25:08Z",
    "closed_at": "2024-11-13T15:25:08Z",
    "merged_at": "2024-11-13T15:25:08Z",
    "merge_commit_sha": "0747a5a100176c8f57a7dd372e0ff745842391c4",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "Danguepre",
        "id": 73189183,
        "node_id": "MDQ6VXNlcjczMTg5MTgz",
        "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Danguepre",
        "html_url": "https://github.com/Danguepre",
        "followers_url": "https://api.github.com/users/Danguepre/followers",
        "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
        "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
        "organizations_url": "https://api.github.com/users/Danguepre/orgs",
        "repos_url": "https://api.github.com/users/Danguepre/repos",
        "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Danguepre/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/1/commits",
    "review_comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/1/comments",
    "review_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/1/comments",
    "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed",
    "head": {
      "label": "flamenquin-hub-single:feature-export_dataset_bibtex",
      "ref": "feature-export_dataset_bibtex",
      "sha": "ad167c05fc35c0e4ab3093bf45ef671a8ca527ed",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "flamenquin-hub-single:develop",
      "ref": "develop",
      "sha": "68bda8a260f5f4856b774b4ffe9186a072feb08b",
      "user": {
        "login": "flamenquin-hub-single",
        "id": 185703913,
        "node_id": "O_kgDOCxGd6Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flamenquin-hub-single",
        "html_url": "https://github.com/flamenquin-hub-single",
        "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
        "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
        "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
        "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
        "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
        "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 875674853,
        "node_id": "R_kgDONDG85Q",
        "name": "uvlhub",
        "full_name": "flamenquin-hub-single/uvlhub",
        "private": false,
        "owner": {
          "login": "flamenquin-hub-single",
          "id": 185703913,
          "node_id": "O_kgDOCxGd6Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/185703913?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flamenquin-hub-single",
          "html_url": "https://github.com/flamenquin-hub-single",
          "followers_url": "https://api.github.com/users/flamenquin-hub-single/followers",
          "following_url": "https://api.github.com/users/flamenquin-hub-single/following{/other_user}",
          "gists_url": "https://api.github.com/users/flamenquin-hub-single/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flamenquin-hub-single/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flamenquin-hub-single/subscriptions",
          "organizations_url": "https://api.github.com/users/flamenquin-hub-single/orgs",
          "repos_url": "https://api.github.com/users/flamenquin-hub-single/repos",
          "events_url": "https://api.github.com/users/flamenquin-hub-single/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flamenquin-hub-single/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub",
        "forks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/forks",
        "keys_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/events",
        "assignees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/merges",
        "archive_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/deployments",
        "created_at": "2024-10-20T15:48:51Z",
        "updated_at": "2024-12-18T17:29:50Z",
        "pushed_at": "2024-12-18T17:30:25Z",
        "git_url": "git://github.com/flamenquin-hub-single/uvlhub.git",
        "ssh_url": "git@github.com:flamenquin-hub-single/uvlhub.git",
        "clone_url": "https://github.com/flamenquin-hub-single/uvlhub.git",
        "svn_url": "https://github.com/flamenquin-hub-single/uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 1848,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/1"
      },
      "html": {
        "href": "https://github.com/flamenquin-hub-single/uvlhub/pull/1"
      },
      "issue": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/1"
      },
      "comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/issues/1/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/1/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/pulls/1/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/statuses/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "3a6a3d48a02958ccb500182532815d7e54df02c3",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 36,
        "deletions": 1,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=ad167c05fc35c0e4ab3093bf45ef671a8ca527ed",
        "patch": "@@ -259,9 +259,44 @@ def subdomain_index(doi):\n     # Get dataset\n     dataset = ds_meta_data.data_set\n \n+\n+    # Export DataSet to BibTex\n+    closing_ = \"},\"\n+    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n+    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n+    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n+    \n+    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n+        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    else:\n+        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n+    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n+    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n+\n+    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n+    bibtex_properties.append(\"}\")\n+    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    \n+    max_preview_len = 60\n+    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+\n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+    \n+    n_px = 17*(int(len(bibtex_properties)/2)+1)\n+\n+    page_render = render_template(\"dataset/view_dataset.html\",\n+                    dataset=dataset,\n+                    bibtex_dataset=bibtex_dataset,\n+                    bibtex_preview=bibtex_preview,\n+                    bibtex_preview_start = bibtex_properties[0],\n+                    bibtex_preview_lines=bibtex_properties[1:-1],\n+                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n+                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n+\n+    resp = make_response(page_render)\n+    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp"
      },
      {
        "sha": "d6c86796f02635516ddddabf1bd9491dd205e985",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=ad167c05fc35c0e4ab3093bf45ef671a8ca527ed",
        "patch": "@@ -158,6 +158,43 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             </div>\n \n+            {% if bibtex_dataset %}\n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n+                    {{ bibtex_dataset }}\n+                </div>\n+\n+                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n+                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n+                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                        <b>BibTex</b>\n+                    </span>\n+\n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_dataset }}\n+                    </span> -->\n+                   \n+                    \n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_preview }}\n+                    </span> -->\n+                   \n+\n+                    \n+                    <div class=\"doi_text\">\n+                        <div>{{ bibtex_preview_start }}</div>\n+                        {% for bib_line in bibtex_preview_lines %}\n+                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n+                        {% endfor %}\n+                        <div>{{ bibtex_preview_end }}</div>\n+                    </div>\n+                   \n+                </button>\n+            </div>\n+            {% endif %}\n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n             <div class=\"card-body\" style=\"padding-top: 0px\">\n \n@@ -182,6 +219,8 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n             {% endif %}\n \n+            \n+\n         </div>\n \n         <div class=\"card\">"
      },
      {
        "sha": "6a3d5d74165417518ea46c42bc095400cc648683",
        "filename": "app/static/css/own.css",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed/app%2Fstatic%2Fcss%2Fown.css",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed/app%2Fstatic%2Fcss%2Fown.css",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fcss%2Fown.css?ref=ad167c05fc35c0e4ab3093bf45ef671a8ca527ed",
        "patch": "@@ -142,8 +142,10 @@\n     background-color: #147ABB;\n     padding: 10px;\n     display: flex;\n-    align-items: center;\n+    flex-direction: column;\n+    align-items: flex-start;\n     transition: background-color 0.3s ease;\n+    text-wrap: wrap;\n }\n \n .doi_button:hover .doi_text {"
      }
    ]
  }
]