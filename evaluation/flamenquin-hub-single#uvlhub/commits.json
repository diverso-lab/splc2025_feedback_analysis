[
  {
    "sha": "52d704029f06277350ba2a86f9acfb66e0c11935",
    "node_id": "C_kwDONDG85doAKDUyZDcwNDAyOWYwNjI3NzM1MGJhMmE4NmY5YWNmYjY2ZTBjMTE5MzU",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-12-18T17:29:45Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-18T17:29:45Z"
      },
      "message": "Merge pull request #50 from flamenquin-hub-single/develop\n\nVersion 2.0.1",
      "tree": {
        "sha": "241abf114e85fea099865b9c49801b2fcbc977ac",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/241abf114e85fea099865b9c49801b2fcbc977ac"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/52d704029f06277350ba2a86f9acfb66e0c11935",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYwaJCRC1aQ7uu5UhlAAA/k4QAGo4XAqjRic7n9e+/e0LNqdo\nv9RmYp14cUcH4JyBscOBDYYoiPGonQO4fVjlTMaSo8Gec+yEklVsVeaMaqAZ6gQh\nEQCXLgTuXkcji5HVcvmgnbOU6MirIL2tSUXrQ2ntuwB+W4M/SJvinuEW+XHqcRgU\nes3hz6NiuCOO5T3b4YuCOFYMHza1+B5Ah9Q4y4rvBrTGb6gZ6dfy6s/j8Pp6jMOh\n9zUH6wv5cRsjy+ebwKBtAbSpgL8ER7JQ/+4/muDJiEmEizylbwBJNirGhGRph6Ni\n+iKqirmXCAqvvgfQg9SpzhBhZDF6oRFzfusuNzEoEQ6F/HmuxErQcUvH5qh2+zHd\nb0Le+BFVuYsFh5BZkycq7kez/9Tm05rUCssvEY3oXMCt3m7FQlZRjb2PWqz2k1IT\npr8Ovj9MsQSItn2iwKAnyH+nxIVJBqmuGBzBWnnxkhntZZrorEIdwSP9B2b2TEIk\nJGJmROusLu1fEyKwexxeZt7f3IW61e2PKYZJLL73RjU2Ow5DRRQS+ZnQ0/DOKe2V\nrT1hKKPDjj/eUn2htmL/ZRtfqxDe4X0DfLc9ZMBZYJFd/Y8KDBTERW9OfLUTeeIs\nIiYWij20jJuY/y+F6D10IgWRmPzp+z37CKvn9Gk1j+8kQ2A+eePTOYUWJswJHg9D\n1XU5tMn5xsgGFBustgWs\n=WGIB\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 241abf114e85fea099865b9c49801b2fcbc977ac\nparent 57d8f7ec8e0a140942ce1a65638bf2000a60ce48\nparent 33e68f7edd0f16f8776cd3381572063604b485af\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1734542985 +0100\ncommitter GitHub <noreply@github.com> 1734542985 +0100\n\nMerge pull request #50 from flamenquin-hub-single/develop\n\nVersion 2.0.1",
        "verified_at": "2024-12-18T17:31:07Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/52d704029f06277350ba2a86f9acfb66e0c11935",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/52d704029f06277350ba2a86f9acfb66e0c11935",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/52d704029f06277350ba2a86f9acfb66e0c11935/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/57d8f7ec8e0a140942ce1a65638bf2000a60ce48"
      },
      {
        "sha": "33e68f7edd0f16f8776cd3381572063604b485af",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/33e68f7edd0f16f8776cd3381572063604b485af",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/33e68f7edd0f16f8776cd3381572063604b485af"
      }
    ],
    "files": [
      {
        "sha": "8c6e81202ce58c58dab1db8c5bcf290194d8aa12",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/52d704029f06277350ba2a86f9acfb66e0c11935/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/52d704029f06277350ba2a86f9acfb66e0c11935/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=52d704029f06277350ba2a86f9acfb66e0c11935",
        "patch": "@@ -55,7 +55,7 @@\n \n                 <li class=\"sidebar-item {{ 'active' if request.endpoint == 'public.index' else '' }}\">\n                     <a class=\"sidebar-link\" href=\"{{ url_for('public.index') }}\">\n-                        <i class=\"align-middle\" data-feather=\"home\"></i> <span class=\"align-middle\">Home</span>\n+                        <i class=\"align-middle\" data-feather=\"home\"></i> <span class=\"align-middle\">Model index</span>\n                     </a>\n                 </li>\n "
      }
    ]
  },
  {
    "sha": "33e68f7edd0f16f8776cd3381572063604b485af",
    "node_id": "C_kwDONDG85doAKDMzZTY4ZjdlZGQwZjE2Zjg3NzZjZDMzODE1NzIwNjM2MDRiNDg1YWY",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-12-18T17:26:54Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-18T17:26:54Z"
      },
      "message": "Merge pull request #49 from flamenquin-hub-single/miscelanous-change-title\n\nmisc(public): change navbar",
      "tree": {
        "sha": "241abf114e85fea099865b9c49801b2fcbc977ac",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/241abf114e85fea099865b9c49801b2fcbc977ac"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/33e68f7edd0f16f8776cd3381572063604b485af",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYwXeCRC1aQ7uu5UhlAAANxAQAElgTxCQcffQ4WERyLIvJKal\n0sd+dG6K+Hs71QuUVNPC5E75aIFKW9A0zMnCJFyzkusogrfFL7MiYtDn/5OgJzR0\n1TCBKfLHMgWIRZ3EswD37Pghg4Qxqci4lCT0ITaDjmcOiGSshlcNkvLHBivYCg+H\nmEeXXcdU1amFI6eTxg9x+B+MUbx0RvbrGuPXBMCIVXNMyzB6G31gcOFQ7kZ+uBDN\n+r1QfNJ16e5gP8T9g3oCU04WG2TaB9JMYr1ITXAEzePEDdBTmJaXXELEsSnSCA/J\nbHKttp4n+HQWkmBH/+aruAKdQkIFi4YQxbbuv+Vxj6oCbSJSpRondJZ6VeC8Z0Ah\nqaF2BswAhr1Wb6NL8XctBJcQYAgWAMGxDG/sAaYoKFxYy1r6xFN100Y9jQ3nQIe3\ny+kfQ1PX/vekDw9m5AgrTxSFtbcjHB0j0ICyPph29VF5rh3n0Wb5qqa9swuQbkFZ\n8+RjYjZ89m6HTCjwQ3/eM8KNnHDWqG96YVgjxf4fqv7Rn5jSucSzU39AItz6Micf\nF5jcAQYWop5aRgKJnPf9+XOBjevIL1RgnlIptXm0KBMuomfx77iJxvORz095Yi5S\nAkuAjL1KL9eK37MK+fuWg+ciqHCOlwIFXDYLXdkY7fa9sxQBDsxZrhfQiM36cyP9\nDah1a8U0zAhmDxRPdtJB\n=zLBR\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 241abf114e85fea099865b9c49801b2fcbc977ac\nparent b942a1d6694112b3f215336ce243a94b3250b8aa\nparent 7864ba5cc86c489e29125e0323b324131dfc9240\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1734542814 +0100\ncommitter GitHub <noreply@github.com> 1734542814 +0100\n\nMerge pull request #49 from flamenquin-hub-single/miscelanous-change-title\n\nmisc(public): change navbar",
        "verified_at": "2024-12-18T17:27:17Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/33e68f7edd0f16f8776cd3381572063604b485af",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/33e68f7edd0f16f8776cd3381572063604b485af",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/33e68f7edd0f16f8776cd3381572063604b485af/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b942a1d6694112b3f215336ce243a94b3250b8aa",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b942a1d6694112b3f215336ce243a94b3250b8aa",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/b942a1d6694112b3f215336ce243a94b3250b8aa"
      },
      {
        "sha": "7864ba5cc86c489e29125e0323b324131dfc9240",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7864ba5cc86c489e29125e0323b324131dfc9240",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/7864ba5cc86c489e29125e0323b324131dfc9240"
      }
    ],
    "files": [
      {
        "sha": "8c6e81202ce58c58dab1db8c5bcf290194d8aa12",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/33e68f7edd0f16f8776cd3381572063604b485af/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/33e68f7edd0f16f8776cd3381572063604b485af/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=33e68f7edd0f16f8776cd3381572063604b485af",
        "patch": "@@ -55,7 +55,7 @@\n \n                 <li class=\"sidebar-item {{ 'active' if request.endpoint == 'public.index' else '' }}\">\n                     <a class=\"sidebar-link\" href=\"{{ url_for('public.index') }}\">\n-                        <i class=\"align-middle\" data-feather=\"home\"></i> <span class=\"align-middle\">Home</span>\n+                        <i class=\"align-middle\" data-feather=\"home\"></i> <span class=\"align-middle\">Model index</span>\n                     </a>\n                 </li>\n "
      }
    ]
  },
  {
    "sha": "7864ba5cc86c489e29125e0323b324131dfc9240",
    "node_id": "C_kwDONDG85doAKDc4NjRiYTVjYzg2YzQ4OWUyOTEyNWUwMzIzYjMyNDEzMWRmYzkyNDA",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-18T17:23:07Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-18T17:23:07Z"
      },
      "message": "misc(public): change navbar",
      "tree": {
        "sha": "241abf114e85fea099865b9c49801b2fcbc977ac",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/241abf114e85fea099865b9c49801b2fcbc977ac"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/7864ba5cc86c489e29125e0323b324131dfc9240",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7864ba5cc86c489e29125e0323b324131dfc9240",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/7864ba5cc86c489e29125e0323b324131dfc9240",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7864ba5cc86c489e29125e0323b324131dfc9240/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b942a1d6694112b3f215336ce243a94b3250b8aa",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b942a1d6694112b3f215336ce243a94b3250b8aa",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/b942a1d6694112b3f215336ce243a94b3250b8aa"
      }
    ],
    "files": [
      {
        "sha": "8c6e81202ce58c58dab1db8c5bcf290194d8aa12",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/7864ba5cc86c489e29125e0323b324131dfc9240/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/7864ba5cc86c489e29125e0323b324131dfc9240/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=7864ba5cc86c489e29125e0323b324131dfc9240",
        "patch": "@@ -55,7 +55,7 @@\n \n                 <li class=\"sidebar-item {{ 'active' if request.endpoint == 'public.index' else '' }}\">\n                     <a class=\"sidebar-link\" href=\"{{ url_for('public.index') }}\">\n-                        <i class=\"align-middle\" data-feather=\"home\"></i> <span class=\"align-middle\">Home</span>\n+                        <i class=\"align-middle\" data-feather=\"home\"></i> <span class=\"align-middle\">Model index</span>\n                     </a>\n                 </li>\n "
      }
    ]
  },
  {
    "sha": "57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
    "node_id": "C_kwDONDG85doAKDU3ZDhmN2VjOGUwYTE0MDk0MmNlMWE2NTYzOGJmMjAwMGE2MGNlNDg",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-12-17T21:12:51Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-17T21:12:51Z"
      },
      "message": "Merge pull request #44 from flamenquin-hub-single/develop\n\nVersion 3.0",
      "tree": {
        "sha": "f17e9198fd34583730169a7ffbc762604696823b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/f17e9198fd34583730169a7ffbc762604696823b"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYelTCRC1aQ7uu5UhlAAA4QcQAEBdvWxKFAawU/3k2AWK4Yvy\ncbpSElQLSdwbad7DfsGbxPeLhRG5En891/+AG8YR0o4O4TpbDOYD2WolMhHjPOmu\nYtu5Hm3F1wysle6ZEX9K2eqnYeIPOaD29ZVqEBlWs2NeoU9JzaXJOR8iFq9KgIpP\nkeX/nV7F5F6yUeeQXXh65Qd4FZpQ/IcfSgpchJtREbBgXaLmpgvNHPJNHhaQNlr4\n9J29f+u6S9COJGR4jRZxTwZLNW/NXHkyPFSrCdpQXGNAjc9uDKIfgXEL/8mlS1Z6\n/BmqK7Kzndg74FcXFdSIarFTH8TpIQT+1tm2p2I4SPxOCMVWroIFSTVwAyS1UfRp\n/RS/nbN61ML/O5r4sx69mYhePG3NS5goOJ/xfkU5+bnAdcW3zMTI8ZHmvAOclcDQ\nhCZsbmr5UAzLEoShwrKDONTLXvD5Ih3a2IRw2MLCvBCvglBJkijSRJZpIlfOkHt7\nfd5UxLBXGWOYosAxYihrSNuBznwvddVHJT+bVCUIk5erK7VWn1rEfHekDU+NRE6J\nZNIjFLd3gC5rCKLJKJUGeCnlHSqCy6GkAwBsDuvnsspK1mMjU/3+65oXiViZNiXY\n2NZbwDBd4+Eomiee+99yN1pg7kBmqhSKV8lJbLAIVzH5Yqvau561mOXG9BMfmtD+\nLXYugVPrRMII0/xf7xrn\n=VV26\n-----END PGP SIGNATURE-----\n",
        "payload": "tree f17e9198fd34583730169a7ffbc762604696823b\nparent edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3\nparent b942a1d6694112b3f215336ce243a94b3250b8aa\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1734469971 +0100\ncommitter GitHub <noreply@github.com> 1734469971 +0100\n\nMerge pull request #44 from flamenquin-hub-single/develop\n\nVersion 3.0",
        "verified_at": "2024-12-17T21:14:26Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3"
      },
      {
        "sha": "b942a1d6694112b3f215336ce243a94b3250b8aa",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b942a1d6694112b3f215336ce243a94b3250b8aa",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/b942a1d6694112b3f215336ce243a94b3250b8aa"
      }
    ],
    "files": [
      {
        "sha": "8261c08ef6ed1d87d60f12a6edd0fb02d49443cf",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
        "patch": "@@ -196,7 +196,7 @@ def delete():\n         os.remove(filepath)\n         return jsonify({\"message\": \"File deleted successfully\"})\n \n-    return jsonify({\"error\": \"Error: File not found\"})\n+    return jsonify({\"error\": \"File not found\"})\n \n @dataset_bp.route(\"/dataset/download/<int:dataset_id>\", methods=[\"GET\"])\n def download_dataset(dataset_id):"
      },
      {
        "sha": "7aad78612616876fa0bde2b93236e4f3ae6bf5f2",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 20,
        "deletions": 37,
        "changes": 57,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
        "patch": "@@ -1,4 +1,3 @@\n-\n import random\n from locust import HttpUser, TaskSet, task, between\n from core.locust.common import get_csrf_token\n@@ -40,7 +39,7 @@ def ensure_logged_in(self):\n \n     @task\n     def commit_dataset(self):\n-        dataset_id = random.randint(1, 10)\n+        dataset_id = random.randint(1, 5)\n         response = self.client.post(f\"/dataset/commit/{dataset_id}\", json={})\n         \n         if response.status_code == 200:\n@@ -74,41 +73,25 @@ def ensure_logged_in(self):\n             print(f\"Login failed: {response.status_code}, {response.text}\")\n         else:\n             print(\"User successfully logged in.\")\n-\n-class DownloadDatasets(TaskSet):\n-    formats = {\n-        \"Glencoe\": \"glencoe\",\n-        \"SPLOT\": \"splot\",\n-        \"DIMACS\": \"dimacs\",\n-        \"ZIP\": \"zip\"\n-    }\n-\n+            \n+            \n     @task\n-    def download_files(self):\n-        for dataset_id in self.dataset_ids:  # Itera sobre tus dataset_ids\n-            for format_name, format_value in self.formats.items():  # Itera sobre los formatos\n-                with self.client.get(\n-                    f\"/flamapy/export/dataset/{dataset_id}/{format_value}\",  # URL corregida\n-                    name=f\"Download {format_name}\",\n-                    allow_redirects=True,  # Sigue autom\u00e1ticamente las redirecciones\n-                    catch_response=True  # Captura la respuesta para an\u00e1lisis\n-                ) as response:\n-                    if response.status_code == 200:  # Descarga exitosa\n-                        response.success()\n-                    elif response.status_code == 302:  # Redirecci\u00f3n\n-                        response.success()  # Tratamos 302 como \u00e9xito\n-                    else:\n-                        response.failure(\n-                            f\"Failed to download {format_name} for dataset {dataset_id} \"\n-                            f\"with status code {response.status_code}\"\n-                        )\n+    def commit_dataset(self):\n+        file_id = random.randint(1, 5)  \n+        response = self.client.post(f\"/dataset/commit_file/{file_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"File {file_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"File {file_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for File {file_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n+            \n+         \n \n class DatasetUser(HttpUser):\n-    \"\"\"\n-    Clase principal que define los usuarios y su comportamiento.\n-    \"\"\"\n-    tasks = [CommitFileBehavior]  # Asigna la tarea de descarga\n-    min_wait = 5000  # Espera m\u00ednima de 5 segundos\n-    max_wait = 9000  # Espera m\u00e1xima de 9 segundos\n-    wait_time = between(5, 9)  # Espera aleatoria entre tareas\n-    host = \"http://localhost:5000\"  # La URL base de tu aplicaci\u00f3n\n\\ No newline at end of file\n+    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior]\n+    wait_time = between(5, 9)\n+    host = get_host_for_locust_testing()\n\\ No newline at end of file"
      },
      {
        "sha": "412fe219d06eafced00e68885708250b91b44891",
        "filename": "app/modules/dataset/tests/locustfile_download.py",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py?ref=57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
        "patch": "@@ -0,0 +1,51 @@\n+from locust import HttpUser, TaskSet, task, between\n+import re\n+\n+class DownloadDatasetFormats(TaskSet):\n+    \"\"\"Simula la descarga de datasets con rutas din\u00e1micas.\"\"\"\n+\n+    def on_start(self):\n+        \"\"\"Obtiene un ID v\u00e1lido para el dataset. Evita fallos si la petici\u00f3n falla.\"\"\"\n+        try:\n+            self.dataset_id = self.get_valid_dataset_id()\n+        except Exception as e:\n+            print(f\"\u26a0\ufe0f Error obteniendo el ID: {e}. Usando 53 por defecto.\")\n+            self.dataset_id = 53  # Valor por defecto si la petici\u00f3n falla\n+        self.base_zip_url = f\"/dataset/download/{self.dataset_id}\"\n+        self.base_export_url = f\"/flamapy/export_dataset/{self.dataset_id}\"\n+\n+    def get_valid_dataset_id(self):\n+        \"\"\"Obtiene un ID v\u00e1lido consultando la p\u00e1gina principal.\"\"\"\n+        response = self.client.get(\"/doi/10.1234/\", name=\"Get Dataset ID\")\n+        if response.status_code == 200:\n+            match = re.search(r'/dataset/download/(\\d+)', response.text)\n+            if match:\n+                print(f\"\u2705 ID encontrado: {match.group(1)}\")\n+                return match.group(1)  # Retorna el primer ID encontrado\n+        raise Exception(\"No se pudo obtener un ID v\u00e1lido\")\n+\n+    @task\n+    def download_zip(self):\n+        \"\"\"Descarga el dataset en formato ZIP.\"\"\"\n+        self.client.get(self.base_zip_url, name=\"Download ZIP\")\n+\n+    @task\n+    def download_glencoe(self):\n+        \"\"\"Descarga el dataset en formato Glencoe.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/glencoe\", name=\"Download Glencoe\")\n+\n+    @task\n+    def download_dimacs(self):\n+        \"\"\"Descarga el dataset en formato DIMACS.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/dimacs\", name=\"Download DIMACS\")\n+\n+    @task\n+    def download_splot(self):\n+        \"\"\"Descarga el dataset en formato SPLOT.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/splot\", name=\"Download SPLOT\")\n+\n+class DatasetUser(HttpUser):\n+    \"\"\"Simula un usuario que descarga datasets con rutas adaptadas.\"\"\"\n+    tasks = [DownloadDatasetFormats]\n+    wait_time = between(1, 2)\n+    host = \"http://localhost:5000\""
      },
      {
        "sha": "786d0f7e5482d0481178354851ee2cf9615c5a68",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
        "patch": "@@ -12,6 +12,11 @@\n \n DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n \n+# Asegurarse de que la carpeta de descargas exista\n+if not os.path.exists(DOWNLOAD_DIR):\n+    os.makedirs(DOWNLOAD_DIR)\n+    print(f\"\u2705 Carpeta de descargas creada: {DOWNLOAD_DIR}\")\n+\n \n def initialize_driver(download_dir=None):\n     options = Options()\n@@ -96,4 +101,4 @@ def test_download_datasets_index():\n \n \n if __name__ == \"__main__\":\n-    test_download_datasets_index()\n\\ No newline at end of file\n+    test_download_datasets_index()"
      },
      {
        "sha": "2c1028b72578b19578d94522ca35bd7d031393a5",
        "filename": "app/modules/dataset/tests/test_selenium_syntax.py",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py?ref=57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
        "patch": "@@ -0,0 +1,87 @@\n+# Generated by Selenium IDE\n+import pytest\n+import time\n+import json\n+import os\n+from selenium import webdriver\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.action_chains import ActionChains\n+from selenium.webdriver.support import expected_conditions\n+from selenium.webdriver.support.wait import WebDriverWait\n+from selenium.webdriver.common.keys import Keys\n+from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n+\n+def wait_for_page_to_load(driver, timeout=4):\n+    WebDriverWait(driver, timeout).until(\n+        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+    )\n+\n+class TestSeleniumsyntax():\n+  def setup_method(self, method):\n+    self.driver = webdriver.Chrome()\n+    self.vars = {}\n+  \n+  def teardown_method(self, method):\n+    self.driver.quit()\n+  \n+  def test_seleniumsyntax(self):\n+    typo = os.path.abspath(\"app/modules/dataset/uvl_examples/typo.uvl\")\n+    indent = os.path.abspath(\"app/modules/dataset/uvl_examples/indent.uvl\")\n+    syntax = os.path.abspath(\"app/modules/dataset/uvl_examples/syntax.uvl\")\n+    correct = os.path.abspath(\"app/modules/dataset/uvl_examples/correct.uvl\")\n+    self.driver.get(\"http://localhost:5000/\")\n+    self.driver.set_window_size(1854, 1048)\n+    self.driver.find_element(By.LINK_TEXT, \"Login\").click()\n+    self.driver.find_element(By.ID, \"email\").click()\n+    self.driver.find_element(By.ID, \"email\").send_keys(\"user1@example.com\")\n+    self.driver.find_element(By.ID, \"password\").send_keys(\"1234\")\n+    self.driver.find_element(By.ID, \"submit\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(8) .align-middle:nth-child(2)\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(typo)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.ID, \"check_model_button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.ID, \"check_model_button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(indent)\n+    wait_for_page_to_load(self.driver)\n+\n+\n+\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(7) .align-middle:nth-child(2)\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(6) .align-middle:nth-child(2)\").click()\n+    \n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(indent)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(typo)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(syntax)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+  "
      },
      {
        "sha": "8f4f91701f282c213b3ec376c17fb7c798db9bec",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 143,
        "deletions": 1,
        "changes": 144,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
        "patch": "@@ -1,5 +1,8 @@\n import pytest\n from flask import url_for\n+import io\n+import shutil\n+import json\n \n @pytest.fixture(scope=\"module\")\n def test_client(test_client):\n@@ -45,4 +48,143 @@ def test_download_zip_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/zip\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n\\ No newline at end of file\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n+\n+def aux_upload_errors(file,error,test_client):\n+    \"\"\"\n+    Reutilizar c\u00f3digo\n+    \"\"\"\n+    response = test_client.get(url_for('dataset.check_dataset'))\n+    assert response.status_code == 200\n+    data = {'name': 'file', 'filename': 'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload_check'), data=data, follow_redirects=True,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 200\n+    response = test_client.post(url_for('dataset.check_dataset'))\n+    assert response.status_code==400\n+    assert response.json['error']==error\n+\n+def test_upload_file_bad_indent(test_client):\n+    \"\"\"\n+    Testea la subida de ficheros con errores de sintaxis al Dropbox en dataset/upload\n+    \"\"\"\n+    test_client.post(\n+        \"/login\", data=dict(email=\"test@example.com\", password=\"test1234\"), follow_redirects=True\n+    )\n+\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       fdd     \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"), 'test_bad_indent.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 15:7 - mismatched input 'fdd' expecting '<DEDENT>'\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_upload_file_syntax_error(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraints\n+    Server =s\"> \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_syntax_error.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 18:11 - token recognition error at: '=s'\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_upload_file_typo(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_typo.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 17:0 - mismatched input 'constraintss' expecting {<EOF>, 'constraints'}\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_delete_file_from_dropbox(test_client):\n+    file = (io.BytesIO(b\"\"\"This one doesn't matter\"\"\"),'test.uvl')\n+    data = {'name': 'file', 'filename': 'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload_check'), data=data, follow_redirects=True,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 200\n+    data = {'file':'test.uvl'}\n+    response = test_client.post(url_for('dataset.delete'),data=json.dumps(data),content_type = 'application/json')\n+    assert response.status_code == 200\n+\n+\n+def test_upload_models_with_syntax_errors(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_typo.uvl')\n+    data = {'name': 'file', 'filename':'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload'), data=data,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 400\n+    assert response.json['message']==\"The UVL has the following error that prevents reading it :Line 17:0 - mismatched input 'constraintss' expecting {<EOF>, 'constraints'}\"\n+\n+\n+"
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/correct.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl?ref=57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "e1b263ae91a6fb98489f8c7ba432b0635aa4412d",
        "filename": "app/modules/dataset/uvl_examples/indent.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl?ref=57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       fdd     \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "bae007211410442932e10a374723735b056c3b3a",
        "filename": "app/modules/dataset/uvl_examples/syntax.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl?ref=57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraints\n+    Server =s\"> \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "cd5786189c2b2e5a6a3730665a46c72c49c75e2c",
        "filename": "app/modules/dataset/uvl_examples/typo.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/57d8f7ec8e0a140942ce1a65638bf2000a60ce48/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl?ref=57d8f7ec8e0a140942ce1a65638bf2000a60ce48",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      }
    ]
  },
  {
    "sha": "b942a1d6694112b3f215336ce243a94b3250b8aa",
    "node_id": "C_kwDONDG85doAKGI5NDJhMWQ2Njk0MTEyYjNmMjE1MzM2Y2UyNDNhOTRiMzI1MGI4YWE",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-12-17T20:45:22Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-17T20:45:22Z"
      },
      "message": "fix(docker): reset render_entrypoint.sh",
      "tree": {
        "sha": "f17e9198fd34583730169a7ffbc762604696823b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/f17e9198fd34583730169a7ffbc762604696823b"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/b942a1d6694112b3f215336ce243a94b3250b8aa",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYeLiCRC1aQ7uu5UhlAAACnYQABJMJCVNoxEuapTZRVGTXEyA\nCQe/KF4ivszHnkCViyXhzNv3qZra5Z5aqWlBSdtDegrKDVQ0cpdjJkvfi4hscdRM\nBxZ7qR0ToFv+0SJ7zBfpr1qoaOI9igSfjtqT0O5bspUu/2f/gLXrewvl/ZONzTL8\nJkaM/IcbIq9Edk+93WyBSmHrYWPSSzxsq72m6U/lKy+uitvnLXIRp6M907KJkYI/\nSXNY4V/gRgGTFz/kYuoV8XzXlTh3GlevxXIW1rHCS2LfqZZspxq9hM7pjyUaf+wD\nCYAylexSEGKojGK4SzpwLfrIuZsRx9GkIX/GB+X7GTsxP82KjehiI4e8TtqioIpe\nVV86X2B+BCWsU4n63cMgyjKzg3aN+uYkxQNLAoRCXxNABm76ymVLGyjICqmJbrSs\nZkWB0oOk+aH/ooyuq2h9v9oQ3Zw2xeWsDcQ6jT9U4bOrlPQ67uoTDW+UNi3JHMn5\neyVDOhRO+J/100r2mHgbknLCQf4vJhyKehBWdI43v2NPvmh/8qRv6KQEbrb+Pfs8\nUl9bXK7xcqgreCJ7xD2Ew8GaMe0nr4KHxCpGHbEzffFHE17extXVz4GsWHao9owX\nXfMnDsQtRGGGo2BQIBuBbYrI1wbNTZLltavAMsvrwOM31KBAPsKtXuTYxjEL++xp\nB0NUZnyCz6d5G+95R2IV\n=i7JU\n-----END PGP SIGNATURE-----\n",
        "payload": "tree f17e9198fd34583730169a7ffbc762604696823b\nparent a831c1bc24fdd7c9624a0653952f6d30b1b56550\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1734468322 +0100\ncommitter GitHub <noreply@github.com> 1734468322 +0100\n\nfix(docker): reset render_entrypoint.sh",
        "verified_at": "2024-12-17T20:46:48Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b942a1d6694112b3f215336ce243a94b3250b8aa",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/b942a1d6694112b3f215336ce243a94b3250b8aa",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b942a1d6694112b3f215336ce243a94b3250b8aa/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a831c1bc24fdd7c9624a0653952f6d30b1b56550",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a831c1bc24fdd7c9624a0653952f6d30b1b56550",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a831c1bc24fdd7c9624a0653952f6d30b1b56550"
      }
    ],
    "files": []
  },
  {
    "sha": "a831c1bc24fdd7c9624a0653952f6d30b1b56550",
    "node_id": "C_kwDONDG85doAKGE4MzFjMWJjMjRmZGQ3Yzk2MjRhMDY1Mzk1MmY2ZDMwYjFiNTY1NTA",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-12-17T20:43:42Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-17T20:43:42Z"
      },
      "message": "fix(docker): reset Dockerfile.render",
      "tree": {
        "sha": "f17e9198fd34583730169a7ffbc762604696823b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/f17e9198fd34583730169a7ffbc762604696823b"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/a831c1bc24fdd7c9624a0653952f6d30b1b56550",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYeJ+CRC1aQ7uu5UhlAAAAxUQAHbJrt7NdVnG4rP/v8K/hYk3\nX/XvMVHTD15O/BUhPbu99h6kAjKM4+97x5YXORx9Z2uOH2LNdxGKlhf6j6vRa3S0\nMSyoWJjpCJLYOE35NDVmfqyQh970c7G4M2NzRHBqpsLkl7kdq6GPFvcupDlSeQYo\neWlH4T2eFP3XwBLfNz/dpUc+uVIsEUuDErpfN750Di021adp90wJHa4cdhIm6gKc\nq3Ywizur2FZWejPWV8nkSLI7jX4p9+XCfaMbydnuIqyHsQsQKOGg3rzqz1hvxWNY\n3qEWmuCPWsT4YgRjzpZEWyf6EI5AYi6hZb9Qq2Ht99kvnFj9AvEqG6/KizkvQC8N\n1K6fJMPo8HFzFylzy0t2AepPcIW7QR9CUmdsLUbkTvH84AJexW3uAp2RD0F3TRqU\nyE+vj8Zhxxy90Bxwjk9Zbvv1D4J7d131l++Wt03hv1NGrPyiXUzQ57HvERp5ZUiY\nAuzAYpZk2lyhC9Tf2z/8t0XcVH0RU3RY3razzfO071vZufRE3bVBVI3mu39JZTiy\n/GP0rNJDs5uYnlf6GzT9GvWLrp9ByLrGiyyz+vNInIL+pfOkzDzM5bm6DPwYEv/3\nPwq4faFuNu2P+TdI8518ZsIzYfex4/koLfJ8I285Jd262dGyhVne8YkguPSRVxxj\nJU5UAaWvicG+4wfEcCfs\n=oaUL\n-----END PGP SIGNATURE-----\n",
        "payload": "tree f17e9198fd34583730169a7ffbc762604696823b\nparent 7aba894d92434cca6e9a2821c8a180f0789a1106\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1734468222 +0100\ncommitter GitHub <noreply@github.com> 1734468222 +0100\n\nfix(docker): reset Dockerfile.render",
        "verified_at": "2024-12-17T20:45:10Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a831c1bc24fdd7c9624a0653952f6d30b1b56550",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a831c1bc24fdd7c9624a0653952f6d30b1b56550",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a831c1bc24fdd7c9624a0653952f6d30b1b56550/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7aba894d92434cca6e9a2821c8a180f0789a1106",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7aba894d92434cca6e9a2821c8a180f0789a1106",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/7aba894d92434cca6e9a2821c8a180f0789a1106"
      }
    ],
    "files": []
  },
  {
    "sha": "7aba894d92434cca6e9a2821c8a180f0789a1106",
    "node_id": "C_kwDONDG85doAKDdhYmE4OTRkOTI0MzRjY2E2ZTlhMjgyMWM4YTE4MGYwNzg5YTExMDY",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-12-17T20:32:46Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-17T20:32:46Z"
      },
      "message": "fix(docker): reset Dockerfile.render",
      "tree": {
        "sha": "f17e9198fd34583730169a7ffbc762604696823b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/f17e9198fd34583730169a7ffbc762604696823b"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/7aba894d92434cca6e9a2821c8a180f0789a1106",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYd/uCRC1aQ7uu5UhlAAAvVQQAEUuSNBodLww0wsgZuyV92hd\nEAkoQQnafzRUYJYf0uCr48pxv3ngNF/zX8VrFVXp9KXG66HMCjzjA8gDBCTdjM8a\nqhYK6tIoQcPRN0gL/BoHLx1h3YuPkmYtSntgD+/EDw+IZc2FB6eygYP9O2+vMrYH\nMpMHNawaKLfFHqWplofEKR4JaxdxYG6ULOeB44qV1DI6AXM1lTq/0Z0pPv2/tfql\nKVTaTGh4tR12DB/6McJpdnkCWaiyLiu8nJKk4ZWnsSWDD5+npWooaNaf7JENkomM\nqpx/fjJOPxXGfGikrGotcxHWP176WBdPX4O0gsb9xya6cEzJy6+SEiOf1uFooFVS\ndnzviOE3NLt5hgv99YHHyLe3wOAhz5LcQLRS4fcYWyExhP4p8yKD8tOSJYx5b5AZ\nrgs+1GKoTqy6/tCDHfZTcoA/puRQn1qpUE4VnPQBMcH2/nRHSALnIlHyEQXUg7xE\n6/H2va3p5LomhECZ8AZdzfxmju5wwiOUKBCVjnvmFFMfsWImRJHpwhkNgfYbqFJH\nREo7ZPoJF7RhnosOS/LQqZMv15MqDkjUDRbST35nC6os9O/idRo+neaWkoy1NLy3\nKe6mhTjX5ojXr3B/ozAPdQgR7jiKXfsHIxC7vH6WwxdNAa8SlrO2Y7L9VFmnkIzq\nP7oHFIGCc7nZRflTl8nx\n=pt7n\n-----END PGP SIGNATURE-----\n",
        "payload": "tree f17e9198fd34583730169a7ffbc762604696823b\nparent 218abbde09f53496399a0409378cf830d4809af7\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1734467566 +0100\ncommitter GitHub <noreply@github.com> 1734467566 +0100\n\nfix(docker): reset Dockerfile.render",
        "verified_at": "2024-12-17T20:33:31Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7aba894d92434cca6e9a2821c8a180f0789a1106",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/7aba894d92434cca6e9a2821c8a180f0789a1106",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7aba894d92434cca6e9a2821c8a180f0789a1106/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "218abbde09f53496399a0409378cf830d4809af7",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/218abbde09f53496399a0409378cf830d4809af7",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/218abbde09f53496399a0409378cf830d4809af7"
      }
    ],
    "files": [
      {
        "sha": "ed10caea787b0655f7bc8d63ef3c9386c2b45c04",
        "filename": "docker/images/Dockerfile.render",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/7aba894d92434cca6e9a2821c8a180f0789a1106/docker%2Fimages%2FDockerfile.render",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/7aba894d92434cca6e9a2821c8a180f0789a1106/docker%2Fimages%2FDockerfile.render",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.render?ref=7aba894d92434cca6e9a2821c8a180f0789a1106",
        "patch": "@@ -21,7 +21,6 @@ WORKDIR /app\n COPY app/ ./app\n COPY core/ ./core\n COPY migrations/ ./migrations\n-COPY fakenodo/ /app/fakenodo\n \n # Copy requirements.txt into the working directory /app\n COPY requirements.txt .\n@@ -62,7 +61,6 @@ RUN apt-get update && apt-get install -y git\n \n # Expose port 80\n EXPOSE 80\n-EXPOSE 5001\n \n # Command to run the application\n-CMD [\"./render_entrypoint.sh\"]\n\\ No newline at end of file\n+CMD [\"./render_entrypoint.sh\"]"
      }
    ]
  },
  {
    "sha": "218abbde09f53496399a0409378cf830d4809af7",
    "node_id": "C_kwDONDG85doAKDIxOGFiYmRlMDlmNTM0OTYzOTlhMDQwOTM3OGNmODMwZDQ4MDlhZjc",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-12-17T20:29:18Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-17T20:29:18Z"
      },
      "message": "fix(docker): reset render_entrypoint.sh",
      "tree": {
        "sha": "0f52c023b710d90900bcb31d07aece63ac4ee548",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/0f52c023b710d90900bcb31d07aece63ac4ee548"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/218abbde09f53496399a0409378cf830d4809af7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYd8eCRC1aQ7uu5UhlAAAh6AQALEYGBsd5kmzAW3+foTxPlrz\ngQiujs+SJTgmNyaLMQVg+1saPnE7nwhs/MCGlMwQUsdB1xhZpjkWep9vtZf7m/lh\n7ClnQBINGoqH4P/nTf7XxQubFHhB1ja1rLUZzCwMOVmlTnRNcmgcRCJY5Uln//BP\n96bWEmOWrH1YY2cOwbvVjV+oqWYUJZjcCjBbtQ0ssYtwSoErvHL/IJ2hHirWu2xg\nL0Lhds8BtbceHqt730MwfsQVBMYJFOSfCHfHlaftbo/sfyeRu+t1MP0lRd81mPlS\nbv/0geA3fgUMYEQUXxFo1wR+qbr876CQqddkcnWDmaut28ROZocEqObHOmfSzMz4\nVSVWeQAvCi004RyKGZKr4/Gs/x3MbQ9xDJFXVWvJa1S07YnvUtvUqUXuUvudLUur\nApLAIZeNVTCcyuxZkCzig6wRy44Y6Vo5MXoJaQkwdYnQldxG6rNJIO7oxW2VYLfG\nhMwHHYF+M3H3kuKVK/dV5NrPLzsvxc4FL3VaehsT0KhqqC+BMBvCs0Q5hIokVWmO\njQ0l6sxCtt5mT/84ax/AbRhWHJbJ9vv1IKQP5jPMGm7X/U5Ft6PJLsafpdX0vIBl\n/Y+DMnfe41q2osYDi9SW+lOEHqNlw30lRGUfBEuNMLQVWY5zUqp2ZFuwCFKH6VUs\nwq6h8c/Z4CF8hdhZ3moo\n=h+Ki\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 0f52c023b710d90900bcb31d07aece63ac4ee548\nparent 7b06c45cd318276549047033da687210b996cb83\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1734467358 +0100\ncommitter GitHub <noreply@github.com> 1734467358 +0100\n\nfix(docker): reset render_entrypoint.sh",
        "verified_at": "2024-12-17T20:29:33Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/218abbde09f53496399a0409378cf830d4809af7",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/218abbde09f53496399a0409378cf830d4809af7",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/218abbde09f53496399a0409378cf830d4809af7/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7b06c45cd318276549047033da687210b996cb83",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7b06c45cd318276549047033da687210b996cb83",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/7b06c45cd318276549047033da687210b996cb83"
      }
    ],
    "files": [
      {
        "sha": "aa3145e217c2654a1462714b78e52abf35d6276e",
        "filename": "docker/entrypoints/render_entrypoint.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/218abbde09f53496399a0409378cf830d4809af7/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/218abbde09f53496399a0409378cf830d4809af7/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fentrypoints%2Frender_entrypoint.sh?ref=218abbde09f53496399a0409378cf830d4809af7",
        "patch": "@@ -51,8 +51,6 @@ else\n     flask db upgrade\n fi\n \n-python -m fakenodo.run &\n-\n # Start the application using Gunicorn, binding it to port 80\n # Set the logging level to info and the timeout to 3600 seconds\n-exec gunicorn --bind 0.0.0.0:80 app:app --log-level info --timeout 3600\n\\ No newline at end of file\n+exec gunicorn --bind 0.0.0.0:80 app:app --log-level info --timeout 3600"
      }
    ]
  },
  {
    "sha": "7b06c45cd318276549047033da687210b996cb83",
    "node_id": "C_kwDONDG85doAKDdiMDZjNDVjZDMxODI3NjU0OTA0NzAzM2RhNjg3MjEwYjk5NmNiODM",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T19:30:11Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T19:30:11Z"
      },
      "message": "fix(fakenodo): possible fix for fakenodo deployment",
      "tree": {
        "sha": "cf1f8d163a302a08e44c8f58e9e3fc6553afef56",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/cf1f8d163a302a08e44c8f58e9e3fc6553afef56"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/7b06c45cd318276549047033da687210b996cb83",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7b06c45cd318276549047033da687210b996cb83",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/7b06c45cd318276549047033da687210b996cb83",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7b06c45cd318276549047033da687210b996cb83/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c5103777038928967ee522a44eb7216c36da33da",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c5103777038928967ee522a44eb7216c36da33da",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c5103777038928967ee522a44eb7216c36da33da"
      }
    ],
    "files": [
      {
        "sha": "ccb218dfaadf2c1302f898b827053d75239f88bf",
        "filename": "docker/entrypoints/render_entrypoint.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/7b06c45cd318276549047033da687210b996cb83/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/7b06c45cd318276549047033da687210b996cb83/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fentrypoints%2Frender_entrypoint.sh?ref=7b06c45cd318276549047033da687210b996cb83",
        "patch": "@@ -51,7 +51,7 @@ else\n     flask db upgrade\n fi\n \n-python -m fakenodo/run &\n+python -m fakenodo.run &\n \n # Start the application using Gunicorn, binding it to port 80\n # Set the logging level to info and the timeout to 3600 seconds"
      }
    ]
  },
  {
    "sha": "c5103777038928967ee522a44eb7216c36da33da",
    "node_id": "C_kwDONDG85doAKGM1MTAzNzc3MDM4OTI4OTY3ZWU1MjJhNDRlYjcyMTZjMzZkYTMzZGE",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T19:21:55Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T19:21:55Z"
      },
      "message": "fix(fakenodo): possible fakenodo deploy fix",
      "tree": {
        "sha": "79b3cba44b9c7825e4a5d9580617d96f665ce4d5",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/79b3cba44b9c7825e4a5d9580617d96f665ce4d5"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/c5103777038928967ee522a44eb7216c36da33da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c5103777038928967ee522a44eb7216c36da33da",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c5103777038928967ee522a44eb7216c36da33da",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c5103777038928967ee522a44eb7216c36da33da/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6c21d81a2b79e5e99f4bbd89cf7286fe1362f1a",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f6c21d81a2b79e5e99f4bbd89cf7286fe1362f1a",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f6c21d81a2b79e5e99f4bbd89cf7286fe1362f1a"
      }
    ],
    "files": [
      {
        "sha": "c13aef524bbe7893c2ece0ec4c51d127f41eb4d2",
        "filename": "docker/entrypoints/render_entrypoint.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c5103777038928967ee522a44eb7216c36da33da/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c5103777038928967ee522a44eb7216c36da33da/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fentrypoints%2Frender_entrypoint.sh?ref=c5103777038928967ee522a44eb7216c36da33da",
        "patch": "@@ -51,7 +51,7 @@ else\n     flask db upgrade\n fi\n \n-python3 -m fakenodo/run &\n+python -m fakenodo/run &\n \n # Start the application using Gunicorn, binding it to port 80\n # Set the logging level to info and the timeout to 3600 seconds"
      }
    ]
  },
  {
    "sha": "f6c21d81a2b79e5e99f4bbd89cf7286fe1362f1a",
    "node_id": "C_kwDONDG85doAKGY2YzIxZDgxYTJiNzllNWU5OWY0YmJkODljZjcyODZmZTEzNjJmMWE",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T19:13:56Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T19:13:56Z"
      },
      "message": "fix(fakenodo): syntax fix",
      "tree": {
        "sha": "281e303828b89b3ffc58b78159d12f09f16e9a63",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/281e303828b89b3ffc58b78159d12f09f16e9a63"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/f6c21d81a2b79e5e99f4bbd89cf7286fe1362f1a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f6c21d81a2b79e5e99f4bbd89cf7286fe1362f1a",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f6c21d81a2b79e5e99f4bbd89cf7286fe1362f1a",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f6c21d81a2b79e5e99f4bbd89cf7286fe1362f1a/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4284d1110daa29ece1fd6e027b50fe1364bf611b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4284d1110daa29ece1fd6e027b50fe1364bf611b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/4284d1110daa29ece1fd6e027b50fe1364bf611b"
      }
    ],
    "files": [
      {
        "sha": "345abb5b3de5c595fac3ca99ae1c09603b2e01af",
        "filename": "docker/entrypoints/render_entrypoint.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f6c21d81a2b79e5e99f4bbd89cf7286fe1362f1a/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f6c21d81a2b79e5e99f4bbd89cf7286fe1362f1a/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fentrypoints%2Frender_entrypoint.sh?ref=f6c21d81a2b79e5e99f4bbd89cf7286fe1362f1a",
        "patch": "@@ -51,7 +51,7 @@ else\n     flask db upgrade\n fi\n \n-python3 -m fakenodo/run.py &\n+python3 -m fakenodo/run &\n \n # Start the application using Gunicorn, binding it to port 80\n # Set the logging level to info and the timeout to 3600 seconds"
      }
    ]
  },
  {
    "sha": "4284d1110daa29ece1fd6e027b50fe1364bf611b",
    "node_id": "C_kwDONDG85doAKDQyODRkMTExMGRhYTI5ZWNlMWZkNmUwMjdiNTBmZTEzNjRiZjYxMWI",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T18:53:52Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T18:53:52Z"
      },
      "message": "fix(fakenodo): possible fix for fakenodo deploy",
      "tree": {
        "sha": "0c89890edd4e8c313f73b0b1d4db3be3543033ee",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/0c89890edd4e8c313f73b0b1d4db3be3543033ee"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/4284d1110daa29ece1fd6e027b50fe1364bf611b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4284d1110daa29ece1fd6e027b50fe1364bf611b",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/4284d1110daa29ece1fd6e027b50fe1364bf611b",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4284d1110daa29ece1fd6e027b50fe1364bf611b/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eefe25a4709957312e286051b16a6570906c33e5",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/eefe25a4709957312e286051b16a6570906c33e5",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/eefe25a4709957312e286051b16a6570906c33e5"
      }
    ],
    "files": [
      {
        "sha": "791281bdf86be601a68a8cb94b23576a18128328",
        "filename": "docker/entrypoints/render_entrypoint.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/4284d1110daa29ece1fd6e027b50fe1364bf611b/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/4284d1110daa29ece1fd6e027b50fe1364bf611b/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fentrypoints%2Frender_entrypoint.sh?ref=4284d1110daa29ece1fd6e027b50fe1364bf611b",
        "patch": "@@ -51,7 +51,7 @@ else\n     flask db upgrade\n fi\n \n-python3 fakenodo/run.py &\n+python3 -m fakenodo/run.py &\n \n # Start the application using Gunicorn, binding it to port 80\n # Set the logging level to info and the timeout to 3600 seconds"
      }
    ]
  },
  {
    "sha": "eefe25a4709957312e286051b16a6570906c33e5",
    "node_id": "C_kwDONDG85doAKGVlZmUyNWE0NzA5OTU3MzEyZTI4NjA1MWIxNmE2NTcwOTA2YzMzZTU",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T18:46:43Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T18:46:43Z"
      },
      "message": "fix(fakenodo): possible fix for fakenodo",
      "tree": {
        "sha": "e6c4b76d546fd8c90d13c1d5826f49e15f409149",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/e6c4b76d546fd8c90d13c1d5826f49e15f409149"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/eefe25a4709957312e286051b16a6570906c33e5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/eefe25a4709957312e286051b16a6570906c33e5",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/eefe25a4709957312e286051b16a6570906c33e5",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/eefe25a4709957312e286051b16a6570906c33e5/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fdbbec5b64d2ec0014781d7917b22dac9e7f1f39",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fdbbec5b64d2ec0014781d7917b22dac9e7f1f39",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/fdbbec5b64d2ec0014781d7917b22dac9e7f1f39"
      }
    ],
    "files": [
      {
        "sha": "b86e8b1b1a38df95bdf27f523b73849034824537",
        "filename": "docker/entrypoints/render_entrypoint.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/eefe25a4709957312e286051b16a6570906c33e5/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/eefe25a4709957312e286051b16a6570906c33e5/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fentrypoints%2Frender_entrypoint.sh?ref=eefe25a4709957312e286051b16a6570906c33e5",
        "patch": "@@ -51,7 +51,7 @@ else\n     flask db upgrade\n fi\n \n-python fakenodo/run.py &\n+python3 fakenodo/run.py &\n \n # Start the application using Gunicorn, binding it to port 80\n # Set the logging level to info and the timeout to 3600 seconds"
      }
    ]
  },
  {
    "sha": "fdbbec5b64d2ec0014781d7917b22dac9e7f1f39",
    "node_id": "C_kwDONDG85doAKGZkYmJlYzViNjRkMmVjMDAxNDc4MWQ3OTE3YjIyZGFjOWU3ZjFmMzk",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T18:35:51Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T18:35:51Z"
      },
      "message": "fix(fakenodo): possible fix for mdule detection",
      "tree": {
        "sha": "066203dbf915bd56920ecb24aeffb42c3745b2f8",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/066203dbf915bd56920ecb24aeffb42c3745b2f8"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/fdbbec5b64d2ec0014781d7917b22dac9e7f1f39",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fdbbec5b64d2ec0014781d7917b22dac9e7f1f39",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/fdbbec5b64d2ec0014781d7917b22dac9e7f1f39",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fdbbec5b64d2ec0014781d7917b22dac9e7f1f39/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f79beb0d6747f8c82ee204f513fa4c69c8289db3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f79beb0d6747f8c82ee204f513fa4c69c8289db3",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f79beb0d6747f8c82ee204f513fa4c69c8289db3"
      }
    ],
    "files": [
      {
        "sha": "f7f7e97f75131260bb97777786342ccd9b601e1a",
        "filename": "docker/entrypoints/render_entrypoint.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/fdbbec5b64d2ec0014781d7917b22dac9e7f1f39/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/fdbbec5b64d2ec0014781d7917b22dac9e7f1f39/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fentrypoints%2Frender_entrypoint.sh?ref=fdbbec5b64d2ec0014781d7917b22dac9e7f1f39",
        "patch": "@@ -51,7 +51,7 @@ else\n     flask db upgrade\n fi\n \n-python ./fakenodo/run.py &\n+python fakenodo/run.py &\n \n # Start the application using Gunicorn, binding it to port 80\n # Set the logging level to info and the timeout to 3600 seconds"
      }
    ]
  },
  {
    "sha": "f79beb0d6747f8c82ee204f513fa4c69c8289db3",
    "node_id": "C_kwDONDG85doAKGY3OWJlYjBkNjc0N2Y4YzgyZWUyMDRmNTEzZmE0YzY5YzgyODlkYjM",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T18:12:13Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T18:12:13Z"
      },
      "message": "fix(fakenodo): fix for not finding the fakenodo script as a module",
      "tree": {
        "sha": "71618202ecaa1aab1d41183aef2c5e24a08fbe7c",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/71618202ecaa1aab1d41183aef2c5e24a08fbe7c"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/f79beb0d6747f8c82ee204f513fa4c69c8289db3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f79beb0d6747f8c82ee204f513fa4c69c8289db3",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f79beb0d6747f8c82ee204f513fa4c69c8289db3",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f79beb0d6747f8c82ee204f513fa4c69c8289db3/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "322829b2d1730511830b536f8a0b7cde5532d691",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/322829b2d1730511830b536f8a0b7cde5532d691",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/322829b2d1730511830b536f8a0b7cde5532d691"
      }
    ],
    "files": [
      {
        "sha": "b80113b49d10c4bb422139cbc136a4f52bc99e2c",
        "filename": "docker/entrypoints/render_entrypoint.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f79beb0d6747f8c82ee204f513fa4c69c8289db3/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f79beb0d6747f8c82ee204f513fa4c69c8289db3/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fentrypoints%2Frender_entrypoint.sh?ref=f79beb0d6747f8c82ee204f513fa4c69c8289db3",
        "patch": "@@ -51,8 +51,8 @@ else\n     flask db upgrade\n fi\n \n-python fakenodo/run.py &\n+python ./fakenodo/run.py &\n \n # Start the application using Gunicorn, binding it to port 80\n # Set the logging level to info and the timeout to 3600 seconds\n-exec gunicorn --bind 0.0.0.0:80 app:app --log-level info --timeout 3600\n+exec gunicorn --bind 0.0.0.0:80 app:app --log-level info --timeout 3600\n\\ No newline at end of file"
      },
      {
        "sha": "ad70754b7dcf317a59add9df3a6fac54cca62a1c",
        "filename": "docker/images/Dockerfile.render",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f79beb0d6747f8c82ee204f513fa4c69c8289db3/docker%2Fimages%2FDockerfile.render",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f79beb0d6747f8c82ee204f513fa4c69c8289db3/docker%2Fimages%2FDockerfile.render",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.render?ref=f79beb0d6747f8c82ee204f513fa4c69c8289db3",
        "patch": "@@ -21,7 +21,7 @@ WORKDIR /app\n COPY app/ ./app\n COPY core/ ./core\n COPY migrations/ ./migrations\n-COPY fakenodo/ ./fakenodo\n+COPY fakenodo/ /app/fakenodo\n \n # Copy requirements.txt into the working directory /app\n COPY requirements.txt .\n@@ -65,4 +65,4 @@ EXPOSE 80\n EXPOSE 5001\n \n # Command to run the application\n-CMD [\"./render_entrypoint.sh\"]\n+CMD [\"./render_entrypoint.sh\"]\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "322829b2d1730511830b536f8a0b7cde5532d691",
    "node_id": "C_kwDONDG85doAKDMyMjgyOWIyZDE3MzA1MTE4MzBiNTM2ZjhhMGI3Y2RlNTUzMmQ2OTE",
    "commit": {
      "author": {
        "name": "raumonmar1",
        "email": "72814383+raumonmar1@users.noreply.github.com",
        "date": "2024-12-17T18:02:10Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-17T18:02:10Z"
      },
      "message": "Merge pull request #43 from flamenquin-hub-single/fix-dataset-tests\n\nFix dataset tests",
      "tree": {
        "sha": "099ff25ed58d5eca0bd1ee831489a4353f1a9958",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/099ff25ed58d5eca0bd1ee831489a4353f1a9958"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/322829b2d1730511830b536f8a0b7cde5532d691",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYbyiCRC1aQ7uu5UhlAAAES8QAJups3fPgoJWzwT/3YwKKFJw\nOQ0n8iilSQriEdhFzIMhg8cGh8T/1ZeevmOTFDdhHpvOPGv1hpDbIu5hASyPHsaS\nbF4aRGmSAL38zzi6HGb6lht5NcExks5seyRFfdAGPNfsd0xcd7lv9PWgGU6wdm5I\nQnDXYP3RMlZaxVN04ROhaz6bwXBXHYsvGxs8jQTz73gzgQx5o6WrCPfyU0Fb6yvK\ngbl2qBZ0hjXyTuB0I0mDXhZ5nGWPs/yK3SpRGKJ0i3Vf5mw7RZfTUSHfS1+gMgRI\nXC1SNngNWtwvJgGVuZnvxqkaIqC0RU/54VIu6pljMiNR2yZ3UZMAQly2vfNNyEq8\nGY0URzEDc40RsI+246h2w+Mjv+PScaouiOJozUgrgQ2dfOisvj3jPOC5eAVVrv87\nwvEE/bX/7nkHH2RVwpGsG5wJ5Kziky8ZpGZrAoMeUxxp6cWZeuWZp1tJoq8wFpyu\n+O8HoeWVeiE0fsEqCEpzlwOD/tYH5NcON40eVM+iYLVYUEmi0uuvncZhRQZDFpg5\nJHzFH3d854ahebh/mlGl4HBO4dIqt2dUL20dcDnAjCyyifjPmRtC3YFU1CCXtcAF\nYv/6jTCHrU6Oz8CemMQ2NpKvppb7rVcwDdUSK/PNBGiAgbPxChXOhhr4SzPCs7bv\nYdne2fzKMSG3SeI2OtkX\n=+ySc\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 099ff25ed58d5eca0bd1ee831489a4353f1a9958\nparent 6e92d25fa22f73fd2ca57224f6c9e0550901eb66\nparent e01a8566a1aa26751267086d9dae0583d348e8b4\nauthor raumonmar1 <72814383+raumonmar1@users.noreply.github.com> 1734458530 +0100\ncommitter GitHub <noreply@github.com> 1734458530 +0100\n\nMerge pull request #43 from flamenquin-hub-single/fix-dataset-tests\n\nFix dataset tests",
        "verified_at": "2024-12-17T18:03:56Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/322829b2d1730511830b536f8a0b7cde5532d691",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/322829b2d1730511830b536f8a0b7cde5532d691",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/322829b2d1730511830b536f8a0b7cde5532d691/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e92d25fa22f73fd2ca57224f6c9e0550901eb66",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6e92d25fa22f73fd2ca57224f6c9e0550901eb66",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/6e92d25fa22f73fd2ca57224f6c9e0550901eb66"
      },
      {
        "sha": "e01a8566a1aa26751267086d9dae0583d348e8b4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e01a8566a1aa26751267086d9dae0583d348e8b4",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e01a8566a1aa26751267086d9dae0583d348e8b4"
      }
    ],
    "files": [
      {
        "sha": "7aad78612616876fa0bde2b93236e4f3ae6bf5f2",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 20,
        "deletions": 37,
        "changes": 57,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/322829b2d1730511830b536f8a0b7cde5532d691/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/322829b2d1730511830b536f8a0b7cde5532d691/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=322829b2d1730511830b536f8a0b7cde5532d691",
        "patch": "@@ -1,4 +1,3 @@\n-\n import random\n from locust import HttpUser, TaskSet, task, between\n from core.locust.common import get_csrf_token\n@@ -40,7 +39,7 @@ def ensure_logged_in(self):\n \n     @task\n     def commit_dataset(self):\n-        dataset_id = random.randint(1, 10)\n+        dataset_id = random.randint(1, 5)\n         response = self.client.post(f\"/dataset/commit/{dataset_id}\", json={})\n         \n         if response.status_code == 200:\n@@ -74,41 +73,25 @@ def ensure_logged_in(self):\n             print(f\"Login failed: {response.status_code}, {response.text}\")\n         else:\n             print(\"User successfully logged in.\")\n-\n-class DownloadDatasets(TaskSet):\n-    formats = {\n-        \"Glencoe\": \"glencoe\",\n-        \"SPLOT\": \"splot\",\n-        \"DIMACS\": \"dimacs\",\n-        \"ZIP\": \"zip\"\n-    }\n-\n+            \n+            \n     @task\n-    def download_files(self):\n-        for dataset_id in self.dataset_ids:  # Itera sobre tus dataset_ids\n-            for format_name, format_value in self.formats.items():  # Itera sobre los formatos\n-                with self.client.get(\n-                    f\"/flamapy/export/dataset/{dataset_id}/{format_value}\",  # URL corregida\n-                    name=f\"Download {format_name}\",\n-                    allow_redirects=True,  # Sigue autom\u00e1ticamente las redirecciones\n-                    catch_response=True  # Captura la respuesta para an\u00e1lisis\n-                ) as response:\n-                    if response.status_code == 200:  # Descarga exitosa\n-                        response.success()\n-                    elif response.status_code == 302:  # Redirecci\u00f3n\n-                        response.success()  # Tratamos 302 como \u00e9xito\n-                    else:\n-                        response.failure(\n-                            f\"Failed to download {format_name} for dataset {dataset_id} \"\n-                            f\"with status code {response.status_code}\"\n-                        )\n+    def commit_dataset(self):\n+        file_id = random.randint(1, 5)  \n+        response = self.client.post(f\"/dataset/commit_file/{file_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"File {file_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"File {file_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for File {file_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n+            \n+         \n \n class DatasetUser(HttpUser):\n-    \"\"\"\n-    Clase principal que define los usuarios y su comportamiento.\n-    \"\"\"\n-    tasks = [CommitFileBehavior]  # Asigna la tarea de descarga\n-    min_wait = 5000  # Espera m\u00ednima de 5 segundos\n-    max_wait = 9000  # Espera m\u00e1xima de 9 segundos\n-    wait_time = between(5, 9)  # Espera aleatoria entre tareas\n-    host = \"http://localhost:5000\"  # La URL base de tu aplicaci\u00f3n\n\\ No newline at end of file\n+    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior]\n+    wait_time = between(5, 9)\n+    host = get_host_for_locust_testing()\n\\ No newline at end of file"
      },
      {
        "sha": "412fe219d06eafced00e68885708250b91b44891",
        "filename": "app/modules/dataset/tests/locustfile_download.py",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/322829b2d1730511830b536f8a0b7cde5532d691/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/322829b2d1730511830b536f8a0b7cde5532d691/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py?ref=322829b2d1730511830b536f8a0b7cde5532d691",
        "patch": "@@ -0,0 +1,51 @@\n+from locust import HttpUser, TaskSet, task, between\n+import re\n+\n+class DownloadDatasetFormats(TaskSet):\n+    \"\"\"Simula la descarga de datasets con rutas din\u00e1micas.\"\"\"\n+\n+    def on_start(self):\n+        \"\"\"Obtiene un ID v\u00e1lido para el dataset. Evita fallos si la petici\u00f3n falla.\"\"\"\n+        try:\n+            self.dataset_id = self.get_valid_dataset_id()\n+        except Exception as e:\n+            print(f\"\u26a0\ufe0f Error obteniendo el ID: {e}. Usando 53 por defecto.\")\n+            self.dataset_id = 53  # Valor por defecto si la petici\u00f3n falla\n+        self.base_zip_url = f\"/dataset/download/{self.dataset_id}\"\n+        self.base_export_url = f\"/flamapy/export_dataset/{self.dataset_id}\"\n+\n+    def get_valid_dataset_id(self):\n+        \"\"\"Obtiene un ID v\u00e1lido consultando la p\u00e1gina principal.\"\"\"\n+        response = self.client.get(\"/doi/10.1234/\", name=\"Get Dataset ID\")\n+        if response.status_code == 200:\n+            match = re.search(r'/dataset/download/(\\d+)', response.text)\n+            if match:\n+                print(f\"\u2705 ID encontrado: {match.group(1)}\")\n+                return match.group(1)  # Retorna el primer ID encontrado\n+        raise Exception(\"No se pudo obtener un ID v\u00e1lido\")\n+\n+    @task\n+    def download_zip(self):\n+        \"\"\"Descarga el dataset en formato ZIP.\"\"\"\n+        self.client.get(self.base_zip_url, name=\"Download ZIP\")\n+\n+    @task\n+    def download_glencoe(self):\n+        \"\"\"Descarga el dataset en formato Glencoe.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/glencoe\", name=\"Download Glencoe\")\n+\n+    @task\n+    def download_dimacs(self):\n+        \"\"\"Descarga el dataset en formato DIMACS.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/dimacs\", name=\"Download DIMACS\")\n+\n+    @task\n+    def download_splot(self):\n+        \"\"\"Descarga el dataset en formato SPLOT.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/splot\", name=\"Download SPLOT\")\n+\n+class DatasetUser(HttpUser):\n+    \"\"\"Simula un usuario que descarga datasets con rutas adaptadas.\"\"\"\n+    tasks = [DownloadDatasetFormats]\n+    wait_time = between(1, 2)\n+    host = \"http://localhost:5000\""
      },
      {
        "sha": "786d0f7e5482d0481178354851ee2cf9615c5a68",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/322829b2d1730511830b536f8a0b7cde5532d691/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/322829b2d1730511830b536f8a0b7cde5532d691/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=322829b2d1730511830b536f8a0b7cde5532d691",
        "patch": "@@ -12,6 +12,11 @@\n \n DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n \n+# Asegurarse de que la carpeta de descargas exista\n+if not os.path.exists(DOWNLOAD_DIR):\n+    os.makedirs(DOWNLOAD_DIR)\n+    print(f\"\u2705 Carpeta de descargas creada: {DOWNLOAD_DIR}\")\n+\n \n def initialize_driver(download_dir=None):\n     options = Options()\n@@ -96,4 +101,4 @@ def test_download_datasets_index():\n \n \n if __name__ == \"__main__\":\n-    test_download_datasets_index()\n\\ No newline at end of file\n+    test_download_datasets_index()"
      }
    ]
  },
  {
    "sha": "6e92d25fa22f73fd2ca57224f6c9e0550901eb66",
    "node_id": "C_kwDONDG85doAKDZlOTJkMjVmYTIyZjczZmQyY2E1NzIyNGY2YzllMDU1MDkwMWViNjY",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T17:56:42Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T17:56:42Z"
      },
      "message": "fix(fakenodo): possible fix for port binding",
      "tree": {
        "sha": "a94ab549107adc5ea80fff14be5b1bcf04e8bf9c",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a94ab549107adc5ea80fff14be5b1bcf04e8bf9c"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/6e92d25fa22f73fd2ca57224f6c9e0550901eb66",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6e92d25fa22f73fd2ca57224f6c9e0550901eb66",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/6e92d25fa22f73fd2ca57224f6c9e0550901eb66",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6e92d25fa22f73fd2ca57224f6c9e0550901eb66/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1ea49167f2aa109c36c856662009279873eb7b31",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/1ea49167f2aa109c36c856662009279873eb7b31",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/1ea49167f2aa109c36c856662009279873eb7b31"
      }
    ],
    "files": [
      {
        "sha": "35912b452024cd9109cd79ed41e34606e6e3de3a",
        "filename": "docker/entrypoints/render_entrypoint.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6e92d25fa22f73fd2ca57224f6c9e0550901eb66/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6e92d25fa22f73fd2ca57224f6c9e0550901eb66/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fentrypoints%2Frender_entrypoint.sh?ref=6e92d25fa22f73fd2ca57224f6c9e0550901eb66",
        "patch": "@@ -51,6 +51,8 @@ else\n     flask db upgrade\n fi\n \n+python fakenodo/run.py &\n+\n # Start the application using Gunicorn, binding it to port 80\n # Set the logging level to info and the timeout to 3600 seconds\n-exec gunicorn --bind 0.0.0.0:80 app:app --log-level info --timeout 3600 & python fakenodo/run.py &\n+exec gunicorn --bind 0.0.0.0:80 app:app --log-level info --timeout 3600"
      }
    ]
  },
  {
    "sha": "1ea49167f2aa109c36c856662009279873eb7b31",
    "node_id": "C_kwDONDG85doAKDFlYTQ5MTY3ZjJhYTEwOWMzNmM4NTY2NjIwMDkyNzk4NzNlYjdiMzE",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T17:35:07Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T17:35:07Z"
      },
      "message": "fix(fakenodo): specified it should make port 5001 available when rendering",
      "tree": {
        "sha": "de0192b6acaa0d5ec388b8e7a131b1dceb7f2481",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/de0192b6acaa0d5ec388b8e7a131b1dceb7f2481"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/1ea49167f2aa109c36c856662009279873eb7b31",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/1ea49167f2aa109c36c856662009279873eb7b31",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/1ea49167f2aa109c36c856662009279873eb7b31",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/1ea49167f2aa109c36c856662009279873eb7b31/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8"
      }
    ],
    "files": [
      {
        "sha": "0f72dd542913c08d5a1691b6ab884505c10e0605",
        "filename": "docker/images/Dockerfile.render",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/1ea49167f2aa109c36c856662009279873eb7b31/docker%2Fimages%2FDockerfile.render",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/1ea49167f2aa109c36c856662009279873eb7b31/docker%2Fimages%2FDockerfile.render",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.render?ref=1ea49167f2aa109c36c856662009279873eb7b31",
        "patch": "@@ -62,6 +62,7 @@ RUN apt-get update && apt-get install -y git\n \n # Expose port 80\n EXPOSE 80\n+EXPOSE 5001\n \n # Command to run the application\n CMD [\"./render_entrypoint.sh\"]"
      }
    ]
  },
  {
    "sha": "6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8",
    "node_id": "C_kwDONDG85doAKDZhOGM2YjI4OTI3MGE5YTBkZWZmZTRkMWVkN2VmOGE5NjQ0OTUyZTg",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T17:18:42Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-17T17:18:42Z"
      },
      "message": "feat(render): changed rendering script to run fakenodo at the same time",
      "tree": {
        "sha": "81b4d64c79f3c3543ec10ed564f05ecfd976e92e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/81b4d64c79f3c3543ec10ed564f05ecfd976e92e"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e67a6435885d2428b35df57bc1217a9e60f5ce11",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e67a6435885d2428b35df57bc1217a9e60f5ce11",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e67a6435885d2428b35df57bc1217a9e60f5ce11"
      }
    ],
    "files": [
      {
        "sha": "9feef2716550239a52d16247f54235571f5b3990",
        "filename": "docker/entrypoints/render_entrypoint.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fentrypoints%2Frender_entrypoint.sh?ref=6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8",
        "patch": "@@ -53,4 +53,4 @@ fi\n \n # Start the application using Gunicorn, binding it to port 80\n # Set the logging level to info and the timeout to 3600 seconds\n-exec gunicorn --bind 0.0.0.0:80 app:app --log-level info --timeout 3600\n+exec gunicorn --bind 0.0.0.0:80 app:app --log-level info --timeout 3600 & python fakenodo/run.py &"
      },
      {
        "sha": "ec2a5d4b9ce0cb03526012d7544df37609112a48",
        "filename": "docker/images/Dockerfile.render",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8/docker%2Fimages%2FDockerfile.render",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8/docker%2Fimages%2FDockerfile.render",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.render?ref=6a8c6b289270a9a0deffe4d1ed7ef8a9644952e8",
        "patch": "@@ -21,6 +21,7 @@ WORKDIR /app\n COPY app/ ./app\n COPY core/ ./core\n COPY migrations/ ./migrations\n+COPY fakenodo/ ./fakenodo\n \n # Copy requirements.txt into the working directory /app\n COPY requirements.txt ."
      }
    ]
  },
  {
    "sha": "e01a8566a1aa26751267086d9dae0583d348e8b4",
    "node_id": "C_kwDONDG85doAKGUwMWE4NTY2YTFhYTI2NzUxMjY3MDg2ZDlkYWUwNTgzZDM0OGU4YjQ",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-17T16:41:11Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-17T16:41:11Z"
      },
      "message": "fix(dataset): fixed dataset tests",
      "tree": {
        "sha": "b2de90b3642eabe48581c34efb0405faabe8f755",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/b2de90b3642eabe48581c34efb0405faabe8f755"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/e01a8566a1aa26751267086d9dae0583d348e8b4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e01a8566a1aa26751267086d9dae0583d348e8b4",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e01a8566a1aa26751267086d9dae0583d348e8b4",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e01a8566a1aa26751267086d9dae0583d348e8b4/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8098f0f0a5f96606f84eaa9c9766f5cbe5613591",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8098f0f0a5f96606f84eaa9c9766f5cbe5613591",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/8098f0f0a5f96606f84eaa9c9766f5cbe5613591"
      }
    ],
    "files": [
      {
        "sha": "7aad78612616876fa0bde2b93236e4f3ae6bf5f2",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 2,
        "deletions": 29,
        "changes": 31,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e01a8566a1aa26751267086d9dae0583d348e8b4/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e01a8566a1aa26751267086d9dae0583d348e8b4/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=e01a8566a1aa26751267086d9dae0583d348e8b4",
        "patch": "@@ -89,36 +89,9 @@ def commit_dataset(self):\n         else:\n             print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n             \n-\n-class DownloadDatasets(TaskSet):\n-    formats = {\n-        \"Glencoe\": \"glencoe\",\n-        \"SPLOT\": \"splot\",\n-        \"DIMACS\": \"dimacs\",\n-        \"ZIP\": \"zip\"\n-    }\n-\n-    @task\n-    def download_files(self):\n-        for dataset_id in self.dataset_ids:  # Itera sobre tus dataset_ids\n-            for format_name, format_value in self.formats.items():  # Itera sobre los formatos\n-                with self.client.get(\n-                    f\"/flamapy/export/dataset/{dataset_id}/{format_value}\",  # URL corregida\n-                    name=f\"Download {format_name}\",\n-                    allow_redirects=True,  # Sigue autom\u00e1ticamente las redirecciones\n-                    catch_response=True  # Captura la respuesta para an\u00e1lisis\n-                ) as response:\n-                    if response.status_code == 200:  # Descarga exitosa\n-                        response.success()\n-                    elif response.status_code == 302:  # Redirecci\u00f3n\n-                        response.success()  # Tratamos 302 como \u00e9xito\n-                    else:\n-                        response.failure(\n-                            f\"Failed to download {format_name} for dataset {dataset_id} \"\n-                            f\"with status code {response.status_code}\"\n-                        )\n+         \n \n class DatasetUser(HttpUser):\n-    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior, DownloadDatasets]\n+    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior]\n     wait_time = between(5, 9)\n     host = get_host_for_locust_testing()\n\\ No newline at end of file"
      },
      {
        "sha": "412fe219d06eafced00e68885708250b91b44891",
        "filename": "app/modules/dataset/tests/locustfile_download.py",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e01a8566a1aa26751267086d9dae0583d348e8b4/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e01a8566a1aa26751267086d9dae0583d348e8b4/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile_download.py?ref=e01a8566a1aa26751267086d9dae0583d348e8b4",
        "patch": "@@ -0,0 +1,51 @@\n+from locust import HttpUser, TaskSet, task, between\n+import re\n+\n+class DownloadDatasetFormats(TaskSet):\n+    \"\"\"Simula la descarga de datasets con rutas din\u00e1micas.\"\"\"\n+\n+    def on_start(self):\n+        \"\"\"Obtiene un ID v\u00e1lido para el dataset. Evita fallos si la petici\u00f3n falla.\"\"\"\n+        try:\n+            self.dataset_id = self.get_valid_dataset_id()\n+        except Exception as e:\n+            print(f\"\u26a0\ufe0f Error obteniendo el ID: {e}. Usando 53 por defecto.\")\n+            self.dataset_id = 53  # Valor por defecto si la petici\u00f3n falla\n+        self.base_zip_url = f\"/dataset/download/{self.dataset_id}\"\n+        self.base_export_url = f\"/flamapy/export_dataset/{self.dataset_id}\"\n+\n+    def get_valid_dataset_id(self):\n+        \"\"\"Obtiene un ID v\u00e1lido consultando la p\u00e1gina principal.\"\"\"\n+        response = self.client.get(\"/doi/10.1234/\", name=\"Get Dataset ID\")\n+        if response.status_code == 200:\n+            match = re.search(r'/dataset/download/(\\d+)', response.text)\n+            if match:\n+                print(f\"\u2705 ID encontrado: {match.group(1)}\")\n+                return match.group(1)  # Retorna el primer ID encontrado\n+        raise Exception(\"No se pudo obtener un ID v\u00e1lido\")\n+\n+    @task\n+    def download_zip(self):\n+        \"\"\"Descarga el dataset en formato ZIP.\"\"\"\n+        self.client.get(self.base_zip_url, name=\"Download ZIP\")\n+\n+    @task\n+    def download_glencoe(self):\n+        \"\"\"Descarga el dataset en formato Glencoe.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/glencoe\", name=\"Download Glencoe\")\n+\n+    @task\n+    def download_dimacs(self):\n+        \"\"\"Descarga el dataset en formato DIMACS.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/dimacs\", name=\"Download DIMACS\")\n+\n+    @task\n+    def download_splot(self):\n+        \"\"\"Descarga el dataset en formato SPLOT.\"\"\"\n+        self.client.get(f\"{self.base_export_url}/splot\", name=\"Download SPLOT\")\n+\n+class DatasetUser(HttpUser):\n+    \"\"\"Simula un usuario que descarga datasets con rutas adaptadas.\"\"\"\n+    tasks = [DownloadDatasetFormats]\n+    wait_time = between(1, 2)\n+    host = \"http://localhost:5000\""
      },
      {
        "sha": "786d0f7e5482d0481178354851ee2cf9615c5a68",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e01a8566a1aa26751267086d9dae0583d348e8b4/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e01a8566a1aa26751267086d9dae0583d348e8b4/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=e01a8566a1aa26751267086d9dae0583d348e8b4",
        "patch": "@@ -12,6 +12,11 @@\n \n DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n \n+# Asegurarse de que la carpeta de descargas exista\n+if not os.path.exists(DOWNLOAD_DIR):\n+    os.makedirs(DOWNLOAD_DIR)\n+    print(f\"\u2705 Carpeta de descargas creada: {DOWNLOAD_DIR}\")\n+\n \n def initialize_driver(download_dir=None):\n     options = Options()\n@@ -96,4 +101,4 @@ def test_download_datasets_index():\n \n \n if __name__ == \"__main__\":\n-    test_download_datasets_index()\n\\ No newline at end of file\n+    test_download_datasets_index()"
      }
    ]
  },
  {
    "sha": "e67a6435885d2428b35df57bc1217a9e60f5ce11",
    "node_id": "C_kwDONDG85doAKGU2N2E2NDM1ODg1ZDI0MjhiMzVkZjU3YmMxMjE3YTllNjBmNWNlMTE",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-12-17T16:32:24Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-17T16:32:24Z"
      },
      "message": "Merge pull request #42 from flamenquin-hub-single/feature_test-upload_analyse_and_repair_UVL\n\nFeature test upload analyse and repair uvl",
      "tree": {
        "sha": "8127c52d45f4cb01a71ddb47bfee598db2fd4e49",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/8127c52d45f4cb01a71ddb47bfee598db2fd4e49"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/e67a6435885d2428b35df57bc1217a9e60f5ce11",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYaeYCRC1aQ7uu5UhlAAAySIQAJpSrd6l/iBip62S4a+tUy+W\nQvDzzicg06pOd0KXYoBvCmZv8eonXvAV607DSjZgeYdiYLXaWAWiVO8gnFucNRi/\nBcKBZ8oc7Q4vO5bSPA0ozzGDyOYSgEW3y0DpbxCacdeKYIBUiP4WW8AVkeocvSjh\neJlSCMkgTKfyhLFTdvjNERQ7FKsdiw0UIBZkZ32pLLVisQOVDqiXEXal1naHCoS0\neJO3Qr7YDJ5qtkzDRJlq32jO4/ecCW7GIAKi2C9/bDklNnCRfCNiNIFI2Im0BWHX\njVCK1tQ0P5MMnamAjdwkU+5oqtu/b1Pu5X/UucaSQbYZ6jiGd63ZhhcaM6BmPl+M\nwkHAZy9Ow86JQubVicm3rnijXZmwcYLYEWWjbtfiZBy56AvdRZkNYTMZvSrIxEIj\nDq4ToWa2UkOdagJE5C3dyIP9oQ5vG+oVVClmd2WOC6oEpIi8tky+FLRGmkAjwcCF\nxVYOQl53frSzcSM1NHoGPlm7kE3W6HNhiYcC0jJOSApvRd6hYK9XjpO5wLJ8g5nd\npCdq6K9WzqGPHUETVjy45VMJGNiutdWtvXdrLsptyb6P36KsnhGS5d+/3eTY3vQ+\nUNAqLv2mNX7vmFr9nPla7J0QGK50K74c+otzr+QnKpNI+rwHymi3ZjfuXrhHyiVr\nYzlaEpxYa+eKJnfP69Fs\n=Uwps\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 8127c52d45f4cb01a71ddb47bfee598db2fd4e49\nparent ed5db7b107035a537212a33ca3d914566243de59\nparent 6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1734453144 +0100\ncommitter GitHub <noreply@github.com> 1734453144 +0100\n\nMerge pull request #42 from flamenquin-hub-single/feature_test-upload_analyse_and_repair_UVL\n\nFeature test upload analyse and repair uvl",
        "verified_at": "2024-12-17T16:33:58Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e67a6435885d2428b35df57bc1217a9e60f5ce11",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e67a6435885d2428b35df57bc1217a9e60f5ce11",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e67a6435885d2428b35df57bc1217a9e60f5ce11/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed5db7b107035a537212a33ca3d914566243de59",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ed5db7b107035a537212a33ca3d914566243de59",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ed5db7b107035a537212a33ca3d914566243de59"
      },
      {
        "sha": "6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb"
      }
    ],
    "files": [
      {
        "sha": "8261c08ef6ed1d87d60f12a6edd0fb02d49443cf",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=e67a6435885d2428b35df57bc1217a9e60f5ce11",
        "patch": "@@ -196,7 +196,7 @@ def delete():\n         os.remove(filepath)\n         return jsonify({\"message\": \"File deleted successfully\"})\n \n-    return jsonify({\"error\": \"Error: File not found\"})\n+    return jsonify({\"error\": \"File not found\"})\n \n @dataset_bp.route(\"/dataset/download/<int:dataset_id>\", methods=[\"GET\"])\n def download_dataset(dataset_id):"
      },
      {
        "sha": "2c1028b72578b19578d94522ca35bd7d031393a5",
        "filename": "app/modules/dataset/tests/test_selenium_syntax.py",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py?ref=e67a6435885d2428b35df57bc1217a9e60f5ce11",
        "patch": "@@ -0,0 +1,87 @@\n+# Generated by Selenium IDE\n+import pytest\n+import time\n+import json\n+import os\n+from selenium import webdriver\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.action_chains import ActionChains\n+from selenium.webdriver.support import expected_conditions\n+from selenium.webdriver.support.wait import WebDriverWait\n+from selenium.webdriver.common.keys import Keys\n+from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n+\n+def wait_for_page_to_load(driver, timeout=4):\n+    WebDriverWait(driver, timeout).until(\n+        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+    )\n+\n+class TestSeleniumsyntax():\n+  def setup_method(self, method):\n+    self.driver = webdriver.Chrome()\n+    self.vars = {}\n+  \n+  def teardown_method(self, method):\n+    self.driver.quit()\n+  \n+  def test_seleniumsyntax(self):\n+    typo = os.path.abspath(\"app/modules/dataset/uvl_examples/typo.uvl\")\n+    indent = os.path.abspath(\"app/modules/dataset/uvl_examples/indent.uvl\")\n+    syntax = os.path.abspath(\"app/modules/dataset/uvl_examples/syntax.uvl\")\n+    correct = os.path.abspath(\"app/modules/dataset/uvl_examples/correct.uvl\")\n+    self.driver.get(\"http://localhost:5000/\")\n+    self.driver.set_window_size(1854, 1048)\n+    self.driver.find_element(By.LINK_TEXT, \"Login\").click()\n+    self.driver.find_element(By.ID, \"email\").click()\n+    self.driver.find_element(By.ID, \"email\").send_keys(\"user1@example.com\")\n+    self.driver.find_element(By.ID, \"password\").send_keys(\"1234\")\n+    self.driver.find_element(By.ID, \"submit\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(8) .align-middle:nth-child(2)\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(typo)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.ID, \"check_model_button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.ID, \"check_model_button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(indent)\n+    wait_for_page_to_load(self.driver)\n+\n+\n+\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(7) .align-middle:nth-child(2)\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(6) .align-middle:nth-child(2)\").click()\n+    \n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(indent)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(typo)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(syntax)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+  "
      },
      {
        "sha": "8f4f91701f282c213b3ec376c17fb7c798db9bec",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 143,
        "deletions": 1,
        "changes": 144,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=e67a6435885d2428b35df57bc1217a9e60f5ce11",
        "patch": "@@ -1,5 +1,8 @@\n import pytest\n from flask import url_for\n+import io\n+import shutil\n+import json\n \n @pytest.fixture(scope=\"module\")\n def test_client(test_client):\n@@ -45,4 +48,143 @@ def test_download_zip_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/zip\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n\\ No newline at end of file\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n+\n+def aux_upload_errors(file,error,test_client):\n+    \"\"\"\n+    Reutilizar c\u00f3digo\n+    \"\"\"\n+    response = test_client.get(url_for('dataset.check_dataset'))\n+    assert response.status_code == 200\n+    data = {'name': 'file', 'filename': 'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload_check'), data=data, follow_redirects=True,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 200\n+    response = test_client.post(url_for('dataset.check_dataset'))\n+    assert response.status_code==400\n+    assert response.json['error']==error\n+\n+def test_upload_file_bad_indent(test_client):\n+    \"\"\"\n+    Testea la subida de ficheros con errores de sintaxis al Dropbox en dataset/upload\n+    \"\"\"\n+    test_client.post(\n+        \"/login\", data=dict(email=\"test@example.com\", password=\"test1234\"), follow_redirects=True\n+    )\n+\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       fdd     \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"), 'test_bad_indent.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 15:7 - mismatched input 'fdd' expecting '<DEDENT>'\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_upload_file_syntax_error(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraints\n+    Server =s\"> \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_syntax_error.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 18:11 - token recognition error at: '=s'\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_upload_file_typo(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_typo.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 17:0 - mismatched input 'constraintss' expecting {<EOF>, 'constraints'}\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_delete_file_from_dropbox(test_client):\n+    file = (io.BytesIO(b\"\"\"This one doesn't matter\"\"\"),'test.uvl')\n+    data = {'name': 'file', 'filename': 'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload_check'), data=data, follow_redirects=True,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 200\n+    data = {'file':'test.uvl'}\n+    response = test_client.post(url_for('dataset.delete'),data=json.dumps(data),content_type = 'application/json')\n+    assert response.status_code == 200\n+\n+\n+def test_upload_models_with_syntax_errors(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_typo.uvl')\n+    data = {'name': 'file', 'filename':'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload'), data=data,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 400\n+    assert response.json['message']==\"The UVL has the following error that prevents reading it :Line 17:0 - mismatched input 'constraintss' expecting {<EOF>, 'constraints'}\"\n+\n+\n+"
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/correct.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl?ref=e67a6435885d2428b35df57bc1217a9e60f5ce11",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "e1b263ae91a6fb98489f8c7ba432b0635aa4412d",
        "filename": "app/modules/dataset/uvl_examples/indent.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl?ref=e67a6435885d2428b35df57bc1217a9e60f5ce11",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       fdd     \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "bae007211410442932e10a374723735b056c3b3a",
        "filename": "app/modules/dataset/uvl_examples/syntax.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl?ref=e67a6435885d2428b35df57bc1217a9e60f5ce11",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraints\n+    Server =s\"> \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "cd5786189c2b2e5a6a3730665a46c72c49c75e2c",
        "filename": "app/modules/dataset/uvl_examples/typo.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e67a6435885d2428b35df57bc1217a9e60f5ce11/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl?ref=e67a6435885d2428b35df57bc1217a9e60f5ce11",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      }
    ]
  },
  {
    "sha": "6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
    "node_id": "C_kwDONDG85doAKDZmZDVjNWZlOWY1NTA1ZTRjZTZiZDMyMWY1NjA0ZGQ2NGQ0NDI1Y2I",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-17T00:33:26Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-17T00:33:26Z"
      },
      "message": "feat(dataset): selenium test for new functionalities",
      "tree": {
        "sha": "e65a652390d6dc320b0446b77f080a4c2a1ec601",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/e65a652390d6dc320b0446b77f080a4c2a1ec601"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5067f44ff3465a9f95b26e43df61460276e27320",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5067f44ff3465a9f95b26e43df61460276e27320",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5067f44ff3465a9f95b26e43df61460276e27320"
      }
    ],
    "files": [
      {
        "sha": "2c1028b72578b19578d94522ca35bd7d031393a5",
        "filename": "app/modules/dataset/tests/test_selenium_syntax.py",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium_syntax.py?ref=6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "patch": "@@ -0,0 +1,87 @@\n+# Generated by Selenium IDE\n+import pytest\n+import time\n+import json\n+import os\n+from selenium import webdriver\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.action_chains import ActionChains\n+from selenium.webdriver.support import expected_conditions\n+from selenium.webdriver.support.wait import WebDriverWait\n+from selenium.webdriver.common.keys import Keys\n+from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n+\n+def wait_for_page_to_load(driver, timeout=4):\n+    WebDriverWait(driver, timeout).until(\n+        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+    )\n+\n+class TestSeleniumsyntax():\n+  def setup_method(self, method):\n+    self.driver = webdriver.Chrome()\n+    self.vars = {}\n+  \n+  def teardown_method(self, method):\n+    self.driver.quit()\n+  \n+  def test_seleniumsyntax(self):\n+    typo = os.path.abspath(\"app/modules/dataset/uvl_examples/typo.uvl\")\n+    indent = os.path.abspath(\"app/modules/dataset/uvl_examples/indent.uvl\")\n+    syntax = os.path.abspath(\"app/modules/dataset/uvl_examples/syntax.uvl\")\n+    correct = os.path.abspath(\"app/modules/dataset/uvl_examples/correct.uvl\")\n+    self.driver.get(\"http://localhost:5000/\")\n+    self.driver.set_window_size(1854, 1048)\n+    self.driver.find_element(By.LINK_TEXT, \"Login\").click()\n+    self.driver.find_element(By.ID, \"email\").click()\n+    self.driver.find_element(By.ID, \"email\").send_keys(\"user1@example.com\")\n+    self.driver.find_element(By.ID, \"password\").send_keys(\"1234\")\n+    self.driver.find_element(By.ID, \"submit\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(8) .align-middle:nth-child(2)\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(typo)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.ID, \"check_model_button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.ID, \"check_model_button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(indent)\n+    wait_for_page_to_load(self.driver)\n+\n+\n+\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(7) .align-middle:nth-child(2)\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(6) .align-middle:nth-child(2)\").click()\n+    \n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(indent)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(typo)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(syntax)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    dropzone = self.driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+    dropzone.send_keys(correct)\n+    wait_for_page_to_load(self.driver)\n+\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+    self.driver.find_element(By.CSS_SELECTOR, \".remove-button\").click()\n+  "
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/correct.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fcorrect.uvl?ref=6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "e1b263ae91a6fb98489f8c7ba432b0635aa4412d",
        "filename": "app/modules/dataset/uvl_examples/indent.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Findent.uvl?ref=6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       fdd     \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "bae007211410442932e10a374723735b056c3b3a",
        "filename": "app/modules/dataset/uvl_examples/syntax.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Fsyntax.uvl?ref=6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraints\n+    Server =s\"> \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "cd5786189c2b2e5a6a3730665a46c72c49c75e2c",
        "filename": "app/modules/dataset/uvl_examples/typo.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ftypo.uvl?ref=6fd5c5fe9f5505e4ce6bd321f5604dd64d4425cb",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      }
    ]
  },
  {
    "sha": "5067f44ff3465a9f95b26e43df61460276e27320",
    "node_id": "C_kwDONDG85doAKDUwNjdmNDRmZjM0NjVhOWY5NWIyNmU0M2RmNjE0NjAyNzZlMjczMjA",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-17T00:19:06Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-17T00:19:06Z"
      },
      "message": "feat(dataset): pytest tests for syntax checker",
      "tree": {
        "sha": "e530ec316874d98bb12b5764866017ca0037ad85",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/e530ec316874d98bb12b5764866017ca0037ad85"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/5067f44ff3465a9f95b26e43df61460276e27320",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5067f44ff3465a9f95b26e43df61460276e27320",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5067f44ff3465a9f95b26e43df61460276e27320",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5067f44ff3465a9f95b26e43df61460276e27320/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "37293581ec0728fb350a7c2fd3633193be9962a6",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/37293581ec0728fb350a7c2fd3633193be9962a6",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/37293581ec0728fb350a7c2fd3633193be9962a6"
      }
    ],
    "files": [
      {
        "sha": "1d6340e82489a939545026312b2cd435cf2b7df7",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5067f44ff3465a9f95b26e43df61460276e27320/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5067f44ff3465a9f95b26e43df61460276e27320/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=5067f44ff3465a9f95b26e43df61460276e27320",
        "patch": "@@ -196,7 +196,7 @@ def delete():\n         os.remove(filepath)\n         return jsonify({\"message\": \"File deleted successfully\"})\n \n-    return jsonify({\"error\": \"Error: File not found\"})\n+    return jsonify({\"error\": \"File not found\"})\n \n @dataset_bp.route(\"/dataset/download/<int:dataset_id>\", methods=[\"GET\"])\n def download_dataset(dataset_id):"
      },
      {
        "sha": "8f4f91701f282c213b3ec376c17fb7c798db9bec",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 143,
        "deletions": 1,
        "changes": 144,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5067f44ff3465a9f95b26e43df61460276e27320/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5067f44ff3465a9f95b26e43df61460276e27320/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=5067f44ff3465a9f95b26e43df61460276e27320",
        "patch": "@@ -1,5 +1,8 @@\n import pytest\n from flask import url_for\n+import io\n+import shutil\n+import json\n \n @pytest.fixture(scope=\"module\")\n def test_client(test_client):\n@@ -45,4 +48,143 @@ def test_download_zip_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/zip\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n\\ No newline at end of file\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n+\n+def aux_upload_errors(file,error,test_client):\n+    \"\"\"\n+    Reutilizar c\u00f3digo\n+    \"\"\"\n+    response = test_client.get(url_for('dataset.check_dataset'))\n+    assert response.status_code == 200\n+    data = {'name': 'file', 'filename': 'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload_check'), data=data, follow_redirects=True,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 200\n+    response = test_client.post(url_for('dataset.check_dataset'))\n+    assert response.status_code==400\n+    assert response.json['error']==error\n+\n+def test_upload_file_bad_indent(test_client):\n+    \"\"\"\n+    Testea la subida de ficheros con errores de sintaxis al Dropbox en dataset/upload\n+    \"\"\"\n+    test_client.post(\n+        \"/login\", data=dict(email=\"test@example.com\", password=\"test1234\"), follow_redirects=True\n+    )\n+\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       fdd     \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"), 'test_bad_indent.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 15:7 - mismatched input 'fdd' expecting '<DEDENT>'\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_upload_file_syntax_error(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraints\n+    Server =s\"> \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_syntax_error.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 18:11 - token recognition error at: '=s'\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_upload_file_typo(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_typo.uvl')\n+    error = \"The UVL has the following error that prevents reading it :Line 17:0 - mismatched input 'constraintss' expecting {<EOF>, 'constraints'}\"\n+    aux_upload_errors(file,error,test_client)\n+\n+def test_delete_file_from_dropbox(test_client):\n+    file = (io.BytesIO(b\"\"\"This one doesn't matter\"\"\"),'test.uvl')\n+    data = {'name': 'file', 'filename': 'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload_check'), data=data, follow_redirects=True,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 200\n+    data = {'file':'test.uvl'}\n+    response = test_client.post(url_for('dataset.delete'),data=json.dumps(data),content_type = 'application/json')\n+    assert response.status_code == 200\n+\n+\n+def test_upload_models_with_syntax_errors(test_client):\n+    file = (io.BytesIO(b\"\"\"features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+\t\t    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+       \t    \"Media Player\"\n+\n+constraintss\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\\\"\"\"\"),'test_typo.uvl')\n+    data = {'name': 'file', 'filename':'test_file.uvl'}\n+    data['file'] = file\n+    response = test_client.post(\n+        url_for('dataset.upload'), data=data,\n+        content_type='multipart/form-data'\n+    )\n+    assert response.status_code == 400\n+    assert response.json['message']==\"The UVL has the following error that prevents reading it :Line 17:0 - mismatched input 'constraintss' expecting {<EOF>, 'constraints'}\"\n+\n+\n+"
      }
    ]
  },
  {
    "sha": "8098f0f0a5f96606f84eaa9c9766f5cbe5613591",
    "node_id": "C_kwDONDG85doAKDgwOThmMGYwYTVmOTY2MDZmODRlYWE5Yzk3NjZmNWNiZTU2MTM1OTE",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-16T23:53:50Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-16T23:53:50Z"
      },
      "message": "fix(dataset): fixed dataset locustfile",
      "tree": {
        "sha": "d61da7eeffd6f1758aa303036d34fbc821bdd6bc",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/d61da7eeffd6f1758aa303036d34fbc821bdd6bc"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/8098f0f0a5f96606f84eaa9c9766f5cbe5613591",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8098f0f0a5f96606f84eaa9c9766f5cbe5613591",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/8098f0f0a5f96606f84eaa9c9766f5cbe5613591",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8098f0f0a5f96606f84eaa9c9766f5cbe5613591/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3"
      }
    ],
    "files": [
      {
        "sha": "479c65e25d849f4a3d4ac4f144b4c074193b638a",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 20,
        "deletions": 10,
        "changes": 30,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/8098f0f0a5f96606f84eaa9c9766f5cbe5613591/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/8098f0f0a5f96606f84eaa9c9766f5cbe5613591/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=8098f0f0a5f96606f84eaa9c9766f5cbe5613591",
        "patch": "@@ -1,4 +1,3 @@\n-\n import random\n from locust import HttpUser, TaskSet, task, between\n from core.locust.common import get_csrf_token\n@@ -40,7 +39,7 @@ def ensure_logged_in(self):\n \n     @task\n     def commit_dataset(self):\n-        dataset_id = random.randint(1, 10)\n+        dataset_id = random.randint(1, 5)\n         response = self.client.post(f\"/dataset/commit/{dataset_id}\", json={})\n         \n         if response.status_code == 200:\n@@ -74,6 +73,22 @@ def ensure_logged_in(self):\n             print(f\"Login failed: {response.status_code}, {response.text}\")\n         else:\n             print(\"User successfully logged in.\")\n+            \n+            \n+    @task\n+    def commit_dataset(self):\n+        file_id = random.randint(1, 5)  \n+        response = self.client.post(f\"/dataset/commit_file/{file_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"File {file_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"File {file_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for File {file_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n+            \n \n class DownloadDatasets(TaskSet):\n     formats = {\n@@ -104,11 +119,6 @@ def download_files(self):\n                         )\n \n class DatasetUser(HttpUser):\n-    \"\"\"\n-    Clase principal que define los usuarios y su comportamiento.\n-    \"\"\"\n-    tasks = [CommitFileBehavior]  # Asigna la tarea de descarga\n-    min_wait = 5000  # Espera m\u00ednima de 5 segundos\n-    max_wait = 9000  # Espera m\u00e1xima de 9 segundos\n-    wait_time = between(5, 9)  # Espera aleatoria entre tareas\n-    host = \"http://localhost:5000\"  # La URL base de tu aplicaci\u00f3n\n\\ No newline at end of file\n+    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior, DownloadDatasets]\n+    wait_time = between(5, 9)\n+    host = get_host_for_locust_testing()\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
    "node_id": "C_kwDONDG85doAKGVkZjBmYzU4ZmQ3NzgyZjMyZThhZDE3ZWJiNDNjYjY5YWM3YmE5ZjM",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-12-16T21:59:20Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-16T21:59:20Z"
      },
      "message": "Merge pull request #40 from flamenquin-hub-single/develop\n\nVersion 2.0",
      "tree": {
        "sha": "ccd2dff49a8ce83c97f180c5506b91ec8491fe6d",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/ccd2dff49a8ce83c97f180c5506b91ec8491fe6d"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYKK4CRC1aQ7uu5UhlAAA4HcQAGxZS9QE5UN8OamLkphPFkz8\nSIc/YDgOwHAYGYbAkwmolvc9bJR6xWwLzn3t6awlQoLVo4KfFccs/twjYPVbH7nz\nXAo5f6/QW/XWR+fcA1g6WX8IwQj8RRNNmxOyUFGsqfepQECUHzjPooJsr4Npk7Nd\nSMx/DCfS3WiQIWlAIlKhDyGO8uj7Yjxe1eoI045EBJzDdA1dWY4d1XMeVsUap/Qs\nTtLdf75PBf0eC8Jga01ABfxwyWL+Z26TJrmzkQFZtZYzLAKLBE16FC/RFHQuCxNh\n8tGxXtYnuI7jWQOruLu7k8WihRYGD4TcLoE5SHO9vfMGwAT99pSw2adxytLe/wRL\nL7iKfcZvjqOlrCBAJLPZK1et62dyj+ny4CDEbhl5ytTF8EiL7Q8UP4dUx6f2OsqO\ny1Kunr37ktHGZbw2s289G1KHW3JlXFhstzlT9/829Hap0gRZa/6FOkeiuJazZV2K\nc7hEQUw464RtJCV+StZ7tEaTOpM5uctx7FwKUF/CRNsmy2naUOD7kJ0e3E02WmC4\n0Wqa+9Zwlp7MWMNllu09XpiiKx85eqmRxUeoYTwUxkFVyuavHr2Ud25Hej2BB7/X\nVn15HCDD1bWvW185r8HsDcJuul9v5gvhvco2JCPWHbrSjmNoKrU2irigZtEb3XAx\ngNs9uJu3nIuX8nrR9Q2u\n=fTpD\n-----END PGP SIGNATURE-----\n",
        "payload": "tree ccd2dff49a8ce83c97f180c5506b91ec8491fe6d\nparent effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7\nparent ed5db7b107035a537212a33ca3d914566243de59\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1734386360 +0100\ncommitter GitHub <noreply@github.com> 1734386360 +0100\n\nMerge pull request #40 from flamenquin-hub-single/develop\n\nVersion 2.0",
        "verified_at": "2024-12-16T22:00:46Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7"
      },
      {
        "sha": "ed5db7b107035a537212a33ca3d914566243de59",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ed5db7b107035a537212a33ca3d914566243de59",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ed5db7b107035a537212a33ca3d914566243de59"
      }
    ],
    "files": [
      {
        "sha": "3ac01b8f10bb827b95ce6876277e804d60170a31",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -17,3 +17,4 @@ jobs:\n     steps:\n       - uses: actions/checkout@v2\n       - uses: webiny/action-conventional-commits@v1.0.3\n+"
      },
      {
        "sha": "f0fa9647a57c3e3213cde3c10727cf217393c1ff",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -50,6 +50,7 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        WORKING_DIR: \"\"\n       run: |\n         pytest app/modules/ --ignore-glob='*selenium*'\n "
      },
      {
        "sha": "cfd1de2c2d675ce525e364852c9c40031e8bde19",
        "filename": ".github/workflows/render_main.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/.github%2Fworkflows%2Frender_main.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/.github%2Fworkflows%2Frender_main.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender_main.yml?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -48,6 +48,7 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        WORKING_DIR: \"\"\n       run: |\n         pytest app/modules/ --ignore-glob='*selenium*'\n "
      },
      {
        "sha": "c2f01a0ae80ec18e56cb1fc86e13b5ec720d1347",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -47,5 +47,6 @@ jobs:\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n         ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+        WORKING_DIR: \"\"\n       run: |\n         pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      },
      {
        "sha": "3572f8a686c870b5140ee42d0dcdaa070e302a32",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitignore?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -15,4 +15,7 @@ nginx.prod.ssl.conf\n .version\n entrypoint.sh\n deployments.log\n-test_file.txt\n\\ No newline at end of file\n+test_file.txt\n+uploads/\n+egc/\n+app.log.*"
      },
      {
        "sha": "e4637074898a1a93c1a06f57ccd6ac82c64c8065",
        "filename": "app/modules/auth/tests/locustfile.py",
        "status": "modified",
        "additions": 52,
        "deletions": 1,
        "changes": 53,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -1,4 +1,5 @@\n from locust import HttpUser, TaskSet, task\n+import requests\n from core.locust.common import get_csrf_token, fake\n from core.environment.host import get_host_for_locust_testing\n \n@@ -51,8 +52,58 @@ def login(self):\n             print(f\"Login failed: {response.status_code}\")\n \n \n+class InviteBehavior(TaskSet):\n+    def on_start(self):\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def invite_user(self):\n+        github_user_response = requests.get(\"https://api.github.com/user\", headers={\n+            \"Authorization\": \"token example_valid_token\",\n+            \"Accept\": \"application/vnd.github.v3+json\"\n+        })\n+\n+        if github_user_response.status_code != 200:\n+            print(f\"Failed to fetch GitHub user info: {github_user_response.status_code}\")\n+\n+        username = github_user_response.json().get(\"login\")\n+        if not username:\n+            print(\"Failed to fetch GitHub username.\")\n+\n+        response = self.client.post(\"/invite\", json={\n+            \"github_username\": username\n+        })\n+        \n+        if response.status_code == 201:\n+            print(f\"Invitation sent successfully to {username}.\")\n+        elif response.status_code == 404:\n+            print(f\"GitHub user {username} not found.\")\n+        elif response.status_code == 422:\n+            print(f\"User {username} already belongs to the organization.\")\n+        else:\n+            print(f\"Invitation failed with status: {response.status_code} - {response.text}\")\n+\n+\n+\n+\n class AuthUser(HttpUser):\n-    tasks = [SignupBehavior, LoginBehavior]\n+    tasks = [SignupBehavior, LoginBehavior, InviteBehavior]\n     min_wait = 5000\n     max_wait = 9000\n     host = get_host_for_locust_testing()\n+    \n+    "
      },
      {
        "sha": "729195481b361557670716d39a2979257d9a1374",
        "filename": "app/modules/auth/tests/test_unit.py",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -1,3 +1,4 @@\n+from unittest.mock import MagicMock, patch\n import pytest\n from flask import url_for\n \n@@ -117,3 +118,39 @@ def test_service_create_with_profile_fail_no_password(clean_database):\n \n     assert UserRepository().count() == 0\n     assert UserProfileRepository().count() == 0\n+    \n+    \n+    \n+@patch('flask_dance.contrib.github.github')  \n+def test_redirect_to_login(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(authorized=False)\n+\n+    response = test_client.get('/gitlogin')\n+\n+    assert response.status_code == 302\n+    assert \"/github\" in response.location, f\"Expected redirection to github, got {response.request.path}\"\n+    \n+    \n+\n+@patch('flask_dance.contrib.github.github')\n+def test_invite_user_no_sync_error(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(ok=False)\n+\n+    response = test_client.post('/invite')\n+\n+    assert response.status_code == 200\n+    assert b\"First sync your github account.\" in response.data\n+\n+\n+@patch('flask_dance.contrib.github.github')\n+def test_create_repo_no_sync_error(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(ok=False)\n+\n+    response = test_client.post('/create_repo')\n+\n+    assert response.status_code == 200\n+    assert b\"First sync your github account.\" in response.data\n+    \n+\n+\n+"
      },
      {
        "sha": "0b7d1cc88c4b7e7859e7dab081dcdaa0c8395a97",
        "filename": "app/modules/dataset/UVLCustomLexer.py",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -0,0 +1,97 @@\n+import re\n+from .UVLPythonLexer import UVLPythonLexer\n+\n+from .UVLPythonParser import UVLPythonParser\n+from antlr4.Token import Token\n+from antlr4.Token import CommonToken\n+\n+class UVLCustomLexer(UVLPythonLexer):\n+   \n+    def __init__(self, input_stream):\n+        super().__init__(input_stream)\n+        self.tokens = []\n+        self.indents = []\n+        self.opened = 0\n+        self.lastToken = None\n+        \n+    def emitToken(self, t):\n+        super().emitToken(t)\n+        self.tokens.append(t)  \n+\n+    def nextToken(self):\n+        # Check if the end-of-file is ahead and there are still some DEDENTS expected.\n+        if self._input.LA(1) == Token.EOF and len(self.indents) != 0:\n+            # Remove any trailing EOF tokens from our buffer.\n+            while len(self.tokens) > 0 and self.tokens[-1].type == Token.EOF:\n+                del self.tokens[-1]\n+\n+            # First emit an extra line break that serves as the end of the statement.\n+            self.emitToken(self.common_token(UVLPythonLexer.NEWLINE, \"\\n\"));\n+\n+\n+            # Now emit as much DEDENT tokens as needed.\n+            while len(self.indents) != 0:\n+                self.emitToken(self.create_dedent())\n+                del self.indents[-1]              \n+            # Put the EOF back on the token stream.\n+            self.emitToken(self.common_token(Token.EOF, \"<EOF>\"));\n+\n+        next_token = super().nextToken()\n+\n+        if next_token.channel == Token.DEFAULT_CHANNEL:\n+            # Keep track of the last token on the default channel.\n+            self.lastToken = next_token\n+\n+        return self.tokens.pop(0) if len(self.tokens) > 0 else next_token\n+\n+    def create_dedent(self):\n+        dedent = self.common_token(self.DEDENT, \"\")\n+        dedent.line = self.lastToken.line\n+        return dedent\n+\n+    def common_token(self, type, text):\n+        stop = self.getCharIndex() - 1\n+        start = stop - len(text) + 1 if text else stop\n+        return CommonToken(self._tokenFactorySourcePair, type, Token.DEFAULT_CHANNEL, start, stop)\n+\n+    @staticmethod\n+    def getIndentationCount(spaces):\n+        count = 0\n+        for ch in spaces:\n+            if ch == '\\t':\n+                count += 8 - (count % 8)\n+            else:  # A normal space char.\n+                count += 1\n+        return count\n+    \n+    def skipToken(self):\n+        self.skip()\n+\n+    def atStartOfInput(self):\n+        return self._interp.column == 0 and self._interp.line == 1\n+    \n+    def handleNewline(self):\n+      new_line = re.sub(r\"[^\\r\\n\\f]+\", \"\", self._interp.getText(self._input)) #.replaceAll(\"[^\\r\\n\\f]+\", \"\")\n+      spaces = re.sub(r\"[\\r\\n\\f]+\", \"\", self._interp.getText(self._input)) #.replaceAll(\"[\\r\\n\\f]+\", \"\")\n+      next = self._input.LA(1)\n+\n+      if self.opened > 0 or next == '\\r' or next == '\\n' or next == '\\f' or next == '#':\n+        self.skip()\n+      else:\n+        self.emitToken(self.common_token(self.NEWLINE, new_line))\n+\n+        indent = self.getIndentationCount(spaces)\n+        if len(self.indents) == 0:\n+            previous = 0\n+        else:\n+            previous = self.indents[-1]\n+\n+        if indent == previous:\n+            self.skip()\n+        elif indent > previous:\n+            self.indents.append(indent)\n+            self.emitToken(self.common_token(UVLPythonParser.INDENT, spaces))\n+        else:\n+            while len(self.indents) > 0 and self.indents[-1] > indent:\n+                self.emitToken(self.create_dedent())\n+                del self.indents[-1]\n\\ No newline at end of file"
      },
      {
        "sha": "26b18c2644779529b71f900e01adaeeccb9e7aec",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 62,
        "deletions": 122,
        "changes": 184,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -117,7 +117,11 @@ var currentId = 0;\n \t}\n \n         function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n+\t    if (document.getElementById(\"upload_button\")) {\n+            \tdocument.getElementById(\"upload_button\").style.display = \"block\";\n+\t    } else {\n+\t\tdocument.getElementById(\"check_model_button\").style.display = \"block\";\n+\t    }\n             document.getElementById(\"loading\").style.display = \"none\";\n         }\n \n@@ -139,152 +143,75 @@ var currentId = 0;\n \n         window.onload = function () {\n \n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n+\t\ttest_zenodo_connection();\n \n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n-\n-        function downloadDataset(datasetId, format) {\n-            const url = `/dataset/download/${datasetId}/${format}`;\n-            window.location.href = url;\n-        }\n-        \n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n-\t\t\t\tconsole.log(\"hi\");\n \t\t\t\tclean_upload_errors();\n \t\t\t\tshow_loading(\"check\");\n \n-\t\t\t\t\n+\n \t\t\t\tfetch('/dataset/check', {\n \t\t\t\t\tmethod: 'POST',\n \t\t\t\t\tbody: ''\n \t\t\t\t})\n \t\t\t\t\t.then(response => {\n+\t\t\t\t\t\tlet model = document.getElementById('rendered_model')\n+\t\t\t\t\t\twhile (model.firstChild) {\n+\t\t\t\t\t\t\tmodel.removeChild(model.firstChild)\n+\t\t\t\t\t\t};\n \t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\tlet first_row = document.createElement('p');\n+\t\t\t\t\t\t\tfirst_row.bottom_margin = '15';\n+\t\t\t\t\t\t\tfirst_row.textContent = 'This model contains no errors. Here\\'s the model:';\t\n+\t\t\t\t\t\t\tmodel.appendChild(first_row);\n \t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n \t\t\t\t\t\t\tresponse.json().then(data => {\n-\t\t\t\t\t\t\t\tconsole.log(data.message);\n-\t\t\t\t\t\t\t\t//window.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\tfor (let i=0;i<data.message.length;i++) {\n+\t\t\t\t\t\t\t\t\tlet row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\trow.style.margin = '0';\n+\t\t\t\t\t\t\t\t\trow.style.padding = '0';\n+\t\t\t\t\t\t\t\t\tlet row_text = data.message[i];\n+\t\t\t\t\t\t\t\t\trow_text = row_text.replace(/\\s/g, '\\u00A0');\n+\t\t\t\t\t\t\t\t\trow.textContent = row_text;\n+\t\t\t\t\t\t\t\t\tmodel.appendChild(row);\n+\t\t\t\t\t\t\t\t};\n+\t\t\t\t\t\t\t\tmodel.style.display = 'block';\n+\t\t\t\t\t\t\t\thide_loading();\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tresponse.json().then(data => {\n-\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.error);\n+\t\t\t\t\t\t\t\tif (data.syntax) {\n+\t\t\t\t\t\t\t\t\tlet first_row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\tfirst_row.bottom_margin = '15';\n+\t\t\t\t\t\t\t\t\tfirst_row.top_margin = '15';\n+\t\t\t\t\t\t\t\t\tfirst_row.textContent = 'Here\\'s the model with the error highlighted:';\t\n+\t\t\t\t\t\t\t\t\tmodel.appendChild(first_row);\n+\t\t\t\t\t\t\t\t\tfor (let i=0;i<data.message.length;i++) {\n+\t\t\t\t\t\t\t\t\t\tlet row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\t\trow.style.margin = '0';\n+\t\t\t\t\t\t\t\t\t\trow.style.padding = '0';\n+\t\t\t\t\t\t\t\t\t\tlet row_text = data.message[i];\n+\t\t\t\t\t\t\t\t\t\trow_text = row_text.replace(/\\s/g, '\\u00A0');\n+\t\t\t\t\t\t\t\t\t\trow.textContent = row_text;\n+\t\t\t\t\t\t\t\t\t\tmodel.appendChild(row);\n+\t\t\t\t\t\t\t\t\t};\n+\t\t\t\t\t\t\t\t};\n \t\t\t\t\t\t\t\thide_loading();\n-\n-\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\t\t\t\t\t\t\t\tif (data.syntax) {\n+\t\t\t\t\t\t\t\t\twrite_upload_error(data.error);\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\t\t\t\t\t\t\t\t};\n \n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t})\n \t\t\t\t\t.catch(error => {\n \t\t\t\t\t\tconsole.error('Error in POST request:', error);\n \t\t\t\t\t});\n-\t\t\t\tconsole.log(\"yeah\")\n \n \t\t\t});\n \t\t}\n@@ -387,9 +314,22 @@ var currentId = 0;\n \n \n \t\t\t});\n-\t\t}\n+\t\t};\n+\t};\n+\n \n \n+function isValidOrcid(orcid) {\n+\tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+\treturn orcidRegex.test(orcid);\n+}\n+\n+function downloadDataset(datasetId, format) {\n+\tconst url = `/dataset/download/${datasetId}/${format}`;\n+\twindow.location.href = url;\n+}\n+        \n+\t\t\n function isValidOrcid(orcid) {\n \tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n \treturn orcidRegex.test(orcid);"
      },
      {
        "sha": "03c2e1a6418ec2dc70695cdfa30b36d1d71ebff5",
        "filename": "app/modules/dataset/parser.py",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Fparser.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Fparser.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fparser.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -0,0 +1,62 @@\n+from antlr4 import CommonTokenStream, FileStream\n+from uvl.UVLCustomLexer import UVLCustomLexer\n+from uvl.UVLPythonParser import UVLPythonParser\n+from antlr4.error.ErrorListener import ErrorListener\n+\n+class CustomErrorListener(ErrorListener):\n+    def syntaxError(self, recognizer, offendingSymbol, line, column, msg, e):\n+        # If the error message contains a specific keyword related to tabulation, ignore it\n+        if \"\\\\t\" in msg:\n+            print(f\"The UVL has the following warning that prevents reading it :Line {line}:{column} - {msg}\")\n+            return\n+        else:\n+            # Otherwise, print the error (or handle it in another way)\n+            raise Exception(f\"The UVL has the following error that prevents reading it :Line {line}:{column} - {msg}\")\n+            \n+\n+def get_tree(argv):\n+    input_stream = FileStream(argv)\n+    lexer = UVLCustomLexer(input_stream)\n+    \n+    # Attach the custom error listener to the lexer\n+    lexer.removeErrorListeners()\n+    lexer.addErrorListener(CustomErrorListener())\n+\n+    stream = CommonTokenStream(lexer)\n+    parser = UVLPythonParser(stream)\n+    \n+    # Attach the custom error listener to the parser\n+    parser.removeErrorListeners()\n+    parser.addErrorListener(CustomErrorListener())\n+\n+    tree = parser.featureModel()\n+\n+    return tree\n+\n+\n+if __name__ == \"__main__\":\n+    import sys\n+\n+    # Check if the user provided a file argument\n+    if len(sys.argv) < 2:\n+        print(\"Usage: python script_name.py <path_to_uvl_file>\")\n+        sys.exit(1)\n+\n+    # Parse the provided file\n+    input_stream = FileStream(sys.argv[1])\n+    lexer = UVLCustomLexer(input_stream)\n+    \n+    # Attach the custom error listener to the lexer\n+    lexer.removeErrorListeners()\n+    lexer.addErrorListener(CustomErrorListener())\n+\n+    stream = CommonTokenStream(lexer)\n+    parser = UVLPythonParser(stream)\n+    \n+    # Attach the custom error listener to the parser\n+    parser.removeErrorListeners()\n+    parser.addErrorListener(CustomErrorListener())\n+\n+    tree = parser.featureModel()\n+    # Print the parse tree (optional)\n+    print(tree.toStringTree(recog=parser))"
      },
      {
        "sha": "56beffd37b451ca0fa3e8be2615fc56cddafe7e6",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 37,
        "deletions": 28,
        "changes": 65,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -26,8 +26,7 @@\n from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n from flask_dance.contrib.github import github\n-\n-\n+from .parser import get_tree\n logger = logging.getLogger(__name__)\n \n dataset_service = DataSetService()\n@@ -113,10 +112,14 @@ def check_dataset():\n         file_path = os.path.join(temp_folder, filename)\n         \n         with open(file_path) as f:\n-            indent = 0\n-            x = \"\".join([i for i in f])\n-            print(x)\n-        return jsonify({\"message\": x}),200\n+            x = [i.rstrip() for i in f]\n+        try:\n+            get_tree(file_path)\n+        except Exception as e:\n+            line = int(str(e).split(':')[1].split(' ')[-1])\n+            x[line-1] = x[line-1] + \"   <--- HERE'S THE ERROR\"\n+            return jsonify({\"message\":x,\"error\":str(e),\"syntax\":True}),400\n+        return jsonify({\"message\": x,\"error\":False}),200\n    \n     # setting things up for the checker to have only one file available\n     temp_folder = current_user.temp_folder()\n@@ -126,10 +129,7 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-@dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n-@login_required\n-def upload():\n-    file = request.files[\"file\"]\n+def upload_aux(file,check):\n     temp_folder = current_user.temp_folder()\n \n     if not file or not file.filename.endswith(\".uvl\"):\n@@ -156,7 +156,12 @@ def upload():\n         file.save(file_path)\n     except Exception as e:\n         return jsonify({\"message\": str(e)}), 500\n-\n+    if check:\n+        try:\n+            get_tree(file_path)\n+        except Exception as e:\n+            os.remove(file_path)\n+            return jsonify({\"message\": str(e),\"syntax\": True}),400\n     return (\n         jsonify(\n             {\n@@ -167,6 +172,19 @@ def upload():\n         200,\n     )\n \n+@dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n+@login_required\n+def upload():\n+    file = request.files[\"file\"]\n+    return upload_aux(file,True)\n+\n+@dataset_bp.route(\"/dataset/file/upload/check\", methods=[\"POST\"])\n+@login_required\n+def upload_check():\n+    file = request.files[\"file\"]\n+    return upload_aux(file,False)\n+\n+\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()\n@@ -293,8 +311,10 @@ def get_unsynchronized_dataset(dataset_id):\n         \"annote\": ds_meta_data.description\n     }\n     texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n-    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n-    \n+    if ds_meta_data.deposition_id:\n+        bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    else:\n+        bibtex_propiedades.pop(\"howpublished\")\n     lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n     lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n \n@@ -395,18 +415,7 @@ def commit_file(file_id):\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n-@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n-def download_dataset_format(file_id, format):\n-    \"\"\"Endpoint to download dataset in the specified format.\n-    Formats supported: glencoe, splot, dimacs, zip.\n-    \"\"\"\n-    if format == \"glencoe\":\n-        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n-    elif format == \"splot\":\n-        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n-    elif format == \"dimacs\":\n-        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n-    elif format == \"zip\":\n-        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n-    else:\n-        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+@dataset_bp.route(\"/dataset/download/<int:dataset_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(dataset_id, format):\n+    \"\"\"Redirect to Flamapy's export_dataset endpoint.\"\"\"\n+    return redirect(url_for(\"flamapy.export_dataset\", dataset_id=dataset_id, format=format))"
      },
      {
        "sha": "e344337cbd0bb2f488c040d1559d8d601b8a9879",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "modified",
        "additions": 55,
        "deletions": 75,
        "changes": 130,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -1,140 +1,139 @@\n {% extends \"base_template.html\" %}\n-\n {% block title %}Check UVL model{% endblock %}\n-\n {% block content %}\n-\n     <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n \n+    <div class=\"row\">\n+        <div class=\"col-12 mb-3\">\n+            <div class=\"alert alert-warning\" role=\"alert\" id=\"test_zenodo_connection_error\" style=\"display: none\">\n+                <div class=\"alert-message\">\n+\n+                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n+                        connection to the Zenodo API</h4>\n+                    <p class=\"p-0 m-0\">\n+                        There seems to be some kind of problem with the Zenodo API and synchronization of your dataset\n+                        files may not be possible. We will save your files locally to eventually synchronize them with\n+                        Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n+                        anything about it.\n+                    </p>\n+                </div>\n+            </div>\n+        </div>\n+\n+    </div>\n+\n     {% if messages %}\n         <ul>\n             {% for message in messages %}\n                 <li>{{ message }}</li>\n             {% endfor %}\n         </ul>\n     {% endif %}\n-\n     <div class=\"row\">\n-\n         <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n-\n             <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n-\n             <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n                 \n \t\t{{ form.hidden_tag() }}\n-\n-\n                 <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n                     <div id=\"dropzone-text\"></div>\n                 </form>\n-\n                 <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n                     </span>\n-\n                 <ul class=\"mt-2\" id=\"file-list\"></ul>\n-\n                 <script>\n                     let dropzone = Dropzone.options.myDropzone = {\n-                        url: \"/dataset/file/upload\",\n+                        url: \"/dataset/file/upload/check\",\n                         paramName: 'file',\n                         maxFilesize: 10,\n                         acceptedFiles: '.uvl',\n                         init: function () {\n-\n \t\t\t\tlet fileList = document.getElementById('file-list');\n \t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n \t\t\t\tlet alerts = document.getElementById('alerts');\n \t\t\t\tthis.on('addedfile', function (file) {\n-\n \t\t\t\t\tlet ext = file.name.split('.').pop();\n \t\t\t\t\tif (ext !== 'uvl') {\n \t\t\t\t\t\tthis.removeFile(file);\n-\n \t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t\t\t}\n \t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n \t\t\t\t\t\talerts.appendChild(alert);\n \t\t\t\t\t\talerts.style.display = 'block';\n \t\t\t\t\t}\n-\t\t\t\t\tif (fileList.childElementCount > 0) {\n+\t\t\t\t\telse if (fileList.childElementCount > 0) {\n \t\t\t\t\t\tthis.removeFile(file);\n+\t\t\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t\t\t}\n \n \t\t\t\t\t\tlet alert = document.createElement('p');\n \t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n \t\t\t\t\t\talerts.appendChild(alert);\n \t\t\t\t\t\talerts.style.display = 'block';\n \t\t\t\t\t}\n                             });\n-\n                             this.on('success', function (file, response) {\n-\n                                 let dropzone = this;\n-\n                                 show_upload_dataset();\n-\n                                 console.log(\"File uploaded: \", response);\n                                 // actions when UVL model is uploaded\n                                 let listItem = document.createElement('li');\n                                 let h4Element = document.createElement('h4');\n                                 h4Element.textContent = response.filename;\n                                 listItem.appendChild(h4Element);\n-\n                                 // generate incremental id for form\n                                 let formUniqueId = generateIncrementalId();\n-\n                                /*\n                                     ##########################################\n                                     REMOVE BUTTON\n                                     ##########################################\n                                 */\n-\n                                 // remove button\n                                 let removeButton = document.createElement('button');\n                                 removeButton.innerHTML = 'Delete model';\n                                 removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n                                 removeButton.style.borderRadius = '5px';\n-\n                                 removeButton.addEventListener('click', function () {\n+\t\t\t\t    let model = document.getElementById('rendered_model')\n+\t\t\t\t    while (model.firstChild) {\n+\t\t\t\t\t    model.removeChild(model.firstChild)\n+\t\t\t\t    };\n                                     fileList.removeChild(listItem);\n                                     this.removeFile(file);\n-\n                                     // Ajax request\n                                     let xhr = new XMLHttpRequest();\n                                     xhr.open('POST', '/dataset/file/delete', true);\n                                     xhr.setRequestHeader('Content-Type', 'application/json');\n                                     xhr.onload = function () {\n                                         if (xhr.status === 200) {\n                                             console.log('Deleted file from server');\n-\n                                             if (dropzone.files.length === 0) {\n                                                 document.getElementById(\"upload_dataset\").style.display = \"none\";\n                                                 clean_upload_errors();\n                                             }\n-\n                                         }\n                                     };\n                                     xhr.send(JSON.stringify({file: file.name}));\n                                 }.bind(this));\n-\n                                 /*\n                                     ##########################################\n                                     APPEND BUTTONS\n                                     ##########################################\n                                 */\n                                 listItem.appendChild(removeButton);\n-\n                                 /*\n                                     ##########################################\n                                     UVL FORM\n                                     ##########################################\n                                 */\n-\n                                 // create specific form for UVL\n                                 let formContainer = document.createElement('div');\n                                 formContainer.id = formUniqueId + \"_form\";\n                                 formContainer.classList.add('uvl_form', \"mt-3\");\n                                 formContainer.style.display = \"none\";\n-\n                                 formContainer.innerHTML = `\n                                     <div class=\"row\">\n                                         <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n@@ -208,78 +207,59 @@ <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n                                         </div>\n                                     </div>\n                                     `;\n-\n                                 listItem.appendChild(formContainer);\n                                 fileList.appendChild(listItem);\n-\n                             });\n+                            this.on('addedfile', function (file) {\n \n-                            this.on('error', function (file, response) {\n-                                console.error(\"Error uploading file: \", response);\n-                                let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n-                                alerts.appendChild(alert);\n-                                alerts.style.display = 'block';\n-                            });\n+                                let ext = file.name.split('.').pop();\n+                                if (ext !== 'uvl') {\n+                                    this.removeFile(file);\n \n+                                    let alert = document.createElement('p');\n+                                    alert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t    if (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t    }\n+                                    alerts.appendChild(alert);\n+                                    alerts.style.display = 'block';\n+                                }\n+\n+                            });\n                         }\n                     };\n-\n-\n                 </script>\n-\n             </div>\n         </div>\n-\n     </div>\n-\n     <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n-\n         <div class=\"col-12\">\n-\n             <hr>\n-\n-            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n-\n+            <h1 class=\"h3 mb-3 mt-2\">Check model and render errors</h1>\n             <div style=\"padding-left: 2rem\">\n-\n                 <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n                     <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n-                    Upload dataset</button>\n-\n+                    Check</button>\n                 <div id=\"loading\" style=\"display: none\">\n                     <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n-                    Uploading dataset, please wait...\n+                    Uploading and checking model, please wait...\n                 </div>\n-\n                 <div class=\"row\">\n                     <div class=\"col-12 mb-3\">\n-\n                     </div>\n                 </div>\n-\n                 \n-                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n-\n-                    </span>\n-\n-                <script>\n-                    const upload_button = document.getElementById('check_model_button');\n-\t\t\tupload_button.disabled = false;\n-                </script>\n-\n-            </div>\n-\n-\n-\n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\"></span>\n+                <p class=\"p-0 m-0\" id=\"rendered_model\"></p>\n+\t    </div>\n+\t    <script>\n+\t\t    const upload_button = document.getElementById('check_model_button');\n+\t\t    upload_button.disabled = false;\n+\t    </script>\n \n         </div>\n-\n     </div>\n-\n-\n {% endblock %}\n-\n {% block scripts %}\n     <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n     <script src=\"{{ url_for('dataset.scripts') }}\"></script>"
      },
      {
        "sha": "b803f06d34fae75f4ed4f2cf088836bd347ec819",
        "filename": "app/modules/dataset/templates/dataset/upload_dataset.html",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -247,6 +247,9 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n \n                                     let alert = document.createElement('p');\n                                     alert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t    if (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t    }\n                                     alerts.appendChild(alert);\n                                     alerts.style.display = 'block';\n                                 }\n@@ -434,7 +437,20 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n                             this.on('error', function (file, response) {\n                                 console.error(\"Error uploading file: \", response);\n                                 let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n+\t\t\t\tif (response.syntax) {\n+                                \talert.textContent = 'UVL not valid: ' + file.name +'. Error: '+response.message;\n+\t\t\t\t} else {\n+\t\t\t\t\tif ( response!=\"You can't upload files of this type.\") {\n+\n+\t\t\t\t\t\talert.textContent = 'Something went wrong while saving the file, try again please';\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\talert.textContent = \"You can't upload files of this type.\";\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tthis.removeFile(file);\n+\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0]);\n+\t\t\t\t}\n                                 alerts.appendChild(alert);\n                                 alerts.style.display = 'block';\n                             });\n@@ -529,4 +545,4 @@ <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\">\n {% block scripts %}\n     <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n     <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n-{% endblock %}\n\\ No newline at end of file\n+{% endblock %}"
      },
      {
        "sha": "3940aa59758ec6e27c5aef6a1f49793dedf19ffd",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 10,
        "deletions": 12,
        "changes": 22,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -41,35 +41,33 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n-                <div class=\"mt-2\">\n                     <div class=\"btn-group\" role=\"group\">\n                         <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n                             <i data-feather=\"download\"></i> Download\n                         </button>\n                         <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='glencoe') }}\">\n                                     Glencoe\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='dimacs') }}\">\n                                     DIMACS\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='splot') }}\">\n                                     SPLOT\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n-                                    ZIP\n-                                </a>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">\n+                                    ZIP (Original UVLs)\n+                                </a>                                \n                             </li>\n                         </ul>\n-                    </div>\n-                </div>\n+                    </div>     \n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">\n@@ -191,7 +189,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n                 <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n-                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                <button id=\"bibtex_preview_btn\" onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                     <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n \n@@ -423,7 +421,7 @@ <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex\n                         style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n                         <i data-feather=\"download\"></i>\n                     </a>\n-                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                    <button id=\"bibtex_copy_btn\" onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n                         style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n                         <i data-feather=\"copy\"></i>\n                     </button>\n@@ -589,4 +587,4 @@ <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex\n     }\n </script>\n \n-{% endblock %}\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "275fbf9bd9d3ad0655d68861bc8799a8415e9560",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 101,
        "deletions": 7,
        "changes": 108,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -1,20 +1,114 @@\n-from locust import HttpUser, TaskSet, task\n+\n+import random\n+from locust import HttpUser, TaskSet, task, between\n from core.locust.common import get_csrf_token\n from core.environment.host import get_host_for_locust_testing\n \n \n class DatasetBehavior(TaskSet):\n     def on_start(self):\n-        self.dataset()\n+        \"\"\"Acci\u00f3n que se ejecuta al inicio del test.\"\"\"\n+        self.dataset_upload()\n \n     @task\n-    def dataset(self):\n+    def dataset_upload(self):\n+        \"\"\"Simula la carga de la p\u00e1gina de subida de datasets.\"\"\"\n         response = self.client.get(\"/dataset/upload\")\n         get_csrf_token(response)\n+        \n+        \n+class CommitDatasetBehavior(TaskSet):\n+    def on_start(self):\n+        \"\"\"Simulate user login before running the commit task.\"\"\"\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        \"\"\"Ensure the user is authenticated.\"\"\"\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}, {response.text}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def commit_dataset(self):\n+        dataset_id = random.randint(1, 10)\n+        response = self.client.post(f\"/dataset/commit/{dataset_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"Dataset {dataset_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"Dataset {dataset_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for dataset {dataset_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for dataset {dataset_id}: {response.status_code} - {response.text}\")\n+\n \n \n+class CommitFileBehavior(TaskSet):\n+    def on_start(self):\n+        \"\"\"Simulate user login before running the commit task.\"\"\"\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        \"\"\"Ensure the user is authenticated.\"\"\"\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}, {response.text}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+class DownloadDatasets(TaskSet):\n+    formats = {\n+        \"Glencoe\": \"glencoe\",\n+        \"SPLOT\": \"splot\",\n+        \"DIMACS\": \"dimacs\",\n+        \"ZIP\": \"zip\"\n+    }\n+\n+    @task\n+    def download_files(self):\n+        for dataset_id in self.dataset_ids:  # Itera sobre tus dataset_ids\n+            for format_name, format_value in self.formats.items():  # Itera sobre los formatos\n+                with self.client.get(\n+                    f\"/flamapy/export/dataset/{dataset_id}/{format_value}\",  # URL corregida\n+                    name=f\"Download {format_name}\",\n+                    allow_redirects=True,  # Sigue autom\u00e1ticamente las redirecciones\n+                    catch_response=True  # Captura la respuesta para an\u00e1lisis\n+                ) as response:\n+                    if response.status_code == 200:  # Descarga exitosa\n+                        response.success()\n+                    elif response.status_code == 302:  # Redirecci\u00f3n\n+                        response.success()  # Tratamos 302 como \u00e9xito\n+                    else:\n+                        response.failure(\n+                            f\"Failed to download {format_name} for dataset {dataset_id} \"\n+                            f\"with status code {response.status_code}\"\n+                        )\n+\n class DatasetUser(HttpUser):\n-    tasks = [DatasetBehavior]\n-    min_wait = 5000\n-    max_wait = 9000\n-    host = get_host_for_locust_testing()\n+    \"\"\"\n+    Clase principal que define los usuarios y su comportamiento.\n+    \"\"\"\n+    tasks = [CommitFileBehavior]  # Asigna la tarea de descarga\n+    min_wait = 5000  # Espera m\u00ednima de 5 segundos\n+    max_wait = 9000  # Espera m\u00e1xima de 9 segundos\n+    wait_time = between(5, 9)  # Espera aleatoria entre tareas\n+    host = \"http://localhost:5000\"  # La URL base de tu aplicaci\u00f3n\n\\ No newline at end of file"
      },
      {
        "sha": "2e2bee0c10bc622be92542708879256151e0f9db",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "added",
        "additions": 99,
        "deletions": 0,
        "changes": 99,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -0,0 +1,99 @@\n+import os\n+import time\n+import glob\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.action_chains import ActionChains\n+from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.webdriver.chrome.options import Options\n+from selenium import webdriver\n+from core.selenium.common import close_driver\n+from core.environment.host import get_host_for_selenium_testing\n+\n+DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n+\n+\n+def initialize_driver(download_dir=None):\n+    options = Options()\n+    if download_dir:\n+        prefs = {\n+            \"download.default_directory\": download_dir,\n+            \"download.prompt_for_download\": False,\n+            \"directory_upgrade\": True\n+        }\n+        options.add_experimental_option(\"prefs\", prefs)\n+    driver = webdriver.Chrome(options=options)\n+    return driver\n+\n+\n+def clean_download_folder():\n+    \"\"\"Elimina todos los archivos previos en la carpeta de descargas.\"\"\"\n+    if os.path.exists(DOWNLOAD_DIR):\n+        for file in os.listdir(DOWNLOAD_DIR):\n+            file_path = os.path.join(DOWNLOAD_DIR, file)\n+            os.remove(file_path)\n+\n+\n+def is_file_downloaded_by_extension(extension, timeout=20, exact=False):\n+    \"\"\"\n+    Verifica si un archivo con una extensi\u00f3n espec\u00edfica ha sido descargado.\n+\n+    :param extension: Extensi\u00f3n del archivo o patr\u00f3n para b\u00fasqueda.\n+    :param timeout: Tiempo m\u00e1ximo de espera.\n+    :param exact: Si es True, busca archivos con nombre exacto. Si no, busca solo por extensi\u00f3n.\n+    \"\"\"\n+    for _ in range(timeout):\n+        files = glob.glob(os.path.join(DOWNLOAD_DIR, f\"{extension}\" if exact else f\"*{extension}\"))\n+        print(\"Archivos actuales en la carpeta:\", os.listdir(DOWNLOAD_DIR))  # Debug\n+        print(\"Coincidencias encontradas:\", files)  # Debug\n+        if files:\n+            return True\n+        time.sleep(1)\n+    return False\n+\n+\n+def test_download_datasets_index():\n+    \"\"\"Prueba la descarga de datasets desde el index en diferentes formatos.\"\"\"\n+    driver = initialize_driver(download_dir=DOWNLOAD_DIR)\n+    clean_download_folder()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+        driver.get(f\"{host}/\")  # P\u00e1gina index\n+        WebDriverWait(driver, 10).until(lambda d: d.execute_script(\"return document.readyState\") == \"complete\")\n+\n+        formats = {\n+            \"Glencoe\": \"_glencoe.zip\",\n+            \"SPLOT\": \"_splot.zip\",\n+            \"DIMACS\": \"_dimacs.zip\",\n+            \"ZIP\": \".zip\"  # Validar cualquier archivo con extensi\u00f3n .zip\n+        }\n+\n+        for format_name, file_extension in formats.items():\n+            print(f\"Probando descarga para el formato: {format_name}\")  # Debug\n+            download_button = WebDriverWait(driver, 10).until(\n+                EC.element_to_be_clickable((By.XPATH, \"//button[contains(@id, 'btnDownloadDropdown')]\"))\n+            )\n+            ActionChains(driver).move_to_element(download_button).click().perform()\n+\n+            dropdown_option = WebDriverWait(driver, 10).until(\n+                EC.element_to_be_clickable((By.XPATH, f\"//a[contains(@onclick, \\\"{format_name.lower()}\\\") or contains(text(), 'ZIP')]\"))\n+            )\n+            dropdown_option.click()\n+\n+            if format_name == \"ZIP\":\n+                # Validar cualquier archivo .zip descargado\n+                assert is_file_downloaded_by_extension(\".zip\"), f\"Archivo ZIP no descargado desde index.\"\n+            else:\n+                assert is_file_downloaded_by_extension(file_extension), f\"Archivo *{file_extension} no descargado desde index.\"\n+\n+            print(f\"Archivo *{file_extension} descargado correctamente.\")\n+            clean_download_folder()\n+\n+        print(\"Todos los archivos se descargaron correctamente desde el index.\")\n+    finally:\n+        close_driver(driver)\n+\n+\n+if __name__ == \"__main__\":\n+    test_download_datasets_index()\n\\ No newline at end of file"
      },
      {
        "sha": "7f2bcf42ace80c1743ddc5ab39335e96e6aaf4a4",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 425,
        "deletions": 0,
        "changes": 425,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -1,14 +1,44 @@\n import os\n import time\n+from flask import url_for\n+from datetime import datetime\n+from pathlib import Path\n \n+from selenium import webdriver\n from selenium.webdriver.common.by import By\n from selenium.webdriver.common.keys import Keys\n from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.common.exceptions import NoSuchElementException\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.webdriver.chrome.service import Service\n+from webdriver_manager.chrome import ChromeDriverManager\n \n from core.environment.host import get_host_for_selenium_testing\n from core.selenium.common import initialize_driver, close_driver\n \n \n+def get_driver_with_download_cwdir():\n+    # Initializes the browser options\n+    prefs = {\n+        \"download.default_directory\": os.getcwd(),\n+        \"download.directory_upgrade\": True,\n+        \"download.prompt_for_download\": False,\n+    }\n+    options = webdriver.ChromeOptions()\n+    options.add_experimental_option(\"prefs\", prefs)\n+\n+    driver_path = ChromeDriverManager().install()\n+\n+\n+    # Initialise the browser using WebDriver Manager\n+    chrome_driver_binary = os.path.join(os.path.dirname(driver_path), 'chromedriver')\n+    \n+    service = Service(chrome_driver_binary)\n+    \n+    \n+    driver = webdriver.Chrome(service=service, options=options)\n+    return driver\n+\n def wait_for_page_to_load(driver, timeout=4):\n     WebDriverWait(driver, timeout).until(\n         lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n@@ -25,6 +55,158 @@ def count_datasets(driver, host):\n         amount_datasets = 0\n     return amount_datasets\n \n+def has_datasets_synced(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//div[@class='card-body']//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets\n+\n+def has_datasets_unsynced(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//div[@class='card-body']//div[@class='card-body']//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets>0\n+\n+def exist_published_datasets(driver, host):\n+    driver.get(f\"{host}/explore\")\n+    wait_for_page_to_load(driver)\n+    try:\n+        amount_datasets = len(driver.find_element(By.ID, 'results').find_elements(By.CSS_SELECTOR, 'div.card'))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets>0\n+\n+def get_url_detalles(driver, host):\n+    if exist_published_datasets(driver, host):\n+        result = driver.find_element(By.ID, 'results').find_element(By.XPATH, '//div[@class=\"card\"]//a').get_attribute('href')\n+    else:\n+        # Open the login page\n+        driver.get(f\"{host}/login\")\n+        wait_for_page_to_load(driver)\n+\n+        # Find the username and password field and enter the values\n+        email_field = driver.find_element(By.NAME, \"email\")\n+        password_field = driver.find_element(By.NAME, \"password\")\n+\n+        email_field.send_keys(\"user1@example.com\")\n+        password_field.send_keys(\"1234\")\n+\n+        # Send the form\n+        password_field.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        if has_datasets_synced(driver, host): # tiene datasets publicados, usar esos\n+            result = driver.find_element(By.XPATH, \"//div[@class='card-body']//table//tbody//tr//td//a\").get_attribute('href')\n+        elif has_datasets_unsynced(driver, host): # solo tiene datasets sin publicar\n+            result = f\"{host}\" + driver.find_element(By.XPATH, \"//div[@class='card-body']//div[@class='card-body']//table//tbody//tr//td//a\").get_attribute('href')\n+        else: # No tiene datasets, crear uno\n+            # Count initial datasets\n+            initial_datasets = count_datasets(driver, host)\n+\n+            # Open the upload dataset\n+            driver.get(f\"{host}/dataset/upload\")\n+            wait_for_page_to_load(driver)\n+\n+            datos_dataset = {\n+                \"titulo\": \"Titulo prueba bibtex\",\n+                \"descripcion\": \"Descripcion prueba bibtex\",\n+                \"tags\": \"tag1,tag2\"\n+            }\n+            autores_dataset = [\n+                    {\"name\": \"AutorBibtex0\", \"affiliation\": \"Club0\",\"orcid\":\"0000-0000-0000-0000\"},\n+                    {\"name\": \"AutorBibtex1\", \"affiliation\": \"Club1\"},\n+                    {\"name\": \"AutorBibtex3\", \"affiliation\": \"Club3\"}\n+            ]\n+\n+            # Find basic info and UVL model and fill values\n+            title_field = driver.find_element(By.NAME, \"title\")\n+            title_field.send_keys(datos_dataset.get(\"titulo\"))\n+            desc_field = driver.find_element(By.NAME, \"desc\")\n+            desc_field.send_keys(datos_dataset.get(\"descripcion\"))\n+            tags_field = driver.find_element(By.NAME, \"tags\")\n+            tags_field.send_keys(datos_dataset.get(\"tags\"))\n+\n+            # Add two authors and fill\n+            add_author_button = driver.find_element(By.ID, \"add_author\")\n+            add_author_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+            add_author_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+            name_field0 = driver.find_element(By.NAME, \"authors-0-name\")\n+            name_field0.send_keys(autores_dataset[0].get(\"name\"))\n+            affiliation_field0 = driver.find_element(By.NAME, \"authors-0-affiliation\")\n+            affiliation_field0.send_keys(autores_dataset[0].get(\"affiliation\"))\n+            orcid_field0 = driver.find_element(By.NAME, \"authors-0-orcid\")\n+            orcid_field0.send_keys(autores_dataset[0].get(\"orcid\"))\n+\n+            name_field1 = driver.find_element(By.NAME, \"authors-1-name\")\n+            name_field1.send_keys(autores_dataset[1].get(\"name\"))\n+            affiliation_field1 = driver.find_element(By.NAME, \"authors-1-affiliation\")\n+            affiliation_field1.send_keys(autores_dataset[1].get(\"affiliation\"))\n+\n+            # Obt\u00e9n las rutas absolutas de los archivos\n+            file1_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file1.uvl\")\n+            file2_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file2.uvl\")\n+\n+            # Subir el primer archivo\n+            dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+            dropzone.send_keys(file1_path)\n+            wait_for_page_to_load(driver)\n+\n+            # Subir el segundo archivo\n+            dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+            dropzone.send_keys(file2_path)\n+            wait_for_page_to_load(driver)\n+\n+            # Add authors in UVL models\n+            show_button = driver.find_element(By.ID, \"0_button\")\n+            show_button.send_keys(Keys.RETURN)\n+            add_author_uvl_button = driver.find_element(By.ID, \"0_form_authors_button\")\n+            add_author_uvl_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+            name_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-name\")\n+            name_field.send_keys(\"AutorBibtex3\")\n+            affiliation_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-affiliation\")\n+            affiliation_field.send_keys(\"Club3\")\n+\n+            # Check I agree and send form\n+            check = driver.find_element(By.ID, \"agreeCheckbox\")\n+            check.send_keys(Keys.SPACE)\n+            wait_for_page_to_load(driver)\n+\n+            upload_btn = driver.find_element(By.ID, \"upload_button\")\n+            upload_btn.send_keys(Keys.RETURN)\n+            \n+            wait_for_page_to_load(driver)\n+            time.sleep(2)  # Force wait time\n+\n+            assert driver.current_url == f\"{host}/dataset/list\", \"Test failed!\"\n+\n+            # Count final datasets\n+            final_datasets = count_datasets(driver, host)\n+            assert final_datasets == initial_datasets + 1, \"Test failed!\"\n+            \n+            listado_unsync = driver.find_element(By.CLASS_NAME, \"row\") # TODO: encontrar el primer elemento de tipo tbody\n+            dataset_creado = listado_unsync.find_element(By.XPATH, \"//table//tbody//tr\")\n+            \n+            info_dataset_creado = dataset_creado.find_elements(By.TAG_NAME, \"td\")\n+\n+            title_matches = info_dataset_creado[0].find_element(By.TAG_NAME, 'a').text==datos_dataset.get(\"titulo\")\n+            desc_matches = info_dataset_creado[1].text==datos_dataset.get(\"descripcion\")\n+            pub_type_matches = info_dataset_creado[2].text==\"None\"\n+\n+            assert title_matches and desc_matches and pub_type_matches, \"Test failed!\"\n+            result = f\"{host}\" + info_dataset_creado[0].find_element(By.TAG_NAME, 'a').get_attribute('href')\n+    return result\n \n def test_upload_dataset():\n     driver = initialize_driver()\n@@ -130,6 +312,249 @@ def test_upload_dataset():\n         # Close the browser\n         close_driver(driver)\n \n+def test_bibtex_preview():\n+    driver = initialize_driver()\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LA PREVIEW MUESTRA EL DATASET EXPORTADO A BIBTEX CORRECTAMENTE\n+        contenido_bibtex = driver.find_element(By.ID, \"bibtexContent\").text\n+        assert contenido_bibtex is not None and contenido_bibtex!=\"None\", \"Test failed!\"\n+\n+        lineas = contenido_bibtex.splitlines()\n+\n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        \n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+def test_bibtex_copy():\n+    driver = initialize_driver()\n+    \n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LOS DATOS SE COPIAN CORRECTAMENTE EN FORMATO BIBTEX\n+        bibtex_copy_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_copy_btn']\")\n+        bibtex_copy_btn.click()\n+        time.sleep(2)\n+        \n+\n+        try:\n+            driver.find_element(By.XPATH, \"//a[@href='/logout']\")\n+        except NoSuchElementException: # No ha iniciado sesion\n+            driver.get(f\"{host}/login\")\n+            wait_for_page_to_load(driver)\n+            \n+            # Find the username and password field and enter the values\n+            email_field = driver.find_element(By.NAME, \"email\")\n+            password_field = driver.find_element(By.NAME, \"password\")\n+\n+            email_field.send_keys(\"user1@example.com\")\n+            password_field.send_keys(\"1234\")\n+\n+            # Send the form\n+            password_field.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+        # Open the upload dataset\n+        driver.get(f\"{host}/dataset/upload\")\n+        wait_for_page_to_load(driver)\n+\n+        desc_field = driver.find_element(By.NAME, \"desc\")\n+        desc_field.send_keys(Keys.LEFT_CONTROL, 'v')\n+        \n+        lineas = desc_field.get_attribute(\"value\").strip().splitlines()\n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+\n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+def test_bibtex_download():\n+    driver = get_driver_with_download_cwdir()\n+    \n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LOS DATOS SE DESCARGAN CORRECTAMENTE EN FORMATO BIBTEX\n+        bibtex_download_btn = driver.find_element(By.XPATH, \"//a[@id='bibtexDownloadButton']\")\n+        bibtex_download_btn.click()\n+        time.sleep(2)\n+        \n+        file_path = os.path.join(os.getcwd(), bibtex_download_btn.get_attribute('download'))\n+\n+        lineas = []\n+\n+        with open(file_path, 'r', encoding='utf-8') as archivo:\n+            lineas.extend(archivo.readlines())\n+        os.remove(file_path)\n+        \n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+        \n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n \n # Call the test function\n test_upload_dataset()\n+test_bibtex_preview()\n+test_bibtex_copy()\n+test_bibtex_download()\n\\ No newline at end of file"
      },
      {
        "sha": "124cfcf72bfbe3604302247f142bb0613bdd53d8",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 4,
        "deletions": 14,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -1,7 +1,5 @@\n import pytest\n from flask import url_for\n-from app.modules.dataset.routes import download_dataset_format\n-\n \n @pytest.fixture(scope=\"module\")\n def test_client(test_client):\n@@ -20,7 +18,7 @@ def test_download_glencoe_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/glencoe\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"glencoe\") in response.location\n \n \n def test_download_splot_redirect(test_client):\n@@ -29,7 +27,7 @@ def test_download_splot_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/splot\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"splot\") in response.location\n \n \n def test_download_dimacs_redirect(test_client):\n@@ -38,7 +36,7 @@ def test_download_dimacs_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/dimacs\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"dimacs\") in response.location\n \n \n def test_download_zip_redirect(test_client):\n@@ -47,12 +45,4 @@ def test_download_zip_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/zip\")\n     assert response.status_code == 302\n-    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n-\n-def test_download_invalid_format(test_client):\n-    \"\"\"\n-    Testea que se retorne un error 400 para un formato no soportado.\n-    \"\"\"\n-    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n-    assert response.status_code == 400\n-    assert response.json == {\"error\": \"Formato no soportado\"}\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n\\ No newline at end of file"
      },
      {
        "sha": "60ac481b376c09e6ea0c8b828c153b2740ae6395",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -111,7 +111,6 @@ def filter(self, query=\"\", sorting=\"newest\",\n \n                 if leaf_feature_name:\n                     leaf_feature_names = model.get_leaf_feature_names()\n-                    print(leaf_feature_name)\n                     if leaf_feature_name not in leaf_feature_names:\n                         continue\n "
      },
      {
        "sha": "ced80b7517d89a162d492da956699330c37a4fc4",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -164,7 +164,7 @@ <h3 class=\"h3 mb-3\">\n                         <div class=\"col-6\">\n \n                             <div>\n-                                Sort results by creation date\n+                                Sort results by creation date and dataset size\n                                 <label class=\"form-check\">\n                                     <input class=\"form-check-input\" type=\"radio\" value=\"newest\" name=\"sorting\"\n                                            checked=\"\">"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/explore/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3"
      },
      {
        "sha": "76f065ed0e5628ded1f600437129886e692c1912",
        "filename": "app/modules/explore/tests/locustfile.py",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -0,0 +1,38 @@\n+from flask import json\n+from locust import HttpUser, TaskSet, task\n+from core.locust.common import get_csrf_token, fake\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class ExploreBehavior(TaskSet):\n+\n+    @task\n+    def explore(self):\n+        response = self.client.get(\"/explore\")\n+        if response.status_code != 200:\n+            print(f\"Explore failed: {response.status_code}\")\n+\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/explore\",\n+                                    headers={\"Content-Type\": \"application/json\"},\n+                                    data=json.dumps({\n+                                        \"min_files\": fake.random_int(min=1, max=5),\n+                                        \"max_files\": fake.random_int(min=2, max=6),\n+                                        \"max_depth\": fake.random_int(min=0, max=3),\n+                                        \"min_depth\": fake.random_int(min=2, max=6),\n+                                        \"min_leaf_count\": fake.random_int(min=0, max=10),\n+                                        \"max_leaf_count\": fake.random_int(min=5, max=15),\n+                                        \"min_av_branching_factor\": fake.random_int(min=0, max=2),\n+                                        \"max_av_branching_factor\": fake.random_int(min=1, max=4),\n+                                        \"csrf_token\": csrf_token\n+                                    }))\n+        if response.status_code != 200:\n+            print(f\"Filtering failed: {response.status_code}\")\n+\n+\n+class ExploreUser(HttpUser):\n+    tasks = [ExploreBehavior]\n+    min_wait = 3000\n+    max_wait = 7000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "4e155914f9dbbabc2336450f156f1534d51a3c3d",
        "filename": "app/modules/explore/tests/test_selenium.py",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -0,0 +1,74 @@\n+import pytest\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.common.exceptions import TimeoutException, NoSuchElementException\n+from core.selenium.common import initialize_driver, close_driver\n+import time\n+\n+\n+def test_check_smallest_first():\n+    driver = initialize_driver()\n+    try:\n+        driver.get(\"http://localhost:5000/explore\")\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.XPATH, \"//input[@value='filesize_asc']\"))\n+        )\n+        driver.execute_script(\"arguments[0].click();\", results_container)\n+        time.sleep(3)\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"results\"))\n+        )\n+        first_result = WebDriverWait(results_container, 10).until(\n+            EC.presence_of_element_located((By.CSS_SELECTOR, \"div:nth-child(1)\"))\n+        )\n+        dataset_name = first_result.text\n+\n+        assert \"Sample dataset 4\" in dataset_name, f\"Test failed: Expected 'Sample dataset 4', but got '{dataset_name}'\"\n+        print(\"Test passed: The first dataset is 'Sample dataset 4'.\")\n+\n+    except TimeoutException:\n+        pytest.fail(\"Error: Timeout while waiting for elements to load.\")\n+    except NoSuchElementException:\n+        pytest.fail(\"Error: Unable to locate the required element.\")\n+    except AssertionError as e:\n+        pytest.fail(f\"Test failed: {e}\")\n+\n+    finally:\n+        close_driver(driver)\n+\n+\n+def test_check_largest_first():\n+    driver = initialize_driver()\n+    try:\n+        driver.get(\"http://localhost:5000/explore\")\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.XPATH, \"//input[@value='filesize_desc']\"))\n+        )\n+        driver.execute_script(\"arguments[0].click();\", results_container)\n+        time.sleep(3)\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"results\"))\n+        )\n+        first_result = WebDriverWait(results_container, 10).until(\n+            EC.presence_of_element_located((By.CSS_SELECTOR, \"div:nth-child(1)\"))\n+        )\n+        dataset_name = first_result.text\n+\n+        assert \"Sample dataset 2\" in dataset_name, f\"Test failed: Expected 'Sample dataset 2', but got '{dataset_name}'\"\n+        print(\"Test passed: The first dataset is 'Sample dataset 2'.\")\n+\n+    except TimeoutException:\n+        pytest.fail(\"Error: Timeout while waiting for elements to load.\")\n+    except NoSuchElementException:\n+        pytest.fail(\"Error: Unable to locate the required element.\")\n+    except AssertionError as e:\n+        pytest.fail(f\"Test failed: {e}\")\n+\n+    finally:\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_check_smallest_first()\n+test_check_largest_first()"
      },
      {
        "sha": "4d5c6df3f18720dcb307ee18edf67c413e3a5a4e",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "added",
        "additions": 133,
        "deletions": 0,
        "changes": 133,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -0,0 +1,133 @@\n+import pytest\n+from app.modules.explore.services import ExploreService\n+from app.modules.auth.seeders import AuthSeeder\n+from app.modules.dataset.seeders import DataSetSeeder\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Fixture that sets up the test environment by initializing necessary data:\n+    - Seeds users via AuthSeeder.\n+    - Seeds datasets via DataSetSeeder.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        users = AuthSeeder()\n+        users.run()\n+\n+        seeder = DataSetSeeder()\n+        seeder.run()\n+\n+    yield test_client\n+\n+\n+def test_filtering_service_file_count(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the number of files within the specified range (0 to 10).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_files=0, max_files=10)\n+    expected_dataset_count = 4  # Expected all datasets, 4.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_num_of_leaf(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the number of leaf nodes within the specified range (2 to 6).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_leaf_count=2, max_leaf_count=6)\n+    expected_dataset_count = 1  # Expect only dataset 4, as it is the file \"file10.uvl,\" which has 6 leaves.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_check_filtering_service_no_results(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly filters all datasets\n+    based on the number of leaf nodes, as the maximum is lower than the minimum.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_leaf_count=300, max_leaf_count=299)\n+    expected_dataset_count = 0  # Expect no datasets.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_depth(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the depth within the specified range (3 to 10).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_depth=3, max_depth=10)\n+    expected_dataset_count = 3\n+    # Expect all datasets except dataset 3, as it is the file \"file10.uvl,\" which has a depth of 2.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_average_branching_factor(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the average branching factor within the specified range (0 to 2).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_av_branching_factor=0, max_av_branching_factor=2)\n+    expected_dataset_count = 2\n+    # Expect datasets \"sample dataset 2\" and \"sample dataset 4\" for the file \"file5.uvl\"\n+    # and \"file10.uvl\" as both files have an average branching factor of 2.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_leaf_feature_name(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the leaf feature name \"Server\".\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(leaf_feature_name=\"Server\")\n+    expected_dataset_count = 2\n+    # Expected datasets \"sample dataset 1\" and \"sample dataset 3\" for the files \"file1.uvl\"\n+    # and \"file9.uvl\" as they are identical and contain \"Server\" in the leaf feature name.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_core_feature_name(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the core feature name \"FitnessMonitor\".\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(core_feature_name=\"FitnessMonitor\")\n+    expected_dataset_count = 2\n+    # Expected datasets \"sample dataset 1\" and \"sample dataset 2\" for the files \"file2.uvl\"\n+    # and \"file5.uvl\" as they contain \"FitnessMonitor\" in the core feature name.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_check_sorting_smallest_first(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly sorts datasets\n+    based on the size, with smallest first.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets_sorted = explore_service.filter(sorting=\"filesize_asc\")\n+    first_ds = datasets_sorted[0]\n+    assert first_ds.name()==\"Sample dataset 4\", f\"Expected smallest dataset to be 'Sample dataset 4', but got '{first_ds.name()}' instead\"\n+\n+def test_check_sorting_largest_first(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly sorts datasets\n+    based on the size, with largest first.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets_sorted = explore_service.filter(sorting=\"filesize_desc\")\n+    first_ds = datasets_sorted[0]\n+    assert first_ds.name()==\"Sample dataset 2\", f\"Expected smallest dataset to be 'Sample dataset 2', but got '{first_ds.name()}' instead\"\n\\ No newline at end of file"
      },
      {
        "sha": "77dba20ebcd49a483100e4fc73b712128864295b",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 43,
        "deletions": 3,
        "changes": 46,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -1,11 +1,14 @@\n+import os\n+import zipfile\n+import tempfile\n import logging\n+\n+from flask import send_file, jsonify, redirect, url_for\n from app.modules.hubfile.services import HubfileService\n-from flask import send_file, jsonify\n from app.modules.flamapy import flamapy_bp\n+\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n-import tempfile\n-import os\n \n from antlr4 import CommonTokenStream, FileStream\n from uvl.UVLCustomLexer import UVLCustomLexer\n@@ -115,3 +118,40 @@ def to_cnf(file_id):\n     finally:\n         # Clean up the temporary file\n         os.remove(temp_file.name)\n+\n+@flamapy_bp.route('/flamapy/export_dataset/<int:dataset_id>/<string:format>', methods=['GET'])\n+def export_dataset(dataset_id, format):\n+    \"\"\"Export all UVL files in the dataset to the specified format and package as a ZIP.\"\"\"\n+    hubfile_service = HubfileService()\n+    files = hubfile_service.get_files_by_dataset_id(dataset_id)\n+\n+    if not files:\n+        return jsonify({\"error\": \"No files found for this dataset\"}), 404\n+\n+    with tempfile.TemporaryDirectory() as temp_dir:\n+        zip_filename = os.path.join(temp_dir, f\"dataset_{dataset_id}_{format}.zip\")\n+\n+        with zipfile.ZipFile(zip_filename, 'w') as zipf:\n+            for file in files:\n+                uvl_path = file.get_path()\n+                fm = UVLReader(uvl_path).transform()\n+\n+                # Transform the file to the desired format\n+                temp_file = tempfile.NamedTemporaryFile(delete=False, suffix=f\".{format}\")\n+                try:\n+                    if format == \"glencoe\":\n+                        GlencoeWriter(temp_file.name, fm).transform()\n+                    elif format == \"splot\":\n+                        SPLOTWriter(temp_file.name, fm).transform()\n+                    elif format == \"dimacs\":\n+                        sat = FmToPysat(fm).transform()\n+                        DimacsWriter(temp_file.name, sat).transform()\n+                    else:\n+                        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+\n+                    # Add transformed file to ZIP\n+                    zipf.write(temp_file.name, arcname=f\"{file.name}.{format}\")\n+                finally:\n+                    os.remove(temp_file.name)\n+\n+        return send_file(zip_filename, as_attachment=True, download_name=f\"dataset_{dataset_id}_{format}.zip\")\n\\ No newline at end of file"
      },
      {
        "sha": "40b4d5e3509a247e2d035c5099f5ce170695a430",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -26,6 +26,16 @@ def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n     \n     def get_hubfile_by_id(self, hubfile_id: int) -> Hubfile:\n         return db.session.query(Hubfile).filter(Hubfile.id == hubfile_id).first()\n+    \n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos relacionados con un dataset.\"\"\"\n+        dataset = DataSet.query.get(dataset_id)\n+        if not dataset:\n+            return []\n+\n+        # Extrae todos los archivos de los FeatureModels relacionados\n+        files = [file for fm in dataset.feature_models for file in fm.files]\n+        return files\n \n \n class HubfileViewRecordRepository(BaseRepository):\n@@ -43,4 +53,4 @@ def __init__(self):\n \n     def total_hubfile_downloads(self) -> int:\n         max_id = self.model.query.with_entities(func.max(self.model.id)).scalar()\n-        return max_id if max_id is not None else 0\n+        return max_id if max_id is not None else 0\n\\ No newline at end of file"
      },
      {
        "sha": "1d61da9482d23b082661e52920a34f734c13d12b",
        "filename": "app/modules/hubfile/services.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fhubfile%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fhubfile%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Fservices.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -16,6 +16,11 @@ def __init__(self):\n         self.hubfile_view_record_repository = HubfileViewRecordRepository()\n         self.hubfile_download_record_repository = HubfileDownloadRecordRepository()\n \n+    # Nuevo m\u00e9todo para obtener archivos por dataset\n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos UVL asociados a un dataset.\"\"\"\n+        return self.repository.get_files_by_dataset_id(dataset_id)\n+\n     def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n         return self.repository.get_owner_user_by_hubfile(hubfile)\n \n@@ -46,4 +51,4 @@ def total_hubfile_downloads(self) -> int:\n \n class HubfileDownloadRecordService(BaseService):\n     def __init__(self):\n-        super().__init__(HubfileDownloadRecordRepository())\n+        super().__init__(HubfileDownloadRecordRepository())\n\\ No newline at end of file"
      },
      {
        "sha": "3e8b608a1a2409a516addb103772a79cfe7c30be",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -99,7 +99,7 @@ <h2>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'glencoe')\">Glencoe</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'splot')\">SPLOT</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'dimacs')\">DIMACS</a></li>\n-                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'zip')\">ZIP</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">ZIP</a></li>\n                                     </ul>\n                                 </div>                                \n                             </div>"
      },
      {
        "sha": "046d16ed02077bce70fa94658634c90c5525ac89",
        "filename": "app/modules/zenodo/services.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fzenodo%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fmodules%2Fzenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Fservices.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -27,11 +27,11 @@ def get_zenodo_url(self):\n         ZENODO_API_URL = \"\"\n \n         if FLASK_ENV == \"development\":\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n         elif FLASK_ENV == \"production\":\n             ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://zenodo.org/api/deposit/depositions\")\n         else:\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n \n         return ZENODO_API_URL\n \n@@ -83,7 +83,6 @@ def test_full_connection(self) -> Response:\n                 \"creators\": [{\"name\": \"John Doe\"}],\n             }\n         }\n-\n         response = requests.post(self.ZENODO_API_URL, json=data, params=self.params, headers=self.headers)\n \n         if response.status_code != 201:"
      },
      {
        "sha": "65ffa266d710b0ee8f02416aeb1319e5f0aed671",
        "filename": "app/static/js/scripts.js",
        "status": "modified",
        "additions": 4,
        "deletions": 244,
        "changes": 248,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fstatic%2Fjs%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Fstatic%2Fjs%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fscripts.js?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -1,246 +1,6 @@\n-var currentId = 0;\n-        var amount_authors = 0;\n-\n-        function show_upload_dataset() {\n-            document.getElementById(\"upload_dataset\").style.display = \"block\";\n-        }\n-\n-        function generateIncrementalId() {\n-            return currentId++;\n-        }\n-\n-        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n-            let fieldWrapper = document.createElement('div');\n-            fieldWrapper.className = className;\n-\n-            let label = document.createElement('label');\n-            label.className = 'form-label';\n-            label.for = name;\n-            label.textContent = text;\n-\n-            let field = document.createElement('input');\n-            field.name = name;\n-            field.className = 'form-control';\n-\n-            fieldWrapper.appendChild(label);\n-            fieldWrapper.appendChild(field);\n-            newAuthor.appendChild(fieldWrapper);\n-        }\n-\n-        function addRemoveButton(newAuthor) {\n-            let buttonWrapper = document.createElement('div');\n-            buttonWrapper.className = 'col-12 mb-2';\n-\n-            let button = document.createElement('button');\n-            button.textContent = 'Remove author';\n-            button.className = 'btn btn-danger btn-sm';\n-            button.type = 'button';\n-            button.addEventListener('click', function (event) {\n-                event.preventDefault();\n-                newAuthor.remove();\n-            });\n-\n-            buttonWrapper.appendChild(button);\n-            newAuthor.appendChild(buttonWrapper);\n-        }\n-\n-        function createAuthorBlock(idx, suffix) {\n-            let newAuthor = document.createElement('div');\n-            newAuthor.className = 'author row';\n-            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n-\n-            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n-            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n-            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n-            addRemoveButton(newAuthor);\n-\n-            return newAuthor;\n-        }\n-\n-        function check_title_and_description() {\n-            let titleInput = document.querySelector('input[name=\"title\"]');\n-            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n-\n-            titleInput.classList.remove(\"error\");\n-            descriptionTextarea.classList.remove(\"error\");\n-            clean_upload_errors();\n-\n-            let titleLength = titleInput.value.trim().length;\n-            let descriptionLength = descriptionTextarea.value.trim().length;\n-\n-            if (titleLength < 3) {\n-                write_upload_error(\"title must be of minimum length 3\");\n-                titleInput.classList.add(\"error\");\n-            }\n-\n-            if (descriptionLength < 3) {\n-                write_upload_error(\"description must be of minimum length 3\");\n-                descriptionTextarea.classList.add(\"error\");\n-            }\n-\n-            return (titleLength >= 3 && descriptionLength >= 3);\n-        }\n-\n-\n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n-\n-        document.addEventListener('click', function (event) {\n-            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n-\n-                let authorsButtonId = event.target.id;\n-                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n-                let authors = document.getElementById(authorsId);\n-                let id = authorsId.replace(\"_form_authors\", \"\")\n-                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n-                authors.appendChild(newAuthor);\n-\n-            }\n-        });\n-\n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n-\n-        function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n-            document.getElementById(\"loading\").style.display = \"none\";\n-        }\n-\n-        function clean_upload_errors() {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            upload_error.innerHTML = \"\";\n-            upload_error.style.display = 'none';\n-        }\n-\n-        function write_upload_error(error_message) {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            let alert = document.createElement('p');\n-            alert.style.margin = '0';\n-            alert.style.padding = '0';\n-            alert.textContent = 'Upload error: ' + error_message;\n-            upload_error.appendChild(alert);\n-            upload_error.style.display = 'block';\n-        }\n-\n-        window.onload = function () {\n-\n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n-\n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n-\n-        function downloadDataset(datasetId, format) {\n-            const url = `/dataset/download/${datasetId}/${format}`;\n-            window.location.href = url;\n-        }\n+    function downloadDataset(datasetId, format) {\n+        const url = `/dataset/download/${datasetId}/${format}`;\n+        window.location.href = url;\n+    }\n         \n         \n\\ No newline at end of file"
      },
      {
        "sha": "dbca6f3d31a8c62779ec70dd7c38e3c30e4b6915",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -110,15 +110,12 @@\n                                 class=\"align-middle\">My datasets</span>\n                         </a>\n                     </li>\n-\n-\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.list_dataset' else '' }}\">\n+\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.check_dataset' else '' }}\">\n                         <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n                             <i class=\"align-middle\" data-feather=\"list\"></i> <span\n                                 class=\"align-middle\">Check model</span>\n                         </a>\n-                    </li>\n-\n-\n+                    </li>\t\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>"
      },
      {
        "sha": "54a33e2de92fe07a170425aae5155b7722058055",
        "filename": "fakenodo/__init__.py",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2F__init__.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -0,0 +1,8 @@\n+from fakenodo.app.routes import api_bp\n+from flask import Flask\n+\n+def create_app():\n+    app = Flask(__name__)\n+    with app.app_context():\n+        app.register_blueprint(api_bp)\n+    return app"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "fakenodo/app/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Fapp%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Fapp%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2F__init__.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3"
      },
      {
        "sha": "34c7f26a0ccf44b709399eb34685c72851a158d4",
        "filename": "fakenodo/app/models.py",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Fapp%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Fapp%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fmodels.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -0,0 +1,71 @@\n+class Creator:\n+    def __init__(self, name: str, id: int = None, deposition_id: int = None):\n+        self.id = id\n+        self.name = name\n+        self.deposition_id = deposition_id\n+\n+    def to_dict(self):\n+        return {\n+            'id': self.id,\n+            'name': self.name,\n+            'deposition_id': self.deposition_id\n+        }\n+\n+\n+class File:\n+    _id_counter = 1\n+\n+    def __init__(self, name: str, size: int, checksum, deposition_id: str):\n+        self.id = File._id_counter\n+        File._id_counter += 1\n+        self.name = name\n+        self.size = size\n+        self.checksum = checksum\n+        self.deposition_id = deposition_id\n+\n+    def to_dict(self):\n+        return {\n+            \"id\": self.id,\n+            \"name\": self.name,\n+            \"size\": self.size,\n+            \"checksum\": self.checksum\n+        }\n+\n+\n+class Deposition:\n+    _id_counter = 1\n+\n+    def __init__(self, title=None, upload_type=None, publication_type=None, description=None,\n+                 creators=None, keywords=None, access_right=None, license=None, doi=None, published=False, files=None):\n+        self.id = Deposition._id_counter\n+        Deposition._id_counter += 1\n+\n+        self.title = title\n+        self.upload_type = upload_type\n+        self.publication_type = publication_type\n+        self.description = description\n+        self.creators = creators\n+        self.keywords = keywords\n+        self.access_right = access_right\n+        self.license = license\n+        self.doi = doi\n+        self.published = published\n+        self.files = files\n+        self.conceptrecid = self.id - 1\n+\n+    def to_dict(self):\n+        return {\n+            \"id\": self.id,\n+            \"title\": self.title,\n+            \"upload_type\": self.upload_type,\n+            \"publication_type\": self.publication_type,\n+            \"description\": self.description,\n+            \"creators\": self.creators,\n+            \"keywords\": self.keywords,\n+            \"access_right\": self.access_right,\n+            \"license\": self.license,\n+            \"doi\": self.doi,\n+            \"published\": self.published,\n+            \"files\": self.files,\n+            \"conceptrecid\": self.conceptrecid\n+        }"
      },
      {
        "sha": "dc60d2ea029585a302642dd662a05b8cd96b19ca",
        "filename": "fakenodo/app/routes.py",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Fapp%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Fapp%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Froutes.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -0,0 +1,97 @@\n+import logging\n+import requests\n+from flask import Blueprint, jsonify, request\n+from fakenodo.app.models import Deposition\n+from fakenodo.app.services import Service\n+\n+api_bp = Blueprint(\"api_bp\", __name__)\n+logger = logging.getLogger(__name__)\n+service = Service()\n+\n+\n+@api_bp.route('/api/fakenodo/depositions', methods=['GET', 'POST'])\n+def depositions() -> tuple:\n+    def get_all_depositions() -> tuple:\n+        try:\n+            depositions = service.get_all_depositions()\n+            return jsonify(depositions), 200\n+\n+        except Exception as e:\n+            return jsonify({\"success\": False, \"message\": str(e)}), 500\n+\n+    def create_deposition() -> tuple:\n+        data = request.json\n+        try:\n+            # Create a Deposition instance with the request metadata\n+            deposition = Deposition(**data[\"metadata\"])\n+\n+            # Save the deposition in a local list\n+            response_data = service.create_new_deposition(deposition)\n+\n+            return jsonify(response_data), 201\n+        except Exception as e:\n+            return jsonify({\"success\": False, \"message\": str(e)}), 500\n+\n+    if request.method == \"GET\":\n+        return get_all_depositions()\n+    else:\n+        return create_deposition()\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/files', methods=['POST'])\n+def upload_file(deposition_id) -> tuple:\n+    try:\n+        for file in request.files.getlist('file'):\n+            if not file:\n+                return jsonify({\"success\": False, \"message\": \"Missing file\"}), 400\n+            service.upload_file(file, deposition_id)\n+\n+        return jsonify('File uploaded succesfully'), 201\n+    except Exception as e:\n+        error_message = f\"Failed to upload files. Error details: {e}\"\n+        raise Exception(error_message)\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>', methods=['GET', 'DELETE'])\n+def deposition(deposition_id):\n+    try:\n+        # Target deposition\n+        deposition = service.get_deposition(deposition_id)\n+\n+        def get_deposition():\n+            resposne = deposition.to_dict()\n+            return jsonify(resposne), 200\n+\n+        def delete_deposition():\n+            service.delete_deposition(deposition)\n+            return jsonify(f\"Deposition with id {deposition_id} deleted succesfully\"), 204\n+\n+        if request.method == 'GET':\n+            return get_deposition()\n+        else:\n+            return delete_deposition()\n+\n+    except Exception:\n+        return jsonify(f\"Cannot find deposition with id {deposition_id}\"), 404\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/actions/publish', methods=['POST'])\n+def publish_deposition(deposition_id) -> tuple:\n+    try:\n+        # Target deposition\n+        deposition = service.get_deposition(deposition_id)\n+        service.generate_doi(deposition_id)\n+        service.publish_deposition(deposition)\n+        return jsonify(f\"Deposition with id {deposition_id} published succesfully\"), 202\n+\n+    except Exception:\n+        return jsonify(\"Deposition not found\"), 404\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/doi', methods=['GET'])\n+def get_doi(deposition_id) -> tuple:\n+    try:\n+        doi = service.get_doi(deposition_id)\n+        return jsonify({\"doi\": doi}), 200\n+    except Exception as e:\n+        return jsonify({\"success\": False, \"message\": str(e)}), 500"
      },
      {
        "sha": "9792be9468ae3f990042133d2afbb4fda5bd3877",
        "filename": "fakenodo/app/services.py",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Fapp%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Fapp%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fservices.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -0,0 +1,75 @@\n+import hashlib\n+import logging\n+from random import randint\n+from typing import List\n+from fakenodo.app.models import Deposition, File\n+from dotenv import load_dotenv\n+from core.services.BaseService import BaseService\n+\n+logger = logging.getLogger(__name__)\n+\n+load_dotenv()\n+\n+depositions = []\n+\n+class Service(BaseService):\n+    def __init__(self):\n+        self.headers = {\"Content-Type\": \"application/json\"}\n+\n+    def get_all_depositions(self) -> list:\n+        return [deposition.to_dict() for deposition in depositions]\n+\n+    def create_new_deposition(self, deposition: Deposition) -> dict:\n+        depositions.append(deposition)\n+        return deposition.to_dict()\n+\n+    def upload_file(self, file, deposition_id) -> None:\n+        try:\n+            # Read file content\n+            file_data = file.read()\n+\n+            # Create the file instance\n+            file_instance = File(\n+                name=file.filename,\n+                size=len(file_data),\n+                checksum=hashlib.md5(file_data).hexdigest(),\n+                deposition_id=deposition_id\n+            )\n+\n+            target_deposition = self.get_deposition(deposition_id)\n+            if target_deposition is None:\n+                raise FileNotFoundError(\"Deposition not found\")\n+            if target_deposition.files is None:\n+                target_deposition.files = [file_instance.to_dict()]\n+            else:\n+                target_deposition.files.append(file_instance.to_dict())\n+\n+        except Exception as e:\n+            print(f\"Error en la subida del archivo: {e}\")\n+\n+    def publish_deposition(self, deposition: Deposition) -> dict:\n+        if deposition.doi!=None:\n+            deposition.published = True\n+        return deposition.to_dict()\n+\n+    def delete_deposition(self, deposition: Deposition) -> None:\n+        depositions.remove(deposition)\n+\n+    def get_deposition(self, deposition_id: int) -> Deposition | None:\n+        return [deposition for deposition in depositions if deposition_id == deposition.id][0]\n+\n+    def get_doi(self, deposition_id: int) -> str:\n+        return self.get_deposition(deposition_id).doi\n+\n+    def generate_doi_id():\n+        identifier = randint(10000,1000000)\n+        while True:\n+            yield identifier\n+            identifier+=1\n+\n+    doi_generator = generate_doi_id()\n+\n+    def generate_doi(self,deposition_id):\n+        deposition = self.get_deposition(deposition_id)\n+        doi_id = next(self.doi_generator)\n+        deposition.doi = str(doi_id)+\"/dataset.\"+str(doi_id)"
      },
      {
        "sha": "d2a599dd699a849fbac0b49bf05c76c52b5f516c",
        "filename": "fakenodo/conftest.py",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Fconftest.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Fconftest.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fconftest.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -0,0 +1,14 @@\n+import pytest\n+from flask import Flask\n+from fakenodo.app.routes import api_bp\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client():\n+    app = Flask(__name__)\n+    app.config[\"TESTING\"] = True\n+    app.config[\"SERVER_NAME\"] = \"localhost:5001\"\n+    app.register_blueprint(api_bp)\n+    with app.test_client() as client:\n+        with app.app_context():\n+            yield client"
      },
      {
        "sha": "6073984d83d3c02a135714af400b13bac9c32687",
        "filename": "fakenodo/pytest.ini",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Fpytest.ini",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Fpytest.ini",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fpytest.ini?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -0,0 +1,4 @@\n+[pytest]\n+filterwarnings =\n+    ignore::DeprecationWarning\n+testpaths = fakenodo tests"
      },
      {
        "sha": "65e0caf5717f6844e459e42f72073254d12b694a",
        "filename": "fakenodo/run.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Frun.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3/fakenodo%2Frun.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Frun.py?ref=edf0fc58fd7782f32e8ad17ebb43cb69ac7ba9f3",
        "patch": "@@ -0,0 +1,6 @@\n+from fakenodo import create_app\n+\n+\n+app = create_app()\n+if __name__ == \"__main__\":\n+    app.run(host=\"0.0.0.0\", port=5001, debug=True)"
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file1.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file2.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file3.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file7.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file8.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file9.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file4.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file5.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file6.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file10.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file11.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file12.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      }
    ]
  },
  {
    "sha": "ed5db7b107035a537212a33ca3d914566243de59",
    "node_id": "C_kwDONDG85doAKGVkNWRiN2IxMDcwMzVhNTM3MjEyYTMzY2EzZDkxNDU2NjI0M2RlNTk",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-12-16T19:14:37Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-16T19:14:37Z"
      },
      "message": "Merge pull request #39 from flamenquin-hub-single/feature-test-advanced-filtering\n\nfix(workflow): Added environment variable",
      "tree": {
        "sha": "ccd2dff49a8ce83c97f180c5506b91ec8491fe6d",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/ccd2dff49a8ce83c97f180c5506b91ec8491fe6d"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/ed5db7b107035a537212a33ca3d914566243de59",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYHwdCRC1aQ7uu5UhlAAAgJoQAHCBC/26crYJswZBfriwH6gC\npuTC29jrMLYeKMQmIJKwywjPbLiRKxQWxnzMzUdUJzU1RFqLuIOetsMBk8UqWHQ5\nmuvQuy1Ij5oWbxvkaVpHcrJuss/JV/71g6JRv+rC7ZmMwtslnQO/bZXFSox1ZO6y\nTbLbSK0PEs8RRtxoVivMWfdkJlHodhtDIT50GoxMfqXb4slUKr2slSWzWFLVOQuT\ntH8hDrZ6XdxRIRp+a3/DVuyY1XBm4wt0WB+slv/DLFaehyEQ+U/3WtjZ5wX8kAY6\nZm+eYmOY1EpJGXvwPp4Gli2gaFttFLpPt0e2wneLJuxGozIb8QgZ6vRlOa8/IeA0\niMxWwD4exzNOz/WTPyb1NS0y93QOeX+Ya+Jwm9AhEgNffMWZclCz3UooaKoJH/at\noxGWs79blvn5X6/LlqlS+k2qC8E2z1YjZmmhZhCXU5MTcFULEBJCPqXPQLaOM3SR\ntL2a6xnpwIMiWYJSjAbmEnlbyy6rJRxyKm0W2uLId9nMCM7bWgtBItXNVjTW6M0L\n3Wr2+ejcXpPLm5+6VmoTu//Ay9ji1N0JWlVXhvGrwPOpKnrgn1ewXMJtapEaCkok\n9WwjuNVyZV0onHK2QR2UhlK+PMwRFEmLpBTk+DiFc9vWU/qtcUrhvWXefxespVBX\ntFDYMJHW9u4efdwmVjnm\n=z8yQ\n-----END PGP SIGNATURE-----\n",
        "payload": "tree ccd2dff49a8ce83c97f180c5506b91ec8491fe6d\nparent b52cf22de7746858eb04e9cce7e7dc7d6adabe24\nparent 5bb7e28a0fa250aa7ae946489bd834180a07589e\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1734376477 +0100\ncommitter GitHub <noreply@github.com> 1734376477 +0100\n\nMerge pull request #39 from flamenquin-hub-single/feature-test-advanced-filtering\n\nfix(workflow): Added environment variable",
        "verified_at": "2024-12-16T19:16:01Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ed5db7b107035a537212a33ca3d914566243de59",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ed5db7b107035a537212a33ca3d914566243de59",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ed5db7b107035a537212a33ca3d914566243de59/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/b52cf22de7746858eb04e9cce7e7dc7d6adabe24"
      },
      {
        "sha": "5bb7e28a0fa250aa7ae946489bd834180a07589e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5bb7e28a0fa250aa7ae946489bd834180a07589e",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5bb7e28a0fa250aa7ae946489bd834180a07589e"
      }
    ],
    "files": [
      {
        "sha": "f0fa9647a57c3e3213cde3c10727cf217393c1ff",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -50,6 +50,7 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        WORKING_DIR: \"\"\n       run: |\n         pytest app/modules/ --ignore-glob='*selenium*'\n "
      },
      {
        "sha": "cfd1de2c2d675ce525e364852c9c40031e8bde19",
        "filename": ".github/workflows/render_main.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ed5db7b107035a537212a33ca3d914566243de59/.github%2Fworkflows%2Frender_main.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ed5db7b107035a537212a33ca3d914566243de59/.github%2Fworkflows%2Frender_main.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender_main.yml?ref=ed5db7b107035a537212a33ca3d914566243de59",
        "patch": "@@ -48,6 +48,7 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        WORKING_DIR: \"\"\n       run: |\n         pytest app/modules/ --ignore-glob='*selenium*'\n "
      }
    ]
  },
  {
    "sha": "5bb7e28a0fa250aa7ae946489bd834180a07589e",
    "node_id": "C_kwDONDG85doAKDViYjdlMjhhMGZhMjUwYWE3YWU5NDY0ODliZDgzNDE4MGEwNzU4OWU",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-16T19:08:43Z"
      },
      "committer": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-16T19:08:43Z"
      },
      "message": "fix(workflow): Added environment variable",
      "tree": {
        "sha": "ccd2dff49a8ce83c97f180c5506b91ec8491fe6d",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/ccd2dff49a8ce83c97f180c5506b91ec8491fe6d"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/5bb7e28a0fa250aa7ae946489bd834180a07589e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5bb7e28a0fa250aa7ae946489bd834180a07589e",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5bb7e28a0fa250aa7ae946489bd834180a07589e",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5bb7e28a0fa250aa7ae946489bd834180a07589e/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/98f1e1474a4010bc1ed69fbccb52d551a20378e2"
      }
    ],
    "files": [
      {
        "sha": "f0fa9647a57c3e3213cde3c10727cf217393c1ff",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5bb7e28a0fa250aa7ae946489bd834180a07589e/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5bb7e28a0fa250aa7ae946489bd834180a07589e/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=5bb7e28a0fa250aa7ae946489bd834180a07589e",
        "patch": "@@ -50,6 +50,7 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        WORKING_DIR: \"\"\n       run: |\n         pytest app/modules/ --ignore-glob='*selenium*'\n "
      },
      {
        "sha": "cfd1de2c2d675ce525e364852c9c40031e8bde19",
        "filename": ".github/workflows/render_main.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5bb7e28a0fa250aa7ae946489bd834180a07589e/.github%2Fworkflows%2Frender_main.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5bb7e28a0fa250aa7ae946489bd834180a07589e/.github%2Fworkflows%2Frender_main.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender_main.yml?ref=5bb7e28a0fa250aa7ae946489bd834180a07589e",
        "patch": "@@ -48,6 +48,7 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        WORKING_DIR: \"\"\n       run: |\n         pytest app/modules/ --ignore-glob='*selenium*'\n "
      }
    ]
  },
  {
    "sha": "b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
    "node_id": "C_kwDONDG85doAKGI1MmNmMjJkZTc3NDY4NThlYjA0ZTljY2U3ZTdkYzdkNmFkYWJlMjQ",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-12-16T18:44:04Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-16T18:44:04Z"
      },
      "message": "Merge pull request #30 from flamenquin-hub-single/feature-test-advanced-filtering\n\nFeature test advanced filtering",
      "tree": {
        "sha": "a2df8ad65999ab7991ccad6911d3cda62e2435b3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a2df8ad65999ab7991ccad6911d3cda62e2435b3"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYHT0CRC1aQ7uu5UhlAAA6VMQAFcjJ13nYS7a3W1GuniA6c1b\nYXYaM9niMwYhl/bLxApPJiiq8ZN8L3JZkndwHVDOwdlYAvUoHfIwE9B4RFnpjYFN\nUdr5rdmthlgxa/zLIpXgw/IA7jMkIfIfK+Ec+b0nPCIcSUJT+iMdBXdkO/Or4s3B\neqOImByYVWwXlt90MSYFIAwdjoPGKeC/Qxp7JS3FEE43lmqfn6Dv4NHWTYyKVDBR\n7+Z+sFnLhY5/4Gfd7Pu0/iR/kHSAAS9kJRPZlmngsG63zTCJzzSssG4Ez/3NNZ3Y\nbmPbfKuuvQ2YTE7A6u4sMjJdLrRMvjyMDWVSi0KeOlDpxsAeYRA8xTeHExw06hr6\nsvD7JS8J95cnw5HmHeN99eZ+Cxu9QLGMQYbGNCiOCs+1gVUfkJ+mTgZ45tcIQNC7\nqLojZ0uRA0Bk0yKkAIKwoGb55lHL/SpEajwALHUjr3mcL8jkvbkFcqCQb1jiK+d4\n+uPXXJYyPw+PbjcgKn+Bbi9l3lKDWwj67UHYEB6ja8ApLiBw0+PwI5+XBgAUlHeV\neg7z7gAxqkLD4mfkcV//MfOBQyfBjNc+rZM5xepMDK/4zgktZhBPCciIUoUtyo8V\nnXsLeZ7DixgRU75uCav/7auwX1aEcFNvvOSg/c0vQi8ulTJqF1nLFS1CIGxmBAlM\n0L+SWpTYIxGqG8UmABPE\n=vJMj\n-----END PGP SIGNATURE-----\n",
        "payload": "tree a2df8ad65999ab7991ccad6911d3cda62e2435b3\nparent 8624b3452499ecb0f273c673db5c5c9e38a5707b\nparent 98f1e1474a4010bc1ed69fbccb52d551a20378e2\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1734374644 +0100\ncommitter GitHub <noreply@github.com> 1734374644 +0100\n\nMerge pull request #30 from flamenquin-hub-single/feature-test-advanced-filtering\n\nFeature test advanced filtering",
        "verified_at": "2024-12-16T18:49:07Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8624b3452499ecb0f273c673db5c5c9e38a5707b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8624b3452499ecb0f273c673db5c5c9e38a5707b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/8624b3452499ecb0f273c673db5c5c9e38a5707b"
      },
      {
        "sha": "98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/98f1e1474a4010bc1ed69fbccb52d551a20378e2"
      }
    ],
    "files": [
      {
        "sha": "3ac01b8f10bb827b95ce6876277e804d60170a31",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
        "patch": "@@ -17,3 +17,4 @@ jobs:\n     steps:\n       - uses: actions/checkout@v2\n       - uses: webiny/action-conventional-commits@v1.0.3\n+"
      },
      {
        "sha": "60ac481b376c09e6ea0c8b828c153b2740ae6395",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
        "patch": "@@ -111,7 +111,6 @@ def filter(self, query=\"\", sorting=\"newest\",\n \n                 if leaf_feature_name:\n                     leaf_feature_names = model.get_leaf_feature_names()\n-                    print(leaf_feature_name)\n                     if leaf_feature_name not in leaf_feature_names:\n                         continue\n "
      },
      {
        "sha": "ced80b7517d89a162d492da956699330c37a4fc4",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
        "patch": "@@ -164,7 +164,7 @@ <h3 class=\"h3 mb-3\">\n                         <div class=\"col-6\">\n \n                             <div>\n-                                Sort results by creation date\n+                                Sort results by creation date and dataset size\n                                 <label class=\"form-check\">\n                                     <input class=\"form-check-input\" type=\"radio\" value=\"newest\" name=\"sorting\"\n                                            checked=\"\">"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/explore/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py?ref=b52cf22de7746858eb04e9cce7e7dc7d6adabe24"
      },
      {
        "sha": "76f065ed0e5628ded1f600437129886e692c1912",
        "filename": "app/modules/explore/tests/locustfile.py",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py?ref=b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
        "patch": "@@ -0,0 +1,38 @@\n+from flask import json\n+from locust import HttpUser, TaskSet, task\n+from core.locust.common import get_csrf_token, fake\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class ExploreBehavior(TaskSet):\n+\n+    @task\n+    def explore(self):\n+        response = self.client.get(\"/explore\")\n+        if response.status_code != 200:\n+            print(f\"Explore failed: {response.status_code}\")\n+\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/explore\",\n+                                    headers={\"Content-Type\": \"application/json\"},\n+                                    data=json.dumps({\n+                                        \"min_files\": fake.random_int(min=1, max=5),\n+                                        \"max_files\": fake.random_int(min=2, max=6),\n+                                        \"max_depth\": fake.random_int(min=0, max=3),\n+                                        \"min_depth\": fake.random_int(min=2, max=6),\n+                                        \"min_leaf_count\": fake.random_int(min=0, max=10),\n+                                        \"max_leaf_count\": fake.random_int(min=5, max=15),\n+                                        \"min_av_branching_factor\": fake.random_int(min=0, max=2),\n+                                        \"max_av_branching_factor\": fake.random_int(min=1, max=4),\n+                                        \"csrf_token\": csrf_token\n+                                    }))\n+        if response.status_code != 200:\n+            print(f\"Filtering failed: {response.status_code}\")\n+\n+\n+class ExploreUser(HttpUser):\n+    tasks = [ExploreBehavior]\n+    min_wait = 3000\n+    max_wait = 7000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "4e155914f9dbbabc2336450f156f1534d51a3c3d",
        "filename": "app/modules/explore/tests/test_selenium.py",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py?ref=b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
        "patch": "@@ -0,0 +1,74 @@\n+import pytest\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.common.exceptions import TimeoutException, NoSuchElementException\n+from core.selenium.common import initialize_driver, close_driver\n+import time\n+\n+\n+def test_check_smallest_first():\n+    driver = initialize_driver()\n+    try:\n+        driver.get(\"http://localhost:5000/explore\")\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.XPATH, \"//input[@value='filesize_asc']\"))\n+        )\n+        driver.execute_script(\"arguments[0].click();\", results_container)\n+        time.sleep(3)\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"results\"))\n+        )\n+        first_result = WebDriverWait(results_container, 10).until(\n+            EC.presence_of_element_located((By.CSS_SELECTOR, \"div:nth-child(1)\"))\n+        )\n+        dataset_name = first_result.text\n+\n+        assert \"Sample dataset 4\" in dataset_name, f\"Test failed: Expected 'Sample dataset 4', but got '{dataset_name}'\"\n+        print(\"Test passed: The first dataset is 'Sample dataset 4'.\")\n+\n+    except TimeoutException:\n+        pytest.fail(\"Error: Timeout while waiting for elements to load.\")\n+    except NoSuchElementException:\n+        pytest.fail(\"Error: Unable to locate the required element.\")\n+    except AssertionError as e:\n+        pytest.fail(f\"Test failed: {e}\")\n+\n+    finally:\n+        close_driver(driver)\n+\n+\n+def test_check_largest_first():\n+    driver = initialize_driver()\n+    try:\n+        driver.get(\"http://localhost:5000/explore\")\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.XPATH, \"//input[@value='filesize_desc']\"))\n+        )\n+        driver.execute_script(\"arguments[0].click();\", results_container)\n+        time.sleep(3)\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"results\"))\n+        )\n+        first_result = WebDriverWait(results_container, 10).until(\n+            EC.presence_of_element_located((By.CSS_SELECTOR, \"div:nth-child(1)\"))\n+        )\n+        dataset_name = first_result.text\n+\n+        assert \"Sample dataset 2\" in dataset_name, f\"Test failed: Expected 'Sample dataset 2', but got '{dataset_name}'\"\n+        print(\"Test passed: The first dataset is 'Sample dataset 2'.\")\n+\n+    except TimeoutException:\n+        pytest.fail(\"Error: Timeout while waiting for elements to load.\")\n+    except NoSuchElementException:\n+        pytest.fail(\"Error: Unable to locate the required element.\")\n+    except AssertionError as e:\n+        pytest.fail(f\"Test failed: {e}\")\n+\n+    finally:\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_check_smallest_first()\n+test_check_largest_first()"
      },
      {
        "sha": "4d5c6df3f18720dcb307ee18edf67c413e3a5a4e",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "added",
        "additions": 133,
        "deletions": 0,
        "changes": 133,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b52cf22de7746858eb04e9cce7e7dc7d6adabe24/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=b52cf22de7746858eb04e9cce7e7dc7d6adabe24",
        "patch": "@@ -0,0 +1,133 @@\n+import pytest\n+from app.modules.explore.services import ExploreService\n+from app.modules.auth.seeders import AuthSeeder\n+from app.modules.dataset.seeders import DataSetSeeder\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Fixture that sets up the test environment by initializing necessary data:\n+    - Seeds users via AuthSeeder.\n+    - Seeds datasets via DataSetSeeder.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        users = AuthSeeder()\n+        users.run()\n+\n+        seeder = DataSetSeeder()\n+        seeder.run()\n+\n+    yield test_client\n+\n+\n+def test_filtering_service_file_count(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the number of files within the specified range (0 to 10).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_files=0, max_files=10)\n+    expected_dataset_count = 4  # Expected all datasets, 4.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_num_of_leaf(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the number of leaf nodes within the specified range (2 to 6).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_leaf_count=2, max_leaf_count=6)\n+    expected_dataset_count = 1  # Expect only dataset 4, as it is the file \"file10.uvl,\" which has 6 leaves.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_check_filtering_service_no_results(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly filters all datasets\n+    based on the number of leaf nodes, as the maximum is lower than the minimum.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_leaf_count=300, max_leaf_count=299)\n+    expected_dataset_count = 0  # Expect no datasets.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_depth(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the depth within the specified range (3 to 10).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_depth=3, max_depth=10)\n+    expected_dataset_count = 3\n+    # Expect all datasets except dataset 3, as it is the file \"file10.uvl,\" which has a depth of 2.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_average_branching_factor(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the average branching factor within the specified range (0 to 2).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_av_branching_factor=0, max_av_branching_factor=2)\n+    expected_dataset_count = 2\n+    # Expect datasets \"sample dataset 2\" and \"sample dataset 4\" for the file \"file5.uvl\"\n+    # and \"file10.uvl\" as both files have an average branching factor of 2.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_leaf_feature_name(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the leaf feature name \"Server\".\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(leaf_feature_name=\"Server\")\n+    expected_dataset_count = 2\n+    # Expected datasets \"sample dataset 1\" and \"sample dataset 3\" for the files \"file1.uvl\"\n+    # and \"file9.uvl\" as they are identical and contain \"Server\" in the leaf feature name.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_core_feature_name(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the core feature name \"FitnessMonitor\".\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(core_feature_name=\"FitnessMonitor\")\n+    expected_dataset_count = 2\n+    # Expected datasets \"sample dataset 1\" and \"sample dataset 2\" for the files \"file2.uvl\"\n+    # and \"file5.uvl\" as they contain \"FitnessMonitor\" in the core feature name.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_check_sorting_smallest_first(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly sorts datasets\n+    based on the size, with smallest first.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets_sorted = explore_service.filter(sorting=\"filesize_asc\")\n+    first_ds = datasets_sorted[0]\n+    assert first_ds.name()==\"Sample dataset 4\", f\"Expected smallest dataset to be 'Sample dataset 4', but got '{first_ds.name()}' instead\"\n+\n+def test_check_sorting_largest_first(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly sorts datasets\n+    based on the size, with largest first.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets_sorted = explore_service.filter(sorting=\"filesize_desc\")\n+    first_ds = datasets_sorted[0]\n+    assert first_ds.name()==\"Sample dataset 2\", f\"Expected smallest dataset to be 'Sample dataset 2', but got '{first_ds.name()}' instead\"\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "98f1e1474a4010bc1ed69fbccb52d551a20378e2",
    "node_id": "C_kwDONDG85doAKDk4ZjFlMTQ3NGE0MDEwYmMxZWQ2OWZiY2NiNTJkNTUxYTIwMzc4ZTI",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "73189183+Danguepre@users.noreply.github.com",
        "date": "2024-12-16T18:39:27Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-16T18:39:27Z"
      },
      "message": "Merge branch 'develop' into feature-test-advanced-filtering",
      "tree": {
        "sha": "a2df8ad65999ab7991ccad6911d3cda62e2435b3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a2df8ad65999ab7991ccad6911d3cda62e2435b3"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/98f1e1474a4010bc1ed69fbccb52d551a20378e2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYHPfCRC1aQ7uu5UhlAAAqnQQACpMsrHwMtd6dqojZFzzJ42K\nkPx2E7hClNKbhuc3cZOy4epxUmjXWy3Qe/uga678qtenyZ2ddF2TNxERJ2kFfDwA\nKyvgCf6wvXbZ6v/OvS7oPCznv0+7VbCajqggCYFzAyda896A2CDAA5fikRdOlFCH\nm+7pSYFs95K7LyDnr6TQgn/GmaWITzT+xB9erprNnAwe0631OijRTaH4sbue1g27\ndflHVaoqp8a6sYHqOrtz3TEt1Fv158VYUsbHKdNbIRHQrc5/CUHO2QKqfrce98Z2\nVITyxFz5T+fED40neZikam8fGJWI+zqTviG8H7vBtYGXHht5l9i/CLx6NR2D0HJF\nMZrPX+LIACROEX5dka2wMA4CIEZvHrruIroyLlWVPwiLwqPStSTnX1QgPSD+ek9S\nXYsJiNxDIEXQJhgqx0in8d7XEAsNms90qNEQwEvUgQi90HbsHinnWV4UxlrfTwEo\nhrnw2C50R03/05rwfW8wzMYBTrIAy5I+6uiHbDRI+0aXsai9yIDgEGy/9tSjS4z/\n+NUXivHUgAtVR9wtfIqkmNz++UZ8osQ8oJ8/R0MD9J5q22FHYMGdmmx7v0fGfCBM\no9uT5VNp6VVO7A1qkFvH/BkgiN45kbKAh021Y9JgoRbWVxraSY+XkK+3mf98h+Hi\naDPK72cBL2h+wIJ0MO1z\n=G26f\n-----END PGP SIGNATURE-----\n",
        "payload": "tree a2df8ad65999ab7991ccad6911d3cda62e2435b3\nparent 532eff78c538769c71ae55949e46b052e89e52bb\nparent 8624b3452499ecb0f273c673db5c5c9e38a5707b\nauthor Danguepre <73189183+Danguepre@users.noreply.github.com> 1734374367 +0100\ncommitter GitHub <noreply@github.com> 1734374367 +0100\n\nMerge branch 'develop' into feature-test-advanced-filtering",
        "verified_at": "2024-12-16T18:39:30Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/98f1e1474a4010bc1ed69fbccb52d551a20378e2",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/98f1e1474a4010bc1ed69fbccb52d551a20378e2",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/98f1e1474a4010bc1ed69fbccb52d551a20378e2/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "532eff78c538769c71ae55949e46b052e89e52bb",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/532eff78c538769c71ae55949e46b052e89e52bb",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/532eff78c538769c71ae55949e46b052e89e52bb"
      },
      {
        "sha": "8624b3452499ecb0f273c673db5c5c9e38a5707b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8624b3452499ecb0f273c673db5c5c9e38a5707b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/8624b3452499ecb0f273c673db5c5c9e38a5707b"
      }
    ],
    "files": [
      {
        "sha": "3ac01b8f10bb827b95ce6876277e804d60170a31",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -16,4 +16,5 @@ jobs:\n     runs-on: ubuntu-latest\n     steps:\n       - uses: actions/checkout@v2\n-      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file\n+      - uses: webiny/action-conventional-commits@v1.0.3\n+"
      },
      {
        "sha": "b9ea75aabfdbeb0e5b637b8d0741cec8dc7d86a2",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -67,6 +67,7 @@ jobs:\n           ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n           GH_TOKEN: ${{ secrets.GH_TOKEN }}\n           GH_PAT: ${{ secrets.GH_PAT }}\n+          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}\n         run: |\n           curl \"$deploy_url\"\n       \n\\ No newline at end of file"
      },
      {
        "sha": "5da736f7ffdcb35e11a740078b764998001a201b",
        "filename": ".github/workflows/render_main.yml",
        "status": "added",
        "additions": 70,
        "deletions": 0,
        "changes": 70,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/.github%2Fworkflows%2Frender_main.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/.github%2Fworkflows%2Frender_main.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender_main.yml?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,70 @@\n+name: Deploy main branch to Render\n+\n+on:\n+    push:\n+      branches:\n+        - main\n+    pull_request:\n+      branches:\n+        - main\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_RENDER }}\n+          ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+          GH_TOKEN: ${{ secrets.GH_TOKEN }}\n+          GH_PAT: ${{ secrets.GH_PAT }}\n+        run: |\n+          curl \"$deploy_url\"\n+      "
      },
      {
        "sha": "c2f01a0ae80ec18e56cb1fc86e13b5ec720d1347",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -47,5 +47,6 @@ jobs:\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n         ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+        WORKING_DIR: \"\"\n       run: |\n         pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      },
      {
        "sha": "3572f8a686c870b5140ee42d0dcdaa070e302a32",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitignore?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -1,7 +1,6 @@\n .env\n __pycache__/\n .idea\n-uploads/\n app.log\n .DS_Store\n rosemary.egg-info/\n@@ -16,4 +15,7 @@ nginx.prod.ssl.conf\n .version\n entrypoint.sh\n deployments.log\n-test_file.txt\n\\ No newline at end of file\n+test_file.txt\n+uploads/\n+egc/\n+app.log.*"
      },
      {
        "sha": "fdd63b05e87cb4c63240ad04afb83e89340a1d1c",
        "filename": "app/__init__.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2F__init__.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -67,4 +67,4 @@ def inject_vars_into_jinja():\n     return app\n \n \n-app = create_app()\n+app = create_app()\n\\ No newline at end of file"
      },
      {
        "sha": "c8105b78321f80b32919280eedbd30d2feeed6e7",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 8,
        "deletions": 20,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -15,11 +15,11 @@\n user_profile_service = UserProfileService()\n \n app = Flask(__name__)\n-#app.config[\"SECRET_KEY\"] = \"SECRET KEY  \"\n token_admin = os.getenv(\"ORG_TOKEN_ADMIN\")\n+client_secret = os.getenv(\"CLIENT_SECRET\")\n \n-github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g',\n-                                        client_secret='00b92023ceb36020d4d0a7f34d5a583e2e386611')\n+\n+github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g', client_secret=client_secret)\n \n app.register_blueprint(github_blueprint, url_prefix='/github_login')\n \n@@ -117,7 +117,6 @@ def invite_user():\n \n     if response.status_code == 201:\n         return f\"Now {username} can join our github organization. Accept it in github. Once joined, you don't have to repeat this process.\"\n-        #return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n     \n     elif response.status_code == 404:\n         return jsonify({\"error\": f\"Username {username} not found\"}), 404\n@@ -153,19 +152,8 @@ def crear_repo():\n     \n     except subprocess.CalledProcessError as e:\n         \n-        if e.returncode == 127:\n-            return '''\n-                The command 'gh' is not recognized. Please install GitHub CLI by following these steps in your command line:\n-\n-                    1. Update your package list:\n-                sudo apt update\n-                \n-                    2. Install the GitHub CLI:\n-                sudo apt install gh\n-                \n-                    3. You can verify the installation:\n-                gh --version\n-                '''\n-        \n-        return f\"Repository '{username}' is already created. Now, always you are sync with github, you can push from here your datasets or models to github.\"\n-    \n+        return (\n+            f\"Something went wrong, it may be caused by:<br>\"\n+            f\"1) Repository '{username}' is already created. Don't worry, now always you are sync with github, you can push from here your datasets or models to github.<br>\"\n+            f\"2) If you are a developer on localhost, you will have to give administrator permission.\"\n+        )    "
      },
      {
        "sha": "e4637074898a1a93c1a06f57ccd6ac82c64c8065",
        "filename": "app/modules/auth/tests/locustfile.py",
        "status": "modified",
        "additions": 52,
        "deletions": 1,
        "changes": 53,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -1,4 +1,5 @@\n from locust import HttpUser, TaskSet, task\n+import requests\n from core.locust.common import get_csrf_token, fake\n from core.environment.host import get_host_for_locust_testing\n \n@@ -51,8 +52,58 @@ def login(self):\n             print(f\"Login failed: {response.status_code}\")\n \n \n+class InviteBehavior(TaskSet):\n+    def on_start(self):\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def invite_user(self):\n+        github_user_response = requests.get(\"https://api.github.com/user\", headers={\n+            \"Authorization\": \"token example_valid_token\",\n+            \"Accept\": \"application/vnd.github.v3+json\"\n+        })\n+\n+        if github_user_response.status_code != 200:\n+            print(f\"Failed to fetch GitHub user info: {github_user_response.status_code}\")\n+\n+        username = github_user_response.json().get(\"login\")\n+        if not username:\n+            print(\"Failed to fetch GitHub username.\")\n+\n+        response = self.client.post(\"/invite\", json={\n+            \"github_username\": username\n+        })\n+        \n+        if response.status_code == 201:\n+            print(f\"Invitation sent successfully to {username}.\")\n+        elif response.status_code == 404:\n+            print(f\"GitHub user {username} not found.\")\n+        elif response.status_code == 422:\n+            print(f\"User {username} already belongs to the organization.\")\n+        else:\n+            print(f\"Invitation failed with status: {response.status_code} - {response.text}\")\n+\n+\n+\n+\n class AuthUser(HttpUser):\n-    tasks = [SignupBehavior, LoginBehavior]\n+    tasks = [SignupBehavior, LoginBehavior, InviteBehavior]\n     min_wait = 5000\n     max_wait = 9000\n     host = get_host_for_locust_testing()\n+    \n+    "
      },
      {
        "sha": "729195481b361557670716d39a2979257d9a1374",
        "filename": "app/modules/auth/tests/test_unit.py",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -1,3 +1,4 @@\n+from unittest.mock import MagicMock, patch\n import pytest\n from flask import url_for\n \n@@ -117,3 +118,39 @@ def test_service_create_with_profile_fail_no_password(clean_database):\n \n     assert UserRepository().count() == 0\n     assert UserProfileRepository().count() == 0\n+    \n+    \n+    \n+@patch('flask_dance.contrib.github.github')  \n+def test_redirect_to_login(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(authorized=False)\n+\n+    response = test_client.get('/gitlogin')\n+\n+    assert response.status_code == 302\n+    assert \"/github\" in response.location, f\"Expected redirection to github, got {response.request.path}\"\n+    \n+    \n+\n+@patch('flask_dance.contrib.github.github')\n+def test_invite_user_no_sync_error(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(ok=False)\n+\n+    response = test_client.post('/invite')\n+\n+    assert response.status_code == 200\n+    assert b\"First sync your github account.\" in response.data\n+\n+\n+@patch('flask_dance.contrib.github.github')\n+def test_create_repo_no_sync_error(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(ok=False)\n+\n+    response = test_client.post('/create_repo')\n+\n+    assert response.status_code == 200\n+    assert b\"First sync your github account.\" in response.data\n+    \n+\n+\n+"
      },
      {
        "sha": "0b7d1cc88c4b7e7859e7dab081dcdaa0c8395a97",
        "filename": "app/modules/dataset/UVLCustomLexer.py",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,97 @@\n+import re\n+from .UVLPythonLexer import UVLPythonLexer\n+\n+from .UVLPythonParser import UVLPythonParser\n+from antlr4.Token import Token\n+from antlr4.Token import CommonToken\n+\n+class UVLCustomLexer(UVLPythonLexer):\n+   \n+    def __init__(self, input_stream):\n+        super().__init__(input_stream)\n+        self.tokens = []\n+        self.indents = []\n+        self.opened = 0\n+        self.lastToken = None\n+        \n+    def emitToken(self, t):\n+        super().emitToken(t)\n+        self.tokens.append(t)  \n+\n+    def nextToken(self):\n+        # Check if the end-of-file is ahead and there are still some DEDENTS expected.\n+        if self._input.LA(1) == Token.EOF and len(self.indents) != 0:\n+            # Remove any trailing EOF tokens from our buffer.\n+            while len(self.tokens) > 0 and self.tokens[-1].type == Token.EOF:\n+                del self.tokens[-1]\n+\n+            # First emit an extra line break that serves as the end of the statement.\n+            self.emitToken(self.common_token(UVLPythonLexer.NEWLINE, \"\\n\"));\n+\n+\n+            # Now emit as much DEDENT tokens as needed.\n+            while len(self.indents) != 0:\n+                self.emitToken(self.create_dedent())\n+                del self.indents[-1]              \n+            # Put the EOF back on the token stream.\n+            self.emitToken(self.common_token(Token.EOF, \"<EOF>\"));\n+\n+        next_token = super().nextToken()\n+\n+        if next_token.channel == Token.DEFAULT_CHANNEL:\n+            # Keep track of the last token on the default channel.\n+            self.lastToken = next_token\n+\n+        return self.tokens.pop(0) if len(self.tokens) > 0 else next_token\n+\n+    def create_dedent(self):\n+        dedent = self.common_token(self.DEDENT, \"\")\n+        dedent.line = self.lastToken.line\n+        return dedent\n+\n+    def common_token(self, type, text):\n+        stop = self.getCharIndex() - 1\n+        start = stop - len(text) + 1 if text else stop\n+        return CommonToken(self._tokenFactorySourcePair, type, Token.DEFAULT_CHANNEL, start, stop)\n+\n+    @staticmethod\n+    def getIndentationCount(spaces):\n+        count = 0\n+        for ch in spaces:\n+            if ch == '\\t':\n+                count += 8 - (count % 8)\n+            else:  # A normal space char.\n+                count += 1\n+        return count\n+    \n+    def skipToken(self):\n+        self.skip()\n+\n+    def atStartOfInput(self):\n+        return self._interp.column == 0 and self._interp.line == 1\n+    \n+    def handleNewline(self):\n+      new_line = re.sub(r\"[^\\r\\n\\f]+\", \"\", self._interp.getText(self._input)) #.replaceAll(\"[^\\r\\n\\f]+\", \"\")\n+      spaces = re.sub(r\"[\\r\\n\\f]+\", \"\", self._interp.getText(self._input)) #.replaceAll(\"[\\r\\n\\f]+\", \"\")\n+      next = self._input.LA(1)\n+\n+      if self.opened > 0 or next == '\\r' or next == '\\n' or next == '\\f' or next == '#':\n+        self.skip()\n+      else:\n+        self.emitToken(self.common_token(self.NEWLINE, new_line))\n+\n+        indent = self.getIndentationCount(spaces)\n+        if len(self.indents) == 0:\n+            previous = 0\n+        else:\n+            previous = self.indents[-1]\n+\n+        if indent == previous:\n+            self.skip()\n+        elif indent > previous:\n+            self.indents.append(indent)\n+            self.emitToken(self.common_token(UVLPythonParser.INDENT, spaces))\n+        else:\n+            while len(self.indents) > 0 and self.indents[-1] > indent:\n+                self.emitToken(self.create_dedent())\n+                del self.indents[-1]\n\\ No newline at end of file"
      },
      {
        "sha": "26b18c2644779529b71f900e01adaeeccb9e7aec",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 62,
        "deletions": 122,
        "changes": 184,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -117,7 +117,11 @@ var currentId = 0;\n \t}\n \n         function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n+\t    if (document.getElementById(\"upload_button\")) {\n+            \tdocument.getElementById(\"upload_button\").style.display = \"block\";\n+\t    } else {\n+\t\tdocument.getElementById(\"check_model_button\").style.display = \"block\";\n+\t    }\n             document.getElementById(\"loading\").style.display = \"none\";\n         }\n \n@@ -139,152 +143,75 @@ var currentId = 0;\n \n         window.onload = function () {\n \n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n+\t\ttest_zenodo_connection();\n \n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n-\n-        function downloadDataset(datasetId, format) {\n-            const url = `/dataset/download/${datasetId}/${format}`;\n-            window.location.href = url;\n-        }\n-        \n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n-\t\t\t\tconsole.log(\"hi\");\n \t\t\t\tclean_upload_errors();\n \t\t\t\tshow_loading(\"check\");\n \n-\t\t\t\t\n+\n \t\t\t\tfetch('/dataset/check', {\n \t\t\t\t\tmethod: 'POST',\n \t\t\t\t\tbody: ''\n \t\t\t\t})\n \t\t\t\t\t.then(response => {\n+\t\t\t\t\t\tlet model = document.getElementById('rendered_model')\n+\t\t\t\t\t\twhile (model.firstChild) {\n+\t\t\t\t\t\t\tmodel.removeChild(model.firstChild)\n+\t\t\t\t\t\t};\n \t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\tlet first_row = document.createElement('p');\n+\t\t\t\t\t\t\tfirst_row.bottom_margin = '15';\n+\t\t\t\t\t\t\tfirst_row.textContent = 'This model contains no errors. Here\\'s the model:';\t\n+\t\t\t\t\t\t\tmodel.appendChild(first_row);\n \t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n \t\t\t\t\t\t\tresponse.json().then(data => {\n-\t\t\t\t\t\t\t\tconsole.log(data.message);\n-\t\t\t\t\t\t\t\t//window.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\tfor (let i=0;i<data.message.length;i++) {\n+\t\t\t\t\t\t\t\t\tlet row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\trow.style.margin = '0';\n+\t\t\t\t\t\t\t\t\trow.style.padding = '0';\n+\t\t\t\t\t\t\t\t\tlet row_text = data.message[i];\n+\t\t\t\t\t\t\t\t\trow_text = row_text.replace(/\\s/g, '\\u00A0');\n+\t\t\t\t\t\t\t\t\trow.textContent = row_text;\n+\t\t\t\t\t\t\t\t\tmodel.appendChild(row);\n+\t\t\t\t\t\t\t\t};\n+\t\t\t\t\t\t\t\tmodel.style.display = 'block';\n+\t\t\t\t\t\t\t\thide_loading();\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tresponse.json().then(data => {\n-\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.error);\n+\t\t\t\t\t\t\t\tif (data.syntax) {\n+\t\t\t\t\t\t\t\t\tlet first_row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\tfirst_row.bottom_margin = '15';\n+\t\t\t\t\t\t\t\t\tfirst_row.top_margin = '15';\n+\t\t\t\t\t\t\t\t\tfirst_row.textContent = 'Here\\'s the model with the error highlighted:';\t\n+\t\t\t\t\t\t\t\t\tmodel.appendChild(first_row);\n+\t\t\t\t\t\t\t\t\tfor (let i=0;i<data.message.length;i++) {\n+\t\t\t\t\t\t\t\t\t\tlet row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\t\trow.style.margin = '0';\n+\t\t\t\t\t\t\t\t\t\trow.style.padding = '0';\n+\t\t\t\t\t\t\t\t\t\tlet row_text = data.message[i];\n+\t\t\t\t\t\t\t\t\t\trow_text = row_text.replace(/\\s/g, '\\u00A0');\n+\t\t\t\t\t\t\t\t\t\trow.textContent = row_text;\n+\t\t\t\t\t\t\t\t\t\tmodel.appendChild(row);\n+\t\t\t\t\t\t\t\t\t};\n+\t\t\t\t\t\t\t\t};\n \t\t\t\t\t\t\t\thide_loading();\n-\n-\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\t\t\t\t\t\t\t\tif (data.syntax) {\n+\t\t\t\t\t\t\t\t\twrite_upload_error(data.error);\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\t\t\t\t\t\t\t\t};\n \n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t})\n \t\t\t\t\t.catch(error => {\n \t\t\t\t\t\tconsole.error('Error in POST request:', error);\n \t\t\t\t\t});\n-\t\t\t\tconsole.log(\"yeah\")\n \n \t\t\t});\n \t\t}\n@@ -387,9 +314,22 @@ var currentId = 0;\n \n \n \t\t\t});\n-\t\t}\n+\t\t};\n+\t};\n+\n \n \n+function isValidOrcid(orcid) {\n+\tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+\treturn orcidRegex.test(orcid);\n+}\n+\n+function downloadDataset(datasetId, format) {\n+\tconst url = `/dataset/download/${datasetId}/${format}`;\n+\twindow.location.href = url;\n+}\n+        \n+\t\t\n function isValidOrcid(orcid) {\n \tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n \treturn orcidRegex.test(orcid);"
      },
      {
        "sha": "03c2e1a6418ec2dc70695cdfa30b36d1d71ebff5",
        "filename": "app/modules/dataset/parser.py",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Fparser.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Fparser.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fparser.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,62 @@\n+from antlr4 import CommonTokenStream, FileStream\n+from uvl.UVLCustomLexer import UVLCustomLexer\n+from uvl.UVLPythonParser import UVLPythonParser\n+from antlr4.error.ErrorListener import ErrorListener\n+\n+class CustomErrorListener(ErrorListener):\n+    def syntaxError(self, recognizer, offendingSymbol, line, column, msg, e):\n+        # If the error message contains a specific keyword related to tabulation, ignore it\n+        if \"\\\\t\" in msg:\n+            print(f\"The UVL has the following warning that prevents reading it :Line {line}:{column} - {msg}\")\n+            return\n+        else:\n+            # Otherwise, print the error (or handle it in another way)\n+            raise Exception(f\"The UVL has the following error that prevents reading it :Line {line}:{column} - {msg}\")\n+            \n+\n+def get_tree(argv):\n+    input_stream = FileStream(argv)\n+    lexer = UVLCustomLexer(input_stream)\n+    \n+    # Attach the custom error listener to the lexer\n+    lexer.removeErrorListeners()\n+    lexer.addErrorListener(CustomErrorListener())\n+\n+    stream = CommonTokenStream(lexer)\n+    parser = UVLPythonParser(stream)\n+    \n+    # Attach the custom error listener to the parser\n+    parser.removeErrorListeners()\n+    parser.addErrorListener(CustomErrorListener())\n+\n+    tree = parser.featureModel()\n+\n+    return tree\n+\n+\n+if __name__ == \"__main__\":\n+    import sys\n+\n+    # Check if the user provided a file argument\n+    if len(sys.argv) < 2:\n+        print(\"Usage: python script_name.py <path_to_uvl_file>\")\n+        sys.exit(1)\n+\n+    # Parse the provided file\n+    input_stream = FileStream(sys.argv[1])\n+    lexer = UVLCustomLexer(input_stream)\n+    \n+    # Attach the custom error listener to the lexer\n+    lexer.removeErrorListeners()\n+    lexer.addErrorListener(CustomErrorListener())\n+\n+    stream = CommonTokenStream(lexer)\n+    parser = UVLPythonParser(stream)\n+    \n+    # Attach the custom error listener to the parser\n+    parser.removeErrorListeners()\n+    parser.addErrorListener(CustomErrorListener())\n+\n+    tree = parser.featureModel()\n+    # Print the parse tree (optional)\n+    print(tree.toStringTree(recog=parser))"
      },
      {
        "sha": "56beffd37b451ca0fa3e8be2615fc56cddafe7e6",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 40,
        "deletions": 33,
        "changes": 73,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -26,8 +26,7 @@\n from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n from flask_dance.contrib.github import github\n-\n-\n+from .parser import get_tree\n logger = logging.getLogger(__name__)\n \n dataset_service = DataSetService()\n@@ -113,10 +112,14 @@ def check_dataset():\n         file_path = os.path.join(temp_folder, filename)\n         \n         with open(file_path) as f:\n-            indent = 0\n-            x = \"\".join([i for i in f])\n-            print(x)\n-        return jsonify({\"message\": x}),200\n+            x = [i.rstrip() for i in f]\n+        try:\n+            get_tree(file_path)\n+        except Exception as e:\n+            line = int(str(e).split(':')[1].split(' ')[-1])\n+            x[line-1] = x[line-1] + \"   <--- HERE'S THE ERROR\"\n+            return jsonify({\"message\":x,\"error\":str(e),\"syntax\":True}),400\n+        return jsonify({\"message\": x,\"error\":False}),200\n    \n     # setting things up for the checker to have only one file available\n     temp_folder = current_user.temp_folder()\n@@ -126,10 +129,7 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-@dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n-@login_required\n-def upload():\n-    file = request.files[\"file\"]\n+def upload_aux(file,check):\n     temp_folder = current_user.temp_folder()\n \n     if not file or not file.filename.endswith(\".uvl\"):\n@@ -156,7 +156,12 @@ def upload():\n         file.save(file_path)\n     except Exception as e:\n         return jsonify({\"message\": str(e)}), 500\n-\n+    if check:\n+        try:\n+            get_tree(file_path)\n+        except Exception as e:\n+            os.remove(file_path)\n+            return jsonify({\"message\": str(e),\"syntax\": True}),400\n     return (\n         jsonify(\n             {\n@@ -167,6 +172,19 @@ def upload():\n         200,\n     )\n \n+@dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n+@login_required\n+def upload():\n+    file = request.files[\"file\"]\n+    return upload_aux(file,True)\n+\n+@dataset_bp.route(\"/dataset/file/upload/check\", methods=[\"POST\"])\n+@login_required\n+def upload_check():\n+    file = request.files[\"file\"]\n+    return upload_aux(file,False)\n+\n+\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()\n@@ -293,8 +311,10 @@ def get_unsynchronized_dataset(dataset_id):\n         \"annote\": ds_meta_data.description\n     }\n     texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n-    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n-    \n+    if ds_meta_data.deposition_id:\n+        bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    else:\n+        bibtex_propiedades.pop(\"howpublished\")\n     lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n     lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n \n@@ -334,14 +354,13 @@ def commit(dataset_id):\n         \n         all_files = repository.get_all_files_for_dataset(dataset_id)\n         \n-        # Copiar archivos y a\u00f1adirlos al commit\n+        # Copiar archivos, llevarlos al directorio de git y stagearlos\n         for archivo in all_files:\n             ruta_archivo_origen = archivo.get_path()\n             ruta_destino_archivo = os.path.join(ruta_carpeta, os.path.basename(ruta_archivo_origen))\n             shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n             subprocess.run(f\"git add {os.path.relpath(ruta_destino_archivo, ruta_repositorio)}\", cwd=ruta_repositorio, check=True, shell=True)\n         \n-        # Realizar el commit y el push\n         subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n         subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n \n@@ -370,16 +389,15 @@ def commit_file(file_id):\n        \n         ruta_repositorio = f\"/app/uvl_git/{username}\"\n     \n-        # Configurar usuario de Git\n         subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n         subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n \n         # Configurar URL remota con el PAT\n-        token = os.getenv('GH_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n+        token = os.getenv('GH_PAT')\n         repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n         subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n \n-        # Obtener archivo y hacer commit\n+        # Obtener archivo y copiarlo al directorio de git\n         hubfile_repository = HubfileRepository()\n         hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n         ruta_archivo_origen = hubfile.get_path()\n@@ -397,18 +415,7 @@ def commit_file(file_id):\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n-@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n-def download_dataset_format(file_id, format):\n-    \"\"\"Endpoint to download dataset in the specified format.\n-    Formats supported: glencoe, splot, dimacs, zip.\n-    \"\"\"\n-    if format == \"glencoe\":\n-        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n-    elif format == \"splot\":\n-        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n-    elif format == \"dimacs\":\n-        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n-    elif format == \"zip\":\n-        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n-    else:\n-        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+@dataset_bp.route(\"/dataset/download/<int:dataset_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(dataset_id, format):\n+    \"\"\"Redirect to Flamapy's export_dataset endpoint.\"\"\"\n+    return redirect(url_for(\"flamapy.export_dataset\", dataset_id=dataset_id, format=format))"
      },
      {
        "sha": "e344337cbd0bb2f488c040d1559d8d601b8a9879",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "modified",
        "additions": 55,
        "deletions": 75,
        "changes": 130,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -1,140 +1,139 @@\n {% extends \"base_template.html\" %}\n-\n {% block title %}Check UVL model{% endblock %}\n-\n {% block content %}\n-\n     <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n \n+    <div class=\"row\">\n+        <div class=\"col-12 mb-3\">\n+            <div class=\"alert alert-warning\" role=\"alert\" id=\"test_zenodo_connection_error\" style=\"display: none\">\n+                <div class=\"alert-message\">\n+\n+                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n+                        connection to the Zenodo API</h4>\n+                    <p class=\"p-0 m-0\">\n+                        There seems to be some kind of problem with the Zenodo API and synchronization of your dataset\n+                        files may not be possible. We will save your files locally to eventually synchronize them with\n+                        Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n+                        anything about it.\n+                    </p>\n+                </div>\n+            </div>\n+        </div>\n+\n+    </div>\n+\n     {% if messages %}\n         <ul>\n             {% for message in messages %}\n                 <li>{{ message }}</li>\n             {% endfor %}\n         </ul>\n     {% endif %}\n-\n     <div class=\"row\">\n-\n         <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n-\n             <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n-\n             <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n                 \n \t\t{{ form.hidden_tag() }}\n-\n-\n                 <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n                     <div id=\"dropzone-text\"></div>\n                 </form>\n-\n                 <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n                     </span>\n-\n                 <ul class=\"mt-2\" id=\"file-list\"></ul>\n-\n                 <script>\n                     let dropzone = Dropzone.options.myDropzone = {\n-                        url: \"/dataset/file/upload\",\n+                        url: \"/dataset/file/upload/check\",\n                         paramName: 'file',\n                         maxFilesize: 10,\n                         acceptedFiles: '.uvl',\n                         init: function () {\n-\n \t\t\t\tlet fileList = document.getElementById('file-list');\n \t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n \t\t\t\tlet alerts = document.getElementById('alerts');\n \t\t\t\tthis.on('addedfile', function (file) {\n-\n \t\t\t\t\tlet ext = file.name.split('.').pop();\n \t\t\t\t\tif (ext !== 'uvl') {\n \t\t\t\t\t\tthis.removeFile(file);\n-\n \t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t\t\t}\n \t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n \t\t\t\t\t\talerts.appendChild(alert);\n \t\t\t\t\t\talerts.style.display = 'block';\n \t\t\t\t\t}\n-\t\t\t\t\tif (fileList.childElementCount > 0) {\n+\t\t\t\t\telse if (fileList.childElementCount > 0) {\n \t\t\t\t\t\tthis.removeFile(file);\n+\t\t\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t\t\t}\n \n \t\t\t\t\t\tlet alert = document.createElement('p');\n \t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n \t\t\t\t\t\talerts.appendChild(alert);\n \t\t\t\t\t\talerts.style.display = 'block';\n \t\t\t\t\t}\n                             });\n-\n                             this.on('success', function (file, response) {\n-\n                                 let dropzone = this;\n-\n                                 show_upload_dataset();\n-\n                                 console.log(\"File uploaded: \", response);\n                                 // actions when UVL model is uploaded\n                                 let listItem = document.createElement('li');\n                                 let h4Element = document.createElement('h4');\n                                 h4Element.textContent = response.filename;\n                                 listItem.appendChild(h4Element);\n-\n                                 // generate incremental id for form\n                                 let formUniqueId = generateIncrementalId();\n-\n                                /*\n                                     ##########################################\n                                     REMOVE BUTTON\n                                     ##########################################\n                                 */\n-\n                                 // remove button\n                                 let removeButton = document.createElement('button');\n                                 removeButton.innerHTML = 'Delete model';\n                                 removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n                                 removeButton.style.borderRadius = '5px';\n-\n                                 removeButton.addEventListener('click', function () {\n+\t\t\t\t    let model = document.getElementById('rendered_model')\n+\t\t\t\t    while (model.firstChild) {\n+\t\t\t\t\t    model.removeChild(model.firstChild)\n+\t\t\t\t    };\n                                     fileList.removeChild(listItem);\n                                     this.removeFile(file);\n-\n                                     // Ajax request\n                                     let xhr = new XMLHttpRequest();\n                                     xhr.open('POST', '/dataset/file/delete', true);\n                                     xhr.setRequestHeader('Content-Type', 'application/json');\n                                     xhr.onload = function () {\n                                         if (xhr.status === 200) {\n                                             console.log('Deleted file from server');\n-\n                                             if (dropzone.files.length === 0) {\n                                                 document.getElementById(\"upload_dataset\").style.display = \"none\";\n                                                 clean_upload_errors();\n                                             }\n-\n                                         }\n                                     };\n                                     xhr.send(JSON.stringify({file: file.name}));\n                                 }.bind(this));\n-\n                                 /*\n                                     ##########################################\n                                     APPEND BUTTONS\n                                     ##########################################\n                                 */\n                                 listItem.appendChild(removeButton);\n-\n                                 /*\n                                     ##########################################\n                                     UVL FORM\n                                     ##########################################\n                                 */\n-\n                                 // create specific form for UVL\n                                 let formContainer = document.createElement('div');\n                                 formContainer.id = formUniqueId + \"_form\";\n                                 formContainer.classList.add('uvl_form', \"mt-3\");\n                                 formContainer.style.display = \"none\";\n-\n                                 formContainer.innerHTML = `\n                                     <div class=\"row\">\n                                         <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n@@ -208,78 +207,59 @@ <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n                                         </div>\n                                     </div>\n                                     `;\n-\n                                 listItem.appendChild(formContainer);\n                                 fileList.appendChild(listItem);\n-\n                             });\n+                            this.on('addedfile', function (file) {\n \n-                            this.on('error', function (file, response) {\n-                                console.error(\"Error uploading file: \", response);\n-                                let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n-                                alerts.appendChild(alert);\n-                                alerts.style.display = 'block';\n-                            });\n+                                let ext = file.name.split('.').pop();\n+                                if (ext !== 'uvl') {\n+                                    this.removeFile(file);\n \n+                                    let alert = document.createElement('p');\n+                                    alert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t    if (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t    }\n+                                    alerts.appendChild(alert);\n+                                    alerts.style.display = 'block';\n+                                }\n+\n+                            });\n                         }\n                     };\n-\n-\n                 </script>\n-\n             </div>\n         </div>\n-\n     </div>\n-\n     <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n-\n         <div class=\"col-12\">\n-\n             <hr>\n-\n-            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n-\n+            <h1 class=\"h3 mb-3 mt-2\">Check model and render errors</h1>\n             <div style=\"padding-left: 2rem\">\n-\n                 <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n                     <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n-                    Upload dataset</button>\n-\n+                    Check</button>\n                 <div id=\"loading\" style=\"display: none\">\n                     <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n-                    Uploading dataset, please wait...\n+                    Uploading and checking model, please wait...\n                 </div>\n-\n                 <div class=\"row\">\n                     <div class=\"col-12 mb-3\">\n-\n                     </div>\n                 </div>\n-\n                 \n-                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n-\n-                    </span>\n-\n-                <script>\n-                    const upload_button = document.getElementById('check_model_button');\n-\t\t\tupload_button.disabled = false;\n-                </script>\n-\n-            </div>\n-\n-\n-\n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\"></span>\n+                <p class=\"p-0 m-0\" id=\"rendered_model\"></p>\n+\t    </div>\n+\t    <script>\n+\t\t    const upload_button = document.getElementById('check_model_button');\n+\t\t    upload_button.disabled = false;\n+\t    </script>\n \n         </div>\n-\n     </div>\n-\n-\n {% endblock %}\n-\n {% block scripts %}\n     <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n     <script src=\"{{ url_for('dataset.scripts') }}\"></script>"
      },
      {
        "sha": "b803f06d34fae75f4ed4f2cf088836bd347ec819",
        "filename": "app/modules/dataset/templates/dataset/upload_dataset.html",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -247,6 +247,9 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n \n                                     let alert = document.createElement('p');\n                                     alert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t    if (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t    }\n                                     alerts.appendChild(alert);\n                                     alerts.style.display = 'block';\n                                 }\n@@ -434,7 +437,20 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n                             this.on('error', function (file, response) {\n                                 console.error(\"Error uploading file: \", response);\n                                 let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n+\t\t\t\tif (response.syntax) {\n+                                \talert.textContent = 'UVL not valid: ' + file.name +'. Error: '+response.message;\n+\t\t\t\t} else {\n+\t\t\t\t\tif ( response!=\"You can't upload files of this type.\") {\n+\n+\t\t\t\t\t\talert.textContent = 'Something went wrong while saving the file, try again please';\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\talert.textContent = \"You can't upload files of this type.\";\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tthis.removeFile(file);\n+\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0]);\n+\t\t\t\t}\n                                 alerts.appendChild(alert);\n                                 alerts.style.display = 'block';\n                             });\n@@ -529,4 +545,4 @@ <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\">\n {% block scripts %}\n     <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n     <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n-{% endblock %}\n\\ No newline at end of file\n+{% endblock %}"
      },
      {
        "sha": "3940aa59758ec6e27c5aef6a1f49793dedf19ffd",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 10,
        "deletions": 12,
        "changes": 22,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -41,35 +41,33 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n-                <div class=\"mt-2\">\n                     <div class=\"btn-group\" role=\"group\">\n                         <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n                             <i data-feather=\"download\"></i> Download\n                         </button>\n                         <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='glencoe') }}\">\n                                     Glencoe\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='dimacs') }}\">\n                                     DIMACS\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='splot') }}\">\n                                     SPLOT\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n-                                    ZIP\n-                                </a>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">\n+                                    ZIP (Original UVLs)\n+                                </a>                                \n                             </li>\n                         </ul>\n-                    </div>\n-                </div>\n+                    </div>     \n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">\n@@ -191,7 +189,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n                 <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n-                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                <button id=\"bibtex_preview_btn\" onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                     <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n \n@@ -423,7 +421,7 @@ <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex\n                         style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n                         <i data-feather=\"download\"></i>\n                     </a>\n-                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                    <button id=\"bibtex_copy_btn\" onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n                         style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n                         <i data-feather=\"copy\"></i>\n                     </button>\n@@ -589,4 +587,4 @@ <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex\n     }\n </script>\n \n-{% endblock %}\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "275fbf9bd9d3ad0655d68861bc8799a8415e9560",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 101,
        "deletions": 7,
        "changes": 108,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -1,20 +1,114 @@\n-from locust import HttpUser, TaskSet, task\n+\n+import random\n+from locust import HttpUser, TaskSet, task, between\n from core.locust.common import get_csrf_token\n from core.environment.host import get_host_for_locust_testing\n \n \n class DatasetBehavior(TaskSet):\n     def on_start(self):\n-        self.dataset()\n+        \"\"\"Acci\u00f3n que se ejecuta al inicio del test.\"\"\"\n+        self.dataset_upload()\n \n     @task\n-    def dataset(self):\n+    def dataset_upload(self):\n+        \"\"\"Simula la carga de la p\u00e1gina de subida de datasets.\"\"\"\n         response = self.client.get(\"/dataset/upload\")\n         get_csrf_token(response)\n+        \n+        \n+class CommitDatasetBehavior(TaskSet):\n+    def on_start(self):\n+        \"\"\"Simulate user login before running the commit task.\"\"\"\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        \"\"\"Ensure the user is authenticated.\"\"\"\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}, {response.text}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def commit_dataset(self):\n+        dataset_id = random.randint(1, 10)\n+        response = self.client.post(f\"/dataset/commit/{dataset_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"Dataset {dataset_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"Dataset {dataset_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for dataset {dataset_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for dataset {dataset_id}: {response.status_code} - {response.text}\")\n+\n \n \n+class CommitFileBehavior(TaskSet):\n+    def on_start(self):\n+        \"\"\"Simulate user login before running the commit task.\"\"\"\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        \"\"\"Ensure the user is authenticated.\"\"\"\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}, {response.text}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+class DownloadDatasets(TaskSet):\n+    formats = {\n+        \"Glencoe\": \"glencoe\",\n+        \"SPLOT\": \"splot\",\n+        \"DIMACS\": \"dimacs\",\n+        \"ZIP\": \"zip\"\n+    }\n+\n+    @task\n+    def download_files(self):\n+        for dataset_id in self.dataset_ids:  # Itera sobre tus dataset_ids\n+            for format_name, format_value in self.formats.items():  # Itera sobre los formatos\n+                with self.client.get(\n+                    f\"/flamapy/export/dataset/{dataset_id}/{format_value}\",  # URL corregida\n+                    name=f\"Download {format_name}\",\n+                    allow_redirects=True,  # Sigue autom\u00e1ticamente las redirecciones\n+                    catch_response=True  # Captura la respuesta para an\u00e1lisis\n+                ) as response:\n+                    if response.status_code == 200:  # Descarga exitosa\n+                        response.success()\n+                    elif response.status_code == 302:  # Redirecci\u00f3n\n+                        response.success()  # Tratamos 302 como \u00e9xito\n+                    else:\n+                        response.failure(\n+                            f\"Failed to download {format_name} for dataset {dataset_id} \"\n+                            f\"with status code {response.status_code}\"\n+                        )\n+\n class DatasetUser(HttpUser):\n-    tasks = [DatasetBehavior]\n-    min_wait = 5000\n-    max_wait = 9000\n-    host = get_host_for_locust_testing()\n+    \"\"\"\n+    Clase principal que define los usuarios y su comportamiento.\n+    \"\"\"\n+    tasks = [CommitFileBehavior]  # Asigna la tarea de descarga\n+    min_wait = 5000  # Espera m\u00ednima de 5 segundos\n+    max_wait = 9000  # Espera m\u00e1xima de 9 segundos\n+    wait_time = between(5, 9)  # Espera aleatoria entre tareas\n+    host = \"http://localhost:5000\"  # La URL base de tu aplicaci\u00f3n\n\\ No newline at end of file"
      },
      {
        "sha": "2e2bee0c10bc622be92542708879256151e0f9db",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "added",
        "additions": 99,
        "deletions": 0,
        "changes": 99,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,99 @@\n+import os\n+import time\n+import glob\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.action_chains import ActionChains\n+from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.webdriver.chrome.options import Options\n+from selenium import webdriver\n+from core.selenium.common import close_driver\n+from core.environment.host import get_host_for_selenium_testing\n+\n+DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n+\n+\n+def initialize_driver(download_dir=None):\n+    options = Options()\n+    if download_dir:\n+        prefs = {\n+            \"download.default_directory\": download_dir,\n+            \"download.prompt_for_download\": False,\n+            \"directory_upgrade\": True\n+        }\n+        options.add_experimental_option(\"prefs\", prefs)\n+    driver = webdriver.Chrome(options=options)\n+    return driver\n+\n+\n+def clean_download_folder():\n+    \"\"\"Elimina todos los archivos previos en la carpeta de descargas.\"\"\"\n+    if os.path.exists(DOWNLOAD_DIR):\n+        for file in os.listdir(DOWNLOAD_DIR):\n+            file_path = os.path.join(DOWNLOAD_DIR, file)\n+            os.remove(file_path)\n+\n+\n+def is_file_downloaded_by_extension(extension, timeout=20, exact=False):\n+    \"\"\"\n+    Verifica si un archivo con una extensi\u00f3n espec\u00edfica ha sido descargado.\n+\n+    :param extension: Extensi\u00f3n del archivo o patr\u00f3n para b\u00fasqueda.\n+    :param timeout: Tiempo m\u00e1ximo de espera.\n+    :param exact: Si es True, busca archivos con nombre exacto. Si no, busca solo por extensi\u00f3n.\n+    \"\"\"\n+    for _ in range(timeout):\n+        files = glob.glob(os.path.join(DOWNLOAD_DIR, f\"{extension}\" if exact else f\"*{extension}\"))\n+        print(\"Archivos actuales en la carpeta:\", os.listdir(DOWNLOAD_DIR))  # Debug\n+        print(\"Coincidencias encontradas:\", files)  # Debug\n+        if files:\n+            return True\n+        time.sleep(1)\n+    return False\n+\n+\n+def test_download_datasets_index():\n+    \"\"\"Prueba la descarga de datasets desde el index en diferentes formatos.\"\"\"\n+    driver = initialize_driver(download_dir=DOWNLOAD_DIR)\n+    clean_download_folder()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+        driver.get(f\"{host}/\")  # P\u00e1gina index\n+        WebDriverWait(driver, 10).until(lambda d: d.execute_script(\"return document.readyState\") == \"complete\")\n+\n+        formats = {\n+            \"Glencoe\": \"_glencoe.zip\",\n+            \"SPLOT\": \"_splot.zip\",\n+            \"DIMACS\": \"_dimacs.zip\",\n+            \"ZIP\": \".zip\"  # Validar cualquier archivo con extensi\u00f3n .zip\n+        }\n+\n+        for format_name, file_extension in formats.items():\n+            print(f\"Probando descarga para el formato: {format_name}\")  # Debug\n+            download_button = WebDriverWait(driver, 10).until(\n+                EC.element_to_be_clickable((By.XPATH, \"//button[contains(@id, 'btnDownloadDropdown')]\"))\n+            )\n+            ActionChains(driver).move_to_element(download_button).click().perform()\n+\n+            dropdown_option = WebDriverWait(driver, 10).until(\n+                EC.element_to_be_clickable((By.XPATH, f\"//a[contains(@onclick, \\\"{format_name.lower()}\\\") or contains(text(), 'ZIP')]\"))\n+            )\n+            dropdown_option.click()\n+\n+            if format_name == \"ZIP\":\n+                # Validar cualquier archivo .zip descargado\n+                assert is_file_downloaded_by_extension(\".zip\"), f\"Archivo ZIP no descargado desde index.\"\n+            else:\n+                assert is_file_downloaded_by_extension(file_extension), f\"Archivo *{file_extension} no descargado desde index.\"\n+\n+            print(f\"Archivo *{file_extension} descargado correctamente.\")\n+            clean_download_folder()\n+\n+        print(\"Todos los archivos se descargaron correctamente desde el index.\")\n+    finally:\n+        close_driver(driver)\n+\n+\n+if __name__ == \"__main__\":\n+    test_download_datasets_index()\n\\ No newline at end of file"
      },
      {
        "sha": "7f2bcf42ace80c1743ddc5ab39335e96e6aaf4a4",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 425,
        "deletions": 0,
        "changes": 425,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -1,14 +1,44 @@\n import os\n import time\n+from flask import url_for\n+from datetime import datetime\n+from pathlib import Path\n \n+from selenium import webdriver\n from selenium.webdriver.common.by import By\n from selenium.webdriver.common.keys import Keys\n from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.common.exceptions import NoSuchElementException\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.webdriver.chrome.service import Service\n+from webdriver_manager.chrome import ChromeDriverManager\n \n from core.environment.host import get_host_for_selenium_testing\n from core.selenium.common import initialize_driver, close_driver\n \n \n+def get_driver_with_download_cwdir():\n+    # Initializes the browser options\n+    prefs = {\n+        \"download.default_directory\": os.getcwd(),\n+        \"download.directory_upgrade\": True,\n+        \"download.prompt_for_download\": False,\n+    }\n+    options = webdriver.ChromeOptions()\n+    options.add_experimental_option(\"prefs\", prefs)\n+\n+    driver_path = ChromeDriverManager().install()\n+\n+\n+    # Initialise the browser using WebDriver Manager\n+    chrome_driver_binary = os.path.join(os.path.dirname(driver_path), 'chromedriver')\n+    \n+    service = Service(chrome_driver_binary)\n+    \n+    \n+    driver = webdriver.Chrome(service=service, options=options)\n+    return driver\n+\n def wait_for_page_to_load(driver, timeout=4):\n     WebDriverWait(driver, timeout).until(\n         lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n@@ -25,6 +55,158 @@ def count_datasets(driver, host):\n         amount_datasets = 0\n     return amount_datasets\n \n+def has_datasets_synced(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//div[@class='card-body']//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets\n+\n+def has_datasets_unsynced(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//div[@class='card-body']//div[@class='card-body']//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets>0\n+\n+def exist_published_datasets(driver, host):\n+    driver.get(f\"{host}/explore\")\n+    wait_for_page_to_load(driver)\n+    try:\n+        amount_datasets = len(driver.find_element(By.ID, 'results').find_elements(By.CSS_SELECTOR, 'div.card'))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets>0\n+\n+def get_url_detalles(driver, host):\n+    if exist_published_datasets(driver, host):\n+        result = driver.find_element(By.ID, 'results').find_element(By.XPATH, '//div[@class=\"card\"]//a').get_attribute('href')\n+    else:\n+        # Open the login page\n+        driver.get(f\"{host}/login\")\n+        wait_for_page_to_load(driver)\n+\n+        # Find the username and password field and enter the values\n+        email_field = driver.find_element(By.NAME, \"email\")\n+        password_field = driver.find_element(By.NAME, \"password\")\n+\n+        email_field.send_keys(\"user1@example.com\")\n+        password_field.send_keys(\"1234\")\n+\n+        # Send the form\n+        password_field.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        if has_datasets_synced(driver, host): # tiene datasets publicados, usar esos\n+            result = driver.find_element(By.XPATH, \"//div[@class='card-body']//table//tbody//tr//td//a\").get_attribute('href')\n+        elif has_datasets_unsynced(driver, host): # solo tiene datasets sin publicar\n+            result = f\"{host}\" + driver.find_element(By.XPATH, \"//div[@class='card-body']//div[@class='card-body']//table//tbody//tr//td//a\").get_attribute('href')\n+        else: # No tiene datasets, crear uno\n+            # Count initial datasets\n+            initial_datasets = count_datasets(driver, host)\n+\n+            # Open the upload dataset\n+            driver.get(f\"{host}/dataset/upload\")\n+            wait_for_page_to_load(driver)\n+\n+            datos_dataset = {\n+                \"titulo\": \"Titulo prueba bibtex\",\n+                \"descripcion\": \"Descripcion prueba bibtex\",\n+                \"tags\": \"tag1,tag2\"\n+            }\n+            autores_dataset = [\n+                    {\"name\": \"AutorBibtex0\", \"affiliation\": \"Club0\",\"orcid\":\"0000-0000-0000-0000\"},\n+                    {\"name\": \"AutorBibtex1\", \"affiliation\": \"Club1\"},\n+                    {\"name\": \"AutorBibtex3\", \"affiliation\": \"Club3\"}\n+            ]\n+\n+            # Find basic info and UVL model and fill values\n+            title_field = driver.find_element(By.NAME, \"title\")\n+            title_field.send_keys(datos_dataset.get(\"titulo\"))\n+            desc_field = driver.find_element(By.NAME, \"desc\")\n+            desc_field.send_keys(datos_dataset.get(\"descripcion\"))\n+            tags_field = driver.find_element(By.NAME, \"tags\")\n+            tags_field.send_keys(datos_dataset.get(\"tags\"))\n+\n+            # Add two authors and fill\n+            add_author_button = driver.find_element(By.ID, \"add_author\")\n+            add_author_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+            add_author_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+            name_field0 = driver.find_element(By.NAME, \"authors-0-name\")\n+            name_field0.send_keys(autores_dataset[0].get(\"name\"))\n+            affiliation_field0 = driver.find_element(By.NAME, \"authors-0-affiliation\")\n+            affiliation_field0.send_keys(autores_dataset[0].get(\"affiliation\"))\n+            orcid_field0 = driver.find_element(By.NAME, \"authors-0-orcid\")\n+            orcid_field0.send_keys(autores_dataset[0].get(\"orcid\"))\n+\n+            name_field1 = driver.find_element(By.NAME, \"authors-1-name\")\n+            name_field1.send_keys(autores_dataset[1].get(\"name\"))\n+            affiliation_field1 = driver.find_element(By.NAME, \"authors-1-affiliation\")\n+            affiliation_field1.send_keys(autores_dataset[1].get(\"affiliation\"))\n+\n+            # Obt\u00e9n las rutas absolutas de los archivos\n+            file1_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file1.uvl\")\n+            file2_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file2.uvl\")\n+\n+            # Subir el primer archivo\n+            dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+            dropzone.send_keys(file1_path)\n+            wait_for_page_to_load(driver)\n+\n+            # Subir el segundo archivo\n+            dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+            dropzone.send_keys(file2_path)\n+            wait_for_page_to_load(driver)\n+\n+            # Add authors in UVL models\n+            show_button = driver.find_element(By.ID, \"0_button\")\n+            show_button.send_keys(Keys.RETURN)\n+            add_author_uvl_button = driver.find_element(By.ID, \"0_form_authors_button\")\n+            add_author_uvl_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+            name_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-name\")\n+            name_field.send_keys(\"AutorBibtex3\")\n+            affiliation_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-affiliation\")\n+            affiliation_field.send_keys(\"Club3\")\n+\n+            # Check I agree and send form\n+            check = driver.find_element(By.ID, \"agreeCheckbox\")\n+            check.send_keys(Keys.SPACE)\n+            wait_for_page_to_load(driver)\n+\n+            upload_btn = driver.find_element(By.ID, \"upload_button\")\n+            upload_btn.send_keys(Keys.RETURN)\n+            \n+            wait_for_page_to_load(driver)\n+            time.sleep(2)  # Force wait time\n+\n+            assert driver.current_url == f\"{host}/dataset/list\", \"Test failed!\"\n+\n+            # Count final datasets\n+            final_datasets = count_datasets(driver, host)\n+            assert final_datasets == initial_datasets + 1, \"Test failed!\"\n+            \n+            listado_unsync = driver.find_element(By.CLASS_NAME, \"row\") # TODO: encontrar el primer elemento de tipo tbody\n+            dataset_creado = listado_unsync.find_element(By.XPATH, \"//table//tbody//tr\")\n+            \n+            info_dataset_creado = dataset_creado.find_elements(By.TAG_NAME, \"td\")\n+\n+            title_matches = info_dataset_creado[0].find_element(By.TAG_NAME, 'a').text==datos_dataset.get(\"titulo\")\n+            desc_matches = info_dataset_creado[1].text==datos_dataset.get(\"descripcion\")\n+            pub_type_matches = info_dataset_creado[2].text==\"None\"\n+\n+            assert title_matches and desc_matches and pub_type_matches, \"Test failed!\"\n+            result = f\"{host}\" + info_dataset_creado[0].find_element(By.TAG_NAME, 'a').get_attribute('href')\n+    return result\n \n def test_upload_dataset():\n     driver = initialize_driver()\n@@ -130,6 +312,249 @@ def test_upload_dataset():\n         # Close the browser\n         close_driver(driver)\n \n+def test_bibtex_preview():\n+    driver = initialize_driver()\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LA PREVIEW MUESTRA EL DATASET EXPORTADO A BIBTEX CORRECTAMENTE\n+        contenido_bibtex = driver.find_element(By.ID, \"bibtexContent\").text\n+        assert contenido_bibtex is not None and contenido_bibtex!=\"None\", \"Test failed!\"\n+\n+        lineas = contenido_bibtex.splitlines()\n+\n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        \n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+def test_bibtex_copy():\n+    driver = initialize_driver()\n+    \n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LOS DATOS SE COPIAN CORRECTAMENTE EN FORMATO BIBTEX\n+        bibtex_copy_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_copy_btn']\")\n+        bibtex_copy_btn.click()\n+        time.sleep(2)\n+        \n+\n+        try:\n+            driver.find_element(By.XPATH, \"//a[@href='/logout']\")\n+        except NoSuchElementException: # No ha iniciado sesion\n+            driver.get(f\"{host}/login\")\n+            wait_for_page_to_load(driver)\n+            \n+            # Find the username and password field and enter the values\n+            email_field = driver.find_element(By.NAME, \"email\")\n+            password_field = driver.find_element(By.NAME, \"password\")\n+\n+            email_field.send_keys(\"user1@example.com\")\n+            password_field.send_keys(\"1234\")\n+\n+            # Send the form\n+            password_field.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+        # Open the upload dataset\n+        driver.get(f\"{host}/dataset/upload\")\n+        wait_for_page_to_load(driver)\n+\n+        desc_field = driver.find_element(By.NAME, \"desc\")\n+        desc_field.send_keys(Keys.LEFT_CONTROL, 'v')\n+        \n+        lineas = desc_field.get_attribute(\"value\").strip().splitlines()\n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+\n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+def test_bibtex_download():\n+    driver = get_driver_with_download_cwdir()\n+    \n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LOS DATOS SE DESCARGAN CORRECTAMENTE EN FORMATO BIBTEX\n+        bibtex_download_btn = driver.find_element(By.XPATH, \"//a[@id='bibtexDownloadButton']\")\n+        bibtex_download_btn.click()\n+        time.sleep(2)\n+        \n+        file_path = os.path.join(os.getcwd(), bibtex_download_btn.get_attribute('download'))\n+\n+        lineas = []\n+\n+        with open(file_path, 'r', encoding='utf-8') as archivo:\n+            lineas.extend(archivo.readlines())\n+        os.remove(file_path)\n+        \n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+        \n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n \n # Call the test function\n test_upload_dataset()\n+test_bibtex_preview()\n+test_bibtex_copy()\n+test_bibtex_download()\n\\ No newline at end of file"
      },
      {
        "sha": "124cfcf72bfbe3604302247f142bb0613bdd53d8",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 4,
        "deletions": 14,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -1,7 +1,5 @@\n import pytest\n from flask import url_for\n-from app.modules.dataset.routes import download_dataset_format\n-\n \n @pytest.fixture(scope=\"module\")\n def test_client(test_client):\n@@ -20,7 +18,7 @@ def test_download_glencoe_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/glencoe\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"glencoe\") in response.location\n \n \n def test_download_splot_redirect(test_client):\n@@ -29,7 +27,7 @@ def test_download_splot_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/splot\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"splot\") in response.location\n \n \n def test_download_dimacs_redirect(test_client):\n@@ -38,7 +36,7 @@ def test_download_dimacs_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/dimacs\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"dimacs\") in response.location\n \n \n def test_download_zip_redirect(test_client):\n@@ -47,12 +45,4 @@ def test_download_zip_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/zip\")\n     assert response.status_code == 302\n-    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n-\n-def test_download_invalid_format(test_client):\n-    \"\"\"\n-    Testea que se retorne un error 400 para un formato no soportado.\n-    \"\"\"\n-    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n-    assert response.status_code == 400\n-    assert response.json == {\"error\": \"Formato no soportado\"}\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n\\ No newline at end of file"
      },
      {
        "sha": "77dba20ebcd49a483100e4fc73b712128864295b",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 43,
        "deletions": 3,
        "changes": 46,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -1,11 +1,14 @@\n+import os\n+import zipfile\n+import tempfile\n import logging\n+\n+from flask import send_file, jsonify, redirect, url_for\n from app.modules.hubfile.services import HubfileService\n-from flask import send_file, jsonify\n from app.modules.flamapy import flamapy_bp\n+\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n-import tempfile\n-import os\n \n from antlr4 import CommonTokenStream, FileStream\n from uvl.UVLCustomLexer import UVLCustomLexer\n@@ -115,3 +118,40 @@ def to_cnf(file_id):\n     finally:\n         # Clean up the temporary file\n         os.remove(temp_file.name)\n+\n+@flamapy_bp.route('/flamapy/export_dataset/<int:dataset_id>/<string:format>', methods=['GET'])\n+def export_dataset(dataset_id, format):\n+    \"\"\"Export all UVL files in the dataset to the specified format and package as a ZIP.\"\"\"\n+    hubfile_service = HubfileService()\n+    files = hubfile_service.get_files_by_dataset_id(dataset_id)\n+\n+    if not files:\n+        return jsonify({\"error\": \"No files found for this dataset\"}), 404\n+\n+    with tempfile.TemporaryDirectory() as temp_dir:\n+        zip_filename = os.path.join(temp_dir, f\"dataset_{dataset_id}_{format}.zip\")\n+\n+        with zipfile.ZipFile(zip_filename, 'w') as zipf:\n+            for file in files:\n+                uvl_path = file.get_path()\n+                fm = UVLReader(uvl_path).transform()\n+\n+                # Transform the file to the desired format\n+                temp_file = tempfile.NamedTemporaryFile(delete=False, suffix=f\".{format}\")\n+                try:\n+                    if format == \"glencoe\":\n+                        GlencoeWriter(temp_file.name, fm).transform()\n+                    elif format == \"splot\":\n+                        SPLOTWriter(temp_file.name, fm).transform()\n+                    elif format == \"dimacs\":\n+                        sat = FmToPysat(fm).transform()\n+                        DimacsWriter(temp_file.name, sat).transform()\n+                    else:\n+                        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+\n+                    # Add transformed file to ZIP\n+                    zipf.write(temp_file.name, arcname=f\"{file.name}.{format}\")\n+                finally:\n+                    os.remove(temp_file.name)\n+\n+        return send_file(zip_filename, as_attachment=True, download_name=f\"dataset_{dataset_id}_{format}.zip\")\n\\ No newline at end of file"
      },
      {
        "sha": "40b4d5e3509a247e2d035c5099f5ce170695a430",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -26,6 +26,16 @@ def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n     \n     def get_hubfile_by_id(self, hubfile_id: int) -> Hubfile:\n         return db.session.query(Hubfile).filter(Hubfile.id == hubfile_id).first()\n+    \n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos relacionados con un dataset.\"\"\"\n+        dataset = DataSet.query.get(dataset_id)\n+        if not dataset:\n+            return []\n+\n+        # Extrae todos los archivos de los FeatureModels relacionados\n+        files = [file for fm in dataset.feature_models for file in fm.files]\n+        return files\n \n \n class HubfileViewRecordRepository(BaseRepository):\n@@ -43,4 +53,4 @@ def __init__(self):\n \n     def total_hubfile_downloads(self) -> int:\n         max_id = self.model.query.with_entities(func.max(self.model.id)).scalar()\n-        return max_id if max_id is not None else 0\n+        return max_id if max_id is not None else 0\n\\ No newline at end of file"
      },
      {
        "sha": "1d61da9482d23b082661e52920a34f734c13d12b",
        "filename": "app/modules/hubfile/services.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fhubfile%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fhubfile%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Fservices.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -16,6 +16,11 @@ def __init__(self):\n         self.hubfile_view_record_repository = HubfileViewRecordRepository()\n         self.hubfile_download_record_repository = HubfileDownloadRecordRepository()\n \n+    # Nuevo m\u00e9todo para obtener archivos por dataset\n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos UVL asociados a un dataset.\"\"\"\n+        return self.repository.get_files_by_dataset_id(dataset_id)\n+\n     def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n         return self.repository.get_owner_user_by_hubfile(hubfile)\n \n@@ -46,4 +51,4 @@ def total_hubfile_downloads(self) -> int:\n \n class HubfileDownloadRecordService(BaseService):\n     def __init__(self):\n-        super().__init__(HubfileDownloadRecordRepository())\n+        super().__init__(HubfileDownloadRecordRepository())\n\\ No newline at end of file"
      },
      {
        "sha": "3e8b608a1a2409a516addb103772a79cfe7c30be",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -99,7 +99,7 @@ <h2>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'glencoe')\">Glencoe</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'splot')\">SPLOT</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'dimacs')\">DIMACS</a></li>\n-                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'zip')\">ZIP</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">ZIP</a></li>\n                                     </ul>\n                                 </div>                                \n                             </div>"
      },
      {
        "sha": "046d16ed02077bce70fa94658634c90c5525ac89",
        "filename": "app/modules/zenodo/services.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fzenodo%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fmodules%2Fzenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Fservices.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -27,11 +27,11 @@ def get_zenodo_url(self):\n         ZENODO_API_URL = \"\"\n \n         if FLASK_ENV == \"development\":\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n         elif FLASK_ENV == \"production\":\n             ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://zenodo.org/api/deposit/depositions\")\n         else:\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n \n         return ZENODO_API_URL\n \n@@ -83,7 +83,6 @@ def test_full_connection(self) -> Response:\n                 \"creators\": [{\"name\": \"John Doe\"}],\n             }\n         }\n-\n         response = requests.post(self.ZENODO_API_URL, json=data, params=self.params, headers=self.headers)\n \n         if response.status_code != 201:"
      },
      {
        "sha": "65ffa266d710b0ee8f02416aeb1319e5f0aed671",
        "filename": "app/static/js/scripts.js",
        "status": "modified",
        "additions": 4,
        "deletions": 244,
        "changes": 248,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fstatic%2Fjs%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Fstatic%2Fjs%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fscripts.js?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -1,246 +1,6 @@\n-var currentId = 0;\n-        var amount_authors = 0;\n-\n-        function show_upload_dataset() {\n-            document.getElementById(\"upload_dataset\").style.display = \"block\";\n-        }\n-\n-        function generateIncrementalId() {\n-            return currentId++;\n-        }\n-\n-        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n-            let fieldWrapper = document.createElement('div');\n-            fieldWrapper.className = className;\n-\n-            let label = document.createElement('label');\n-            label.className = 'form-label';\n-            label.for = name;\n-            label.textContent = text;\n-\n-            let field = document.createElement('input');\n-            field.name = name;\n-            field.className = 'form-control';\n-\n-            fieldWrapper.appendChild(label);\n-            fieldWrapper.appendChild(field);\n-            newAuthor.appendChild(fieldWrapper);\n-        }\n-\n-        function addRemoveButton(newAuthor) {\n-            let buttonWrapper = document.createElement('div');\n-            buttonWrapper.className = 'col-12 mb-2';\n-\n-            let button = document.createElement('button');\n-            button.textContent = 'Remove author';\n-            button.className = 'btn btn-danger btn-sm';\n-            button.type = 'button';\n-            button.addEventListener('click', function (event) {\n-                event.preventDefault();\n-                newAuthor.remove();\n-            });\n-\n-            buttonWrapper.appendChild(button);\n-            newAuthor.appendChild(buttonWrapper);\n-        }\n-\n-        function createAuthorBlock(idx, suffix) {\n-            let newAuthor = document.createElement('div');\n-            newAuthor.className = 'author row';\n-            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n-\n-            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n-            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n-            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n-            addRemoveButton(newAuthor);\n-\n-            return newAuthor;\n-        }\n-\n-        function check_title_and_description() {\n-            let titleInput = document.querySelector('input[name=\"title\"]');\n-            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n-\n-            titleInput.classList.remove(\"error\");\n-            descriptionTextarea.classList.remove(\"error\");\n-            clean_upload_errors();\n-\n-            let titleLength = titleInput.value.trim().length;\n-            let descriptionLength = descriptionTextarea.value.trim().length;\n-\n-            if (titleLength < 3) {\n-                write_upload_error(\"title must be of minimum length 3\");\n-                titleInput.classList.add(\"error\");\n-            }\n-\n-            if (descriptionLength < 3) {\n-                write_upload_error(\"description must be of minimum length 3\");\n-                descriptionTextarea.classList.add(\"error\");\n-            }\n-\n-            return (titleLength >= 3 && descriptionLength >= 3);\n-        }\n-\n-\n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n-\n-        document.addEventListener('click', function (event) {\n-            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n-\n-                let authorsButtonId = event.target.id;\n-                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n-                let authors = document.getElementById(authorsId);\n-                let id = authorsId.replace(\"_form_authors\", \"\")\n-                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n-                authors.appendChild(newAuthor);\n-\n-            }\n-        });\n-\n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n-\n-        function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n-            document.getElementById(\"loading\").style.display = \"none\";\n-        }\n-\n-        function clean_upload_errors() {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            upload_error.innerHTML = \"\";\n-            upload_error.style.display = 'none';\n-        }\n-\n-        function write_upload_error(error_message) {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            let alert = document.createElement('p');\n-            alert.style.margin = '0';\n-            alert.style.padding = '0';\n-            alert.textContent = 'Upload error: ' + error_message;\n-            upload_error.appendChild(alert);\n-            upload_error.style.display = 'block';\n-        }\n-\n-        window.onload = function () {\n-\n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n-\n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n-\n-        function downloadDataset(datasetId, format) {\n-            const url = `/dataset/download/${datasetId}/${format}`;\n-            window.location.href = url;\n-        }\n+    function downloadDataset(datasetId, format) {\n+        const url = `/dataset/download/${datasetId}/${format}`;\n+        window.location.href = url;\n+    }\n         \n         \n\\ No newline at end of file"
      },
      {
        "sha": "dbca6f3d31a8c62779ec70dd7c38e3c30e4b6915",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -110,15 +110,12 @@\n                                 class=\"align-middle\">My datasets</span>\n                         </a>\n                     </li>\n-\n-\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.list_dataset' else '' }}\">\n+\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.check_dataset' else '' }}\">\n                         <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n                             <i class=\"align-middle\" data-feather=\"list\"></i> <span\n                                 class=\"align-middle\">Check model</span>\n                         </a>\n-                    </li>\n-\n-\n+                    </li>\t\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>"
      },
      {
        "sha": "54a33e2de92fe07a170425aae5155b7722058055",
        "filename": "fakenodo/__init__.py",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2F__init__.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,8 @@\n+from fakenodo.app.routes import api_bp\n+from flask import Flask\n+\n+def create_app():\n+    app = Flask(__name__)\n+    with app.app_context():\n+        app.register_blueprint(api_bp)\n+    return app"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "fakenodo/app/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Fapp%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Fapp%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2F__init__.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2"
      },
      {
        "sha": "34c7f26a0ccf44b709399eb34685c72851a158d4",
        "filename": "fakenodo/app/models.py",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Fapp%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Fapp%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fmodels.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,71 @@\n+class Creator:\n+    def __init__(self, name: str, id: int = None, deposition_id: int = None):\n+        self.id = id\n+        self.name = name\n+        self.deposition_id = deposition_id\n+\n+    def to_dict(self):\n+        return {\n+            'id': self.id,\n+            'name': self.name,\n+            'deposition_id': self.deposition_id\n+        }\n+\n+\n+class File:\n+    _id_counter = 1\n+\n+    def __init__(self, name: str, size: int, checksum, deposition_id: str):\n+        self.id = File._id_counter\n+        File._id_counter += 1\n+        self.name = name\n+        self.size = size\n+        self.checksum = checksum\n+        self.deposition_id = deposition_id\n+\n+    def to_dict(self):\n+        return {\n+            \"id\": self.id,\n+            \"name\": self.name,\n+            \"size\": self.size,\n+            \"checksum\": self.checksum\n+        }\n+\n+\n+class Deposition:\n+    _id_counter = 1\n+\n+    def __init__(self, title=None, upload_type=None, publication_type=None, description=None,\n+                 creators=None, keywords=None, access_right=None, license=None, doi=None, published=False, files=None):\n+        self.id = Deposition._id_counter\n+        Deposition._id_counter += 1\n+\n+        self.title = title\n+        self.upload_type = upload_type\n+        self.publication_type = publication_type\n+        self.description = description\n+        self.creators = creators\n+        self.keywords = keywords\n+        self.access_right = access_right\n+        self.license = license\n+        self.doi = doi\n+        self.published = published\n+        self.files = files\n+        self.conceptrecid = self.id - 1\n+\n+    def to_dict(self):\n+        return {\n+            \"id\": self.id,\n+            \"title\": self.title,\n+            \"upload_type\": self.upload_type,\n+            \"publication_type\": self.publication_type,\n+            \"description\": self.description,\n+            \"creators\": self.creators,\n+            \"keywords\": self.keywords,\n+            \"access_right\": self.access_right,\n+            \"license\": self.license,\n+            \"doi\": self.doi,\n+            \"published\": self.published,\n+            \"files\": self.files,\n+            \"conceptrecid\": self.conceptrecid\n+        }"
      },
      {
        "sha": "dc60d2ea029585a302642dd662a05b8cd96b19ca",
        "filename": "fakenodo/app/routes.py",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Fapp%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Fapp%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Froutes.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,97 @@\n+import logging\n+import requests\n+from flask import Blueprint, jsonify, request\n+from fakenodo.app.models import Deposition\n+from fakenodo.app.services import Service\n+\n+api_bp = Blueprint(\"api_bp\", __name__)\n+logger = logging.getLogger(__name__)\n+service = Service()\n+\n+\n+@api_bp.route('/api/fakenodo/depositions', methods=['GET', 'POST'])\n+def depositions() -> tuple:\n+    def get_all_depositions() -> tuple:\n+        try:\n+            depositions = service.get_all_depositions()\n+            return jsonify(depositions), 200\n+\n+        except Exception as e:\n+            return jsonify({\"success\": False, \"message\": str(e)}), 500\n+\n+    def create_deposition() -> tuple:\n+        data = request.json\n+        try:\n+            # Create a Deposition instance with the request metadata\n+            deposition = Deposition(**data[\"metadata\"])\n+\n+            # Save the deposition in a local list\n+            response_data = service.create_new_deposition(deposition)\n+\n+            return jsonify(response_data), 201\n+        except Exception as e:\n+            return jsonify({\"success\": False, \"message\": str(e)}), 500\n+\n+    if request.method == \"GET\":\n+        return get_all_depositions()\n+    else:\n+        return create_deposition()\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/files', methods=['POST'])\n+def upload_file(deposition_id) -> tuple:\n+    try:\n+        for file in request.files.getlist('file'):\n+            if not file:\n+                return jsonify({\"success\": False, \"message\": \"Missing file\"}), 400\n+            service.upload_file(file, deposition_id)\n+\n+        return jsonify('File uploaded succesfully'), 201\n+    except Exception as e:\n+        error_message = f\"Failed to upload files. Error details: {e}\"\n+        raise Exception(error_message)\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>', methods=['GET', 'DELETE'])\n+def deposition(deposition_id):\n+    try:\n+        # Target deposition\n+        deposition = service.get_deposition(deposition_id)\n+\n+        def get_deposition():\n+            resposne = deposition.to_dict()\n+            return jsonify(resposne), 200\n+\n+        def delete_deposition():\n+            service.delete_deposition(deposition)\n+            return jsonify(f\"Deposition with id {deposition_id} deleted succesfully\"), 204\n+\n+        if request.method == 'GET':\n+            return get_deposition()\n+        else:\n+            return delete_deposition()\n+\n+    except Exception:\n+        return jsonify(f\"Cannot find deposition with id {deposition_id}\"), 404\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/actions/publish', methods=['POST'])\n+def publish_deposition(deposition_id) -> tuple:\n+    try:\n+        # Target deposition\n+        deposition = service.get_deposition(deposition_id)\n+        service.generate_doi(deposition_id)\n+        service.publish_deposition(deposition)\n+        return jsonify(f\"Deposition with id {deposition_id} published succesfully\"), 202\n+\n+    except Exception:\n+        return jsonify(\"Deposition not found\"), 404\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/doi', methods=['GET'])\n+def get_doi(deposition_id) -> tuple:\n+    try:\n+        doi = service.get_doi(deposition_id)\n+        return jsonify({\"doi\": doi}), 200\n+    except Exception as e:\n+        return jsonify({\"success\": False, \"message\": str(e)}), 500"
      },
      {
        "sha": "9792be9468ae3f990042133d2afbb4fda5bd3877",
        "filename": "fakenodo/app/services.py",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Fapp%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Fapp%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fservices.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,75 @@\n+import hashlib\n+import logging\n+from random import randint\n+from typing import List\n+from fakenodo.app.models import Deposition, File\n+from dotenv import load_dotenv\n+from core.services.BaseService import BaseService\n+\n+logger = logging.getLogger(__name__)\n+\n+load_dotenv()\n+\n+depositions = []\n+\n+class Service(BaseService):\n+    def __init__(self):\n+        self.headers = {\"Content-Type\": \"application/json\"}\n+\n+    def get_all_depositions(self) -> list:\n+        return [deposition.to_dict() for deposition in depositions]\n+\n+    def create_new_deposition(self, deposition: Deposition) -> dict:\n+        depositions.append(deposition)\n+        return deposition.to_dict()\n+\n+    def upload_file(self, file, deposition_id) -> None:\n+        try:\n+            # Read file content\n+            file_data = file.read()\n+\n+            # Create the file instance\n+            file_instance = File(\n+                name=file.filename,\n+                size=len(file_data),\n+                checksum=hashlib.md5(file_data).hexdigest(),\n+                deposition_id=deposition_id\n+            )\n+\n+            target_deposition = self.get_deposition(deposition_id)\n+            if target_deposition is None:\n+                raise FileNotFoundError(\"Deposition not found\")\n+            if target_deposition.files is None:\n+                target_deposition.files = [file_instance.to_dict()]\n+            else:\n+                target_deposition.files.append(file_instance.to_dict())\n+\n+        except Exception as e:\n+            print(f\"Error en la subida del archivo: {e}\")\n+\n+    def publish_deposition(self, deposition: Deposition) -> dict:\n+        if deposition.doi!=None:\n+            deposition.published = True\n+        return deposition.to_dict()\n+\n+    def delete_deposition(self, deposition: Deposition) -> None:\n+        depositions.remove(deposition)\n+\n+    def get_deposition(self, deposition_id: int) -> Deposition | None:\n+        return [deposition for deposition in depositions if deposition_id == deposition.id][0]\n+\n+    def get_doi(self, deposition_id: int) -> str:\n+        return self.get_deposition(deposition_id).doi\n+\n+    def generate_doi_id():\n+        identifier = randint(10000,1000000)\n+        while True:\n+            yield identifier\n+            identifier+=1\n+\n+    doi_generator = generate_doi_id()\n+\n+    def generate_doi(self,deposition_id):\n+        deposition = self.get_deposition(deposition_id)\n+        doi_id = next(self.doi_generator)\n+        deposition.doi = str(doi_id)+\"/dataset.\"+str(doi_id)"
      },
      {
        "sha": "d2a599dd699a849fbac0b49bf05c76c52b5f516c",
        "filename": "fakenodo/conftest.py",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Fconftest.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Fconftest.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fconftest.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,14 @@\n+import pytest\n+from flask import Flask\n+from fakenodo.app.routes import api_bp\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client():\n+    app = Flask(__name__)\n+    app.config[\"TESTING\"] = True\n+    app.config[\"SERVER_NAME\"] = \"localhost:5001\"\n+    app.register_blueprint(api_bp)\n+    with app.test_client() as client:\n+        with app.app_context():\n+            yield client"
      },
      {
        "sha": "6073984d83d3c02a135714af400b13bac9c32687",
        "filename": "fakenodo/pytest.ini",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Fpytest.ini",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Fpytest.ini",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fpytest.ini?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,4 @@\n+[pytest]\n+filterwarnings =\n+    ignore::DeprecationWarning\n+testpaths = fakenodo tests"
      },
      {
        "sha": "65e0caf5717f6844e459e42f72073254d12b694a",
        "filename": "fakenodo/run.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Frun.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/98f1e1474a4010bc1ed69fbccb52d551a20378e2/fakenodo%2Frun.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Frun.py?ref=98f1e1474a4010bc1ed69fbccb52d551a20378e2",
        "patch": "@@ -0,0 +1,6 @@\n+from fakenodo import create_app\n+\n+\n+app = create_app()\n+if __name__ == \"__main__\":\n+    app.run(host=\"0.0.0.0\", port=5001, debug=True)"
      }
    ]
  },
  {
    "sha": "532eff78c538769c71ae55949e46b052e89e52bb",
    "node_id": "C_kwDONDG85doAKDUzMmVmZjc4YzUzODc2OWM3MWFlNTU5NDllNDZiMDUyZTg5ZTUyYmI",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-16T18:36:20Z"
      },
      "committer": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-16T18:36:20Z"
      },
      "message": "fix(workflow): Fixed commit.yml",
      "tree": {
        "sha": "cef16dc80ae338eb8e44d980679aad302187367a",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/cef16dc80ae338eb8e44d980679aad302187367a"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/532eff78c538769c71ae55949e46b052e89e52bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/532eff78c538769c71ae55949e46b052e89e52bb",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/532eff78c538769c71ae55949e46b052e89e52bb",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/532eff78c538769c71ae55949e46b052e89e52bb/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "90d146c2734dde68ae0acb04b6bbbe0acb9f5a3c",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/90d146c2734dde68ae0acb04b6bbbe0acb9f5a3c",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/90d146c2734dde68ae0acb04b6bbbe0acb9f5a3c"
      }
    ],
    "files": [
      {
        "sha": "7a48b733d8137771b21c8734cfc535bb0f6b940f",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 12,
        "deletions": 13,
        "changes": 25,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/532eff78c538769c71ae55949e46b052e89e52bb/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/532eff78c538769c71ae55949e46b052e89e52bb/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=532eff78c538769c71ae55949e46b052e89e52bb",
        "patch": "@@ -1,20 +1,19 @@\n name: Commit Message Check\n \n-on: [push]\n+on: \n+  pull_request:\n+    branches: [develop]\n+    types: [opened, reopened, edited, review_requested, synchronize]\n+  push:\n+    branches:\n+      - \"main\"\n+      - \"develop\"\n+  workflow_call:\n \n jobs:\n   commit-check:\n+    name: Conventional Commits\n     runs-on: ubuntu-latest\n     steps:\n-      - name: Checkout code\n-        uses: actions/checkout@v1\n-        with:\n-          fetch-depth: 0\n-\n-      - name: Install dependencies\n-        run: npm install @commitlint/config-conventional @commitlint/cli husky\n-\n-      - name: Run CommitLint\n-        run: npx commitlint --from=HEAD~1 --to=HEAD --config @commitlint/config-conventional\n-        env:\n-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      - uses: actions/checkout@v2\n+      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "90d146c2734dde68ae0acb04b6bbbe0acb9f5a3c",
    "node_id": "C_kwDONDG85doAKDkwZDE0NmMyNzM0ZGRlNjhhZTBhY2IwNGI2YmJiZTBhY2I5ZjVhM2M",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-16T18:30:50Z"
      },
      "committer": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-16T18:30:50Z"
      },
      "message": "fix(explore): Removed leftover line from previous implementation and lint.yml",
      "tree": {
        "sha": "5eddaaeebad554ef5e2255f959b4248834f71469",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/5eddaaeebad554ef5e2255f959b4248834f71469"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/90d146c2734dde68ae0acb04b6bbbe0acb9f5a3c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/90d146c2734dde68ae0acb04b6bbbe0acb9f5a3c",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/90d146c2734dde68ae0acb04b6bbbe0acb9f5a3c",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/90d146c2734dde68ae0acb04b6bbbe0acb9f5a3c/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ec5ea4c327b0f15af6aab069b4ed79ed91262a62",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ec5ea4c327b0f15af6aab069b4ed79ed91262a62",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ec5ea4c327b0f15af6aab069b4ed79ed91262a62"
      }
    ],
    "files": [
      {
        "sha": "ccbd3311ba585fae0de19dc7a96de461fce8de9c",
        "filename": ".github/workflows/lint.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ec5ea4c327b0f15af6aab069b4ed79ed91262a62/.github%2Fworkflows%2Flint.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ec5ea4c327b0f15af6aab069b4ed79ed91262a62/.github%2Fworkflows%2Flint.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Flint.yml?ref=ec5ea4c327b0f15af6aab069b4ed79ed91262a62",
        "patch": "@@ -1,28 +0,0 @@\n-name: Python Lint\n-\n-on:\n-  push:\n-    branches: [main, develop]\n-  pull_request:\n-    branches: [main, develop]\n-\n-jobs:\n-  lint:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - uses: actions/checkout@v2\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: '3.x'\n-\n-    - name: Install Dependencies\n-      run: |\n-        python -m pip install --upgrade pip\n-        pip install flake8\n-\n-    - name: Lint with flake8\n-      run: |\n-        flake8 app"
      },
      {
        "sha": "60ac481b376c09e6ea0c8b828c153b2740ae6395",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/90d146c2734dde68ae0acb04b6bbbe0acb9f5a3c/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/90d146c2734dde68ae0acb04b6bbbe0acb9f5a3c/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=90d146c2734dde68ae0acb04b6bbbe0acb9f5a3c",
        "patch": "@@ -111,7 +111,6 @@ def filter(self, query=\"\", sorting=\"newest\",\n \n                 if leaf_feature_name:\n                     leaf_feature_names = model.get_leaf_feature_names()\n-                    print(leaf_feature_name)\n                     if leaf_feature_name not in leaf_feature_names:\n                         continue\n "
      }
    ]
  },
  {
    "sha": "8624b3452499ecb0f273c673db5c5c9e38a5707b",
    "node_id": "C_kwDONDG85doAKDg2MjRiMzQ1MjQ5OWVjYjBmMjczYzY3M2RiNWM1YzllMzhhNTcwN2I",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-12-16T17:03:13Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-16T17:03:13Z"
      },
      "message": "Merge pull request #33 from flamenquin-hub-single/feature-test-bibtex-download\n\nfeat(dataset): Added tests for BibTex export WI",
      "tree": {
        "sha": "c7bf3b0a042d160fc494a0915919ebb285172204",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/c7bf3b0a042d160fc494a0915919ebb285172204"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/8624b3452499ecb0f273c673db5c5c9e38a5707b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYF1RCRC1aQ7uu5UhlAAAMiUQAJpKaBSJMFu7ExAOyIEDp/lU\n62p8R0Fv6JyOCmCBMYMslwh+4J+AtdvkYJtoQK7/L19txjg1sr3t3fcbcfqmCcNM\nDVjFhL9KRoqIioxQviXFU0HsdVOFrEO2fTBEABlV327Oz6UNFFULYNJrmSxRooSw\nbivKI/uk3euQVjQdAmet4AH7cBfFlr7iVG3fl+MPD78MT3jvPg2ABNifA0GOcf8p\n0aTOOLh7r2dGdUCTSZo/+lM9usAi1hg9D1H/07UUcvgvyz8YnwVlT6CwOqJwMf8g\n8O258t77UK3l9uGMnJNoT70eFCGwWsNWoqZkAagjg+OFmblNY4hVv5c/iMjI5Haw\nawPB9B7vIQ+FTPL5W0xTWBJQFwzZVqHAv++xsc5+RxaULEx6xk08/jpGyxzNOjeI\n94GpcVpQJqUNt/YeX5TLxYU2FFPr/HRok3NatcgaLeoQnVRVLBu/w82NnGMk9DWs\nWrctJhLvzJTyN223fz70uVgi5tUaVxJX4tdMLUpV0m4qx30wIlY1BpXoiMRW3mP0\nNUVfF6Yc5J8IKjLro1307gJd4Sp5e4iKxgxbluZU9JU5eUBxExCJYaoqpFxsngCW\nceyr825a/+IfRqynNcQhfc3NIKcLKzAYQapbx0eZx+7ReyVb93hhgsMSK5hWS3in\nvjiRPb3ESfpPL2daQWv/\n=qskr\n-----END PGP SIGNATURE-----\n",
        "payload": "tree c7bf3b0a042d160fc494a0915919ebb285172204\nparent eba68babde8cc4e7528686357f04221be82ebcf1\nparent ef2278271a8b51a44550f305ad73a17f2b4867bc\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1734368593 +0100\ncommitter GitHub <noreply@github.com> 1734368593 +0100\n\nMerge pull request #33 from flamenquin-hub-single/feature-test-bibtex-download\n\nfeat(dataset): Added tests for BibTex export WI",
        "verified_at": "2024-12-16T17:04:33Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8624b3452499ecb0f273c673db5c5c9e38a5707b",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/8624b3452499ecb0f273c673db5c5c9e38a5707b",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8624b3452499ecb0f273c673db5c5c9e38a5707b/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eba68babde8cc4e7528686357f04221be82ebcf1",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/eba68babde8cc4e7528686357f04221be82ebcf1",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/eba68babde8cc4e7528686357f04221be82ebcf1"
      },
      {
        "sha": "ef2278271a8b51a44550f305ad73a17f2b4867bc",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ef2278271a8b51a44550f305ad73a17f2b4867bc",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ef2278271a8b51a44550f305ad73a17f2b4867bc"
      }
    ],
    "files": [
      {
        "sha": "56beffd37b451ca0fa3e8be2615fc56cddafe7e6",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/8624b3452499ecb0f273c673db5c5c9e38a5707b/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/8624b3452499ecb0f273c673db5c5c9e38a5707b/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=8624b3452499ecb0f273c673db5c5c9e38a5707b",
        "patch": "@@ -311,8 +311,10 @@ def get_unsynchronized_dataset(dataset_id):\n         \"annote\": ds_meta_data.description\n     }\n     texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n-    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n-    \n+    if ds_meta_data.deposition_id:\n+        bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    else:\n+        bibtex_propiedades.pop(\"howpublished\")\n     lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n     lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n "
      },
      {
        "sha": "3940aa59758ec6e27c5aef6a1f49793dedf19ffd",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/8624b3452499ecb0f273c673db5c5c9e38a5707b/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/8624b3452499ecb0f273c673db5c5c9e38a5707b/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=8624b3452499ecb0f273c673db5c5c9e38a5707b",
        "patch": "@@ -189,7 +189,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n                 <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n-                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                <button id=\"bibtex_preview_btn\" onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                     <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n \n@@ -421,7 +421,7 @@ <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex\n                         style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n                         <i data-feather=\"download\"></i>\n                     </a>\n-                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                    <button id=\"bibtex_copy_btn\" onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n                         style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n                         <i data-feather=\"copy\"></i>\n                     </button>"
      },
      {
        "sha": "7f2bcf42ace80c1743ddc5ab39335e96e6aaf4a4",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 425,
        "deletions": 0,
        "changes": 425,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/8624b3452499ecb0f273c673db5c5c9e38a5707b/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/8624b3452499ecb0f273c673db5c5c9e38a5707b/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=8624b3452499ecb0f273c673db5c5c9e38a5707b",
        "patch": "@@ -1,14 +1,44 @@\n import os\n import time\n+from flask import url_for\n+from datetime import datetime\n+from pathlib import Path\n \n+from selenium import webdriver\n from selenium.webdriver.common.by import By\n from selenium.webdriver.common.keys import Keys\n from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.common.exceptions import NoSuchElementException\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.webdriver.chrome.service import Service\n+from webdriver_manager.chrome import ChromeDriverManager\n \n from core.environment.host import get_host_for_selenium_testing\n from core.selenium.common import initialize_driver, close_driver\n \n \n+def get_driver_with_download_cwdir():\n+    # Initializes the browser options\n+    prefs = {\n+        \"download.default_directory\": os.getcwd(),\n+        \"download.directory_upgrade\": True,\n+        \"download.prompt_for_download\": False,\n+    }\n+    options = webdriver.ChromeOptions()\n+    options.add_experimental_option(\"prefs\", prefs)\n+\n+    driver_path = ChromeDriverManager().install()\n+\n+\n+    # Initialise the browser using WebDriver Manager\n+    chrome_driver_binary = os.path.join(os.path.dirname(driver_path), 'chromedriver')\n+    \n+    service = Service(chrome_driver_binary)\n+    \n+    \n+    driver = webdriver.Chrome(service=service, options=options)\n+    return driver\n+\n def wait_for_page_to_load(driver, timeout=4):\n     WebDriverWait(driver, timeout).until(\n         lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n@@ -25,6 +55,158 @@ def count_datasets(driver, host):\n         amount_datasets = 0\n     return amount_datasets\n \n+def has_datasets_synced(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//div[@class='card-body']//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets\n+\n+def has_datasets_unsynced(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//div[@class='card-body']//div[@class='card-body']//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets>0\n+\n+def exist_published_datasets(driver, host):\n+    driver.get(f\"{host}/explore\")\n+    wait_for_page_to_load(driver)\n+    try:\n+        amount_datasets = len(driver.find_element(By.ID, 'results').find_elements(By.CSS_SELECTOR, 'div.card'))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets>0\n+\n+def get_url_detalles(driver, host):\n+    if exist_published_datasets(driver, host):\n+        result = driver.find_element(By.ID, 'results').find_element(By.XPATH, '//div[@class=\"card\"]//a').get_attribute('href')\n+    else:\n+        # Open the login page\n+        driver.get(f\"{host}/login\")\n+        wait_for_page_to_load(driver)\n+\n+        # Find the username and password field and enter the values\n+        email_field = driver.find_element(By.NAME, \"email\")\n+        password_field = driver.find_element(By.NAME, \"password\")\n+\n+        email_field.send_keys(\"user1@example.com\")\n+        password_field.send_keys(\"1234\")\n+\n+        # Send the form\n+        password_field.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        if has_datasets_synced(driver, host): # tiene datasets publicados, usar esos\n+            result = driver.find_element(By.XPATH, \"//div[@class='card-body']//table//tbody//tr//td//a\").get_attribute('href')\n+        elif has_datasets_unsynced(driver, host): # solo tiene datasets sin publicar\n+            result = f\"{host}\" + driver.find_element(By.XPATH, \"//div[@class='card-body']//div[@class='card-body']//table//tbody//tr//td//a\").get_attribute('href')\n+        else: # No tiene datasets, crear uno\n+            # Count initial datasets\n+            initial_datasets = count_datasets(driver, host)\n+\n+            # Open the upload dataset\n+            driver.get(f\"{host}/dataset/upload\")\n+            wait_for_page_to_load(driver)\n+\n+            datos_dataset = {\n+                \"titulo\": \"Titulo prueba bibtex\",\n+                \"descripcion\": \"Descripcion prueba bibtex\",\n+                \"tags\": \"tag1,tag2\"\n+            }\n+            autores_dataset = [\n+                    {\"name\": \"AutorBibtex0\", \"affiliation\": \"Club0\",\"orcid\":\"0000-0000-0000-0000\"},\n+                    {\"name\": \"AutorBibtex1\", \"affiliation\": \"Club1\"},\n+                    {\"name\": \"AutorBibtex3\", \"affiliation\": \"Club3\"}\n+            ]\n+\n+            # Find basic info and UVL model and fill values\n+            title_field = driver.find_element(By.NAME, \"title\")\n+            title_field.send_keys(datos_dataset.get(\"titulo\"))\n+            desc_field = driver.find_element(By.NAME, \"desc\")\n+            desc_field.send_keys(datos_dataset.get(\"descripcion\"))\n+            tags_field = driver.find_element(By.NAME, \"tags\")\n+            tags_field.send_keys(datos_dataset.get(\"tags\"))\n+\n+            # Add two authors and fill\n+            add_author_button = driver.find_element(By.ID, \"add_author\")\n+            add_author_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+            add_author_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+            name_field0 = driver.find_element(By.NAME, \"authors-0-name\")\n+            name_field0.send_keys(autores_dataset[0].get(\"name\"))\n+            affiliation_field0 = driver.find_element(By.NAME, \"authors-0-affiliation\")\n+            affiliation_field0.send_keys(autores_dataset[0].get(\"affiliation\"))\n+            orcid_field0 = driver.find_element(By.NAME, \"authors-0-orcid\")\n+            orcid_field0.send_keys(autores_dataset[0].get(\"orcid\"))\n+\n+            name_field1 = driver.find_element(By.NAME, \"authors-1-name\")\n+            name_field1.send_keys(autores_dataset[1].get(\"name\"))\n+            affiliation_field1 = driver.find_element(By.NAME, \"authors-1-affiliation\")\n+            affiliation_field1.send_keys(autores_dataset[1].get(\"affiliation\"))\n+\n+            # Obt\u00e9n las rutas absolutas de los archivos\n+            file1_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file1.uvl\")\n+            file2_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file2.uvl\")\n+\n+            # Subir el primer archivo\n+            dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+            dropzone.send_keys(file1_path)\n+            wait_for_page_to_load(driver)\n+\n+            # Subir el segundo archivo\n+            dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+            dropzone.send_keys(file2_path)\n+            wait_for_page_to_load(driver)\n+\n+            # Add authors in UVL models\n+            show_button = driver.find_element(By.ID, \"0_button\")\n+            show_button.send_keys(Keys.RETURN)\n+            add_author_uvl_button = driver.find_element(By.ID, \"0_form_authors_button\")\n+            add_author_uvl_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+            name_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-name\")\n+            name_field.send_keys(\"AutorBibtex3\")\n+            affiliation_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-affiliation\")\n+            affiliation_field.send_keys(\"Club3\")\n+\n+            # Check I agree and send form\n+            check = driver.find_element(By.ID, \"agreeCheckbox\")\n+            check.send_keys(Keys.SPACE)\n+            wait_for_page_to_load(driver)\n+\n+            upload_btn = driver.find_element(By.ID, \"upload_button\")\n+            upload_btn.send_keys(Keys.RETURN)\n+            \n+            wait_for_page_to_load(driver)\n+            time.sleep(2)  # Force wait time\n+\n+            assert driver.current_url == f\"{host}/dataset/list\", \"Test failed!\"\n+\n+            # Count final datasets\n+            final_datasets = count_datasets(driver, host)\n+            assert final_datasets == initial_datasets + 1, \"Test failed!\"\n+            \n+            listado_unsync = driver.find_element(By.CLASS_NAME, \"row\") # TODO: encontrar el primer elemento de tipo tbody\n+            dataset_creado = listado_unsync.find_element(By.XPATH, \"//table//tbody//tr\")\n+            \n+            info_dataset_creado = dataset_creado.find_elements(By.TAG_NAME, \"td\")\n+\n+            title_matches = info_dataset_creado[0].find_element(By.TAG_NAME, 'a').text==datos_dataset.get(\"titulo\")\n+            desc_matches = info_dataset_creado[1].text==datos_dataset.get(\"descripcion\")\n+            pub_type_matches = info_dataset_creado[2].text==\"None\"\n+\n+            assert title_matches and desc_matches and pub_type_matches, \"Test failed!\"\n+            result = f\"{host}\" + info_dataset_creado[0].find_element(By.TAG_NAME, 'a').get_attribute('href')\n+    return result\n \n def test_upload_dataset():\n     driver = initialize_driver()\n@@ -130,6 +312,249 @@ def test_upload_dataset():\n         # Close the browser\n         close_driver(driver)\n \n+def test_bibtex_preview():\n+    driver = initialize_driver()\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LA PREVIEW MUESTRA EL DATASET EXPORTADO A BIBTEX CORRECTAMENTE\n+        contenido_bibtex = driver.find_element(By.ID, \"bibtexContent\").text\n+        assert contenido_bibtex is not None and contenido_bibtex!=\"None\", \"Test failed!\"\n+\n+        lineas = contenido_bibtex.splitlines()\n+\n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        \n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+def test_bibtex_copy():\n+    driver = initialize_driver()\n+    \n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LOS DATOS SE COPIAN CORRECTAMENTE EN FORMATO BIBTEX\n+        bibtex_copy_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_copy_btn']\")\n+        bibtex_copy_btn.click()\n+        time.sleep(2)\n+        \n+\n+        try:\n+            driver.find_element(By.XPATH, \"//a[@href='/logout']\")\n+        except NoSuchElementException: # No ha iniciado sesion\n+            driver.get(f\"{host}/login\")\n+            wait_for_page_to_load(driver)\n+            \n+            # Find the username and password field and enter the values\n+            email_field = driver.find_element(By.NAME, \"email\")\n+            password_field = driver.find_element(By.NAME, \"password\")\n+\n+            email_field.send_keys(\"user1@example.com\")\n+            password_field.send_keys(\"1234\")\n+\n+            # Send the form\n+            password_field.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+        # Open the upload dataset\n+        driver.get(f\"{host}/dataset/upload\")\n+        wait_for_page_to_load(driver)\n+\n+        desc_field = driver.find_element(By.NAME, \"desc\")\n+        desc_field.send_keys(Keys.LEFT_CONTROL, 'v')\n+        \n+        lineas = desc_field.get_attribute(\"value\").strip().splitlines()\n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+\n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+def test_bibtex_download():\n+    driver = get_driver_with_download_cwdir()\n+    \n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LOS DATOS SE DESCARGAN CORRECTAMENTE EN FORMATO BIBTEX\n+        bibtex_download_btn = driver.find_element(By.XPATH, \"//a[@id='bibtexDownloadButton']\")\n+        bibtex_download_btn.click()\n+        time.sleep(2)\n+        \n+        file_path = os.path.join(os.getcwd(), bibtex_download_btn.get_attribute('download'))\n+\n+        lineas = []\n+\n+        with open(file_path, 'r', encoding='utf-8') as archivo:\n+            lineas.extend(archivo.readlines())\n+        os.remove(file_path)\n+        \n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+        \n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n \n # Call the test function\n test_upload_dataset()\n+test_bibtex_preview()\n+test_bibtex_copy()\n+test_bibtex_download()\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "eba68babde8cc4e7528686357f04221be82ebcf1",
    "node_id": "C_kwDONDG85doAKGViYTY4YmFiZGU4Y2M0ZTc1Mjg2ODYzNTdmMDQyMjFiZTgyZWJjZjE",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-12-16T16:58:18Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-16T16:58:18Z"
      },
      "message": "Merge pull request #37 from flamenquin-hub-single/feature-upload_analyse_and_repair_UVL\n\nView added for checking syntax on models",
      "tree": {
        "sha": "93ab8e1c685b5515010fe85d784b6d7ac13ac591",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/93ab8e1c685b5515010fe85d784b6d7ac13ac591"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/eba68babde8cc4e7528686357f04221be82ebcf1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnYFwqCRC1aQ7uu5UhlAAAe6oQAD9wxnuLCrQNpQ1sd2567oV4\nJNhF329FgoWyaq8bw/QajPra12FResUpl4Vg7Rx0WCjS0Ly0/Ew0zU0dW1CQZdjJ\nnPKySGST0o7OPysZAOPFNzMtiBQMdHlvRePnkvOrRhmPHlcCNx49cx/voceKSkaw\nL+5iB9cfEwzfapWlyKgB4Rhq4KFDCxw4JLnMibgL6/dUf7fY3ajI2UR+9raTCKGF\nifsVFxjZ4qDcjd8vlyeUh2fIvp8dvb6LAoJSHxZ9LL7ZFzi6blTDGIiv0lEs58Lm\nwFSCYC7Wi5KXGglAhZ79wbETVvhg9iG0llXf/xEwsB1XGYKQaWl1ScKJIykklLNr\nksh2SK7d6Od7aMpuTIH9XiwHO8QJ/ecDlGtauXcoS+B7Um6R5nn8qkS4eVP8DcVK\n4KMklcXcEjXbqM9sA+XYLTMHvpDHEWN8PYWgk7a5EuVsfSL1b1YdMhHw4kzYrj8S\n49R/ipAvZ8K+FjakQuq5nvWATG1iNtogwZ2NhG7Yp6TQFoZUwU8lGtJwYsWxmU60\nqax5wyElzskZiqNxvBqWt1zlpSGqkV1ssjg2CE1K0xbuH2VgTlTkD8Oy0KKS+LJs\nbAOa+HHMhdvyorSOx2f4f5xdXtnzqJtFbh8oSn300gd8mflLl3YGus/XPsz7LUnG\nZrMDLHFAxkyD6K6E39ko\n=Onv4\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 93ab8e1c685b5515010fe85d784b6d7ac13ac591\nparent abd20bce07616b1bf137272e273c6799bf35ed80\nparent 37293581ec0728fb350a7c2fd3633193be9962a6\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1734368298 +0100\ncommitter GitHub <noreply@github.com> 1734368298 +0100\n\nMerge pull request #37 from flamenquin-hub-single/feature-upload_analyse_and_repair_UVL\n\nView added for checking syntax on models",
        "verified_at": "2024-12-16T16:59:35Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/eba68babde8cc4e7528686357f04221be82ebcf1",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/eba68babde8cc4e7528686357f04221be82ebcf1",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/eba68babde8cc4e7528686357f04221be82ebcf1/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "abd20bce07616b1bf137272e273c6799bf35ed80",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/abd20bce07616b1bf137272e273c6799bf35ed80",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/abd20bce07616b1bf137272e273c6799bf35ed80"
      },
      {
        "sha": "37293581ec0728fb350a7c2fd3633193be9962a6",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/37293581ec0728fb350a7c2fd3633193be9962a6",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/37293581ec0728fb350a7c2fd3633193be9962a6"
      }
    ],
    "files": [
      {
        "sha": "26b18c2644779529b71f900e01adaeeccb9e7aec",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 46,
        "deletions": 8,
        "changes": 54,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/eba68babde8cc4e7528686357f04221be82ebcf1/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/eba68babde8cc4e7528686357f04221be82ebcf1/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=eba68babde8cc4e7528686357f04221be82ebcf1",
        "patch": "@@ -117,7 +117,11 @@ var currentId = 0;\n \t}\n \n         function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n+\t    if (document.getElementById(\"upload_button\")) {\n+            \tdocument.getElementById(\"upload_button\").style.display = \"block\";\n+\t    } else {\n+\t\tdocument.getElementById(\"check_model_button\").style.display = \"block\";\n+\t    }\n             document.getElementById(\"loading\").style.display = \"none\";\n         }\n \n@@ -144,7 +148,6 @@ var currentId = 0;\n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n-\t\t\t\tconsole.log(\"hi\");\n \t\t\t\tclean_upload_errors();\n \t\t\t\tshow_loading(\"check\");\n \n@@ -154,26 +157,61 @@ var currentId = 0;\n \t\t\t\t\tbody: ''\n \t\t\t\t})\n \t\t\t\t\t.then(response => {\n+\t\t\t\t\t\tlet model = document.getElementById('rendered_model')\n+\t\t\t\t\t\twhile (model.firstChild) {\n+\t\t\t\t\t\t\tmodel.removeChild(model.firstChild)\n+\t\t\t\t\t\t};\n \t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\tlet first_row = document.createElement('p');\n+\t\t\t\t\t\t\tfirst_row.bottom_margin = '15';\n+\t\t\t\t\t\t\tfirst_row.textContent = 'This model contains no errors. Here\\'s the model:';\t\n+\t\t\t\t\t\t\tmodel.appendChild(first_row);\n \t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n \t\t\t\t\t\t\tresponse.json().then(data => {\n-\t\t\t\t\t\t\t\tconsole.log(data.message);\n-\t\t\t\t\t\t\t\t//window.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\tfor (let i=0;i<data.message.length;i++) {\n+\t\t\t\t\t\t\t\t\tlet row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\trow.style.margin = '0';\n+\t\t\t\t\t\t\t\t\trow.style.padding = '0';\n+\t\t\t\t\t\t\t\t\tlet row_text = data.message[i];\n+\t\t\t\t\t\t\t\t\trow_text = row_text.replace(/\\s/g, '\\u00A0');\n+\t\t\t\t\t\t\t\t\trow.textContent = row_text;\n+\t\t\t\t\t\t\t\t\tmodel.appendChild(row);\n+\t\t\t\t\t\t\t\t};\n+\t\t\t\t\t\t\t\tmodel.style.display = 'block';\n+\t\t\t\t\t\t\t\thide_loading();\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tresponse.json().then(data => {\n-\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.error);\n+\t\t\t\t\t\t\t\tif (data.syntax) {\n+\t\t\t\t\t\t\t\t\tlet first_row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\tfirst_row.bottom_margin = '15';\n+\t\t\t\t\t\t\t\t\tfirst_row.top_margin = '15';\n+\t\t\t\t\t\t\t\t\tfirst_row.textContent = 'Here\\'s the model with the error highlighted:';\t\n+\t\t\t\t\t\t\t\t\tmodel.appendChild(first_row);\n+\t\t\t\t\t\t\t\t\tfor (let i=0;i<data.message.length;i++) {\n+\t\t\t\t\t\t\t\t\t\tlet row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\t\trow.style.margin = '0';\n+\t\t\t\t\t\t\t\t\t\trow.style.padding = '0';\n+\t\t\t\t\t\t\t\t\t\tlet row_text = data.message[i];\n+\t\t\t\t\t\t\t\t\t\trow_text = row_text.replace(/\\s/g, '\\u00A0');\n+\t\t\t\t\t\t\t\t\t\trow.textContent = row_text;\n+\t\t\t\t\t\t\t\t\t\tmodel.appendChild(row);\n+\t\t\t\t\t\t\t\t\t};\n+\t\t\t\t\t\t\t\t};\n \t\t\t\t\t\t\t\thide_loading();\n-\n-\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\t\t\t\t\t\t\t\tif (data.syntax) {\n+\t\t\t\t\t\t\t\t\twrite_upload_error(data.error);\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\t\t\t\t\t\t\t\t};\n \n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t})\n \t\t\t\t\t.catch(error => {\n \t\t\t\t\t\tconsole.error('Error in POST request:', error);\n \t\t\t\t\t});\n-\t\t\t\tconsole.log(\"yeah\")\n \n \t\t\t});\n \t\t}"
      },
      {
        "sha": "86e6b56012689ca3e69fde4daad26f2de2d79789",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 29,
        "deletions": 11,
        "changes": 40,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/eba68babde8cc4e7528686357f04221be82ebcf1/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/eba68babde8cc4e7528686357f04221be82ebcf1/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=eba68babde8cc4e7528686357f04221be82ebcf1",
        "patch": "@@ -26,8 +26,7 @@\n from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n from flask_dance.contrib.github import github\n-\n-\n+from .parser import get_tree\n logger = logging.getLogger(__name__)\n \n dataset_service = DataSetService()\n@@ -113,10 +112,14 @@ def check_dataset():\n         file_path = os.path.join(temp_folder, filename)\n         \n         with open(file_path) as f:\n-            indent = 0\n-            x = \"\".join([i for i in f])\n-            print(x)\n-        return jsonify({\"message\": x}),200\n+            x = [i.rstrip() for i in f]\n+        try:\n+            get_tree(file_path)\n+        except Exception as e:\n+            line = int(str(e).split(':')[1].split(' ')[-1])\n+            x[line-1] = x[line-1] + \"   <--- HERE'S THE ERROR\"\n+            return jsonify({\"message\":x,\"error\":str(e),\"syntax\":True}),400\n+        return jsonify({\"message\": x,\"error\":False}),200\n    \n     # setting things up for the checker to have only one file available\n     temp_folder = current_user.temp_folder()\n@@ -126,10 +129,7 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-@dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n-@login_required\n-def upload():\n-    file = request.files[\"file\"]\n+def upload_aux(file,check):\n     temp_folder = current_user.temp_folder()\n \n     if not file or not file.filename.endswith(\".uvl\"):\n@@ -156,7 +156,12 @@ def upload():\n         file.save(file_path)\n     except Exception as e:\n         return jsonify({\"message\": str(e)}), 500\n-\n+    if check:\n+        try:\n+            get_tree(file_path)\n+        except Exception as e:\n+            os.remove(file_path)\n+            return jsonify({\"message\": str(e),\"syntax\": True}),400\n     return (\n         jsonify(\n             {\n@@ -167,6 +172,19 @@ def upload():\n         200,\n     )\n \n+@dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n+@login_required\n+def upload():\n+    file = request.files[\"file\"]\n+    return upload_aux(file,True)\n+\n+@dataset_bp.route(\"/dataset/file/upload/check\", methods=[\"POST\"])\n+@login_required\n+def upload_check():\n+    file = request.files[\"file\"]\n+    return upload_aux(file,False)\n+\n+\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()"
      },
      {
        "sha": "e344337cbd0bb2f488c040d1559d8d601b8a9879",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "added",
        "additions": 266,
        "deletions": 0,
        "changes": 266,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/eba68babde8cc4e7528686357f04221be82ebcf1/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/eba68babde8cc4e7528686357f04221be82ebcf1/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=eba68babde8cc4e7528686357f04221be82ebcf1",
        "patch": "@@ -0,0 +1,266 @@\n+{% extends \"base_template.html\" %}\n+{% block title %}Check UVL model{% endblock %}\n+{% block content %}\n+    <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n+\n+    <div class=\"row\">\n+        <div class=\"col-12 mb-3\">\n+            <div class=\"alert alert-warning\" role=\"alert\" id=\"test_zenodo_connection_error\" style=\"display: none\">\n+                <div class=\"alert-message\">\n+\n+                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n+                        connection to the Zenodo API</h4>\n+                    <p class=\"p-0 m-0\">\n+                        There seems to be some kind of problem with the Zenodo API and synchronization of your dataset\n+                        files may not be possible. We will save your files locally to eventually synchronize them with\n+                        Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n+                        anything about it.\n+                    </p>\n+                </div>\n+            </div>\n+        </div>\n+\n+    </div>\n+\n+    {% if messages %}\n+        <ul>\n+            {% for message in messages %}\n+                <li>{{ message }}</li>\n+            {% endfor %}\n+        </ul>\n+    {% endif %}\n+    <div class=\"row\">\n+        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+            <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n+            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n+                \n+\t\t{{ form.hidden_tag() }}\n+                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n+                    <div id=\"dropzone-text\"></div>\n+                </form>\n+                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n+                    </span>\n+                <ul class=\"mt-2\" id=\"file-list\"></ul>\n+                <script>\n+                    let dropzone = Dropzone.options.myDropzone = {\n+                        url: \"/dataset/file/upload/check\",\n+                        paramName: 'file',\n+                        maxFilesize: 10,\n+                        acceptedFiles: '.uvl',\n+                        init: function () {\n+\t\t\t\tlet fileList = document.getElementById('file-list');\n+\t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n+\t\t\t\tlet alerts = document.getElementById('alerts');\n+\t\t\t\tthis.on('addedfile', function (file) {\n+\t\t\t\t\tlet ext = file.name.split('.').pop();\n+\t\t\t\t\tif (ext !== 'uvl') {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+\t\t\t\t\telse if (fileList.childElementCount > 0) {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\t\t\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+                            });\n+                            this.on('success', function (file, response) {\n+                                let dropzone = this;\n+                                show_upload_dataset();\n+                                console.log(\"File uploaded: \", response);\n+                                // actions when UVL model is uploaded\n+                                let listItem = document.createElement('li');\n+                                let h4Element = document.createElement('h4');\n+                                h4Element.textContent = response.filename;\n+                                listItem.appendChild(h4Element);\n+                                // generate incremental id for form\n+                                let formUniqueId = generateIncrementalId();\n+                               /*\n+                                    ##########################################\n+                                    REMOVE BUTTON\n+                                    ##########################################\n+                                */\n+                                // remove button\n+                                let removeButton = document.createElement('button');\n+                                removeButton.innerHTML = 'Delete model';\n+                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n+                                removeButton.style.borderRadius = '5px';\n+                                removeButton.addEventListener('click', function () {\n+\t\t\t\t    let model = document.getElementById('rendered_model')\n+\t\t\t\t    while (model.firstChild) {\n+\t\t\t\t\t    model.removeChild(model.firstChild)\n+\t\t\t\t    };\n+                                    fileList.removeChild(listItem);\n+                                    this.removeFile(file);\n+                                    // Ajax request\n+                                    let xhr = new XMLHttpRequest();\n+                                    xhr.open('POST', '/dataset/file/delete', true);\n+                                    xhr.setRequestHeader('Content-Type', 'application/json');\n+                                    xhr.onload = function () {\n+                                        if (xhr.status === 200) {\n+                                            console.log('Deleted file from server');\n+                                            if (dropzone.files.length === 0) {\n+                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n+                                                clean_upload_errors();\n+                                            }\n+                                        }\n+                                    };\n+                                    xhr.send(JSON.stringify({file: file.name}));\n+                                }.bind(this));\n+                                /*\n+                                    ##########################################\n+                                    APPEND BUTTONS\n+                                    ##########################################\n+                                */\n+                                listItem.appendChild(removeButton);\n+                                /*\n+                                    ##########################################\n+                                    UVL FORM\n+                                    ##########################################\n+                                */\n+                                // create specific form for UVL\n+                                let formContainer = document.createElement('div');\n+                                formContainer.id = formUniqueId + \"_form\";\n+                                formContainer.classList.add('uvl_form', \"mt-3\");\n+                                formContainer.style.display = \"none\";\n+                                formContainer.innerHTML = `\n+                                    <div class=\"row\">\n+                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n+                                        <div class=\"col-12\">\n+                                            <div class=\"row\">\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Title</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Description</label>\n+                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n+                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n+                                                            <option value=\"none\">None</option>\n+                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n+                                                            <option value=\"book\">Book</option>\n+                                                            <option value=\"section\">Book Section</option>\n+                                                            <option value=\"conferencepaper\">Conference Paper</option>\n+                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n+                                                            <option value=\"article\">Journal Article</option>\n+                                                            <option value=\"patent\">Patent</option>\n+                                                            <option value=\"preprint\">Preprint</option>\n+                                                            <option value=\"deliverable\">Project Deliverable</option>\n+                                                            <option value=\"milestone\">Project Milestone</option>\n+                                                            <option value=\"proposal\">Proposal</option>\n+                                                            <option value=\"report\">Report</option>\n+                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n+                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n+                                                            <option value=\"technicalnote\">Technical Note</option>\n+                                                            <option value=\"thesis\">Thesis</option>\n+                                                            <option value=\"workingpaper\">Working Paper</option>\n+                                                            <option value=\"other\">Other</option>\n+                                                        </select>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n+                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">UVL version</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Authors</label>\n+                                                        <div id=\"` + formContainer.id + `_authors\">\n+                                                        </div>\n+                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n+                                                    </div>\n+                                                </div>\n+                                            </div>\n+                                        </div>\n+                                    </div>\n+                                    `;\n+                                listItem.appendChild(formContainer);\n+                                fileList.appendChild(listItem);\n+                            });\n+                            this.on('addedfile', function (file) {\n+\n+                                let ext = file.name.split('.').pop();\n+                                if (ext !== 'uvl') {\n+                                    this.removeFile(file);\n+\n+                                    let alert = document.createElement('p');\n+                                    alert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t    if (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t    }\n+                                    alerts.appendChild(alert);\n+                                    alerts.style.display = 'block';\n+                                }\n+\n+                            });\n+                        }\n+                    };\n+                </script>\n+            </div>\n+        </div>\n+    </div>\n+    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n+        <div class=\"col-12\">\n+            <hr>\n+            <h1 class=\"h3 mb-3 mt-2\">Check model and render errors</h1>\n+            <div style=\"padding-left: 2rem\">\n+                <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n+                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n+                    Check</button>\n+                <div id=\"loading\" style=\"display: none\">\n+                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n+                    Uploading and checking model, please wait...\n+                </div>\n+                <div class=\"row\">\n+                    <div class=\"col-12 mb-3\">\n+                    </div>\n+                </div>\n+                \n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\"></span>\n+                <p class=\"p-0 m-0\" id=\"rendered_model\"></p>\n+\t    </div>\n+\t    <script>\n+\t\t    const upload_button = document.getElementById('check_model_button');\n+\t\t    upload_button.disabled = false;\n+\t    </script>\n+\n+        </div>\n+    </div>\n+{% endblock %}\n+{% block scripts %}\n+    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "dbca6f3d31a8c62779ec70dd7c38e3c30e4b6915",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/eba68babde8cc4e7528686357f04221be82ebcf1/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/eba68babde8cc4e7528686357f04221be82ebcf1/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=eba68babde8cc4e7528686357f04221be82ebcf1",
        "patch": "@@ -110,7 +110,12 @@\n                                 class=\"align-middle\">My datasets</span>\n                         </a>\n                     </li>\n-\n+\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.check_dataset' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n+                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n+                                class=\"align-middle\">Check model</span>\n+                        </a>\n+                    </li>\t\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>"
      }
    ]
  },
  {
    "sha": "37293581ec0728fb350a7c2fd3633193be9962a6",
    "node_id": "C_kwDONDG85doAKDM3MjkzNTgxZWMwNzI4ZmIzNTBhN2MyZmQzNjMzMTkzYmU5OTYyYTY",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-16T00:07:44Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-16T00:07:44Z"
      },
      "message": "fix(dataset): fixed merge conflicts with develop",
      "tree": {
        "sha": "93ab8e1c685b5515010fe85d784b6d7ac13ac591",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/93ab8e1c685b5515010fe85d784b6d7ac13ac591"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/37293581ec0728fb350a7c2fd3633193be9962a6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/37293581ec0728fb350a7c2fd3633193be9962a6",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/37293581ec0728fb350a7c2fd3633193be9962a6",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/37293581ec0728fb350a7c2fd3633193be9962a6/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "81177a07059668758de093a416896ab17cb1535e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/81177a07059668758de093a416896ab17cb1535e",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/81177a07059668758de093a416896ab17cb1535e"
      },
      {
        "sha": "abd20bce07616b1bf137272e273c6799bf35ed80",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/abd20bce07616b1bf137272e273c6799bf35ed80",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/abd20bce07616b1bf137272e273c6799bf35ed80"
      }
    ],
    "files": [
      {
        "sha": "86e6b56012689ca3e69fde4daad26f2de2d79789",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 5,
        "deletions": 21,
        "changes": 26,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -25,11 +25,8 @@\n )\n from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n-from app.modules.dataset.parser import get_tree\n-logger = logging.getLogger(__name__)\n from flask_dance.contrib.github import github\n-\n-\n+from .parser import get_tree\n logger = logging.getLogger(__name__)\n \n dataset_service = DataSetService()\n@@ -101,7 +98,6 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n-\n @dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n @login_required\n def check_dataset():\n@@ -166,7 +162,6 @@ def upload_aux(file,check):\n         except Exception as e:\n             os.remove(file_path)\n             return jsonify({\"message\": str(e),\"syntax\": True}),400\n-    \n     return (\n         jsonify(\n             {\n@@ -418,18 +413,7 @@ def commit_file(file_id):\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n-@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n-def download_dataset_format(file_id, format):\n-    \"\"\"Endpoint to download dataset in the specified format.\n-    Formats supported: glencoe, splot, dimacs, zip.\n-    \"\"\"\n-    if format == \"glencoe\":\n-        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n-    elif format == \"splot\":\n-        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n-    elif format == \"dimacs\":\n-        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n-    elif format == \"zip\":\n-        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n-    else:\n-        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+@dataset_bp.route(\"/dataset/download/<int:dataset_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(dataset_id, format):\n+    \"\"\"Redirect to Flamapy's export_dataset endpoint.\"\"\"\n+    return redirect(url_for(\"flamapy.export_dataset\", dataset_id=dataset_id, format=format))"
      },
      {
        "sha": "0d473574be64451c4ad63c85c34c85026d4a20be",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -41,35 +41,33 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n-                <div class=\"mt-2\">\n                     <div class=\"btn-group\" role=\"group\">\n                         <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n                             <i data-feather=\"download\"></i> Download\n                         </button>\n                         <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='glencoe') }}\">\n                                     Glencoe\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='dimacs') }}\">\n                                     DIMACS\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='splot') }}\">\n                                     SPLOT\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n-                                    ZIP\n-                                </a>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">\n+                                    ZIP (Original UVLs)\n+                                </a>                                \n                             </li>\n                         </ul>\n-                    </div>\n-                </div>\n+                    </div>     \n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">\n@@ -589,4 +587,4 @@ <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex\n     }\n </script>\n \n-{% endblock %}\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "275fbf9bd9d3ad0655d68861bc8799a8415e9560",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 34,
        "deletions": 44,
        "changes": 78,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -75,50 +75,40 @@ def ensure_logged_in(self):\n         else:\n             print(\"User successfully logged in.\")\n \n-    @task\n-    def commit_dataset(self):\n-        file_id = random.randint(1, 30)  \n-        response = self.client.post(f\"/dataset/commit_file/{file_id}\", json={})\n-        \n-        if response.status_code == 200:\n-            print(f\"File {file_id} committed successfully: {response.text}\")\n-        elif response.status_code == 404:\n-            print(f\"File {file_id} not found: {response.status_code}\")\n-        elif response.status_code == 500:\n-            print(f\"Server error for File {file_id}: {response.status_code} - {response.text}\")\n-        else:\n-            print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n-\n-\n-    @task(4)\n-    def download_dataset_glencoe(self):\n-        \"\"\"Simula la descarga del dataset en formato Glencoe.\"\"\"\n-        dataset_id = 4  # Ajusta el ID del dataset si es necesario\n-        self.client.get(f\"/dataset/download/{dataset_id}/glencoe\", name=\"/dataset/download/glencoe\")\n-\n-    @task(3)\n-    def download_dataset_splot(self):\n-        \"\"\"Simula la descarga del dataset en formato SPLOT.\"\"\"\n-        dataset_id = 4\n-        self.client.get(f\"/dataset/download/{dataset_id}/splot\", name=\"/dataset/download/splot\")\n-\n-    @task(2)\n-    def download_dataset_dimacs(self):\n-        \"\"\"Simula la descarga del dataset en formato DIMACS.\"\"\"\n-        dataset_id = 4\n-        self.client.get(f\"/dataset/download/{dataset_id}/dimacs\", name=\"/dataset/download/dimacs\")\n-\n-    @task(1)\n-    def download_dataset_zip(self):\n-        \"\"\"Simula la descarga del dataset en formato ZIP.\"\"\"\n-        dataset_id = 4\n-        self.client.get(f\"/dataset/download/{dataset_id}/zip\", name=\"/dataset/download/zip\")\n+class DownloadDatasets(TaskSet):\n+    formats = {\n+        \"Glencoe\": \"glencoe\",\n+        \"SPLOT\": \"splot\",\n+        \"DIMACS\": \"dimacs\",\n+        \"ZIP\": \"zip\"\n+    }\n \n+    @task\n+    def download_files(self):\n+        for dataset_id in self.dataset_ids:  # Itera sobre tus dataset_ids\n+            for format_name, format_value in self.formats.items():  # Itera sobre los formatos\n+                with self.client.get(\n+                    f\"/flamapy/export/dataset/{dataset_id}/{format_value}\",  # URL corregida\n+                    name=f\"Download {format_name}\",\n+                    allow_redirects=True,  # Sigue autom\u00e1ticamente las redirecciones\n+                    catch_response=True  # Captura la respuesta para an\u00e1lisis\n+                ) as response:\n+                    if response.status_code == 200:  # Descarga exitosa\n+                        response.success()\n+                    elif response.status_code == 302:  # Redirecci\u00f3n\n+                        response.success()  # Tratamos 302 como \u00e9xito\n+                    else:\n+                        response.failure(\n+                            f\"Failed to download {format_name} for dataset {dataset_id} \"\n+                            f\"with status code {response.status_code}\"\n+                        )\n \n class DatasetUser(HttpUser):\n-      \"\"\"Clase principal que define los usuarios y su comportamiento.\"\"\"\n-    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior]\n-    min_wait = 5000\n-    max_wait = 9000\n-    wait_time = between(5, 9)  # Espera entre 5 y 9 segundos entre tareas\n-    host = get_host_for_locust_testing()\n+    \"\"\"\n+    Clase principal que define los usuarios y su comportamiento.\n+    \"\"\"\n+    tasks = [CommitFileBehavior]  # Asigna la tarea de descarga\n+    min_wait = 5000  # Espera m\u00ednima de 5 segundos\n+    max_wait = 9000  # Espera m\u00e1xima de 9 segundos\n+    wait_time = between(5, 9)  # Espera aleatoria entre tareas\n+    host = \"http://localhost:5000\"  # La URL base de tu aplicaci\u00f3n\n\\ No newline at end of file"
      },
      {
        "sha": "2e2bee0c10bc622be92542708879256151e0f9db",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "modified",
        "additions": 36,
        "deletions": 27,
        "changes": 63,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -12,6 +12,7 @@\n \n DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n \n+\n def initialize_driver(download_dir=None):\n     options = Options()\n     if download_dir:\n@@ -24,67 +25,75 @@ def initialize_driver(download_dir=None):\n     driver = webdriver.Chrome(options=options)\n     return driver\n \n+\n def clean_download_folder():\n     \"\"\"Elimina todos los archivos previos en la carpeta de descargas.\"\"\"\n     if os.path.exists(DOWNLOAD_DIR):\n         for file in os.listdir(DOWNLOAD_DIR):\n             file_path = os.path.join(DOWNLOAD_DIR, file)\n             os.remove(file_path)\n \n-def is_file_downloaded_by_extension(extension, timeout=10):\n-    \"\"\"Verifica si un archivo con una extensi\u00f3n espec\u00edfica ha sido descargado.\"\"\"\n+\n+def is_file_downloaded_by_extension(extension, timeout=20, exact=False):\n+    \"\"\"\n+    Verifica si un archivo con una extensi\u00f3n espec\u00edfica ha sido descargado.\n+\n+    :param extension: Extensi\u00f3n del archivo o patr\u00f3n para b\u00fasqueda.\n+    :param timeout: Tiempo m\u00e1ximo de espera.\n+    :param exact: Si es True, busca archivos con nombre exacto. Si no, busca solo por extensi\u00f3n.\n+    \"\"\"\n     for _ in range(timeout):\n-        files = glob.glob(os.path.join(DOWNLOAD_DIR, f\"*.{extension}\"))\n+        files = glob.glob(os.path.join(DOWNLOAD_DIR, f\"{extension}\" if exact else f\"*{extension}\"))\n+        print(\"Archivos actuales en la carpeta:\", os.listdir(DOWNLOAD_DIR))  # Debug\n+        print(\"Coincidencias encontradas:\", files)  # Debug\n         if files:\n             return True\n         time.sleep(1)\n     return False\n \n-def test_download_datasets():\n-    \"\"\"Prueba la descarga de datasets en diferentes formatos.\"\"\"\n+\n+def test_download_datasets_index():\n+    \"\"\"Prueba la descarga de datasets desde el index en diferentes formatos.\"\"\"\n     driver = initialize_driver(download_dir=DOWNLOAD_DIR)\n     clean_download_folder()\n \n     try:\n         host = get_host_for_selenium_testing()\n-        driver.get(f\"{host}/\")\n-        WebDriverWait(driver, 10).until(\n-            lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n-        )\n+        driver.get(f\"{host}/\")  # P\u00e1gina index\n+        WebDriverWait(driver, 10).until(lambda d: d.execute_script(\"return document.readyState\") == \"complete\")\n \n-        # Lista de formatos y extensiones esperadas\n         formats = {\n-            \"Glencoe\": \"txt\",\n-            \"SPLOT\": \"txt\",\n-            \"DIMACS\": \"txt\",\n-            \"ZIP\": \"zip\"\n+            \"Glencoe\": \"_glencoe.zip\",\n+            \"SPLOT\": \"_splot.zip\",\n+            \"DIMACS\": \"_dimacs.zip\",\n+            \"ZIP\": \".zip\"  # Validar cualquier archivo con extensi\u00f3n .zip\n         }\n \n         for format_name, file_extension in formats.items():\n-            # Hacer clic en el bot\u00f3n \"Download\"\n+            print(f\"Probando descarga para el formato: {format_name}\")  # Debug\n             download_button = WebDriverWait(driver, 10).until(\n                 EC.element_to_be_clickable((By.XPATH, \"//button[contains(@id, 'btnDownloadDropdown')]\"))\n             )\n             ActionChains(driver).move_to_element(download_button).click().perform()\n \n-            # Seleccionar el formato del desplegable\n             dropdown_option = WebDriverWait(driver, 10).until(\n-                EC.element_to_be_clickable((By.XPATH, f\"//a[contains(@onclick, \\\"{format_name.lower()}\\\")]\"))\n+                EC.element_to_be_clickable((By.XPATH, f\"//a[contains(@onclick, \\\"{format_name.lower()}\\\") or contains(text(), 'ZIP')]\"))\n             )\n             dropdown_option.click()\n \n-            # Verificar que el archivo se ha descargado por su extensi\u00f3n\n-            print(f\"Esperando la descarga del archivo con extensi\u00f3n .{file_extension}...\")\n-            assert is_file_downloaded_by_extension(file_extension), f\"El archivo con extensi\u00f3n .{file_extension} no se descarg\u00f3 correctamente.\"\n-            print(f\"El archivo con extensi\u00f3n .{file_extension} se descarg\u00f3 correctamente.\")\n-\n-            time.sleep(2)  # Espera breve antes de continuar\n+            if format_name == \"ZIP\":\n+                # Validar cualquier archivo .zip descargado\n+                assert is_file_downloaded_by_extension(\".zip\"), f\"Archivo ZIP no descargado desde index.\"\n+            else:\n+                assert is_file_downloaded_by_extension(file_extension), f\"Archivo *{file_extension} no descargado desde index.\"\n \n-        print(\"Todos los archivos se descargaron correctamente. Test completado con \u00e9xito.\")\n+            print(f\"Archivo *{file_extension} descargado correctamente.\")\n+            clean_download_folder()\n \n+        print(\"Todos los archivos se descargaron correctamente desde el index.\")\n     finally:\n-        close_driver(driver)  # Cerrar el navegador al finalizar el test\n+        close_driver(driver)\n+\n \n-# Ejecutar el test\n if __name__ == \"__main__\":\n-    test_download_datasets()\n\\ No newline at end of file\n+    test_download_datasets_index()\n\\ No newline at end of file"
      },
      {
        "sha": "124cfcf72bfbe3604302247f142bb0613bdd53d8",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 4,
        "deletions": 14,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -1,7 +1,5 @@\n import pytest\n from flask import url_for\n-from app.modules.dataset.routes import download_dataset_format\n-\n \n @pytest.fixture(scope=\"module\")\n def test_client(test_client):\n@@ -20,7 +18,7 @@ def test_download_glencoe_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/glencoe\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"glencoe\") in response.location\n \n \n def test_download_splot_redirect(test_client):\n@@ -29,7 +27,7 @@ def test_download_splot_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/splot\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"splot\") in response.location\n \n \n def test_download_dimacs_redirect(test_client):\n@@ -38,7 +36,7 @@ def test_download_dimacs_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/dimacs\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"dimacs\") in response.location\n \n \n def test_download_zip_redirect(test_client):\n@@ -47,12 +45,4 @@ def test_download_zip_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/zip\")\n     assert response.status_code == 302\n-    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n-\n-def test_download_invalid_format(test_client):\n-    \"\"\"\n-    Testea que se retorne un error 400 para un formato no soportado.\n-    \"\"\"\n-    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n-    assert response.status_code == 400\n-    assert response.json == {\"error\": \"Formato no soportado\"}\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n\\ No newline at end of file"
      },
      {
        "sha": "77dba20ebcd49a483100e4fc73b712128864295b",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 43,
        "deletions": 3,
        "changes": 46,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -1,11 +1,14 @@\n+import os\n+import zipfile\n+import tempfile\n import logging\n+\n+from flask import send_file, jsonify, redirect, url_for\n from app.modules.hubfile.services import HubfileService\n-from flask import send_file, jsonify\n from app.modules.flamapy import flamapy_bp\n+\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n-import tempfile\n-import os\n \n from antlr4 import CommonTokenStream, FileStream\n from uvl.UVLCustomLexer import UVLCustomLexer\n@@ -115,3 +118,40 @@ def to_cnf(file_id):\n     finally:\n         # Clean up the temporary file\n         os.remove(temp_file.name)\n+\n+@flamapy_bp.route('/flamapy/export_dataset/<int:dataset_id>/<string:format>', methods=['GET'])\n+def export_dataset(dataset_id, format):\n+    \"\"\"Export all UVL files in the dataset to the specified format and package as a ZIP.\"\"\"\n+    hubfile_service = HubfileService()\n+    files = hubfile_service.get_files_by_dataset_id(dataset_id)\n+\n+    if not files:\n+        return jsonify({\"error\": \"No files found for this dataset\"}), 404\n+\n+    with tempfile.TemporaryDirectory() as temp_dir:\n+        zip_filename = os.path.join(temp_dir, f\"dataset_{dataset_id}_{format}.zip\")\n+\n+        with zipfile.ZipFile(zip_filename, 'w') as zipf:\n+            for file in files:\n+                uvl_path = file.get_path()\n+                fm = UVLReader(uvl_path).transform()\n+\n+                # Transform the file to the desired format\n+                temp_file = tempfile.NamedTemporaryFile(delete=False, suffix=f\".{format}\")\n+                try:\n+                    if format == \"glencoe\":\n+                        GlencoeWriter(temp_file.name, fm).transform()\n+                    elif format == \"splot\":\n+                        SPLOTWriter(temp_file.name, fm).transform()\n+                    elif format == \"dimacs\":\n+                        sat = FmToPysat(fm).transform()\n+                        DimacsWriter(temp_file.name, sat).transform()\n+                    else:\n+                        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+\n+                    # Add transformed file to ZIP\n+                    zipf.write(temp_file.name, arcname=f\"{file.name}.{format}\")\n+                finally:\n+                    os.remove(temp_file.name)\n+\n+        return send_file(zip_filename, as_attachment=True, download_name=f\"dataset_{dataset_id}_{format}.zip\")\n\\ No newline at end of file"
      },
      {
        "sha": "40b4d5e3509a247e2d035c5099f5ce170695a430",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -26,6 +26,16 @@ def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n     \n     def get_hubfile_by_id(self, hubfile_id: int) -> Hubfile:\n         return db.session.query(Hubfile).filter(Hubfile.id == hubfile_id).first()\n+    \n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos relacionados con un dataset.\"\"\"\n+        dataset = DataSet.query.get(dataset_id)\n+        if not dataset:\n+            return []\n+\n+        # Extrae todos los archivos de los FeatureModels relacionados\n+        files = [file for fm in dataset.feature_models for file in fm.files]\n+        return files\n \n \n class HubfileViewRecordRepository(BaseRepository):\n@@ -43,4 +53,4 @@ def __init__(self):\n \n     def total_hubfile_downloads(self) -> int:\n         max_id = self.model.query.with_entities(func.max(self.model.id)).scalar()\n-        return max_id if max_id is not None else 0\n+        return max_id if max_id is not None else 0\n\\ No newline at end of file"
      },
      {
        "sha": "1d61da9482d23b082661e52920a34f734c13d12b",
        "filename": "app/modules/hubfile/services.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fhubfile%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fhubfile%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Fservices.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -16,6 +16,11 @@ def __init__(self):\n         self.hubfile_view_record_repository = HubfileViewRecordRepository()\n         self.hubfile_download_record_repository = HubfileDownloadRecordRepository()\n \n+    # Nuevo m\u00e9todo para obtener archivos por dataset\n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos UVL asociados a un dataset.\"\"\"\n+        return self.repository.get_files_by_dataset_id(dataset_id)\n+\n     def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n         return self.repository.get_owner_user_by_hubfile(hubfile)\n \n@@ -46,4 +51,4 @@ def total_hubfile_downloads(self) -> int:\n \n class HubfileDownloadRecordService(BaseService):\n     def __init__(self):\n-        super().__init__(HubfileDownloadRecordRepository())\n+        super().__init__(HubfileDownloadRecordRepository())\n\\ No newline at end of file"
      },
      {
        "sha": "3e8b608a1a2409a516addb103772a79cfe7c30be",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -99,7 +99,7 @@ <h2>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'glencoe')\">Glencoe</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'splot')\">SPLOT</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'dimacs')\">DIMACS</a></li>\n-                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'zip')\">ZIP</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">ZIP</a></li>\n                                     </ul>\n                                 </div>                                \n                             </div>"
      },
      {
        "sha": "046d16ed02077bce70fa94658634c90c5525ac89",
        "filename": "app/modules/zenodo/services.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fzenodo%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/app%2Fmodules%2Fzenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Fservices.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -27,11 +27,11 @@ def get_zenodo_url(self):\n         ZENODO_API_URL = \"\"\n \n         if FLASK_ENV == \"development\":\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n         elif FLASK_ENV == \"production\":\n             ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://zenodo.org/api/deposit/depositions\")\n         else:\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n \n         return ZENODO_API_URL\n \n@@ -83,7 +83,6 @@ def test_full_connection(self) -> Response:\n                 \"creators\": [{\"name\": \"John Doe\"}],\n             }\n         }\n-\n         response = requests.post(self.ZENODO_API_URL, json=data, params=self.params, headers=self.headers)\n \n         if response.status_code != 201:"
      },
      {
        "sha": "54a33e2de92fe07a170425aae5155b7722058055",
        "filename": "fakenodo/__init__.py",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2F__init__.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -0,0 +1,8 @@\n+from fakenodo.app.routes import api_bp\n+from flask import Flask\n+\n+def create_app():\n+    app = Flask(__name__)\n+    with app.app_context():\n+        app.register_blueprint(api_bp)\n+    return app"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "fakenodo/app/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Fapp%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Fapp%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2F__init__.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6"
      },
      {
        "sha": "34c7f26a0ccf44b709399eb34685c72851a158d4",
        "filename": "fakenodo/app/models.py",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Fapp%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Fapp%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fmodels.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -0,0 +1,71 @@\n+class Creator:\n+    def __init__(self, name: str, id: int = None, deposition_id: int = None):\n+        self.id = id\n+        self.name = name\n+        self.deposition_id = deposition_id\n+\n+    def to_dict(self):\n+        return {\n+            'id': self.id,\n+            'name': self.name,\n+            'deposition_id': self.deposition_id\n+        }\n+\n+\n+class File:\n+    _id_counter = 1\n+\n+    def __init__(self, name: str, size: int, checksum, deposition_id: str):\n+        self.id = File._id_counter\n+        File._id_counter += 1\n+        self.name = name\n+        self.size = size\n+        self.checksum = checksum\n+        self.deposition_id = deposition_id\n+\n+    def to_dict(self):\n+        return {\n+            \"id\": self.id,\n+            \"name\": self.name,\n+            \"size\": self.size,\n+            \"checksum\": self.checksum\n+        }\n+\n+\n+class Deposition:\n+    _id_counter = 1\n+\n+    def __init__(self, title=None, upload_type=None, publication_type=None, description=None,\n+                 creators=None, keywords=None, access_right=None, license=None, doi=None, published=False, files=None):\n+        self.id = Deposition._id_counter\n+        Deposition._id_counter += 1\n+\n+        self.title = title\n+        self.upload_type = upload_type\n+        self.publication_type = publication_type\n+        self.description = description\n+        self.creators = creators\n+        self.keywords = keywords\n+        self.access_right = access_right\n+        self.license = license\n+        self.doi = doi\n+        self.published = published\n+        self.files = files\n+        self.conceptrecid = self.id - 1\n+\n+    def to_dict(self):\n+        return {\n+            \"id\": self.id,\n+            \"title\": self.title,\n+            \"upload_type\": self.upload_type,\n+            \"publication_type\": self.publication_type,\n+            \"description\": self.description,\n+            \"creators\": self.creators,\n+            \"keywords\": self.keywords,\n+            \"access_right\": self.access_right,\n+            \"license\": self.license,\n+            \"doi\": self.doi,\n+            \"published\": self.published,\n+            \"files\": self.files,\n+            \"conceptrecid\": self.conceptrecid\n+        }"
      },
      {
        "sha": "dc60d2ea029585a302642dd662a05b8cd96b19ca",
        "filename": "fakenodo/app/routes.py",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Fapp%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Fapp%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Froutes.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -0,0 +1,97 @@\n+import logging\n+import requests\n+from flask import Blueprint, jsonify, request\n+from fakenodo.app.models import Deposition\n+from fakenodo.app.services import Service\n+\n+api_bp = Blueprint(\"api_bp\", __name__)\n+logger = logging.getLogger(__name__)\n+service = Service()\n+\n+\n+@api_bp.route('/api/fakenodo/depositions', methods=['GET', 'POST'])\n+def depositions() -> tuple:\n+    def get_all_depositions() -> tuple:\n+        try:\n+            depositions = service.get_all_depositions()\n+            return jsonify(depositions), 200\n+\n+        except Exception as e:\n+            return jsonify({\"success\": False, \"message\": str(e)}), 500\n+\n+    def create_deposition() -> tuple:\n+        data = request.json\n+        try:\n+            # Create a Deposition instance with the request metadata\n+            deposition = Deposition(**data[\"metadata\"])\n+\n+            # Save the deposition in a local list\n+            response_data = service.create_new_deposition(deposition)\n+\n+            return jsonify(response_data), 201\n+        except Exception as e:\n+            return jsonify({\"success\": False, \"message\": str(e)}), 500\n+\n+    if request.method == \"GET\":\n+        return get_all_depositions()\n+    else:\n+        return create_deposition()\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/files', methods=['POST'])\n+def upload_file(deposition_id) -> tuple:\n+    try:\n+        for file in request.files.getlist('file'):\n+            if not file:\n+                return jsonify({\"success\": False, \"message\": \"Missing file\"}), 400\n+            service.upload_file(file, deposition_id)\n+\n+        return jsonify('File uploaded succesfully'), 201\n+    except Exception as e:\n+        error_message = f\"Failed to upload files. Error details: {e}\"\n+        raise Exception(error_message)\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>', methods=['GET', 'DELETE'])\n+def deposition(deposition_id):\n+    try:\n+        # Target deposition\n+        deposition = service.get_deposition(deposition_id)\n+\n+        def get_deposition():\n+            resposne = deposition.to_dict()\n+            return jsonify(resposne), 200\n+\n+        def delete_deposition():\n+            service.delete_deposition(deposition)\n+            return jsonify(f\"Deposition with id {deposition_id} deleted succesfully\"), 204\n+\n+        if request.method == 'GET':\n+            return get_deposition()\n+        else:\n+            return delete_deposition()\n+\n+    except Exception:\n+        return jsonify(f\"Cannot find deposition with id {deposition_id}\"), 404\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/actions/publish', methods=['POST'])\n+def publish_deposition(deposition_id) -> tuple:\n+    try:\n+        # Target deposition\n+        deposition = service.get_deposition(deposition_id)\n+        service.generate_doi(deposition_id)\n+        service.publish_deposition(deposition)\n+        return jsonify(f\"Deposition with id {deposition_id} published succesfully\"), 202\n+\n+    except Exception:\n+        return jsonify(\"Deposition not found\"), 404\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/doi', methods=['GET'])\n+def get_doi(deposition_id) -> tuple:\n+    try:\n+        doi = service.get_doi(deposition_id)\n+        return jsonify({\"doi\": doi}), 200\n+    except Exception as e:\n+        return jsonify({\"success\": False, \"message\": str(e)}), 500"
      },
      {
        "sha": "9792be9468ae3f990042133d2afbb4fda5bd3877",
        "filename": "fakenodo/app/services.py",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Fapp%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Fapp%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fservices.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -0,0 +1,75 @@\n+import hashlib\n+import logging\n+from random import randint\n+from typing import List\n+from fakenodo.app.models import Deposition, File\n+from dotenv import load_dotenv\n+from core.services.BaseService import BaseService\n+\n+logger = logging.getLogger(__name__)\n+\n+load_dotenv()\n+\n+depositions = []\n+\n+class Service(BaseService):\n+    def __init__(self):\n+        self.headers = {\"Content-Type\": \"application/json\"}\n+\n+    def get_all_depositions(self) -> list:\n+        return [deposition.to_dict() for deposition in depositions]\n+\n+    def create_new_deposition(self, deposition: Deposition) -> dict:\n+        depositions.append(deposition)\n+        return deposition.to_dict()\n+\n+    def upload_file(self, file, deposition_id) -> None:\n+        try:\n+            # Read file content\n+            file_data = file.read()\n+\n+            # Create the file instance\n+            file_instance = File(\n+                name=file.filename,\n+                size=len(file_data),\n+                checksum=hashlib.md5(file_data).hexdigest(),\n+                deposition_id=deposition_id\n+            )\n+\n+            target_deposition = self.get_deposition(deposition_id)\n+            if target_deposition is None:\n+                raise FileNotFoundError(\"Deposition not found\")\n+            if target_deposition.files is None:\n+                target_deposition.files = [file_instance.to_dict()]\n+            else:\n+                target_deposition.files.append(file_instance.to_dict())\n+\n+        except Exception as e:\n+            print(f\"Error en la subida del archivo: {e}\")\n+\n+    def publish_deposition(self, deposition: Deposition) -> dict:\n+        if deposition.doi!=None:\n+            deposition.published = True\n+        return deposition.to_dict()\n+\n+    def delete_deposition(self, deposition: Deposition) -> None:\n+        depositions.remove(deposition)\n+\n+    def get_deposition(self, deposition_id: int) -> Deposition | None:\n+        return [deposition for deposition in depositions if deposition_id == deposition.id][0]\n+\n+    def get_doi(self, deposition_id: int) -> str:\n+        return self.get_deposition(deposition_id).doi\n+\n+    def generate_doi_id():\n+        identifier = randint(10000,1000000)\n+        while True:\n+            yield identifier\n+            identifier+=1\n+\n+    doi_generator = generate_doi_id()\n+\n+    def generate_doi(self,deposition_id):\n+        deposition = self.get_deposition(deposition_id)\n+        doi_id = next(self.doi_generator)\n+        deposition.doi = str(doi_id)+\"/dataset.\"+str(doi_id)"
      },
      {
        "sha": "d2a599dd699a849fbac0b49bf05c76c52b5f516c",
        "filename": "fakenodo/conftest.py",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Fconftest.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Fconftest.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fconftest.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -0,0 +1,14 @@\n+import pytest\n+from flask import Flask\n+from fakenodo.app.routes import api_bp\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client():\n+    app = Flask(__name__)\n+    app.config[\"TESTING\"] = True\n+    app.config[\"SERVER_NAME\"] = \"localhost:5001\"\n+    app.register_blueprint(api_bp)\n+    with app.test_client() as client:\n+        with app.app_context():\n+            yield client"
      },
      {
        "sha": "6073984d83d3c02a135714af400b13bac9c32687",
        "filename": "fakenodo/pytest.ini",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Fpytest.ini",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Fpytest.ini",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fpytest.ini?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -0,0 +1,4 @@\n+[pytest]\n+filterwarnings =\n+    ignore::DeprecationWarning\n+testpaths = fakenodo tests"
      },
      {
        "sha": "65e0caf5717f6844e459e42f72073254d12b694a",
        "filename": "fakenodo/run.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Frun.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/37293581ec0728fb350a7c2fd3633193be9962a6/fakenodo%2Frun.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Frun.py?ref=37293581ec0728fb350a7c2fd3633193be9962a6",
        "patch": "@@ -0,0 +1,6 @@\n+from fakenodo import create_app\n+\n+\n+app = create_app()\n+if __name__ == \"__main__\":\n+    app.run(host=\"0.0.0.0\", port=5001, debug=True)"
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file1.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file2.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file3.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file7.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file8.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file9.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file4.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file5.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file6.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file10.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file11.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file12.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      }
    ]
  },
  {
    "sha": "81177a07059668758de093a416896ab17cb1535e",
    "node_id": "C_kwDONDG85doAKDgxMTc3YTA3MDU5NjY4NzU4ZGUwOTNhNDE2ODk2YWIxN2NiMTUzNWU",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T23:53:03Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T23:53:03Z"
      },
      "message": "feat(dataset): finished syntax checker view, it now properly renders the model with the error",
      "tree": {
        "sha": "246c9c05b0de458e81696fa6e13fb739796c44b2",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/246c9c05b0de458e81696fa6e13fb739796c44b2"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/81177a07059668758de093a416896ab17cb1535e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/81177a07059668758de093a416896ab17cb1535e",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/81177a07059668758de093a416896ab17cb1535e",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/81177a07059668758de093a416896ab17cb1535e/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/baf61d00fa0753aeb28c505d68efbaf74860aa98"
      }
    ],
    "files": [
      {
        "sha": "26b18c2644779529b71f900e01adaeeccb9e7aec",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 46,
        "deletions": 8,
        "changes": 54,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -117,7 +117,11 @@ var currentId = 0;\n \t}\n \n         function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n+\t    if (document.getElementById(\"upload_button\")) {\n+            \tdocument.getElementById(\"upload_button\").style.display = \"block\";\n+\t    } else {\n+\t\tdocument.getElementById(\"check_model_button\").style.display = \"block\";\n+\t    }\n             document.getElementById(\"loading\").style.display = \"none\";\n         }\n \n@@ -144,7 +148,6 @@ var currentId = 0;\n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n-\t\t\t\tconsole.log(\"hi\");\n \t\t\t\tclean_upload_errors();\n \t\t\t\tshow_loading(\"check\");\n \n@@ -154,26 +157,61 @@ var currentId = 0;\n \t\t\t\t\tbody: ''\n \t\t\t\t})\n \t\t\t\t\t.then(response => {\n+\t\t\t\t\t\tlet model = document.getElementById('rendered_model')\n+\t\t\t\t\t\twhile (model.firstChild) {\n+\t\t\t\t\t\t\tmodel.removeChild(model.firstChild)\n+\t\t\t\t\t\t};\n \t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\tlet first_row = document.createElement('p');\n+\t\t\t\t\t\t\tfirst_row.bottom_margin = '15';\n+\t\t\t\t\t\t\tfirst_row.textContent = 'This model contains no errors. Here\\'s the model:';\t\n+\t\t\t\t\t\t\tmodel.appendChild(first_row);\n \t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n \t\t\t\t\t\t\tresponse.json().then(data => {\n-\t\t\t\t\t\t\t\tconsole.log(data.message);\n-\t\t\t\t\t\t\t\t//window.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\tfor (let i=0;i<data.message.length;i++) {\n+\t\t\t\t\t\t\t\t\tlet row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\trow.style.margin = '0';\n+\t\t\t\t\t\t\t\t\trow.style.padding = '0';\n+\t\t\t\t\t\t\t\t\tlet row_text = data.message[i];\n+\t\t\t\t\t\t\t\t\trow_text = row_text.replace(/\\s/g, '\\u00A0');\n+\t\t\t\t\t\t\t\t\trow.textContent = row_text;\n+\t\t\t\t\t\t\t\t\tmodel.appendChild(row);\n+\t\t\t\t\t\t\t\t};\n+\t\t\t\t\t\t\t\tmodel.style.display = 'block';\n+\t\t\t\t\t\t\t\thide_loading();\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tresponse.json().then(data => {\n-\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.error);\n+\t\t\t\t\t\t\t\tif (data.syntax) {\n+\t\t\t\t\t\t\t\t\tlet first_row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\tfirst_row.bottom_margin = '15';\n+\t\t\t\t\t\t\t\t\tfirst_row.top_margin = '15';\n+\t\t\t\t\t\t\t\t\tfirst_row.textContent = 'Here\\'s the model with the error highlighted:';\t\n+\t\t\t\t\t\t\t\t\tmodel.appendChild(first_row);\n+\t\t\t\t\t\t\t\t\tfor (let i=0;i<data.message.length;i++) {\n+\t\t\t\t\t\t\t\t\t\tlet row = document.createElement('p');\n+\t\t\t\t\t\t\t\t\t\trow.style.margin = '0';\n+\t\t\t\t\t\t\t\t\t\trow.style.padding = '0';\n+\t\t\t\t\t\t\t\t\t\tlet row_text = data.message[i];\n+\t\t\t\t\t\t\t\t\t\trow_text = row_text.replace(/\\s/g, '\\u00A0');\n+\t\t\t\t\t\t\t\t\t\trow.textContent = row_text;\n+\t\t\t\t\t\t\t\t\t\tmodel.appendChild(row);\n+\t\t\t\t\t\t\t\t\t};\n+\t\t\t\t\t\t\t\t};\n \t\t\t\t\t\t\t\thide_loading();\n-\n-\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\t\t\t\t\t\t\t\tif (data.syntax) {\n+\t\t\t\t\t\t\t\t\twrite_upload_error(data.error);\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\t\t\t\t\t\t\t\t};\n \n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t})\n \t\t\t\t\t.catch(error => {\n \t\t\t\t\t\tconsole.error('Error in POST request:', error);\n \t\t\t\t\t});\n-\t\t\t\tconsole.log(\"yeah\")\n \n \t\t\t});\n \t\t}"
      },
      {
        "sha": "115a30d6f7e7ec61f31f5c095c773afb81f92c4f",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 29,
        "deletions": 15,
        "changes": 44,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -116,10 +116,14 @@ def check_dataset():\n         file_path = os.path.join(temp_folder, filename)\n         \n         with open(file_path) as f:\n-            indent = 0\n-            x = \"\".join([i for i in f])\n-            print(x)\n-        return jsonify({\"message\": x}),200\n+            x = [i.rstrip() for i in f]\n+        try:\n+            get_tree(file_path)\n+        except Exception as e:\n+            line = int(str(e).split(':')[1].split(' ')[-1])\n+            x[line-1] = x[line-1] + \"   <--- HERE'S THE ERROR\"\n+            return jsonify({\"message\":x,\"error\":str(e),\"syntax\":True}),400\n+        return jsonify({\"message\": x,\"error\":False}),200\n    \n     # setting things up for the checker to have only one file available\n     temp_folder = current_user.temp_folder()\n@@ -129,11 +133,7 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-\n-@dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n-@login_required\n-def upload():\n-    file = request.files[\"file\"]\n+def upload_aux(file,check):\n     temp_folder = current_user.temp_folder()\n \n     if not file or not file.filename.endswith(\".uvl\"):\n@@ -160,12 +160,13 @@ def upload():\n         file.save(file_path)\n     except Exception as e:\n         return jsonify({\"message\": str(e)}), 500\n-    try:\n-        get_tree(file_path)\n-    except Exception as e:\n-        os.remove(file_path)\n-        return jsonify({\"message\": str(e),\"syntax\": True}),400\n-\n+    if check:\n+        try:\n+            get_tree(file_path)\n+        except Exception as e:\n+            os.remove(file_path)\n+            return jsonify({\"message\": str(e),\"syntax\": True}),400\n+    \n     return (\n         jsonify(\n             {\n@@ -176,6 +177,19 @@ def upload():\n         200,\n     )\n \n+@dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n+@login_required\n+def upload():\n+    file = request.files[\"file\"]\n+    return upload_aux(file,True)\n+\n+@dataset_bp.route(\"/dataset/file/upload/check\", methods=[\"POST\"])\n+@login_required\n+def upload_check():\n+    file = request.files[\"file\"]\n+    return upload_aux(file,False)\n+\n+\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()"
      },
      {
        "sha": "e344337cbd0bb2f488c040d1559d8d601b8a9879",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "added",
        "additions": 266,
        "deletions": 0,
        "changes": 266,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -0,0 +1,266 @@\n+{% extends \"base_template.html\" %}\n+{% block title %}Check UVL model{% endblock %}\n+{% block content %}\n+    <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n+\n+    <div class=\"row\">\n+        <div class=\"col-12 mb-3\">\n+            <div class=\"alert alert-warning\" role=\"alert\" id=\"test_zenodo_connection_error\" style=\"display: none\">\n+                <div class=\"alert-message\">\n+\n+                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n+                        connection to the Zenodo API</h4>\n+                    <p class=\"p-0 m-0\">\n+                        There seems to be some kind of problem with the Zenodo API and synchronization of your dataset\n+                        files may not be possible. We will save your files locally to eventually synchronize them with\n+                        Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n+                        anything about it.\n+                    </p>\n+                </div>\n+            </div>\n+        </div>\n+\n+    </div>\n+\n+    {% if messages %}\n+        <ul>\n+            {% for message in messages %}\n+                <li>{{ message }}</li>\n+            {% endfor %}\n+        </ul>\n+    {% endif %}\n+    <div class=\"row\">\n+        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+            <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n+            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n+                \n+\t\t{{ form.hidden_tag() }}\n+                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n+                    <div id=\"dropzone-text\"></div>\n+                </form>\n+                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n+                    </span>\n+                <ul class=\"mt-2\" id=\"file-list\"></ul>\n+                <script>\n+                    let dropzone = Dropzone.options.myDropzone = {\n+                        url: \"/dataset/file/upload/check\",\n+                        paramName: 'file',\n+                        maxFilesize: 10,\n+                        acceptedFiles: '.uvl',\n+                        init: function () {\n+\t\t\t\tlet fileList = document.getElementById('file-list');\n+\t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n+\t\t\t\tlet alerts = document.getElementById('alerts');\n+\t\t\t\tthis.on('addedfile', function (file) {\n+\t\t\t\t\tlet ext = file.name.split('.').pop();\n+\t\t\t\t\tif (ext !== 'uvl') {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+\t\t\t\t\telse if (fileList.childElementCount > 0) {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\t\t\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+                            });\n+                            this.on('success', function (file, response) {\n+                                let dropzone = this;\n+                                show_upload_dataset();\n+                                console.log(\"File uploaded: \", response);\n+                                // actions when UVL model is uploaded\n+                                let listItem = document.createElement('li');\n+                                let h4Element = document.createElement('h4');\n+                                h4Element.textContent = response.filename;\n+                                listItem.appendChild(h4Element);\n+                                // generate incremental id for form\n+                                let formUniqueId = generateIncrementalId();\n+                               /*\n+                                    ##########################################\n+                                    REMOVE BUTTON\n+                                    ##########################################\n+                                */\n+                                // remove button\n+                                let removeButton = document.createElement('button');\n+                                removeButton.innerHTML = 'Delete model';\n+                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n+                                removeButton.style.borderRadius = '5px';\n+                                removeButton.addEventListener('click', function () {\n+\t\t\t\t    let model = document.getElementById('rendered_model')\n+\t\t\t\t    while (model.firstChild) {\n+\t\t\t\t\t    model.removeChild(model.firstChild)\n+\t\t\t\t    };\n+                                    fileList.removeChild(listItem);\n+                                    this.removeFile(file);\n+                                    // Ajax request\n+                                    let xhr = new XMLHttpRequest();\n+                                    xhr.open('POST', '/dataset/file/delete', true);\n+                                    xhr.setRequestHeader('Content-Type', 'application/json');\n+                                    xhr.onload = function () {\n+                                        if (xhr.status === 200) {\n+                                            console.log('Deleted file from server');\n+                                            if (dropzone.files.length === 0) {\n+                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n+                                                clean_upload_errors();\n+                                            }\n+                                        }\n+                                    };\n+                                    xhr.send(JSON.stringify({file: file.name}));\n+                                }.bind(this));\n+                                /*\n+                                    ##########################################\n+                                    APPEND BUTTONS\n+                                    ##########################################\n+                                */\n+                                listItem.appendChild(removeButton);\n+                                /*\n+                                    ##########################################\n+                                    UVL FORM\n+                                    ##########################################\n+                                */\n+                                // create specific form for UVL\n+                                let formContainer = document.createElement('div');\n+                                formContainer.id = formUniqueId + \"_form\";\n+                                formContainer.classList.add('uvl_form', \"mt-3\");\n+                                formContainer.style.display = \"none\";\n+                                formContainer.innerHTML = `\n+                                    <div class=\"row\">\n+                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n+                                        <div class=\"col-12\">\n+                                            <div class=\"row\">\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Title</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Description</label>\n+                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n+                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n+                                                            <option value=\"none\">None</option>\n+                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n+                                                            <option value=\"book\">Book</option>\n+                                                            <option value=\"section\">Book Section</option>\n+                                                            <option value=\"conferencepaper\">Conference Paper</option>\n+                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n+                                                            <option value=\"article\">Journal Article</option>\n+                                                            <option value=\"patent\">Patent</option>\n+                                                            <option value=\"preprint\">Preprint</option>\n+                                                            <option value=\"deliverable\">Project Deliverable</option>\n+                                                            <option value=\"milestone\">Project Milestone</option>\n+                                                            <option value=\"proposal\">Proposal</option>\n+                                                            <option value=\"report\">Report</option>\n+                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n+                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n+                                                            <option value=\"technicalnote\">Technical Note</option>\n+                                                            <option value=\"thesis\">Thesis</option>\n+                                                            <option value=\"workingpaper\">Working Paper</option>\n+                                                            <option value=\"other\">Other</option>\n+                                                        </select>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n+                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">UVL version</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Authors</label>\n+                                                        <div id=\"` + formContainer.id + `_authors\">\n+                                                        </div>\n+                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n+                                                    </div>\n+                                                </div>\n+                                            </div>\n+                                        </div>\n+                                    </div>\n+                                    `;\n+                                listItem.appendChild(formContainer);\n+                                fileList.appendChild(listItem);\n+                            });\n+                            this.on('addedfile', function (file) {\n+\n+                                let ext = file.name.split('.').pop();\n+                                if (ext !== 'uvl') {\n+                                    this.removeFile(file);\n+\n+                                    let alert = document.createElement('p');\n+                                    alert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t    if (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t    }\n+                                    alerts.appendChild(alert);\n+                                    alerts.style.display = 'block';\n+                                }\n+\n+                            });\n+                        }\n+                    };\n+                </script>\n+            </div>\n+        </div>\n+    </div>\n+    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n+        <div class=\"col-12\">\n+            <hr>\n+            <h1 class=\"h3 mb-3 mt-2\">Check model and render errors</h1>\n+            <div style=\"padding-left: 2rem\">\n+                <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n+                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n+                    Check</button>\n+                <div id=\"loading\" style=\"display: none\">\n+                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n+                    Uploading and checking model, please wait...\n+                </div>\n+                <div class=\"row\">\n+                    <div class=\"col-12 mb-3\">\n+                    </div>\n+                </div>\n+                \n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\"></span>\n+                <p class=\"p-0 m-0\" id=\"rendered_model\"></p>\n+\t    </div>\n+\t    <script>\n+\t\t    const upload_button = document.getElementById('check_model_button');\n+\t\t    upload_button.disabled = false;\n+\t    </script>\n+\n+        </div>\n+    </div>\n+{% endblock %}\n+{% block scripts %}\n+    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "dbca6f3d31a8c62779ec70dd7c38e3c30e4b6915",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/81177a07059668758de093a416896ab17cb1535e/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/81177a07059668758de093a416896ab17cb1535e/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=81177a07059668758de093a416896ab17cb1535e",
        "patch": "@@ -110,7 +110,12 @@\n                                 class=\"align-middle\">My datasets</span>\n                         </a>\n                     </li>\n-\n+\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.check_dataset' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n+                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n+                                class=\"align-middle\">Check model</span>\n+                        </a>\n+                    </li>\t\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>"
      }
    ]
  },
  {
    "sha": "abd20bce07616b1bf137272e273c6799bf35ed80",
    "node_id": "C_kwDONDG85doAKGFiZDIwYmNlMDc2MTZiMWJmMTM3MjcyZTI3M2M2Nzk5YmYzNWVkODA",
    "commit": {
      "author": {
        "name": "raumonmar1",
        "email": "72814383+raumonmar1@users.noreply.github.com",
        "date": "2024-12-15T21:52:37Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-15T21:52:37Z"
      },
      "message": "Merge pull request #36 from flamenquin-hub-single/fix_download_differents_formats\n\nfix(dataset):Donwload dataset on index and viewDataset",
      "tree": {
        "sha": "5c8b97766c61d50084a8cab469a4b8b0d1c85f7b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/5c8b97766c61d50084a8cab469a4b8b0d1c85f7b"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/abd20bce07616b1bf137272e273c6799bf35ed80",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnX0+lCRC1aQ7uu5UhlAAAdbkQAHUS6H42RuqVnf4jTL9jkug4\nf40RxXn4hFEPbaswx2LwMrA72NQ/wQgLoSbvUrPFBBR8OGnKCEiXpY0LHmkR7JrY\nr5NnqTiNyCGNUJkJH+Yr/LKar4/jYsbZ3CkF+XbG6FzVYgW2TUBFx8PdhVD5KcS2\nfOuqZsjgJq0IpNnk11azyfwfMW8TkqybhnNYsc3KoqSmEHCYw6mIWF9Fr+uVMuwm\nFS5wj214menhljW710FODn/bbBT0iubn7URWX3wL4Dh2ReWbmdyNpnHwtVDOyJHI\n+o1Ug+ehXwLvDWUv0eWSAWwzxzSD014+252GAKE/7S/E5EIvLsEEusCGE9f9SxGQ\nPhQulx+0SzsQo/uynOVIXKuUBtkhgxFZ+6523GB7lQhn4uMSKiFpx5+bW47Fo2UJ\nymMJ6Vr6AJf+NzQV6ARW5XjQfz1NrlOGsyN4VqtIgVgZuHIpr3oBEjnD3Y0YEImr\nHzGzF1DzIlzUV8RamALCt6QGJlAApq1XIR1usYDuthtvkOkGJe0wYD6/G30DHG2D\nYuSaRmkZ1Y8r6GH7g+kOiZEAb0JKZ1pbFQXYea+u0UrOgqSwRQ1sMWO3X+qpKO3i\nIhj5bquo+LOItq08d8egB5n77WYvv21Trruqxlr2+GwYli5PeiKCzkr4jJC215Yl\n6/Z1vfcPu7scbC7PDHfd\n=mbRH\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 5c8b97766c61d50084a8cab469a4b8b0d1c85f7b\nparent dcd158894d58f9295a608747a99d74748c9fa7c7\nparent d085e179819445f9eaae806700084b31e2577bbe\nauthor raumonmar1 <72814383+raumonmar1@users.noreply.github.com> 1734299557 +0100\ncommitter GitHub <noreply@github.com> 1734299557 +0100\n\nMerge pull request #36 from flamenquin-hub-single/fix_download_differents_formats\n\nfix(dataset):Donwload dataset on index and viewDataset",
        "verified_at": "2024-12-15T21:53:55Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/abd20bce07616b1bf137272e273c6799bf35ed80",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/abd20bce07616b1bf137272e273c6799bf35ed80",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/abd20bce07616b1bf137272e273c6799bf35ed80/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dcd158894d58f9295a608747a99d74748c9fa7c7",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/dcd158894d58f9295a608747a99d74748c9fa7c7",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/dcd158894d58f9295a608747a99d74748c9fa7c7"
      },
      {
        "sha": "d085e179819445f9eaae806700084b31e2577bbe",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d085e179819445f9eaae806700084b31e2577bbe",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d085e179819445f9eaae806700084b31e2577bbe"
      }
    ],
    "files": [
      {
        "sha": "07513d506e71b0fe1cb8b2e4da180503759e91ed",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 4,
        "deletions": 24,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=abd20bce07616b1bf137272e273c6799bf35ed80",
        "patch": "@@ -25,8 +25,6 @@\n )\n from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n-from app.modules.dataset.parser import get_tree\n-logger = logging.getLogger(__name__)\n from flask_dance.contrib.github import github\n \n \n@@ -101,7 +99,6 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n-\n @dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n @login_required\n def check_dataset():\n@@ -129,7 +126,6 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -160,11 +156,6 @@ def upload():\n         file.save(file_path)\n     except Exception as e:\n         return jsonify({\"message\": str(e)}), 500\n-    try:\n-        get_tree(file_path)\n-    except Exception as e:\n-        os.remove(file_path)\n-        return jsonify({\"message\": str(e),\"syntax\": True}),400\n \n     return (\n         jsonify(\n@@ -404,18 +395,7 @@ def commit_file(file_id):\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n-@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n-def download_dataset_format(file_id, format):\n-    \"\"\"Endpoint to download dataset in the specified format.\n-    Formats supported: glencoe, splot, dimacs, zip.\n-    \"\"\"\n-    if format == \"glencoe\":\n-        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n-    elif format == \"splot\":\n-        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n-    elif format == \"dimacs\":\n-        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n-    elif format == \"zip\":\n-        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n-    else:\n-        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+@dataset_bp.route(\"/dataset/download/<int:dataset_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(dataset_id, format):\n+    \"\"\"Redirect to Flamapy's export_dataset endpoint.\"\"\"\n+    return redirect(url_for(\"flamapy.export_dataset\", dataset_id=dataset_id, format=format))"
      },
      {
        "sha": "0d473574be64451c4ad63c85c34c85026d4a20be",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=abd20bce07616b1bf137272e273c6799bf35ed80",
        "patch": "@@ -41,35 +41,33 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n-                <div class=\"mt-2\">\n                     <div class=\"btn-group\" role=\"group\">\n                         <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n                             <i data-feather=\"download\"></i> Download\n                         </button>\n                         <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='glencoe') }}\">\n                                     Glencoe\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='dimacs') }}\">\n                                     DIMACS\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='splot') }}\">\n                                     SPLOT\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n-                                    ZIP\n-                                </a>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">\n+                                    ZIP (Original UVLs)\n+                                </a>                                \n                             </li>\n                         </ul>\n-                    </div>\n-                </div>\n+                    </div>     \n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">\n@@ -589,4 +587,4 @@ <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex\n     }\n </script>\n \n-{% endblock %}\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "275fbf9bd9d3ad0655d68861bc8799a8415e9560",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 34,
        "deletions": 44,
        "changes": 78,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=abd20bce07616b1bf137272e273c6799bf35ed80",
        "patch": "@@ -75,50 +75,40 @@ def ensure_logged_in(self):\n         else:\n             print(\"User successfully logged in.\")\n \n-    @task\n-    def commit_dataset(self):\n-        file_id = random.randint(1, 30)  \n-        response = self.client.post(f\"/dataset/commit_file/{file_id}\", json={})\n-        \n-        if response.status_code == 200:\n-            print(f\"File {file_id} committed successfully: {response.text}\")\n-        elif response.status_code == 404:\n-            print(f\"File {file_id} not found: {response.status_code}\")\n-        elif response.status_code == 500:\n-            print(f\"Server error for File {file_id}: {response.status_code} - {response.text}\")\n-        else:\n-            print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n-\n-\n-    @task(4)\n-    def download_dataset_glencoe(self):\n-        \"\"\"Simula la descarga del dataset en formato Glencoe.\"\"\"\n-        dataset_id = 4  # Ajusta el ID del dataset si es necesario\n-        self.client.get(f\"/dataset/download/{dataset_id}/glencoe\", name=\"/dataset/download/glencoe\")\n-\n-    @task(3)\n-    def download_dataset_splot(self):\n-        \"\"\"Simula la descarga del dataset en formato SPLOT.\"\"\"\n-        dataset_id = 4\n-        self.client.get(f\"/dataset/download/{dataset_id}/splot\", name=\"/dataset/download/splot\")\n-\n-    @task(2)\n-    def download_dataset_dimacs(self):\n-        \"\"\"Simula la descarga del dataset en formato DIMACS.\"\"\"\n-        dataset_id = 4\n-        self.client.get(f\"/dataset/download/{dataset_id}/dimacs\", name=\"/dataset/download/dimacs\")\n-\n-    @task(1)\n-    def download_dataset_zip(self):\n-        \"\"\"Simula la descarga del dataset en formato ZIP.\"\"\"\n-        dataset_id = 4\n-        self.client.get(f\"/dataset/download/{dataset_id}/zip\", name=\"/dataset/download/zip\")\n+class DownloadDatasets(TaskSet):\n+    formats = {\n+        \"Glencoe\": \"glencoe\",\n+        \"SPLOT\": \"splot\",\n+        \"DIMACS\": \"dimacs\",\n+        \"ZIP\": \"zip\"\n+    }\n \n+    @task\n+    def download_files(self):\n+        for dataset_id in self.dataset_ids:  # Itera sobre tus dataset_ids\n+            for format_name, format_value in self.formats.items():  # Itera sobre los formatos\n+                with self.client.get(\n+                    f\"/flamapy/export/dataset/{dataset_id}/{format_value}\",  # URL corregida\n+                    name=f\"Download {format_name}\",\n+                    allow_redirects=True,  # Sigue autom\u00e1ticamente las redirecciones\n+                    catch_response=True  # Captura la respuesta para an\u00e1lisis\n+                ) as response:\n+                    if response.status_code == 200:  # Descarga exitosa\n+                        response.success()\n+                    elif response.status_code == 302:  # Redirecci\u00f3n\n+                        response.success()  # Tratamos 302 como \u00e9xito\n+                    else:\n+                        response.failure(\n+                            f\"Failed to download {format_name} for dataset {dataset_id} \"\n+                            f\"with status code {response.status_code}\"\n+                        )\n \n class DatasetUser(HttpUser):\n-      \"\"\"Clase principal que define los usuarios y su comportamiento.\"\"\"\n-    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior]\n-    min_wait = 5000\n-    max_wait = 9000\n-    wait_time = between(5, 9)  # Espera entre 5 y 9 segundos entre tareas\n-    host = get_host_for_locust_testing()\n+    \"\"\"\n+    Clase principal que define los usuarios y su comportamiento.\n+    \"\"\"\n+    tasks = [CommitFileBehavior]  # Asigna la tarea de descarga\n+    min_wait = 5000  # Espera m\u00ednima de 5 segundos\n+    max_wait = 9000  # Espera m\u00e1xima de 9 segundos\n+    wait_time = between(5, 9)  # Espera aleatoria entre tareas\n+    host = \"http://localhost:5000\"  # La URL base de tu aplicaci\u00f3n\n\\ No newline at end of file"
      },
      {
        "sha": "2e2bee0c10bc622be92542708879256151e0f9db",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "modified",
        "additions": 36,
        "deletions": 27,
        "changes": 63,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=abd20bce07616b1bf137272e273c6799bf35ed80",
        "patch": "@@ -12,6 +12,7 @@\n \n DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n \n+\n def initialize_driver(download_dir=None):\n     options = Options()\n     if download_dir:\n@@ -24,67 +25,75 @@ def initialize_driver(download_dir=None):\n     driver = webdriver.Chrome(options=options)\n     return driver\n \n+\n def clean_download_folder():\n     \"\"\"Elimina todos los archivos previos en la carpeta de descargas.\"\"\"\n     if os.path.exists(DOWNLOAD_DIR):\n         for file in os.listdir(DOWNLOAD_DIR):\n             file_path = os.path.join(DOWNLOAD_DIR, file)\n             os.remove(file_path)\n \n-def is_file_downloaded_by_extension(extension, timeout=10):\n-    \"\"\"Verifica si un archivo con una extensi\u00f3n espec\u00edfica ha sido descargado.\"\"\"\n+\n+def is_file_downloaded_by_extension(extension, timeout=20, exact=False):\n+    \"\"\"\n+    Verifica si un archivo con una extensi\u00f3n espec\u00edfica ha sido descargado.\n+\n+    :param extension: Extensi\u00f3n del archivo o patr\u00f3n para b\u00fasqueda.\n+    :param timeout: Tiempo m\u00e1ximo de espera.\n+    :param exact: Si es True, busca archivos con nombre exacto. Si no, busca solo por extensi\u00f3n.\n+    \"\"\"\n     for _ in range(timeout):\n-        files = glob.glob(os.path.join(DOWNLOAD_DIR, f\"*.{extension}\"))\n+        files = glob.glob(os.path.join(DOWNLOAD_DIR, f\"{extension}\" if exact else f\"*{extension}\"))\n+        print(\"Archivos actuales en la carpeta:\", os.listdir(DOWNLOAD_DIR))  # Debug\n+        print(\"Coincidencias encontradas:\", files)  # Debug\n         if files:\n             return True\n         time.sleep(1)\n     return False\n \n-def test_download_datasets():\n-    \"\"\"Prueba la descarga de datasets en diferentes formatos.\"\"\"\n+\n+def test_download_datasets_index():\n+    \"\"\"Prueba la descarga de datasets desde el index en diferentes formatos.\"\"\"\n     driver = initialize_driver(download_dir=DOWNLOAD_DIR)\n     clean_download_folder()\n \n     try:\n         host = get_host_for_selenium_testing()\n-        driver.get(f\"{host}/\")\n-        WebDriverWait(driver, 10).until(\n-            lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n-        )\n+        driver.get(f\"{host}/\")  # P\u00e1gina index\n+        WebDriverWait(driver, 10).until(lambda d: d.execute_script(\"return document.readyState\") == \"complete\")\n \n-        # Lista de formatos y extensiones esperadas\n         formats = {\n-            \"Glencoe\": \"txt\",\n-            \"SPLOT\": \"txt\",\n-            \"DIMACS\": \"txt\",\n-            \"ZIP\": \"zip\"\n+            \"Glencoe\": \"_glencoe.zip\",\n+            \"SPLOT\": \"_splot.zip\",\n+            \"DIMACS\": \"_dimacs.zip\",\n+            \"ZIP\": \".zip\"  # Validar cualquier archivo con extensi\u00f3n .zip\n         }\n \n         for format_name, file_extension in formats.items():\n-            # Hacer clic en el bot\u00f3n \"Download\"\n+            print(f\"Probando descarga para el formato: {format_name}\")  # Debug\n             download_button = WebDriverWait(driver, 10).until(\n                 EC.element_to_be_clickable((By.XPATH, \"//button[contains(@id, 'btnDownloadDropdown')]\"))\n             )\n             ActionChains(driver).move_to_element(download_button).click().perform()\n \n-            # Seleccionar el formato del desplegable\n             dropdown_option = WebDriverWait(driver, 10).until(\n-                EC.element_to_be_clickable((By.XPATH, f\"//a[contains(@onclick, \\\"{format_name.lower()}\\\")]\"))\n+                EC.element_to_be_clickable((By.XPATH, f\"//a[contains(@onclick, \\\"{format_name.lower()}\\\") or contains(text(), 'ZIP')]\"))\n             )\n             dropdown_option.click()\n \n-            # Verificar que el archivo se ha descargado por su extensi\u00f3n\n-            print(f\"Esperando la descarga del archivo con extensi\u00f3n .{file_extension}...\")\n-            assert is_file_downloaded_by_extension(file_extension), f\"El archivo con extensi\u00f3n .{file_extension} no se descarg\u00f3 correctamente.\"\n-            print(f\"El archivo con extensi\u00f3n .{file_extension} se descarg\u00f3 correctamente.\")\n-\n-            time.sleep(2)  # Espera breve antes de continuar\n+            if format_name == \"ZIP\":\n+                # Validar cualquier archivo .zip descargado\n+                assert is_file_downloaded_by_extension(\".zip\"), f\"Archivo ZIP no descargado desde index.\"\n+            else:\n+                assert is_file_downloaded_by_extension(file_extension), f\"Archivo *{file_extension} no descargado desde index.\"\n \n-        print(\"Todos los archivos se descargaron correctamente. Test completado con \u00e9xito.\")\n+            print(f\"Archivo *{file_extension} descargado correctamente.\")\n+            clean_download_folder()\n \n+        print(\"Todos los archivos se descargaron correctamente desde el index.\")\n     finally:\n-        close_driver(driver)  # Cerrar el navegador al finalizar el test\n+        close_driver(driver)\n+\n \n-# Ejecutar el test\n if __name__ == \"__main__\":\n-    test_download_datasets()\n\\ No newline at end of file\n+    test_download_datasets_index()\n\\ No newline at end of file"
      },
      {
        "sha": "124cfcf72bfbe3604302247f142bb0613bdd53d8",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 4,
        "deletions": 14,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=abd20bce07616b1bf137272e273c6799bf35ed80",
        "patch": "@@ -1,7 +1,5 @@\n import pytest\n from flask import url_for\n-from app.modules.dataset.routes import download_dataset_format\n-\n \n @pytest.fixture(scope=\"module\")\n def test_client(test_client):\n@@ -20,7 +18,7 @@ def test_download_glencoe_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/glencoe\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"glencoe\") in response.location\n \n \n def test_download_splot_redirect(test_client):\n@@ -29,7 +27,7 @@ def test_download_splot_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/splot\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"splot\") in response.location\n \n \n def test_download_dimacs_redirect(test_client):\n@@ -38,7 +36,7 @@ def test_download_dimacs_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/dimacs\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"dimacs\") in response.location\n \n \n def test_download_zip_redirect(test_client):\n@@ -47,12 +45,4 @@ def test_download_zip_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/zip\")\n     assert response.status_code == 302\n-    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n-\n-def test_download_invalid_format(test_client):\n-    \"\"\"\n-    Testea que se retorne un error 400 para un formato no soportado.\n-    \"\"\"\n-    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n-    assert response.status_code == 400\n-    assert response.json == {\"error\": \"Formato no soportado\"}\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n\\ No newline at end of file"
      },
      {
        "sha": "77dba20ebcd49a483100e4fc73b712128864295b",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 43,
        "deletions": 3,
        "changes": 46,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=abd20bce07616b1bf137272e273c6799bf35ed80",
        "patch": "@@ -1,11 +1,14 @@\n+import os\n+import zipfile\n+import tempfile\n import logging\n+\n+from flask import send_file, jsonify, redirect, url_for\n from app.modules.hubfile.services import HubfileService\n-from flask import send_file, jsonify\n from app.modules.flamapy import flamapy_bp\n+\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n-import tempfile\n-import os\n \n from antlr4 import CommonTokenStream, FileStream\n from uvl.UVLCustomLexer import UVLCustomLexer\n@@ -115,3 +118,40 @@ def to_cnf(file_id):\n     finally:\n         # Clean up the temporary file\n         os.remove(temp_file.name)\n+\n+@flamapy_bp.route('/flamapy/export_dataset/<int:dataset_id>/<string:format>', methods=['GET'])\n+def export_dataset(dataset_id, format):\n+    \"\"\"Export all UVL files in the dataset to the specified format and package as a ZIP.\"\"\"\n+    hubfile_service = HubfileService()\n+    files = hubfile_service.get_files_by_dataset_id(dataset_id)\n+\n+    if not files:\n+        return jsonify({\"error\": \"No files found for this dataset\"}), 404\n+\n+    with tempfile.TemporaryDirectory() as temp_dir:\n+        zip_filename = os.path.join(temp_dir, f\"dataset_{dataset_id}_{format}.zip\")\n+\n+        with zipfile.ZipFile(zip_filename, 'w') as zipf:\n+            for file in files:\n+                uvl_path = file.get_path()\n+                fm = UVLReader(uvl_path).transform()\n+\n+                # Transform the file to the desired format\n+                temp_file = tempfile.NamedTemporaryFile(delete=False, suffix=f\".{format}\")\n+                try:\n+                    if format == \"glencoe\":\n+                        GlencoeWriter(temp_file.name, fm).transform()\n+                    elif format == \"splot\":\n+                        SPLOTWriter(temp_file.name, fm).transform()\n+                    elif format == \"dimacs\":\n+                        sat = FmToPysat(fm).transform()\n+                        DimacsWriter(temp_file.name, sat).transform()\n+                    else:\n+                        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+\n+                    # Add transformed file to ZIP\n+                    zipf.write(temp_file.name, arcname=f\"{file.name}.{format}\")\n+                finally:\n+                    os.remove(temp_file.name)\n+\n+        return send_file(zip_filename, as_attachment=True, download_name=f\"dataset_{dataset_id}_{format}.zip\")\n\\ No newline at end of file"
      },
      {
        "sha": "40b4d5e3509a247e2d035c5099f5ce170695a430",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=abd20bce07616b1bf137272e273c6799bf35ed80",
        "patch": "@@ -26,6 +26,16 @@ def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n     \n     def get_hubfile_by_id(self, hubfile_id: int) -> Hubfile:\n         return db.session.query(Hubfile).filter(Hubfile.id == hubfile_id).first()\n+    \n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos relacionados con un dataset.\"\"\"\n+        dataset = DataSet.query.get(dataset_id)\n+        if not dataset:\n+            return []\n+\n+        # Extrae todos los archivos de los FeatureModels relacionados\n+        files = [file for fm in dataset.feature_models for file in fm.files]\n+        return files\n \n \n class HubfileViewRecordRepository(BaseRepository):\n@@ -43,4 +53,4 @@ def __init__(self):\n \n     def total_hubfile_downloads(self) -> int:\n         max_id = self.model.query.with_entities(func.max(self.model.id)).scalar()\n-        return max_id if max_id is not None else 0\n+        return max_id if max_id is not None else 0\n\\ No newline at end of file"
      },
      {
        "sha": "1d61da9482d23b082661e52920a34f734c13d12b",
        "filename": "app/modules/hubfile/services.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fhubfile%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fhubfile%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Fservices.py?ref=abd20bce07616b1bf137272e273c6799bf35ed80",
        "patch": "@@ -16,6 +16,11 @@ def __init__(self):\n         self.hubfile_view_record_repository = HubfileViewRecordRepository()\n         self.hubfile_download_record_repository = HubfileDownloadRecordRepository()\n \n+    # Nuevo m\u00e9todo para obtener archivos por dataset\n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos UVL asociados a un dataset.\"\"\"\n+        return self.repository.get_files_by_dataset_id(dataset_id)\n+\n     def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n         return self.repository.get_owner_user_by_hubfile(hubfile)\n \n@@ -46,4 +51,4 @@ def total_hubfile_downloads(self) -> int:\n \n class HubfileDownloadRecordService(BaseService):\n     def __init__(self):\n-        super().__init__(HubfileDownloadRecordRepository())\n+        super().__init__(HubfileDownloadRecordRepository())\n\\ No newline at end of file"
      },
      {
        "sha": "3e8b608a1a2409a516addb103772a79cfe7c30be",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/abd20bce07616b1bf137272e273c6799bf35ed80/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=abd20bce07616b1bf137272e273c6799bf35ed80",
        "patch": "@@ -99,7 +99,7 @@ <h2>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'glencoe')\">Glencoe</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'splot')\">SPLOT</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'dimacs')\">DIMACS</a></li>\n-                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'zip')\">ZIP</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">ZIP</a></li>\n                                     </ul>\n                                 </div>                                \n                             </div>"
      }
    ]
  },
  {
    "sha": "d085e179819445f9eaae806700084b31e2577bbe",
    "node_id": "C_kwDONDG85doAKGQwODVlMTc5ODE5NDQ1ZjllYWFlODA2NzAwMDg0YjMxZTI1NzdiYmU",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-15T21:44:28Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-15T21:44:28Z"
      },
      "message": "fix(dataset):Donwload dataset on index and viewDataset",
      "tree": {
        "sha": "d6338cdc16659e0a4d5d9ab5f1abe2284e46a5bb",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/d6338cdc16659e0a4d5d9ab5f1abe2284e46a5bb"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/d085e179819445f9eaae806700084b31e2577bbe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d085e179819445f9eaae806700084b31e2577bbe",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d085e179819445f9eaae806700084b31e2577bbe",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d085e179819445f9eaae806700084b31e2577bbe/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab59494f4c69c8e5642f926e95b05890f3cfc292",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ab59494f4c69c8e5642f926e95b05890f3cfc292",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ab59494f4c69c8e5642f926e95b05890f3cfc292"
      }
    ],
    "files": [
      {
        "sha": "07513d506e71b0fe1cb8b2e4da180503759e91ed",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 4,
        "deletions": 24,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -25,8 +25,6 @@\n )\n from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n-from app.modules.dataset.parser import get_tree\n-logger = logging.getLogger(__name__)\n from flask_dance.contrib.github import github\n \n \n@@ -101,7 +99,6 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n-\n @dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n @login_required\n def check_dataset():\n@@ -129,7 +126,6 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -160,11 +156,6 @@ def upload():\n         file.save(file_path)\n     except Exception as e:\n         return jsonify({\"message\": str(e)}), 500\n-    try:\n-        get_tree(file_path)\n-    except Exception as e:\n-        os.remove(file_path)\n-        return jsonify({\"message\": str(e),\"syntax\": True}),400\n \n     return (\n         jsonify(\n@@ -404,18 +395,7 @@ def commit_file(file_id):\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n-@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n-def download_dataset_format(file_id, format):\n-    \"\"\"Endpoint to download dataset in the specified format.\n-    Formats supported: glencoe, splot, dimacs, zip.\n-    \"\"\"\n-    if format == \"glencoe\":\n-        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n-    elif format == \"splot\":\n-        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n-    elif format == \"dimacs\":\n-        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n-    elif format == \"zip\":\n-        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n-    else:\n-        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+@dataset_bp.route(\"/dataset/download/<int:dataset_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(dataset_id, format):\n+    \"\"\"Redirect to Flamapy's export_dataset endpoint.\"\"\"\n+    return redirect(url_for(\"flamapy.export_dataset\", dataset_id=dataset_id, format=format))"
      },
      {
        "sha": "0d473574be64451c4ad63c85c34c85026d4a20be",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -41,35 +41,33 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n-                <div class=\"mt-2\">\n                     <div class=\"btn-group\" role=\"group\">\n                         <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n                             <i data-feather=\"download\"></i> Download\n                         </button>\n                         <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='glencoe') }}\">\n                                     Glencoe\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='dimacs') }}\">\n                                     DIMACS\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.export_dataset', dataset_id=dataset.id, format='splot') }}\">\n                                     SPLOT\n                                 </a>\n                             </li>\n                             <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n-                                    ZIP\n-                                </a>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">\n+                                    ZIP (Original UVLs)\n+                                </a>                                \n                             </li>\n                         </ul>\n-                    </div>\n-                </div>\n+                    </div>     \n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">\n@@ -589,4 +587,4 @@ <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex\n     }\n </script>\n \n-{% endblock %}\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "275fbf9bd9d3ad0655d68861bc8799a8415e9560",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 34,
        "deletions": 44,
        "changes": 78,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -75,50 +75,40 @@ def ensure_logged_in(self):\n         else:\n             print(\"User successfully logged in.\")\n \n-    @task\n-    def commit_dataset(self):\n-        file_id = random.randint(1, 30)  \n-        response = self.client.post(f\"/dataset/commit_file/{file_id}\", json={})\n-        \n-        if response.status_code == 200:\n-            print(f\"File {file_id} committed successfully: {response.text}\")\n-        elif response.status_code == 404:\n-            print(f\"File {file_id} not found: {response.status_code}\")\n-        elif response.status_code == 500:\n-            print(f\"Server error for File {file_id}: {response.status_code} - {response.text}\")\n-        else:\n-            print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n-\n-\n-    @task(4)\n-    def download_dataset_glencoe(self):\n-        \"\"\"Simula la descarga del dataset en formato Glencoe.\"\"\"\n-        dataset_id = 4  # Ajusta el ID del dataset si es necesario\n-        self.client.get(f\"/dataset/download/{dataset_id}/glencoe\", name=\"/dataset/download/glencoe\")\n-\n-    @task(3)\n-    def download_dataset_splot(self):\n-        \"\"\"Simula la descarga del dataset en formato SPLOT.\"\"\"\n-        dataset_id = 4\n-        self.client.get(f\"/dataset/download/{dataset_id}/splot\", name=\"/dataset/download/splot\")\n-\n-    @task(2)\n-    def download_dataset_dimacs(self):\n-        \"\"\"Simula la descarga del dataset en formato DIMACS.\"\"\"\n-        dataset_id = 4\n-        self.client.get(f\"/dataset/download/{dataset_id}/dimacs\", name=\"/dataset/download/dimacs\")\n-\n-    @task(1)\n-    def download_dataset_zip(self):\n-        \"\"\"Simula la descarga del dataset en formato ZIP.\"\"\"\n-        dataset_id = 4\n-        self.client.get(f\"/dataset/download/{dataset_id}/zip\", name=\"/dataset/download/zip\")\n+class DownloadDatasets(TaskSet):\n+    formats = {\n+        \"Glencoe\": \"glencoe\",\n+        \"SPLOT\": \"splot\",\n+        \"DIMACS\": \"dimacs\",\n+        \"ZIP\": \"zip\"\n+    }\n \n+    @task\n+    def download_files(self):\n+        for dataset_id in self.dataset_ids:  # Itera sobre tus dataset_ids\n+            for format_name, format_value in self.formats.items():  # Itera sobre los formatos\n+                with self.client.get(\n+                    f\"/flamapy/export/dataset/{dataset_id}/{format_value}\",  # URL corregida\n+                    name=f\"Download {format_name}\",\n+                    allow_redirects=True,  # Sigue autom\u00e1ticamente las redirecciones\n+                    catch_response=True  # Captura la respuesta para an\u00e1lisis\n+                ) as response:\n+                    if response.status_code == 200:  # Descarga exitosa\n+                        response.success()\n+                    elif response.status_code == 302:  # Redirecci\u00f3n\n+                        response.success()  # Tratamos 302 como \u00e9xito\n+                    else:\n+                        response.failure(\n+                            f\"Failed to download {format_name} for dataset {dataset_id} \"\n+                            f\"with status code {response.status_code}\"\n+                        )\n \n class DatasetUser(HttpUser):\n-      \"\"\"Clase principal que define los usuarios y su comportamiento.\"\"\"\n-    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior]\n-    min_wait = 5000\n-    max_wait = 9000\n-    wait_time = between(5, 9)  # Espera entre 5 y 9 segundos entre tareas\n-    host = get_host_for_locust_testing()\n+    \"\"\"\n+    Clase principal que define los usuarios y su comportamiento.\n+    \"\"\"\n+    tasks = [CommitFileBehavior]  # Asigna la tarea de descarga\n+    min_wait = 5000  # Espera m\u00ednima de 5 segundos\n+    max_wait = 9000  # Espera m\u00e1xima de 9 segundos\n+    wait_time = between(5, 9)  # Espera aleatoria entre tareas\n+    host = \"http://localhost:5000\"  # La URL base de tu aplicaci\u00f3n\n\\ No newline at end of file"
      },
      {
        "sha": "2e2bee0c10bc622be92542708879256151e0f9db",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "modified",
        "additions": 36,
        "deletions": 27,
        "changes": 63,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -12,6 +12,7 @@\n \n DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n \n+\n def initialize_driver(download_dir=None):\n     options = Options()\n     if download_dir:\n@@ -24,67 +25,75 @@ def initialize_driver(download_dir=None):\n     driver = webdriver.Chrome(options=options)\n     return driver\n \n+\n def clean_download_folder():\n     \"\"\"Elimina todos los archivos previos en la carpeta de descargas.\"\"\"\n     if os.path.exists(DOWNLOAD_DIR):\n         for file in os.listdir(DOWNLOAD_DIR):\n             file_path = os.path.join(DOWNLOAD_DIR, file)\n             os.remove(file_path)\n \n-def is_file_downloaded_by_extension(extension, timeout=10):\n-    \"\"\"Verifica si un archivo con una extensi\u00f3n espec\u00edfica ha sido descargado.\"\"\"\n+\n+def is_file_downloaded_by_extension(extension, timeout=20, exact=False):\n+    \"\"\"\n+    Verifica si un archivo con una extensi\u00f3n espec\u00edfica ha sido descargado.\n+\n+    :param extension: Extensi\u00f3n del archivo o patr\u00f3n para b\u00fasqueda.\n+    :param timeout: Tiempo m\u00e1ximo de espera.\n+    :param exact: Si es True, busca archivos con nombre exacto. Si no, busca solo por extensi\u00f3n.\n+    \"\"\"\n     for _ in range(timeout):\n-        files = glob.glob(os.path.join(DOWNLOAD_DIR, f\"*.{extension}\"))\n+        files = glob.glob(os.path.join(DOWNLOAD_DIR, f\"{extension}\" if exact else f\"*{extension}\"))\n+        print(\"Archivos actuales en la carpeta:\", os.listdir(DOWNLOAD_DIR))  # Debug\n+        print(\"Coincidencias encontradas:\", files)  # Debug\n         if files:\n             return True\n         time.sleep(1)\n     return False\n \n-def test_download_datasets():\n-    \"\"\"Prueba la descarga de datasets en diferentes formatos.\"\"\"\n+\n+def test_download_datasets_index():\n+    \"\"\"Prueba la descarga de datasets desde el index en diferentes formatos.\"\"\"\n     driver = initialize_driver(download_dir=DOWNLOAD_DIR)\n     clean_download_folder()\n \n     try:\n         host = get_host_for_selenium_testing()\n-        driver.get(f\"{host}/\")\n-        WebDriverWait(driver, 10).until(\n-            lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n-        )\n+        driver.get(f\"{host}/\")  # P\u00e1gina index\n+        WebDriverWait(driver, 10).until(lambda d: d.execute_script(\"return document.readyState\") == \"complete\")\n \n-        # Lista de formatos y extensiones esperadas\n         formats = {\n-            \"Glencoe\": \"txt\",\n-            \"SPLOT\": \"txt\",\n-            \"DIMACS\": \"txt\",\n-            \"ZIP\": \"zip\"\n+            \"Glencoe\": \"_glencoe.zip\",\n+            \"SPLOT\": \"_splot.zip\",\n+            \"DIMACS\": \"_dimacs.zip\",\n+            \"ZIP\": \".zip\"  # Validar cualquier archivo con extensi\u00f3n .zip\n         }\n \n         for format_name, file_extension in formats.items():\n-            # Hacer clic en el bot\u00f3n \"Download\"\n+            print(f\"Probando descarga para el formato: {format_name}\")  # Debug\n             download_button = WebDriverWait(driver, 10).until(\n                 EC.element_to_be_clickable((By.XPATH, \"//button[contains(@id, 'btnDownloadDropdown')]\"))\n             )\n             ActionChains(driver).move_to_element(download_button).click().perform()\n \n-            # Seleccionar el formato del desplegable\n             dropdown_option = WebDriverWait(driver, 10).until(\n-                EC.element_to_be_clickable((By.XPATH, f\"//a[contains(@onclick, \\\"{format_name.lower()}\\\")]\"))\n+                EC.element_to_be_clickable((By.XPATH, f\"//a[contains(@onclick, \\\"{format_name.lower()}\\\") or contains(text(), 'ZIP')]\"))\n             )\n             dropdown_option.click()\n \n-            # Verificar que el archivo se ha descargado por su extensi\u00f3n\n-            print(f\"Esperando la descarga del archivo con extensi\u00f3n .{file_extension}...\")\n-            assert is_file_downloaded_by_extension(file_extension), f\"El archivo con extensi\u00f3n .{file_extension} no se descarg\u00f3 correctamente.\"\n-            print(f\"El archivo con extensi\u00f3n .{file_extension} se descarg\u00f3 correctamente.\")\n-\n-            time.sleep(2)  # Espera breve antes de continuar\n+            if format_name == \"ZIP\":\n+                # Validar cualquier archivo .zip descargado\n+                assert is_file_downloaded_by_extension(\".zip\"), f\"Archivo ZIP no descargado desde index.\"\n+            else:\n+                assert is_file_downloaded_by_extension(file_extension), f\"Archivo *{file_extension} no descargado desde index.\"\n \n-        print(\"Todos los archivos se descargaron correctamente. Test completado con \u00e9xito.\")\n+            print(f\"Archivo *{file_extension} descargado correctamente.\")\n+            clean_download_folder()\n \n+        print(\"Todos los archivos se descargaron correctamente desde el index.\")\n     finally:\n-        close_driver(driver)  # Cerrar el navegador al finalizar el test\n+        close_driver(driver)\n+\n \n-# Ejecutar el test\n if __name__ == \"__main__\":\n-    test_download_datasets()\n\\ No newline at end of file\n+    test_download_datasets_index()\n\\ No newline at end of file"
      },
      {
        "sha": "124cfcf72bfbe3604302247f142bb0613bdd53d8",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 4,
        "deletions": 14,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -1,7 +1,5 @@\n import pytest\n from flask import url_for\n-from app.modules.dataset.routes import download_dataset_format\n-\n \n @pytest.fixture(scope=\"module\")\n def test_client(test_client):\n@@ -20,7 +18,7 @@ def test_download_glencoe_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/glencoe\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"glencoe\") in response.location\n \n \n def test_download_splot_redirect(test_client):\n@@ -29,7 +27,7 @@ def test_download_splot_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/splot\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"splot\") in response.location\n \n \n def test_download_dimacs_redirect(test_client):\n@@ -38,7 +36,7 @@ def test_download_dimacs_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/dimacs\")\n     assert response.status_code == 302\n-    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"dimacs\") in response.location\n \n \n def test_download_zip_redirect(test_client):\n@@ -47,12 +45,4 @@ def test_download_zip_redirect(test_client):\n     \"\"\"\n     response = test_client.get(\"/dataset/download/4/zip\")\n     assert response.status_code == 302\n-    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n-\n-def test_download_invalid_format(test_client):\n-    \"\"\"\n-    Testea que se retorne un error 400 para un formato no soportado.\n-    \"\"\"\n-    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n-    assert response.status_code == 400\n-    assert response.json == {\"error\": \"Formato no soportado\"}\n+    assert url_for(\"flamapy.export_dataset\", dataset_id=4, format=\"zip\") in response.location\n\\ No newline at end of file"
      },
      {
        "sha": "77dba20ebcd49a483100e4fc73b712128864295b",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 43,
        "deletions": 3,
        "changes": 46,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -1,11 +1,14 @@\n+import os\n+import zipfile\n+import tempfile\n import logging\n+\n+from flask import send_file, jsonify, redirect, url_for\n from app.modules.hubfile.services import HubfileService\n-from flask import send_file, jsonify\n from app.modules.flamapy import flamapy_bp\n+\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n-import tempfile\n-import os\n \n from antlr4 import CommonTokenStream, FileStream\n from uvl.UVLCustomLexer import UVLCustomLexer\n@@ -115,3 +118,40 @@ def to_cnf(file_id):\n     finally:\n         # Clean up the temporary file\n         os.remove(temp_file.name)\n+\n+@flamapy_bp.route('/flamapy/export_dataset/<int:dataset_id>/<string:format>', methods=['GET'])\n+def export_dataset(dataset_id, format):\n+    \"\"\"Export all UVL files in the dataset to the specified format and package as a ZIP.\"\"\"\n+    hubfile_service = HubfileService()\n+    files = hubfile_service.get_files_by_dataset_id(dataset_id)\n+\n+    if not files:\n+        return jsonify({\"error\": \"No files found for this dataset\"}), 404\n+\n+    with tempfile.TemporaryDirectory() as temp_dir:\n+        zip_filename = os.path.join(temp_dir, f\"dataset_{dataset_id}_{format}.zip\")\n+\n+        with zipfile.ZipFile(zip_filename, 'w') as zipf:\n+            for file in files:\n+                uvl_path = file.get_path()\n+                fm = UVLReader(uvl_path).transform()\n+\n+                # Transform the file to the desired format\n+                temp_file = tempfile.NamedTemporaryFile(delete=False, suffix=f\".{format}\")\n+                try:\n+                    if format == \"glencoe\":\n+                        GlencoeWriter(temp_file.name, fm).transform()\n+                    elif format == \"splot\":\n+                        SPLOTWriter(temp_file.name, fm).transform()\n+                    elif format == \"dimacs\":\n+                        sat = FmToPysat(fm).transform()\n+                        DimacsWriter(temp_file.name, sat).transform()\n+                    else:\n+                        return jsonify({\"error\": \"Formato no soportado\"}), 400\n+\n+                    # Add transformed file to ZIP\n+                    zipf.write(temp_file.name, arcname=f\"{file.name}.{format}\")\n+                finally:\n+                    os.remove(temp_file.name)\n+\n+        return send_file(zip_filename, as_attachment=True, download_name=f\"dataset_{dataset_id}_{format}.zip\")\n\\ No newline at end of file"
      },
      {
        "sha": "40b4d5e3509a247e2d035c5099f5ce170695a430",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -26,6 +26,16 @@ def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n     \n     def get_hubfile_by_id(self, hubfile_id: int) -> Hubfile:\n         return db.session.query(Hubfile).filter(Hubfile.id == hubfile_id).first()\n+    \n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos relacionados con un dataset.\"\"\"\n+        dataset = DataSet.query.get(dataset_id)\n+        if not dataset:\n+            return []\n+\n+        # Extrae todos los archivos de los FeatureModels relacionados\n+        files = [file for fm in dataset.feature_models for file in fm.files]\n+        return files\n \n \n class HubfileViewRecordRepository(BaseRepository):\n@@ -43,4 +53,4 @@ def __init__(self):\n \n     def total_hubfile_downloads(self) -> int:\n         max_id = self.model.query.with_entities(func.max(self.model.id)).scalar()\n-        return max_id if max_id is not None else 0\n+        return max_id if max_id is not None else 0\n\\ No newline at end of file"
      },
      {
        "sha": "1d61da9482d23b082661e52920a34f734c13d12b",
        "filename": "app/modules/hubfile/services.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fhubfile%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fhubfile%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Fservices.py?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -16,6 +16,11 @@ def __init__(self):\n         self.hubfile_view_record_repository = HubfileViewRecordRepository()\n         self.hubfile_download_record_repository = HubfileDownloadRecordRepository()\n \n+    # Nuevo m\u00e9todo para obtener archivos por dataset\n+    def get_files_by_dataset_id(self, dataset_id):\n+        \"\"\"Obtiene todos los archivos UVL asociados a un dataset.\"\"\"\n+        return self.repository.get_files_by_dataset_id(dataset_id)\n+\n     def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n         return self.repository.get_owner_user_by_hubfile(hubfile)\n \n@@ -46,4 +51,4 @@ def total_hubfile_downloads(self) -> int:\n \n class HubfileDownloadRecordService(BaseService):\n     def __init__(self):\n-        super().__init__(HubfileDownloadRecordRepository())\n+        super().__init__(HubfileDownloadRecordRepository())\n\\ No newline at end of file"
      },
      {
        "sha": "3e8b608a1a2409a516addb103772a79cfe7c30be",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d085e179819445f9eaae806700084b31e2577bbe/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=d085e179819445f9eaae806700084b31e2577bbe",
        "patch": "@@ -99,7 +99,7 @@ <h2>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'glencoe')\">Glencoe</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'splot')\">SPLOT</a></li>\n                                         <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'dimacs')\">DIMACS</a></li>\n-                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'zip')\">ZIP</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">ZIP</a></li>\n                                     </ul>\n                                 </div>                                \n                             </div>"
      }
    ]
  },
  {
    "sha": "ec5ea4c327b0f15af6aab069b4ed79ed91262a62",
    "node_id": "C_kwDONDG85doAKGVjNWVhNGMzMjdiMGYxNWFmNmFhYjA2OWI0ZWQ3OWVkOTEyNjJhNjI",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T19:59:05Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T19:59:05Z"
      },
      "message": "feat(explore): added test case for no datasets found",
      "tree": {
        "sha": "6a1a8ce212543db3d40602fec318439be804e347",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/6a1a8ce212543db3d40602fec318439be804e347"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/ec5ea4c327b0f15af6aab069b4ed79ed91262a62",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ec5ea4c327b0f15af6aab069b4ed79ed91262a62",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ec5ea4c327b0f15af6aab069b4ed79ed91262a62",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ec5ea4c327b0f15af6aab069b4ed79ed91262a62/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6047725df1bd3648fbd20f42960b660e3d155a95",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6047725df1bd3648fbd20f42960b660e3d155a95",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/6047725df1bd3648fbd20f42960b660e3d155a95"
      }
    ],
    "files": [
      {
        "sha": "4d5c6df3f18720dcb307ee18edf67c413e3a5a4e",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ec5ea4c327b0f15af6aab069b4ed79ed91262a62/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ec5ea4c327b0f15af6aab069b4ed79ed91262a62/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=ec5ea4c327b0f15af6aab069b4ed79ed91262a62",
        "patch": "@@ -45,6 +45,18 @@ def test_filtering_service_num_of_leaf(test_client):\n         f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n \n \n+def test_check_filtering_service_no_results(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly filters all datasets\n+    based on the number of leaf nodes, as the maximum is lower than the minimum.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_leaf_count=300, max_leaf_count=299)\n+    expected_dataset_count = 0  # Expect no datasets.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n def test_filtering_service_depth(test_client):\n     \"\"\"\n     Test to ensure that the filtering service correctly counts datasets\n@@ -99,6 +111,7 @@ def test_filtering_service_core_feature_name(test_client):\n     assert len(datasets) == expected_dataset_count, \\\n         f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n \n+\n def test_check_sorting_smallest_first(test_client):\n     \"\"\"\n     Test to ensure that the filtering service correctly sorts datasets"
      }
    ]
  },
  {
    "sha": "dcd158894d58f9295a608747a99d74748c9fa7c7",
    "node_id": "C_kwDONDG85doAKGRjZDE1ODg5NGQ1OGY5Mjk1YTYwODc0N2E5OWQ3NDc0OGM5ZmE3Yzc",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "73189183+Danguepre@users.noreply.github.com",
        "date": "2024-12-15T19:50:29Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-15T19:50:29Z"
      },
      "message": "Merge pull request #35 from flamenquin-hub-single/feature-fakenodo\n\nFeature fakenodo",
      "tree": {
        "sha": "02fb3ee09d28bc31102e51bc4d9eefd9a1b09a86",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/02fb3ee09d28bc31102e51bc4d9eefd9a1b09a86"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/dcd158894d58f9295a608747a99d74748c9fa7c7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnXzMFCRC1aQ7uu5UhlAAAuDEQAHqm604/baLqGOuc6J607hMw\nxivQSd6IfjxXx26N9Z861zO1rJbU0ImJQbU+SYDaGOEMPempN8Z+AWVJodCRk772\nfarIPgMN2L72lmOqEcVbB+w/r3eujXpuoiUafvwhZuH0p/bBUkd1L8pZKZYmOgzB\nvKVHt09o6tIeVX59TKP2FTMAzLiwBiyQLNURuo0AFrC7ZQOve7WsovoZns4TYGfJ\n3Om+gGCzdK9wnkEWZ2evaVqcRZvo1Qp1ZrtwIMRHgSN0ggWxHS2uKqC1khU2M8Ze\neRSiaWhrMieGgnNF9AePnehwaXCrszr3iIy8NG9yezzS1c+Om3VXzSKCsT7YN93v\nCh3gS3sxivCRbZiaeWHKPj1sEPbLWjEfjgM7UAlMJm4YZ1lWMBW1xMubEtl3LEkF\nHNYhTTWkSxHckW9kOQYyyxGnFqfZZJ2rKiOFYzXy9tR7zRrV1IpfVF26AT3rKr7G\nFQRu7yS/Yld07k37xF35Tw7HKzYLS+S6YSQmcDIpsXGhgvVrdPEeg5+FYT/uu291\nazhNKESfHRGzbzN2op+CqsiocjU7s9wsAcvN37oEs9uA8qkrk0v4PTUt6xL5kG5H\nssxax2sLvk4YcfBec2hULrz5erioRN2n7gRfN8snAZkZS1R2jihKrb+PvgP/zQ5q\n7GHc9bpiWaZ/oXT4HZRs\n=TRLg\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 02fb3ee09d28bc31102e51bc4d9eefd9a1b09a86\nparent ab59494f4c69c8e5642f926e95b05890f3cfc292\nparent d6e9198db88472fed91bf40633cf3000218e828d\nauthor Danguepre <73189183+Danguepre@users.noreply.github.com> 1734292229 +0100\ncommitter GitHub <noreply@github.com> 1734292229 +0100\n\nMerge pull request #35 from flamenquin-hub-single/feature-fakenodo\n\nFeature fakenodo",
        "verified_at": "2024-12-15T19:51:47Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/dcd158894d58f9295a608747a99d74748c9fa7c7",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/dcd158894d58f9295a608747a99d74748c9fa7c7",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/dcd158894d58f9295a608747a99d74748c9fa7c7/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab59494f4c69c8e5642f926e95b05890f3cfc292",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ab59494f4c69c8e5642f926e95b05890f3cfc292",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ab59494f4c69c8e5642f926e95b05890f3cfc292"
      },
      {
        "sha": "d6e9198db88472fed91bf40633cf3000218e828d",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d6e9198db88472fed91bf40633cf3000218e828d",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d6e9198db88472fed91bf40633cf3000218e828d"
      }
    ],
    "files": [
      {
        "sha": "046d16ed02077bce70fa94658634c90c5525ac89",
        "filename": "app/modules/zenodo/services.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/dcd158894d58f9295a608747a99d74748c9fa7c7/app%2Fmodules%2Fzenodo%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/dcd158894d58f9295a608747a99d74748c9fa7c7/app%2Fmodules%2Fzenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Fservices.py?ref=dcd158894d58f9295a608747a99d74748c9fa7c7",
        "patch": "@@ -27,11 +27,11 @@ def get_zenodo_url(self):\n         ZENODO_API_URL = \"\"\n \n         if FLASK_ENV == \"development\":\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n         elif FLASK_ENV == \"production\":\n             ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://zenodo.org/api/deposit/depositions\")\n         else:\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n \n         return ZENODO_API_URL\n \n@@ -83,7 +83,6 @@ def test_full_connection(self) -> Response:\n                 \"creators\": [{\"name\": \"John Doe\"}],\n             }\n         }\n-\n         response = requests.post(self.ZENODO_API_URL, json=data, params=self.params, headers=self.headers)\n \n         if response.status_code != 201:"
      },
      {
        "sha": "54a33e2de92fe07a170425aae5155b7722058055",
        "filename": "fakenodo/__init__.py",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2F__init__.py?ref=dcd158894d58f9295a608747a99d74748c9fa7c7",
        "patch": "@@ -0,0 +1,8 @@\n+from fakenodo.app.routes import api_bp\n+from flask import Flask\n+\n+def create_app():\n+    app = Flask(__name__)\n+    with app.app_context():\n+        app.register_blueprint(api_bp)\n+    return app"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "fakenodo/app/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Fapp%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Fapp%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2F__init__.py?ref=dcd158894d58f9295a608747a99d74748c9fa7c7"
      },
      {
        "sha": "34c7f26a0ccf44b709399eb34685c72851a158d4",
        "filename": "fakenodo/app/models.py",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Fapp%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Fapp%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fmodels.py?ref=dcd158894d58f9295a608747a99d74748c9fa7c7",
        "patch": "@@ -0,0 +1,71 @@\n+class Creator:\n+    def __init__(self, name: str, id: int = None, deposition_id: int = None):\n+        self.id = id\n+        self.name = name\n+        self.deposition_id = deposition_id\n+\n+    def to_dict(self):\n+        return {\n+            'id': self.id,\n+            'name': self.name,\n+            'deposition_id': self.deposition_id\n+        }\n+\n+\n+class File:\n+    _id_counter = 1\n+\n+    def __init__(self, name: str, size: int, checksum, deposition_id: str):\n+        self.id = File._id_counter\n+        File._id_counter += 1\n+        self.name = name\n+        self.size = size\n+        self.checksum = checksum\n+        self.deposition_id = deposition_id\n+\n+    def to_dict(self):\n+        return {\n+            \"id\": self.id,\n+            \"name\": self.name,\n+            \"size\": self.size,\n+            \"checksum\": self.checksum\n+        }\n+\n+\n+class Deposition:\n+    _id_counter = 1\n+\n+    def __init__(self, title=None, upload_type=None, publication_type=None, description=None,\n+                 creators=None, keywords=None, access_right=None, license=None, doi=None, published=False, files=None):\n+        self.id = Deposition._id_counter\n+        Deposition._id_counter += 1\n+\n+        self.title = title\n+        self.upload_type = upload_type\n+        self.publication_type = publication_type\n+        self.description = description\n+        self.creators = creators\n+        self.keywords = keywords\n+        self.access_right = access_right\n+        self.license = license\n+        self.doi = doi\n+        self.published = published\n+        self.files = files\n+        self.conceptrecid = self.id - 1\n+\n+    def to_dict(self):\n+        return {\n+            \"id\": self.id,\n+            \"title\": self.title,\n+            \"upload_type\": self.upload_type,\n+            \"publication_type\": self.publication_type,\n+            \"description\": self.description,\n+            \"creators\": self.creators,\n+            \"keywords\": self.keywords,\n+            \"access_right\": self.access_right,\n+            \"license\": self.license,\n+            \"doi\": self.doi,\n+            \"published\": self.published,\n+            \"files\": self.files,\n+            \"conceptrecid\": self.conceptrecid\n+        }"
      },
      {
        "sha": "dc60d2ea029585a302642dd662a05b8cd96b19ca",
        "filename": "fakenodo/app/routes.py",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Fapp%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Fapp%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Froutes.py?ref=dcd158894d58f9295a608747a99d74748c9fa7c7",
        "patch": "@@ -0,0 +1,97 @@\n+import logging\n+import requests\n+from flask import Blueprint, jsonify, request\n+from fakenodo.app.models import Deposition\n+from fakenodo.app.services import Service\n+\n+api_bp = Blueprint(\"api_bp\", __name__)\n+logger = logging.getLogger(__name__)\n+service = Service()\n+\n+\n+@api_bp.route('/api/fakenodo/depositions', methods=['GET', 'POST'])\n+def depositions() -> tuple:\n+    def get_all_depositions() -> tuple:\n+        try:\n+            depositions = service.get_all_depositions()\n+            return jsonify(depositions), 200\n+\n+        except Exception as e:\n+            return jsonify({\"success\": False, \"message\": str(e)}), 500\n+\n+    def create_deposition() -> tuple:\n+        data = request.json\n+        try:\n+            # Create a Deposition instance with the request metadata\n+            deposition = Deposition(**data[\"metadata\"])\n+\n+            # Save the deposition in a local list\n+            response_data = service.create_new_deposition(deposition)\n+\n+            return jsonify(response_data), 201\n+        except Exception as e:\n+            return jsonify({\"success\": False, \"message\": str(e)}), 500\n+\n+    if request.method == \"GET\":\n+        return get_all_depositions()\n+    else:\n+        return create_deposition()\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/files', methods=['POST'])\n+def upload_file(deposition_id) -> tuple:\n+    try:\n+        for file in request.files.getlist('file'):\n+            if not file:\n+                return jsonify({\"success\": False, \"message\": \"Missing file\"}), 400\n+            service.upload_file(file, deposition_id)\n+\n+        return jsonify('File uploaded succesfully'), 201\n+    except Exception as e:\n+        error_message = f\"Failed to upload files. Error details: {e}\"\n+        raise Exception(error_message)\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>', methods=['GET', 'DELETE'])\n+def deposition(deposition_id):\n+    try:\n+        # Target deposition\n+        deposition = service.get_deposition(deposition_id)\n+\n+        def get_deposition():\n+            resposne = deposition.to_dict()\n+            return jsonify(resposne), 200\n+\n+        def delete_deposition():\n+            service.delete_deposition(deposition)\n+            return jsonify(f\"Deposition with id {deposition_id} deleted succesfully\"), 204\n+\n+        if request.method == 'GET':\n+            return get_deposition()\n+        else:\n+            return delete_deposition()\n+\n+    except Exception:\n+        return jsonify(f\"Cannot find deposition with id {deposition_id}\"), 404\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/actions/publish', methods=['POST'])\n+def publish_deposition(deposition_id) -> tuple:\n+    try:\n+        # Target deposition\n+        deposition = service.get_deposition(deposition_id)\n+        service.generate_doi(deposition_id)\n+        service.publish_deposition(deposition)\n+        return jsonify(f\"Deposition with id {deposition_id} published succesfully\"), 202\n+\n+    except Exception:\n+        return jsonify(\"Deposition not found\"), 404\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/doi', methods=['GET'])\n+def get_doi(deposition_id) -> tuple:\n+    try:\n+        doi = service.get_doi(deposition_id)\n+        return jsonify({\"doi\": doi}), 200\n+    except Exception as e:\n+        return jsonify({\"success\": False, \"message\": str(e)}), 500"
      },
      {
        "sha": "9792be9468ae3f990042133d2afbb4fda5bd3877",
        "filename": "fakenodo/app/services.py",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Fapp%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Fapp%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fservices.py?ref=dcd158894d58f9295a608747a99d74748c9fa7c7",
        "patch": "@@ -0,0 +1,75 @@\n+import hashlib\n+import logging\n+from random import randint\n+from typing import List\n+from fakenodo.app.models import Deposition, File\n+from dotenv import load_dotenv\n+from core.services.BaseService import BaseService\n+\n+logger = logging.getLogger(__name__)\n+\n+load_dotenv()\n+\n+depositions = []\n+\n+class Service(BaseService):\n+    def __init__(self):\n+        self.headers = {\"Content-Type\": \"application/json\"}\n+\n+    def get_all_depositions(self) -> list:\n+        return [deposition.to_dict() for deposition in depositions]\n+\n+    def create_new_deposition(self, deposition: Deposition) -> dict:\n+        depositions.append(deposition)\n+        return deposition.to_dict()\n+\n+    def upload_file(self, file, deposition_id) -> None:\n+        try:\n+            # Read file content\n+            file_data = file.read()\n+\n+            # Create the file instance\n+            file_instance = File(\n+                name=file.filename,\n+                size=len(file_data),\n+                checksum=hashlib.md5(file_data).hexdigest(),\n+                deposition_id=deposition_id\n+            )\n+\n+            target_deposition = self.get_deposition(deposition_id)\n+            if target_deposition is None:\n+                raise FileNotFoundError(\"Deposition not found\")\n+            if target_deposition.files is None:\n+                target_deposition.files = [file_instance.to_dict()]\n+            else:\n+                target_deposition.files.append(file_instance.to_dict())\n+\n+        except Exception as e:\n+            print(f\"Error en la subida del archivo: {e}\")\n+\n+    def publish_deposition(self, deposition: Deposition) -> dict:\n+        if deposition.doi!=None:\n+            deposition.published = True\n+        return deposition.to_dict()\n+\n+    def delete_deposition(self, deposition: Deposition) -> None:\n+        depositions.remove(deposition)\n+\n+    def get_deposition(self, deposition_id: int) -> Deposition | None:\n+        return [deposition for deposition in depositions if deposition_id == deposition.id][0]\n+\n+    def get_doi(self, deposition_id: int) -> str:\n+        return self.get_deposition(deposition_id).doi\n+\n+    def generate_doi_id():\n+        identifier = randint(10000,1000000)\n+        while True:\n+            yield identifier\n+            identifier+=1\n+\n+    doi_generator = generate_doi_id()\n+\n+    def generate_doi(self,deposition_id):\n+        deposition = self.get_deposition(deposition_id)\n+        doi_id = next(self.doi_generator)\n+        deposition.doi = str(doi_id)+\"/dataset.\"+str(doi_id)"
      },
      {
        "sha": "d2a599dd699a849fbac0b49bf05c76c52b5f516c",
        "filename": "fakenodo/conftest.py",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Fconftest.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Fconftest.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fconftest.py?ref=dcd158894d58f9295a608747a99d74748c9fa7c7",
        "patch": "@@ -0,0 +1,14 @@\n+import pytest\n+from flask import Flask\n+from fakenodo.app.routes import api_bp\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client():\n+    app = Flask(__name__)\n+    app.config[\"TESTING\"] = True\n+    app.config[\"SERVER_NAME\"] = \"localhost:5001\"\n+    app.register_blueprint(api_bp)\n+    with app.test_client() as client:\n+        with app.app_context():\n+            yield client"
      },
      {
        "sha": "6073984d83d3c02a135714af400b13bac9c32687",
        "filename": "fakenodo/pytest.ini",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Fpytest.ini",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Fpytest.ini",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fpytest.ini?ref=dcd158894d58f9295a608747a99d74748c9fa7c7",
        "patch": "@@ -0,0 +1,4 @@\n+[pytest]\n+filterwarnings =\n+    ignore::DeprecationWarning\n+testpaths = fakenodo tests"
      },
      {
        "sha": "65e0caf5717f6844e459e42f72073254d12b694a",
        "filename": "fakenodo/run.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Frun.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/dcd158894d58f9295a608747a99d74748c9fa7c7/fakenodo%2Frun.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Frun.py?ref=dcd158894d58f9295a608747a99d74748c9fa7c7",
        "patch": "@@ -0,0 +1,6 @@\n+from fakenodo import create_app\n+\n+\n+app = create_app()\n+if __name__ == \"__main__\":\n+    app.run(host=\"0.0.0.0\", port=5001, debug=True)"
      }
    ]
  },
  {
    "sha": "6047725df1bd3648fbd20f42960b660e3d155a95",
    "node_id": "C_kwDONDG85doAKDYwNDc3MjVkZjFiZDM2NDhmYmQyMGY0Mjk2MGI2NjBlM2QxNTVhOTU",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T19:41:28Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T19:41:28Z"
      },
      "message": "fix(explore): removed unused import",
      "tree": {
        "sha": "87cb481eed832ace2b5986edc1d1b84693feba3f",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/87cb481eed832ace2b5986edc1d1b84693feba3f"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/6047725df1bd3648fbd20f42960b660e3d155a95",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6047725df1bd3648fbd20f42960b660e3d155a95",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/6047725df1bd3648fbd20f42960b660e3d155a95",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6047725df1bd3648fbd20f42960b660e3d155a95/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "99b270c4dcba42bd9bfbad8cb34ff5d65ba287b8",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/99b270c4dcba42bd9bfbad8cb34ff5d65ba287b8",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/99b270c4dcba42bd9bfbad8cb34ff5d65ba287b8"
      }
    ],
    "files": [
      {
        "sha": "baf7c6d7eddf25dd07dc4007783848a25100c3c5",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6047725df1bd3648fbd20f42960b660e3d155a95/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6047725df1bd3648fbd20f42960b660e3d155a95/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=6047725df1bd3648fbd20f42960b660e3d155a95",
        "patch": "@@ -2,7 +2,6 @@\n from app.modules.explore.services import ExploreService\n from app.modules.auth.seeders import AuthSeeder\n from app.modules.dataset.seeders import DataSetSeeder\n-# from app.modules.dataset.models import DataSet\n \n \n @pytest.fixture(scope='module')"
      }
    ]
  },
  {
    "sha": "99b270c4dcba42bd9bfbad8cb34ff5d65ba287b8",
    "node_id": "C_kwDONDG85doAKDk5YjI3MGM0ZGNiYTQyYmQ5YmZiYWQ4Y2IzNGZmNWQ2NWJhMjg3Yjg",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T19:39:26Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T19:39:26Z"
      },
      "message": "feat(explore): added unit testing for size sorting",
      "tree": {
        "sha": "2bea9bcac1738798b71d89fc1073550fa12a0c93",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/2bea9bcac1738798b71d89fc1073550fa12a0c93"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/99b270c4dcba42bd9bfbad8cb34ff5d65ba287b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/99b270c4dcba42bd9bfbad8cb34ff5d65ba287b8",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/99b270c4dcba42bd9bfbad8cb34ff5d65ba287b8",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/99b270c4dcba42bd9bfbad8cb34ff5d65ba287b8/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da39f9abf27fcb58372827f60b020e12a149b132",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/da39f9abf27fcb58372827f60b020e12a149b132",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/da39f9abf27fcb58372827f60b020e12a149b132"
      }
    ],
    "files": [
      {
        "sha": "9f39b79cf9933601a952052efbb43501b20d5e16",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/99b270c4dcba42bd9bfbad8cb34ff5d65ba287b8/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/99b270c4dcba42bd9bfbad8cb34ff5d65ba287b8/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=99b270c4dcba42bd9bfbad8cb34ff5d65ba287b8",
        "patch": "@@ -2,6 +2,7 @@\n from app.modules.explore.services import ExploreService\n from app.modules.auth.seeders import AuthSeeder\n from app.modules.dataset.seeders import DataSetSeeder\n+# from app.modules.dataset.models import DataSet\n \n \n @pytest.fixture(scope='module')\n@@ -98,3 +99,23 @@ def test_filtering_service_core_feature_name(test_client):\n     # and \"file5.uvl\" as they contain \"FitnessMonitor\" in the core feature name.\n     assert len(datasets) == expected_dataset_count, \\\n         f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+def test_check_sorting_smallest_first(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly sorts datasets\n+    based on the size, with smallest first.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets_sorted = explore_service.filter(sorting=\"filesize_asc\")\n+    first_ds = datasets_sorted[0]\n+    assert first_ds.name()==\"Sample dataset 4\", f\"Expected smallest dataset to be 'Sample dataset 4', but got '{first_ds.name()}' instead\"\n+\n+def test_check_sorting_largest_first(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly sorts datasets\n+    based on the size, with largest first.\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets_sorted = explore_service.filter(sorting=\"filesize_desc\")\n+    first_ds = datasets_sorted[0]\n+    assert first_ds.name()==\"Sample dataset 2\", f\"Expected smallest dataset to be 'Sample dataset 2', but got '{first_ds.name()}' instead\"\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "da39f9abf27fcb58372827f60b020e12a149b132",
    "node_id": "C_kwDONDG85doAKGRhMzlmOWFiZjI3ZmNiNTgzNzI4MjdmNjBiMDIwZTEyYTE0OWIxMzI",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T19:22:36Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T19:22:36Z"
      },
      "message": "fix(explore): fixed filtering displaying only sorting by date",
      "tree": {
        "sha": "951bac6bf18adf637123d80ca1972738ef4c8e8c",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/951bac6bf18adf637123d80ca1972738ef4c8e8c"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/da39f9abf27fcb58372827f60b020e12a149b132",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/da39f9abf27fcb58372827f60b020e12a149b132",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/da39f9abf27fcb58372827f60b020e12a149b132",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/da39f9abf27fcb58372827f60b020e12a149b132/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4c37b22857f117c4b63ca3ac2d3b4e18e9b19891",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4c37b22857f117c4b63ca3ac2d3b4e18e9b19891",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/4c37b22857f117c4b63ca3ac2d3b4e18e9b19891"
      }
    ],
    "files": [
      {
        "sha": "ced80b7517d89a162d492da956699330c37a4fc4",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/da39f9abf27fcb58372827f60b020e12a149b132/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/da39f9abf27fcb58372827f60b020e12a149b132/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=da39f9abf27fcb58372827f60b020e12a149b132",
        "patch": "@@ -164,7 +164,7 @@ <h3 class=\"h3 mb-3\">\n                         <div class=\"col-6\">\n \n                             <div>\n-                                Sort results by creation date\n+                                Sort results by creation date and dataset size\n                                 <label class=\"form-check\">\n                                     <input class=\"form-check-input\" type=\"radio\" value=\"newest\" name=\"sorting\"\n                                            checked=\"\">"
      }
    ]
  },
  {
    "sha": "ab59494f4c69c8e5642f926e95b05890f3cfc292",
    "node_id": "C_kwDONDG85doAKGFiNTk0OTRmNGM2OWM4ZTU2NDJmOTI2ZTk1YjA1ODkwZjNjZmMyOTI",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T18:55:53Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T18:55:53Z"
      },
      "message": "fix(uploads): removed previously tracked files",
      "tree": {
        "sha": "9be0083c01d51f866c126eb5c33883dc408d8201",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/9be0083c01d51f866c126eb5c33883dc408d8201"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/ab59494f4c69c8e5642f926e95b05890f3cfc292",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ab59494f4c69c8e5642f926e95b05890f3cfc292",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ab59494f4c69c8e5642f926e95b05890f3cfc292",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ab59494f4c69c8e5642f926e95b05890f3cfc292/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/baf61d00fa0753aeb28c505d68efbaf74860aa98"
      }
    ],
    "files": [
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file1.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl?ref=baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file2.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl?ref=baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file3.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl?ref=baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file7.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl?ref=baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file8.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl?ref=baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file9.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl?ref=baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file4.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl?ref=baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file5.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl?ref=baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file6.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl?ref=baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file10.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl?ref=baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file11.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl?ref=baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file12.uvl",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/baf61d00fa0753aeb28c505d68efbaf74860aa98/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl?ref=baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "patch": "@@ -1,19 +0,0 @@\n-features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\""
      }
    ]
  },
  {
    "sha": "d6e9198db88472fed91bf40633cf3000218e828d",
    "node_id": "C_kwDONDG85doAKGQ2ZTkxOThkYjg4NDcyZmVkOTFiZjQwNjMzY2YzMDAwMjE4ZTgyOGQ",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T17:57:51Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T17:57:51Z"
      },
      "message": "fix(zenodo): changed enviroment variable loading to work when fakenodo is deployed",
      "tree": {
        "sha": "8c57546aa88643e39f4c15687441d44fe452ed74",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/8c57546aa88643e39f4c15687441d44fe452ed74"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/d6e9198db88472fed91bf40633cf3000218e828d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d6e9198db88472fed91bf40633cf3000218e828d",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d6e9198db88472fed91bf40633cf3000218e828d",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d6e9198db88472fed91bf40633cf3000218e828d/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e8e5e183883f7f76e3f7d92eca59fb5516cf739",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/1e8e5e183883f7f76e3f7d92eca59fb5516cf739",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/1e8e5e183883f7f76e3f7d92eca59fb5516cf739"
      }
    ],
    "files": [
      {
        "sha": "046d16ed02077bce70fa94658634c90c5525ac89",
        "filename": "app/modules/zenodo/services.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6e9198db88472fed91bf40633cf3000218e828d/app%2Fmodules%2Fzenodo%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6e9198db88472fed91bf40633cf3000218e828d/app%2Fmodules%2Fzenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Fservices.py?ref=d6e9198db88472fed91bf40633cf3000218e828d",
        "patch": "@@ -27,11 +27,11 @@ def get_zenodo_url(self):\n         ZENODO_API_URL = \"\"\n \n         if FLASK_ENV == \"development\":\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n         elif FLASK_ENV == \"production\":\n             ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://zenodo.org/api/deposit/depositions\")\n         else:\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n+            ZENODO_API_URL = os.getenv(\"FAKENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n \n         return ZENODO_API_URL\n "
      }
    ]
  },
  {
    "sha": "baf61d00fa0753aeb28c505d68efbaf74860aa98",
    "node_id": "C_kwDONDG85doAKGJhZjYxZDAwZmEwNzUzYWViMjhjNTA1ZDY4ZWZiYWY3NDg2MGFhOTg",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T17:49:52Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T17:50:09Z"
      },
      "message": "fix(gitignore): added uploads and app.logs to gitignore to deal with dataset conflicts",
      "tree": {
        "sha": "01e717aa11bb4676363d42d3fe44301eb026a125",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/01e717aa11bb4676363d42d3fe44301eb026a125"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/baf61d00fa0753aeb28c505d68efbaf74860aa98",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/baf61d00fa0753aeb28c505d68efbaf74860aa98",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/baf61d00fa0753aeb28c505d68efbaf74860aa98",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/baf61d00fa0753aeb28c505d68efbaf74860aa98/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c4d410132066dd89296aa0920764acddb6f2265",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3c4d410132066dd89296aa0920764acddb6f2265",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/3c4d410132066dd89296aa0920764acddb6f2265"
      }
    ],
    "files": [
      {
        "sha": "3572f8a686c870b5140ee42d0dcdaa070e302a32",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/baf61d00fa0753aeb28c505d68efbaf74860aa98/.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/baf61d00fa0753aeb28c505d68efbaf74860aa98/.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitignore?ref=baf61d00fa0753aeb28c505d68efbaf74860aa98",
        "patch": "@@ -16,4 +16,6 @@ nginx.prod.ssl.conf\n entrypoint.sh\n deployments.log\n test_file.txt\n+uploads/\n egc/\n+app.log.*"
      }
    ]
  },
  {
    "sha": "3c4d410132066dd89296aa0920764acddb6f2265",
    "node_id": "C_kwDONDG85doAKDNjNGQ0MTAxMzIwNjZkZDg5Mjk2YWEwOTIwNzY0YWNkZGI2ZjIyNjU",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-12-15T17:40:46Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-15T17:40:46Z"
      },
      "message": "Merge pull request #32 from flamenquin-hub-single/feature-sync-with-github\n\nfeat(tests): sync with github tests",
      "tree": {
        "sha": "e25aa782752f3598b6c8b5072a99a200cddee4a3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/e25aa782752f3598b6c8b5072a99a200cddee4a3"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/3c4d410132066dd89296aa0920764acddb6f2265",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnXxSeCRC1aQ7uu5UhlAAAzqcQAAxFMihK5+lcEE457KKgq2Jb\nx0Oo0oZZx3I0Mdr+gRfH1t3Au6L6J+OACkMPOYQ+uZbYkHinjL+ehdZVdJzfFR5Y\nB66dES8PJIbamNkdeuJZ1XxEKqh39/C730mZ5h6EemBQKV81n3RsB5WpqUHBiO7E\nCIl8QP7avsOiBjLLY1H2oDwjHxmmB2vZk5DxiIoHFmCXIqBIks7kdSNqiHWQV3M6\nCXVVYMJkHCe7Zs9I+2zvNYjGxtWX5NPoBC5h88HGeluSAfxCr/H9zWwDgRrERq30\nb1jkIcupqVuPeP0VfE9g2MXnQNhFGNJbmV9WyjhrDpomttIu2Z+o5DLgN2vdeSM2\nRP3DLgbJ4n4rFrQxhg20zkzl8Pf9+Hilyu/mV032flf7LHIB+hyJcj6Al2JzCcPH\ng9P+Lnhph6yUbrcFT7qL6rpvXMzCjFD6cfWSx2T3ltKRTt8vdYfByE9I3/lim05c\nBOyOMJoNfLzGhNZHfSs/WC+Q1KwqurC5j2nktGUV5P7AAU+kPrJ1xU1iRyDGB/QG\nuVdDmFk4sxWY2QPO+ZUTGYjpes/kbFDdxhupKFp20Ut/DFF4jZgCEvrrmJqQC0TD\nK2L8WSb9JFatiISzw5foQkgBwcXnI1rwon2hrjCyCI/jNVdqC5rr1E2fwVLcr3Dh\nGaLCMZ7h5fQHMGcnJFka\n=vGRA\n-----END PGP SIGNATURE-----\n",
        "payload": "tree e25aa782752f3598b6c8b5072a99a200cddee4a3\nparent c2038affafab5b5bb1b94964b2bdab1330df57a1\nparent e3f93b2a3cb533c1007f7b124bbb1eaca25438e4\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1734284446 +0100\ncommitter GitHub <noreply@github.com> 1734284446 +0100\n\nMerge pull request #32 from flamenquin-hub-single/feature-sync-with-github\n\nfeat(tests): sync with github tests",
        "verified_at": "2024-12-15T17:42:07Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3c4d410132066dd89296aa0920764acddb6f2265",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/3c4d410132066dd89296aa0920764acddb6f2265",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3c4d410132066dd89296aa0920764acddb6f2265/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c2038affafab5b5bb1b94964b2bdab1330df57a1",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c2038affafab5b5bb1b94964b2bdab1330df57a1",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c2038affafab5b5bb1b94964b2bdab1330df57a1"
      },
      {
        "sha": "e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4"
      }
    ],
    "files": [
      {
        "sha": "e4637074898a1a93c1a06f57ccd6ac82c64c8065",
        "filename": "app/modules/auth/tests/locustfile.py",
        "status": "modified",
        "additions": 52,
        "deletions": 1,
        "changes": 53,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3c4d410132066dd89296aa0920764acddb6f2265/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3c4d410132066dd89296aa0920764acddb6f2265/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py?ref=3c4d410132066dd89296aa0920764acddb6f2265",
        "patch": "@@ -1,4 +1,5 @@\n from locust import HttpUser, TaskSet, task\n+import requests\n from core.locust.common import get_csrf_token, fake\n from core.environment.host import get_host_for_locust_testing\n \n@@ -51,8 +52,58 @@ def login(self):\n             print(f\"Login failed: {response.status_code}\")\n \n \n+class InviteBehavior(TaskSet):\n+    def on_start(self):\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def invite_user(self):\n+        github_user_response = requests.get(\"https://api.github.com/user\", headers={\n+            \"Authorization\": \"token example_valid_token\",\n+            \"Accept\": \"application/vnd.github.v3+json\"\n+        })\n+\n+        if github_user_response.status_code != 200:\n+            print(f\"Failed to fetch GitHub user info: {github_user_response.status_code}\")\n+\n+        username = github_user_response.json().get(\"login\")\n+        if not username:\n+            print(\"Failed to fetch GitHub username.\")\n+\n+        response = self.client.post(\"/invite\", json={\n+            \"github_username\": username\n+        })\n+        \n+        if response.status_code == 201:\n+            print(f\"Invitation sent successfully to {username}.\")\n+        elif response.status_code == 404:\n+            print(f\"GitHub user {username} not found.\")\n+        elif response.status_code == 422:\n+            print(f\"User {username} already belongs to the organization.\")\n+        else:\n+            print(f\"Invitation failed with status: {response.status_code} - {response.text}\")\n+\n+\n+\n+\n class AuthUser(HttpUser):\n-    tasks = [SignupBehavior, LoginBehavior]\n+    tasks = [SignupBehavior, LoginBehavior, InviteBehavior]\n     min_wait = 5000\n     max_wait = 9000\n     host = get_host_for_locust_testing()\n+    \n+    "
      },
      {
        "sha": "729195481b361557670716d39a2979257d9a1374",
        "filename": "app/modules/auth/tests/test_unit.py",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3c4d410132066dd89296aa0920764acddb6f2265/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3c4d410132066dd89296aa0920764acddb6f2265/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py?ref=3c4d410132066dd89296aa0920764acddb6f2265",
        "patch": "@@ -1,3 +1,4 @@\n+from unittest.mock import MagicMock, patch\n import pytest\n from flask import url_for\n \n@@ -117,3 +118,39 @@ def test_service_create_with_profile_fail_no_password(clean_database):\n \n     assert UserRepository().count() == 0\n     assert UserProfileRepository().count() == 0\n+    \n+    \n+    \n+@patch('flask_dance.contrib.github.github')  \n+def test_redirect_to_login(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(authorized=False)\n+\n+    response = test_client.get('/gitlogin')\n+\n+    assert response.status_code == 302\n+    assert \"/github\" in response.location, f\"Expected redirection to github, got {response.request.path}\"\n+    \n+    \n+\n+@patch('flask_dance.contrib.github.github')\n+def test_invite_user_no_sync_error(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(ok=False)\n+\n+    response = test_client.post('/invite')\n+\n+    assert response.status_code == 200\n+    assert b\"First sync your github account.\" in response.data\n+\n+\n+@patch('flask_dance.contrib.github.github')\n+def test_create_repo_no_sync_error(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(ok=False)\n+\n+    response = test_client.post('/create_repo')\n+\n+    assert response.status_code == 200\n+    assert b\"First sync your github account.\" in response.data\n+    \n+\n+\n+"
      },
      {
        "sha": "7fcee88cff634a5c5758ca28e81b4f9d89ad904b",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 81,
        "deletions": 3,
        "changes": 84,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3c4d410132066dd89296aa0920764acddb6f2265/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3c4d410132066dd89296aa0920764acddb6f2265/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=3c4d410132066dd89296aa0920764acddb6f2265",
        "patch": "@@ -1,3 +1,5 @@\n+\n+import random\n from locust import HttpUser, TaskSet, task, between\n from core.locust.common import get_csrf_token\n from core.environment.host import get_host_for_locust_testing\n@@ -13,6 +15,80 @@ def dataset_upload(self):\n         \"\"\"Simula la carga de la p\u00e1gina de subida de datasets.\"\"\"\n         response = self.client.get(\"/dataset/upload\")\n         get_csrf_token(response)\n+        \n+        \n+class CommitDatasetBehavior(TaskSet):\n+    def on_start(self):\n+        \"\"\"Simulate user login before running the commit task.\"\"\"\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        \"\"\"Ensure the user is authenticated.\"\"\"\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}, {response.text}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def commit_dataset(self):\n+        dataset_id = random.randint(1, 10)\n+        response = self.client.post(f\"/dataset/commit/{dataset_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"Dataset {dataset_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"Dataset {dataset_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for dataset {dataset_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for dataset {dataset_id}: {response.status_code} - {response.text}\")\n+\n+\n+\n+class CommitFileBehavior(TaskSet):\n+    def on_start(self):\n+        \"\"\"Simulate user login before running the commit task.\"\"\"\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        \"\"\"Ensure the user is authenticated.\"\"\"\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}, {response.text}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def commit_dataset(self):\n+        file_id = random.randint(1, 30)  \n+        response = self.client.post(f\"/dataset/commit_file/{file_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"File {file_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"File {file_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for File {file_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n+\n \n     @task(4)\n     def download_dataset_glencoe(self):\n@@ -40,7 +116,9 @@ def download_dataset_zip(self):\n \n \n class DatasetUser(HttpUser):\n-    \"\"\"Clase principal que define los usuarios y su comportamiento.\"\"\"\n-    tasks = [DatasetBehavior]\n+      \"\"\"Clase principal que define los usuarios y su comportamiento.\"\"\"\n+    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n     wait_time = between(5, 9)  # Espera entre 5 y 9 segundos entre tareas\n-    host = get_host_for_locust_testing()\n\\ No newline at end of file\n+    host = get_host_for_locust_testing()"
      }
    ]
  },
  {
    "sha": "c2038affafab5b5bb1b94964b2bdab1330df57a1",
    "node_id": "C_kwDONDG85doAKGMyMDM4YWZmYWZhYjViNWJiMWI5NDk2NGIyYmRhYjEzMzBkZjU3YTE",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-12-15T17:17:38Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-15T17:17:38Z"
      },
      "message": "Merge pull request #27 from flamenquin-hub-single/feature-upload_analyse_and_repair_UVL\n\nFeature upload analyse and repair uvl",
      "tree": {
        "sha": "f62ac1faeda40cb4957cc23d95a3a4348199d618",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/f62ac1faeda40cb4957cc23d95a3a4348199d618"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/c2038affafab5b5bb1b94964b2bdab1330df57a1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnXw8yCRC1aQ7uu5UhlAAACucQACcYSXrwYMBdabd+geCYh1Bi\nkQFfnEIzamyO+KyDiTxLnnUjIQ4Ek4xBVOZVbMtqUPNQXcqF6iAz1uXVgxGRKDFE\nIYVLe3suiXPvYZkB0Fu51+84KRanNNKI57pth6wWCGNn+oG7QZuDgZYlz6lQ8gxq\nIPbftWMs/jZKTLKeQ8+iu+Fbn27XW1wAIto/qsRX4dMD/g2mXfZZMFQFu91c29Pm\nPV6vEAB6SHHasQQPB1qYVvychl0tsQRV2hBrGhhMek8HbpnwHMNrDUBwpktgd6gU\nyf1V+r/rDqt0K3exRPoTJmWewFqDgceByBF3R74lWYLYnL/PH8wAQRclXA89S6Op\n2ovJ7sLiCW8jIyfHCuMqukEnc1W9mW6u2g3hgtcfY1BTyoEnQzsIjdv7NfF7hLZN\nV2S19Fh4U4noPAsyLVw+sy4Y2zmWIuoZJH27qJxwnLhEEtVQdqzav6G5aHpW7PPv\nBkc+nInnToReOR7e9Bf1Pxcq/reyoJn1TyJ4K7R+l6+ZGLFfBRHlbfFVblcBWahk\nWayBSTVKbe8lhXBqhRP3PhHd7NrLzB3Iw+1qdXSYcJc8XCR40WQv6HKLWGBrlZGy\nAQncJnvEAFb+/O5LdHk0v9SfIrcZG2c2ZTECl6JYNFQd4ptt/w6WOBNpTMGfZsSt\nndo7BJRGk3hneeptFK0d\n=7fMm\n-----END PGP SIGNATURE-----\n",
        "payload": "tree f62ac1faeda40cb4957cc23d95a3a4348199d618\nparent 732a8972958cbd57022d507430543ae695f53dde\nparent adf8d84fae294ccb75cb5cd7ed236caa3fb426ab\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1734283058 +0100\ncommitter GitHub <noreply@github.com> 1734283058 +0100\n\nMerge pull request #27 from flamenquin-hub-single/feature-upload_analyse_and_repair_UVL\n\nFeature upload analyse and repair uvl",
        "verified_at": "2024-12-15T17:18:18Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c2038affafab5b5bb1b94964b2bdab1330df57a1",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c2038affafab5b5bb1b94964b2bdab1330df57a1",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c2038affafab5b5bb1b94964b2bdab1330df57a1/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "732a8972958cbd57022d507430543ae695f53dde",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/732a8972958cbd57022d507430543ae695f53dde",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/732a8972958cbd57022d507430543ae695f53dde"
      },
      {
        "sha": "adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab"
      }
    ],
    "files": [
      {
        "sha": "049e06399eb565e07bbbbcf9aa7c402177651378",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c2038affafab5b5bb1b94964b2bdab1330df57a1/.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c2038affafab5b5bb1b94964b2bdab1330df57a1/.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitignore?ref=c2038affafab5b5bb1b94964b2bdab1330df57a1",
        "patch": "@@ -15,4 +15,5 @@ nginx.prod.ssl.conf\n .version\n entrypoint.sh\n deployments.log\n-test_file.txt\n\\ No newline at end of file\n+test_file.txt\n+egc/"
      },
      {
        "sha": "0b7d1cc88c4b7e7859e7dab081dcdaa0c8395a97",
        "filename": "app/modules/dataset/UVLCustomLexer.py",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c2038affafab5b5bb1b94964b2bdab1330df57a1/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c2038affafab5b5bb1b94964b2bdab1330df57a1/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py?ref=c2038affafab5b5bb1b94964b2bdab1330df57a1",
        "patch": "@@ -0,0 +1,97 @@\n+import re\n+from .UVLPythonLexer import UVLPythonLexer\n+\n+from .UVLPythonParser import UVLPythonParser\n+from antlr4.Token import Token\n+from antlr4.Token import CommonToken\n+\n+class UVLCustomLexer(UVLPythonLexer):\n+   \n+    def __init__(self, input_stream):\n+        super().__init__(input_stream)\n+        self.tokens = []\n+        self.indents = []\n+        self.opened = 0\n+        self.lastToken = None\n+        \n+    def emitToken(self, t):\n+        super().emitToken(t)\n+        self.tokens.append(t)  \n+\n+    def nextToken(self):\n+        # Check if the end-of-file is ahead and there are still some DEDENTS expected.\n+        if self._input.LA(1) == Token.EOF and len(self.indents) != 0:\n+            # Remove any trailing EOF tokens from our buffer.\n+            while len(self.tokens) > 0 and self.tokens[-1].type == Token.EOF:\n+                del self.tokens[-1]\n+\n+            # First emit an extra line break that serves as the end of the statement.\n+            self.emitToken(self.common_token(UVLPythonLexer.NEWLINE, \"\\n\"));\n+\n+\n+            # Now emit as much DEDENT tokens as needed.\n+            while len(self.indents) != 0:\n+                self.emitToken(self.create_dedent())\n+                del self.indents[-1]              \n+            # Put the EOF back on the token stream.\n+            self.emitToken(self.common_token(Token.EOF, \"<EOF>\"));\n+\n+        next_token = super().nextToken()\n+\n+        if next_token.channel == Token.DEFAULT_CHANNEL:\n+            # Keep track of the last token on the default channel.\n+            self.lastToken = next_token\n+\n+        return self.tokens.pop(0) if len(self.tokens) > 0 else next_token\n+\n+    def create_dedent(self):\n+        dedent = self.common_token(self.DEDENT, \"\")\n+        dedent.line = self.lastToken.line\n+        return dedent\n+\n+    def common_token(self, type, text):\n+        stop = self.getCharIndex() - 1\n+        start = stop - len(text) + 1 if text else stop\n+        return CommonToken(self._tokenFactorySourcePair, type, Token.DEFAULT_CHANNEL, start, stop)\n+\n+    @staticmethod\n+    def getIndentationCount(spaces):\n+        count = 0\n+        for ch in spaces:\n+            if ch == '\\t':\n+                count += 8 - (count % 8)\n+            else:  # A normal space char.\n+                count += 1\n+        return count\n+    \n+    def skipToken(self):\n+        self.skip()\n+\n+    def atStartOfInput(self):\n+        return self._interp.column == 0 and self._interp.line == 1\n+    \n+    def handleNewline(self):\n+      new_line = re.sub(r\"[^\\r\\n\\f]+\", \"\", self._interp.getText(self._input)) #.replaceAll(\"[^\\r\\n\\f]+\", \"\")\n+      spaces = re.sub(r\"[\\r\\n\\f]+\", \"\", self._interp.getText(self._input)) #.replaceAll(\"[\\r\\n\\f]+\", \"\")\n+      next = self._input.LA(1)\n+\n+      if self.opened > 0 or next == '\\r' or next == '\\n' or next == '\\f' or next == '#':\n+        self.skip()\n+      else:\n+        self.emitToken(self.common_token(self.NEWLINE, new_line))\n+\n+        indent = self.getIndentationCount(spaces)\n+        if len(self.indents) == 0:\n+            previous = 0\n+        else:\n+            previous = self.indents[-1]\n+\n+        if indent == previous:\n+            self.skip()\n+        elif indent > previous:\n+            self.indents.append(indent)\n+            self.emitToken(self.common_token(UVLPythonParser.INDENT, spaces))\n+        else:\n+            while len(self.indents) > 0 and self.indents[-1] > indent:\n+                self.emitToken(self.create_dedent())\n+                del self.indents[-1]\n\\ No newline at end of file"
      },
      {
        "sha": "03c2e1a6418ec2dc70695cdfa30b36d1d71ebff5",
        "filename": "app/modules/dataset/parser.py",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c2038affafab5b5bb1b94964b2bdab1330df57a1/app%2Fmodules%2Fdataset%2Fparser.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c2038affafab5b5bb1b94964b2bdab1330df57a1/app%2Fmodules%2Fdataset%2Fparser.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fparser.py?ref=c2038affafab5b5bb1b94964b2bdab1330df57a1",
        "patch": "@@ -0,0 +1,62 @@\n+from antlr4 import CommonTokenStream, FileStream\n+from uvl.UVLCustomLexer import UVLCustomLexer\n+from uvl.UVLPythonParser import UVLPythonParser\n+from antlr4.error.ErrorListener import ErrorListener\n+\n+class CustomErrorListener(ErrorListener):\n+    def syntaxError(self, recognizer, offendingSymbol, line, column, msg, e):\n+        # If the error message contains a specific keyword related to tabulation, ignore it\n+        if \"\\\\t\" in msg:\n+            print(f\"The UVL has the following warning that prevents reading it :Line {line}:{column} - {msg}\")\n+            return\n+        else:\n+            # Otherwise, print the error (or handle it in another way)\n+            raise Exception(f\"The UVL has the following error that prevents reading it :Line {line}:{column} - {msg}\")\n+            \n+\n+def get_tree(argv):\n+    input_stream = FileStream(argv)\n+    lexer = UVLCustomLexer(input_stream)\n+    \n+    # Attach the custom error listener to the lexer\n+    lexer.removeErrorListeners()\n+    lexer.addErrorListener(CustomErrorListener())\n+\n+    stream = CommonTokenStream(lexer)\n+    parser = UVLPythonParser(stream)\n+    \n+    # Attach the custom error listener to the parser\n+    parser.removeErrorListeners()\n+    parser.addErrorListener(CustomErrorListener())\n+\n+    tree = parser.featureModel()\n+\n+    return tree\n+\n+\n+if __name__ == \"__main__\":\n+    import sys\n+\n+    # Check if the user provided a file argument\n+    if len(sys.argv) < 2:\n+        print(\"Usage: python script_name.py <path_to_uvl_file>\")\n+        sys.exit(1)\n+\n+    # Parse the provided file\n+    input_stream = FileStream(sys.argv[1])\n+    lexer = UVLCustomLexer(input_stream)\n+    \n+    # Attach the custom error listener to the lexer\n+    lexer.removeErrorListeners()\n+    lexer.addErrorListener(CustomErrorListener())\n+\n+    stream = CommonTokenStream(lexer)\n+    parser = UVLPythonParser(stream)\n+    \n+    # Attach the custom error listener to the parser\n+    parser.removeErrorListeners()\n+    parser.addErrorListener(CustomErrorListener())\n+\n+    tree = parser.featureModel()\n+    # Print the parse tree (optional)\n+    print(tree.toStringTree(recog=parser))"
      },
      {
        "sha": "3158900b7ce2171fc5498afb7be7a85d7cf0b612",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c2038affafab5b5bb1b94964b2bdab1330df57a1/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c2038affafab5b5bb1b94964b2bdab1330df57a1/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=c2038affafab5b5bb1b94964b2bdab1330df57a1",
        "patch": "@@ -25,6 +25,8 @@\n )\n from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n+from app.modules.dataset.parser import get_tree\n+logger = logging.getLogger(__name__)\n from flask_dance.contrib.github import github\n \n \n@@ -99,6 +101,7 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n+\n @dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n @login_required\n def check_dataset():\n@@ -126,6 +129,7 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n+\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -156,6 +160,11 @@ def upload():\n         file.save(file_path)\n     except Exception as e:\n         return jsonify({\"message\": str(e)}), 500\n+    try:\n+        get_tree(file_path)\n+    except Exception as e:\n+        os.remove(file_path)\n+        return jsonify({\"message\": str(e),\"syntax\": True}),400\n \n     return (\n         jsonify("
      },
      {
        "sha": "9c39a7ba463e67ba1cf726d260f7a84a1d8cbd14",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "removed",
        "additions": 0,
        "deletions": 286,
        "changes": 286,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/732a8972958cbd57022d507430543ae695f53dde/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/732a8972958cbd57022d507430543ae695f53dde/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=732a8972958cbd57022d507430543ae695f53dde",
        "patch": "@@ -1,286 +0,0 @@\n-{% extends \"base_template.html\" %}\n-\n-{% block title %}Check UVL model{% endblock %}\n-\n-{% block content %}\n-\n-    <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n-\n-    {% if messages %}\n-        <ul>\n-            {% for message in messages %}\n-                <li>{{ message }}</li>\n-            {% endfor %}\n-        </ul>\n-    {% endif %}\n-\n-    <div class=\"row\">\n-\n-        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n-\n-            <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n-\n-            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n-                \n-\t\t{{ form.hidden_tag() }}\n-\n-\n-                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n-                    <div id=\"dropzone-text\"></div>\n-                </form>\n-\n-                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n-                    </span>\n-\n-                <ul class=\"mt-2\" id=\"file-list\"></ul>\n-\n-                <script>\n-                    let dropzone = Dropzone.options.myDropzone = {\n-                        url: \"/dataset/file/upload\",\n-                        paramName: 'file',\n-                        maxFilesize: 10,\n-                        acceptedFiles: '.uvl',\n-                        init: function () {\n-\n-\t\t\t\tlet fileList = document.getElementById('file-list');\n-\t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n-\t\t\t\tlet alerts = document.getElementById('alerts');\n-\t\t\t\tthis.on('addedfile', function (file) {\n-\n-\t\t\t\t\tlet ext = file.name.split('.').pop();\n-\t\t\t\t\tif (ext !== 'uvl') {\n-\t\t\t\t\t\tthis.removeFile(file);\n-\n-\t\t\t\t\t\tlet alert = document.createElement('p');\n-\t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n-\t\t\t\t\t\talerts.appendChild(alert);\n-\t\t\t\t\t\talerts.style.display = 'block';\n-\t\t\t\t\t}\n-\t\t\t\t\tif (fileList.childElementCount > 0) {\n-\t\t\t\t\t\tthis.removeFile(file);\n-\n-\t\t\t\t\t\tlet alert = document.createElement('p');\n-\t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n-\t\t\t\t\t\talerts.appendChild(alert);\n-\t\t\t\t\t\talerts.style.display = 'block';\n-\t\t\t\t\t}\n-                            });\n-\n-                            this.on('success', function (file, response) {\n-\n-                                let dropzone = this;\n-\n-                                show_upload_dataset();\n-\n-                                console.log(\"File uploaded: \", response);\n-                                // actions when UVL model is uploaded\n-                                let listItem = document.createElement('li');\n-                                let h4Element = document.createElement('h4');\n-                                h4Element.textContent = response.filename;\n-                                listItem.appendChild(h4Element);\n-\n-                                // generate incremental id for form\n-                                let formUniqueId = generateIncrementalId();\n-\n-                               /*\n-                                    ##########################################\n-                                    REMOVE BUTTON\n-                                    ##########################################\n-                                */\n-\n-                                // remove button\n-                                let removeButton = document.createElement('button');\n-                                removeButton.innerHTML = 'Delete model';\n-                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n-                                removeButton.style.borderRadius = '5px';\n-\n-                                removeButton.addEventListener('click', function () {\n-                                    fileList.removeChild(listItem);\n-                                    this.removeFile(file);\n-\n-                                    // Ajax request\n-                                    let xhr = new XMLHttpRequest();\n-                                    xhr.open('POST', '/dataset/file/delete', true);\n-                                    xhr.setRequestHeader('Content-Type', 'application/json');\n-                                    xhr.onload = function () {\n-                                        if (xhr.status === 200) {\n-                                            console.log('Deleted file from server');\n-\n-                                            if (dropzone.files.length === 0) {\n-                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n-                                                clean_upload_errors();\n-                                            }\n-\n-                                        }\n-                                    };\n-                                    xhr.send(JSON.stringify({file: file.name}));\n-                                }.bind(this));\n-\n-                                /*\n-                                    ##########################################\n-                                    APPEND BUTTONS\n-                                    ##########################################\n-                                */\n-                                listItem.appendChild(removeButton);\n-\n-                                /*\n-                                    ##########################################\n-                                    UVL FORM\n-                                    ##########################################\n-                                */\n-\n-                                // create specific form for UVL\n-                                let formContainer = document.createElement('div');\n-                                formContainer.id = formUniqueId + \"_form\";\n-                                formContainer.classList.add('uvl_form', \"mt-3\");\n-                                formContainer.style.display = \"none\";\n-\n-                                formContainer.innerHTML = `\n-                                    <div class=\"row\">\n-                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n-                                        <div class=\"col-12\">\n-                                            <div class=\"row\">\n-                                                <div class=\"col-12\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">Title</label>\n-                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-12\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">Description</label>\n-                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-lg-6 col-12\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n-                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n-                                                            <option value=\"none\">None</option>\n-                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n-                                                            <option value=\"book\">Book</option>\n-                                                            <option value=\"section\">Book Section</option>\n-                                                            <option value=\"conferencepaper\">Conference Paper</option>\n-                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n-                                                            <option value=\"article\">Journal Article</option>\n-                                                            <option value=\"patent\">Patent</option>\n-                                                            <option value=\"preprint\">Preprint</option>\n-                                                            <option value=\"deliverable\">Project Deliverable</option>\n-                                                            <option value=\"milestone\">Project Milestone</option>\n-                                                            <option value=\"proposal\">Proposal</option>\n-                                                            <option value=\"report\">Report</option>\n-                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n-                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n-                                                            <option value=\"technicalnote\">Technical Note</option>\n-                                                            <option value=\"thesis\">Thesis</option>\n-                                                            <option value=\"workingpaper\">Working Paper</option>\n-                                                            <option value=\"other\">Other</option>\n-                                                        </select>\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-lg-6 col-6\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n-                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-6\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n-                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-6\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">UVL version</label>\n-                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-12\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">Authors</label>\n-                                                        <div id=\"` + formContainer.id + `_authors\">\n-                                                        </div>\n-                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n-                                                    </div>\n-                                                </div>\n-                                            </div>\n-                                        </div>\n-                                    </div>\n-                                    `;\n-\n-                                listItem.appendChild(formContainer);\n-                                fileList.appendChild(listItem);\n-\n-                            });\n-\n-                            this.on('error', function (file, response) {\n-                                console.error(\"Error uploading file: \", response);\n-                                let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n-                                alerts.appendChild(alert);\n-                                alerts.style.display = 'block';\n-                            });\n-\n-                        }\n-                    };\n-\n-\n-                </script>\n-\n-            </div>\n-        </div>\n-\n-    </div>\n-\n-    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n-\n-        <div class=\"col-12\">\n-\n-            <hr>\n-\n-            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n-\n-            <div style=\"padding-left: 2rem\">\n-\n-                <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n-                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n-                    Upload dataset</button>\n-\n-                <div id=\"loading\" style=\"display: none\">\n-                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n-                    Uploading dataset, please wait...\n-                </div>\n-\n-                <div class=\"row\">\n-                    <div class=\"col-12 mb-3\">\n-\n-                    </div>\n-                </div>\n-\n-                \n-                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n-\n-                    </span>\n-\n-                <script>\n-                    const upload_button = document.getElementById('check_model_button');\n-\t\t\tupload_button.disabled = false;\n-                </script>\n-\n-            </div>\n-\n-\n-\n-\n-        </div>\n-\n-    </div>\n-\n-\n-{% endblock %}\n-\n-{% block scripts %}\n-    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n-    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n-{% endblock %}"
      },
      {
        "sha": "b803f06d34fae75f4ed4f2cf088836bd347ec819",
        "filename": "app/modules/dataset/templates/dataset/upload_dataset.html",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c2038affafab5b5bb1b94964b2bdab1330df57a1/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c2038affafab5b5bb1b94964b2bdab1330df57a1/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html?ref=c2038affafab5b5bb1b94964b2bdab1330df57a1",
        "patch": "@@ -247,6 +247,9 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n \n                                     let alert = document.createElement('p');\n                                     alert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t    if (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t    }\n                                     alerts.appendChild(alert);\n                                     alerts.style.display = 'block';\n                                 }\n@@ -434,7 +437,20 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n                             this.on('error', function (file, response) {\n                                 console.error(\"Error uploading file: \", response);\n                                 let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n+\t\t\t\tif (response.syntax) {\n+                                \talert.textContent = 'UVL not valid: ' + file.name +'. Error: '+response.message;\n+\t\t\t\t} else {\n+\t\t\t\t\tif ( response!=\"You can't upload files of this type.\") {\n+\n+\t\t\t\t\t\talert.textContent = 'Something went wrong while saving the file, try again please';\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\talert.textContent = \"You can't upload files of this type.\";\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tthis.removeFile(file);\n+\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0]);\n+\t\t\t\t}\n                                 alerts.appendChild(alert);\n                                 alerts.style.display = 'block';\n                             });\n@@ -529,4 +545,4 @@ <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\">\n {% block scripts %}\n     <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n     <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n-{% endblock %}\n\\ No newline at end of file\n+{% endblock %}"
      },
      {
        "sha": "6ce8c18b46f0e4c830b76d1e81b378f2cf840f3e",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c2038affafab5b5bb1b94964b2bdab1330df57a1/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c2038affafab5b5bb1b94964b2bdab1330df57a1/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=c2038affafab5b5bb1b94964b2bdab1330df57a1",
        "patch": "@@ -111,14 +111,6 @@\n                         </a>\n                     </li>\n \n-\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.list_dataset' else '' }}\">\n-                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n-                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n-                                class=\"align-middle\">Check model</span>\n-                        </a>\n-                    </li>\n-\n-\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>"
      }
    ]
  },
  {
    "sha": "732a8972958cbd57022d507430543ae695f53dde",
    "node_id": "C_kwDONDG85doAKDczMmE4OTcyOTU4Y2JkNTcwMjJkNTA3NDMwNTQzYWU2OTVmNTNkZGU",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-12-15T17:16:56Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-15T17:16:56Z"
      },
      "message": "Merge pull request #34 from flamenquin-hub-single/fix-uploading_duplicate_datasets\n\nFix uploading duplicate datasets",
      "tree": {
        "sha": "b8a1f45066bfe790c443d58d968cc6d2d5180d3e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/b8a1f45066bfe790c443d58d968cc6d2d5180d3e"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/732a8972958cbd57022d507430543ae695f53dde",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnXw8ICRC1aQ7uu5UhlAAAtPwQAGIwJhUIQEoh6qHGGlgsY7ry\nwKJKEgLTr+nTYk3N2QifC8TmsWuuOcOkt80cITb/KL3SnEpLDJEn5Qt4GeOy/JMB\nhEuvUNuvfEgUjNbI+ccoIZantFd2FsTBVu/5Ao5vKeE/mSyVfxngXjnSRD01IGbp\nANACbaLeQmuBCnG7fPMIgjmBGNHs8TA+VoCQaRY1fgRc3sajixePYV4jLqgIydox\nQF3s9MzRI6zotAxB0PFL6jQNLrpWql2Y9914csuqBswNPz9KvrN/3pqUC0S/citi\nsXUdKEdMQgg2NzT9AqCiux45UTUMIX9rrcLNVgUVUNzHIXDoeZd4w7F0JeD9bWPh\nJ6mTiZte/8jT6X5LKJR9HJfuffdpWYX2oRshmBFpgP1UbXK40mTnn3giAwu//xiU\njNP26Ql2RbH0JKfZ2Ycvk+DMkMW0Q+3MVlUTNUXcbbS2oUJ7Fremj7L4aZt1Xu1N\nBMsudVrEGQ7XmH4X1yA2/sClGfulIkFyOltOb0QhKTzGvX11qXxvxb6E1475rVHk\nofppR7F8j5SSXsPCvTwggTh+Lfkfm8HPulTXg5OPCXilWKfgRGjA5BOJXiTrL1Fp\nosCjY6G39igsxBQWgJ1FaW1OQMnN45qqkWfP5D5Vic0wYR7tmbxcjzEfh08mxvvm\nMG32J+LFdB/H2bZ8tgIJ\n=v6Wy\n-----END PGP SIGNATURE-----\n",
        "payload": "tree b8a1f45066bfe790c443d58d968cc6d2d5180d3e\nparent 275789936b5f3be522fdcc4489b66e8abe8aa0da\nparent b214242455f4c87bc468175ce99fe75f52818d27\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1734283016 +0100\ncommitter GitHub <noreply@github.com> 1734283016 +0100\n\nMerge pull request #34 from flamenquin-hub-single/fix-uploading_duplicate_datasets\n\nFix uploading duplicate datasets",
        "verified_at": "2024-12-15T17:21:59Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/732a8972958cbd57022d507430543ae695f53dde",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/732a8972958cbd57022d507430543ae695f53dde",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/732a8972958cbd57022d507430543ae695f53dde/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "275789936b5f3be522fdcc4489b66e8abe8aa0da",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/275789936b5f3be522fdcc4489b66e8abe8aa0da",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/275789936b5f3be522fdcc4489b66e8abe8aa0da"
      },
      {
        "sha": "b214242455f4c87bc468175ce99fe75f52818d27",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b214242455f4c87bc468175ce99fe75f52818d27",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/b214242455f4c87bc468175ce99fe75f52818d27"
      }
    ],
    "files": [
      {
        "sha": "5a503969d21b686acd317e8d8396c923771290ec",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 16,
        "deletions": 114,
        "changes": 130,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/732a8972958cbd57022d507430543ae695f53dde/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/732a8972958cbd57022d507430543ae695f53dde/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=732a8972958cbd57022d507430543ae695f53dde",
        "patch": "@@ -139,127 +139,16 @@ var currentId = 0;\n \n         window.onload = function () {\n \n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n+\t\ttest_zenodo_connection();\n \n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n-\n-        function downloadDataset(datasetId, format) {\n-            const url = `/dataset/download/${datasetId}/${format}`;\n-            window.location.href = url;\n-        }\n-        \n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n \t\t\t\tconsole.log(\"hi\");\n \t\t\t\tclean_upload_errors();\n \t\t\t\tshow_loading(\"check\");\n \n-\t\t\t\t\n+\n \t\t\t\tfetch('/dataset/check', {\n \t\t\t\t\tmethod: 'POST',\n \t\t\t\t\tbody: ''\n@@ -387,9 +276,22 @@ var currentId = 0;\n \n \n \t\t\t});\n-\t\t}\n+\t\t};\n+\t};\n+\n \n \n+function isValidOrcid(orcid) {\n+\tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+\treturn orcidRegex.test(orcid);\n+}\n+\n+function downloadDataset(datasetId, format) {\n+\tconst url = `/dataset/download/${datasetId}/${format}`;\n+\twindow.location.href = url;\n+}\n+        \n+\t\t\n function isValidOrcid(orcid) {\n \tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n \treturn orcidRegex.test(orcid);"
      },
      {
        "sha": "65ffa266d710b0ee8f02416aeb1319e5f0aed671",
        "filename": "app/static/js/scripts.js",
        "status": "modified",
        "additions": 4,
        "deletions": 244,
        "changes": 248,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/732a8972958cbd57022d507430543ae695f53dde/app%2Fstatic%2Fjs%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/732a8972958cbd57022d507430543ae695f53dde/app%2Fstatic%2Fjs%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fscripts.js?ref=732a8972958cbd57022d507430543ae695f53dde",
        "patch": "@@ -1,246 +1,6 @@\n-var currentId = 0;\n-        var amount_authors = 0;\n-\n-        function show_upload_dataset() {\n-            document.getElementById(\"upload_dataset\").style.display = \"block\";\n-        }\n-\n-        function generateIncrementalId() {\n-            return currentId++;\n-        }\n-\n-        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n-            let fieldWrapper = document.createElement('div');\n-            fieldWrapper.className = className;\n-\n-            let label = document.createElement('label');\n-            label.className = 'form-label';\n-            label.for = name;\n-            label.textContent = text;\n-\n-            let field = document.createElement('input');\n-            field.name = name;\n-            field.className = 'form-control';\n-\n-            fieldWrapper.appendChild(label);\n-            fieldWrapper.appendChild(field);\n-            newAuthor.appendChild(fieldWrapper);\n-        }\n-\n-        function addRemoveButton(newAuthor) {\n-            let buttonWrapper = document.createElement('div');\n-            buttonWrapper.className = 'col-12 mb-2';\n-\n-            let button = document.createElement('button');\n-            button.textContent = 'Remove author';\n-            button.className = 'btn btn-danger btn-sm';\n-            button.type = 'button';\n-            button.addEventListener('click', function (event) {\n-                event.preventDefault();\n-                newAuthor.remove();\n-            });\n-\n-            buttonWrapper.appendChild(button);\n-            newAuthor.appendChild(buttonWrapper);\n-        }\n-\n-        function createAuthorBlock(idx, suffix) {\n-            let newAuthor = document.createElement('div');\n-            newAuthor.className = 'author row';\n-            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n-\n-            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n-            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n-            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n-            addRemoveButton(newAuthor);\n-\n-            return newAuthor;\n-        }\n-\n-        function check_title_and_description() {\n-            let titleInput = document.querySelector('input[name=\"title\"]');\n-            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n-\n-            titleInput.classList.remove(\"error\");\n-            descriptionTextarea.classList.remove(\"error\");\n-            clean_upload_errors();\n-\n-            let titleLength = titleInput.value.trim().length;\n-            let descriptionLength = descriptionTextarea.value.trim().length;\n-\n-            if (titleLength < 3) {\n-                write_upload_error(\"title must be of minimum length 3\");\n-                titleInput.classList.add(\"error\");\n-            }\n-\n-            if (descriptionLength < 3) {\n-                write_upload_error(\"description must be of minimum length 3\");\n-                descriptionTextarea.classList.add(\"error\");\n-            }\n-\n-            return (titleLength >= 3 && descriptionLength >= 3);\n-        }\n-\n-\n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n-\n-        document.addEventListener('click', function (event) {\n-            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n-\n-                let authorsButtonId = event.target.id;\n-                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n-                let authors = document.getElementById(authorsId);\n-                let id = authorsId.replace(\"_form_authors\", \"\")\n-                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n-                authors.appendChild(newAuthor);\n-\n-            }\n-        });\n-\n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n-\n-        function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n-            document.getElementById(\"loading\").style.display = \"none\";\n-        }\n-\n-        function clean_upload_errors() {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            upload_error.innerHTML = \"\";\n-            upload_error.style.display = 'none';\n-        }\n-\n-        function write_upload_error(error_message) {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            let alert = document.createElement('p');\n-            alert.style.margin = '0';\n-            alert.style.padding = '0';\n-            alert.textContent = 'Upload error: ' + error_message;\n-            upload_error.appendChild(alert);\n-            upload_error.style.display = 'block';\n-        }\n-\n-        window.onload = function () {\n-\n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n-\n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n-\n-        function downloadDataset(datasetId, format) {\n-            const url = `/dataset/download/${datasetId}/${format}`;\n-            window.location.href = url;\n-        }\n+    function downloadDataset(datasetId, format) {\n+        const url = `/dataset/download/${datasetId}/${format}`;\n+        window.location.href = url;\n+    }\n         \n         \n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "1e8e5e183883f7f76e3f7d92eca59fb5516cf739",
    "node_id": "C_kwDONDG85doAKDFlOGU1ZTE4Mzg4M2Y3Zjc2ZTNmN2Q5MmVjYTU5ZmI1NTE2Y2Y3Mzk",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T16:47:49Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T16:47:49Z"
      },
      "message": "feat(fakenodo): randomised doi generation to evade conflicts",
      "tree": {
        "sha": "183c6be96ab7e06563b0b4c10a089092826b1673",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/183c6be96ab7e06563b0b4c10a089092826b1673"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/1e8e5e183883f7f76e3f7d92eca59fb5516cf739",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/1e8e5e183883f7f76e3f7d92eca59fb5516cf739",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/1e8e5e183883f7f76e3f7d92eca59fb5516cf739",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/1e8e5e183883f7f76e3f7d92eca59fb5516cf739/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "75388f99dfe4a68e93c0822798e8cea022212ac0",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/75388f99dfe4a68e93c0822798e8cea022212ac0",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/75388f99dfe4a68e93c0822798e8cea022212ac0"
      }
    ],
    "files": [
      {
        "sha": "9792be9468ae3f990042133d2afbb4fda5bd3877",
        "filename": "fakenodo/app/services.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/1e8e5e183883f7f76e3f7d92eca59fb5516cf739/fakenodo%2Fapp%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/1e8e5e183883f7f76e3f7d92eca59fb5516cf739/fakenodo%2Fapp%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fservices.py?ref=1e8e5e183883f7f76e3f7d92eca59fb5516cf739",
        "patch": "@@ -1,6 +1,6 @@\n import hashlib\n import logging\n-\n+from random import randint\n from typing import List\n from fakenodo.app.models import Deposition, File\n from dotenv import load_dotenv\n@@ -62,7 +62,7 @@ def get_doi(self, deposition_id: int) -> str:\n         return self.get_deposition(deposition_id).doi\n \n     def generate_doi_id():\n-        identifier = 10000\n+        identifier = randint(10000,1000000)\n         while True:\n             yield identifier\n             identifier+=1"
      }
    ]
  },
  {
    "sha": "e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
    "node_id": "C_kwDONDG85doAKGUzZjkzYjJhM2NiNTMzYzEwMDdmN2IxMjRiYmIxZWFjYTI1NDM4ZTQ",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "91947377+Javiruizg@users.noreply.github.com",
        "date": "2024-12-15T15:25:46Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-15T15:25:46Z"
      },
      "message": "Merge branch 'develop' into feature-sync-with-github",
      "tree": {
        "sha": "1c8914156a83b124e40aa387ce9c2258f7b30385",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/1c8914156a83b124e40aa387ce9c2258f7b30385"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnXvT6CRC1aQ7uu5UhlAAAyRsQAKSykPUiCwxy9FLknjz5Ns9H\nS7hMFsXsAjrtehdZN8kzylIUzn5RUrfLX1c0cZGEUuliyabvixDX1Aptv0dgzvjh\nOFvfLhPxzzcoW4GEMFw8cvUj6bxDVMC7u3JNYyIMyGwNiG46ctdRVLkUMBm52sx+\nx/oO2WAJeMSr6XZDL/P9Kh6qz9QMoCCk7v4tnbrUSP9e7W1VPF1JQCayCmTFxShj\ncBbUIAlBA4VVJCmJVwKPvnuCVwndsLQoK1ZYdbyedU95t/F2WXAOUYf8xFcpkUto\n7tzc4EC9w8EZcZ1u8Xqg5BMbAG2VFpHTO3VfcNChqg2kS1NftmlZmaeCndPlQSR2\n5Y5GKWwWgHPoNFFTRN7TzcHlT/Dg35pLmmt4JzvMLe3GymXUERMslpd6wfZ70Pfx\n4k2wzr6wbyFusvMoh369bZNMKCeN0GVpkg3yTH8P3BPJ8DgbSCPVKj82XUfUjVIw\nkqyCpiaHMD5PCEDTs9JnaDMEEZhvjwcEugr34XdJFNhtJCqf1V/r2wcAoaNq6qsn\n2hmwF/CncYNBI4c7Pf8GNz3B9TYERpWWalUu0BEN26n9Ic0SPC635TvU/OM6dXZv\ncjVgbmqyqX8BBqlbNEpMCthzxEwMepJa5uDS8eoWjJ98TsORl7HOwrag30kvObfy\n8tEiIMkifyJvAMWB6QMC\n=Ldba\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 1c8914156a83b124e40aa387ce9c2258f7b30385\nparent c8137d2a1e6a0f941e67cdadd7b3e41ba69c29ef\nparent 275789936b5f3be522fdcc4489b66e8abe8aa0da\nauthor Javiruizg <91947377+Javiruizg@users.noreply.github.com> 1734276346 +0100\ncommitter GitHub <noreply@github.com> 1734276346 +0100\n\nMerge branch 'develop' into feature-sync-with-github",
        "verified_at": "2024-12-15T15:25:50Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8137d2a1e6a0f941e67cdadd7b3e41ba69c29ef",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c8137d2a1e6a0f941e67cdadd7b3e41ba69c29ef",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c8137d2a1e6a0f941e67cdadd7b3e41ba69c29ef"
      },
      {
        "sha": "275789936b5f3be522fdcc4489b66e8abe8aa0da",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/275789936b5f3be522fdcc4489b66e8abe8aa0da",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/275789936b5f3be522fdcc4489b66e8abe8aa0da"
      }
    ],
    "files": [
      {
        "sha": "3a4460bd0a2880b2fee2b1af57cf067bd57495e0",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 12,
        "deletions": 13,
        "changes": 25,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,20 +1,19 @@\n name: Commit Message Check\n \n-on: [push]\n+on: \n+  pull_request:\n+    branches: [develop]\n+    types: [opened, reopened, edited, review_requested, synchronize]\n+  push:\n+    branches:\n+      - \"main\"\n+      - \"develop\"\n+  workflow_call:\n \n jobs:\n   commit-check:\n+    name: Conventional Commits\n     runs-on: ubuntu-latest\n     steps:\n-      - name: Checkout code\n-        uses: actions/checkout@v1\n-        with:\n-          fetch-depth: 0\n-\n-      - name: Install dependencies\n-        run: npm install @commitlint/config-conventional @commitlint/cli husky\n-\n-      - name: Run CommitLint\n-        run: npx commitlint --from=HEAD~1 --to=HEAD --config @commitlint/config-conventional\n-        env:\n-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      - uses: actions/checkout@v2\n+      - uses: webiny/action-conventional-commits@v1.0.3"
      },
      {
        "sha": "5da736f7ffdcb35e11a740078b764998001a201b",
        "filename": ".github/workflows/render_main.yml",
        "status": "added",
        "additions": 70,
        "deletions": 0,
        "changes": 70,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/.github%2Fworkflows%2Frender_main.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/.github%2Fworkflows%2Frender_main.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender_main.yml?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,70 @@\n+name: Deploy main branch to Render\n+\n+on:\n+    push:\n+      branches:\n+        - main\n+    pull_request:\n+      branches:\n+        - main\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_RENDER }}\n+          ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+          GH_TOKEN: ${{ secrets.GH_TOKEN }}\n+          GH_PAT: ${{ secrets.GH_PAT }}\n+        run: |\n+          curl \"$deploy_url\"\n+      "
      },
      {
        "sha": "c2f01a0ae80ec18e56cb1fc86e13b5ec720d1347",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -47,5 +47,6 @@ jobs:\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n         ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+        WORKING_DIR: \"\"\n       run: |\n         pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      },
      {
        "sha": "b0431891f8f32b950472e8d4adf47ba6b271e288",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitignore?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,7 +1,6 @@\n .env\n __pycache__/\n .idea\n-uploads/\n app.log\n .DS_Store\n rosemary.egg-info/"
      },
      {
        "sha": "fdd63b05e87cb4c63240ad04afb83e89340a1d1c",
        "filename": "app/__init__.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2F__init__.py?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -67,4 +67,4 @@ def inject_vars_into_jinja():\n     return app\n \n \n-app = create_app()\n+app = create_app()\n\\ No newline at end of file"
      },
      {
        "sha": "e9ebaefb7b58ae220dcdaedf018126e58f6149b8",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 113,
        "deletions": 1,
        "changes": 114,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -139,6 +139,119 @@ var currentId = 0;\n \n         window.onload = function () {\n \n+            test_zenodo_connection();\n+\n+            document.getElementById('upload_button').addEventListener('click', function () {\n+\n+                clean_upload_errors();\n+                show_loading();\n+\n+                // check title and description\n+                let check = check_title_and_description();\n+\n+                if (check) {\n+                    // process data form\n+                    const formData = {};\n+\n+                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                        const form = document.getElementById(formId);\n+                        const inputs = form.querySelectorAll('input, select, textarea');\n+                        inputs.forEach(input => {\n+                            if (input.name) {\n+                                formData[input.name] = formData[input.name] || [];\n+                                formData[input.name].push(input.value);\n+                            }\n+                        });\n+                    });\n+\n+                    let formDataJson = JSON.stringify(formData);\n+                    console.log(formDataJson);\n+\n+                    const csrfToken = document.getElementById('csrf_token').value;\n+                    const formUploadData = new FormData();\n+                    formUploadData.append('csrf_token', csrfToken);\n+\n+                    for (let key in formData) {\n+                        if (formData.hasOwnProperty(key)) {\n+                            formUploadData.set(key, formData[key]);\n+                        }\n+                    }\n+\n+                    let checked_orcid = true;\n+                    if (Array.isArray(formData.author_orcid)) {\n+                        for (let orcid of formData.author_orcid) {\n+                            orcid = orcid.trim();\n+                            if (orcid !== '' && !isValidOrcid(orcid)) {\n+                                hide_loading();\n+                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                                checked_orcid = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    let checked_name = true;\n+                    if (Array.isArray(formData.author_name)) {\n+                        for (let name of formData.author_name) {\n+                            name = name.trim();\n+                            if (name === '') {\n+                                hide_loading();\n+                                write_upload_error(\"The author's name cannot be empty\");\n+                                checked_name = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    if (checked_orcid && checked_name) {\n+                        fetch('/dataset/upload', {\n+                            method: 'POST',\n+                            body: formUploadData\n+                        })\n+                            .then(response => {\n+                                if (response.ok) {\n+                                    console.log('Dataset sent successfully');\n+                                    response.json().then(data => {\n+                                        console.log(data.message);\n+                                        window.location.href = \"/dataset/list\";\n+                                    });\n+                                } else {\n+                                    response.json().then(data => {\n+                                        console.error('Error: ' + data.message);\n+                                        hide_loading();\n+\n+                                        write_upload_error(data.message);\n+\n+                                    });\n+                                }\n+                            })\n+                            .catch(error => {\n+                                console.error('Error in POST request:', error);\n+                            });\n+                    }\n+\n+\n+                } else {\n+                    hide_loading();\n+                }\n+\n+\n+            });\n+        };\n+\n+\n+        function isValidOrcid(orcid) {\n+            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+            return orcidRegex.test(orcid);\n+        }\n+\n+        function downloadDataset(datasetId, format) {\n+            const url = `/dataset/download/${datasetId}/${format}`;\n+            window.location.href = url;\n+        }\n+        \n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n@@ -275,7 +388,6 @@ var currentId = 0;\n \n \t\t\t});\n \t\t}\n-\t};\n \n \n function isValidOrcid(orcid) {"
      },
      {
        "sha": "a6a251eeb11690091da84b66796c075f41bfb048",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 25,
        "deletions": 59,
        "changes": 84,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -7,24 +7,12 @@\n import uuid\n from datetime import datetime, timezone\n from zipfile import ZipFile\n-\n-from flask import (\n-    redirect,\n-    render_template,\n-    request,\n-    jsonify,\n-    send_from_directory,\n-    make_response,\n-    abort,\n-    url_for,\n-)\n+from flask import jsonify, redirect, url_for, render_template, request, send_from_directory, make_response, abort\n from flask_login import login_required, current_user\n import requests\n from app.modules.dataset.repositories import DSMetaDataRepository\n from app.modules.dataset.forms import DataSetForm\n-from app.modules.dataset.models import (\n-    DSDownloadRecord\n-)\n+from app.modules.dataset.models import DSDownloadRecord\n from app.modules.dataset import dataset_bp\n from app.modules.dataset.repositories import DataSetRepository\n from app.modules.dataset.services import (\n@@ -42,21 +30,18 @@\n \n logger = logging.getLogger(__name__)\n \n-\n dataset_service = DataSetService()\n author_service = AuthorService()\n dsmetadata_service = DSMetaDataService()\n zenodo_service = ZenodoService()\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n \n-\n @dataset_bp.route(\"/dataset/upload\", methods=[\"GET\", \"POST\"])\n @login_required\n def create_dataset():\n     form = DataSetForm()\n     if request.method == \"POST\":\n-\n         dataset = None\n \n         if not form.validate_on_submit():\n@@ -68,8 +53,8 @@ def create_dataset():\n             logger.info(f\"Created dataset: {dataset}\")\n             dataset_service.move_feature_models(dataset)\n         except Exception as exc:\n-            logger.exception(f\"Exception while create dataset data in local {exc}\")\n-            return jsonify({\"Exception while create dataset data in local: \": str(exc)}), 400\n+            logger.exception(f\"Exception while creating dataset data in local {exc}\")\n+            return jsonify({\"Exception while creating dataset data in local\": str(exc)}), 400\n \n         # send dataset as deposition to Zenodo\n         data = {}\n@@ -80,30 +65,22 @@ def create_dataset():\n         except Exception as exc:\n             data = {}\n             zenodo_response_json = {}\n-            logger.exception(f\"Exception while create dataset data in Zenodo {exc}\")\n+            logger.exception(f\"Exception while creating dataset data in Zenodo {exc}\")\n \n         if data.get(\"conceptrecid\"):\n             deposition_id = data.get(\"id\")\n-\n-            # update dataset with deposition id in Zenodo\n             dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n \n             try:\n-                # iterate for each feature model (one feature model = one request to Zenodo)\n                 for feature_model in dataset.feature_models:\n                     zenodo_service.upload_file(dataset, deposition_id, feature_model)\n-\n-                # publish deposition\n                 zenodo_service.publish_deposition(deposition_id)\n-\n-                # update DOI\n                 deposition_doi = zenodo_service.get_doi(deposition_id)\n                 dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n             except Exception as e:\n-                msg = f\"it has not been possible upload feature models in Zenodo and update the DOI: {e}\"\n+                msg = f\"it has not been possible to upload feature models in Zenodo and update the DOI: {e}\"\n                 return jsonify({\"message\": msg}), 200\n \n-        # Delete temp folder\n         file_path = current_user.temp_folder()\n         if os.path.exists(file_path) and os.path.isdir(file_path):\n             shutil.rmtree(file_path)\n@@ -113,7 +90,6 @@ def create_dataset():\n \n     return render_template(\"dataset/upload_dataset.html\", form=form)\n \n-\n @dataset_bp.route(\"/dataset/list\", methods=[\"GET\", \"POST\"])\n @login_required\n def list_dataset():\n@@ -150,9 +126,6 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-\n-\n-\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -162,14 +135,12 @@ def upload():\n     if not file or not file.filename.endswith(\".uvl\"):\n         return jsonify({\"message\": \"No valid file\"}), 400\n \n-    # create temp folder\n     if not os.path.exists(temp_folder):\n         os.makedirs(temp_folder)\n \n     file_path = os.path.join(temp_folder, file.filename)\n \n     if os.path.exists(file_path):\n-        # Generate unique filename (by recursion)\n         base_name, extension = os.path.splitext(file.filename)\n         i = 1\n         while os.path.exists(\n@@ -196,8 +167,6 @@ def upload():\n         200,\n     )\n \n-\n-\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()\n@@ -211,23 +180,18 @@ def delete():\n \n     return jsonify({\"error\": \"Error: File not found\"})\n \n-\n @dataset_bp.route(\"/dataset/download/<int:dataset_id>\", methods=[\"GET\"])\n def download_dataset(dataset_id):\n     dataset = dataset_service.get_or_404(dataset_id)\n-\n     file_path = f\"uploads/user_{dataset.user_id}/dataset_{dataset.id}/\"\n-\n     temp_dir = tempfile.mkdtemp()\n     zip_path = os.path.join(temp_dir, f\"dataset_{dataset_id}.zip\")\n \n     with ZipFile(zip_path, \"w\") as zipf:\n         for subdir, dirs, files in os.walk(file_path):\n             for file in files:\n                 full_path = os.path.join(subdir, file)\n-\n                 relative_path = os.path.relpath(full_path, file_path)\n-\n                 zipf.write(\n                     full_path,\n                     arcname=os.path.join(\n@@ -237,10 +201,7 @@ def download_dataset(dataset_id):\n \n     user_cookie = request.cookies.get(\"download_cookie\")\n     if not user_cookie:\n-        user_cookie = str(\n-            uuid.uuid4()\n-        )  # Generate a new unique identifier if it does not exist\n-        # Save the cookie to the user's browser\n+        user_cookie = str(uuid.uuid4())\n         resp = make_response(\n             send_from_directory(\n                 temp_dir,\n@@ -258,15 +219,13 @@ def download_dataset(dataset_id):\n             mimetype=\"application/zip\",\n         )\n \n-    # Check if the download record already exists for this cookie\n     existing_record = DSDownloadRecord.query.filter_by(\n         user_id=current_user.id if current_user.is_authenticated else None,\n         dataset_id=dataset_id,\n         download_cookie=user_cookie\n     ).first()\n \n     if not existing_record:\n-        # Record the download in your database\n         DSDownloadRecordService().create(\n             user_id=current_user.id if current_user.is_authenticated else None,\n             dataset_id=dataset_id,\n@@ -276,26 +235,19 @@ def download_dataset(dataset_id):\n \n     return resp\n \n-\n @dataset_bp.route(\"/doi/<path:doi>/\", methods=[\"GET\"])\n def subdomain_index(doi):\n-\n-    # Check if the DOI is an old DOI\n     new_doi = doi_mapping_service.get_new_doi(doi)\n     if new_doi:\n-        # Redirect to the same path with the new DOI\n         return redirect(url_for('dataset.subdomain_index', doi=new_doi), code=302)\n \n-    # Try to search the dataset by the provided DOI (which should already be the new one)\n     ds_meta_data = dsmetadata_service.filter_by_doi(doi)\n \n     if not ds_meta_data:\n         abort(404)\n \n-    # Get dataset\n     dataset = ds_meta_data.data_set\n-\n-\n+    \n     # Export DataSet to BibTex\n     \n     bibtex_propiedades = {\n@@ -322,12 +274,9 @@ def subdomain_index(doi):\n \n     return resp\n \n-\n @dataset_bp.route(\"/dataset/unsynchronized/<int:dataset_id>/\", methods=[\"GET\"])\n @login_required\n def get_unsynchronized_dataset(dataset_id):\n-\n-    # Get dataset\n     dataset = dataset_service.get_unsynchronized_dataset(current_user.id, dataset_id)\n \n     if not dataset:\n@@ -444,3 +393,20 @@ def commit_file(file_id):\n     except subprocess.CalledProcessError as e:\n         return f\"This model is already in your github repository.\"\n \n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+\n+@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(file_id, format):\n+    \"\"\"Endpoint to download dataset in the specified format.\n+    Formats supported: glencoe, splot, dimacs, zip.\n+    \"\"\"\n+    if format == \"glencoe\":\n+        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n+    elif format == \"splot\":\n+        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n+    elif format == \"dimacs\":\n+        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n+    elif format == \"zip\":\n+        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n+    else:\n+        return jsonify({\"error\": \"Formato no soportado\"}), 400"
      },
      {
        "sha": "ef40cc6e3f7bdfc6d7a7bae844294277c4952f62",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -41,6 +41,35 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n+                <div class=\"mt-2\">\n+                    <div class=\"btn-group\" role=\"group\">\n+                        <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n+                            <i data-feather=\"download\"></i> Download\n+                        </button>\n+                        <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                    Glencoe\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                    DIMACS\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                    SPLOT\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n+                                    ZIP\n+                                </a>\n+                            </li>\n+                        </ul>\n+                    </div>\n+                </div>\n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">"
      },
      {
        "sha": "7fcee88cff634a5c5758ca28e81b4f9d89ad904b",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 32,
        "deletions": 3,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,15 +1,18 @@\n+\n import random\n-from locust import HttpUser, TaskSet, task\n+from locust import HttpUser, TaskSet, task, between\n from core.locust.common import get_csrf_token\n from core.environment.host import get_host_for_locust_testing\n \n \n class DatasetBehavior(TaskSet):\n     def on_start(self):\n-        self.dataset()\n+        \"\"\"Acci\u00f3n que se ejecuta al inicio del test.\"\"\"\n+        self.dataset_upload()\n \n     @task\n-    def dataset(self):\n+    def dataset_upload(self):\n+        \"\"\"Simula la carga de la p\u00e1gina de subida de datasets.\"\"\"\n         response = self.client.get(\"/dataset/upload\")\n         get_csrf_token(response)\n         \n@@ -87,9 +90,35 @@ def commit_dataset(self):\n             print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n \n \n+    @task(4)\n+    def download_dataset_glencoe(self):\n+        \"\"\"Simula la descarga del dataset en formato Glencoe.\"\"\"\n+        dataset_id = 4  # Ajusta el ID del dataset si es necesario\n+        self.client.get(f\"/dataset/download/{dataset_id}/glencoe\", name=\"/dataset/download/glencoe\")\n+\n+    @task(3)\n+    def download_dataset_splot(self):\n+        \"\"\"Simula la descarga del dataset en formato SPLOT.\"\"\"\n+        dataset_id = 4\n+        self.client.get(f\"/dataset/download/{dataset_id}/splot\", name=\"/dataset/download/splot\")\n+\n+    @task(2)\n+    def download_dataset_dimacs(self):\n+        \"\"\"Simula la descarga del dataset en formato DIMACS.\"\"\"\n+        dataset_id = 4\n+        self.client.get(f\"/dataset/download/{dataset_id}/dimacs\", name=\"/dataset/download/dimacs\")\n+\n+    @task(1)\n+    def download_dataset_zip(self):\n+        \"\"\"Simula la descarga del dataset en formato ZIP.\"\"\"\n+        dataset_id = 4\n+        self.client.get(f\"/dataset/download/{dataset_id}/zip\", name=\"/dataset/download/zip\")\n+\n \n class DatasetUser(HttpUser):\n+      \"\"\"Clase principal que define los usuarios y su comportamiento.\"\"\"\n     tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior]\n     min_wait = 5000\n     max_wait = 9000\n+    wait_time = between(5, 9)  # Espera entre 5 y 9 segundos entre tareas\n     host = get_host_for_locust_testing()"
      },
      {
        "sha": "55f03b59bd79356d9177918018f72f77bbb6f8b8",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "added",
        "additions": 90,
        "deletions": 0,
        "changes": 90,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,90 @@\n+import os\n+import time\n+import glob\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.action_chains import ActionChains\n+from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.webdriver.chrome.options import Options\n+from selenium import webdriver\n+from core.selenium.common import close_driver\n+from core.environment.host import get_host_for_selenium_testing\n+\n+DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n+\n+def initialize_driver(download_dir=None):\n+    options = Options()\n+    if download_dir:\n+        prefs = {\n+            \"download.default_directory\": download_dir,\n+            \"download.prompt_for_download\": False,\n+            \"directory_upgrade\": True\n+        }\n+        options.add_experimental_option(\"prefs\", prefs)\n+    driver = webdriver.Chrome(options=options)\n+    return driver\n+\n+def clean_download_folder():\n+    \"\"\"Elimina todos los archivos previos en la carpeta de descargas.\"\"\"\n+    if os.path.exists(DOWNLOAD_DIR):\n+        for file in os.listdir(DOWNLOAD_DIR):\n+            file_path = os.path.join(DOWNLOAD_DIR, file)\n+            os.remove(file_path)\n+\n+def is_file_downloaded_by_extension(extension, timeout=10):\n+    \"\"\"Verifica si un archivo con una extensi\u00f3n espec\u00edfica ha sido descargado.\"\"\"\n+    for _ in range(timeout):\n+        files = glob.glob(os.path.join(DOWNLOAD_DIR, f\"*.{extension}\"))\n+        if files:\n+            return True\n+        time.sleep(1)\n+    return False\n+\n+def test_download_datasets():\n+    \"\"\"Prueba la descarga de datasets en diferentes formatos.\"\"\"\n+    driver = initialize_driver(download_dir=DOWNLOAD_DIR)\n+    clean_download_folder()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+        driver.get(f\"{host}/\")\n+        WebDriverWait(driver, 10).until(\n+            lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+        )\n+\n+        # Lista de formatos y extensiones esperadas\n+        formats = {\n+            \"Glencoe\": \"txt\",\n+            \"SPLOT\": \"txt\",\n+            \"DIMACS\": \"txt\",\n+            \"ZIP\": \"zip\"\n+        }\n+\n+        for format_name, file_extension in formats.items():\n+            # Hacer clic en el bot\u00f3n \"Download\"\n+            download_button = WebDriverWait(driver, 10).until(\n+                EC.element_to_be_clickable((By.XPATH, \"//button[contains(@id, 'btnDownloadDropdown')]\"))\n+            )\n+            ActionChains(driver).move_to_element(download_button).click().perform()\n+\n+            # Seleccionar el formato del desplegable\n+            dropdown_option = WebDriverWait(driver, 10).until(\n+                EC.element_to_be_clickable((By.XPATH, f\"//a[contains(@onclick, \\\"{format_name.lower()}\\\")]\"))\n+            )\n+            dropdown_option.click()\n+\n+            # Verificar que el archivo se ha descargado por su extensi\u00f3n\n+            print(f\"Esperando la descarga del archivo con extensi\u00f3n .{file_extension}...\")\n+            assert is_file_downloaded_by_extension(file_extension), f\"El archivo con extensi\u00f3n .{file_extension} no se descarg\u00f3 correctamente.\"\n+            print(f\"El archivo con extensi\u00f3n .{file_extension} se descarg\u00f3 correctamente.\")\n+\n+            time.sleep(2)  # Espera breve antes de continuar\n+\n+        print(\"Todos los archivos se descargaron correctamente. Test completado con \u00e9xito.\")\n+\n+    finally:\n+        close_driver(driver)  # Cerrar el navegador al finalizar el test\n+\n+# Ejecutar el test\n+if __name__ == \"__main__\":\n+    test_download_datasets()\n\\ No newline at end of file"
      },
      {
        "sha": "d316841d1aca77398773dbb07abb7cbd5dd4e3dc",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,58 @@\n+import pytest\n+from flask import url_for\n+from app.modules.dataset.routes import download_dataset_format\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client(test_client):\n+    \"\"\"\n+    Extiende la fixture test_client para el m\u00f3dulo dataset.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_download_glencoe_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato Glencoe.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/glencoe\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+\n+\n+def test_download_splot_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato SPLOT.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/splot\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+\n+\n+def test_download_dimacs_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato DIMACS.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/dimacs\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+\n+\n+def test_download_zip_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato ZIP.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/zip\")\n+    assert response.status_code == 302\n+    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n+\n+def test_download_invalid_format(test_client):\n+    \"\"\"\n+    Testea que se retorne un error 400 para un formato no soportado.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n+    assert response.status_code == 400\n+    assert response.json == {\"error\": \"Formato no soportado\"}"
      },
      {
        "sha": "6f2edac23ceec557545bb8eaf134f3dcfa88d657",
        "filename": "app/modules/dataset/uvl_examples/file10.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tMessaging\t\n+\t\t\t\tor\n+\t\t\t\t\tSMS\n+\t\t\t\t\tMMS\n+\t\t\t\"Utility Features\"\t\n+\t\t\t\toptional\n+\t\t\t\t\tCalculator\n+\t\t\t\t\t\"Currency Exchange\"\n+\t\t\tOS\t\n+\t\t\t\talternative\n+\t\t\t\t\tSymbian\n+\t\t\t\t\tWinCE\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Currency Exchange\" => Calculator\n\\ No newline at end of file"
      },
      {
        "sha": "141cad170eaca409c3974334791706a0cc319f3b",
        "filename": "app/modules/dataset/uvl_examples/file11.uvl",
        "status": "modified",
        "additions": 25,
        "deletions": 17,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,19 +1,27 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tOnlineshop {abstract}\t\n+\t\tmandatory\n+\t\t\tPayment {abstract}\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Debit Card\"\n+\t\t\t\t\t\"Credit Card\"\n+\t\t\t\"Product Selection\" {abstract}\t\n+\t\t\t\tmandatory\n+\t\t\t\t\tCatalog\t\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tCategories\n+\t\t\t\t\t\t\tSort\n+\t\t\t\toptional\n+\t\t\t\t\tSearch\n+\t\toptional\n+\t\t\tUserManagement {abstract}\t\n+\t\t\t\tor\n+\t\t\t\t\tOrders\n+\t\t\t\t\tSecurity\n+\t\t\t\t\tPayments\n+\t\t\t\t\tWishlist\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSearch => Security\n+\tSecurity => !Payments\n+\tPayments => !Security\n+\tSort | Search\n\\ No newline at end of file"
      },
      {
        "sha": "117471c9d2dc5561b9562f672aec92d9af73450d",
        "filename": "app/modules/dataset/uvl_examples/file12.uvl",
        "status": "modified",
        "additions": 22,
        "deletions": 18,
        "changes": 40,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,19 +1,23 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Movies_App\" \n+\t\tmandatory\n+\t\t\t\"GUI\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Thin\" \n+\t\t\t\t\t\"Rich\" \n+\t\tmandatory\n+\t\t\t\"DB\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Local\" \n+\t\t\t\t\t\"Remote\" \n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\t\"Cache_Policy\" \n+\t\tmandatory\n+\t\t\t\"Network\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Wifi\" \n+\t\t\t\t\t\"Bluetooth\" \n+\t\toptional\n+\t\t\t\"GPS\" \n+\t\t\t\toptional\n+\t\t\t\t\t\"Built-In\" \n\\ No newline at end of file"
      },
      {
        "sha": "924a2f013c74f6bbea7f911b884dd9fd94e26f8b",
        "filename": "app/modules/dataset/uvl_examples/file2.uvl",
        "status": "modified",
        "additions": 19,
        "deletions": 18,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,19 +1,20 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40"
      },
      {
        "sha": "9e14cb807f57d510839a4d68aff29e690523ac78",
        "filename": "app/modules/dataset/uvl_examples/file3.uvl",
        "status": "modified",
        "additions": 17,
        "deletions": 18,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,19 +1,18 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "ad06cc4f7e038d2e2ab96ed02ae7ae1c2ef24dd0",
        "filename": "app/modules/dataset/uvl_examples/file4.uvl",
        "status": "modified",
        "additions": 20,
        "deletions": 17,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,19 +1,22 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tsmartwatch {abstract true}\n+\t\tmandatory\n+\t\t\tscreen\n+\t\t\t\talternative\n+\t\t\t\t\ttouch\n+\t\t\t\t\tstandard\n+\t\t\t\"energy management\"\n+\t\t\t\talternative\n+\t\t\t\t\tbasic\n+\t\t\t\t\t\"advanced solar\"\n+\t\toptional\n+\t\t\tpayment\n+\t\t\tgps\n+\t\t\t\"sports tracking\"\n+\t\t\t\tor\n+\t\t\t\t\trunning\n+\t\t\t\t\tskiing\n+\t\t\t\t\thiking\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t!(payment & standard)\n+\t\"sports tracking\" => gps"
      },
      {
        "sha": "2ed3f8f650ad498e4e3ca0220d63dc841fc39db0",
        "filename": "app/modules/dataset/uvl_examples/file5.uvl",
        "status": "modified",
        "additions": 33,
        "deletions": 18,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,19 +1,34 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "9234e685c686a0589a2f477bfc0f83156e104c5d",
        "filename": "app/modules/dataset/uvl_examples/file6.uvl",
        "status": "modified",
        "additions": 40,
        "deletions": 16,
        "changes": 56,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,19 +1,43 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\toptional\n+\t\t\t\t\tTouchScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\t\toptional\n+\t\t\t\t\tContactlessPayment\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n+\t\t\t\toptional\n+\t\t\t\t\tNFC\n \n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tContactlessPayment => NFC"
      },
      {
        "sha": "3d881f9b14f76d1a693988f487862607e513ce69",
        "filename": "app/modules/dataset/uvl_examples/file7.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tGSM_Protocol_1900\n+\t\t\tMP3_Recording\n+\t\t\tCamera_Resolution\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"2_1MP\"\n+\t\t\t\t\t\"5 MP\"\n+\t\t\t\t\t\"3_1MP\"\n+\t\t\tCamera\n+\t\t\tAudio_Formats\t\n+\t\t\t\tor\n+\t\t\t\t\tWAV\n+\t\t\t\t\tMP3\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tMP3_Recording => MP3\n\\ No newline at end of file"
      },
      {
        "sha": "10dddc5e29b5fc9da5ba4b8692ecbf437448f719",
        "filename": "app/modules/dataset/uvl_examples/file8.uvl",
        "status": "modified",
        "additions": 36,
        "deletions": 18,
        "changes": 54,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -1,19 +1,37 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tSV_Solution\t\n+\t\t\t\talternative\n+\t\t\t\t\tBMD\n+\t\t\t\t\tBMDCRM\n+\t\t\tCV_Documents\t\n+\t\t\t\tor\n+\t\t\t\t\t\"scan new\"\n+\t\t\t\t\t\"import external\"\n+\t\t\t\t\tarchive\n+\t\t\t\t\t\"read existing\"\n+\t\t\tCV_Claims\t\n+\t\t\t\tor\n+\t\t\t\t\tjournal\n+\t\t\t\t\t\"task manager\"\n+\t\t\tSV\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Particular Packages\"\n+\t\t\t\t\tSolution\n+\t\t\tCV_Customer\t\n+\t\t\t\tor\n+\t\t\t\t\tmail\n+\t\t\t\t\tphone\n+\t\t\tCV\t\n+\t\t\t\tor\n+\t\t\t\t\t\"Document Management\"\n+\t\t\t\t\t\"Claims Management\"\n+\t\t\t\t\t\"Customer Management\"\n+\t\t\tSV_Particular_Package\t\n+\t\t\t\tor\n+\t\t\t\t\tOrganizer\n+\t\t\t\t\t\"Label Printing\"\n+\t\t\t\t\tElse\n+\t\t\t\t\tDocs\n+\t\t\t\t\t\"Standard Letter\"\n\\ No newline at end of file"
      },
      {
        "sha": "1609b0318fca78c64b66a9f332daf50d08bb7879",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 41,
        "deletions": 1,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -16,13 +16,31 @@ function send_query() {\n         filter.addEventListener('input', () => {\n             const csrfToken = document.getElementById('csrf_token').value;\n \n+            const minFiles = document.getElementById('min_files').value || null;\n+            const maxFiles = document.getElementById('max_files').value || null;\n+            const minAvBranchingFactor = document.getElementById('min_av_branching_factor').value || null;\n+            const maxAvBranchingFactor = document.getElementById('max_av_branching_factor').value || null;\n+            const minLeafCount = document.getElementById('min_leaf_count').value || null;\n+            const maxLeafCount = document.getElementById('max_leaf_count').value || null;\n+            const minDepth = document.getElementById('min_depth').value || null;\n+            const maxDepth = document.getElementById('max_depth').value || null;\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n                 publication_type: document.querySelector('#publication_type').value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n+                min_files: minFiles,\n+                max_files: maxFiles,\n+                min_av_branching_factor: minAvBranchingFactor,\n+                max_av_branching_factor: maxAvBranchingFactor,\n+                min_leaf_count: minLeafCount,\n+                max_leaf_count: maxLeafCount,\n+                min_depth: minDepth,\n+                max_depth: maxDepth,\n+                leaf_feature_name: document.querySelector('#leaf_feature_name').value,\n+                core_feature_name: document.querySelector('#core_feature_name').value\n             };\n-\n+            \n             console.log(document.querySelector('#publication_type').value);\n \n             fetch('/explore', {\n@@ -179,6 +197,28 @@ function clearFilters() {\n         // option.dispatchEvent(new Event('input', {bubbles: true}));\n     });\n \n+    let minFilesInput = document.querySelector('#min_files');\n+    let maxFilesInput = document.querySelector('#max_files');\n+    minFilesInput.value = \"\"; \n+    maxFilesInput.value = \"\"; \n+    let minAvBranchingFactor = document.querySelector('#min_av_branching_factor');\n+    let maxAvBranchingFactor = document.querySelector('#max_av_branching_factor');\n+    minAvBranchingFactor.value = \"\"; \n+    maxAvBranchingFactor.value = \"\"; \n+    let minLeafCount = document.querySelector('#min_leaf_count');\n+    let maxLeafCount = document.querySelector('#max_leaf_count');\n+    minLeafCount.value = \"\"; \n+    maxLeafCount.value = \"\"; \n+    let minDepth = document.querySelector('#min_depth');\n+    let maxDepth = document.querySelector('#max_depth');\n+    minDepth.value = \"\"; \n+    maxDepth.value = \"\"; \n+    let leafFeatureName = document.querySelector('#leaf_feature_name');\n+    leafFeatureName.value = \"\";\n+    let coreFeatureName = document.querySelector('#core_feature_name');\n+    coreFeatureName.value = \"\";\n+\n+\n     // Perform a new search with the reset filters\n     queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n }"
      },
      {
        "sha": "fa37bd56d033abe4b84370094d21a3850923875b",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 71,
        "deletions": 2,
        "changes": 73,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -10,12 +10,31 @@ class ExploreRepository(BaseRepository):\n     def __init__(self):\n         super().__init__(DataSet)\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None, max_av_branching_factor=None,\n+               leaf_feature_name=\"\", core_feature_name=\"\",\n+               **kwargs):\n         # Normalize and remove unwanted characters\n         normalized_query = unidecode.unidecode(query).lower()\n         cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n \n         filters = []\n+        min_files = int(min_files) if min_files is not None else None\n+        max_files = int(max_files) if max_files is not None else None\n+\n+        min_leaf_count = int(min_leaf_count) if min_leaf_count is not None else None\n+        max_leaf_count = int(max_leaf_count) if max_leaf_count is not None else None\n+\n+        min_depth = int(min_depth) if min_depth is not None else None\n+        max_depth = int(max_depth) if max_depth is not None else None\n+\n+        min_av_branching_factor = float(min_av_branching_factor) if min_av_branching_factor is not None else None\n+        max_av_branching_factor = float(max_av_branching_factor) if max_av_branching_factor is not None else None\n+\n         for word in cleaned_query.split():\n             filters.append(DSMetaData.title.ilike(f\"%{word}%\"))\n             filters.append(DSMetaData.description.ilike(f\"%{word}%\"))\n@@ -55,7 +74,57 @@ def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **\n         # Order by created_at\n         if sorting == \"oldest\":\n             datasets = datasets.order_by(self.model.created_at.asc())\n+        elif sorting == \"filesize_asc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=False)\n+        elif sorting == \"filesize_desc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=True)\n         else:\n             datasets = datasets.order_by(self.model.created_at.desc())\n \n-        return datasets.all()\n+        if min_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() >= min_files]\n+        if max_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() <= max_files]\n+\n+        filtered_datasets = []\n+\n+        for dataset in datasets:\n+            feature_models = dataset.feature_models  \n+            dataset_passes_filter = False  \n+\n+            for model in feature_models:\n+                stats = model.calculate_statistics()  \n+                leaf_count = stats[\"leaf_count\"]\n+                depth = stats[\"max_depth\"]\n+                branching_factor = stats[\"branching_factor\"]\n+\n+                # Aplicar filtros a las estad\u00edsticas del modelo\n+                if ((min_leaf_count is not None and leaf_count < min_leaf_count) or\n+                    (max_leaf_count is not None and leaf_count > max_leaf_count) or\n+                    (min_depth is not None and depth < min_depth) or\n+                    (max_depth is not None and depth > max_depth) or\n+                    (min_av_branching_factor is not None and branching_factor < min_av_branching_factor) or\n+                        (max_av_branching_factor is not None and branching_factor > max_av_branching_factor)):\n+                    continue\n+\n+                if leaf_feature_name:\n+                    leaf_feature_names = model.get_leaf_feature_names()\n+                    print(leaf_feature_name)\n+                    if leaf_feature_name not in leaf_feature_names:\n+                        continue\n+\n+                if core_feature_name:\n+                    core_feature_names = model.get_core_feature_names()\n+                    if core_feature_name not in core_feature_names:\n+                        continue\n+\n+                dataset_passes_filter = True\n+                print(\"dataset_passes_filter\")\n+                break\n+\n+            if dataset_passes_filter:\n+                filtered_datasets.append(dataset)  \n+\n+        return filtered_datasets"
      },
      {
        "sha": "ecbed8e137e0f7d447b1b710e823b81cf204c427",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -6,5 +6,16 @@ class ExploreService(BaseService):\n     def __init__(self):\n         super().__init__(ExploreRepository())\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n-        return self.repository.filter(query, sorting, publication_type, tags, **kwargs)\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None,\n+               max_av_branching_factor=None,\n+               leaf_feature_name=\"\",\n+               core_feature_name=\"\", **kwargs):\n+        return self.repository.filter(query, sorting, publication_type, tags, min_files, max_files,\n+                                      min_leaf_count, max_leaf_count, min_depth, max_depth,\n+                                      min_av_branching_factor, max_av_branching_factor, leaf_feature_name,\n+                                      core_feature_name, **kwargs)"
      },
      {
        "sha": "f062144cdd68583a147b585fa2fa2d66cd94fb46",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 88,
        "deletions": 4,
        "changes": 92,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -54,8 +54,7 @@ <h3 class=\"h3 mb-3\">\n                                        value=\"\" autofocus>\n                             </div>\n                         </div>\n-\n-                        <div class=\"col-lg-6\">\n+                        <div class=\"col-lg-12\">\n                             <div class=\"mb-3\">\n                                 <label class=\"form-label\" for=\"publication_type\">Filter by publication\n                                     type</label>\n@@ -83,7 +82,79 @@ <h3 class=\"h3 mb-3\">\n                                     <option value=\"other\">Other</option>\n                                 </select>\n                             </div>\n-\n+                        </div>\n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_files\">Min Files:</label>\n+                                    <input type=\"number\" id=\"min_files\" name=\"min_files\" class=\"form-control\" placeholder=\"Min Files\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_files\">Max Files:</label>\n+                                    <input type=\"number\" id=\"max_files\" name=\"max_files\" class=\"form-control\" placeholder=\"Max Files\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_leaf_count\">Min Leaf Count:</label>\n+                                    <input type=\"number\" id=\"min_leaf_count\" name=\"min_leaf_count\" class=\"form-control\" placeholder=\"Min Leaf Count\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_leaf_count\">Max Leaf Count:</label>\n+                                    <input type=\"number\" id=\"max_leaf_count\" name=\"max_leaf_count\" class=\"form-control\" placeholder=\"Max Leaf Count\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_depth\">Min Depth:</label>\n+                                    <input type=\"number\" id=\"min_depth\" name=\"min_depth\" class=\"form-control\" placeholder=\"Min Depth\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_depth\">Max Depth:</label>\n+                                    <input type=\"number\" id=\"max_depth\" name=\"max_depth\" class=\"form-control\" placeholder=\"Max Depth\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_av_branching_factor\">Min Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"min_av_branching_factor\" name=\"min_av_branching_factor\" class=\"form-control\" placeholder=\"Min Average Branching Factor\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_av_branching_factor\">Max Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"max_av_branching_factor\" name=\"max_av_branching_factor\" class=\"form-control\" placeholder=\"Max Average Branching Factor\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"leaf_feature_name\">Leaf Feature Name:</label>\n+                                <input type=\"text\" id=\"leaf_feature_name\" name=\"leaf_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter leaf feature name\">\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"core_feature_name\">Core Feature Name:</label>\n+                                <input type=\"text\" id=\"core_feature_name\" name=\"core_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter core feature name\">\n+                            </div>\n                         </div>\n \n                     </div>\n@@ -108,7 +179,20 @@ <h3 class=\"h3 mb-3\">\n                                     </span>\n                                 </label>\n                             </div>\n-\n+                            <div>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_asc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Smallest first\n+                                    </span>\n+                                </label>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_desc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Largest first\n+                                    </span>\n+                                </label>\n+                            </div>\n                         </div>\n \n                     </div>"
      },
      {
        "sha": "9ed55640f52bbfc44bf4d95f0b7cd378428fd9e5",
        "filename": "app/modules/featuremodel/models.py",
        "status": "modified",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Fmodels.py?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -2,6 +2,9 @@\n from sqlalchemy import Enum as SQLAlchemyEnum\n \n from app.modules.dataset.models import Author, PublicationType\n+from flamapy.metamodels.fm_metamodel.transformations import UVLReader\n+from flamapy.metamodels.fm_metamodel.operations import FMAverageBranchingFactor, FMCountLeafs\n+from flamapy.metamodels.fm_metamodel.operations import FMMaxDepthTree, FMLeafFeatures, FMCoreFeatures\n \n \n class FeatureModel(db.Model):\n@@ -14,6 +17,51 @@ class FeatureModel(db.Model):\n     def __repr__(self):\n         return f'FeatureModel<{self.id}>'\n \n+    def calculate_statistics(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        leaf_counter = FMCountLeafs()\n+        leaf_counter.execute(fm)\n+        leaf_count = leaf_counter.get_result()\n+\n+        depth_calculator = FMMaxDepthTree()\n+        depth_calculator.execute(fm)\n+        max_tree_depth = depth_calculator.get_result()\n+\n+        branching_factor_calculator = FMAverageBranchingFactor()\n+        branching_factor_calculator.execute(fm)\n+        average_branching_factor = branching_factor_calculator.get_result()\n+\n+        return {\n+            \"leaf_count\": leaf_count,\n+            \"max_depth\": max_tree_depth,\n+            \"branching_factor\": average_branching_factor\n+        }\n+\n+    def get_leaf_feature_names(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        leaf_features_operation = FMLeafFeatures()\n+        leaf_features_operation.execute(fm)\n+        leaf_features = leaf_features_operation.get_result()\n+\n+        return [feature.name for feature in leaf_features]\n+\n+    def get_core_feature_names(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        core_features_operation = FMCoreFeatures()\n+        core_features_operation.execute(fm)\n+        core_features = core_features_operation.get_result()\n+\n+        return [feature.name for feature in core_features]\n+\n \n class FMMetaData(db.Model):\n     id = db.Column(db.Integer, primary_key=True)"
      },
      {
        "sha": "9765d4aa769976cd87870704819c3cf0af65e9eb",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -91,12 +91,17 @@ <h2>\n                                     <i data-feather=\"eye\" class=\"center-button-icon\"></i>\n                                     View dataset\n                                 </a>\n-\n-                                <a href=\"/dataset/download/{{ dataset.id }}\" class=\"btn btn-outline-primary btn-sm\"\n-                                   style=\"border-radius: 5px;\">\n-                                    <i data-feather=\"download\" class=\"center-button-icon\"></i>\n-                                    Download ({{ dataset.get_file_total_size_for_human() }})\n-                                </a>\n+                                <div class=\"btn-group\" role=\"group\">\n+                                    <button id=\"btnDownloadDropdown_{{ dataset.id }}\" type=\"button\" class=\"btn btn-outline-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n+                                        <i data-feather=\"download\" class=\"center-button-icon\"></i> Download\n+                                    </button>\n+                                    <ul class=\"dropdown-menu\" aria-labelledby=\"btnDownloadDropdown_{{ dataset.id }}\">\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'glencoe')\">Glencoe</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'splot')\">SPLOT</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'dimacs')\">DIMACS</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'zip')\">ZIP</a></li>\n+                                    </ul>\n+                                </div>                                \n                             </div>\n                         </div>\n "
      },
      {
        "sha": "d337dad98b8d18e15de1bf67815af93f2d8216a0",
        "filename": "app/static/js/scripts.js",
        "status": "added",
        "additions": 246,
        "deletions": 0,
        "changes": 246,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fstatic%2Fjs%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Fstatic%2Fjs%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fscripts.js?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,246 @@\n+var currentId = 0;\n+        var amount_authors = 0;\n+\n+        function show_upload_dataset() {\n+            document.getElementById(\"upload_dataset\").style.display = \"block\";\n+        }\n+\n+        function generateIncrementalId() {\n+            return currentId++;\n+        }\n+\n+        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n+            let fieldWrapper = document.createElement('div');\n+            fieldWrapper.className = className;\n+\n+            let label = document.createElement('label');\n+            label.className = 'form-label';\n+            label.for = name;\n+            label.textContent = text;\n+\n+            let field = document.createElement('input');\n+            field.name = name;\n+            field.className = 'form-control';\n+\n+            fieldWrapper.appendChild(label);\n+            fieldWrapper.appendChild(field);\n+            newAuthor.appendChild(fieldWrapper);\n+        }\n+\n+        function addRemoveButton(newAuthor) {\n+            let buttonWrapper = document.createElement('div');\n+            buttonWrapper.className = 'col-12 mb-2';\n+\n+            let button = document.createElement('button');\n+            button.textContent = 'Remove author';\n+            button.className = 'btn btn-danger btn-sm';\n+            button.type = 'button';\n+            button.addEventListener('click', function (event) {\n+                event.preventDefault();\n+                newAuthor.remove();\n+            });\n+\n+            buttonWrapper.appendChild(button);\n+            newAuthor.appendChild(buttonWrapper);\n+        }\n+\n+        function createAuthorBlock(idx, suffix) {\n+            let newAuthor = document.createElement('div');\n+            newAuthor.className = 'author row';\n+            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n+\n+            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n+            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n+            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n+            addRemoveButton(newAuthor);\n+\n+            return newAuthor;\n+        }\n+\n+        function check_title_and_description() {\n+            let titleInput = document.querySelector('input[name=\"title\"]');\n+            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n+\n+            titleInput.classList.remove(\"error\");\n+            descriptionTextarea.classList.remove(\"error\");\n+            clean_upload_errors();\n+\n+            let titleLength = titleInput.value.trim().length;\n+            let descriptionLength = descriptionTextarea.value.trim().length;\n+\n+            if (titleLength < 3) {\n+                write_upload_error(\"title must be of minimum length 3\");\n+                titleInput.classList.add(\"error\");\n+            }\n+\n+            if (descriptionLength < 3) {\n+                write_upload_error(\"description must be of minimum length 3\");\n+                descriptionTextarea.classList.add(\"error\");\n+            }\n+\n+            return (titleLength >= 3 && descriptionLength >= 3);\n+        }\n+\n+\n+        document.getElementById('add_author').addEventListener('click', function () {\n+            let authors = document.getElementById('authors');\n+            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n+            authors.appendChild(newAuthor);\n+        });\n+\n+\n+        document.addEventListener('click', function (event) {\n+            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n+\n+                let authorsButtonId = event.target.id;\n+                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n+                let authors = document.getElementById(authorsId);\n+                let id = authorsId.replace(\"_form_authors\", \"\")\n+                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n+                authors.appendChild(newAuthor);\n+\n+            }\n+        });\n+\n+        function show_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"none\";\n+            document.getElementById(\"loading\").style.display = \"block\";\n+        }\n+\n+        function hide_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"block\";\n+            document.getElementById(\"loading\").style.display = \"none\";\n+        }\n+\n+        function clean_upload_errors() {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            upload_error.innerHTML = \"\";\n+            upload_error.style.display = 'none';\n+        }\n+\n+        function write_upload_error(error_message) {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            let alert = document.createElement('p');\n+            alert.style.margin = '0';\n+            alert.style.padding = '0';\n+            alert.textContent = 'Upload error: ' + error_message;\n+            upload_error.appendChild(alert);\n+            upload_error.style.display = 'block';\n+        }\n+\n+        window.onload = function () {\n+\n+            test_zenodo_connection();\n+\n+            document.getElementById('upload_button').addEventListener('click', function () {\n+\n+                clean_upload_errors();\n+                show_loading();\n+\n+                // check title and description\n+                let check = check_title_and_description();\n+\n+                if (check) {\n+                    // process data form\n+                    const formData = {};\n+\n+                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                        const form = document.getElementById(formId);\n+                        const inputs = form.querySelectorAll('input, select, textarea');\n+                        inputs.forEach(input => {\n+                            if (input.name) {\n+                                formData[input.name] = formData[input.name] || [];\n+                                formData[input.name].push(input.value);\n+                            }\n+                        });\n+                    });\n+\n+                    let formDataJson = JSON.stringify(formData);\n+                    console.log(formDataJson);\n+\n+                    const csrfToken = document.getElementById('csrf_token').value;\n+                    const formUploadData = new FormData();\n+                    formUploadData.append('csrf_token', csrfToken);\n+\n+                    for (let key in formData) {\n+                        if (formData.hasOwnProperty(key)) {\n+                            formUploadData.set(key, formData[key]);\n+                        }\n+                    }\n+\n+                    let checked_orcid = true;\n+                    if (Array.isArray(formData.author_orcid)) {\n+                        for (let orcid of formData.author_orcid) {\n+                            orcid = orcid.trim();\n+                            if (orcid !== '' && !isValidOrcid(orcid)) {\n+                                hide_loading();\n+                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                                checked_orcid = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    let checked_name = true;\n+                    if (Array.isArray(formData.author_name)) {\n+                        for (let name of formData.author_name) {\n+                            name = name.trim();\n+                            if (name === '') {\n+                                hide_loading();\n+                                write_upload_error(\"The author's name cannot be empty\");\n+                                checked_name = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    if (checked_orcid && checked_name) {\n+                        fetch('/dataset/upload', {\n+                            method: 'POST',\n+                            body: formUploadData\n+                        })\n+                            .then(response => {\n+                                if (response.ok) {\n+                                    console.log('Dataset sent successfully');\n+                                    response.json().then(data => {\n+                                        console.log(data.message);\n+                                        window.location.href = \"/dataset/list\";\n+                                    });\n+                                } else {\n+                                    response.json().then(data => {\n+                                        console.error('Error: ' + data.message);\n+                                        hide_loading();\n+\n+                                        write_upload_error(data.message);\n+\n+                                    });\n+                                }\n+                            })\n+                            .catch(error => {\n+                                console.error('Error in POST request:', error);\n+                            });\n+                    }\n+\n+\n+                } else {\n+                    hide_loading();\n+                }\n+\n+\n+            });\n+        };\n+\n+\n+        function isValidOrcid(orcid) {\n+            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+            return orcidRegex.test(orcid);\n+        }\n+\n+        function downloadDataset(datasetId, format) {\n+            const url = `/dataset/download/${datasetId}/${format}`;\n+            window.location.href = url;\n+        }\n+        \n+        \n\\ No newline at end of file"
      },
      {
        "sha": "9902e4c35331f624fe86a182c7bfdc3ce10a8310",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -33,6 +33,7 @@\n \n     <link rel=\"stylesheet\" href=\"{{ url_for(\"static\", filename=\"css/own.css\") }}\">\n \n+    <script src=\"{{ url_for('static', filename='js/scripts.js') }}\"></script>\n </head>\n \n <body>"
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file1.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file2.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file3.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file7.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file8.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file9.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file4.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file5.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file6.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file10.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file11.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file12.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e3f93b2a3cb533c1007f7b124bbb1eaca25438e4/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl?ref=e3f93b2a3cb533c1007f7b124bbb1eaca25438e4",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      }
    ]
  },
  {
    "sha": "c8137d2a1e6a0f941e67cdadd7b3e41ba69c29ef",
    "node_id": "C_kwDONDG85doAKGM4MTM3ZDJhMWU2YTBmOTQxZTY3Y2RhZGQ3YjNlNDFiYTY5YzI5ZWY",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-15T15:14:58Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-15T15:14:58Z"
      },
      "message": "fix(workflow): removed lint.yml",
      "tree": {
        "sha": "cf78ad12e3b376f1d16decda84969949d7c1b404",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/cf78ad12e3b376f1d16decda84969949d7c1b404"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/c8137d2a1e6a0f941e67cdadd7b3e41ba69c29ef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c8137d2a1e6a0f941e67cdadd7b3e41ba69c29ef",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c8137d2a1e6a0f941e67cdadd7b3e41ba69c29ef",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c8137d2a1e6a0f941e67cdadd7b3e41ba69c29ef/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4709eb6cceb7231ae2f5082109a817787070ea4c",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4709eb6cceb7231ae2f5082109a817787070ea4c",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/4709eb6cceb7231ae2f5082109a817787070ea4c"
      }
    ],
    "files": [
      {
        "sha": "ccbd3311ba585fae0de19dc7a96de461fce8de9c",
        "filename": ".github/workflows/lint.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/4709eb6cceb7231ae2f5082109a817787070ea4c/.github%2Fworkflows%2Flint.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/4709eb6cceb7231ae2f5082109a817787070ea4c/.github%2Fworkflows%2Flint.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Flint.yml?ref=4709eb6cceb7231ae2f5082109a817787070ea4c",
        "patch": "@@ -1,28 +0,0 @@\n-name: Python Lint\n-\n-on:\n-  push:\n-    branches: [main, develop]\n-  pull_request:\n-    branches: [main, develop]\n-\n-jobs:\n-  lint:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - uses: actions/checkout@v2\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: '3.x'\n-\n-    - name: Install Dependencies\n-      run: |\n-        python -m pip install --upgrade pip\n-        pip install flake8\n-\n-    - name: Lint with flake8\n-      run: |\n-        flake8 app"
      }
    ]
  },
  {
    "sha": "4c37b22857f117c4b63ca3ac2d3b4e18e9b19891",
    "node_id": "C_kwDONDG85doAKDRjMzdiMjI4NTdmMTE3YzRiNjNjYTNhYzJkM2I0ZTE4ZTliMTk4OTE",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-15T14:21:13Z"
      },
      "committer": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-15T14:21:13Z"
      },
      "message": "fix(explore): Add the calls to the Selenium test functions.",
      "tree": {
        "sha": "0accbb091ee97cb6f44c8854823ebb1a389f8366",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/0accbb091ee97cb6f44c8854823ebb1a389f8366"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/4c37b22857f117c4b63ca3ac2d3b4e18e9b19891",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4c37b22857f117c4b63ca3ac2d3b4e18e9b19891",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/4c37b22857f117c4b63ca3ac2d3b4e18e9b19891",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4c37b22857f117c4b63ca3ac2d3b4e18e9b19891/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "396a5611a6f39f8072df0662e048498e8e375829",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/396a5611a6f39f8072df0662e048498e8e375829",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/396a5611a6f39f8072df0662e048498e8e375829"
      }
    ],
    "files": [
      {
        "sha": "4e155914f9dbbabc2336450f156f1534d51a3c3d",
        "filename": "app/modules/explore/tests/test_selenium.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/4c37b22857f117c4b63ca3ac2d3b4e18e9b19891/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/4c37b22857f117c4b63ca3ac2d3b4e18e9b19891/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py?ref=4c37b22857f117c4b63ca3ac2d3b4e18e9b19891",
        "patch": "@@ -67,3 +67,8 @@ def test_check_largest_first():\n \n     finally:\n         close_driver(driver)\n+\n+\n+# Call the test function\n+test_check_smallest_first()\n+test_check_largest_first()"
      }
    ]
  },
  {
    "sha": "275789936b5f3be522fdcc4489b66e8abe8aa0da",
    "node_id": "C_kwDONDG85doAKDI3NTc4OTkzNmI1ZjNiZTUyMmZkY2M0NDg5YjY2ZThhYmU4YWEwZGE",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-15T14:12:36Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-15T14:12:36Z"
      },
      "message": "test(dataset): Added load and GUI tests",
      "tree": {
        "sha": "2e51a79f6cb95f0052696c6c0678f7355015eafe",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/2e51a79f6cb95f0052696c6c0678f7355015eafe"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/275789936b5f3be522fdcc4489b66e8abe8aa0da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/275789936b5f3be522fdcc4489b66e8abe8aa0da",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/275789936b5f3be522fdcc4489b66e8abe8aa0da",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/275789936b5f3be522fdcc4489b66e8abe8aa0da/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d362c35fbac6c96940b11b050579a0b3244013fe",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d362c35fbac6c96940b11b050579a0b3244013fe",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d362c35fbac6c96940b11b050579a0b3244013fe"
      }
    ],
    "files": [
      {
        "sha": "6fae23d3355fa6f5f0004c4780d9acfdafa5b3d5",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 32,
        "deletions": 6,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/275789936b5f3be522fdcc4489b66e8abe8aa0da/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/275789936b5f3be522fdcc4489b66e8abe8aa0da/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=275789936b5f3be522fdcc4489b66e8abe8aa0da",
        "patch": "@@ -1,20 +1,46 @@\n-from locust import HttpUser, TaskSet, task\n+from locust import HttpUser, TaskSet, task, between\n from core.locust.common import get_csrf_token\n from core.environment.host import get_host_for_locust_testing\n \n \n class DatasetBehavior(TaskSet):\n     def on_start(self):\n-        self.dataset()\n+        \"\"\"Acci\u00f3n que se ejecuta al inicio del test.\"\"\"\n+        self.dataset_upload()\n \n     @task\n-    def dataset(self):\n+    def dataset_upload(self):\n+        \"\"\"Simula la carga de la p\u00e1gina de subida de datasets.\"\"\"\n         response = self.client.get(\"/dataset/upload\")\n         get_csrf_token(response)\n \n+    @task(4)\n+    def download_dataset_glencoe(self):\n+        \"\"\"Simula la descarga del dataset en formato Glencoe.\"\"\"\n+        dataset_id = 4  # Ajusta el ID del dataset si es necesario\n+        self.client.get(f\"/dataset/download/{dataset_id}/glencoe\", name=\"/dataset/download/glencoe\")\n+\n+    @task(3)\n+    def download_dataset_splot(self):\n+        \"\"\"Simula la descarga del dataset en formato SPLOT.\"\"\"\n+        dataset_id = 4\n+        self.client.get(f\"/dataset/download/{dataset_id}/splot\", name=\"/dataset/download/splot\")\n+\n+    @task(2)\n+    def download_dataset_dimacs(self):\n+        \"\"\"Simula la descarga del dataset en formato DIMACS.\"\"\"\n+        dataset_id = 4\n+        self.client.get(f\"/dataset/download/{dataset_id}/dimacs\", name=\"/dataset/download/dimacs\")\n+\n+    @task(1)\n+    def download_dataset_zip(self):\n+        \"\"\"Simula la descarga del dataset en formato ZIP.\"\"\"\n+        dataset_id = 4\n+        self.client.get(f\"/dataset/download/{dataset_id}/zip\", name=\"/dataset/download/zip\")\n+\n \n class DatasetUser(HttpUser):\n+    \"\"\"Clase principal que define los usuarios y su comportamiento.\"\"\"\n     tasks = [DatasetBehavior]\n-    min_wait = 5000\n-    max_wait = 9000\n-    host = get_host_for_locust_testing()\n+    wait_time = between(5, 9)  # Espera entre 5 y 9 segundos entre tareas\n+    host = get_host_for_locust_testing()\n\\ No newline at end of file"
      },
      {
        "sha": "55f03b59bd79356d9177918018f72f77bbb6f8b8",
        "filename": "app/modules/dataset/tests/test_download_dataset_selenium.py",
        "status": "added",
        "additions": 90,
        "deletions": 0,
        "changes": 90,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/275789936b5f3be522fdcc4489b66e8abe8aa0da/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/275789936b5f3be522fdcc4489b66e8abe8aa0da/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_download_dataset_selenium.py?ref=275789936b5f3be522fdcc4489b66e8abe8aa0da",
        "patch": "@@ -0,0 +1,90 @@\n+import os\n+import time\n+import glob\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.action_chains import ActionChains\n+from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.webdriver.chrome.options import Options\n+from selenium import webdriver\n+from core.selenium.common import close_driver\n+from core.environment.host import get_host_for_selenium_testing\n+\n+DOWNLOAD_DIR = \"/tmp/selenium_downloads\"  # Ruta de descargas personalizada\n+\n+def initialize_driver(download_dir=None):\n+    options = Options()\n+    if download_dir:\n+        prefs = {\n+            \"download.default_directory\": download_dir,\n+            \"download.prompt_for_download\": False,\n+            \"directory_upgrade\": True\n+        }\n+        options.add_experimental_option(\"prefs\", prefs)\n+    driver = webdriver.Chrome(options=options)\n+    return driver\n+\n+def clean_download_folder():\n+    \"\"\"Elimina todos los archivos previos en la carpeta de descargas.\"\"\"\n+    if os.path.exists(DOWNLOAD_DIR):\n+        for file in os.listdir(DOWNLOAD_DIR):\n+            file_path = os.path.join(DOWNLOAD_DIR, file)\n+            os.remove(file_path)\n+\n+def is_file_downloaded_by_extension(extension, timeout=10):\n+    \"\"\"Verifica si un archivo con una extensi\u00f3n espec\u00edfica ha sido descargado.\"\"\"\n+    for _ in range(timeout):\n+        files = glob.glob(os.path.join(DOWNLOAD_DIR, f\"*.{extension}\"))\n+        if files:\n+            return True\n+        time.sleep(1)\n+    return False\n+\n+def test_download_datasets():\n+    \"\"\"Prueba la descarga de datasets en diferentes formatos.\"\"\"\n+    driver = initialize_driver(download_dir=DOWNLOAD_DIR)\n+    clean_download_folder()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+        driver.get(f\"{host}/\")\n+        WebDriverWait(driver, 10).until(\n+            lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+        )\n+\n+        # Lista de formatos y extensiones esperadas\n+        formats = {\n+            \"Glencoe\": \"txt\",\n+            \"SPLOT\": \"txt\",\n+            \"DIMACS\": \"txt\",\n+            \"ZIP\": \"zip\"\n+        }\n+\n+        for format_name, file_extension in formats.items():\n+            # Hacer clic en el bot\u00f3n \"Download\"\n+            download_button = WebDriverWait(driver, 10).until(\n+                EC.element_to_be_clickable((By.XPATH, \"//button[contains(@id, 'btnDownloadDropdown')]\"))\n+            )\n+            ActionChains(driver).move_to_element(download_button).click().perform()\n+\n+            # Seleccionar el formato del desplegable\n+            dropdown_option = WebDriverWait(driver, 10).until(\n+                EC.element_to_be_clickable((By.XPATH, f\"//a[contains(@onclick, \\\"{format_name.lower()}\\\")]\"))\n+            )\n+            dropdown_option.click()\n+\n+            # Verificar que el archivo se ha descargado por su extensi\u00f3n\n+            print(f\"Esperando la descarga del archivo con extensi\u00f3n .{file_extension}...\")\n+            assert is_file_downloaded_by_extension(file_extension), f\"El archivo con extensi\u00f3n .{file_extension} no se descarg\u00f3 correctamente.\"\n+            print(f\"El archivo con extensi\u00f3n .{file_extension} se descarg\u00f3 correctamente.\")\n+\n+            time.sleep(2)  # Espera breve antes de continuar\n+\n+        print(\"Todos los archivos se descargaron correctamente. Test completado con \u00e9xito.\")\n+\n+    finally:\n+        close_driver(driver)  # Cerrar el navegador al finalizar el test\n+\n+# Ejecutar el test\n+if __name__ == \"__main__\":\n+    test_download_datasets()\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "75388f99dfe4a68e93c0822798e8cea022212ac0",
    "node_id": "C_kwDONDG85doAKDc1Mzg4Zjk5ZGZlNGE2OGU5M2MwODIyNzk4ZThjZWEwMjIyMTJhYzA",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T13:39:25Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T13:39:25Z"
      },
      "message": "feat(fakenodo): synchronization working properly",
      "tree": {
        "sha": "5ff28b08f361e327e9e31806a9e31835e1f5e5ee",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/5ff28b08f361e327e9e31806a9e31835e1f5e5ee"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/75388f99dfe4a68e93c0822798e8cea022212ac0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/75388f99dfe4a68e93c0822798e8cea022212ac0",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/75388f99dfe4a68e93c0822798e8cea022212ac0",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/75388f99dfe4a68e93c0822798e8cea022212ac0/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6cc3bb0d1778265747f36d243e27c7378cdccfb",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e6cc3bb0d1778265747f36d243e27c7378cdccfb",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e6cc3bb0d1778265747f36d243e27c7378cdccfb"
      }
    ],
    "files": [
      {
        "sha": "dc60d2ea029585a302642dd662a05b8cd96b19ca",
        "filename": "fakenodo/app/routes.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/75388f99dfe4a68e93c0822798e8cea022212ac0/fakenodo%2Fapp%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/75388f99dfe4a68e93c0822798e8cea022212ac0/fakenodo%2Fapp%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Froutes.py?ref=75388f99dfe4a68e93c0822798e8cea022212ac0",
        "patch": "@@ -80,8 +80,9 @@ def publish_deposition(deposition_id) -> tuple:\n     try:\n         # Target deposition\n         deposition = service.get_deposition(deposition_id)\n+        service.generate_doi(deposition_id)\n         service.publish_deposition(deposition)\n-        return jsonify(f\"Deposition with id {deposition_id} published succesfully\"), 201\n+        return jsonify(f\"Deposition with id {deposition_id} published succesfully\"), 202\n \n     except Exception:\n         return jsonify(\"Deposition not found\"), 404"
      },
      {
        "sha": "8669d604064c52e7e33efd1e2a4499c33c87664a",
        "filename": "fakenodo/app/services.py",
        "status": "modified",
        "additions": 16,
        "deletions": 4,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/75388f99dfe4a68e93c0822798e8cea022212ac0/fakenodo%2Fapp%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/75388f99dfe4a68e93c0822798e8cea022212ac0/fakenodo%2Fapp%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fservices.py?ref=75388f99dfe4a68e93c0822798e8cea022212ac0",
        "patch": "@@ -10,9 +10,7 @@\n \n load_dotenv()\n \n-# List where all depositions are stored\n-depositions: List[Deposition] = []\n-\n+depositions = []\n \n class Service(BaseService):\n     def __init__(self):\n@@ -50,7 +48,8 @@ def upload_file(self, file, deposition_id) -> None:\n             print(f\"Error en la subida del archivo: {e}\")\n \n     def publish_deposition(self, deposition: Deposition) -> dict:\n-        deposition.published = True\n+        if deposition.doi!=None:\n+            deposition.published = True\n         return deposition.to_dict()\n \n     def delete_deposition(self, deposition: Deposition) -> None:\n@@ -61,3 +60,16 @@ def get_deposition(self, deposition_id: int) -> Deposition | None:\n \n     def get_doi(self, deposition_id: int) -> str:\n         return self.get_deposition(deposition_id).doi\n+\n+    def generate_doi_id():\n+        identifier = 10000\n+        while True:\n+            yield identifier\n+            identifier+=1\n+\n+    doi_generator = generate_doi_id()\n+\n+    def generate_doi(self,deposition_id):\n+        deposition = self.get_deposition(deposition_id)\n+        doi_id = next(self.doi_generator)\n+        deposition.doi = str(doi_id)+\"/dataset.\"+str(doi_id)"
      }
    ]
  },
  {
    "sha": "ef2278271a8b51a44550f305ad73a17f2b4867bc",
    "node_id": "C_kwDONDG85doAKGVmMjI3ODI3MWE4YjUxYTQ0NTUwZjMwNWFkNzNhMTdmMmI0ODY3YmM",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T13:23:12Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T13:23:12Z"
      },
      "message": "fix(dataset): selenium tests no longer account for duplicate uploaded datasets",
      "tree": {
        "sha": "dc75a2307b0340894675c3ede15b460b854a8e87",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/dc75a2307b0340894675c3ede15b460b854a8e87"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/ef2278271a8b51a44550f305ad73a17f2b4867bc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ef2278271a8b51a44550f305ad73a17f2b4867bc",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ef2278271a8b51a44550f305ad73a17f2b4867bc",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ef2278271a8b51a44550f305ad73a17f2b4867bc/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a95b683b316f8ce207e9f40057cd00cb62b078e1",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a95b683b316f8ce207e9f40057cd00cb62b078e1",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a95b683b316f8ce207e9f40057cd00cb62b078e1"
      }
    ],
    "files": [
      {
        "sha": "7f2bcf42ace80c1743ddc5ab39335e96e6aaf4a4",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ef2278271a8b51a44550f305ad73a17f2b4867bc/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ef2278271a8b51a44550f305ad73a17f2b4867bc/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=ef2278271a8b51a44550f305ad73a17f2b4867bc",
        "patch": "@@ -193,7 +193,7 @@ def get_url_detalles(driver, host):\n \n             # Count final datasets\n             final_datasets = count_datasets(driver, host)\n-            assert final_datasets == initial_datasets + 2, \"Test failed!\"\n+            assert final_datasets == initial_datasets + 1, \"Test failed!\"\n             \n             listado_unsync = driver.find_element(By.CLASS_NAME, \"row\") # TODO: encontrar el primer elemento de tipo tbody\n             dataset_creado = listado_unsync.find_element(By.XPATH, \"//table//tbody//tr\")\n@@ -303,7 +303,7 @@ def test_upload_dataset():\n \n         # Count final datasets\n         final_datasets = count_datasets(driver, host)\n-        assert final_datasets == initial_datasets + 2, \"Test failed!\"\n+        assert final_datasets == initial_datasets + 1, \"Test failed!\"\n \n         print(\"Test passed!\")\n "
      }
    ]
  },
  {
    "sha": "b214242455f4c87bc468175ce99fe75f52818d27",
    "node_id": "C_kwDONDG85doAKGIyMTQyNDI0NTVmNGM4N2JjNDY4MTc1Y2U5OWZlNzVmNTI4MThkMjc",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-15T13:12:21Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-15T13:12:21Z"
      },
      "message": "fix(dataset): fixed duplicate datasets in the upload process",
      "tree": {
        "sha": "fd662bf516ec3f2d9b2c237a32494a8610a2d976",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/fd662bf516ec3f2d9b2c237a32494a8610a2d976"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/b214242455f4c87bc468175ce99fe75f52818d27",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b214242455f4c87bc468175ce99fe75f52818d27",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/b214242455f4c87bc468175ce99fe75f52818d27",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b214242455f4c87bc468175ce99fe75f52818d27/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c21746a47175c9c30245e9c590a4dafd607b4955",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c21746a47175c9c30245e9c590a4dafd607b4955",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c21746a47175c9c30245e9c590a4dafd607b4955"
      }
    ],
    "files": [
      {
        "sha": "65ffa266d710b0ee8f02416aeb1319e5f0aed671",
        "filename": "app/static/js/scripts.js",
        "status": "modified",
        "additions": 4,
        "deletions": 244,
        "changes": 248,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b214242455f4c87bc468175ce99fe75f52818d27/app%2Fstatic%2Fjs%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b214242455f4c87bc468175ce99fe75f52818d27/app%2Fstatic%2Fjs%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fscripts.js?ref=b214242455f4c87bc468175ce99fe75f52818d27",
        "patch": "@@ -1,246 +1,6 @@\n-var currentId = 0;\n-        var amount_authors = 0;\n-\n-        function show_upload_dataset() {\n-            document.getElementById(\"upload_dataset\").style.display = \"block\";\n-        }\n-\n-        function generateIncrementalId() {\n-            return currentId++;\n-        }\n-\n-        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n-            let fieldWrapper = document.createElement('div');\n-            fieldWrapper.className = className;\n-\n-            let label = document.createElement('label');\n-            label.className = 'form-label';\n-            label.for = name;\n-            label.textContent = text;\n-\n-            let field = document.createElement('input');\n-            field.name = name;\n-            field.className = 'form-control';\n-\n-            fieldWrapper.appendChild(label);\n-            fieldWrapper.appendChild(field);\n-            newAuthor.appendChild(fieldWrapper);\n-        }\n-\n-        function addRemoveButton(newAuthor) {\n-            let buttonWrapper = document.createElement('div');\n-            buttonWrapper.className = 'col-12 mb-2';\n-\n-            let button = document.createElement('button');\n-            button.textContent = 'Remove author';\n-            button.className = 'btn btn-danger btn-sm';\n-            button.type = 'button';\n-            button.addEventListener('click', function (event) {\n-                event.preventDefault();\n-                newAuthor.remove();\n-            });\n-\n-            buttonWrapper.appendChild(button);\n-            newAuthor.appendChild(buttonWrapper);\n-        }\n-\n-        function createAuthorBlock(idx, suffix) {\n-            let newAuthor = document.createElement('div');\n-            newAuthor.className = 'author row';\n-            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n-\n-            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n-            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n-            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n-            addRemoveButton(newAuthor);\n-\n-            return newAuthor;\n-        }\n-\n-        function check_title_and_description() {\n-            let titleInput = document.querySelector('input[name=\"title\"]');\n-            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n-\n-            titleInput.classList.remove(\"error\");\n-            descriptionTextarea.classList.remove(\"error\");\n-            clean_upload_errors();\n-\n-            let titleLength = titleInput.value.trim().length;\n-            let descriptionLength = descriptionTextarea.value.trim().length;\n-\n-            if (titleLength < 3) {\n-                write_upload_error(\"title must be of minimum length 3\");\n-                titleInput.classList.add(\"error\");\n-            }\n-\n-            if (descriptionLength < 3) {\n-                write_upload_error(\"description must be of minimum length 3\");\n-                descriptionTextarea.classList.add(\"error\");\n-            }\n-\n-            return (titleLength >= 3 && descriptionLength >= 3);\n-        }\n-\n-\n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n-\n-        document.addEventListener('click', function (event) {\n-            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n-\n-                let authorsButtonId = event.target.id;\n-                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n-                let authors = document.getElementById(authorsId);\n-                let id = authorsId.replace(\"_form_authors\", \"\")\n-                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n-                authors.appendChild(newAuthor);\n-\n-            }\n-        });\n-\n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n-\n-        function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n-            document.getElementById(\"loading\").style.display = \"none\";\n-        }\n-\n-        function clean_upload_errors() {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            upload_error.innerHTML = \"\";\n-            upload_error.style.display = 'none';\n-        }\n-\n-        function write_upload_error(error_message) {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            let alert = document.createElement('p');\n-            alert.style.margin = '0';\n-            alert.style.padding = '0';\n-            alert.textContent = 'Upload error: ' + error_message;\n-            upload_error.appendChild(alert);\n-            upload_error.style.display = 'block';\n-        }\n-\n-        window.onload = function () {\n-\n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n-\n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n-\n-        function downloadDataset(datasetId, format) {\n-            const url = `/dataset/download/${datasetId}/${format}`;\n-            window.location.href = url;\n-        }\n+    function downloadDataset(datasetId, format) {\n+        const url = `/dataset/download/${datasetId}/${format}`;\n+        window.location.href = url;\n+    }\n         \n         \n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "e6cc3bb0d1778265747f36d243e27c7378cdccfb",
    "node_id": "C_kwDONDG85doAKGU2Y2MzYmIwZDE3NzgyNjU3NDdmMzZkMjQzZTI3YzczNzhjZGNjZmI",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T12:57:47Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T12:57:47Z"
      },
      "message": "feat(zenodo): uvlhub is now connected to fakenodo",
      "tree": {
        "sha": "63065844856dacd1e2fc6fc03a98a7996f7dfacd",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/63065844856dacd1e2fc6fc03a98a7996f7dfacd"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/e6cc3bb0d1778265747f36d243e27c7378cdccfb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e6cc3bb0d1778265747f36d243e27c7378cdccfb",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e6cc3bb0d1778265747f36d243e27c7378cdccfb",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e6cc3bb0d1778265747f36d243e27c7378cdccfb/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a0afa8905f348a607b5f751df02a9316749d64e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5a0afa8905f348a607b5f751df02a9316749d64e",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5a0afa8905f348a607b5f751df02a9316749d64e"
      }
    ],
    "files": [
      {
        "sha": "7b490f28d3175ec7c4b18005d43097bea9ee0f3b",
        "filename": "app/modules/zenodo/services.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e6cc3bb0d1778265747f36d243e27c7378cdccfb/app%2Fmodules%2Fzenodo%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e6cc3bb0d1778265747f36d243e27c7378cdccfb/app%2Fmodules%2Fzenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Fservices.py?ref=e6cc3bb0d1778265747f36d243e27c7378cdccfb",
        "patch": "@@ -27,11 +27,11 @@ def get_zenodo_url(self):\n         ZENODO_API_URL = \"\"\n \n         if FLASK_ENV == \"development\":\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://localhost:5001/api/fakenodo/depositions\")\n+            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n         elif FLASK_ENV == \"production\":\n             ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://zenodo.org/api/deposit/depositions\")\n         else:\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://localhost:5001/api/fakenodo/depositions\")\n+            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"http://localhost:5001/api/fakenodo/depositions\")\n \n         return ZENODO_API_URL\n \n@@ -83,7 +83,6 @@ def test_full_connection(self) -> Response:\n                 \"creators\": [{\"name\": \"John Doe\"}],\n             }\n         }\n-\n         response = requests.post(self.ZENODO_API_URL, json=data, params=self.params, headers=self.headers)\n \n         if response.status_code != 201:"
      }
    ]
  },
  {
    "sha": "d362c35fbac6c96940b11b050579a0b3244013fe",
    "node_id": "C_kwDONDG85doAKGQzNjJjMzVmYmFjNmM5Njk0MGIxMWIwNTA1NzlhMGIzMjQ0MDEzZmU",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T09:34:35Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-15T09:34:35Z"
      },
      "message": "fix(workflow): fixed test environment var missing from testing workflow",
      "tree": {
        "sha": "681970913baf3df156036b245cd8c153060631c6",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/681970913baf3df156036b245cd8c153060631c6"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/d362c35fbac6c96940b11b050579a0b3244013fe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d362c35fbac6c96940b11b050579a0b3244013fe",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d362c35fbac6c96940b11b050579a0b3244013fe",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d362c35fbac6c96940b11b050579a0b3244013fe/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3de08af2771e0ba486dc575110bd89585e161678",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3de08af2771e0ba486dc575110bd89585e161678",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/3de08af2771e0ba486dc575110bd89585e161678"
      }
    ],
    "files": [
      {
        "sha": "c2f01a0ae80ec18e56cb1fc86e13b5ec720d1347",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d362c35fbac6c96940b11b050579a0b3244013fe/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d362c35fbac6c96940b11b050579a0b3244013fe/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=d362c35fbac6c96940b11b050579a0b3244013fe",
        "patch": "@@ -47,5 +47,6 @@ jobs:\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n         ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+        WORKING_DIR: \"\"\n       run: |\n         pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      }
    ]
  },
  {
    "sha": "5a0afa8905f348a607b5f751df02a9316749d64e",
    "node_id": "C_kwDONDG85doAKDVhMGFmYTg5MDVmMzQ4YTYwN2I1Zjc1MWRmMDJhOTMxNjc0OWQ2NGU",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T01:36:18Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-15T01:36:18Z"
      },
      "message": "feat(zenodo): basic fakenodo layout, api connection still failing",
      "tree": {
        "sha": "1633cbcd29b1a3930c4e7ebbf8a30f488b0e4c75",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/1633cbcd29b1a3930c4e7ebbf8a30f488b0e4c75"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/5a0afa8905f348a607b5f751df02a9316749d64e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5a0afa8905f348a607b5f751df02a9316749d64e",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5a0afa8905f348a607b5f751df02a9316749d64e",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5a0afa8905f348a607b5f751df02a9316749d64e/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3de08af2771e0ba486dc575110bd89585e161678",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3de08af2771e0ba486dc575110bd89585e161678",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/3de08af2771e0ba486dc575110bd89585e161678"
      }
    ],
    "files": [
      {
        "sha": "2d595971105c46037dd25cd23f817aecb3888a2e",
        "filename": "app/modules/zenodo/services.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5a0afa8905f348a607b5f751df02a9316749d64e/app%2Fmodules%2Fzenodo%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5a0afa8905f348a607b5f751df02a9316749d64e/app%2Fmodules%2Fzenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Fservices.py?ref=5a0afa8905f348a607b5f751df02a9316749d64e",
        "patch": "@@ -27,11 +27,11 @@ def get_zenodo_url(self):\n         ZENODO_API_URL = \"\"\n \n         if FLASK_ENV == \"development\":\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://localhost:5001/api/fakenodo/depositions\")\n         elif FLASK_ENV == \"production\":\n             ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://zenodo.org/api/deposit/depositions\")\n         else:\n-            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://localhost:5001/api/fakenodo/depositions\")\n \n         return ZENODO_API_URL\n "
      },
      {
        "sha": "54a33e2de92fe07a170425aae5155b7722058055",
        "filename": "fakenodo/__init__.py",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2F__init__.py?ref=5a0afa8905f348a607b5f751df02a9316749d64e",
        "patch": "@@ -0,0 +1,8 @@\n+from fakenodo.app.routes import api_bp\n+from flask import Flask\n+\n+def create_app():\n+    app = Flask(__name__)\n+    with app.app_context():\n+        app.register_blueprint(api_bp)\n+    return app"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "fakenodo/app/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Fapp%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Fapp%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2F__init__.py?ref=5a0afa8905f348a607b5f751df02a9316749d64e"
      },
      {
        "sha": "34c7f26a0ccf44b709399eb34685c72851a158d4",
        "filename": "fakenodo/app/models.py",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Fapp%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Fapp%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fmodels.py?ref=5a0afa8905f348a607b5f751df02a9316749d64e",
        "patch": "@@ -0,0 +1,71 @@\n+class Creator:\n+    def __init__(self, name: str, id: int = None, deposition_id: int = None):\n+        self.id = id\n+        self.name = name\n+        self.deposition_id = deposition_id\n+\n+    def to_dict(self):\n+        return {\n+            'id': self.id,\n+            'name': self.name,\n+            'deposition_id': self.deposition_id\n+        }\n+\n+\n+class File:\n+    _id_counter = 1\n+\n+    def __init__(self, name: str, size: int, checksum, deposition_id: str):\n+        self.id = File._id_counter\n+        File._id_counter += 1\n+        self.name = name\n+        self.size = size\n+        self.checksum = checksum\n+        self.deposition_id = deposition_id\n+\n+    def to_dict(self):\n+        return {\n+            \"id\": self.id,\n+            \"name\": self.name,\n+            \"size\": self.size,\n+            \"checksum\": self.checksum\n+        }\n+\n+\n+class Deposition:\n+    _id_counter = 1\n+\n+    def __init__(self, title=None, upload_type=None, publication_type=None, description=None,\n+                 creators=None, keywords=None, access_right=None, license=None, doi=None, published=False, files=None):\n+        self.id = Deposition._id_counter\n+        Deposition._id_counter += 1\n+\n+        self.title = title\n+        self.upload_type = upload_type\n+        self.publication_type = publication_type\n+        self.description = description\n+        self.creators = creators\n+        self.keywords = keywords\n+        self.access_right = access_right\n+        self.license = license\n+        self.doi = doi\n+        self.published = published\n+        self.files = files\n+        self.conceptrecid = self.id - 1\n+\n+    def to_dict(self):\n+        return {\n+            \"id\": self.id,\n+            \"title\": self.title,\n+            \"upload_type\": self.upload_type,\n+            \"publication_type\": self.publication_type,\n+            \"description\": self.description,\n+            \"creators\": self.creators,\n+            \"keywords\": self.keywords,\n+            \"access_right\": self.access_right,\n+            \"license\": self.license,\n+            \"doi\": self.doi,\n+            \"published\": self.published,\n+            \"files\": self.files,\n+            \"conceptrecid\": self.conceptrecid\n+        }"
      },
      {
        "sha": "3571819bd9415ee208f7334b16028fbff379afdd",
        "filename": "fakenodo/app/routes.py",
        "status": "added",
        "additions": 96,
        "deletions": 0,
        "changes": 96,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Fapp%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Fapp%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Froutes.py?ref=5a0afa8905f348a607b5f751df02a9316749d64e",
        "patch": "@@ -0,0 +1,96 @@\n+import logging\n+import requests\n+from flask import Blueprint, jsonify, request\n+from fakenodo.app.models import Deposition\n+from fakenodo.app.services import Service\n+\n+api_bp = Blueprint(\"api_bp\", __name__)\n+logger = logging.getLogger(__name__)\n+service = Service()\n+\n+\n+@api_bp.route('/api/fakenodo/depositions', methods=['GET', 'POST'])\n+def depositions() -> tuple:\n+    def get_all_depositions() -> tuple:\n+        try:\n+            depositions = service.get_all_depositions()\n+            return jsonify(depositions), 200\n+\n+        except Exception as e:\n+            return jsonify({\"success\": False, \"message\": str(e)}), 500\n+\n+    def create_deposition() -> tuple:\n+        data = request.json\n+        try:\n+            # Create a Deposition instance with the request metadata\n+            deposition = Deposition(**data[\"metadata\"])\n+\n+            # Save the deposition in a local list\n+            response_data = service.create_new_deposition(deposition)\n+\n+            return jsonify(response_data), 201\n+        except Exception as e:\n+            return jsonify({\"success\": False, \"message\": str(e)}), 500\n+\n+    if request.method == \"GET\":\n+        return get_all_depositions()\n+    else:\n+        return create_deposition()\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/files', methods=['POST'])\n+def upload_file(deposition_id) -> tuple:\n+    try:\n+        for file in request.files.getlist('file'):\n+            if not file:\n+                return jsonify({\"success\": False, \"message\": \"Missing file\"}), 400\n+            service.upload_file(file, deposition_id)\n+\n+        return jsonify('File uploaded succesfully'), 201\n+    except Exception as e:\n+        error_message = f\"Failed to upload files. Error details: {e}\"\n+        raise Exception(error_message)\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>', methods=['GET', 'DELETE'])\n+def deposition(deposition_id):\n+    try:\n+        # Target deposition\n+        deposition = service.get_deposition(deposition_id)\n+\n+        def get_deposition():\n+            resposne = deposition.to_dict()\n+            return jsonify(resposne), 200\n+\n+        def delete_deposition():\n+            service.delete_deposition(deposition)\n+            return jsonify(f\"Deposition with id {deposition_id} deleted succesfully\"), 204\n+\n+        if request.method == 'GET':\n+            return get_deposition()\n+        else:\n+            return delete_deposition()\n+\n+    except Exception:\n+        return jsonify(f\"Cannot find deposition with id {deposition_id}\"), 404\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/actions/publish', methods=['POST'])\n+def publish_deposition(deposition_id) -> tuple:\n+    try:\n+        # Target deposition\n+        deposition = service.get_deposition(deposition_id)\n+        service.publish_deposition(deposition)\n+        return jsonify(f\"Deposition with id {deposition_id} published succesfully\"), 201\n+\n+    except Exception:\n+        return jsonify(\"Deposition not found\"), 404\n+\n+\n+@api_bp.route('/api/fakenodo/depositions/<int:deposition_id>/doi', methods=['GET'])\n+def get_doi(deposition_id) -> tuple:\n+    try:\n+        doi = service.get_doi(deposition_id)\n+        return jsonify({\"doi\": doi}), 200\n+    except Exception as e:\n+        return jsonify({\"success\": False, \"message\": str(e)}), 500"
      },
      {
        "sha": "1876e704fe0ab542ec18db50e6ef16157202bc87",
        "filename": "fakenodo/app/services.py",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Fapp%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Fapp%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fapp%2Fservices.py?ref=5a0afa8905f348a607b5f751df02a9316749d64e",
        "patch": "@@ -0,0 +1,63 @@\n+import hashlib\n+import logging\n+\n+from typing import List\n+from fakenodo.app.models import Deposition, File\n+from dotenv import load_dotenv\n+from core.services.BaseService import BaseService\n+\n+logger = logging.getLogger(__name__)\n+\n+load_dotenv()\n+\n+# List where all depositions are stored\n+depositions: List[Deposition] = []\n+\n+\n+class Service(BaseService):\n+    def __init__(self):\n+        self.headers = {\"Content-Type\": \"application/json\"}\n+\n+    def get_all_depositions(self) -> list:\n+        return [deposition.to_dict() for deposition in depositions]\n+\n+    def create_new_deposition(self, deposition: Deposition) -> dict:\n+        depositions.append(deposition)\n+        return deposition.to_dict()\n+\n+    def upload_file(self, file, deposition_id) -> None:\n+        try:\n+            # Read file content\n+            file_data = file.read()\n+\n+            # Create the file instance\n+            file_instance = File(\n+                name=file.filename,\n+                size=len(file_data),\n+                checksum=hashlib.md5(file_data).hexdigest(),\n+                deposition_id=deposition_id\n+            )\n+\n+            target_deposition = self.get_deposition(deposition_id)\n+            if target_deposition is None:\n+                raise FileNotFoundError(\"Deposition not found\")\n+            if target_deposition.files is None:\n+                target_deposition.files = [file_instance.to_dict()]\n+            else:\n+                target_deposition.files.append(file_instance.to_dict())\n+\n+        except Exception as e:\n+            print(f\"Error en la subida del archivo: {e}\")\n+\n+    def publish_deposition(self, deposition: Deposition) -> dict:\n+        deposition.published = True\n+        return deposition.to_dict()\n+\n+    def delete_deposition(self, deposition: Deposition) -> None:\n+        depositions.remove(deposition)\n+\n+    def get_deposition(self, deposition_id: int) -> Deposition | None:\n+        return [deposition for deposition in depositions if deposition_id == deposition.id][0]\n+\n+    def get_doi(self, deposition_id: int) -> str:\n+        return self.get_deposition(deposition_id).doi"
      },
      {
        "sha": "d2a599dd699a849fbac0b49bf05c76c52b5f516c",
        "filename": "fakenodo/conftest.py",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Fconftest.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Fconftest.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fconftest.py?ref=5a0afa8905f348a607b5f751df02a9316749d64e",
        "patch": "@@ -0,0 +1,14 @@\n+import pytest\n+from flask import Flask\n+from fakenodo.app.routes import api_bp\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client():\n+    app = Flask(__name__)\n+    app.config[\"TESTING\"] = True\n+    app.config[\"SERVER_NAME\"] = \"localhost:5001\"\n+    app.register_blueprint(api_bp)\n+    with app.test_client() as client:\n+        with app.app_context():\n+            yield client"
      },
      {
        "sha": "6073984d83d3c02a135714af400b13bac9c32687",
        "filename": "fakenodo/pytest.ini",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Fpytest.ini",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Fpytest.ini",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Fpytest.ini?ref=5a0afa8905f348a607b5f751df02a9316749d64e",
        "patch": "@@ -0,0 +1,4 @@\n+[pytest]\n+filterwarnings =\n+    ignore::DeprecationWarning\n+testpaths = fakenodo tests"
      },
      {
        "sha": "65e0caf5717f6844e459e42f72073254d12b694a",
        "filename": "fakenodo/run.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Frun.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5a0afa8905f348a607b5f751df02a9316749d64e/fakenodo%2Frun.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/fakenodo%2Frun.py?ref=5a0afa8905f348a607b5f751df02a9316749d64e",
        "patch": "@@ -0,0 +1,6 @@\n+from fakenodo import create_app\n+\n+\n+app = create_app()\n+if __name__ == \"__main__\":\n+    app.run(host=\"0.0.0.0\", port=5001, debug=True)"
      }
    ]
  },
  {
    "sha": "4709eb6cceb7231ae2f5082109a817787070ea4c",
    "node_id": "C_kwDONDG85doAKDQ3MDllYjZjY2ViNzIzMWFlMmY1MDgyMTA5YTgxNzc4NzA3MGVhNGM",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-14T21:53:41Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-14T21:53:41Z"
      },
      "message": "feat(tests): sync with github tests",
      "tree": {
        "sha": "0a54614a654020f8b2510bcdeae3483b7b56dd23",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/0a54614a654020f8b2510bcdeae3483b7b56dd23"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/4709eb6cceb7231ae2f5082109a817787070ea4c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4709eb6cceb7231ae2f5082109a817787070ea4c",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/4709eb6cceb7231ae2f5082109a817787070ea4c",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4709eb6cceb7231ae2f5082109a817787070ea4c/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d6f3d8664f474e87c766708c6fd8372f6fe853b0",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d6f3d8664f474e87c766708c6fd8372f6fe853b0",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d6f3d8664f474e87c766708c6fd8372f6fe853b0"
      }
    ],
    "files": [
      {
        "sha": "e4637074898a1a93c1a06f57ccd6ac82c64c8065",
        "filename": "app/modules/auth/tests/locustfile.py",
        "status": "modified",
        "additions": 52,
        "deletions": 1,
        "changes": 53,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/4709eb6cceb7231ae2f5082109a817787070ea4c/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/4709eb6cceb7231ae2f5082109a817787070ea4c/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py?ref=4709eb6cceb7231ae2f5082109a817787070ea4c",
        "patch": "@@ -1,4 +1,5 @@\n from locust import HttpUser, TaskSet, task\n+import requests\n from core.locust.common import get_csrf_token, fake\n from core.environment.host import get_host_for_locust_testing\n \n@@ -51,8 +52,58 @@ def login(self):\n             print(f\"Login failed: {response.status_code}\")\n \n \n+class InviteBehavior(TaskSet):\n+    def on_start(self):\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def invite_user(self):\n+        github_user_response = requests.get(\"https://api.github.com/user\", headers={\n+            \"Authorization\": \"token example_valid_token\",\n+            \"Accept\": \"application/vnd.github.v3+json\"\n+        })\n+\n+        if github_user_response.status_code != 200:\n+            print(f\"Failed to fetch GitHub user info: {github_user_response.status_code}\")\n+\n+        username = github_user_response.json().get(\"login\")\n+        if not username:\n+            print(\"Failed to fetch GitHub username.\")\n+\n+        response = self.client.post(\"/invite\", json={\n+            \"github_username\": username\n+        })\n+        \n+        if response.status_code == 201:\n+            print(f\"Invitation sent successfully to {username}.\")\n+        elif response.status_code == 404:\n+            print(f\"GitHub user {username} not found.\")\n+        elif response.status_code == 422:\n+            print(f\"User {username} already belongs to the organization.\")\n+        else:\n+            print(f\"Invitation failed with status: {response.status_code} - {response.text}\")\n+\n+\n+\n+\n class AuthUser(HttpUser):\n-    tasks = [SignupBehavior, LoginBehavior]\n+    tasks = [SignupBehavior, LoginBehavior, InviteBehavior]\n     min_wait = 5000\n     max_wait = 9000\n     host = get_host_for_locust_testing()\n+    \n+    "
      },
      {
        "sha": "729195481b361557670716d39a2979257d9a1374",
        "filename": "app/modules/auth/tests/test_unit.py",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/4709eb6cceb7231ae2f5082109a817787070ea4c/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/4709eb6cceb7231ae2f5082109a817787070ea4c/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py?ref=4709eb6cceb7231ae2f5082109a817787070ea4c",
        "patch": "@@ -1,3 +1,4 @@\n+from unittest.mock import MagicMock, patch\n import pytest\n from flask import url_for\n \n@@ -117,3 +118,39 @@ def test_service_create_with_profile_fail_no_password(clean_database):\n \n     assert UserRepository().count() == 0\n     assert UserProfileRepository().count() == 0\n+    \n+    \n+    \n+@patch('flask_dance.contrib.github.github')  \n+def test_redirect_to_login(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(authorized=False)\n+\n+    response = test_client.get('/gitlogin')\n+\n+    assert response.status_code == 302\n+    assert \"/github\" in response.location, f\"Expected redirection to github, got {response.request.path}\"\n+    \n+    \n+\n+@patch('flask_dance.contrib.github.github')\n+def test_invite_user_no_sync_error(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(ok=False)\n+\n+    response = test_client.post('/invite')\n+\n+    assert response.status_code == 200\n+    assert b\"First sync your github account.\" in response.data\n+\n+\n+@patch('flask_dance.contrib.github.github')\n+def test_create_repo_no_sync_error(mock_github, test_client):\n+    mock_github.get.return_value = MagicMock(ok=False)\n+\n+    response = test_client.post('/create_repo')\n+\n+    assert response.status_code == 200\n+    assert b\"First sync your github account.\" in response.data\n+    \n+\n+\n+"
      },
      {
        "sha": "c0d430ef512f5760bcf432c8f1b0ba7479f26362",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 76,
        "deletions": 1,
        "changes": 77,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/4709eb6cceb7231ae2f5082109a817787070ea4c/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/4709eb6cceb7231ae2f5082109a817787070ea4c/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=4709eb6cceb7231ae2f5082109a817787070ea4c",
        "patch": "@@ -1,3 +1,4 @@\n+import random\n from locust import HttpUser, TaskSet, task\n from core.locust.common import get_csrf_token\n from core.environment.host import get_host_for_locust_testing\n@@ -11,10 +12,84 @@ def on_start(self):\n     def dataset(self):\n         response = self.client.get(\"/dataset/upload\")\n         get_csrf_token(response)\n+        \n+        \n+class CommitDatasetBehavior(TaskSet):\n+    def on_start(self):\n+        \"\"\"Simulate user login before running the commit task.\"\"\"\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        \"\"\"Ensure the user is authenticated.\"\"\"\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}, {response.text}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def commit_dataset(self):\n+        dataset_id = random.randint(1, 10)\n+        response = self.client.post(f\"/dataset/commit/{dataset_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"Dataset {dataset_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"Dataset {dataset_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for dataset {dataset_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for dataset {dataset_id}: {response.status_code} - {response.text}\")\n+\n+\n+\n+class CommitFileBehavior(TaskSet):\n+    def on_start(self):\n+        \"\"\"Simulate user login before running the commit task.\"\"\"\n+        self.ensure_logged_in()\n+\n+    def ensure_logged_in(self):\n+        \"\"\"Ensure the user is authenticated.\"\"\"\n+        response = self.client.get(\"/login\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}, {response.text}\")\n+        else:\n+            print(\"User successfully logged in.\")\n+\n+    @task\n+    def commit_dataset(self):\n+        file_id = random.randint(1, 30)  \n+        response = self.client.post(f\"/dataset/commit_file/{file_id}\", json={})\n+        \n+        if response.status_code == 200:\n+            print(f\"File {file_id} committed successfully: {response.text}\")\n+        elif response.status_code == 404:\n+            print(f\"File {file_id} not found: {response.status_code}\")\n+        elif response.status_code == 500:\n+            print(f\"Server error for File {file_id}: {response.status_code} - {response.text}\")\n+        else:\n+            print(f\"Unexpected status for File {file_id}: {response.status_code} - {response.text}\")\n+\n \n \n class DatasetUser(HttpUser):\n-    tasks = [DatasetBehavior]\n+    tasks = [DatasetBehavior, CommitDatasetBehavior, CommitFileBehavior]\n     min_wait = 5000\n     max_wait = 9000\n     host = get_host_for_locust_testing()"
      }
    ]
  },
  {
    "sha": "a95b683b316f8ce207e9f40057cd00cb62b078e1",
    "node_id": "C_kwDONDG85doAKGE5NWI2ODNiMzE2ZjhjZTIwN2U5ZjQwMDU3Y2QwMGNiNjJiMDc4ZTE",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-14T19:47:01Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-14T19:47:01Z"
      },
      "message": "feat(dataset): added selenium tests for bibtex export feature",
      "tree": {
        "sha": "a6c3e26eeccbd3ce067cd4423a032ca9dd265d04",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a6c3e26eeccbd3ce067cd4423a032ca9dd265d04"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/a95b683b316f8ce207e9f40057cd00cb62b078e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a95b683b316f8ce207e9f40057cd00cb62b078e1",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a95b683b316f8ce207e9f40057cd00cb62b078e1",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a95b683b316f8ce207e9f40057cd00cb62b078e1/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d8b46930389020e121f68b59294ad14c26bb5578",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d8b46930389020e121f68b59294ad14c26bb5578",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d8b46930389020e121f68b59294ad14c26bb5578"
      }
    ],
    "files": [
      {
        "sha": "159562d36df64930959b0501b01d8153b8e1e14c",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 426,
        "deletions": 1,
        "changes": 427,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a95b683b316f8ce207e9f40057cd00cb62b078e1/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a95b683b316f8ce207e9f40057cd00cb62b078e1/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=a95b683b316f8ce207e9f40057cd00cb62b078e1",
        "patch": "@@ -1,14 +1,44 @@\n import os\n import time\n+from flask import url_for\n+from datetime import datetime\n+from pathlib import Path\n \n+from selenium import webdriver\n from selenium.webdriver.common.by import By\n from selenium.webdriver.common.keys import Keys\n from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.common.exceptions import NoSuchElementException\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.webdriver.chrome.service import Service\n+from webdriver_manager.chrome import ChromeDriverManager\n \n from core.environment.host import get_host_for_selenium_testing\n from core.selenium.common import initialize_driver, close_driver\n \n \n+def get_driver_with_download_cwdir():\n+    # Initializes the browser options\n+    prefs = {\n+        \"download.default_directory\": os.getcwd(),\n+        \"download.directory_upgrade\": True,\n+        \"download.prompt_for_download\": False,\n+    }\n+    options = webdriver.ChromeOptions()\n+    options.add_experimental_option(\"prefs\", prefs)\n+\n+    driver_path = ChromeDriverManager().install()\n+\n+\n+    # Initialise the browser using WebDriver Manager\n+    chrome_driver_binary = os.path.join(os.path.dirname(driver_path), 'chromedriver')\n+    \n+    service = Service(chrome_driver_binary)\n+    \n+    \n+    driver = webdriver.Chrome(service=service, options=options)\n+    return driver\n+\n def wait_for_page_to_load(driver, timeout=4):\n     WebDriverWait(driver, timeout).until(\n         lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n@@ -25,6 +55,158 @@ def count_datasets(driver, host):\n         amount_datasets = 0\n     return amount_datasets\n \n+def has_datasets_synced(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//div[@class='card-body']//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets\n+\n+def has_datasets_unsynced(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//div[@class='card-body']//div[@class='card-body']//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets>0\n+\n+def exist_published_datasets(driver, host):\n+    driver.get(f\"{host}/explore\")\n+    wait_for_page_to_load(driver)\n+    try:\n+        amount_datasets = len(driver.find_element(By.ID, 'results').find_elements(By.CSS_SELECTOR, 'div.card'))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets>0\n+\n+def get_url_detalles(driver, host):\n+    if exist_published_datasets(driver, host):\n+        result = driver.find_element(By.ID, 'results').find_element(By.XPATH, '//div[@class=\"card\"]//a').get_attribute('href')\n+    else:\n+        # Open the login page\n+        driver.get(f\"{host}/login\")\n+        wait_for_page_to_load(driver)\n+\n+        # Find the username and password field and enter the values\n+        email_field = driver.find_element(By.NAME, \"email\")\n+        password_field = driver.find_element(By.NAME, \"password\")\n+\n+        email_field.send_keys(\"user1@example.com\")\n+        password_field.send_keys(\"1234\")\n+\n+        # Send the form\n+        password_field.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        if has_datasets_synced(driver, host): # tiene datasets publicados, usar esos\n+            result = driver.find_element(By.XPATH, \"//div[@class='card-body']//table//tbody//tr//td//a\").get_attribute('href')\n+        elif has_datasets_unsynced(driver, host): # solo tiene datasets sin publicar\n+            result = f\"{host}\" + driver.find_element(By.XPATH, \"//div[@class='card-body']//div[@class='card-body']//table//tbody//tr//td//a\").get_attribute('href')\n+        else: # No tiene datasets, crear uno\n+            # Count initial datasets\n+            initial_datasets = count_datasets(driver, host)\n+\n+            # Open the upload dataset\n+            driver.get(f\"{host}/dataset/upload\")\n+            wait_for_page_to_load(driver)\n+\n+            datos_dataset = {\n+                \"titulo\": \"Titulo prueba bibtex\",\n+                \"descripcion\": \"Descripcion prueba bibtex\",\n+                \"tags\": \"tag1,tag2\"\n+            }\n+            autores_dataset = [\n+                    {\"name\": \"AutorBibtex0\", \"affiliation\": \"Club0\",\"orcid\":\"0000-0000-0000-0000\"},\n+                    {\"name\": \"AutorBibtex1\", \"affiliation\": \"Club1\"},\n+                    {\"name\": \"AutorBibtex3\", \"affiliation\": \"Club3\"}\n+            ]\n+\n+            # Find basic info and UVL model and fill values\n+            title_field = driver.find_element(By.NAME, \"title\")\n+            title_field.send_keys(datos_dataset.get(\"titulo\"))\n+            desc_field = driver.find_element(By.NAME, \"desc\")\n+            desc_field.send_keys(datos_dataset.get(\"descripcion\"))\n+            tags_field = driver.find_element(By.NAME, \"tags\")\n+            tags_field.send_keys(datos_dataset.get(\"tags\"))\n+\n+            # Add two authors and fill\n+            add_author_button = driver.find_element(By.ID, \"add_author\")\n+            add_author_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+            add_author_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+            name_field0 = driver.find_element(By.NAME, \"authors-0-name\")\n+            name_field0.send_keys(autores_dataset[0].get(\"name\"))\n+            affiliation_field0 = driver.find_element(By.NAME, \"authors-0-affiliation\")\n+            affiliation_field0.send_keys(autores_dataset[0].get(\"affiliation\"))\n+            orcid_field0 = driver.find_element(By.NAME, \"authors-0-orcid\")\n+            orcid_field0.send_keys(autores_dataset[0].get(\"orcid\"))\n+\n+            name_field1 = driver.find_element(By.NAME, \"authors-1-name\")\n+            name_field1.send_keys(autores_dataset[1].get(\"name\"))\n+            affiliation_field1 = driver.find_element(By.NAME, \"authors-1-affiliation\")\n+            affiliation_field1.send_keys(autores_dataset[1].get(\"affiliation\"))\n+\n+            # Obt\u00e9n las rutas absolutas de los archivos\n+            file1_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file1.uvl\")\n+            file2_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file2.uvl\")\n+\n+            # Subir el primer archivo\n+            dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+            dropzone.send_keys(file1_path)\n+            wait_for_page_to_load(driver)\n+\n+            # Subir el segundo archivo\n+            dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+            dropzone.send_keys(file2_path)\n+            wait_for_page_to_load(driver)\n+\n+            # Add authors in UVL models\n+            show_button = driver.find_element(By.ID, \"0_button\")\n+            show_button.send_keys(Keys.RETURN)\n+            add_author_uvl_button = driver.find_element(By.ID, \"0_form_authors_button\")\n+            add_author_uvl_button.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+            name_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-name\")\n+            name_field.send_keys(\"AutorBibtex3\")\n+            affiliation_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-affiliation\")\n+            affiliation_field.send_keys(\"Club3\")\n+\n+            # Check I agree and send form\n+            check = driver.find_element(By.ID, \"agreeCheckbox\")\n+            check.send_keys(Keys.SPACE)\n+            wait_for_page_to_load(driver)\n+\n+            upload_btn = driver.find_element(By.ID, \"upload_button\")\n+            upload_btn.send_keys(Keys.RETURN)\n+            \n+            wait_for_page_to_load(driver)\n+            time.sleep(2)  # Force wait time\n+\n+            assert driver.current_url == f\"{host}/dataset/list\", \"Test failed!\"\n+\n+            # Count final datasets\n+            final_datasets = count_datasets(driver, host)\n+            assert final_datasets == initial_datasets + 2, \"Test failed!\"\n+            \n+            listado_unsync = driver.find_element(By.CLASS_NAME, \"row\") # TODO: encontrar el primer elemento de tipo tbody\n+            dataset_creado = listado_unsync.find_element(By.XPATH, \"//table//tbody//tr\")\n+            \n+            info_dataset_creado = dataset_creado.find_elements(By.TAG_NAME, \"td\")\n+\n+            title_matches = info_dataset_creado[0].find_element(By.TAG_NAME, 'a').text==datos_dataset.get(\"titulo\")\n+            desc_matches = info_dataset_creado[1].text==datos_dataset.get(\"descripcion\")\n+            pub_type_matches = info_dataset_creado[2].text==\"None\"\n+\n+            assert title_matches and desc_matches and pub_type_matches, \"Test failed!\"\n+            result = f\"{host}\" + info_dataset_creado[0].find_element(By.TAG_NAME, 'a').get_attribute('href')\n+    return result\n \n def test_upload_dataset():\n     driver = initialize_driver()\n@@ -121,7 +303,7 @@ def test_upload_dataset():\n \n         # Count final datasets\n         final_datasets = count_datasets(driver, host)\n-        assert final_datasets == initial_datasets + 1, \"Test failed!\"\n+        assert final_datasets == initial_datasets + 2, \"Test failed!\"\n \n         print(\"Test passed!\")\n \n@@ -130,6 +312,249 @@ def test_upload_dataset():\n         # Close the browser\n         close_driver(driver)\n \n+def test_bibtex_preview():\n+    driver = initialize_driver()\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LA PREVIEW MUESTRA EL DATASET EXPORTADO A BIBTEX CORRECTAMENTE\n+        contenido_bibtex = driver.find_element(By.ID, \"bibtexContent\").text\n+        assert contenido_bibtex is not None and contenido_bibtex!=\"None\", \"Test failed!\"\n+\n+        lineas = contenido_bibtex.splitlines()\n+\n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        \n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+def test_bibtex_copy():\n+    driver = initialize_driver()\n+    \n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LOS DATOS SE COPIAN CORRECTAMENTE EN FORMATO BIBTEX\n+        bibtex_copy_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_copy_btn']\")\n+        bibtex_copy_btn.click()\n+        time.sleep(2)\n+        \n+\n+        try:\n+            driver.find_element(By.XPATH, \"//a[@href='/logout']\")\n+        except NoSuchElementException: # No ha iniciado sesion\n+            driver.get(f\"{host}/login\")\n+            wait_for_page_to_load(driver)\n+            \n+            # Find the username and password field and enter the values\n+            email_field = driver.find_element(By.NAME, \"email\")\n+            password_field = driver.find_element(By.NAME, \"password\")\n+\n+            email_field.send_keys(\"user1@example.com\")\n+            password_field.send_keys(\"1234\")\n+\n+            # Send the form\n+            password_field.send_keys(Keys.RETURN)\n+            wait_for_page_to_load(driver)\n+\n+        # Open the upload dataset\n+        driver.get(f\"{host}/dataset/upload\")\n+        wait_for_page_to_load(driver)\n+\n+        desc_field = driver.find_element(By.NAME, \"desc\")\n+        desc_field.send_keys(Keys.LEFT_CONTROL, 'v')\n+        \n+        lineas = desc_field.get_attribute(\"value\").strip().splitlines()\n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+\n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+def test_bibtex_download():\n+    driver = get_driver_with_download_cwdir()\n+    \n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        url_detalles = get_url_detalles(driver, host)\n+        \n+        # Accede a la vista de detalles del dataset\n+        driver.get(url_detalles)\n+        wait_for_page_to_load(driver)\n+\n+        bibtex_resultado = []\n+\n+        info_card = driver.find_element(By.CLASS_NAME, \"card-body\")\n+\n+        titulo = info_card.find_element(By.XPATH, \"//div//h1//b\").text.strip()\n+        year = info_card.find_element(By.CSS_SELECTOR, 'p.text-secondary').text.strip().split(\",\")[1].strip().split(\" \")[0].strip()\n+        \n+        aux_ = []\n+        for a_ in info_card.find_elements(By.XPATH, \"//div[normalize-space(.//span)='Authors']//p\"):\n+            a_n = a_.text.strip()\n+            if a_n.count(\"(\")>0:\n+                aux_.append(a_n.split(\"(\")[0].strip())\n+            else:\n+                aux_.append(a_n)\n+        autor = \" and \".join(aux_)\n+\n+        try:\n+            elemento_zenodo = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Zenodo record']//a\")\n+            howpublished = elemento_zenodo.get_attribute('href')\n+        except NoSuchElementException:\n+            howpublished = None\n+\n+        note = \"Accessed: {}\".format(str(datetime.now().date()))\n+        annote = info_card.find_element(By.XPATH, \"//div[normalize-space(.//span)='Description']//div//p\").text.strip()\n+\n+        bibtex_resultado.append(\"@misc{MiscUvl\" + titulo.strip().replace(\" \", \"\") + \",\")\n+        bibtex_resultado.append(\"author = {\" + autor + \"},\")\n+        bibtex_resultado.append(\"title = {\" + titulo + \"},\")\n+        if howpublished:\n+            bibtex_resultado.append(\"howpublished = {\" + howpublished + \"},\")\n+        bibtex_resultado.append(\"year = {\" + year + \"},\")\n+        bibtex_resultado.append(\"note = {\" + note + \"},\")\n+        bibtex_resultado.append(\"annote = {\" + annote + \"},\")\n+        bibtex_resultado.append(\"}\")\n+\n+        # Obtener el boton de preview de bibtex\n+        bibtex_preview_btn = driver.find_element(By.XPATH, \"//button[@id='bibtex_preview_btn']\")\n+        bibtex_preview_btn.click()\n+        wait_for_page_to_load(driver)\n+\n+        WebDriverWait(driver, 10).until(EC.text_to_be_present_in_element((By.ID, \"bibtexContent\"), \"@misc{\"))\n+        \n+        # COMPROBAR QUE LOS DATOS SE DESCARGAN CORRECTAMENTE EN FORMATO BIBTEX\n+        bibtex_download_btn = driver.find_element(By.XPATH, \"//a[@id='bibtexDownloadButton']\")\n+        bibtex_download_btn.click()\n+        time.sleep(2)\n+        \n+        file_path = os.path.join(os.getcwd(), bibtex_download_btn.get_attribute('download'))\n+\n+        lineas = []\n+\n+        with open(file_path, 'r', encoding='utf-8') as archivo:\n+            lineas.extend(archivo.readlines())\n+        os.remove(file_path)\n+        \n+        assert len(lineas)==len(bibtex_resultado), \"Test failed!\"\n+        for i in range(len(lineas)):\n+            assert lineas[i].strip()==bibtex_resultado[i].strip(), \"Test failed!\"\n+        \n+        print(\"Test passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n \n # Call the test function\n test_upload_dataset()\n+test_bibtex_preview()\n+test_bibtex_copy()\n+test_bibtex_download()\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "d8b46930389020e121f68b59294ad14c26bb5578",
    "node_id": "C_kwDONDG85doAKGQ4YjQ2OTMwMzg5MDIwZTEyMWY2OGI1OTI5NGFkMTRjMjZiYjU1Nzg",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-14T19:46:43Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-14T19:46:43Z"
      },
      "message": "fix(dataset): fixed bibtex field with invalid value for unsynched datasets",
      "tree": {
        "sha": "3ca13fa2ef9f06f1c23721b3d736931e655185ee",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/3ca13fa2ef9f06f1c23721b3d736931e655185ee"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/d8b46930389020e121f68b59294ad14c26bb5578",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d8b46930389020e121f68b59294ad14c26bb5578",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d8b46930389020e121f68b59294ad14c26bb5578",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d8b46930389020e121f68b59294ad14c26bb5578/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "876edb4d5084a9cc9db6cfb4e0bdaa27561c450e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/876edb4d5084a9cc9db6cfb4e0bdaa27561c450e",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/876edb4d5084a9cc9db6cfb4e0bdaa27561c450e"
      }
    ],
    "files": [
      {
        "sha": "cfb2ad07ac4f4d23b584e066d708e1f13866002d",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d8b46930389020e121f68b59294ad14c26bb5578/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d8b46930389020e121f68b59294ad14c26bb5578/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=d8b46930389020e121f68b59294ad14c26bb5578",
        "patch": "@@ -293,8 +293,10 @@ def get_unsynchronized_dataset(dataset_id):\n         \"annote\": ds_meta_data.description\n     }\n     texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n-    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n-    \n+    if ds_meta_data.deposition_id:\n+        bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    else:\n+        bibtex_propiedades.pop(\"howpublished\")\n     lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n     lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n "
      }
    ]
  },
  {
    "sha": "c21746a47175c9c30245e9c590a4dafd607b4955",
    "node_id": "C_kwDONDG85doAKGMyMTc0NmE0NzE3NWM5YzMwMjQ1ZTljNTkwYTRkYWZkNjA3YjQ5NTU",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-14T13:47:43Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-14T13:47:43Z"
      },
      "message": "fix(dataset): reorganised faulty code due to bad git conflict merge",
      "tree": {
        "sha": "5f6848a561c488f58a3c3b5859cb327b2e163206",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/5f6848a561c488f58a3c3b5859cb327b2e163206"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/c21746a47175c9c30245e9c590a4dafd607b4955",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c21746a47175c9c30245e9c590a4dafd607b4955",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c21746a47175c9c30245e9c590a4dafd607b4955",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c21746a47175c9c30245e9c590a4dafd607b4955/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7"
      }
    ],
    "files": [
      {
        "sha": "5a503969d21b686acd317e8d8396c923771290ec",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 16,
        "deletions": 114,
        "changes": 130,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c21746a47175c9c30245e9c590a4dafd607b4955/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c21746a47175c9c30245e9c590a4dafd607b4955/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=c21746a47175c9c30245e9c590a4dafd607b4955",
        "patch": "@@ -139,127 +139,16 @@ var currentId = 0;\n \n         window.onload = function () {\n \n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n+\t\ttest_zenodo_connection();\n \n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n-\n-        function downloadDataset(datasetId, format) {\n-            const url = `/dataset/download/${datasetId}/${format}`;\n-            window.location.href = url;\n-        }\n-        \n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n \t\t\t\tconsole.log(\"hi\");\n \t\t\t\tclean_upload_errors();\n \t\t\t\tshow_loading(\"check\");\n \n-\t\t\t\t\n+\n \t\t\t\tfetch('/dataset/check', {\n \t\t\t\t\tmethod: 'POST',\n \t\t\t\t\tbody: ''\n@@ -387,9 +276,22 @@ var currentId = 0;\n \n \n \t\t\t});\n-\t\t}\n+\t\t};\n+\t};\n+\n \n \n+function isValidOrcid(orcid) {\n+\tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+\treturn orcidRegex.test(orcid);\n+}\n+\n+function downloadDataset(datasetId, format) {\n+\tconst url = `/dataset/download/${datasetId}/${format}`;\n+\twindow.location.href = url;\n+}\n+        \n+\t\t\n function isValidOrcid(orcid) {\n \tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n \treturn orcidRegex.test(orcid);"
      }
    ]
  },
  {
    "sha": "876edb4d5084a9cc9db6cfb4e0bdaa27561c450e",
    "node_id": "C_kwDONDG85doAKDg3NmVkYjRkNTA4NGE5Y2M5ZGI2Y2ZiNGUwYmRhYTI3NTYxYzQ1MGU",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-14T09:21:54Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-14T09:21:54Z"
      },
      "message": "fix(dataset): added id to bibtex buttons for testing purposes",
      "tree": {
        "sha": "6b8027dccaf49d8ed3419452b358ae25cec4018d",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/6b8027dccaf49d8ed3419452b358ae25cec4018d"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/876edb4d5084a9cc9db6cfb4e0bdaa27561c450e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/876edb4d5084a9cc9db6cfb4e0bdaa27561c450e",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/876edb4d5084a9cc9db6cfb4e0bdaa27561c450e",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/876edb4d5084a9cc9db6cfb4e0bdaa27561c450e/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3de08af2771e0ba486dc575110bd89585e161678",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3de08af2771e0ba486dc575110bd89585e161678",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/3de08af2771e0ba486dc575110bd89585e161678"
      }
    ],
    "files": [
      {
        "sha": "c2a647f24808048b133237ed3ce6906e4b48f786",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/876edb4d5084a9cc9db6cfb4e0bdaa27561c450e/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/876edb4d5084a9cc9db6cfb4e0bdaa27561c450e/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=876edb4d5084a9cc9db6cfb4e0bdaa27561c450e",
        "patch": "@@ -191,7 +191,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n                 <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n-                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                <button id=\"bibtex_preview_btn\" onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                     <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n \n@@ -423,7 +423,7 @@ <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex\n                         style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n                         <i data-feather=\"download\"></i>\n                     </a>\n-                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                    <button id=\"bibtex_copy_btn\" onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n                         style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n                         <i data-feather=\"copy\"></i>\n                     </button>"
      }
    ]
  },
  {
    "sha": "396a5611a6f39f8072df0662e048498e8e375829",
    "node_id": "C_kwDONDG85doAKDM5NmE1NjExYTZmMzlmODA3MmRmMDY2MmUwNDg0OThlOGUzNzU4Mjk",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-13T19:59:26Z"
      },
      "committer": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-13T19:59:26Z"
      },
      "message": "fix(explore): Added __init__.py to tests folder",
      "tree": {
        "sha": "0c6441ab487c34115f78172457cd629c212c1ee8",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/0c6441ab487c34115f78172457cd629c212c1ee8"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/396a5611a6f39f8072df0662e048498e8e375829",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/396a5611a6f39f8072df0662e048498e8e375829",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/396a5611a6f39f8072df0662e048498e8e375829",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/396a5611a6f39f8072df0662e048498e8e375829/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8955afa2abcf8ec354c2de0a2bf9eab97adf56f9",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8955afa2abcf8ec354c2de0a2bf9eab97adf56f9",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/8955afa2abcf8ec354c2de0a2bf9eab97adf56f9"
      }
    ],
    "files": [
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/explore/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/396a5611a6f39f8072df0662e048498e8e375829/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/396a5611a6f39f8072df0662e048498e8e375829/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py?ref=396a5611a6f39f8072df0662e048498e8e375829"
      }
    ]
  },
  {
    "sha": "8955afa2abcf8ec354c2de0a2bf9eab97adf56f9",
    "node_id": "C_kwDONDG85doAKDg5NTVhZmEyYWJjZjhlYzM1NGMyZGUwYTJiZjllYWI5N2FkZjU2Zjk",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-13T18:36:58Z"
      },
      "committer": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-13T18:44:19Z"
      },
      "message": "feat(explore): add test for advanced filtering",
      "tree": {
        "sha": "aa54b8c03c1f0e8439594e3326a30eab89c9e3a4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/aa54b8c03c1f0e8439594e3326a30eab89c9e3a4"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/8955afa2abcf8ec354c2de0a2bf9eab97adf56f9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8955afa2abcf8ec354c2de0a2bf9eab97adf56f9",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/8955afa2abcf8ec354c2de0a2bf9eab97adf56f9",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8955afa2abcf8ec354c2de0a2bf9eab97adf56f9/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "84d3c5eb82758527b5226b963d7c0db1ad97688f",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/84d3c5eb82758527b5226b963d7c0db1ad97688f",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/84d3c5eb82758527b5226b963d7c0db1ad97688f"
      }
    ],
    "files": [
      {
        "sha": "76f065ed0e5628ded1f600437129886e692c1912",
        "filename": "app/modules/explore/tests/locustfile.py",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/8955afa2abcf8ec354c2de0a2bf9eab97adf56f9/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/8955afa2abcf8ec354c2de0a2bf9eab97adf56f9/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py?ref=8955afa2abcf8ec354c2de0a2bf9eab97adf56f9",
        "patch": "@@ -0,0 +1,38 @@\n+from flask import json\n+from locust import HttpUser, TaskSet, task\n+from core.locust.common import get_csrf_token, fake\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class ExploreBehavior(TaskSet):\n+\n+    @task\n+    def explore(self):\n+        response = self.client.get(\"/explore\")\n+        if response.status_code != 200:\n+            print(f\"Explore failed: {response.status_code}\")\n+\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/explore\",\n+                                    headers={\"Content-Type\": \"application/json\"},\n+                                    data=json.dumps({\n+                                        \"min_files\": fake.random_int(min=1, max=5),\n+                                        \"max_files\": fake.random_int(min=2, max=6),\n+                                        \"max_depth\": fake.random_int(min=0, max=3),\n+                                        \"min_depth\": fake.random_int(min=2, max=6),\n+                                        \"min_leaf_count\": fake.random_int(min=0, max=10),\n+                                        \"max_leaf_count\": fake.random_int(min=5, max=15),\n+                                        \"min_av_branching_factor\": fake.random_int(min=0, max=2),\n+                                        \"max_av_branching_factor\": fake.random_int(min=1, max=4),\n+                                        \"csrf_token\": csrf_token\n+                                    }))\n+        if response.status_code != 200:\n+            print(f\"Filtering failed: {response.status_code}\")\n+\n+\n+class ExploreUser(HttpUser):\n+    tasks = [ExploreBehavior]\n+    min_wait = 3000\n+    max_wait = 7000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "af6dc70b6dbebb8fb5f738dacf05ce9157ab807b",
        "filename": "app/modules/explore/tests/test_selenium.py",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/8955afa2abcf8ec354c2de0a2bf9eab97adf56f9/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/8955afa2abcf8ec354c2de0a2bf9eab97adf56f9/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py?ref=8955afa2abcf8ec354c2de0a2bf9eab97adf56f9",
        "patch": "@@ -0,0 +1,69 @@\n+import pytest\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n+from selenium.common.exceptions import TimeoutException, NoSuchElementException\n+from core.selenium.common import initialize_driver, close_driver\n+import time\n+\n+\n+def test_check_smallest_first():\n+    driver = initialize_driver()\n+    try:\n+        driver.get(\"http://localhost:5000/explore\")\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.XPATH, \"//input[@value='filesize_asc']\"))\n+        )\n+        driver.execute_script(\"arguments[0].click();\", results_container)\n+        time.sleep(3)\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"results\"))\n+        )\n+        first_result = WebDriverWait(results_container, 10).until(\n+            EC.presence_of_element_located((By.CSS_SELECTOR, \"div:nth-child(1)\"))\n+        )\n+        dataset_name = first_result.text\n+\n+        assert \"Sample dataset 4\" in dataset_name, f\"Test failed: Expected 'Sample dataset 4', but got '{dataset_name}'\"\n+        print(\"Test passed: The first dataset is 'Sample dataset 4'.\")\n+\n+    except TimeoutException:\n+        pytest.fail(\"Error: Timeout while waiting for elements to load.\")\n+    except NoSuchElementException:\n+        pytest.fail(\"Error: Unable to locate the required element.\")\n+    except AssertionError as e:\n+        pytest.fail(f\"Test failed: {e}\")\n+\n+    finally:\n+        close_driver(driver)\n+\n+\n+def test_check_largest_first():\n+    driver = initialize_driver()\n+    try:\n+        driver.get(\"http://localhost:5000/explore\")\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.XPATH, \"//input[@value='filesize_desc']\"))\n+        )\n+        driver.execute_script(\"arguments[0].click();\", results_container)\n+        time.sleep(3)\n+        results_container = WebDriverWait(driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"results\"))\n+        )\n+        first_result = WebDriverWait(results_container, 10).until(\n+            EC.presence_of_element_located((By.CSS_SELECTOR, \"div:nth-child(1)\"))\n+        )\n+        dataset_name = first_result.text\n+\n+        assert \"Sample dataset 2\" in dataset_name, f\"Test failed: Expected 'Sample dataset 2', but got '{dataset_name}'\"\n+        print(\"Test passed: The first dataset is 'Sample dataset 2'.\")\n+\n+    except TimeoutException:\n+        pytest.fail(\"Error: Timeout while waiting for elements to load.\")\n+    except NoSuchElementException:\n+        pytest.fail(\"Error: Unable to locate the required element.\")\n+    except AssertionError as e:\n+        pytest.fail(f\"Test failed: {e}\")\n+\n+    finally:\n+        close_driver(driver)"
      },
      {
        "sha": "807e875b2e27d5042de49bc098de4213f072aa83",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "added",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/8955afa2abcf8ec354c2de0a2bf9eab97adf56f9/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/8955afa2abcf8ec354c2de0a2bf9eab97adf56f9/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=8955afa2abcf8ec354c2de0a2bf9eab97adf56f9",
        "patch": "@@ -0,0 +1,100 @@\n+import pytest\n+from app.modules.explore.services import ExploreService\n+from app.modules.auth.seeders import AuthSeeder\n+from app.modules.dataset.seeders import DataSetSeeder\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Fixture that sets up the test environment by initializing necessary data:\n+    - Seeds users via AuthSeeder.\n+    - Seeds datasets via DataSetSeeder.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        users = AuthSeeder()\n+        users.run()\n+\n+        seeder = DataSetSeeder()\n+        seeder.run()\n+\n+    yield test_client\n+\n+\n+def test_filtering_service_file_count(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the number of files within the specified range (0 to 10).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_files=0, max_files=10)\n+    expected_dataset_count = 4  # Expected all datasets, 4.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_num_of_leaf(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the number of leaf nodes within the specified range (2 to 6).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_leaf_count=2, max_leaf_count=6)\n+    expected_dataset_count = 1  # Expect only dataset 4, as it is the file \"file10.uvl,\" which has 6 leaves.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_depth(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the depth within the specified range (3 to 10).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_depth=3, max_depth=10)\n+    expected_dataset_count = 3\n+    # Expect all datasets except dataset 3, as it is the file \"file10.uvl,\" which has a depth of 2.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_average_branching_factor(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the average branching factor within the specified range (0 to 2).\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(min_av_branching_factor=0, max_av_branching_factor=2)\n+    expected_dataset_count = 2\n+    # Expect datasets \"sample dataset 2\" and \"sample dataset 4\" for the file \"file5.uvl\"\n+    # and \"file10.uvl\" as both files have an average branching factor of 2.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_leaf_feature_name(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the leaf feature name \"Server\".\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(leaf_feature_name=\"Server\")\n+    expected_dataset_count = 2\n+    # Expected datasets \"sample dataset 1\" and \"sample dataset 3\" for the files \"file1.uvl\"\n+    # and \"file9.uvl\" as they are identical and contain \"Server\" in the leaf feature name.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\"\n+\n+\n+def test_filtering_service_core_feature_name(test_client):\n+    \"\"\"\n+    Test to ensure that the filtering service correctly counts datasets\n+    based on the core feature name \"FitnessMonitor\".\n+    \"\"\"\n+    explore_service = ExploreService()\n+    datasets = explore_service.filter(core_feature_name=\"FitnessMonitor\")\n+    expected_dataset_count = 2\n+    # Expected datasets \"sample dataset 1\" and \"sample dataset 2\" for the files \"file2.uvl\"\n+    # and \"file5.uvl\" as they contain \"FitnessMonitor\" in the core feature name.\n+    assert len(datasets) == expected_dataset_count, \\\n+        f\"Expected {expected_dataset_count} datasets, but got {len(datasets)}\""
      }
    ]
  },
  {
    "sha": "effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
    "node_id": "C_kwDONDG85doAKGVmZmUzMWFhZDdjZTI4ZmZiNDJmOWZlNGRkODg3YzUwZTBiZjI2ZDc",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-12-13T17:00:13Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-13T17:00:13Z"
      },
      "message": "Merge pull request #29 from flamenquin-hub-single/develop\n\nVersion 1.0",
      "tree": {
        "sha": "e20354eadc0171ad7d8c9e9fcf2cae7fefb5ebad",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/e20354eadc0171ad7d8c9e9fcf2cae7fefb5ebad"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnXGgdCRC1aQ7uu5UhlAAAd30QAGay6Q1Lxo12mja8k2kW6E57\nGbtHAX2eAId3lliC2fga/DvJWRFV1c2SwcX2GeKsmwzwQ6lEj0AI4pj7hHvkVh4G\nS6bt4k/v3TMaZzUlbttUSgKvqdfM8rw16kyzzs++109ZYMyU7Kih/gqJbJnBnLGl\nqlaH4Z/s+gYWP/tItwZ7/tnYmR/EIceyAdcpCrYtrIOl+ZWNuUd2J22wNINfxQf4\nWMaH1YN5p6KQB+t8YNnLB78vqfwIjADovwQiYJIkgcVr4QBhF1pzDcv55ylMT947\n5Pu+tzRoRgxgsLXRu7b1w65v8HCPNI6HVxCZja1YA+5wp6wp6/kUrWJiKqW2+r9/\noQkCViVUFllO/k3rYlL3eSt1/Krzt9bWgkfKmnMSgIDWuY757Adg8Dq0mDNKEQH/\nVpahVy0BvZaLrJFMLXlQYsGgl2WWH7D8JCmsjKv5cVlOZkP19aIj3YEJOBKI+4zL\nzsF0GBn+OjtWSh02mDJwLSr3B11hLLhu9tYiw8nh9B+BX3y1k+gL2YvcW/1fQeP2\nFNZY5HWlhk5ZOPked3w82UTjA9mXijyRIDb759UMDksXIyhmlJ8VP6W/cot5aPj7\nBwWmPuEIbUD280MTcW0moX0FeXnR0h5eLNMO/7DFvoTMHRw3TH+YfLoJswiBbocQ\n2J+jRStTph4xrbZePvmU\n=1OAq\n-----END PGP SIGNATURE-----\n",
        "payload": "tree e20354eadc0171ad7d8c9e9fcf2cae7fefb5ebad\nparent aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a\nparent 3de08af2771e0ba486dc575110bd89585e161678\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1734109213 +0100\ncommitter GitHub <noreply@github.com> 1734109213 +0100\n\nMerge pull request #29 from flamenquin-hub-single/develop\n\nVersion 1.0",
        "verified_at": "2024-12-13T17:01:43Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a"
      },
      {
        "sha": "3de08af2771e0ba486dc575110bd89585e161678",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3de08af2771e0ba486dc575110bd89585e161678",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/3de08af2771e0ba486dc575110bd89585e161678"
      }
    ],
    "files": [
      {
        "sha": "3a4460bd0a2880b2fee2b1af57cf067bd57495e0",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,18 +1,19 @@\n-name: Commits Syntax Checker\n+name: Commit Message Check\n \n-on:\n+on: \n   pull_request:\n-    branches: [main]\n+    branches: [develop]\n     types: [opened, reopened, edited, review_requested, synchronize]\n   push:\n     branches:\n       - \"main\"\n+      - \"develop\"\n   workflow_call:\n \n jobs:\n-  check:\n+  commit-check:\n     name: Conventional Commits\n     runs-on: ubuntu-latest\n     steps:\n       - uses: actions/checkout@v2\n-      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file\n+      - uses: webiny/action-conventional-commits@v1.0.3"
      },
      {
        "sha": "c5b9dbad0e7570244cb84942b53b859bf041af6c",
        "filename": ".github/workflows/deloyment_on_webhook.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeloyment_on_webhook.yml?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -1,32 +0,0 @@\n-name: Deploy on Webhook\n-\n-on:\n-  workflow_run:\n-    workflows: \n-      - \"Python Lint\"\n-      - \"Run tests\"\n-    types:\n-      - completed\n-\n-jobs:\n-  deploy:\n-    if: github.ref == 'refs/heads/main'\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Check lint and test results\n-      run: |\n-        if [ \"${{ github.event.workflow_run.conclusion }}\" != \"success\" ]; then\n-          echo \"Lint or Test workflow did not succeed. Exiting.\"\n-          exit 1\n-        fi\n-\n-    - name: Trigger Deployment Webhook\n-      env:\n-        WEBHOOK_DOMAIN: ${{ secrets.WEBHOOK_DOMAIN }}\n-        WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}\n-      run: |\n-        curl -X POST https://${{ secrets.WEBHOOK_DOMAIN }}/webhook/deploy -H \"Authorization: Bearer ${{ secrets.WEBHOOK_TOKEN }}\""
      },
      {
        "sha": "f7dfe75eb96badbdd3ee434377bee31f33a173df",
        "filename": ".github/workflows/deployment_on_dockerhub.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -1,43 +0,0 @@\n-# This workflow uses actions that are not certified by GitHub.\n-# They are provided by a third-party and are governed by\n-# separate terms of service, privacy policy, and support\n-# documentation.\n-\n-# GitHub recommends pinning actions to a commit SHA.\n-# To get a newer version, you will need to update the SHA.\n-# You can also reference a tag or branch, but the action may change without warning.\n-\n-name: Publish image in Docker Hub\n-\n-on:\n-  release:\n-    types: [published]\n-\n-jobs:\n-  push_to_registry:\n-    name: Push Docker image to Docker Hub\n-    runs-on: ubuntu-latest\n-    steps:\n-      - name: Check out the repo\n-        uses: actions/checkout@v3\n-\n-      - name: Log in to Docker Hub\n-        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a\n-        with:\n-          username: ${{ secrets.DOCKER_USER }}\n-          password: ${{ secrets.DOCKER_PASSWORD }}\n-\n-      - name: Build and push Docker image\n-        run: docker build --build-arg VERSION_TAG=${{ github.event.release.tag_name }} -t drorganvidez/uvlhub:${{ github.event.release.tag_name }} -f docker/images/Dockerfile.prod .\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled\n-\n-      - name: Push Docker image to Docker Hub\n-        run: docker push drorganvidez/uvlhub:${{ github.event.release.tag_name }}\n-\n-      - name: Tag and push latest\n-        run: |\n-          docker tag drorganvidez/uvlhub:${{ github.event.release.tag_name }} drorganvidez/uvlhub:latest\n-          docker push drorganvidez/uvlhub:latest\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled"
      },
      {
        "sha": "ccbd3311ba585fae0de19dc7a96de461fce8de9c",
        "filename": ".github/workflows/lint.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2Fworkflows%2Flint.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2Fworkflows%2Flint.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Flint.yml?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -1,28 +0,0 @@\n-name: Python Lint\n-\n-on:\n-  push:\n-    branches: [main, develop]\n-  pull_request:\n-    branches: [main, develop]\n-\n-jobs:\n-  lint:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - uses: actions/checkout@v2\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: '3.x'\n-\n-    - name: Install Dependencies\n-      run: |\n-        python -m pip install --upgrade pip\n-        pip install flake8\n-\n-    - name: Lint with flake8\n-      run: |\n-        flake8 app"
      },
      {
        "sha": "b9ea75aabfdbeb0e5b637b8d0741cec8dc7d86a2",
        "filename": ".github/workflows/render.yml",
        "status": "added",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,73 @@\n+name: Deploy develop branch to Render\n+\n+on:\n+    push:\n+      branches:\n+        - develop\n+    pull_request:\n+      branches:\n+        - develop\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+      with:\n+        ref: 'develop'\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_DEVELOP }}\n+          ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+          GH_TOKEN: ${{ secrets.GH_TOKEN }}\n+          GH_PAT: ${{ secrets.GH_PAT }}\n+          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}\n+        run: |\n+          curl \"$deploy_url\"\n+      \n\\ No newline at end of file"
      },
      {
        "sha": "5da736f7ffdcb35e11a740078b764998001a201b",
        "filename": ".github/workflows/render_main.yml",
        "status": "added",
        "additions": 70,
        "deletions": 0,
        "changes": 70,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/.github%2Fworkflows%2Frender_main.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/.github%2Fworkflows%2Frender_main.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender_main.yml?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,70 @@\n+name: Deploy main branch to Render\n+\n+on:\n+    push:\n+      branches:\n+        - main\n+    pull_request:\n+      branches:\n+        - main\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_RENDER }}\n+          ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+          GH_TOKEN: ${{ secrets.GH_TOKEN }}\n+          GH_PAT: ${{ secrets.GH_PAT }}\n+        run: |\n+          curl \"$deploy_url\"\n+      "
      },
      {
        "sha": "8ad25762a0dbb9b820352c6abaf50a7e089c893d",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -46,5 +46,6 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n       run: |\n-        pytest app/modules/ --ignore-glob='*selenium*'\n+        pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      },
      {
        "sha": "b0431891f8f32b950472e8d4adf47ba6b271e288",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitignore?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,7 +1,6 @@\n .env\n __pycache__/\n .idea\n-uploads/\n app.log\n .DS_Store\n rosemary.egg-info/"
      },
      {
        "sha": "fdd63b05e87cb4c63240ad04afb83e89340a1d1c",
        "filename": "app/__init__.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2F__init__.py?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -67,4 +67,4 @@ def inject_vars_into_jinja():\n     return app\n \n \n-app = create_app()\n+app = create_app()\n\\ No newline at end of file"
      },
      {
        "sha": "c8105b78321f80b32919280eedbd30d2feeed6e7",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 106,
        "deletions": 2,
        "changes": 108,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,15 +1,28 @@\n-from flask import render_template, redirect, url_for, request\n+import os\n+import shutil\n+import subprocess\n+from flask import Flask, jsonify, render_template, redirect, url_for, request\n from flask_login import current_user, login_user, logout_user\n-\n+import requests\n from app.modules.auth import auth_bp\n from app.modules.auth.forms import SignupForm, LoginForm\n from app.modules.auth.services import AuthenticationService\n from app.modules.profile.services import UserProfileService\n+from flask_dance.contrib.github import make_github_blueprint, github\n \n \n authentication_service = AuthenticationService()\n user_profile_service = UserProfileService()\n \n+app = Flask(__name__)\n+token_admin = os.getenv(\"ORG_TOKEN_ADMIN\")\n+client_secret = os.getenv(\"CLIENT_SECRET\")\n+\n+\n+github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g', client_secret=client_secret)\n+\n+app.register_blueprint(github_blueprint, url_prefix='/github_login')\n+\n \n @auth_bp.route(\"/signup/\", methods=[\"GET\", \"POST\"])\n def show_signup_form():\n@@ -53,3 +66,94 @@ def login():\n def logout():\n     logout_user()\n     return redirect(url_for('public.index'))\n+\n+\n+@auth_bp.route('/gitlogin')\n+def github_login():\n+    \n+   if not github.authorized:\n+        return redirect(url_for('github.login'))\n+   else:\n+       account_info = github.get('/user/repos')\n+       if account_info.ok:\n+           account_info_json = account_info.json()\n+           return 'Your github account is already sync with uvlhub.'\n+\n+   return 'Request failed!'\n+\n+\n+@auth_bp.route('/invite', methods=['GET', 'POST'])\n+def invite_user():\n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return 'First sync your github account.'\n+              \n+    url = f'https://api.github.com/orgs/uvlhub/invitations'  \n+    headers = {\n+        'Authorization': f'token {token_admin}',\n+        'Accept': 'application/vnd.github.v3+json'\n+    }\n+    payload = {\n+        \"invitee_id\": None, \n+    }\n+\n+    # OBTENER EL ID DEL USUARIO DE GITHUB\n+    user_url = f'https://api.github.com/users/{username}'\n+    user_response = requests.get(user_url, headers=headers)\n+    \n+    if user_response.status_code == 200:\n+        user_id = user_response.json().get(\"id\")\n+        payload[\"invitee_id\"] = user_id  \n+        \n+    elif user_response.status_code == 404:\n+        return jsonify({\"error\": f\"Can't find the user: {username}\"}), 404\n+    else:\n+        return jsonify({\"error\": f\"Something went wrong\"}), user_response.status_code\n+        \n+    response = requests.post(url, json=payload, headers=headers)\n+\n+    if response.status_code == 201:\n+        return f\"Now {username} can join our github organization. Accept it in github. Once joined, you don't have to repeat this process.\"\n+    \n+    elif response.status_code == 404:\n+        return jsonify({\"error\": f\"Username {username} not found\"}), 404\n+    \n+    elif response.status_code == 422:\n+        return f'User {username} already belongs to our github organization or have a valid invitation to join. You have to find out in github.'\n+    \n+    else:\n+        return jsonify({\"error\": \"Can't send the invitation\", \"details\": response.json()}), response.status_code\n+    \n+\n+\n+@auth_bp.route('/create_repo', methods=['GET', 'POST'])\n+def crear_repo():\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return 'First sync your github account.'\n+\n+    comando = f\"gh repo create uvlhub/{username} --public\"\n+    url_repo = f\"https://github.com/uvlhub/{username}.git\"\n+    \n+    try:\n+        \n+        subprocess.run(comando, check=True, shell=True)\n+        directory = f\"/app/uvl_git/{username}\"\n+        os.makedirs(directory, exist_ok=True)\n+        subprocess.run(f\"git clone {url_repo} {directory}\",cwd=directory, check=True, shell=True)\n+        return f\"Repository '{username}' created in our github organization correctly.\"\n+    \n+    except subprocess.CalledProcessError as e:\n+        \n+        return (\n+            f\"Something went wrong, it may be caused by:<br>\"\n+            f\"1) Repository '{username}' is already created. Don't worry, now always you are sync with github, you can push from here your datasets or models to github.<br>\"\n+            f\"2) If you are a developer on localhost, you will have to give administrator permission.\"\n+        )    "
      },
      {
        "sha": "a76c25ccdf881eb721e29af34f2d893b5fb6d677",
        "filename": "app/modules/auth/services.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fauth%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fauth%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fservices.py?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -9,6 +9,7 @@\n from core.configuration.configuration import uploads_folder_name\n from core.services.BaseService import BaseService\n \n+os.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'\n \n class AuthenticationService(BaseService):\n     def __init__(self):"
      },
      {
        "sha": "e9ebaefb7b58ae220dcdaedf018126e58f6149b8",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 113,
        "deletions": 1,
        "changes": 114,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -139,6 +139,119 @@ var currentId = 0;\n \n         window.onload = function () {\n \n+            test_zenodo_connection();\n+\n+            document.getElementById('upload_button').addEventListener('click', function () {\n+\n+                clean_upload_errors();\n+                show_loading();\n+\n+                // check title and description\n+                let check = check_title_and_description();\n+\n+                if (check) {\n+                    // process data form\n+                    const formData = {};\n+\n+                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                        const form = document.getElementById(formId);\n+                        const inputs = form.querySelectorAll('input, select, textarea');\n+                        inputs.forEach(input => {\n+                            if (input.name) {\n+                                formData[input.name] = formData[input.name] || [];\n+                                formData[input.name].push(input.value);\n+                            }\n+                        });\n+                    });\n+\n+                    let formDataJson = JSON.stringify(formData);\n+                    console.log(formDataJson);\n+\n+                    const csrfToken = document.getElementById('csrf_token').value;\n+                    const formUploadData = new FormData();\n+                    formUploadData.append('csrf_token', csrfToken);\n+\n+                    for (let key in formData) {\n+                        if (formData.hasOwnProperty(key)) {\n+                            formUploadData.set(key, formData[key]);\n+                        }\n+                    }\n+\n+                    let checked_orcid = true;\n+                    if (Array.isArray(formData.author_orcid)) {\n+                        for (let orcid of formData.author_orcid) {\n+                            orcid = orcid.trim();\n+                            if (orcid !== '' && !isValidOrcid(orcid)) {\n+                                hide_loading();\n+                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                                checked_orcid = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    let checked_name = true;\n+                    if (Array.isArray(formData.author_name)) {\n+                        for (let name of formData.author_name) {\n+                            name = name.trim();\n+                            if (name === '') {\n+                                hide_loading();\n+                                write_upload_error(\"The author's name cannot be empty\");\n+                                checked_name = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    if (checked_orcid && checked_name) {\n+                        fetch('/dataset/upload', {\n+                            method: 'POST',\n+                            body: formUploadData\n+                        })\n+                            .then(response => {\n+                                if (response.ok) {\n+                                    console.log('Dataset sent successfully');\n+                                    response.json().then(data => {\n+                                        console.log(data.message);\n+                                        window.location.href = \"/dataset/list\";\n+                                    });\n+                                } else {\n+                                    response.json().then(data => {\n+                                        console.error('Error: ' + data.message);\n+                                        hide_loading();\n+\n+                                        write_upload_error(data.message);\n+\n+                                    });\n+                                }\n+                            })\n+                            .catch(error => {\n+                                console.error('Error in POST request:', error);\n+                            });\n+                    }\n+\n+\n+                } else {\n+                    hide_loading();\n+                }\n+\n+\n+            });\n+        };\n+\n+\n+        function isValidOrcid(orcid) {\n+            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+            return orcidRegex.test(orcid);\n+        }\n+\n+        function downloadDataset(datasetId, format) {\n+            const url = `/dataset/download/${datasetId}/${format}`;\n+            window.location.href = url;\n+        }\n+        \n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n@@ -275,7 +388,6 @@ var currentId = 0;\n \n \t\t\t});\n \t\t}\n-\t};\n \n \n function isValidOrcid(orcid) {"
      },
      {
        "sha": "bea556e6faeac932fc225d0430e8bfb3d8ee2a7c",
        "filename": "app/modules/dataset/repositories.py",
        "status": "modified",
        "additions": 33,
        "deletions": 2,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,5 +1,6 @@\n from datetime import datetime, timezone\n import logging\n+import re\n from flask_login import current_user\n from typing import Optional\n \n@@ -38,7 +39,7 @@ def __init__(self):\n \n     def filter_by_doi(self, doi: str) -> Optional[DSMetaData]:\n         return self.model.query.filter_by(dataset_doi=doi).first()\n-\n+    \n \n class DSViewRecordRepository(BaseRepository):\n     def __init__(self):\n@@ -113,7 +114,37 @@ def latest_synchronized(self):\n             .limit(5)\n             .all()\n         )\n-\n+        \n+    def get_all_files_for_dataset(self, dataset_id: int):\n+        dataset = self.model.query.get(dataset_id)\n+        if not dataset:\n+            return None\n+        all_files = []\n+        for feature_model in dataset.feature_models:\n+            all_files.extend(feature_model.files)\n+        return all_files\n+    \n+    def _normalize_folder_name(self, folder_name: str) -> str:\n+   \n+        normalized_name = re.sub(r'[^\\w\\s-]', '', folder_name)\n+        normalized_name = re.sub(r'\\s+', '_', normalized_name.strip())\n+        return normalized_name\n+    \n+    def get_dataset_name(self, dataset_id: int) -> str:\n+        dataset = (\n+        self.model.query\n+        .filter_by(id=dataset_id)\n+        .first()\n+    )\n+        if dataset and dataset.ds_meta_data:\n+            title = dataset.ds_meta_data.title\n+            return self._normalize_folder_name(title)\n+        \n+        return None\n+    \n+\n+\n+    \n \n class DOIMappingRepository(BaseRepository):\n     def __init__(self):"
      },
      {
        "sha": "a6a251eeb11690091da84b66796c075f41bfb048",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 158,
        "deletions": 91,
        "changes": 249,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -2,28 +2,19 @@\n import os\n import json\n import shutil\n+import subprocess\n import tempfile\n import uuid\n from datetime import datetime, timezone\n from zipfile import ZipFile\n-\n-from flask import (\n-    redirect,\n-    render_template,\n-    request,\n-    jsonify,\n-    send_from_directory,\n-    make_response,\n-    abort,\n-    url_for,\n-)\n+from flask import jsonify, redirect, url_for, render_template, request, send_from_directory, make_response, abort\n from flask_login import login_required, current_user\n-\n+import requests\n+from app.modules.dataset.repositories import DSMetaDataRepository\n from app.modules.dataset.forms import DataSetForm\n-from app.modules.dataset.models import (\n-    DSDownloadRecord\n-)\n+from app.modules.dataset.models import DSDownloadRecord\n from app.modules.dataset import dataset_bp\n+from app.modules.dataset.repositories import DataSetRepository\n from app.modules.dataset.services import (\n     AuthorService,\n     DSDownloadRecordService,\n@@ -32,10 +23,12 @@\n     DataSetService,\n     DOIMappingService\n )\n+from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n+from flask_dance.contrib.github import github\n \n-logger = logging.getLogger(__name__)\n \n+logger = logging.getLogger(__name__)\n \n dataset_service = DataSetService()\n author_service = AuthorService()\n@@ -44,13 +37,11 @@\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n \n-\n @dataset_bp.route(\"/dataset/upload\", methods=[\"GET\", \"POST\"])\n @login_required\n def create_dataset():\n     form = DataSetForm()\n     if request.method == \"POST\":\n-\n         dataset = None\n \n         if not form.validate_on_submit():\n@@ -62,8 +53,8 @@ def create_dataset():\n             logger.info(f\"Created dataset: {dataset}\")\n             dataset_service.move_feature_models(dataset)\n         except Exception as exc:\n-            logger.exception(f\"Exception while create dataset data in local {exc}\")\n-            return jsonify({\"Exception while create dataset data in local: \": str(exc)}), 400\n+            logger.exception(f\"Exception while creating dataset data in local {exc}\")\n+            return jsonify({\"Exception while creating dataset data in local\": str(exc)}), 400\n \n         # send dataset as deposition to Zenodo\n         data = {}\n@@ -74,30 +65,22 @@ def create_dataset():\n         except Exception as exc:\n             data = {}\n             zenodo_response_json = {}\n-            logger.exception(f\"Exception while create dataset data in Zenodo {exc}\")\n+            logger.exception(f\"Exception while creating dataset data in Zenodo {exc}\")\n \n         if data.get(\"conceptrecid\"):\n             deposition_id = data.get(\"id\")\n-\n-            # update dataset with deposition id in Zenodo\n             dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n \n             try:\n-                # iterate for each feature model (one feature model = one request to Zenodo)\n                 for feature_model in dataset.feature_models:\n                     zenodo_service.upload_file(dataset, deposition_id, feature_model)\n-\n-                # publish deposition\n                 zenodo_service.publish_deposition(deposition_id)\n-\n-                # update DOI\n                 deposition_doi = zenodo_service.get_doi(deposition_id)\n                 dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n             except Exception as e:\n-                msg = f\"it has not been possible upload feature models in Zenodo and update the DOI: {e}\"\n+                msg = f\"it has not been possible to upload feature models in Zenodo and update the DOI: {e}\"\n                 return jsonify({\"message\": msg}), 200\n \n-        # Delete temp folder\n         file_path = current_user.temp_folder()\n         if os.path.exists(file_path) and os.path.isdir(file_path):\n             shutil.rmtree(file_path)\n@@ -107,7 +90,6 @@ def create_dataset():\n \n     return render_template(\"dataset/upload_dataset.html\", form=form)\n \n-\n @dataset_bp.route(\"/dataset/list\", methods=[\"GET\", \"POST\"])\n @login_required\n def list_dataset():\n@@ -144,9 +126,6 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-\n-\n-\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -156,14 +135,12 @@ def upload():\n     if not file or not file.filename.endswith(\".uvl\"):\n         return jsonify({\"message\": \"No valid file\"}), 400\n \n-    # create temp folder\n     if not os.path.exists(temp_folder):\n         os.makedirs(temp_folder)\n \n     file_path = os.path.join(temp_folder, file.filename)\n \n     if os.path.exists(file_path):\n-        # Generate unique filename (by recursion)\n         base_name, extension = os.path.splitext(file.filename)\n         i = 1\n         while os.path.exists(\n@@ -190,8 +167,6 @@ def upload():\n         200,\n     )\n \n-\n-\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()\n@@ -205,23 +180,18 @@ def delete():\n \n     return jsonify({\"error\": \"Error: File not found\"})\n \n-\n @dataset_bp.route(\"/dataset/download/<int:dataset_id>\", methods=[\"GET\"])\n def download_dataset(dataset_id):\n     dataset = dataset_service.get_or_404(dataset_id)\n-\n     file_path = f\"uploads/user_{dataset.user_id}/dataset_{dataset.id}/\"\n-\n     temp_dir = tempfile.mkdtemp()\n     zip_path = os.path.join(temp_dir, f\"dataset_{dataset_id}.zip\")\n \n     with ZipFile(zip_path, \"w\") as zipf:\n         for subdir, dirs, files in os.walk(file_path):\n             for file in files:\n                 full_path = os.path.join(subdir, file)\n-\n                 relative_path = os.path.relpath(full_path, file_path)\n-\n                 zipf.write(\n                     full_path,\n                     arcname=os.path.join(\n@@ -231,10 +201,7 @@ def download_dataset(dataset_id):\n \n     user_cookie = request.cookies.get(\"download_cookie\")\n     if not user_cookie:\n-        user_cookie = str(\n-            uuid.uuid4()\n-        )  # Generate a new unique identifier if it does not exist\n-        # Save the cookie to the user's browser\n+        user_cookie = str(uuid.uuid4())\n         resp = make_response(\n             send_from_directory(\n                 temp_dir,\n@@ -252,15 +219,13 @@ def download_dataset(dataset_id):\n             mimetype=\"application/zip\",\n         )\n \n-    # Check if the download record already exists for this cookie\n     existing_record = DSDownloadRecord.query.filter_by(\n         user_id=current_user.id if current_user.is_authenticated else None,\n         dataset_id=dataset_id,\n         download_cookie=user_cookie\n     ).first()\n \n     if not existing_record:\n-        # Record the download in your database\n         DSDownloadRecordService().create(\n             user_id=current_user.id if current_user.is_authenticated else None,\n             dataset_id=dataset_id,\n@@ -270,76 +235,178 @@ def download_dataset(dataset_id):\n \n     return resp\n \n-\n @dataset_bp.route(\"/doi/<path:doi>/\", methods=[\"GET\"])\n def subdomain_index(doi):\n-\n-    # Check if the DOI is an old DOI\n     new_doi = doi_mapping_service.get_new_doi(doi)\n     if new_doi:\n-        # Redirect to the same path with the new DOI\n         return redirect(url_for('dataset.subdomain_index', doi=new_doi), code=302)\n \n-    # Try to search the dataset by the provided DOI (which should already be the new one)\n     ds_meta_data = dsmetadata_service.filter_by_doi(doi)\n \n     if not ds_meta_data:\n         abort(404)\n \n-    # Get dataset\n     dataset = ds_meta_data.data_set\n-\n-\n+    \n     # Export DataSet to BibTex\n-    closing_ = \"},\"\n-    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n-    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n-    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n     \n-    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n-        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    else:\n-        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n-    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n-    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n-\n-    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n-    bibtex_properties.append(\"}\")\n-    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n     \n-    max_preview_len = 60\n-    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n \n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    \n-    n_px = 17*(int(len(bibtex_properties)/2)+1)\n-\n-    page_render = render_template(\"dataset/view_dataset.html\",\n-                    dataset=dataset,\n-                    bibtex_dataset=bibtex_dataset,\n-                    bibtex_preview=bibtex_preview,\n-                    bibtex_preview_start = bibtex_properties[0],\n-                    bibtex_preview_lines=bibtex_properties[1:-1],\n-                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n-                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n-\n-    resp = make_response(page_render)\n-    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+\n+    resp = make_response(render_template(\"dataset/view_dataset.html\",dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp\n \n-\n @dataset_bp.route(\"/dataset/unsynchronized/<int:dataset_id>/\", methods=[\"GET\"])\n @login_required\n def get_unsynchronized_dataset(dataset_id):\n-\n-    # Get dataset\n     dataset = dataset_service.get_unsynchronized_dataset(current_user.id, dataset_id)\n \n     if not dataset:\n         abort(404)\n+    \n+    ds_meta_data = dsmetadata_service.get_by_id(dataset.ds_meta_data_id)\n+\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    \n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n+   \n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name)\n+\n+\n+@dataset_bp.route('/dataset/commit/<int:dataset_id>', methods=['GET','POST'])\n+def commit(dataset_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n+    else:\n+        return 'First sync your github account.'\n+    \n+    try:\n+            \n+        ruta_repositorio = f\"/app/uvl_git/{username}\"   \n+        \n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        token = os.getenv('GH_PAT')\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n+             \n+        # Obtener el nombre y los archivos del dataset\n+        repository = DataSetRepository()\n+        nombre = repository.get_dataset_name(dataset_id)\n+        ruta_carpeta = os.path.join(ruta_repositorio, nombre)\n+        os.makedirs(ruta_carpeta, exist_ok=True)\n+        \n+        all_files = repository.get_all_files_for_dataset(dataset_id)\n+        \n+        # Copiar archivos, llevarlos al directorio de git y stagearlos\n+        for archivo in all_files:\n+            ruta_archivo_origen = archivo.get_path()\n+            ruta_destino_archivo = os.path.join(ruta_carpeta, os.path.basename(ruta_archivo_origen))\n+            shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+            subprocess.run(f\"git add {os.path.relpath(ruta_destino_archivo, ruta_repositorio)}\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"Dataset has been pushed to GitHub correctly.\"\n+\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"This dataset is already in your github repository.\"\n+    \n+    \n+    \n+@dataset_bp.route('/dataset/commit_file/<int:file_id>', methods=['GET','POST'])\n+def commit_file(file_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n+        \n+    else:\n+        return 'First sync your github account.'\n+    \n+    try:\n+       \n+        ruta_repositorio = f\"/app/uvl_git/{username}\"\n+    \n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        # Configurar URL remota con el PAT\n+        token = os.getenv('GH_PAT')\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        # Obtener archivo y copiarlo al directorio de git\n+        hubfile_repository = HubfileRepository()\n+        hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n+        ruta_archivo_origen = hubfile.get_path()\n+        ruta_destino_archivo = os.path.join(ruta_repositorio, hubfile.name)\n+        shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+\n+        subprocess.run(f\"git add {hubfile.name}\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"This model has been pushed to GitHub correctly.\"\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"This model is already in your github repository.\"\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+\n+@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(file_id, format):\n+    \"\"\"Endpoint to download dataset in the specified format.\n+    Formats supported: glencoe, splot, dimacs, zip.\n+    \"\"\"\n+    if format == \"glencoe\":\n+        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n+    elif format == \"splot\":\n+        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n+    elif format == \"dimacs\":\n+        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n+    elif format == \"zip\":\n+        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n+    else:\n+        return jsonify({\"error\": \"Formato no soportado\"}), 400"
      },
      {
        "sha": "ef40cc6e3f7bdfc6d7a7bae844294277c4952f62",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 88,
        "deletions": 32,
        "changes": 120,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -41,6 +41,35 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n+                <div class=\"mt-2\">\n+                    <div class=\"btn-group\" role=\"group\">\n+                        <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n+                            <i data-feather=\"download\"></i> Download\n+                        </button>\n+                        <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                    Glencoe\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                    DIMACS\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                    SPLOT\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n+                                    ZIP\n+                                </a>\n+                            </li>\n+                        </ul>\n+                    </div>\n+                </div>\n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">\n@@ -159,44 +188,24 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n \n             {% if bibtex_dataset %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n-                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n-                    {{ bibtex_dataset }}\n-                </div>\n-\n-                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n-                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n-                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n-                        <b>BibTex</b>\n-                    </span>\n \n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_dataset }}\n-                    </span> -->\n-                   \n-                    \n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_preview }}\n-                    </span> -->\n-                   \n-\n-                    \n-                    <div class=\"doi_text\">\n-                        <div>{{ bibtex_preview_start }}</div>\n-                        {% for bib_line in bibtex_preview_lines %}\n-                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n-                        {% endfor %}\n-                        <div>{{ bibtex_preview_end }}</div>\n-                    </div>\n-                   \n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n+                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                    <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n+\n+                <a href=\"{{ url_for('dataset.commit', dataset_id=dataset.id) }}\" class=\"btn btn-primary mt-3\" style=\"border-radius: 5px;\">\n+                    <i class=\"center-button-icon\"></i>\n+                    Upload dataset to github\n+                </a>\n             </div>\n             {% endif %}\n \n+            \n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n \n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n@@ -215,6 +224,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n                 </div>\n+\n                 \n             </div>\n             {% endif %}\n@@ -308,6 +318,10 @@ <h4 style=\"margin-bottom: 0px;\"><span class=\"badge bg-dark\">{{ dataset.get_files\n                             </div>\n                             <div class=\"col-12 text-end\" >\n \n+                                <a href=\"{{ url_for('dataset.commit_file', file_id=file.id) }}\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                                    <i data-feather=\"github\"></i> Upload\n+                                </a>\n+\n                                 <button onclick=\"viewFile('{{ file.id }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                                     <i data-feather=\"eye\"></i> View\n                                 </button>\n@@ -399,6 +413,30 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n     </div>\n </div>\n \n+<div class=\"modal fade\" id=\"bibtexViewerModal\" tabindex=\"-1\" aria-labelledby=\"bibtexViewerModalLabel\" aria-hidden=\"true\">\n+    <div class=\"modal-dialog modal-lg\" style=\"height: 80vh; display: flex; align-items: center;\">\n+        <div class=\"modal-content\" style=\"height: 80vh;\">\n+            <div class=\"modal-header\" style=\"display: flex; justify-content: space-between; align-items: center;\">\n+                <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex format</h5>\n+                <div>\n+                    <a href=\"#\" class=\"btn btn-outline-primary btn-sm\" id=\"bibtexDownloadButton\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"download\"></i>\n+                    </a>\n+                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"copy\"></i>\n+                    </button>\n+                    <button onclick=\"freeBibtexUrl()\" type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n+                </div>\n+            </div>\n+            <div class=\"modal-body\" style=\"overflow-y: auto; height: calc(100vh - 50px);\">\n+                <pre id=\"bibtexContent\" style=\"height: 100%; overflow-y: auto; white-space: pre-wrap; word-wrap: break-word; background-color: #f5f5f5; padding: 20px; border-radius: 5px; border: 1px solid #ccc;\"></pre>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js\"></script>\n \n \n@@ -410,6 +448,24 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n \n     var currentFileId;\n \n+    function freeBibtexUrl() {\n+        console.log(\"entra en freeBibtexUrl\")\n+        URL.revokeObjectURL(document.getElementById('bibtexDownloadButton').href)\n+    }\n+\n+    function viewBibtex(bibfilename) {\n+        var bib_content_display = document.getElementById('dataset_bibtex_export').textContent;\n+\n+        var blob = new Blob([bib_content_display], { type: 'text/plain' });\n+        var fileURL = URL.createObjectURL(blob);\n+        document.getElementById('bibtexDownloadButton').href = fileURL;\n+        document.getElementById('bibtexDownloadButton').download = bibfilename;\n+        document.getElementById('bibtexContent').textContent = bib_content_display;\n+\n+        var modal = new bootstrap.Modal(document.getElementById('bibtexViewerModal'));\n+        modal.show();\n+    }\n+\n     function viewFile(fileId) {\n         fetch(`/file/view/${fileId}`)\n             .then(response => response.json())"
      },
      {
        "sha": "d316841d1aca77398773dbb07abb7cbd5dd4e3dc",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,58 @@\n+import pytest\n+from flask import url_for\n+from app.modules.dataset.routes import download_dataset_format\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client(test_client):\n+    \"\"\"\n+    Extiende la fixture test_client para el m\u00f3dulo dataset.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_download_glencoe_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato Glencoe.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/glencoe\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+\n+\n+def test_download_splot_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato SPLOT.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/splot\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+\n+\n+def test_download_dimacs_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato DIMACS.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/dimacs\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+\n+\n+def test_download_zip_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato ZIP.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/zip\")\n+    assert response.status_code == 302\n+    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n+\n+def test_download_invalid_format(test_client):\n+    \"\"\"\n+    Testea que se retorne un error 400 para un formato no soportado.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n+    assert response.status_code == 400\n+    assert response.json == {\"error\": \"Formato no soportado\"}"
      },
      {
        "sha": "6f2edac23ceec557545bb8eaf134f3dcfa88d657",
        "filename": "app/modules/dataset/uvl_examples/file10.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tMessaging\t\n+\t\t\t\tor\n+\t\t\t\t\tSMS\n+\t\t\t\t\tMMS\n+\t\t\t\"Utility Features\"\t\n+\t\t\t\toptional\n+\t\t\t\t\tCalculator\n+\t\t\t\t\t\"Currency Exchange\"\n+\t\t\tOS\t\n+\t\t\t\talternative\n+\t\t\t\t\tSymbian\n+\t\t\t\t\tWinCE\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Currency Exchange\" => Calculator\n\\ No newline at end of file"
      },
      {
        "sha": "141cad170eaca409c3974334791706a0cc319f3b",
        "filename": "app/modules/dataset/uvl_examples/file11.uvl",
        "status": "modified",
        "additions": 25,
        "deletions": 17,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +1,27 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tOnlineshop {abstract}\t\n+\t\tmandatory\n+\t\t\tPayment {abstract}\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Debit Card\"\n+\t\t\t\t\t\"Credit Card\"\n+\t\t\t\"Product Selection\" {abstract}\t\n+\t\t\t\tmandatory\n+\t\t\t\t\tCatalog\t\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tCategories\n+\t\t\t\t\t\t\tSort\n+\t\t\t\toptional\n+\t\t\t\t\tSearch\n+\t\toptional\n+\t\t\tUserManagement {abstract}\t\n+\t\t\t\tor\n+\t\t\t\t\tOrders\n+\t\t\t\t\tSecurity\n+\t\t\t\t\tPayments\n+\t\t\t\t\tWishlist\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSearch => Security\n+\tSecurity => !Payments\n+\tPayments => !Security\n+\tSort | Search\n\\ No newline at end of file"
      },
      {
        "sha": "117471c9d2dc5561b9562f672aec92d9af73450d",
        "filename": "app/modules/dataset/uvl_examples/file12.uvl",
        "status": "modified",
        "additions": 22,
        "deletions": 18,
        "changes": 40,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +1,23 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Movies_App\" \n+\t\tmandatory\n+\t\t\t\"GUI\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Thin\" \n+\t\t\t\t\t\"Rich\" \n+\t\tmandatory\n+\t\t\t\"DB\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Local\" \n+\t\t\t\t\t\"Remote\" \n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\t\"Cache_Policy\" \n+\t\tmandatory\n+\t\t\t\"Network\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Wifi\" \n+\t\t\t\t\t\"Bluetooth\" \n+\t\toptional\n+\t\t\t\"GPS\" \n+\t\t\t\toptional\n+\t\t\t\t\t\"Built-In\" \n\\ No newline at end of file"
      },
      {
        "sha": "924a2f013c74f6bbea7f911b884dd9fd94e26f8b",
        "filename": "app/modules/dataset/uvl_examples/file2.uvl",
        "status": "modified",
        "additions": 19,
        "deletions": 18,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +1,20 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40"
      },
      {
        "sha": "9e14cb807f57d510839a4d68aff29e690523ac78",
        "filename": "app/modules/dataset/uvl_examples/file3.uvl",
        "status": "modified",
        "additions": 17,
        "deletions": 18,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +1,18 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "ad06cc4f7e038d2e2ab96ed02ae7ae1c2ef24dd0",
        "filename": "app/modules/dataset/uvl_examples/file4.uvl",
        "status": "modified",
        "additions": 20,
        "deletions": 17,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +1,22 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tsmartwatch {abstract true}\n+\t\tmandatory\n+\t\t\tscreen\n+\t\t\t\talternative\n+\t\t\t\t\ttouch\n+\t\t\t\t\tstandard\n+\t\t\t\"energy management\"\n+\t\t\t\talternative\n+\t\t\t\t\tbasic\n+\t\t\t\t\t\"advanced solar\"\n+\t\toptional\n+\t\t\tpayment\n+\t\t\tgps\n+\t\t\t\"sports tracking\"\n+\t\t\t\tor\n+\t\t\t\t\trunning\n+\t\t\t\t\tskiing\n+\t\t\t\t\thiking\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t!(payment & standard)\n+\t\"sports tracking\" => gps"
      },
      {
        "sha": "2ed3f8f650ad498e4e3ca0220d63dc841fc39db0",
        "filename": "app/modules/dataset/uvl_examples/file5.uvl",
        "status": "modified",
        "additions": 33,
        "deletions": 18,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +1,34 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "9234e685c686a0589a2f477bfc0f83156e104c5d",
        "filename": "app/modules/dataset/uvl_examples/file6.uvl",
        "status": "modified",
        "additions": 40,
        "deletions": 16,
        "changes": 56,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +1,43 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\toptional\n+\t\t\t\t\tTouchScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\t\toptional\n+\t\t\t\t\tContactlessPayment\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n+\t\t\t\toptional\n+\t\t\t\t\tNFC\n \n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tContactlessPayment => NFC"
      },
      {
        "sha": "3d881f9b14f76d1a693988f487862607e513ce69",
        "filename": "app/modules/dataset/uvl_examples/file7.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tGSM_Protocol_1900\n+\t\t\tMP3_Recording\n+\t\t\tCamera_Resolution\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"2_1MP\"\n+\t\t\t\t\t\"5 MP\"\n+\t\t\t\t\t\"3_1MP\"\n+\t\t\tCamera\n+\t\t\tAudio_Formats\t\n+\t\t\t\tor\n+\t\t\t\t\tWAV\n+\t\t\t\t\tMP3\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tMP3_Recording => MP3\n\\ No newline at end of file"
      },
      {
        "sha": "10dddc5e29b5fc9da5ba4b8692ecbf437448f719",
        "filename": "app/modules/dataset/uvl_examples/file8.uvl",
        "status": "modified",
        "additions": 36,
        "deletions": 18,
        "changes": 54,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -1,19 +1,37 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tSV_Solution\t\n+\t\t\t\talternative\n+\t\t\t\t\tBMD\n+\t\t\t\t\tBMDCRM\n+\t\t\tCV_Documents\t\n+\t\t\t\tor\n+\t\t\t\t\t\"scan new\"\n+\t\t\t\t\t\"import external\"\n+\t\t\t\t\tarchive\n+\t\t\t\t\t\"read existing\"\n+\t\t\tCV_Claims\t\n+\t\t\t\tor\n+\t\t\t\t\tjournal\n+\t\t\t\t\t\"task manager\"\n+\t\t\tSV\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Particular Packages\"\n+\t\t\t\t\tSolution\n+\t\t\tCV_Customer\t\n+\t\t\t\tor\n+\t\t\t\t\tmail\n+\t\t\t\t\tphone\n+\t\t\tCV\t\n+\t\t\t\tor\n+\t\t\t\t\t\"Document Management\"\n+\t\t\t\t\t\"Claims Management\"\n+\t\t\t\t\t\"Customer Management\"\n+\t\t\tSV_Particular_Package\t\n+\t\t\t\tor\n+\t\t\t\t\tOrganizer\n+\t\t\t\t\t\"Label Printing\"\n+\t\t\t\t\tElse\n+\t\t\t\t\tDocs\n+\t\t\t\t\t\"Standard Letter\"\n\\ No newline at end of file"
      },
      {
        "sha": "1609b0318fca78c64b66a9f332daf50d08bb7879",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 41,
        "deletions": 1,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -16,13 +16,31 @@ function send_query() {\n         filter.addEventListener('input', () => {\n             const csrfToken = document.getElementById('csrf_token').value;\n \n+            const minFiles = document.getElementById('min_files').value || null;\n+            const maxFiles = document.getElementById('max_files').value || null;\n+            const minAvBranchingFactor = document.getElementById('min_av_branching_factor').value || null;\n+            const maxAvBranchingFactor = document.getElementById('max_av_branching_factor').value || null;\n+            const minLeafCount = document.getElementById('min_leaf_count').value || null;\n+            const maxLeafCount = document.getElementById('max_leaf_count').value || null;\n+            const minDepth = document.getElementById('min_depth').value || null;\n+            const maxDepth = document.getElementById('max_depth').value || null;\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n                 publication_type: document.querySelector('#publication_type').value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n+                min_files: minFiles,\n+                max_files: maxFiles,\n+                min_av_branching_factor: minAvBranchingFactor,\n+                max_av_branching_factor: maxAvBranchingFactor,\n+                min_leaf_count: minLeafCount,\n+                max_leaf_count: maxLeafCount,\n+                min_depth: minDepth,\n+                max_depth: maxDepth,\n+                leaf_feature_name: document.querySelector('#leaf_feature_name').value,\n+                core_feature_name: document.querySelector('#core_feature_name').value\n             };\n-\n+            \n             console.log(document.querySelector('#publication_type').value);\n \n             fetch('/explore', {\n@@ -179,6 +197,28 @@ function clearFilters() {\n         // option.dispatchEvent(new Event('input', {bubbles: true}));\n     });\n \n+    let minFilesInput = document.querySelector('#min_files');\n+    let maxFilesInput = document.querySelector('#max_files');\n+    minFilesInput.value = \"\"; \n+    maxFilesInput.value = \"\"; \n+    let minAvBranchingFactor = document.querySelector('#min_av_branching_factor');\n+    let maxAvBranchingFactor = document.querySelector('#max_av_branching_factor');\n+    minAvBranchingFactor.value = \"\"; \n+    maxAvBranchingFactor.value = \"\"; \n+    let minLeafCount = document.querySelector('#min_leaf_count');\n+    let maxLeafCount = document.querySelector('#max_leaf_count');\n+    minLeafCount.value = \"\"; \n+    maxLeafCount.value = \"\"; \n+    let minDepth = document.querySelector('#min_depth');\n+    let maxDepth = document.querySelector('#max_depth');\n+    minDepth.value = \"\"; \n+    maxDepth.value = \"\"; \n+    let leafFeatureName = document.querySelector('#leaf_feature_name');\n+    leafFeatureName.value = \"\";\n+    let coreFeatureName = document.querySelector('#core_feature_name');\n+    coreFeatureName.value = \"\";\n+\n+\n     // Perform a new search with the reset filters\n     queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n }"
      },
      {
        "sha": "fa37bd56d033abe4b84370094d21a3850923875b",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 71,
        "deletions": 2,
        "changes": 73,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -10,12 +10,31 @@ class ExploreRepository(BaseRepository):\n     def __init__(self):\n         super().__init__(DataSet)\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None, max_av_branching_factor=None,\n+               leaf_feature_name=\"\", core_feature_name=\"\",\n+               **kwargs):\n         # Normalize and remove unwanted characters\n         normalized_query = unidecode.unidecode(query).lower()\n         cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n \n         filters = []\n+        min_files = int(min_files) if min_files is not None else None\n+        max_files = int(max_files) if max_files is not None else None\n+\n+        min_leaf_count = int(min_leaf_count) if min_leaf_count is not None else None\n+        max_leaf_count = int(max_leaf_count) if max_leaf_count is not None else None\n+\n+        min_depth = int(min_depth) if min_depth is not None else None\n+        max_depth = int(max_depth) if max_depth is not None else None\n+\n+        min_av_branching_factor = float(min_av_branching_factor) if min_av_branching_factor is not None else None\n+        max_av_branching_factor = float(max_av_branching_factor) if max_av_branching_factor is not None else None\n+\n         for word in cleaned_query.split():\n             filters.append(DSMetaData.title.ilike(f\"%{word}%\"))\n             filters.append(DSMetaData.description.ilike(f\"%{word}%\"))\n@@ -55,7 +74,57 @@ def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **\n         # Order by created_at\n         if sorting == \"oldest\":\n             datasets = datasets.order_by(self.model.created_at.asc())\n+        elif sorting == \"filesize_asc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=False)\n+        elif sorting == \"filesize_desc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=True)\n         else:\n             datasets = datasets.order_by(self.model.created_at.desc())\n \n-        return datasets.all()\n+        if min_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() >= min_files]\n+        if max_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() <= max_files]\n+\n+        filtered_datasets = []\n+\n+        for dataset in datasets:\n+            feature_models = dataset.feature_models  \n+            dataset_passes_filter = False  \n+\n+            for model in feature_models:\n+                stats = model.calculate_statistics()  \n+                leaf_count = stats[\"leaf_count\"]\n+                depth = stats[\"max_depth\"]\n+                branching_factor = stats[\"branching_factor\"]\n+\n+                # Aplicar filtros a las estad\u00edsticas del modelo\n+                if ((min_leaf_count is not None and leaf_count < min_leaf_count) or\n+                    (max_leaf_count is not None and leaf_count > max_leaf_count) or\n+                    (min_depth is not None and depth < min_depth) or\n+                    (max_depth is not None and depth > max_depth) or\n+                    (min_av_branching_factor is not None and branching_factor < min_av_branching_factor) or\n+                        (max_av_branching_factor is not None and branching_factor > max_av_branching_factor)):\n+                    continue\n+\n+                if leaf_feature_name:\n+                    leaf_feature_names = model.get_leaf_feature_names()\n+                    print(leaf_feature_name)\n+                    if leaf_feature_name not in leaf_feature_names:\n+                        continue\n+\n+                if core_feature_name:\n+                    core_feature_names = model.get_core_feature_names()\n+                    if core_feature_name not in core_feature_names:\n+                        continue\n+\n+                dataset_passes_filter = True\n+                print(\"dataset_passes_filter\")\n+                break\n+\n+            if dataset_passes_filter:\n+                filtered_datasets.append(dataset)  \n+\n+        return filtered_datasets"
      },
      {
        "sha": "ecbed8e137e0f7d447b1b710e823b81cf204c427",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -6,5 +6,16 @@ class ExploreService(BaseService):\n     def __init__(self):\n         super().__init__(ExploreRepository())\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n-        return self.repository.filter(query, sorting, publication_type, tags, **kwargs)\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None,\n+               max_av_branching_factor=None,\n+               leaf_feature_name=\"\",\n+               core_feature_name=\"\", **kwargs):\n+        return self.repository.filter(query, sorting, publication_type, tags, min_files, max_files,\n+                                      min_leaf_count, max_leaf_count, min_depth, max_depth,\n+                                      min_av_branching_factor, max_av_branching_factor, leaf_feature_name,\n+                                      core_feature_name, **kwargs)"
      },
      {
        "sha": "f062144cdd68583a147b585fa2fa2d66cd94fb46",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 88,
        "deletions": 4,
        "changes": 92,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -54,8 +54,7 @@ <h3 class=\"h3 mb-3\">\n                                        value=\"\" autofocus>\n                             </div>\n                         </div>\n-\n-                        <div class=\"col-lg-6\">\n+                        <div class=\"col-lg-12\">\n                             <div class=\"mb-3\">\n                                 <label class=\"form-label\" for=\"publication_type\">Filter by publication\n                                     type</label>\n@@ -83,7 +82,79 @@ <h3 class=\"h3 mb-3\">\n                                     <option value=\"other\">Other</option>\n                                 </select>\n                             </div>\n-\n+                        </div>\n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_files\">Min Files:</label>\n+                                    <input type=\"number\" id=\"min_files\" name=\"min_files\" class=\"form-control\" placeholder=\"Min Files\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_files\">Max Files:</label>\n+                                    <input type=\"number\" id=\"max_files\" name=\"max_files\" class=\"form-control\" placeholder=\"Max Files\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_leaf_count\">Min Leaf Count:</label>\n+                                    <input type=\"number\" id=\"min_leaf_count\" name=\"min_leaf_count\" class=\"form-control\" placeholder=\"Min Leaf Count\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_leaf_count\">Max Leaf Count:</label>\n+                                    <input type=\"number\" id=\"max_leaf_count\" name=\"max_leaf_count\" class=\"form-control\" placeholder=\"Max Leaf Count\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_depth\">Min Depth:</label>\n+                                    <input type=\"number\" id=\"min_depth\" name=\"min_depth\" class=\"form-control\" placeholder=\"Min Depth\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_depth\">Max Depth:</label>\n+                                    <input type=\"number\" id=\"max_depth\" name=\"max_depth\" class=\"form-control\" placeholder=\"Max Depth\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_av_branching_factor\">Min Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"min_av_branching_factor\" name=\"min_av_branching_factor\" class=\"form-control\" placeholder=\"Min Average Branching Factor\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_av_branching_factor\">Max Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"max_av_branching_factor\" name=\"max_av_branching_factor\" class=\"form-control\" placeholder=\"Max Average Branching Factor\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"leaf_feature_name\">Leaf Feature Name:</label>\n+                                <input type=\"text\" id=\"leaf_feature_name\" name=\"leaf_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter leaf feature name\">\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"core_feature_name\">Core Feature Name:</label>\n+                                <input type=\"text\" id=\"core_feature_name\" name=\"core_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter core feature name\">\n+                            </div>\n                         </div>\n \n                     </div>\n@@ -108,7 +179,20 @@ <h3 class=\"h3 mb-3\">\n                                     </span>\n                                 </label>\n                             </div>\n-\n+                            <div>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_asc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Smallest first\n+                                    </span>\n+                                </label>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_desc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Largest first\n+                                    </span>\n+                                </label>\n+                            </div>\n                         </div>\n \n                     </div>"
      },
      {
        "sha": "9ed55640f52bbfc44bf4d95f0b7cd378428fd9e5",
        "filename": "app/modules/featuremodel/models.py",
        "status": "modified",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Fmodels.py?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -2,6 +2,9 @@\n from sqlalchemy import Enum as SQLAlchemyEnum\n \n from app.modules.dataset.models import Author, PublicationType\n+from flamapy.metamodels.fm_metamodel.transformations import UVLReader\n+from flamapy.metamodels.fm_metamodel.operations import FMAverageBranchingFactor, FMCountLeafs\n+from flamapy.metamodels.fm_metamodel.operations import FMMaxDepthTree, FMLeafFeatures, FMCoreFeatures\n \n \n class FeatureModel(db.Model):\n@@ -14,6 +17,51 @@ class FeatureModel(db.Model):\n     def __repr__(self):\n         return f'FeatureModel<{self.id}>'\n \n+    def calculate_statistics(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        leaf_counter = FMCountLeafs()\n+        leaf_counter.execute(fm)\n+        leaf_count = leaf_counter.get_result()\n+\n+        depth_calculator = FMMaxDepthTree()\n+        depth_calculator.execute(fm)\n+        max_tree_depth = depth_calculator.get_result()\n+\n+        branching_factor_calculator = FMAverageBranchingFactor()\n+        branching_factor_calculator.execute(fm)\n+        average_branching_factor = branching_factor_calculator.get_result()\n+\n+        return {\n+            \"leaf_count\": leaf_count,\n+            \"max_depth\": max_tree_depth,\n+            \"branching_factor\": average_branching_factor\n+        }\n+\n+    def get_leaf_feature_names(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        leaf_features_operation = FMLeafFeatures()\n+        leaf_features_operation.execute(fm)\n+        leaf_features = leaf_features_operation.get_result()\n+\n+        return [feature.name for feature in leaf_features]\n+\n+    def get_core_feature_names(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        core_features_operation = FMCoreFeatures()\n+        core_features_operation.execute(fm)\n+        core_features = core_features_operation.get_result()\n+\n+        return [feature.name for feature in core_features]\n+\n \n class FMMetaData(db.Model):\n     id = db.Column(db.Integer, primary_key=True)"
      },
      {
        "sha": "94c83d4cf76ce083619ed6dae3c0bb05e18f04f2",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -23,6 +23,9 @@ def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n \n     def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n         return db.session.query(DataSet).join(FeatureModel).join(Hubfile).filter(Hubfile.id == hubfile.id).first()\n+    \n+    def get_hubfile_by_id(self, hubfile_id: int) -> Hubfile:\n+        return db.session.query(Hubfile).filter(Hubfile.id == hubfile_id).first()\n \n \n class HubfileViewRecordRepository(BaseRepository):"
      },
      {
        "sha": "9765d4aa769976cd87870704819c3cf0af65e9eb",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -91,12 +91,17 @@ <h2>\n                                     <i data-feather=\"eye\" class=\"center-button-icon\"></i>\n                                     View dataset\n                                 </a>\n-\n-                                <a href=\"/dataset/download/{{ dataset.id }}\" class=\"btn btn-outline-primary btn-sm\"\n-                                   style=\"border-radius: 5px;\">\n-                                    <i data-feather=\"download\" class=\"center-button-icon\"></i>\n-                                    Download ({{ dataset.get_file_total_size_for_human() }})\n-                                </a>\n+                                <div class=\"btn-group\" role=\"group\">\n+                                    <button id=\"btnDownloadDropdown_{{ dataset.id }}\" type=\"button\" class=\"btn btn-outline-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n+                                        <i data-feather=\"download\" class=\"center-button-icon\"></i> Download\n+                                    </button>\n+                                    <ul class=\"dropdown-menu\" aria-labelledby=\"btnDownloadDropdown_{{ dataset.id }}\">\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'glencoe')\">Glencoe</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'splot')\">SPLOT</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'dimacs')\">DIMACS</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'zip')\">ZIP</a></li>\n+                                    </ul>\n+                                </div>                                \n                             </div>\n                         </div>\n "
      },
      {
        "sha": "d337dad98b8d18e15de1bf67815af93f2d8216a0",
        "filename": "app/static/js/scripts.js",
        "status": "added",
        "additions": 246,
        "deletions": 0,
        "changes": 246,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fstatic%2Fjs%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Fstatic%2Fjs%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fscripts.js?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,246 @@\n+var currentId = 0;\n+        var amount_authors = 0;\n+\n+        function show_upload_dataset() {\n+            document.getElementById(\"upload_dataset\").style.display = \"block\";\n+        }\n+\n+        function generateIncrementalId() {\n+            return currentId++;\n+        }\n+\n+        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n+            let fieldWrapper = document.createElement('div');\n+            fieldWrapper.className = className;\n+\n+            let label = document.createElement('label');\n+            label.className = 'form-label';\n+            label.for = name;\n+            label.textContent = text;\n+\n+            let field = document.createElement('input');\n+            field.name = name;\n+            field.className = 'form-control';\n+\n+            fieldWrapper.appendChild(label);\n+            fieldWrapper.appendChild(field);\n+            newAuthor.appendChild(fieldWrapper);\n+        }\n+\n+        function addRemoveButton(newAuthor) {\n+            let buttonWrapper = document.createElement('div');\n+            buttonWrapper.className = 'col-12 mb-2';\n+\n+            let button = document.createElement('button');\n+            button.textContent = 'Remove author';\n+            button.className = 'btn btn-danger btn-sm';\n+            button.type = 'button';\n+            button.addEventListener('click', function (event) {\n+                event.preventDefault();\n+                newAuthor.remove();\n+            });\n+\n+            buttonWrapper.appendChild(button);\n+            newAuthor.appendChild(buttonWrapper);\n+        }\n+\n+        function createAuthorBlock(idx, suffix) {\n+            let newAuthor = document.createElement('div');\n+            newAuthor.className = 'author row';\n+            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n+\n+            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n+            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n+            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n+            addRemoveButton(newAuthor);\n+\n+            return newAuthor;\n+        }\n+\n+        function check_title_and_description() {\n+            let titleInput = document.querySelector('input[name=\"title\"]');\n+            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n+\n+            titleInput.classList.remove(\"error\");\n+            descriptionTextarea.classList.remove(\"error\");\n+            clean_upload_errors();\n+\n+            let titleLength = titleInput.value.trim().length;\n+            let descriptionLength = descriptionTextarea.value.trim().length;\n+\n+            if (titleLength < 3) {\n+                write_upload_error(\"title must be of minimum length 3\");\n+                titleInput.classList.add(\"error\");\n+            }\n+\n+            if (descriptionLength < 3) {\n+                write_upload_error(\"description must be of minimum length 3\");\n+                descriptionTextarea.classList.add(\"error\");\n+            }\n+\n+            return (titleLength >= 3 && descriptionLength >= 3);\n+        }\n+\n+\n+        document.getElementById('add_author').addEventListener('click', function () {\n+            let authors = document.getElementById('authors');\n+            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n+            authors.appendChild(newAuthor);\n+        });\n+\n+\n+        document.addEventListener('click', function (event) {\n+            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n+\n+                let authorsButtonId = event.target.id;\n+                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n+                let authors = document.getElementById(authorsId);\n+                let id = authorsId.replace(\"_form_authors\", \"\")\n+                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n+                authors.appendChild(newAuthor);\n+\n+            }\n+        });\n+\n+        function show_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"none\";\n+            document.getElementById(\"loading\").style.display = \"block\";\n+        }\n+\n+        function hide_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"block\";\n+            document.getElementById(\"loading\").style.display = \"none\";\n+        }\n+\n+        function clean_upload_errors() {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            upload_error.innerHTML = \"\";\n+            upload_error.style.display = 'none';\n+        }\n+\n+        function write_upload_error(error_message) {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            let alert = document.createElement('p');\n+            alert.style.margin = '0';\n+            alert.style.padding = '0';\n+            alert.textContent = 'Upload error: ' + error_message;\n+            upload_error.appendChild(alert);\n+            upload_error.style.display = 'block';\n+        }\n+\n+        window.onload = function () {\n+\n+            test_zenodo_connection();\n+\n+            document.getElementById('upload_button').addEventListener('click', function () {\n+\n+                clean_upload_errors();\n+                show_loading();\n+\n+                // check title and description\n+                let check = check_title_and_description();\n+\n+                if (check) {\n+                    // process data form\n+                    const formData = {};\n+\n+                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                        const form = document.getElementById(formId);\n+                        const inputs = form.querySelectorAll('input, select, textarea');\n+                        inputs.forEach(input => {\n+                            if (input.name) {\n+                                formData[input.name] = formData[input.name] || [];\n+                                formData[input.name].push(input.value);\n+                            }\n+                        });\n+                    });\n+\n+                    let formDataJson = JSON.stringify(formData);\n+                    console.log(formDataJson);\n+\n+                    const csrfToken = document.getElementById('csrf_token').value;\n+                    const formUploadData = new FormData();\n+                    formUploadData.append('csrf_token', csrfToken);\n+\n+                    for (let key in formData) {\n+                        if (formData.hasOwnProperty(key)) {\n+                            formUploadData.set(key, formData[key]);\n+                        }\n+                    }\n+\n+                    let checked_orcid = true;\n+                    if (Array.isArray(formData.author_orcid)) {\n+                        for (let orcid of formData.author_orcid) {\n+                            orcid = orcid.trim();\n+                            if (orcid !== '' && !isValidOrcid(orcid)) {\n+                                hide_loading();\n+                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                                checked_orcid = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    let checked_name = true;\n+                    if (Array.isArray(formData.author_name)) {\n+                        for (let name of formData.author_name) {\n+                            name = name.trim();\n+                            if (name === '') {\n+                                hide_loading();\n+                                write_upload_error(\"The author's name cannot be empty\");\n+                                checked_name = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    if (checked_orcid && checked_name) {\n+                        fetch('/dataset/upload', {\n+                            method: 'POST',\n+                            body: formUploadData\n+                        })\n+                            .then(response => {\n+                                if (response.ok) {\n+                                    console.log('Dataset sent successfully');\n+                                    response.json().then(data => {\n+                                        console.log(data.message);\n+                                        window.location.href = \"/dataset/list\";\n+                                    });\n+                                } else {\n+                                    response.json().then(data => {\n+                                        console.error('Error: ' + data.message);\n+                                        hide_loading();\n+\n+                                        write_upload_error(data.message);\n+\n+                                    });\n+                                }\n+                            })\n+                            .catch(error => {\n+                                console.error('Error in POST request:', error);\n+                            });\n+                    }\n+\n+\n+                } else {\n+                    hide_loading();\n+                }\n+\n+\n+            });\n+        };\n+\n+\n+        function isValidOrcid(orcid) {\n+            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+            return orcidRegex.test(orcid);\n+        }\n+\n+        function downloadDataset(datasetId, format) {\n+            const url = `/dataset/download/${datasetId}/${format}`;\n+            window.location.href = url;\n+        }\n+        \n+        \n\\ No newline at end of file"
      },
      {
        "sha": "9902e4c35331f624fe86a182c7bfdc3ce10a8310",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -33,6 +33,7 @@\n \n     <link rel=\"stylesheet\" href=\"{{ url_for(\"static\", filename=\"css/own.css\") }}\">\n \n+    <script src=\"{{ url_for('static', filename='js/scripts.js') }}\"></script>\n </head>\n \n <body>\n@@ -178,6 +179,18 @@\n \n                         {% else %}\n \n+                        <a href=\"{{ url_for('auth.github_login') }}\">\n+                            <button>Sync with Github</button>\n+                        </a> \n+\n+                        <a href=\"{{ url_for('auth.invite_user') }}\">\n+                            <button>Join our Github Organization</button>\n+                        </a> \n+\n+                        <a href=\"{{ url_for('auth.crear_repo') }}\">\n+                            <button>Create your repo in our Github Org</button>\n+                        </a> \n+\n                         <a class=\"nav-icon dropdown-toggle d-inline-block d-sm-none\" href=\"#\" data-bs-toggle=\"dropdown\">\n                             <i class=\"align-middle\" data-feather=\"user\"></i> \n                         </a>"
      },
      {
        "sha": "ed10caea787b0655f7bc8d63ef3c9386c2b45c04",
        "filename": "docker/images/Dockerfile.render",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/docker%2Fimages%2FDockerfile.render",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/docker%2Fimages%2FDockerfile.render",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.render?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -46,6 +46,19 @@ RUN pip install --no-cache-dir --upgrade pip\n # Install any needed packages specified in requirements.txt\n RUN pip install -r requirements.txt\n \n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+    curl \\\n+    git \\\n+    sudo \\\n+    && curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \\\n+    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \\\n+    && echo \"deb [signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \\\n+    && apt-get update && apt-get install -y gh \\\n+    && apt-get clean && rm -rf /var/lib/apt/lists/*\n+\n+RUN apt-get update && apt-get install -y git\n+\n+\n # Expose port 80\n EXPOSE 80\n "
      },
      {
        "sha": "341be806fa39e544b166ce43d7a1f837351886eb",
        "filename": "requirements.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/requirements.txt",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/requirements.txt",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/requirements.txt?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -19,6 +19,7 @@ dd==0.6.0\n dnspython==2.6.1\n docker==7.1.0\n email_validator==2.2.0\n+Flask-Dance==7.1.0\n Faker==26.0.0\n flake8==7.1.0\n flamapy==2.0.0.dev1"
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file1.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file2.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file3.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file7.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file8.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file9.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file4.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file5.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file6.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file10.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file11.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file12.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl?ref=effe31aad7ce28ffb42f9fe4dd887c50e0bf26d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      }
    ]
  },
  {
    "sha": "3de08af2771e0ba486dc575110bd89585e161678",
    "node_id": "C_kwDONDG85doAKDNkZTA4YWYyNzcxZTBiYTQ4NmRjNTc1MTEwYmQ4OTU4NWUxNjE2Nzg",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-13T16:55:51Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-13T16:55:51Z"
      },
      "message": "fix(workflow): commit to rerun workflows",
      "tree": {
        "sha": "e20354eadc0171ad7d8c9e9fcf2cae7fefb5ebad",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/e20354eadc0171ad7d8c9e9fcf2cae7fefb5ebad"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/3de08af2771e0ba486dc575110bd89585e161678",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3de08af2771e0ba486dc575110bd89585e161678",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/3de08af2771e0ba486dc575110bd89585e161678",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3de08af2771e0ba486dc575110bd89585e161678/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fea9a3c8186aa521446f411a3e45e15747bf82cd",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fea9a3c8186aa521446f411a3e45e15747bf82cd",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/fea9a3c8186aa521446f411a3e45e15747bf82cd"
      }
    ],
    "files": [
      {
        "sha": "6b5c6196b18a8594c5a65948981c3cba9b75d903",
        "filename": "app/modules/auth/assets/scripts.js",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fauth%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3de08af2771e0ba486dc575110bd89585e161678/app%2Fmodules%2Fauth%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fassets%2Fscripts.js?ref=3de08af2771e0ba486dc575110bd89585e161678",
        "patch": "@@ -1 +1 @@\n-console.log(\"Hi, I am a script loaded from auth module. Lorem Ipsum\");\n+console.log(\"Hi, I am a script loaded from auth module\");"
      }
    ]
  },
  {
    "sha": "84d3c5eb82758527b5226b963d7c0db1ad97688f",
    "node_id": "C_kwDONDG85doAKDg0ZDNjNWViODI3NTg1MjdiNTIyNmI5NjNkN2MwZGIxYWQ5NzY4OGY",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-13T16:53:28Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-13T16:53:28Z"
      },
      "message": "fix(workflow): removed codacy workflow",
      "tree": {
        "sha": "a2775b362d3a5506ef9e1ff8c3628d87aa206874",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a2775b362d3a5506ef9e1ff8c3628d87aa206874"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/84d3c5eb82758527b5226b963d7c0db1ad97688f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/84d3c5eb82758527b5226b963d7c0db1ad97688f",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/84d3c5eb82758527b5226b963d7c0db1ad97688f",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/84d3c5eb82758527b5226b963d7c0db1ad97688f/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "450fc752106a14628f284b1e9df85318aea1e86d",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/450fc752106a14628f284b1e9df85318aea1e86d",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/450fc752106a14628f284b1e9df85318aea1e86d"
      }
    ],
    "files": [
      {
        "sha": "43e2a67d1907b1dd5e19919814b2242cfe5f0add",
        "filename": ".github/workflows/codacy.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 51,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/450fc752106a14628f284b1e9df85318aea1e86d/.github%2Fworkflows%2Fcodacy.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/450fc752106a14628f284b1e9df85318aea1e86d/.github%2Fworkflows%2Fcodacy.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcodacy.yml?ref=450fc752106a14628f284b1e9df85318aea1e86d",
        "patch": "@@ -1,51 +0,0 @@\n-name: Codacy CI\n-\n-on:\n-  push:\n-    branches: [main, develop]\n-  pull_request:\n-    branches: [main, develop]\n-\n-jobs:\n-  build:\n-    runs-on: ubuntu-latest\n-    services:\n-      mysql:\n-        image: mysql:5.7\n-        env:\n-          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n-          MYSQL_DATABASE: uvlhubdb_test\n-          MYSQL_USER: uvlhub_user\n-          MYSQL_PASSWORD: uvlhub_password\n-        ports:\n-          - 3306:3306\n-        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v4\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v5\n-      with:\n-        python-version: '3.12'\n-\n-    - name: Install dependencies\n-      run: |\n-        python -m pip install --upgrade pip\n-        pip install -r requirements.txt\n-\n-    - name: Upload coverage to Codacy\n-      run: |\n-        pip install codacy-coverage\n-        coverage run -m pytest app/modules/ --ignore-glob='*selenium*'\n-        coverage xml \n-        python-codacy-coverage -r coverage.xml\n-      env:\n-        FLASK_ENV: testing\n-        MARIADB_HOSTNAME: 127.0.0.1\n-        MARIADB_PORT: 3306\n-        MARIADB_TEST_DATABASE: uvlhubdb_test\n-        MARIADB_USER: uvlhub_user\n-        MARIADB_PASSWORD: uvlhub_password\n-        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}"
      }
    ]
  },
  {
    "sha": "fea9a3c8186aa521446f411a3e45e15747bf82cd",
    "node_id": "C_kwDONDG85doAKGZlYTlhM2M4MTg2YWE1MjE0NDZmNDExYTNlNDVlMTU3NDdiZjgyY2Q",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-13T16:31:16Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-13T16:31:16Z"
      },
      "message": "fix(workflows): disabled codacy workflow",
      "tree": {
        "sha": "31030667e6ff48f622933031a27334748f269770",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/31030667e6ff48f622933031a27334748f269770"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/fea9a3c8186aa521446f411a3e45e15747bf82cd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fea9a3c8186aa521446f411a3e45e15747bf82cd",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/fea9a3c8186aa521446f411a3e45e15747bf82cd",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fea9a3c8186aa521446f411a3e45e15747bf82cd/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4d4bdc27ae372e135ab2b844189700fb66601c7",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f4d4bdc27ae372e135ab2b844189700fb66601c7",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f4d4bdc27ae372e135ab2b844189700fb66601c7"
      }
    ],
    "files": [
      {
        "sha": "87b83564c351d551c7a66de5d5909a66d8f5f0ef",
        "filename": "app/modules/auth/assets/scripts.js",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/fea9a3c8186aa521446f411a3e45e15747bf82cd/app%2Fmodules%2Fauth%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/fea9a3c8186aa521446f411a3e45e15747bf82cd/app%2Fmodules%2Fauth%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fassets%2Fscripts.js?ref=fea9a3c8186aa521446f411a3e45e15747bf82cd",
        "patch": "@@ -1 +1 @@\n-console.log(\"Hi, I am a script loaded from auth module\");\n+console.log(\"Hi, I am a script loaded from auth module. Lorem Ipsum\");"
      }
    ]
  },
  {
    "sha": "f4d4bdc27ae372e135ab2b844189700fb66601c7",
    "node_id": "C_kwDONDG85doAKGY0ZDRiZGMyN2FlMzcyZTEzNWFiMmI4NDQxODk3MDBmYjY2NjAxYzc",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-13T15:36:29Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-13T15:36:29Z"
      },
      "message": "fix(workflows): removed codacy workflow",
      "tree": {
        "sha": "e20354eadc0171ad7d8c9e9fcf2cae7fefb5ebad",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/e20354eadc0171ad7d8c9e9fcf2cae7fefb5ebad"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/f4d4bdc27ae372e135ab2b844189700fb66601c7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f4d4bdc27ae372e135ab2b844189700fb66601c7",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f4d4bdc27ae372e135ab2b844189700fb66601c7",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f4d4bdc27ae372e135ab2b844189700fb66601c7/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a3acee000bfc57bd6a5101bcd02d52665f24a503",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a3acee000bfc57bd6a5101bcd02d52665f24a503",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a3acee000bfc57bd6a5101bcd02d52665f24a503"
      }
    ],
    "files": [
      {
        "sha": "43e2a67d1907b1dd5e19919814b2242cfe5f0add",
        "filename": ".github/workflows/codacy.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 51,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a3acee000bfc57bd6a5101bcd02d52665f24a503/.github%2Fworkflows%2Fcodacy.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a3acee000bfc57bd6a5101bcd02d52665f24a503/.github%2Fworkflows%2Fcodacy.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcodacy.yml?ref=a3acee000bfc57bd6a5101bcd02d52665f24a503",
        "patch": "@@ -1,51 +0,0 @@\n-name: Codacy CI\n-\n-on:\n-  push:\n-    branches: [main, develop]\n-  pull_request:\n-    branches: [main, develop]\n-\n-jobs:\n-  build:\n-    runs-on: ubuntu-latest\n-    services:\n-      mysql:\n-        image: mysql:5.7\n-        env:\n-          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n-          MYSQL_DATABASE: uvlhubdb_test\n-          MYSQL_USER: uvlhub_user\n-          MYSQL_PASSWORD: uvlhub_password\n-        ports:\n-          - 3306:3306\n-        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v4\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v5\n-      with:\n-        python-version: '3.12'\n-\n-    - name: Install dependencies\n-      run: |\n-        python -m pip install --upgrade pip\n-        pip install -r requirements.txt\n-\n-    - name: Upload coverage to Codacy\n-      run: |\n-        pip install codacy-coverage\n-        coverage run -m pytest app/modules/ --ignore-glob='*selenium*'\n-        coverage xml \n-        python-codacy-coverage -r coverage.xml\n-      env:\n-        FLASK_ENV: testing\n-        MARIADB_HOSTNAME: 127.0.0.1\n-        MARIADB_PORT: 3306\n-        MARIADB_TEST_DATABASE: uvlhubdb_test\n-        MARIADB_USER: uvlhub_user\n-        MARIADB_PASSWORD: uvlhub_password\n-        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}"
      }
    ]
  },
  {
    "sha": "a3acee000bfc57bd6a5101bcd02d52665f24a503",
    "node_id": "C_kwDONDG85doAKGEzYWNlZTAwMGJmYzU3YmQ2YTUxMDFiY2QwMmQ1MjY2NWYyNGE1MDM",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-12-13T11:34:41Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-13T11:34:41Z"
      },
      "message": "fix(workflows): fixed bad secret for render release workflow for main\n\nRender's hook url was named incorrectly in the .yml related to main's deployment",
      "tree": {
        "sha": "5cfb3ab0552e529664ee054df8a49d3ccc001ff6",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/5cfb3ab0552e529664ee054df8a49d3ccc001ff6"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/a3acee000bfc57bd6a5101bcd02d52665f24a503",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnXBvRCRC1aQ7uu5UhlAAADOAQAEo03Cz0Z6IXE4bOSiwGPJlh\nf1Q52IKU5OmAefL5WPudjsQIifxbPZQ3R5HIzFURRDOlqY2TeOLBEeJGy3xBaDf+\n4ZqnYpsjboWUYo05+QWm4fIlN6QC91bNfF8HZ7xOR6p6FDIMdPLiyE3KHXpXTbgF\nSqwX5bD3JcfFqSqhF7XSr2GHB8pfaQedHnL8Jcb6AZ3ZpvxuIbkNSD4tdZrzZRGA\nKLzfS7BXtYdSaTJ+xn2/kPQZoNi5uyZYV55ZExmlmcxD5N8PPHBV0bYNBldY/9P2\n+nU1UdjsdENHyzhM3qntM7VUiRJZ1qk5mg89mKIFqHKZqIZMIYx3BmrDUKWpkhUx\ngGbUa4x3eZQ/PWVFXi05Lkjuz7JIJmRCcKiFlIRAEP8hweEPf/A6WiMCvJJQOeVk\nexdAXVMiGj9wuq4lrkZJzH16YIzBBF7a/SDI8U86HvHtzGsJDyMWOtBAUvh9ilxp\nyDxlo7P0MDU5MO0KKVawxl/ShtJWQOglK85b/RB20OZhspoLEMMGWPM0xf1Khgjb\nbXZ+kRBZ6htSlYYJqIfMDpfeWqzl7N1c9EHYMvlSC7lmkIPWf+VdNwZPbnE1KvjA\nv/HF8fF4QpuFUet+qljWYpnl/BtQEW9uLzdFl5+KUS/6u569nb9+cEJpXrFb5hB9\nkB88XGXlVUnLlHIYMRii\n=vOX7\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 5cfb3ab0552e529664ee054df8a49d3ccc001ff6\nparent cefdc245ac3a9373c31fa7f0a255b860a735e08e\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1734089681 +0100\ncommitter GitHub <noreply@github.com> 1734089681 +0100\n\nfix(workflows): fixed bad secret for render release workflow for main\n\nRender's hook url was named incorrectly in the .yml related to main's deployment",
        "verified_at": "2024-12-13T11:34:44Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a3acee000bfc57bd6a5101bcd02d52665f24a503",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a3acee000bfc57bd6a5101bcd02d52665f24a503",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a3acee000bfc57bd6a5101bcd02d52665f24a503/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cefdc245ac3a9373c31fa7f0a255b860a735e08e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/cefdc245ac3a9373c31fa7f0a255b860a735e08e",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/cefdc245ac3a9373c31fa7f0a255b860a735e08e"
      }
    ],
    "files": [
      {
        "sha": "5da736f7ffdcb35e11a740078b764998001a201b",
        "filename": ".github/workflows/render_main.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a3acee000bfc57bd6a5101bcd02d52665f24a503/.github%2Fworkflows%2Frender_main.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a3acee000bfc57bd6a5101bcd02d52665f24a503/.github%2Fworkflows%2Frender_main.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender_main.yml?ref=a3acee000bfc57bd6a5101bcd02d52665f24a503",
        "patch": "@@ -61,7 +61,7 @@ jobs:\n \n       - name: Deploy to Render\n         env:\n-          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_RENDER }}\n           ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n           GH_TOKEN: ${{ secrets.GH_TOKEN }}\n           GH_PAT: ${{ secrets.GH_PAT }}"
      }
    ]
  },
  {
    "sha": "cefdc245ac3a9373c31fa7f0a255b860a735e08e",
    "node_id": "C_kwDONDG85doAKGNlZmRjMjQ1YWMzYTkzNzNjMzFmYTdmMGEyNTViODYwYTczNWUwOGU",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-12-13T10:33:24Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-13T10:33:24Z"
      },
      "message": "fix(workflows): commit checker now runs on develop push and pr",
      "tree": {
        "sha": "a040259a4b43690edc6f87d54f680a4c4f800742",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a040259a4b43690edc6f87d54f680a4c4f800742"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/cefdc245ac3a9373c31fa7f0a255b860a735e08e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnXA10CRC1aQ7uu5UhlAAAIvIQAEphu0yhgmff6cRbOC7ENL+w\nroVFeB26X7Ep48DL9JAGQoqF9F+kRa6MOSCL63YQ4va3VRQO873xNx+99Zjh7H2G\nuJyhfomH4TMCLWOO+N02tbvPkFfShGYcnPm7p8rIZsvRLigsS1+OXw/TTYF8Q1hK\nZh7Zg4rV5UsvkZfNYuX2cZZ9xkxFK5Hhb02Q1dq0rlklpUZx23NwmENVkMraZSlI\nSh1blJxIBkDQQCiARBDpXvB6cCiJRW0OIs/lUH6uFnT4Y1EGN+zhA03lWS9e1ViW\nWgVComja2PG1g5uf9a7W33xRdHImvlg3sRbQ946FnDQ39FON5oKyzs4b1s/517dA\n5/R+LcBjNa4phfcOyNG8ckgb/6tLP/A9TfwO/R8oL9/XMsR9N04M2u3/yNdDfMZa\niDBiHGNcwWEwns6HBstBBTwlOAabYGQU3Rf8lZ2vgj//ji+SlA6af2OG7EwJjNZR\nlJmInNQjINZntRV6NMPWKziwPkbkR30VNWjNvAo3scJO3p3w9O1ttuC65hUW+7du\ni1KEnpRxCldGVebgWR/VUGCeI1x++kaEeJXafzRjkU24JH421e7sFLSovY0cyqQs\nSQd9SHn/g5DT4m3H46nOzOc5ze02OmE2lAmcoRzLcHm+rlAuh05PRlv77fXHqgis\nKwEfaa2RP9mLqpTsPy4G\n=Cy6v\n-----END PGP SIGNATURE-----\n",
        "payload": "tree a040259a4b43690edc6f87d54f680a4c4f800742\nparent 067f508548867fb0fe364628c18f8710aad8f753\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1734086004 +0100\ncommitter GitHub <noreply@github.com> 1734086004 +0100\n\nfix(workflows): commit checker now runs on develop push and pr",
        "verified_at": "2024-12-13T10:33:37Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/cefdc245ac3a9373c31fa7f0a255b860a735e08e",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/cefdc245ac3a9373c31fa7f0a255b860a735e08e",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/cefdc245ac3a9373c31fa7f0a255b860a735e08e/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "067f508548867fb0fe364628c18f8710aad8f753",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/067f508548867fb0fe364628c18f8710aad8f753",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/067f508548867fb0fe364628c18f8710aad8f753"
      }
    ],
    "files": [
      {
        "sha": "3a4460bd0a2880b2fee2b1af57cf067bd57495e0",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/cefdc245ac3a9373c31fa7f0a255b860a735e08e/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/cefdc245ac3a9373c31fa7f0a255b860a735e08e/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=cefdc245ac3a9373c31fa7f0a255b860a735e08e",
        "patch": "@@ -2,11 +2,12 @@ name: Commit Message Check\n \n on: \n   pull_request:\n-    branches: [main]\n+    branches: [develop]\n     types: [opened, reopened, edited, review_requested, synchronize]\n   push:\n     branches:\n       - \"main\"\n+      - \"develop\"\n   workflow_call:\n \n jobs:"
      }
    ]
  },
  {
    "sha": "067f508548867fb0fe364628c18f8710aad8f753",
    "node_id": "C_kwDONDG85doAKDA2N2Y1MDg1NDg4NjdmYjBmZTM2NDYyOGMxOGY4NzEwYWFkOGY3NTM",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-12-13T10:31:26Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-13T10:31:26Z"
      },
      "message": "fix(workflows) Reverted commit checker to conventional commits\n\nCommit checker was using a non-existant library, causing the fails",
      "tree": {
        "sha": "cf4f82dd10246903a3cb07223de0149153cf2ff3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/cf4f82dd10246903a3cb07223de0149153cf2ff3"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/067f508548867fb0fe364628c18f8710aad8f753",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnXAz+CRC1aQ7uu5UhlAAAshkQAFeWSjNNLnlM3zisHTaKl0Uh\n2z9XB0Eiv3CnDltLscZ4vqRhflKRVK72OR6Oy5POxuOitb4Aw2jDUB903rg2oTVr\nUMzrmXdZBVns2niJuJzFO6MXVFcIXGlTIXMXRFB1Tc0Sbu5+N/CuqwBOceJL0bKh\nK09mDQ9n7/Ryq3leaGjLy8LOs879I8tPEHq2SYBs7P41K9X604xyYFSGftaJOs0D\nwVfPLn9YEt50JmOkn6DoF48VFEO0IhUFGkEgJwUdIuljwSU3WaV0rP0Ap6ELIC80\nV0VtE6asm78NXwm252S6uCRebyFfjJYiUyw8AiTIelCLDmA2cDpQ1lLP1DlrGnnO\ndaaMEufcW7CtuzWyxtxQLC9ODxVRUE02ZEJPMtPswYRf+6s9VE6ycy2kzzVe+4wk\nL6ragpXw0A/Gi3YAiQZB4+4v8rWn2FOjtcPcDnv8XqBm5Oo/VD+jbgcbUYBoB25X\nBzdMLXtWdFtpS+tozR9QRudLO9DnjyxIxhgLtD/QY4QY0mP4mW4wGohaGwzcjDOG\nMFRLBQeO5SeTF9Mae3Qbf8mJbLfP06kJuh4G59SZg/S2Zc3f7LulTKnrs6rsZdIc\nI3l5GPNVZcAElXr2pniexlLbqhIyNsSVks1hUfJU23SbCKGe3PZnqu+0gnQYlQKV\nVp4ZOeRD8eR2V6Xs1j4g\n=uRvS\n-----END PGP SIGNATURE-----\n",
        "payload": "tree cf4f82dd10246903a3cb07223de0149153cf2ff3\nparent d597fca7e7f984abf6e2b4e74ce515033817a295\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1734085886 +0100\ncommitter GitHub <noreply@github.com> 1734085886 +0100\n\nfix(workflows) Reverted commit checker to conventional commits\n\nCommit checker was using a non-existant library, causing the fails",
        "verified_at": "2024-12-13T10:32:47Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/067f508548867fb0fe364628c18f8710aad8f753",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/067f508548867fb0fe364628c18f8710aad8f753",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/067f508548867fb0fe364628c18f8710aad8f753/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d597fca7e7f984abf6e2b4e74ce515033817a295",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d597fca7e7f984abf6e2b4e74ce515033817a295",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d597fca7e7f984abf6e2b4e74ce515033817a295"
      }
    ],
    "files": [
      {
        "sha": "97055dd355617d91a2ca4f48d4134e30d7ae66cc",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 11,
        "deletions": 13,
        "changes": 24,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/067f508548867fb0fe364628c18f8710aad8f753/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/067f508548867fb0fe364628c18f8710aad8f753/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=067f508548867fb0fe364628c18f8710aad8f753",
        "patch": "@@ -1,20 +1,18 @@\n name: Commit Message Check\n \n-on: [push]\n+on: \n+  pull_request:\n+    branches: [main]\n+    types: [opened, reopened, edited, review_requested, synchronize]\n+  push:\n+    branches:\n+      - \"main\"\n+  workflow_call:\n \n jobs:\n   commit-check:\n+    name: Conventional Commits\n     runs-on: ubuntu-latest\n     steps:\n-      - name: Checkout code\n-        uses: actions/checkout@v1\n-        with:\n-          fetch-depth: 10\n-\n-      - name: Install dependencies\n-        run: npm install @commitlint/config-conventional @commitlint/cli husky\n-\n-      - name: Run CommitLint\n-        run: npx commitlint --from=HEAD~1 --to=HEAD --config @commitlint/config-conventional\n-        env:\n-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      - uses: actions/checkout@v2\n+      - uses: webiny/action-conventional-commits@v1.0.3"
      }
    ]
  },
  {
    "sha": "d597fca7e7f984abf6e2b4e74ce515033817a295",
    "node_id": "C_kwDONDG85doAKGQ1OTdmY2E3ZTdmOTg0YWJmNmUyYjRlNzRjZTUxNTAzMzgxN2EyOTU",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-13T10:23:18Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-13T10:23:33Z"
      },
      "message": "fix(workflows): removed python linter as it was overtly strict",
      "tree": {
        "sha": "c43b733ca826ce223aba2d1b2681c23fadf5d947",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/c43b733ca826ce223aba2d1b2681c23fadf5d947"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/d597fca7e7f984abf6e2b4e74ce515033817a295",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d597fca7e7f984abf6e2b4e74ce515033817a295",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d597fca7e7f984abf6e2b4e74ce515033817a295",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d597fca7e7f984abf6e2b4e74ce515033817a295/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7aef1b7e626cb1d31eb78665e8019c75c7aba5b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e7aef1b7e626cb1d31eb78665e8019c75c7aba5b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e7aef1b7e626cb1d31eb78665e8019c75c7aba5b"
      }
    ],
    "files": [
      {
        "sha": "ccbd3311ba585fae0de19dc7a96de461fce8de9c",
        "filename": ".github/workflows/lint.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e7aef1b7e626cb1d31eb78665e8019c75c7aba5b/.github%2Fworkflows%2Flint.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e7aef1b7e626cb1d31eb78665e8019c75c7aba5b/.github%2Fworkflows%2Flint.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Flint.yml?ref=e7aef1b7e626cb1d31eb78665e8019c75c7aba5b",
        "patch": "@@ -1,28 +0,0 @@\n-name: Python Lint\n-\n-on:\n-  push:\n-    branches: [main, develop]\n-  pull_request:\n-    branches: [main, develop]\n-\n-jobs:\n-  lint:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - uses: actions/checkout@v2\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: '3.x'\n-\n-    - name: Install Dependencies\n-      run: |\n-        python -m pip install --upgrade pip\n-        pip install flake8\n-\n-    - name: Lint with flake8\n-      run: |\n-        flake8 app"
      }
    ]
  },
  {
    "sha": "e7aef1b7e626cb1d31eb78665e8019c75c7aba5b",
    "node_id": "C_kwDONDG85doAKGU3YWVmMWI3ZTYyNmNiMWQzMWViNzg2NjVlODAxOWM3NWM3YWJhNWI",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-12-13T10:21:34Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-13T10:21:34Z"
      },
      "message": "fix(workflows): Updated conventional commit checker\n\nFixed conventional commit checker workflow as to not fail due to really old commits",
      "tree": {
        "sha": "acd39a2dccd752d1aca4ab80488bed322303ad14",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/acd39a2dccd752d1aca4ab80488bed322303ad14"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/e7aef1b7e626cb1d31eb78665e8019c75c7aba5b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnXAquCRC1aQ7uu5UhlAAA3vIQAIYsQ2KLUjMno1SHLtRO/2kA\nEfpXMrNyW/J0tTuuIa6IegbSsoEEdG1HW1qiJYUwodhQsjVLbTNxJCh5Y5BmM1Y1\nsO2aAq0FqkkNRo3tkKPnbAKqT+M8JIVPkz72k1OQ3feipzjR1qXzeIX8619RZ1Ij\nfLiidbeV2Rnlv0EPmmHHAX8Exi4oxyrVoa2s9mmL78Q64xm38I1r/rzrONw9YWH/\n6Iq77IZtGZucGLm5lHku/4ukT+Yzz3smjCfXFaHwfEcR9mh6cxhPb/t/8fxu21ys\nJHyd+aRGHFYVEieNBFDbZL9Dt/b6kCpo/tnr3Y9/9BDlnFGlYqV7qgN/NWxfL8Sv\nh9ahl9nIzmzPQqvfBfUYh/8ZtnuHKaBzFBSAlw0fEmr1VOsTpab2df94oiqotPGl\n65NWQp80ofRuNyTniC8StMBuBjSI9F0LpxbddZprvlj7exT6uidWiQw4sbLDPQk/\nKKZXYFbacoAhYcj7RY0go5z2tE/mjp0iL/43URQA+Sc2bcXYqRHzQoLGG8YhnVtw\nSGnC1LqOn98/EC0ZUFVBV5QDW+iaLwQkrUXxAhjrt1I14jhCcfKZ4/k6Z9D/BP8V\nC97nSO7UuANlFcD2sGmz5zfY10p/J4zFvWnFiqmj/WdaQ49cG8zDNiGj8jjfk0av\ngCxxYIbzTBh6JFxAVLFa\n=cYhf\n-----END PGP SIGNATURE-----\n",
        "payload": "tree acd39a2dccd752d1aca4ab80488bed322303ad14\nparent 3187bd9499715fe18985ef0f177e4ec5824fb129\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1734085294 +0100\ncommitter GitHub <noreply@github.com> 1734085294 +0100\n\nfix(workflows): Updated conventional commit checker\n\nFixed conventional commit checker workflow as to not fail due to really old commits",
        "verified_at": "2024-12-13T10:22:51Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e7aef1b7e626cb1d31eb78665e8019c75c7aba5b",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e7aef1b7e626cb1d31eb78665e8019c75c7aba5b",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e7aef1b7e626cb1d31eb78665e8019c75c7aba5b/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3187bd9499715fe18985ef0f177e4ec5824fb129",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3187bd9499715fe18985ef0f177e4ec5824fb129",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/3187bd9499715fe18985ef0f177e4ec5824fb129"
      }
    ],
    "files": [
      {
        "sha": "9f207de23edb9f5e058de05d89cf12e6db307695",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e7aef1b7e626cb1d31eb78665e8019c75c7aba5b/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e7aef1b7e626cb1d31eb78665e8019c75c7aba5b/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=e7aef1b7e626cb1d31eb78665e8019c75c7aba5b",
        "patch": "@@ -9,7 +9,7 @@ jobs:\n       - name: Checkout code\n         uses: actions/checkout@v1\n         with:\n-          fetch-depth: 0\n+          fetch-depth: 10\n \n       - name: Install dependencies\n         run: npm install @commitlint/config-conventional @commitlint/cli husky"
      }
    ]
  },
  {
    "sha": "3187bd9499715fe18985ef0f177e4ec5824fb129",
    "node_id": "C_kwDONDG85doAKDMxODdiZDk0OTk3MTVmZTE4OTg1ZWYwZjE3N2U0ZWM1ODI0ZmIxMjk",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-12-12T22:22:04Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-12T22:22:04Z"
      },
      "message": "Merge pull request #25 from flamenquin-hub-single/feature-sync-with-github\n\nfix(dataset, auth): client secret token added and some fixes",
      "tree": {
        "sha": "fa98cff08de616ad64b466773c49b3937520ccd5",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/fa98cff08de616ad64b466773c49b3937520ccd5"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/3187bd9499715fe18985ef0f177e4ec5824fb129",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnW2IMCRC1aQ7uu5UhlAAAxoIQAB/q/RL/tp0/7nril84EDN4W\nHGwUY71p+AhboRdoSoIjkJdFSZnIOz7vYnx8LDOKmRivHODaXh5Nvw3c2KF6Zq6b\nwq6QQEOR4G3A9bIzlrBwPBncVvMnysLsJq+0T+QFiWDuenNx8QaXvJyaq2xIEVAs\nPll1aDqX6QsjBHwEgf63U6XOKTefK6pIwdnbB8da1IfxqRnmq7VWOHEaowiCwUGh\n4cKOKxP7QelA2F0KFaf+64XaZhHp9apaslOUIKnpr8r6Puh0Pv4d+XQOrdXpigHd\nC/lpf9flc8vuL1OZkeTOO9B8C9/oEktT/FOuiDC2XwWnXTK2be6sGLJp2F8O4D/x\nzgMDP9X/pl3P3ofyqpwsy5JW6h6zJdruSV87VVXrej3pNphwj1WVBkc2YW0oQTul\ntcEk/hGK2it1li+PjTufbYhrdwuysa+aoS3DraKd6/YeoxkXRHfKg6YLv7eb5SMb\nQSw1NiOpGCVcuUVA2KbfakKtdUwmijetls+C+KT+Y6+9fJuE97XwCuQqQzUKK484\ndhgy1gIrdxL1J9tXmBq/jw3h4SZe5q8xuzysp4izBpqBPNjAVeHpfQtRSX4ohZhs\nbtBiSoV10RyWkIlPgLlsPZ6MeLJIxmIYaq5ZXiTqsEeo7Ef8PMbTPwjjCgX/7S9c\nSn5+A7iYgcmJx7dwp8Jt\n=DiUQ\n-----END PGP SIGNATURE-----\n",
        "payload": "tree fa98cff08de616ad64b466773c49b3937520ccd5\nparent 9d471f91483fe7c42fc80f84d4cb09bab3be87c9\nparent d6f3d8664f474e87c766708c6fd8372f6fe853b0\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1734042124 +0100\ncommitter GitHub <noreply@github.com> 1734042124 +0100\n\nMerge pull request #25 from flamenquin-hub-single/feature-sync-with-github\n\nfix(dataset, auth): client secret token added and some fixes",
        "verified_at": "2024-12-12T22:23:26Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3187bd9499715fe18985ef0f177e4ec5824fb129",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/3187bd9499715fe18985ef0f177e4ec5824fb129",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3187bd9499715fe18985ef0f177e4ec5824fb129/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/9d471f91483fe7c42fc80f84d4cb09bab3be87c9"
      },
      {
        "sha": "d6f3d8664f474e87c766708c6fd8372f6fe853b0",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d6f3d8664f474e87c766708c6fd8372f6fe853b0",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d6f3d8664f474e87c766708c6fd8372f6fe853b0"
      }
    ],
    "files": [
      {
        "sha": "b9ea75aabfdbeb0e5b637b8d0741cec8dc7d86a2",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3187bd9499715fe18985ef0f177e4ec5824fb129/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3187bd9499715fe18985ef0f177e4ec5824fb129/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=3187bd9499715fe18985ef0f177e4ec5824fb129",
        "patch": "@@ -67,6 +67,7 @@ jobs:\n           ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n           GH_TOKEN: ${{ secrets.GH_TOKEN }}\n           GH_PAT: ${{ secrets.GH_PAT }}\n+          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}\n         run: |\n           curl \"$deploy_url\"\n       \n\\ No newline at end of file"
      },
      {
        "sha": "c8105b78321f80b32919280eedbd30d2feeed6e7",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 8,
        "deletions": 20,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3187bd9499715fe18985ef0f177e4ec5824fb129/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3187bd9499715fe18985ef0f177e4ec5824fb129/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=3187bd9499715fe18985ef0f177e4ec5824fb129",
        "patch": "@@ -15,11 +15,11 @@\n user_profile_service = UserProfileService()\n \n app = Flask(__name__)\n-#app.config[\"SECRET_KEY\"] = \"SECRET KEY  \"\n token_admin = os.getenv(\"ORG_TOKEN_ADMIN\")\n+client_secret = os.getenv(\"CLIENT_SECRET\")\n \n-github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g',\n-                                        client_secret='00b92023ceb36020d4d0a7f34d5a583e2e386611')\n+\n+github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g', client_secret=client_secret)\n \n app.register_blueprint(github_blueprint, url_prefix='/github_login')\n \n@@ -117,7 +117,6 @@ def invite_user():\n \n     if response.status_code == 201:\n         return f\"Now {username} can join our github organization. Accept it in github. Once joined, you don't have to repeat this process.\"\n-        #return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n     \n     elif response.status_code == 404:\n         return jsonify({\"error\": f\"Username {username} not found\"}), 404\n@@ -153,19 +152,8 @@ def crear_repo():\n     \n     except subprocess.CalledProcessError as e:\n         \n-        if e.returncode == 127:\n-            return '''\n-                The command 'gh' is not recognized. Please install GitHub CLI by following these steps in your command line:\n-\n-                    1. Update your package list:\n-                sudo apt update\n-                \n-                    2. Install the GitHub CLI:\n-                sudo apt install gh\n-                \n-                    3. You can verify the installation:\n-                gh --version\n-                '''\n-        \n-        return f\"Repository '{username}' is already created. Now, always you are sync with github, you can push from here your datasets or models to github.\"\n-    \n+        return (\n+            f\"Something went wrong, it may be caused by:<br>\"\n+            f\"1) Repository '{username}' is already created. Don't worry, now always you are sync with github, you can push from here your datasets or models to github.<br>\"\n+            f\"2) If you are a developer on localhost, you will have to give administrator permission.\"\n+        )    "
      },
      {
        "sha": "a6a251eeb11690091da84b66796c075f41bfb048",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3187bd9499715fe18985ef0f177e4ec5824fb129/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3187bd9499715fe18985ef0f177e4ec5824fb129/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=3187bd9499715fe18985ef0f177e4ec5824fb129",
        "patch": "@@ -334,14 +334,13 @@ def commit(dataset_id):\n         \n         all_files = repository.get_all_files_for_dataset(dataset_id)\n         \n-        # Copiar archivos y a\u00f1adirlos al commit\n+        # Copiar archivos, llevarlos al directorio de git y stagearlos\n         for archivo in all_files:\n             ruta_archivo_origen = archivo.get_path()\n             ruta_destino_archivo = os.path.join(ruta_carpeta, os.path.basename(ruta_archivo_origen))\n             shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n             subprocess.run(f\"git add {os.path.relpath(ruta_destino_archivo, ruta_repositorio)}\", cwd=ruta_repositorio, check=True, shell=True)\n         \n-        # Realizar el commit y el push\n         subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n         subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n \n@@ -370,16 +369,15 @@ def commit_file(file_id):\n        \n         ruta_repositorio = f\"/app/uvl_git/{username}\"\n     \n-        # Configurar usuario de Git\n         subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n         subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n \n         # Configurar URL remota con el PAT\n-        token = os.getenv('GH_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n+        token = os.getenv('GH_PAT')\n         repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n         subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n \n-        # Obtener archivo y hacer commit\n+        # Obtener archivo y copiarlo al directorio de git\n         hubfile_repository = HubfileRepository()\n         hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n         ruta_archivo_origen = hubfile.get_path()"
      }
    ]
  },
  {
    "sha": "adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
    "node_id": "C_kwDONDG85doAKGFkZjhkODRmYWUyOTRjY2I3NWNiNWNkN2VkMjM2Y2FhM2ZiNDI2YWI",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-12-12T22:10:47Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-12T22:10:47Z"
      },
      "message": "Merge branch 'develop' into feature-upload_analyse_and_repair_UVL",
      "tree": {
        "sha": "781661d64d1f2d39ce95ced1df6c870edba35aa3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/781661d64d1f2d39ce95ced1df6c870edba35aa3"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnW19nCRC1aQ7uu5UhlAAAip4QAH1njBti5UZm2EuV9Op69qyu\nX/caGX82dhfNe7LS8VBlJDO694sc5EauOchx3joZHrKU0nr7ty8zYBWl6bfhUYJO\njkwVah1mLcdEOO+oZDVTmQf7VBQUohfePOyeJWPwkfkBx88z6ooA+ztbZquo0Rt1\nRPvPoa5joohVnScAQsqyvhPh4rlIbrR7OR0Wypg7OLdvD8Bege0BtYEWFft8t/nn\nexan0GgwpeSfFdnD8+h53b9UpSNqLPb/t+7cPQAJ1El9Vuc4t6TfESJHSFxB81+p\nhMa5B2NL6p4oQN8o4Xi2W9BwXHIveyGf5ezlu/Anizt5v5p7t4bwLi/Z6AvznlYx\njwT1WMvwsfZaIhuGGaR6pYkCXlKWXNn8EMOp4XHkDqlSZ8vBkIJBQt06Uap5YVZh\nAgpwrH8Lp9VegXfKgGM5pgJG62wPkWaGgFbCq6neOL7sZwS8UJfIf9vytMy/iVGJ\nfIwEwk4JN5Kt6m2rFgPYhinpJRcB2xYVW6LahnNVYUHlA+ACE+zx9GcHh6YIfRse\nAdcTQP130VwrAMaygc8CeDogxWyMQBp5x2z/ZH2XMvwtXrmljyUN51dqALqJMofY\n6n6fPceIJ6ve9fRLQwMmXbW3Ys9X/zdUCIbIKwAZwZhX45qKxrYQfUjIevLn0/1B\nwbdswW1xMlCP12p9RPJB\n=/snf\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 781661d64d1f2d39ce95ced1df6c870edba35aa3\nparent 253b1bf34f429e58dbd0ccd6808fbca4d17bccf4\nparent 9d471f91483fe7c42fc80f84d4cb09bab3be87c9\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1734041447 +0100\ncommitter GitHub <noreply@github.com> 1734041447 +0100\n\nMerge branch 'develop' into feature-upload_analyse_and_repair_UVL",
        "verified_at": "2024-12-12T22:10:50Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "253b1bf34f429e58dbd0ccd6808fbca4d17bccf4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/253b1bf34f429e58dbd0ccd6808fbca4d17bccf4",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/253b1bf34f429e58dbd0ccd6808fbca4d17bccf4"
      },
      {
        "sha": "9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/9d471f91483fe7c42fc80f84d4cb09bab3be87c9"
      }
    ],
    "files": [
      {
        "sha": "7a6013bf8ee1dfc7f2da495d18d7b020e9b0d3f0",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fbug_report.md?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,38 @@\n+---\n+name: Bug report\n+about: For bugs you may find\n+title: Brief bug description\n+labels: bug\n+assignees: ''\n+\n+---\n+\n+**Describe the bug**\n+A clear and concise description of what the bug is.\n+\n+**To Reproduce**\n+Steps to reproduce the behavior:\n+1. Go to '...'\n+2. Click on '....'\n+3. Scroll down to '....'\n+4. See error\n+\n+**Expected behavior**\n+A clear and concise description of what you expected to happen.\n+\n+**Screenshots**\n+If applicable, add screenshots to help explain your problem.\n+\n+**Desktop (please complete the following information):**\n+ - OS: [e.g. iOS]\n+ - Browser [e.g. chrome, safari]\n+ - Version [e.g. 22]\n+\n+**Smartphone (please complete the following information):**\n+ - Device: [e.g. iPhone6]\n+ - OS: [e.g. iOS8.1]\n+ - Browser [e.g. stock browser, safari]\n+ - Version [e.g. 22]\n+\n+**Additional context**\n+Add any other context about the problem here."
      },
      {
        "sha": "ca07ee63e773329b8606abfa23190baa1209b303",
        "filename": ".github/ISSUE_TEMPLATE/documentation.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fdocumentation.md?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,11 @@\n+---\n+name: Documentation\n+about: For documents that may need updating\n+title: Update for [document name]\n+labels: documentation\n+assignees: ''\n+\n+---\n+\n+**Name the document and describe the necessary updates**\n+Describe the updates that the document needs"
      },
      {
        "sha": "a4608544700957f9174c6c537bf9664fc3667d94",
        "filename": ".github/ISSUE_TEMPLATE/work-item.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fwork-item.md?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Work Item\n+about: For Work Items\n+title: Work Item name\n+labels: enhancement\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n+\n+**Describe the solution you'd like**\n+A clear and concise description of what you want to happen.\n+\n+**Describe alternatives you've considered**\n+A clear and concise description of any alternative solutions or features you've considered.\n+\n+**Additional context**\n+Add any other context or screenshots about the feature request here."
      },
      {
        "sha": "43e2a67d1907b1dd5e19919814b2242cfe5f0add",
        "filename": ".github/workflows/codacy.yml",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2Fworkflows%2Fcodacy.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2Fworkflows%2Fcodacy.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcodacy.yml?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,51 @@\n+name: Codacy CI\n+\n+on:\n+  push:\n+    branches: [main, develop]\n+  pull_request:\n+    branches: [main, develop]\n+\n+jobs:\n+  build:\n+    runs-on: ubuntu-latest\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+    - name: Checkout code\n+      uses: actions/checkout@v4\n+\n+    - name: Set up Python\n+      uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Upload coverage to Codacy\n+      run: |\n+        pip install codacy-coverage\n+        coverage run -m pytest app/modules/ --ignore-glob='*selenium*'\n+        coverage xml \n+        python-codacy-coverage -r coverage.xml\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}"
      },
      {
        "sha": "cecdd33c479807f9136a24c334ed2061c27240a8",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 15,
        "deletions": 13,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,18 +1,20 @@\n-name: Commits Syntax Checker\n+name: Commit Message Check\n \n-on:\n-  pull_request:\n-    branches: [main]\n-    types: [opened, reopened, edited, review_requested, synchronize]\n-  push:\n-    branches:\n-      - \"main\"\n-  workflow_call:\n+on: [push]\n \n jobs:\n-  check:\n-    name: Conventional Commits\n+  commit-check:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@v2\n-      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file\n+      - name: Checkout code\n+        uses: actions/checkout@v1\n+        with:\n+          fetch-depth: 0\n+\n+      - name: Install dependencies\n+        run: npm install @commitlint/config-conventional @commitlint/cli husky\n+\n+      - name: Run CommitLint\n+        run: npx commitlint --from=HEAD~1 --to=HEAD --config @commitlint/config-conventional\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      },
      {
        "sha": "c5b9dbad0e7570244cb84942b53b859bf041af6c",
        "filename": ".github/workflows/deloyment_on_webhook.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/253b1bf34f429e58dbd0ccd6808fbca4d17bccf4/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/253b1bf34f429e58dbd0ccd6808fbca4d17bccf4/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeloyment_on_webhook.yml?ref=253b1bf34f429e58dbd0ccd6808fbca4d17bccf4",
        "patch": "@@ -1,32 +0,0 @@\n-name: Deploy on Webhook\n-\n-on:\n-  workflow_run:\n-    workflows: \n-      - \"Python Lint\"\n-      - \"Run tests\"\n-    types:\n-      - completed\n-\n-jobs:\n-  deploy:\n-    if: github.ref == 'refs/heads/main'\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Check lint and test results\n-      run: |\n-        if [ \"${{ github.event.workflow_run.conclusion }}\" != \"success\" ]; then\n-          echo \"Lint or Test workflow did not succeed. Exiting.\"\n-          exit 1\n-        fi\n-\n-    - name: Trigger Deployment Webhook\n-      env:\n-        WEBHOOK_DOMAIN: ${{ secrets.WEBHOOK_DOMAIN }}\n-        WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}\n-      run: |\n-        curl -X POST https://${{ secrets.WEBHOOK_DOMAIN }}/webhook/deploy -H \"Authorization: Bearer ${{ secrets.WEBHOOK_TOKEN }}\""
      },
      {
        "sha": "f7dfe75eb96badbdd3ee434377bee31f33a173df",
        "filename": ".github/workflows/deployment_on_dockerhub.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/253b1bf34f429e58dbd0ccd6808fbca4d17bccf4/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/253b1bf34f429e58dbd0ccd6808fbca4d17bccf4/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml?ref=253b1bf34f429e58dbd0ccd6808fbca4d17bccf4",
        "patch": "@@ -1,43 +0,0 @@\n-# This workflow uses actions that are not certified by GitHub.\n-# They are provided by a third-party and are governed by\n-# separate terms of service, privacy policy, and support\n-# documentation.\n-\n-# GitHub recommends pinning actions to a commit SHA.\n-# To get a newer version, you will need to update the SHA.\n-# You can also reference a tag or branch, but the action may change without warning.\n-\n-name: Publish image in Docker Hub\n-\n-on:\n-  release:\n-    types: [published]\n-\n-jobs:\n-  push_to_registry:\n-    name: Push Docker image to Docker Hub\n-    runs-on: ubuntu-latest\n-    steps:\n-      - name: Check out the repo\n-        uses: actions/checkout@v3\n-\n-      - name: Log in to Docker Hub\n-        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a\n-        with:\n-          username: ${{ secrets.DOCKER_USER }}\n-          password: ${{ secrets.DOCKER_PASSWORD }}\n-\n-      - name: Build and push Docker image\n-        run: docker build --build-arg VERSION_TAG=${{ github.event.release.tag_name }} -t drorganvidez/uvlhub:${{ github.event.release.tag_name }} -f docker/images/Dockerfile.prod .\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled\n-\n-      - name: Push Docker image to Docker Hub\n-        run: docker push drorganvidez/uvlhub:${{ github.event.release.tag_name }}\n-\n-      - name: Tag and push latest\n-        run: |\n-          docker tag drorganvidez/uvlhub:${{ github.event.release.tag_name }} drorganvidez/uvlhub:latest\n-          docker push drorganvidez/uvlhub:latest\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled"
      },
      {
        "sha": "733a9d501cdd9fab530bcab9a5da80a5cfe7653c",
        "filename": ".github/workflows/render.yml",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,72 @@\n+name: Deploy develop branch to Render\n+\n+on:\n+    push:\n+      branches:\n+        - develop\n+    pull_request:\n+      branches:\n+        - develop\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+      with:\n+        ref: 'develop'\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_DEVELOP }}\n+          ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+          GH_TOKEN: ${{ secrets.GH_TOKEN }}\n+          GH_PAT: ${{ secrets.GH_PAT }}\n+        run: |\n+          curl \"$deploy_url\"\n+      \n\\ No newline at end of file"
      },
      {
        "sha": "89ec68b74d858fee1da0b2e6abde0a23a5a4431a",
        "filename": ".github/workflows/render_main.yml",
        "status": "added",
        "additions": 70,
        "deletions": 0,
        "changes": 70,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2Fworkflows%2Frender_main.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2Fworkflows%2Frender_main.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender_main.yml?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,70 @@\n+name: Deploy main branch to Render\n+\n+on:\n+    push:\n+      branches:\n+        - main\n+    pull_request:\n+      branches:\n+        - main\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+          ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+          GH_TOKEN: ${{ secrets.GH_TOKEN }}\n+          GH_PAT: ${{ secrets.GH_PAT }}\n+        run: |\n+          curl \"$deploy_url\"\n+      "
      },
      {
        "sha": "8ad25762a0dbb9b820352c6abaf50a7e089c893d",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -46,5 +46,6 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n       run: |\n-        pytest app/modules/ --ignore-glob='*selenium*'\n+        pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      },
      {
        "sha": "049e06399eb565e07bbbbcf9aa7c402177651378",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitignore?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,7 +1,6 @@\n .env\n __pycache__/\n .idea\n-uploads/\n app.log\n .DS_Store\n rosemary.egg-info/"
      },
      {
        "sha": "fdd63b05e87cb4c63240ad04afb83e89340a1d1c",
        "filename": "app/__init__.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2F__init__.py?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -67,4 +67,4 @@ def inject_vars_into_jinja():\n     return app\n \n \n-app = create_app()\n+app = create_app()\n\\ No newline at end of file"
      },
      {
        "sha": "9b6cb2b000af47b9662bacb80e90dfe99149b9d9",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 118,
        "deletions": 2,
        "changes": 120,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,15 +1,28 @@\n-from flask import render_template, redirect, url_for, request\n+import os\n+import shutil\n+import subprocess\n+from flask import Flask, jsonify, render_template, redirect, url_for, request\n from flask_login import current_user, login_user, logout_user\n-\n+import requests\n from app.modules.auth import auth_bp\n from app.modules.auth.forms import SignupForm, LoginForm\n from app.modules.auth.services import AuthenticationService\n from app.modules.profile.services import UserProfileService\n+from flask_dance.contrib.github import make_github_blueprint, github\n \n \n authentication_service = AuthenticationService()\n user_profile_service = UserProfileService()\n \n+app = Flask(__name__)\n+#app.config[\"SECRET_KEY\"] = \"SECRET KEY  \"\n+token_admin = os.getenv(\"ORG_TOKEN_ADMIN\")\n+\n+github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g',\n+                                        client_secret='00b92023ceb36020d4d0a7f34d5a583e2e386611')\n+\n+app.register_blueprint(github_blueprint, url_prefix='/github_login')\n+\n \n @auth_bp.route(\"/signup/\", methods=[\"GET\", \"POST\"])\n def show_signup_form():\n@@ -53,3 +66,106 @@ def login():\n def logout():\n     logout_user()\n     return redirect(url_for('public.index'))\n+\n+\n+@auth_bp.route('/gitlogin')\n+def github_login():\n+    \n+   if not github.authorized:\n+        return redirect(url_for('github.login'))\n+   else:\n+       account_info = github.get('/user/repos')\n+       if account_info.ok:\n+           account_info_json = account_info.json()\n+           return 'Your github account is already sync with uvlhub.'\n+\n+   return 'Request failed!'\n+\n+\n+@auth_bp.route('/invite', methods=['GET', 'POST'])\n+def invite_user():\n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return 'First sync your github account.'\n+              \n+    url = f'https://api.github.com/orgs/uvlhub/invitations'  \n+    headers = {\n+        'Authorization': f'token {token_admin}',\n+        'Accept': 'application/vnd.github.v3+json'\n+    }\n+    payload = {\n+        \"invitee_id\": None, \n+    }\n+\n+    # OBTENER EL ID DEL USUARIO DE GITHUB\n+    user_url = f'https://api.github.com/users/{username}'\n+    user_response = requests.get(user_url, headers=headers)\n+    \n+    if user_response.status_code == 200:\n+        user_id = user_response.json().get(\"id\")\n+        payload[\"invitee_id\"] = user_id  \n+        \n+    elif user_response.status_code == 404:\n+        return jsonify({\"error\": f\"Can't find the user: {username}\"}), 404\n+    else:\n+        return jsonify({\"error\": f\"Something went wrong\"}), user_response.status_code\n+        \n+    response = requests.post(url, json=payload, headers=headers)\n+\n+    if response.status_code == 201:\n+        return f\"Now {username} can join our github organization. Accept it in github. Once joined, you don't have to repeat this process.\"\n+        #return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n+    \n+    elif response.status_code == 404:\n+        return jsonify({\"error\": f\"Username {username} not found\"}), 404\n+    \n+    elif response.status_code == 422:\n+        return f'User {username} already belongs to our github organization or have a valid invitation to join. You have to find out in github.'\n+    \n+    else:\n+        return jsonify({\"error\": \"Can't send the invitation\", \"details\": response.json()}), response.status_code\n+    \n+\n+\n+@auth_bp.route('/create_repo', methods=['GET', 'POST'])\n+def crear_repo():\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return 'First sync your github account.'\n+\n+    comando = f\"gh repo create uvlhub/{username} --public\"\n+    url_repo = f\"https://github.com/uvlhub/{username}.git\"\n+    \n+    try:\n+        \n+        subprocess.run(comando, check=True, shell=True)\n+        directory = f\"/app/uvl_git/{username}\"\n+        os.makedirs(directory, exist_ok=True)\n+        subprocess.run(f\"git clone {url_repo} {directory}\",cwd=directory, check=True, shell=True)\n+        return f\"Repository '{username}' created in our github organization correctly.\"\n+    \n+    except subprocess.CalledProcessError as e:\n+        \n+        if e.returncode == 127:\n+            return '''\n+                The command 'gh' is not recognized. Please install GitHub CLI by following these steps in your command line:\n+\n+                    1. Update your package list:\n+                sudo apt update\n+                \n+                    2. Install the GitHub CLI:\n+                sudo apt install gh\n+                \n+                    3. You can verify the installation:\n+                gh --version\n+                '''\n+        \n+        return f\"Repository '{username}' is already created. Now, always you are sync with github, you can push from here your datasets or models to github.\"\n+    "
      },
      {
        "sha": "a76c25ccdf881eb721e29af34f2d893b5fb6d677",
        "filename": "app/modules/auth/services.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fauth%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fauth%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fservices.py?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -9,6 +9,7 @@\n from core.configuration.configuration import uploads_folder_name\n from core.services.BaseService import BaseService\n \n+os.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'\n \n class AuthenticationService(BaseService):\n     def __init__(self):"
      },
      {
        "sha": "e9ebaefb7b58ae220dcdaedf018126e58f6149b8",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 113,
        "deletions": 1,
        "changes": 114,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -139,6 +139,119 @@ var currentId = 0;\n \n         window.onload = function () {\n \n+            test_zenodo_connection();\n+\n+            document.getElementById('upload_button').addEventListener('click', function () {\n+\n+                clean_upload_errors();\n+                show_loading();\n+\n+                // check title and description\n+                let check = check_title_and_description();\n+\n+                if (check) {\n+                    // process data form\n+                    const formData = {};\n+\n+                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                        const form = document.getElementById(formId);\n+                        const inputs = form.querySelectorAll('input, select, textarea');\n+                        inputs.forEach(input => {\n+                            if (input.name) {\n+                                formData[input.name] = formData[input.name] || [];\n+                                formData[input.name].push(input.value);\n+                            }\n+                        });\n+                    });\n+\n+                    let formDataJson = JSON.stringify(formData);\n+                    console.log(formDataJson);\n+\n+                    const csrfToken = document.getElementById('csrf_token').value;\n+                    const formUploadData = new FormData();\n+                    formUploadData.append('csrf_token', csrfToken);\n+\n+                    for (let key in formData) {\n+                        if (formData.hasOwnProperty(key)) {\n+                            formUploadData.set(key, formData[key]);\n+                        }\n+                    }\n+\n+                    let checked_orcid = true;\n+                    if (Array.isArray(formData.author_orcid)) {\n+                        for (let orcid of formData.author_orcid) {\n+                            orcid = orcid.trim();\n+                            if (orcid !== '' && !isValidOrcid(orcid)) {\n+                                hide_loading();\n+                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                                checked_orcid = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    let checked_name = true;\n+                    if (Array.isArray(formData.author_name)) {\n+                        for (let name of formData.author_name) {\n+                            name = name.trim();\n+                            if (name === '') {\n+                                hide_loading();\n+                                write_upload_error(\"The author's name cannot be empty\");\n+                                checked_name = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    if (checked_orcid && checked_name) {\n+                        fetch('/dataset/upload', {\n+                            method: 'POST',\n+                            body: formUploadData\n+                        })\n+                            .then(response => {\n+                                if (response.ok) {\n+                                    console.log('Dataset sent successfully');\n+                                    response.json().then(data => {\n+                                        console.log(data.message);\n+                                        window.location.href = \"/dataset/list\";\n+                                    });\n+                                } else {\n+                                    response.json().then(data => {\n+                                        console.error('Error: ' + data.message);\n+                                        hide_loading();\n+\n+                                        write_upload_error(data.message);\n+\n+                                    });\n+                                }\n+                            })\n+                            .catch(error => {\n+                                console.error('Error in POST request:', error);\n+                            });\n+                    }\n+\n+\n+                } else {\n+                    hide_loading();\n+                }\n+\n+\n+            });\n+        };\n+\n+\n+        function isValidOrcid(orcid) {\n+            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+            return orcidRegex.test(orcid);\n+        }\n+\n+        function downloadDataset(datasetId, format) {\n+            const url = `/dataset/download/${datasetId}/${format}`;\n+            window.location.href = url;\n+        }\n+        \n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n@@ -275,7 +388,6 @@ var currentId = 0;\n \n \t\t\t});\n \t\t}\n-\t};\n \n \n function isValidOrcid(orcid) {"
      },
      {
        "sha": "bea556e6faeac932fc225d0430e8bfb3d8ee2a7c",
        "filename": "app/modules/dataset/repositories.py",
        "status": "modified",
        "additions": 33,
        "deletions": 2,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,5 +1,6 @@\n from datetime import datetime, timezone\n import logging\n+import re\n from flask_login import current_user\n from typing import Optional\n \n@@ -38,7 +39,7 @@ def __init__(self):\n \n     def filter_by_doi(self, doi: str) -> Optional[DSMetaData]:\n         return self.model.query.filter_by(dataset_doi=doi).first()\n-\n+    \n \n class DSViewRecordRepository(BaseRepository):\n     def __init__(self):\n@@ -113,7 +114,37 @@ def latest_synchronized(self):\n             .limit(5)\n             .all()\n         )\n-\n+        \n+    def get_all_files_for_dataset(self, dataset_id: int):\n+        dataset = self.model.query.get(dataset_id)\n+        if not dataset:\n+            return None\n+        all_files = []\n+        for feature_model in dataset.feature_models:\n+            all_files.extend(feature_model.files)\n+        return all_files\n+    \n+    def _normalize_folder_name(self, folder_name: str) -> str:\n+   \n+        normalized_name = re.sub(r'[^\\w\\s-]', '', folder_name)\n+        normalized_name = re.sub(r'\\s+', '_', normalized_name.strip())\n+        return normalized_name\n+    \n+    def get_dataset_name(self, dataset_id: int) -> str:\n+        dataset = (\n+        self.model.query\n+        .filter_by(id=dataset_id)\n+        .first()\n+    )\n+        if dataset and dataset.ds_meta_data:\n+            title = dataset.ds_meta_data.title\n+            return self._normalize_folder_name(title)\n+        \n+        return None\n+    \n+\n+\n+    \n \n class DOIMappingRepository(BaseRepository):\n     def __init__(self):"
      },
      {
        "sha": "b0a566f87929fd2c6d643c9793868f10e1135fe6",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 192,
        "deletions": 54,
        "changes": 246,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -2,27 +2,19 @@\n import os\n import json\n import shutil\n+import subprocess\n import tempfile\n import uuid\n from datetime import datetime, timezone\n from zipfile import ZipFile\n-\n-from flask import (\n-    redirect,\n-    render_template,\n-    request,\n-    jsonify,\n-    send_from_directory,\n-    make_response,\n-    abort,\n-    url_for,\n-)\n+from flask import jsonify, redirect, url_for, render_template, request, send_from_directory, make_response, abort\n from flask_login import login_required, current_user\n+import requests\n+from app.modules.dataset.repositories import DSMetaDataRepository\n from app.modules.dataset.forms import DataSetForm\n-from app.modules.dataset.models import (\n-    DSDownloadRecord\n-)\n+from app.modules.dataset.models import DSDownloadRecord\n from app.modules.dataset import dataset_bp\n+from app.modules.dataset.repositories import DataSetRepository\n from app.modules.dataset.services import (\n     AuthorService,\n     DSDownloadRecordService,\n@@ -31,25 +23,27 @@\n     DataSetService,\n     DOIMappingService\n )\n+from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n from app.modules.dataset.parser import get_tree\n logger = logging.getLogger(__name__)\n+from flask_dance.contrib.github import github\n \n \n+logger = logging.getLogger(__name__)\n+\n dataset_service = DataSetService()\n author_service = AuthorService()\n dsmetadata_service = DSMetaDataService()\n zenodo_service = ZenodoService()\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n \n-\n @dataset_bp.route(\"/dataset/upload\", methods=[\"GET\", \"POST\"])\n @login_required\n def create_dataset():\n     form = DataSetForm()\n     if request.method == \"POST\":\n-\n         dataset = None\n \n         if not form.validate_on_submit():\n@@ -61,8 +55,8 @@ def create_dataset():\n             logger.info(f\"Created dataset: {dataset}\")\n             dataset_service.move_feature_models(dataset)\n         except Exception as exc:\n-            logger.exception(f\"Exception while create dataset data in local {exc}\")\n-            return jsonify({\"Exception while create dataset data in local: \": str(exc)}), 400\n+            logger.exception(f\"Exception while creating dataset data in local {exc}\")\n+            return jsonify({\"Exception while creating dataset data in local\": str(exc)}), 400\n \n         # send dataset as deposition to Zenodo\n         data = {}\n@@ -73,30 +67,22 @@ def create_dataset():\n         except Exception as exc:\n             data = {}\n             zenodo_response_json = {}\n-            logger.exception(f\"Exception while create dataset data in Zenodo {exc}\")\n+            logger.exception(f\"Exception while creating dataset data in Zenodo {exc}\")\n \n         if data.get(\"conceptrecid\"):\n             deposition_id = data.get(\"id\")\n-\n-            # update dataset with deposition id in Zenodo\n             dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n \n             try:\n-                # iterate for each feature model (one feature model = one request to Zenodo)\n                 for feature_model in dataset.feature_models:\n                     zenodo_service.upload_file(dataset, deposition_id, feature_model)\n-\n-                # publish deposition\n                 zenodo_service.publish_deposition(deposition_id)\n-\n-                # update DOI\n                 deposition_doi = zenodo_service.get_doi(deposition_id)\n                 dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n             except Exception as e:\n-                msg = f\"it has not been possible upload feature models in Zenodo and update the DOI: {e}\"\n+                msg = f\"it has not been possible to upload feature models in Zenodo and update the DOI: {e}\"\n                 return jsonify({\"message\": msg}), 200\n \n-        # Delete temp folder\n         file_path = current_user.temp_folder()\n         if os.path.exists(file_path) and os.path.isdir(file_path):\n             shutil.rmtree(file_path)\n@@ -106,7 +92,6 @@ def create_dataset():\n \n     return render_template(\"dataset/upload_dataset.html\", form=form)\n \n-\n @dataset_bp.route(\"/dataset/list\", methods=[\"GET\", \"POST\"])\n @login_required\n def list_dataset():\n@@ -117,6 +102,34 @@ def list_dataset():\n     )\n \n \n+@dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n+@login_required\n+def check_dataset():\n+    form = DataSetForm()\n+    if request.method==\"POST\": \n+\n+        temp_folder = current_user.temp_folder()\n+        if not os.path.exists(temp_folder):\n+           return jsonify({\"message\": \"Something went wrong, try again\"}), 400\n+        \n+        filename = os.listdir(temp_folder)[0]\n+        file_path = os.path.join(temp_folder, filename)\n+        \n+        with open(file_path) as f:\n+            indent = 0\n+            x = \"\".join([i for i in f])\n+            print(x)\n+        return jsonify({\"message\": x}),200\n+   \n+    # setting things up for the checker to have only one file available\n+    temp_folder = current_user.temp_folder()\n+    if os.path.exists(temp_folder) and os.path.isdir(temp_folder):\n+            shutil.rmtree(temp_folder)\n+\n+    return render_template(\n+        \"dataset/check_datasets.html\", form = form )\n+\n+\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -126,14 +139,12 @@ def upload():\n     if not file or not file.filename.endswith(\".uvl\"):\n         return jsonify({\"message\": \"No valid file\"}), 400\n \n-    # create temp folder\n     if not os.path.exists(temp_folder):\n         os.makedirs(temp_folder)\n \n     file_path = os.path.join(temp_folder, file.filename)\n \n     if os.path.exists(file_path):\n-        # Generate unique filename (by recursion)\n         base_name, extension = os.path.splitext(file.filename)\n         i = 1\n         while os.path.exists(\n@@ -165,8 +176,6 @@ def upload():\n         200,\n     )\n \n-\n-\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()\n@@ -180,23 +189,18 @@ def delete():\n \n     return jsonify({\"error\": \"Error: File not found\"})\n \n-\n @dataset_bp.route(\"/dataset/download/<int:dataset_id>\", methods=[\"GET\"])\n def download_dataset(dataset_id):\n     dataset = dataset_service.get_or_404(dataset_id)\n-\n     file_path = f\"uploads/user_{dataset.user_id}/dataset_{dataset.id}/\"\n-\n     temp_dir = tempfile.mkdtemp()\n     zip_path = os.path.join(temp_dir, f\"dataset_{dataset_id}.zip\")\n \n     with ZipFile(zip_path, \"w\") as zipf:\n         for subdir, dirs, files in os.walk(file_path):\n             for file in files:\n                 full_path = os.path.join(subdir, file)\n-\n                 relative_path = os.path.relpath(full_path, file_path)\n-\n                 zipf.write(\n                     full_path,\n                     arcname=os.path.join(\n@@ -206,10 +210,7 @@ def download_dataset(dataset_id):\n \n     user_cookie = request.cookies.get(\"download_cookie\")\n     if not user_cookie:\n-        user_cookie = str(\n-            uuid.uuid4()\n-        )  # Generate a new unique identifier if it does not exist\n-        # Save the cookie to the user's browser\n+        user_cookie = str(uuid.uuid4())\n         resp = make_response(\n             send_from_directory(\n                 temp_dir,\n@@ -227,15 +228,13 @@ def download_dataset(dataset_id):\n             mimetype=\"application/zip\",\n         )\n \n-    # Check if the download record already exists for this cookie\n     existing_record = DSDownloadRecord.query.filter_by(\n         user_id=current_user.id if current_user.is_authenticated else None,\n         dataset_id=dataset_id,\n         download_cookie=user_cookie\n     ).first()\n \n     if not existing_record:\n-        # Record the download in your database\n         DSDownloadRecordService().create(\n             user_id=current_user.id if current_user.is_authenticated else None,\n             dataset_id=dataset_id,\n@@ -245,41 +244,180 @@ def download_dataset(dataset_id):\n \n     return resp\n \n-\n @dataset_bp.route(\"/doi/<path:doi>/\", methods=[\"GET\"])\n def subdomain_index(doi):\n-\n-    # Check if the DOI is an old DOI\n     new_doi = doi_mapping_service.get_new_doi(doi)\n     if new_doi:\n-        # Redirect to the same path with the new DOI\n         return redirect(url_for('dataset.subdomain_index', doi=new_doi), code=302)\n \n-    # Try to search the dataset by the provided DOI (which should already be the new one)\n     ds_meta_data = dsmetadata_service.filter_by_doi(doi)\n \n     if not ds_meta_data:\n         abort(404)\n \n-    # Get dataset\n     dataset = ds_meta_data.data_set\n+    \n+    # Export DataSet to BibTex\n+    \n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    \n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n \n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+\n+    resp = make_response(render_template(\"dataset/view_dataset.html\",dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp\n \n-\n @dataset_bp.route(\"/dataset/unsynchronized/<int:dataset_id>/\", methods=[\"GET\"])\n @login_required\n def get_unsynchronized_dataset(dataset_id):\n-\n-    # Get dataset\n     dataset = dataset_service.get_unsynchronized_dataset(current_user.id, dataset_id)\n \n     if not dataset:\n         abort(404)\n+    \n+    ds_meta_data = dsmetadata_service.get_by_id(dataset.ds_meta_data_id)\n+\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    \n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n+   \n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name)\n+\n+\n+@dataset_bp.route('/dataset/commit/<int:dataset_id>', methods=['GET','POST'])\n+def commit(dataset_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n+    else:\n+        return 'First sync your github account.'\n+    \n+    try:\n+            \n+        ruta_repositorio = f\"/app/uvl_git/{username}\"   \n+        \n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        token = os.getenv('GH_PAT')\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n+             \n+        # Obtener el nombre y los archivos del dataset\n+        repository = DataSetRepository()\n+        nombre = repository.get_dataset_name(dataset_id)\n+        ruta_carpeta = os.path.join(ruta_repositorio, nombre)\n+        os.makedirs(ruta_carpeta, exist_ok=True)\n+        \n+        all_files = repository.get_all_files_for_dataset(dataset_id)\n+        \n+        # Copiar archivos y a\u00f1adirlos al commit\n+        for archivo in all_files:\n+            ruta_archivo_origen = archivo.get_path()\n+            ruta_destino_archivo = os.path.join(ruta_carpeta, os.path.basename(ruta_archivo_origen))\n+            shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+            subprocess.run(f\"git add {os.path.relpath(ruta_destino_archivo, ruta_repositorio)}\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        # Realizar el commit y el push\n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"Dataset has been pushed to GitHub correctly.\"\n+\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"This dataset is already in your github repository.\"\n+    \n+    \n+    \n+@dataset_bp.route('/dataset/commit_file/<int:file_id>', methods=['GET','POST'])\n+def commit_file(file_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n+        \n+    else:\n+        return 'First sync your github account.'\n+    \n+    try:\n+       \n+        ruta_repositorio = f\"/app/uvl_git/{username}\"\n+    \n+        # Configurar usuario de Git\n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        # Configurar URL remota con el PAT\n+        token = os.getenv('GH_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        # Obtener archivo y hacer commit\n+        hubfile_repository = HubfileRepository()\n+        hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n+        ruta_archivo_origen = hubfile.get_path()\n+        ruta_destino_archivo = os.path.join(ruta_repositorio, hubfile.name)\n+        shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+\n+        subprocess.run(f\"git add {hubfile.name}\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"This model has been pushed to GitHub correctly.\"\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"This model is already in your github repository.\"\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+\n+@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(file_id, format):\n+    \"\"\"Endpoint to download dataset in the specified format.\n+    Formats supported: glencoe, splot, dimacs, zip.\n+    \"\"\"\n+    if format == \"glencoe\":\n+        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n+    elif format == \"splot\":\n+        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n+    elif format == \"dimacs\":\n+        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n+    elif format == \"zip\":\n+        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n+    else:\n+        return jsonify({\"error\": \"Formato no soportado\"}), 400"
      },
      {
        "sha": "ef40cc6e3f7bdfc6d7a7bae844294277c4952f62",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 96,
        "deletions": 1,
        "changes": 97,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -41,6 +41,35 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n+                <div class=\"mt-2\">\n+                    <div class=\"btn-group\" role=\"group\">\n+                        <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n+                            <i data-feather=\"download\"></i> Download\n+                        </button>\n+                        <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                    Glencoe\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                    DIMACS\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                    SPLOT\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n+                                    ZIP\n+                                </a>\n+                            </li>\n+                        </ul>\n+                    </div>\n+                </div>\n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">\n@@ -158,8 +187,25 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             </div>\n \n+            {% if bibtex_dataset %}\n+\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n+                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                    <i data-feather=\"eye\"></i> View dataset in BibTex format\n+                </button>\n+\n+                <a href=\"{{ url_for('dataset.commit', dataset_id=dataset.id) }}\" class=\"btn btn-primary mt-3\" style=\"border-radius: 5px;\">\n+                    <i class=\"center-button-icon\"></i>\n+                    Upload dataset to github\n+                </a>\n+            </div>\n+            {% endif %}\n+\n+            \n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n \n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n@@ -178,10 +224,13 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n                 </div>\n+\n                 \n             </div>\n             {% endif %}\n \n+            \n+\n         </div>\n \n         <div class=\"card\">\n@@ -269,6 +318,10 @@ <h4 style=\"margin-bottom: 0px;\"><span class=\"badge bg-dark\">{{ dataset.get_files\n                             </div>\n                             <div class=\"col-12 text-end\" >\n \n+                                <a href=\"{{ url_for('dataset.commit_file', file_id=file.id) }}\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                                    <i data-feather=\"github\"></i> Upload\n+                                </a>\n+\n                                 <button onclick=\"viewFile('{{ file.id }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                                     <i data-feather=\"eye\"></i> View\n                                 </button>\n@@ -360,6 +413,30 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n     </div>\n </div>\n \n+<div class=\"modal fade\" id=\"bibtexViewerModal\" tabindex=\"-1\" aria-labelledby=\"bibtexViewerModalLabel\" aria-hidden=\"true\">\n+    <div class=\"modal-dialog modal-lg\" style=\"height: 80vh; display: flex; align-items: center;\">\n+        <div class=\"modal-content\" style=\"height: 80vh;\">\n+            <div class=\"modal-header\" style=\"display: flex; justify-content: space-between; align-items: center;\">\n+                <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex format</h5>\n+                <div>\n+                    <a href=\"#\" class=\"btn btn-outline-primary btn-sm\" id=\"bibtexDownloadButton\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"download\"></i>\n+                    </a>\n+                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"copy\"></i>\n+                    </button>\n+                    <button onclick=\"freeBibtexUrl()\" type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n+                </div>\n+            </div>\n+            <div class=\"modal-body\" style=\"overflow-y: auto; height: calc(100vh - 50px);\">\n+                <pre id=\"bibtexContent\" style=\"height: 100%; overflow-y: auto; white-space: pre-wrap; word-wrap: break-word; background-color: #f5f5f5; padding: 20px; border-radius: 5px; border: 1px solid #ccc;\"></pre>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js\"></script>\n \n \n@@ -371,6 +448,24 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n \n     var currentFileId;\n \n+    function freeBibtexUrl() {\n+        console.log(\"entra en freeBibtexUrl\")\n+        URL.revokeObjectURL(document.getElementById('bibtexDownloadButton').href)\n+    }\n+\n+    function viewBibtex(bibfilename) {\n+        var bib_content_display = document.getElementById('dataset_bibtex_export').textContent;\n+\n+        var blob = new Blob([bib_content_display], { type: 'text/plain' });\n+        var fileURL = URL.createObjectURL(blob);\n+        document.getElementById('bibtexDownloadButton').href = fileURL;\n+        document.getElementById('bibtexDownloadButton').download = bibfilename;\n+        document.getElementById('bibtexContent').textContent = bib_content_display;\n+\n+        var modal = new bootstrap.Modal(document.getElementById('bibtexViewerModal'));\n+        modal.show();\n+    }\n+\n     function viewFile(fileId) {\n         fetch(`/file/view/${fileId}`)\n             .then(response => response.json())"
      },
      {
        "sha": "d316841d1aca77398773dbb07abb7cbd5dd4e3dc",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,58 @@\n+import pytest\n+from flask import url_for\n+from app.modules.dataset.routes import download_dataset_format\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client(test_client):\n+    \"\"\"\n+    Extiende la fixture test_client para el m\u00f3dulo dataset.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_download_glencoe_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato Glencoe.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/glencoe\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+\n+\n+def test_download_splot_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato SPLOT.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/splot\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+\n+\n+def test_download_dimacs_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato DIMACS.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/dimacs\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+\n+\n+def test_download_zip_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato ZIP.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/zip\")\n+    assert response.status_code == 302\n+    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n+\n+def test_download_invalid_format(test_client):\n+    \"\"\"\n+    Testea que se retorne un error 400 para un formato no soportado.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n+    assert response.status_code == 400\n+    assert response.json == {\"error\": \"Formato no soportado\"}"
      },
      {
        "sha": "6f2edac23ceec557545bb8eaf134f3dcfa88d657",
        "filename": "app/modules/dataset/uvl_examples/file10.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tMessaging\t\n+\t\t\t\tor\n+\t\t\t\t\tSMS\n+\t\t\t\t\tMMS\n+\t\t\t\"Utility Features\"\t\n+\t\t\t\toptional\n+\t\t\t\t\tCalculator\n+\t\t\t\t\t\"Currency Exchange\"\n+\t\t\tOS\t\n+\t\t\t\talternative\n+\t\t\t\t\tSymbian\n+\t\t\t\t\tWinCE\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Currency Exchange\" => Calculator\n\\ No newline at end of file"
      },
      {
        "sha": "141cad170eaca409c3974334791706a0cc319f3b",
        "filename": "app/modules/dataset/uvl_examples/file11.uvl",
        "status": "modified",
        "additions": 25,
        "deletions": 17,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,19 +1,27 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tOnlineshop {abstract}\t\n+\t\tmandatory\n+\t\t\tPayment {abstract}\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Debit Card\"\n+\t\t\t\t\t\"Credit Card\"\n+\t\t\t\"Product Selection\" {abstract}\t\n+\t\t\t\tmandatory\n+\t\t\t\t\tCatalog\t\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tCategories\n+\t\t\t\t\t\t\tSort\n+\t\t\t\toptional\n+\t\t\t\t\tSearch\n+\t\toptional\n+\t\t\tUserManagement {abstract}\t\n+\t\t\t\tor\n+\t\t\t\t\tOrders\n+\t\t\t\t\tSecurity\n+\t\t\t\t\tPayments\n+\t\t\t\t\tWishlist\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSearch => Security\n+\tSecurity => !Payments\n+\tPayments => !Security\n+\tSort | Search\n\\ No newline at end of file"
      },
      {
        "sha": "117471c9d2dc5561b9562f672aec92d9af73450d",
        "filename": "app/modules/dataset/uvl_examples/file12.uvl",
        "status": "modified",
        "additions": 22,
        "deletions": 18,
        "changes": 40,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,19 +1,23 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Movies_App\" \n+\t\tmandatory\n+\t\t\t\"GUI\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Thin\" \n+\t\t\t\t\t\"Rich\" \n+\t\tmandatory\n+\t\t\t\"DB\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Local\" \n+\t\t\t\t\t\"Remote\" \n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\t\"Cache_Policy\" \n+\t\tmandatory\n+\t\t\t\"Network\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Wifi\" \n+\t\t\t\t\t\"Bluetooth\" \n+\t\toptional\n+\t\t\t\"GPS\" \n+\t\t\t\toptional\n+\t\t\t\t\t\"Built-In\" \n\\ No newline at end of file"
      },
      {
        "sha": "924a2f013c74f6bbea7f911b884dd9fd94e26f8b",
        "filename": "app/modules/dataset/uvl_examples/file2.uvl",
        "status": "modified",
        "additions": 19,
        "deletions": 18,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,19 +1,20 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40"
      },
      {
        "sha": "9e14cb807f57d510839a4d68aff29e690523ac78",
        "filename": "app/modules/dataset/uvl_examples/file3.uvl",
        "status": "modified",
        "additions": 17,
        "deletions": 18,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,19 +1,18 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "ad06cc4f7e038d2e2ab96ed02ae7ae1c2ef24dd0",
        "filename": "app/modules/dataset/uvl_examples/file4.uvl",
        "status": "modified",
        "additions": 20,
        "deletions": 17,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,19 +1,22 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tsmartwatch {abstract true}\n+\t\tmandatory\n+\t\t\tscreen\n+\t\t\t\talternative\n+\t\t\t\t\ttouch\n+\t\t\t\t\tstandard\n+\t\t\t\"energy management\"\n+\t\t\t\talternative\n+\t\t\t\t\tbasic\n+\t\t\t\t\t\"advanced solar\"\n+\t\toptional\n+\t\t\tpayment\n+\t\t\tgps\n+\t\t\t\"sports tracking\"\n+\t\t\t\tor\n+\t\t\t\t\trunning\n+\t\t\t\t\tskiing\n+\t\t\t\t\thiking\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t!(payment & standard)\n+\t\"sports tracking\" => gps"
      },
      {
        "sha": "2ed3f8f650ad498e4e3ca0220d63dc841fc39db0",
        "filename": "app/modules/dataset/uvl_examples/file5.uvl",
        "status": "modified",
        "additions": 33,
        "deletions": 18,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,19 +1,34 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "9234e685c686a0589a2f477bfc0f83156e104c5d",
        "filename": "app/modules/dataset/uvl_examples/file6.uvl",
        "status": "modified",
        "additions": 40,
        "deletions": 16,
        "changes": 56,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,19 +1,43 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\toptional\n+\t\t\t\t\tTouchScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\t\toptional\n+\t\t\t\t\tContactlessPayment\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n+\t\t\t\toptional\n+\t\t\t\t\tNFC\n \n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tContactlessPayment => NFC"
      },
      {
        "sha": "3d881f9b14f76d1a693988f487862607e513ce69",
        "filename": "app/modules/dataset/uvl_examples/file7.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tGSM_Protocol_1900\n+\t\t\tMP3_Recording\n+\t\t\tCamera_Resolution\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"2_1MP\"\n+\t\t\t\t\t\"5 MP\"\n+\t\t\t\t\t\"3_1MP\"\n+\t\t\tCamera\n+\t\t\tAudio_Formats\t\n+\t\t\t\tor\n+\t\t\t\t\tWAV\n+\t\t\t\t\tMP3\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tMP3_Recording => MP3\n\\ No newline at end of file"
      },
      {
        "sha": "10dddc5e29b5fc9da5ba4b8692ecbf437448f719",
        "filename": "app/modules/dataset/uvl_examples/file8.uvl",
        "status": "modified",
        "additions": 36,
        "deletions": 18,
        "changes": 54,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -1,19 +1,37 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tSV_Solution\t\n+\t\t\t\talternative\n+\t\t\t\t\tBMD\n+\t\t\t\t\tBMDCRM\n+\t\t\tCV_Documents\t\n+\t\t\t\tor\n+\t\t\t\t\t\"scan new\"\n+\t\t\t\t\t\"import external\"\n+\t\t\t\t\tarchive\n+\t\t\t\t\t\"read existing\"\n+\t\t\tCV_Claims\t\n+\t\t\t\tor\n+\t\t\t\t\tjournal\n+\t\t\t\t\t\"task manager\"\n+\t\t\tSV\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Particular Packages\"\n+\t\t\t\t\tSolution\n+\t\t\tCV_Customer\t\n+\t\t\t\tor\n+\t\t\t\t\tmail\n+\t\t\t\t\tphone\n+\t\t\tCV\t\n+\t\t\t\tor\n+\t\t\t\t\t\"Document Management\"\n+\t\t\t\t\t\"Claims Management\"\n+\t\t\t\t\t\"Customer Management\"\n+\t\t\tSV_Particular_Package\t\n+\t\t\t\tor\n+\t\t\t\t\tOrganizer\n+\t\t\t\t\t\"Label Printing\"\n+\t\t\t\t\tElse\n+\t\t\t\t\tDocs\n+\t\t\t\t\t\"Standard Letter\"\n\\ No newline at end of file"
      },
      {
        "sha": "1609b0318fca78c64b66a9f332daf50d08bb7879",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 41,
        "deletions": 1,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -16,13 +16,31 @@ function send_query() {\n         filter.addEventListener('input', () => {\n             const csrfToken = document.getElementById('csrf_token').value;\n \n+            const minFiles = document.getElementById('min_files').value || null;\n+            const maxFiles = document.getElementById('max_files').value || null;\n+            const minAvBranchingFactor = document.getElementById('min_av_branching_factor').value || null;\n+            const maxAvBranchingFactor = document.getElementById('max_av_branching_factor').value || null;\n+            const minLeafCount = document.getElementById('min_leaf_count').value || null;\n+            const maxLeafCount = document.getElementById('max_leaf_count').value || null;\n+            const minDepth = document.getElementById('min_depth').value || null;\n+            const maxDepth = document.getElementById('max_depth').value || null;\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n                 publication_type: document.querySelector('#publication_type').value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n+                min_files: minFiles,\n+                max_files: maxFiles,\n+                min_av_branching_factor: minAvBranchingFactor,\n+                max_av_branching_factor: maxAvBranchingFactor,\n+                min_leaf_count: minLeafCount,\n+                max_leaf_count: maxLeafCount,\n+                min_depth: minDepth,\n+                max_depth: maxDepth,\n+                leaf_feature_name: document.querySelector('#leaf_feature_name').value,\n+                core_feature_name: document.querySelector('#core_feature_name').value\n             };\n-\n+            \n             console.log(document.querySelector('#publication_type').value);\n \n             fetch('/explore', {\n@@ -179,6 +197,28 @@ function clearFilters() {\n         // option.dispatchEvent(new Event('input', {bubbles: true}));\n     });\n \n+    let minFilesInput = document.querySelector('#min_files');\n+    let maxFilesInput = document.querySelector('#max_files');\n+    minFilesInput.value = \"\"; \n+    maxFilesInput.value = \"\"; \n+    let minAvBranchingFactor = document.querySelector('#min_av_branching_factor');\n+    let maxAvBranchingFactor = document.querySelector('#max_av_branching_factor');\n+    minAvBranchingFactor.value = \"\"; \n+    maxAvBranchingFactor.value = \"\"; \n+    let minLeafCount = document.querySelector('#min_leaf_count');\n+    let maxLeafCount = document.querySelector('#max_leaf_count');\n+    minLeafCount.value = \"\"; \n+    maxLeafCount.value = \"\"; \n+    let minDepth = document.querySelector('#min_depth');\n+    let maxDepth = document.querySelector('#max_depth');\n+    minDepth.value = \"\"; \n+    maxDepth.value = \"\"; \n+    let leafFeatureName = document.querySelector('#leaf_feature_name');\n+    leafFeatureName.value = \"\";\n+    let coreFeatureName = document.querySelector('#core_feature_name');\n+    coreFeatureName.value = \"\";\n+\n+\n     // Perform a new search with the reset filters\n     queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n }"
      },
      {
        "sha": "fa37bd56d033abe4b84370094d21a3850923875b",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 71,
        "deletions": 2,
        "changes": 73,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -10,12 +10,31 @@ class ExploreRepository(BaseRepository):\n     def __init__(self):\n         super().__init__(DataSet)\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None, max_av_branching_factor=None,\n+               leaf_feature_name=\"\", core_feature_name=\"\",\n+               **kwargs):\n         # Normalize and remove unwanted characters\n         normalized_query = unidecode.unidecode(query).lower()\n         cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n \n         filters = []\n+        min_files = int(min_files) if min_files is not None else None\n+        max_files = int(max_files) if max_files is not None else None\n+\n+        min_leaf_count = int(min_leaf_count) if min_leaf_count is not None else None\n+        max_leaf_count = int(max_leaf_count) if max_leaf_count is not None else None\n+\n+        min_depth = int(min_depth) if min_depth is not None else None\n+        max_depth = int(max_depth) if max_depth is not None else None\n+\n+        min_av_branching_factor = float(min_av_branching_factor) if min_av_branching_factor is not None else None\n+        max_av_branching_factor = float(max_av_branching_factor) if max_av_branching_factor is not None else None\n+\n         for word in cleaned_query.split():\n             filters.append(DSMetaData.title.ilike(f\"%{word}%\"))\n             filters.append(DSMetaData.description.ilike(f\"%{word}%\"))\n@@ -55,7 +74,57 @@ def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **\n         # Order by created_at\n         if sorting == \"oldest\":\n             datasets = datasets.order_by(self.model.created_at.asc())\n+        elif sorting == \"filesize_asc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=False)\n+        elif sorting == \"filesize_desc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=True)\n         else:\n             datasets = datasets.order_by(self.model.created_at.desc())\n \n-        return datasets.all()\n+        if min_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() >= min_files]\n+        if max_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() <= max_files]\n+\n+        filtered_datasets = []\n+\n+        for dataset in datasets:\n+            feature_models = dataset.feature_models  \n+            dataset_passes_filter = False  \n+\n+            for model in feature_models:\n+                stats = model.calculate_statistics()  \n+                leaf_count = stats[\"leaf_count\"]\n+                depth = stats[\"max_depth\"]\n+                branching_factor = stats[\"branching_factor\"]\n+\n+                # Aplicar filtros a las estad\u00edsticas del modelo\n+                if ((min_leaf_count is not None and leaf_count < min_leaf_count) or\n+                    (max_leaf_count is not None and leaf_count > max_leaf_count) or\n+                    (min_depth is not None and depth < min_depth) or\n+                    (max_depth is not None and depth > max_depth) or\n+                    (min_av_branching_factor is not None and branching_factor < min_av_branching_factor) or\n+                        (max_av_branching_factor is not None and branching_factor > max_av_branching_factor)):\n+                    continue\n+\n+                if leaf_feature_name:\n+                    leaf_feature_names = model.get_leaf_feature_names()\n+                    print(leaf_feature_name)\n+                    if leaf_feature_name not in leaf_feature_names:\n+                        continue\n+\n+                if core_feature_name:\n+                    core_feature_names = model.get_core_feature_names()\n+                    if core_feature_name not in core_feature_names:\n+                        continue\n+\n+                dataset_passes_filter = True\n+                print(\"dataset_passes_filter\")\n+                break\n+\n+            if dataset_passes_filter:\n+                filtered_datasets.append(dataset)  \n+\n+        return filtered_datasets"
      },
      {
        "sha": "ecbed8e137e0f7d447b1b710e823b81cf204c427",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -6,5 +6,16 @@ class ExploreService(BaseService):\n     def __init__(self):\n         super().__init__(ExploreRepository())\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n-        return self.repository.filter(query, sorting, publication_type, tags, **kwargs)\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None,\n+               max_av_branching_factor=None,\n+               leaf_feature_name=\"\",\n+               core_feature_name=\"\", **kwargs):\n+        return self.repository.filter(query, sorting, publication_type, tags, min_files, max_files,\n+                                      min_leaf_count, max_leaf_count, min_depth, max_depth,\n+                                      min_av_branching_factor, max_av_branching_factor, leaf_feature_name,\n+                                      core_feature_name, **kwargs)"
      },
      {
        "sha": "f062144cdd68583a147b585fa2fa2d66cd94fb46",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 88,
        "deletions": 4,
        "changes": 92,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -54,8 +54,7 @@ <h3 class=\"h3 mb-3\">\n                                        value=\"\" autofocus>\n                             </div>\n                         </div>\n-\n-                        <div class=\"col-lg-6\">\n+                        <div class=\"col-lg-12\">\n                             <div class=\"mb-3\">\n                                 <label class=\"form-label\" for=\"publication_type\">Filter by publication\n                                     type</label>\n@@ -83,7 +82,79 @@ <h3 class=\"h3 mb-3\">\n                                     <option value=\"other\">Other</option>\n                                 </select>\n                             </div>\n-\n+                        </div>\n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_files\">Min Files:</label>\n+                                    <input type=\"number\" id=\"min_files\" name=\"min_files\" class=\"form-control\" placeholder=\"Min Files\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_files\">Max Files:</label>\n+                                    <input type=\"number\" id=\"max_files\" name=\"max_files\" class=\"form-control\" placeholder=\"Max Files\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_leaf_count\">Min Leaf Count:</label>\n+                                    <input type=\"number\" id=\"min_leaf_count\" name=\"min_leaf_count\" class=\"form-control\" placeholder=\"Min Leaf Count\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_leaf_count\">Max Leaf Count:</label>\n+                                    <input type=\"number\" id=\"max_leaf_count\" name=\"max_leaf_count\" class=\"form-control\" placeholder=\"Max Leaf Count\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_depth\">Min Depth:</label>\n+                                    <input type=\"number\" id=\"min_depth\" name=\"min_depth\" class=\"form-control\" placeholder=\"Min Depth\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_depth\">Max Depth:</label>\n+                                    <input type=\"number\" id=\"max_depth\" name=\"max_depth\" class=\"form-control\" placeholder=\"Max Depth\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_av_branching_factor\">Min Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"min_av_branching_factor\" name=\"min_av_branching_factor\" class=\"form-control\" placeholder=\"Min Average Branching Factor\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_av_branching_factor\">Max Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"max_av_branching_factor\" name=\"max_av_branching_factor\" class=\"form-control\" placeholder=\"Max Average Branching Factor\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"leaf_feature_name\">Leaf Feature Name:</label>\n+                                <input type=\"text\" id=\"leaf_feature_name\" name=\"leaf_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter leaf feature name\">\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"core_feature_name\">Core Feature Name:</label>\n+                                <input type=\"text\" id=\"core_feature_name\" name=\"core_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter core feature name\">\n+                            </div>\n                         </div>\n \n                     </div>\n@@ -108,7 +179,20 @@ <h3 class=\"h3 mb-3\">\n                                     </span>\n                                 </label>\n                             </div>\n-\n+                            <div>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_asc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Smallest first\n+                                    </span>\n+                                </label>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_desc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Largest first\n+                                    </span>\n+                                </label>\n+                            </div>\n                         </div>\n \n                     </div>"
      },
      {
        "sha": "9ed55640f52bbfc44bf4d95f0b7cd378428fd9e5",
        "filename": "app/modules/featuremodel/models.py",
        "status": "modified",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Fmodels.py?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -2,6 +2,9 @@\n from sqlalchemy import Enum as SQLAlchemyEnum\n \n from app.modules.dataset.models import Author, PublicationType\n+from flamapy.metamodels.fm_metamodel.transformations import UVLReader\n+from flamapy.metamodels.fm_metamodel.operations import FMAverageBranchingFactor, FMCountLeafs\n+from flamapy.metamodels.fm_metamodel.operations import FMMaxDepthTree, FMLeafFeatures, FMCoreFeatures\n \n \n class FeatureModel(db.Model):\n@@ -14,6 +17,51 @@ class FeatureModel(db.Model):\n     def __repr__(self):\n         return f'FeatureModel<{self.id}>'\n \n+    def calculate_statistics(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        leaf_counter = FMCountLeafs()\n+        leaf_counter.execute(fm)\n+        leaf_count = leaf_counter.get_result()\n+\n+        depth_calculator = FMMaxDepthTree()\n+        depth_calculator.execute(fm)\n+        max_tree_depth = depth_calculator.get_result()\n+\n+        branching_factor_calculator = FMAverageBranchingFactor()\n+        branching_factor_calculator.execute(fm)\n+        average_branching_factor = branching_factor_calculator.get_result()\n+\n+        return {\n+            \"leaf_count\": leaf_count,\n+            \"max_depth\": max_tree_depth,\n+            \"branching_factor\": average_branching_factor\n+        }\n+\n+    def get_leaf_feature_names(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        leaf_features_operation = FMLeafFeatures()\n+        leaf_features_operation.execute(fm)\n+        leaf_features = leaf_features_operation.get_result()\n+\n+        return [feature.name for feature in leaf_features]\n+\n+    def get_core_feature_names(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        core_features_operation = FMCoreFeatures()\n+        core_features_operation.execute(fm)\n+        core_features = core_features_operation.get_result()\n+\n+        return [feature.name for feature in core_features]\n+\n \n class FMMetaData(db.Model):\n     id = db.Column(db.Integer, primary_key=True)"
      },
      {
        "sha": "94c83d4cf76ce083619ed6dae3c0bb05e18f04f2",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -23,6 +23,9 @@ def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n \n     def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n         return db.session.query(DataSet).join(FeatureModel).join(Hubfile).filter(Hubfile.id == hubfile.id).first()\n+    \n+    def get_hubfile_by_id(self, hubfile_id: int) -> Hubfile:\n+        return db.session.query(Hubfile).filter(Hubfile.id == hubfile_id).first()\n \n \n class HubfileViewRecordRepository(BaseRepository):"
      },
      {
        "sha": "9765d4aa769976cd87870704819c3cf0af65e9eb",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -91,12 +91,17 @@ <h2>\n                                     <i data-feather=\"eye\" class=\"center-button-icon\"></i>\n                                     View dataset\n                                 </a>\n-\n-                                <a href=\"/dataset/download/{{ dataset.id }}\" class=\"btn btn-outline-primary btn-sm\"\n-                                   style=\"border-radius: 5px;\">\n-                                    <i data-feather=\"download\" class=\"center-button-icon\"></i>\n-                                    Download ({{ dataset.get_file_total_size_for_human() }})\n-                                </a>\n+                                <div class=\"btn-group\" role=\"group\">\n+                                    <button id=\"btnDownloadDropdown_{{ dataset.id }}\" type=\"button\" class=\"btn btn-outline-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n+                                        <i data-feather=\"download\" class=\"center-button-icon\"></i> Download\n+                                    </button>\n+                                    <ul class=\"dropdown-menu\" aria-labelledby=\"btnDownloadDropdown_{{ dataset.id }}\">\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'glencoe')\">Glencoe</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'splot')\">SPLOT</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'dimacs')\">DIMACS</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'zip')\">ZIP</a></li>\n+                                    </ul>\n+                                </div>                                \n                             </div>\n                         </div>\n "
      },
      {
        "sha": "6a3d5d74165417518ea46c42bc095400cc648683",
        "filename": "app/static/css/own.css",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fstatic%2Fcss%2Fown.css",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fstatic%2Fcss%2Fown.css",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fcss%2Fown.css?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -142,8 +142,10 @@\n     background-color: #147ABB;\n     padding: 10px;\n     display: flex;\n-    align-items: center;\n+    flex-direction: column;\n+    align-items: flex-start;\n     transition: background-color 0.3s ease;\n+    text-wrap: wrap;\n }\n \n .doi_button:hover .doi_text {"
      },
      {
        "sha": "d337dad98b8d18e15de1bf67815af93f2d8216a0",
        "filename": "app/static/js/scripts.js",
        "status": "added",
        "additions": 246,
        "deletions": 0,
        "changes": 246,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fstatic%2Fjs%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Fstatic%2Fjs%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fscripts.js?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,246 @@\n+var currentId = 0;\n+        var amount_authors = 0;\n+\n+        function show_upload_dataset() {\n+            document.getElementById(\"upload_dataset\").style.display = \"block\";\n+        }\n+\n+        function generateIncrementalId() {\n+            return currentId++;\n+        }\n+\n+        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n+            let fieldWrapper = document.createElement('div');\n+            fieldWrapper.className = className;\n+\n+            let label = document.createElement('label');\n+            label.className = 'form-label';\n+            label.for = name;\n+            label.textContent = text;\n+\n+            let field = document.createElement('input');\n+            field.name = name;\n+            field.className = 'form-control';\n+\n+            fieldWrapper.appendChild(label);\n+            fieldWrapper.appendChild(field);\n+            newAuthor.appendChild(fieldWrapper);\n+        }\n+\n+        function addRemoveButton(newAuthor) {\n+            let buttonWrapper = document.createElement('div');\n+            buttonWrapper.className = 'col-12 mb-2';\n+\n+            let button = document.createElement('button');\n+            button.textContent = 'Remove author';\n+            button.className = 'btn btn-danger btn-sm';\n+            button.type = 'button';\n+            button.addEventListener('click', function (event) {\n+                event.preventDefault();\n+                newAuthor.remove();\n+            });\n+\n+            buttonWrapper.appendChild(button);\n+            newAuthor.appendChild(buttonWrapper);\n+        }\n+\n+        function createAuthorBlock(idx, suffix) {\n+            let newAuthor = document.createElement('div');\n+            newAuthor.className = 'author row';\n+            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n+\n+            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n+            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n+            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n+            addRemoveButton(newAuthor);\n+\n+            return newAuthor;\n+        }\n+\n+        function check_title_and_description() {\n+            let titleInput = document.querySelector('input[name=\"title\"]');\n+            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n+\n+            titleInput.classList.remove(\"error\");\n+            descriptionTextarea.classList.remove(\"error\");\n+            clean_upload_errors();\n+\n+            let titleLength = titleInput.value.trim().length;\n+            let descriptionLength = descriptionTextarea.value.trim().length;\n+\n+            if (titleLength < 3) {\n+                write_upload_error(\"title must be of minimum length 3\");\n+                titleInput.classList.add(\"error\");\n+            }\n+\n+            if (descriptionLength < 3) {\n+                write_upload_error(\"description must be of minimum length 3\");\n+                descriptionTextarea.classList.add(\"error\");\n+            }\n+\n+            return (titleLength >= 3 && descriptionLength >= 3);\n+        }\n+\n+\n+        document.getElementById('add_author').addEventListener('click', function () {\n+            let authors = document.getElementById('authors');\n+            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n+            authors.appendChild(newAuthor);\n+        });\n+\n+\n+        document.addEventListener('click', function (event) {\n+            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n+\n+                let authorsButtonId = event.target.id;\n+                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n+                let authors = document.getElementById(authorsId);\n+                let id = authorsId.replace(\"_form_authors\", \"\")\n+                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n+                authors.appendChild(newAuthor);\n+\n+            }\n+        });\n+\n+        function show_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"none\";\n+            document.getElementById(\"loading\").style.display = \"block\";\n+        }\n+\n+        function hide_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"block\";\n+            document.getElementById(\"loading\").style.display = \"none\";\n+        }\n+\n+        function clean_upload_errors() {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            upload_error.innerHTML = \"\";\n+            upload_error.style.display = 'none';\n+        }\n+\n+        function write_upload_error(error_message) {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            let alert = document.createElement('p');\n+            alert.style.margin = '0';\n+            alert.style.padding = '0';\n+            alert.textContent = 'Upload error: ' + error_message;\n+            upload_error.appendChild(alert);\n+            upload_error.style.display = 'block';\n+        }\n+\n+        window.onload = function () {\n+\n+            test_zenodo_connection();\n+\n+            document.getElementById('upload_button').addEventListener('click', function () {\n+\n+                clean_upload_errors();\n+                show_loading();\n+\n+                // check title and description\n+                let check = check_title_and_description();\n+\n+                if (check) {\n+                    // process data form\n+                    const formData = {};\n+\n+                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                        const form = document.getElementById(formId);\n+                        const inputs = form.querySelectorAll('input, select, textarea');\n+                        inputs.forEach(input => {\n+                            if (input.name) {\n+                                formData[input.name] = formData[input.name] || [];\n+                                formData[input.name].push(input.value);\n+                            }\n+                        });\n+                    });\n+\n+                    let formDataJson = JSON.stringify(formData);\n+                    console.log(formDataJson);\n+\n+                    const csrfToken = document.getElementById('csrf_token').value;\n+                    const formUploadData = new FormData();\n+                    formUploadData.append('csrf_token', csrfToken);\n+\n+                    for (let key in formData) {\n+                        if (formData.hasOwnProperty(key)) {\n+                            formUploadData.set(key, formData[key]);\n+                        }\n+                    }\n+\n+                    let checked_orcid = true;\n+                    if (Array.isArray(formData.author_orcid)) {\n+                        for (let orcid of formData.author_orcid) {\n+                            orcid = orcid.trim();\n+                            if (orcid !== '' && !isValidOrcid(orcid)) {\n+                                hide_loading();\n+                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                                checked_orcid = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    let checked_name = true;\n+                    if (Array.isArray(formData.author_name)) {\n+                        for (let name of formData.author_name) {\n+                            name = name.trim();\n+                            if (name === '') {\n+                                hide_loading();\n+                                write_upload_error(\"The author's name cannot be empty\");\n+                                checked_name = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    if (checked_orcid && checked_name) {\n+                        fetch('/dataset/upload', {\n+                            method: 'POST',\n+                            body: formUploadData\n+                        })\n+                            .then(response => {\n+                                if (response.ok) {\n+                                    console.log('Dataset sent successfully');\n+                                    response.json().then(data => {\n+                                        console.log(data.message);\n+                                        window.location.href = \"/dataset/list\";\n+                                    });\n+                                } else {\n+                                    response.json().then(data => {\n+                                        console.error('Error: ' + data.message);\n+                                        hide_loading();\n+\n+                                        write_upload_error(data.message);\n+\n+                                    });\n+                                }\n+                            })\n+                            .catch(error => {\n+                                console.error('Error in POST request:', error);\n+                            });\n+                    }\n+\n+\n+                } else {\n+                    hide_loading();\n+                }\n+\n+\n+            });\n+        };\n+\n+\n+        function isValidOrcid(orcid) {\n+            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+            return orcidRegex.test(orcid);\n+        }\n+\n+        function downloadDataset(datasetId, format) {\n+            const url = `/dataset/download/${datasetId}/${format}`;\n+            window.location.href = url;\n+        }\n+        \n+        \n\\ No newline at end of file"
      },
      {
        "sha": "6ce8c18b46f0e4c830b76d1e81b378f2cf840f3e",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -33,6 +33,7 @@\n \n     <link rel=\"stylesheet\" href=\"{{ url_for(\"static\", filename=\"css/own.css\") }}\">\n \n+    <script src=\"{{ url_for('static', filename='js/scripts.js') }}\"></script>\n </head>\n \n <body>\n@@ -170,6 +171,18 @@\n \n                         {% else %}\n \n+                        <a href=\"{{ url_for('auth.github_login') }}\">\n+                            <button>Sync with Github</button>\n+                        </a> \n+\n+                        <a href=\"{{ url_for('auth.invite_user') }}\">\n+                            <button>Join our Github Organization</button>\n+                        </a> \n+\n+                        <a href=\"{{ url_for('auth.crear_repo') }}\">\n+                            <button>Create your repo in our Github Org</button>\n+                        </a> \n+\n                         <a class=\"nav-icon dropdown-toggle d-inline-block d-sm-none\" href=\"#\" data-bs-toggle=\"dropdown\">\n                             <i class=\"align-middle\" data-feather=\"user\"></i> \n                         </a>"
      },
      {
        "sha": "ed10caea787b0655f7bc8d63ef3c9386c2b45c04",
        "filename": "docker/images/Dockerfile.render",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/docker%2Fimages%2FDockerfile.render",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/docker%2Fimages%2FDockerfile.render",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.render?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -46,6 +46,19 @@ RUN pip install --no-cache-dir --upgrade pip\n # Install any needed packages specified in requirements.txt\n RUN pip install -r requirements.txt\n \n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+    curl \\\n+    git \\\n+    sudo \\\n+    && curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \\\n+    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \\\n+    && echo \"deb [signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \\\n+    && apt-get update && apt-get install -y gh \\\n+    && apt-get clean && rm -rf /var/lib/apt/lists/*\n+\n+RUN apt-get update && apt-get install -y git\n+\n+\n # Expose port 80\n EXPOSE 80\n "
      },
      {
        "sha": "341be806fa39e544b166ce43d7a1f837351886eb",
        "filename": "requirements.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/requirements.txt",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/requirements.txt",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/requirements.txt?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -19,6 +19,7 @@ dd==0.6.0\n dnspython==2.6.1\n docker==7.1.0\n email_validator==2.2.0\n+Flask-Dance==7.1.0\n Faker==26.0.0\n flake8==7.1.0\n flamapy==2.0.0.dev1"
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file1.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file2.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file3.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file7.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file8.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file9.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file4.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file5.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file6.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file10.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file11.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file12.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/adf8d84fae294ccb75cb5cd7ed236caa3fb426ab/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl?ref=adf8d84fae294ccb75cb5cd7ed236caa3fb426ab",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      }
    ]
  },
  {
    "sha": "253b1bf34f429e58dbd0ccd6808fbca4d17bccf4",
    "node_id": "C_kwDONDG85doAKDI1M2IxYmYzNGY0MjllNThkYmQwY2NkNjgwOGZiY2E0ZDE3YmNjZjQ",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-12T22:08:47Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-12T22:08:47Z"
      },
      "message": "feat(dataset): changed it so only one upload error alert shows up at a time",
      "tree": {
        "sha": "f7211bfaa4b87fcd839259d122d53c8a508251ac",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/f7211bfaa4b87fcd839259d122d53c8a508251ac"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/253b1bf34f429e58dbd0ccd6808fbca4d17bccf4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/253b1bf34f429e58dbd0ccd6808fbca4d17bccf4",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/253b1bf34f429e58dbd0ccd6808fbca4d17bccf4",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/253b1bf34f429e58dbd0ccd6808fbca4d17bccf4/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "70e40a8830f0cb2d3f8f2b9883ba788ee23fda37",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/70e40a8830f0cb2d3f8f2b9883ba788ee23fda37",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/70e40a8830f0cb2d3f8f2b9883ba788ee23fda37"
      }
    ],
    "files": [
      {
        "sha": "b803f06d34fae75f4ed4f2cf088836bd347ec819",
        "filename": "app/modules/dataset/templates/dataset/upload_dataset.html",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/253b1bf34f429e58dbd0ccd6808fbca4d17bccf4/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/253b1bf34f429e58dbd0ccd6808fbca4d17bccf4/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html?ref=253b1bf34f429e58dbd0ccd6808fbca4d17bccf4",
        "patch": "@@ -247,6 +247,9 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n \n                                     let alert = document.createElement('p');\n                                     alert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t    if (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0])\n+\t\t\t\t    }\n                                     alerts.appendChild(alert);\n                                     alerts.style.display = 'block';\n                                 }\n@@ -439,10 +442,15 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n \t\t\t\t} else {\n \t\t\t\t\tif ( response!=\"You can't upload files of this type.\") {\n \n-\t\t\t\t\t\talert.textContent = 'UVL not valid';\n-\t\t\t    \t\t}\n+\t\t\t\t\t\talert.textContent = 'Something went wrong while saving the file, try again please';\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\talert.textContent = \"You can't upload files of this type.\";\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tthis.removeFile(file);\n+\t\t\t\tif (alerts.children.length>0) {\n+\t\t\t\t\talerts.removeChild(alerts.children[0]);\n+\t\t\t\t}\n                                 alerts.appendChild(alert);\n                                 alerts.style.display = 'block';\n                             });"
      }
    ]
  },
  {
    "sha": "9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
    "node_id": "C_kwDONDG85doAKDlkNDcxZjkxNDgzZmU3YzQyZmM4MGY4NGQ0Y2IwOWJhYjNiZTg3Yzk",
    "commit": {
      "author": {
        "name": "raumonmar1",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-12T15:36:44Z"
      },
      "committer": {
        "name": "raumonmar1",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-12T15:36:44Z"
      },
      "message": "fix(uploads): Added uvl files",
      "tree": {
        "sha": "118c7861d291cb2e1e68c6b14b39942455267e9b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/118c7861d291cb2e1e68c6b14b39942455267e9b"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "757678f2064638e7880f13739f0074100b659d11",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/757678f2064638e7880f13739f0074100b659d11",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/757678f2064638e7880f13739f0074100b659d11"
      }
    ],
    "files": [
      {
        "sha": "b0431891f8f32b950472e8d4adf47ba6b271e288",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitignore?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -1,7 +1,6 @@\n .env\n __pycache__/\n .idea\n-uploads/\n app.log\n .DS_Store\n rosemary.egg-info/"
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file1.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile1.uvl?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file2.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile2.uvl?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_1/file3.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_1%2Ffile3.uvl?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file7.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile7.uvl?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file8.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile8.uvl?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_1/dataset_3/file9.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_1%2Fdataset_3%2Ffile9.uvl?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file4.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile4.uvl?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file5.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile5.uvl?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_2/file6.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_2%2Ffile6.uvl?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file10.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile10.uvl?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file11.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile11.uvl?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "uploads/user_2/dataset_4/file12.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d471f91483fe7c42fc80f84d4cb09bab3be87c9/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/uploads%2Fuser_2%2Fdataset_4%2Ffile12.uvl?ref=9d471f91483fe7c42fc80f84d4cb09bab3be87c9",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      }
    ]
  },
  {
    "sha": "757678f2064638e7880f13739f0074100b659d11",
    "node_id": "C_kwDONDG85doAKDc1NzY3OGYyMDY0NjM4ZTc4ODBmMTM3MzlmMDA3NDEwMGI2NTlkMTE",
    "commit": {
      "author": {
        "name": "raumonmar1",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-12T15:35:11Z"
      },
      "committer": {
        "name": "raumonmar1",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-12T15:35:11Z"
      },
      "message": "fix(app): fixed errors at create_app for deployment",
      "tree": {
        "sha": "1a61c915e284a7a9b3c06c5c1b424d139cf066e4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/1a61c915e284a7a9b3c06c5c1b424d139cf066e4"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/757678f2064638e7880f13739f0074100b659d11",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/757678f2064638e7880f13739f0074100b659d11",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/757678f2064638e7880f13739f0074100b659d11",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/757678f2064638e7880f13739f0074100b659d11/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e99889a2e31685dedd1aace0e5b9522b0634e9e2",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e99889a2e31685dedd1aace0e5b9522b0634e9e2",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e99889a2e31685dedd1aace0e5b9522b0634e9e2"
      }
    ],
    "files": [
      {
        "sha": "fdd63b05e87cb4c63240ad04afb83e89340a1d1c",
        "filename": "app/__init__.py",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/757678f2064638e7880f13739f0074100b659d11/app%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/757678f2064638e7880f13739f0074100b659d11/app%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2F__init__.py?ref=757678f2064638e7880f13739f0074100b659d11",
        "patch": "@@ -1,6 +1,7 @@\n import os\n \n from flask import Flask\n+\n from flask_sqlalchemy import SQLAlchemy\n from dotenv import load_dotenv\n from flask_migrate import Migrate\n@@ -26,12 +27,6 @@ def create_app(config_name='development'):\n     config_manager = ConfigManager(app)\n     config_manager.load_config(config_name=config_name)\n \n-    # Add SQLAlchemy-specific configuration\n-    app.config['SQLALCHEMY_ENGINE_OPTIONS'] = {\n-        'pool_pre_ping': True,  # Reconexi\u00f3n autom\u00e1tica\n-        'pool_recycle': 280,   # Tiempo para reciclar conexiones\n-    }\n-\n     # Initialize SQLAlchemy and Migrate with the app\n     db.init_app(app)\n     migrate.init_app(app, db)\n@@ -72,4 +67,4 @@ def inject_vars_into_jinja():\n     return app\n \n \n-app = create_app()\n+app = create_app()\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "70e40a8830f0cb2d3f8f2b9883ba788ee23fda37",
    "node_id": "C_kwDONDG85doAKDcwZTQwYTg4MzBmMGNiMmQzZjhmMmI5ODgzYmE3ODhlZTIzZmRhMzc",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-12T14:35:54Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-12T14:35:54Z"
      },
      "message": "feat(analyse_UVL): removed duplicate alerts on frontend",
      "tree": {
        "sha": "04994554580f8683326a25004e1726d408d3bdb0",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/04994554580f8683326a25004e1726d408d3bdb0"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/70e40a8830f0cb2d3f8f2b9883ba788ee23fda37",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/70e40a8830f0cb2d3f8f2b9883ba788ee23fda37",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/70e40a8830f0cb2d3f8f2b9883ba788ee23fda37",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/70e40a8830f0cb2d3f8f2b9883ba788ee23fda37/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2a3ccd212ba67cb5906326c6ddb87ad999e9e01d",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/2a3ccd212ba67cb5906326c6ddb87ad999e9e01d",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/2a3ccd212ba67cb5906326c6ddb87ad999e9e01d"
      }
    ],
    "files": [
      {
        "sha": "7297628e822272c99065facc5da8b0ff9a75f813",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/70e40a8830f0cb2d3f8f2b9883ba788ee23fda37/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/70e40a8830f0cb2d3f8f2b9883ba788ee23fda37/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=70e40a8830f0cb2d3f8f2b9883ba788ee23fda37",
        "patch": "@@ -153,7 +153,7 @@ def upload():\n         get_tree(file_path)\n     except Exception as e:\n         os.remove(file_path)\n-        return jsonify({\"message\": str(e)}),400\n+        return jsonify({\"message\": str(e),\"syntax\": True}),400\n \n     return (\n         jsonify("
      },
      {
        "sha": "a67d1da0c8aa6c8b32c659f0e15ac070f8077ca2",
        "filename": "app/modules/dataset/templates/dataset/upload_dataset.html",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/70e40a8830f0cb2d3f8f2b9883ba788ee23fda37/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/70e40a8830f0cb2d3f8f2b9883ba788ee23fda37/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html?ref=70e40a8830f0cb2d3f8f2b9883ba788ee23fda37",
        "patch": "@@ -434,7 +434,14 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n                             this.on('error', function (file, response) {\n                                 console.error(\"Error uploading file: \", response);\n                                 let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name +'. Error: '+response.message;\n+\t\t\t\tif (response.syntax) {\n+                                \talert.textContent = 'UVL not valid: ' + file.name +'. Error: '+response.message;\n+\t\t\t\t} else {\n+\t\t\t\t\tif ( response!=\"You can't upload files of this type.\") {\n+\n+\t\t\t\t\t\talert.textContent = 'UVL not valid';\n+\t\t\t    \t\t}\n+\t\t\t\t}\n \t\t\t\tthis.removeFile(file);\n                                 alerts.appendChild(alert);\n                                 alerts.style.display = 'block';"
      }
    ]
  },
  {
    "sha": "d6f3d8664f474e87c766708c6fd8372f6fe853b0",
    "node_id": "C_kwDONDG85doAKGQ2ZjNkODY2NGY0NzRlODdjNzY2NzA4YzZmZDgzNzJmNmZlODUzYjA",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-12T13:08:50Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-12T13:08:50Z"
      },
      "message": "fix(dataset, auth): client secret token added and some fixes",
      "tree": {
        "sha": "2a8a1c2f92facfb284eae4f37aa7a0e3188d6a98",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/2a8a1c2f92facfb284eae4f37aa7a0e3188d6a98"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/d6f3d8664f474e87c766708c6fd8372f6fe853b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d6f3d8664f474e87c766708c6fd8372f6fe853b0",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d6f3d8664f474e87c766708c6fd8372f6fe853b0",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d6f3d8664f474e87c766708c6fd8372f6fe853b0/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da200f12479507535e09c260aad4b26f598a7087",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/da200f12479507535e09c260aad4b26f598a7087",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/da200f12479507535e09c260aad4b26f598a7087"
      }
    ],
    "files": [
      {
        "sha": "b9ea75aabfdbeb0e5b637b8d0741cec8dc7d86a2",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6f3d8664f474e87c766708c6fd8372f6fe853b0/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6f3d8664f474e87c766708c6fd8372f6fe853b0/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=d6f3d8664f474e87c766708c6fd8372f6fe853b0",
        "patch": "@@ -67,6 +67,7 @@ jobs:\n           ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n           GH_TOKEN: ${{ secrets.GH_TOKEN }}\n           GH_PAT: ${{ secrets.GH_PAT }}\n+          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}\n         run: |\n           curl \"$deploy_url\"\n       \n\\ No newline at end of file"
      },
      {
        "sha": "c8105b78321f80b32919280eedbd30d2feeed6e7",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 8,
        "deletions": 20,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6f3d8664f474e87c766708c6fd8372f6fe853b0/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6f3d8664f474e87c766708c6fd8372f6fe853b0/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=d6f3d8664f474e87c766708c6fd8372f6fe853b0",
        "patch": "@@ -15,11 +15,11 @@\n user_profile_service = UserProfileService()\n \n app = Flask(__name__)\n-#app.config[\"SECRET_KEY\"] = \"SECRET KEY  \"\n token_admin = os.getenv(\"ORG_TOKEN_ADMIN\")\n+client_secret = os.getenv(\"CLIENT_SECRET\")\n \n-github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g',\n-                                        client_secret='00b92023ceb36020d4d0a7f34d5a583e2e386611')\n+\n+github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g', client_secret=client_secret)\n \n app.register_blueprint(github_blueprint, url_prefix='/github_login')\n \n@@ -117,7 +117,6 @@ def invite_user():\n \n     if response.status_code == 201:\n         return f\"Now {username} can join our github organization. Accept it in github. Once joined, you don't have to repeat this process.\"\n-        #return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n     \n     elif response.status_code == 404:\n         return jsonify({\"error\": f\"Username {username} not found\"}), 404\n@@ -153,19 +152,8 @@ def crear_repo():\n     \n     except subprocess.CalledProcessError as e:\n         \n-        if e.returncode == 127:\n-            return '''\n-                The command 'gh' is not recognized. Please install GitHub CLI by following these steps in your command line:\n-\n-                    1. Update your package list:\n-                sudo apt update\n-                \n-                    2. Install the GitHub CLI:\n-                sudo apt install gh\n-                \n-                    3. You can verify the installation:\n-                gh --version\n-                '''\n-        \n-        return f\"Repository '{username}' is already created. Now, always you are sync with github, you can push from here your datasets or models to github.\"\n-    \n+        return (\n+            f\"Something went wrong, it may be caused by:<br>\"\n+            f\"1) Repository '{username}' is already created. Don't worry, now always you are sync with github, you can push from here your datasets or models to github.<br>\"\n+            f\"2) If you are a developer on localhost, you will have to give administrator permission.\"\n+        )    "
      },
      {
        "sha": "ce5ed9799afe5ba69c13299f6adb0fe295f3ca82",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6f3d8664f474e87c766708c6fd8372f6fe853b0/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6f3d8664f474e87c766708c6fd8372f6fe853b0/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=d6f3d8664f474e87c766708c6fd8372f6fe853b0",
        "patch": "@@ -385,14 +385,13 @@ def commit(dataset_id):\n         \n         all_files = repository.get_all_files_for_dataset(dataset_id)\n         \n-        # Copiar archivos y a\u00f1adirlos al commit\n+        # Copiar archivos, llevarlos al directorio de git y stagearlos\n         for archivo in all_files:\n             ruta_archivo_origen = archivo.get_path()\n             ruta_destino_archivo = os.path.join(ruta_carpeta, os.path.basename(ruta_archivo_origen))\n             shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n             subprocess.run(f\"git add {os.path.relpath(ruta_destino_archivo, ruta_repositorio)}\", cwd=ruta_repositorio, check=True, shell=True)\n         \n-        # Realizar el commit y el push\n         subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n         subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n \n@@ -421,16 +420,15 @@ def commit_file(file_id):\n        \n         ruta_repositorio = f\"/app/uvl_git/{username}\"\n     \n-        # Configurar usuario de Git\n         subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n         subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n \n         # Configurar URL remota con el PAT\n-        token = os.getenv('GH_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n+        token = os.getenv('GH_PAT')\n         repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n         subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n \n-        # Obtener archivo y hacer commit\n+        # Obtener archivo y copiarlo al directorio de git\n         hubfile_repository = HubfileRepository()\n         hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n         ruta_archivo_origen = hubfile.get_path()"
      }
    ]
  },
  {
    "sha": "e99889a2e31685dedd1aace0e5b9522b0634e9e2",
    "node_id": "C_kwDONDG85doAKGU5OTg4OWEyZTMxNjg1ZGVkZDFhYWNlMGU1Yjk1MjJiMDYzNGU5ZTI",
    "commit": {
      "author": {
        "name": "raumonmar1",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-11T18:16:56Z"
      },
      "committer": {
        "name": "raumonmar1",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-11T18:16:56Z"
      },
      "message": "fix(dataset):fixed SQL vars",
      "tree": {
        "sha": "253542379e175307d5d12395d3457b3c4e1988b1",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/253542379e175307d5d12395d3457b3c4e1988b1"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/e99889a2e31685dedd1aace0e5b9522b0634e9e2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e99889a2e31685dedd1aace0e5b9522b0634e9e2",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e99889a2e31685dedd1aace0e5b9522b0634e9e2",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e99889a2e31685dedd1aace0e5b9522b0634e9e2/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "db793b949bf6f7c67a1f3d9dd8f505dc347c4d04",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/db793b949bf6f7c67a1f3d9dd8f505dc347c4d04",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/db793b949bf6f7c67a1f3d9dd8f505dc347c4d04"
      }
    ],
    "files": [
      {
        "sha": "10b91b2d8f99fca97b135026afdf73815055959b",
        "filename": "app/__init__.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e99889a2e31685dedd1aace0e5b9522b0634e9e2/app%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e99889a2e31685dedd1aace0e5b9522b0634e9e2/app%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2F__init__.py?ref=e99889a2e31685dedd1aace0e5b9522b0634e9e2",
        "patch": "@@ -1,7 +1,6 @@\n import os\n \n from flask import Flask\n-\n from flask_sqlalchemy import SQLAlchemy\n from dotenv import load_dotenv\n from flask_migrate import Migrate\n@@ -27,6 +26,12 @@ def create_app(config_name='development'):\n     config_manager = ConfigManager(app)\n     config_manager.load_config(config_name=config_name)\n \n+    # Add SQLAlchemy-specific configuration\n+    app.config['SQLALCHEMY_ENGINE_OPTIONS'] = {\n+        'pool_pre_ping': True,  # Reconexi\u00f3n autom\u00e1tica\n+        'pool_recycle': 280,   # Tiempo para reciclar conexiones\n+    }\n+\n     # Initialize SQLAlchemy and Migrate with the app\n     db.init_app(app)\n     migrate.init_app(app, db)"
      }
    ]
  },
  {
    "sha": "db793b949bf6f7c67a1f3d9dd8f505dc347c4d04",
    "node_id": "C_kwDONDG85doAKGRiNzkzYjk0OWJmNmY3YzY3YTFmM2Q5ZGQ4ZjUwNWRjMzQ3YzRkMDQ",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-11T17:51:39Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-11T17:51:39Z"
      },
      "message": "feat(workflows): added render workflows for main branch",
      "tree": {
        "sha": "5472cd8d87858dd66aeb85db849c099ff5ae7ce9",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/5472cd8d87858dd66aeb85db849c099ff5ae7ce9"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/db793b949bf6f7c67a1f3d9dd8f505dc347c4d04",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/db793b949bf6f7c67a1f3d9dd8f505dc347c4d04",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/db793b949bf6f7c67a1f3d9dd8f505dc347c4d04",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/db793b949bf6f7c67a1f3d9dd8f505dc347c4d04/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "450fc752106a14628f284b1e9df85318aea1e86d",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/450fc752106a14628f284b1e9df85318aea1e86d",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/450fc752106a14628f284b1e9df85318aea1e86d"
      }
    ],
    "files": [
      {
        "sha": "89ec68b74d858fee1da0b2e6abde0a23a5a4431a",
        "filename": ".github/workflows/render_main.yml",
        "status": "added",
        "additions": 70,
        "deletions": 0,
        "changes": 70,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/db793b949bf6f7c67a1f3d9dd8f505dc347c4d04/.github%2Fworkflows%2Frender_main.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/db793b949bf6f7c67a1f3d9dd8f505dc347c4d04/.github%2Fworkflows%2Frender_main.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender_main.yml?ref=db793b949bf6f7c67a1f3d9dd8f505dc347c4d04",
        "patch": "@@ -0,0 +1,70 @@\n+name: Deploy main branch to Render\n+\n+on:\n+    push:\n+      branches:\n+        - main\n+    pull_request:\n+      branches:\n+        - main\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+          ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+          GH_TOKEN: ${{ secrets.GH_TOKEN }}\n+          GH_PAT: ${{ secrets.GH_PAT }}\n+        run: |\n+          curl \"$deploy_url\"\n+      "
      }
    ]
  },
  {
    "sha": "450fc752106a14628f284b1e9df85318aea1e86d",
    "node_id": "C_kwDONDG85doAKDQ1MGZjNzUyMTA2YTE0NjI4ZjI4NGIxZTlkZjg1MzE4YWVhMWU4NmQ",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-11T17:13:47Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-11T17:13:47Z"
      },
      "message": "feat(workflows): added codacy workflow",
      "tree": {
        "sha": "d3c3ca85e719404009247afc749ee6ac65021f8e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/d3c3ca85e719404009247afc749ee6ac65021f8e"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/450fc752106a14628f284b1e9df85318aea1e86d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/450fc752106a14628f284b1e9df85318aea1e86d",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/450fc752106a14628f284b1e9df85318aea1e86d",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/450fc752106a14628f284b1e9df85318aea1e86d/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7274816f462d23237cd34b269446035944eda429",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7274816f462d23237cd34b269446035944eda429",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/7274816f462d23237cd34b269446035944eda429"
      }
    ],
    "files": [
      {
        "sha": "43e2a67d1907b1dd5e19919814b2242cfe5f0add",
        "filename": ".github/workflows/codacy.yml",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/450fc752106a14628f284b1e9df85318aea1e86d/.github%2Fworkflows%2Fcodacy.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/450fc752106a14628f284b1e9df85318aea1e86d/.github%2Fworkflows%2Fcodacy.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcodacy.yml?ref=450fc752106a14628f284b1e9df85318aea1e86d",
        "patch": "@@ -0,0 +1,51 @@\n+name: Codacy CI\n+\n+on:\n+  push:\n+    branches: [main, develop]\n+  pull_request:\n+    branches: [main, develop]\n+\n+jobs:\n+  build:\n+    runs-on: ubuntu-latest\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+    - name: Checkout code\n+      uses: actions/checkout@v4\n+\n+    - name: Set up Python\n+      uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Upload coverage to Codacy\n+      run: |\n+        pip install codacy-coverage\n+        coverage run -m pytest app/modules/ --ignore-glob='*selenium*'\n+        coverage xml \n+        python-codacy-coverage -r coverage.xml\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}"
      }
    ]
  },
  {
    "sha": "7274816f462d23237cd34b269446035944eda429",
    "node_id": "C_kwDONDG85doAKDcyNzQ4MTZmNDYyZDIzMjM3Y2QzNGIyNjk0NDYwMzU5NDRlZGE0Mjk",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-11T16:45:06Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-11T16:45:06Z"
      },
      "message": "fix(dataset): fixed syntax error",
      "tree": {
        "sha": "a2775b362d3a5506ef9e1ff8c3628d87aa206874",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a2775b362d3a5506ef9e1ff8c3628d87aa206874"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/7274816f462d23237cd34b269446035944eda429",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7274816f462d23237cd34b269446035944eda429",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/7274816f462d23237cd34b269446035944eda429",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7274816f462d23237cd34b269446035944eda429/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "365790be6d10225b670fbb6e5804a3de3daf090a",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/365790be6d10225b670fbb6e5804a3de3daf090a",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/365790be6d10225b670fbb6e5804a3de3daf090a"
      }
    ],
    "files": [
      {
        "sha": "e9ebaefb7b58ae220dcdaedf018126e58f6149b8",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/7274816f462d23237cd34b269446035944eda429/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/7274816f462d23237cd34b269446035944eda429/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=7274816f462d23237cd34b269446035944eda429",
        "patch": "@@ -388,7 +388,6 @@ var currentId = 0;\n \n \t\t\t});\n \t\t}\n-\t};\n \n \n function isValidOrcid(orcid) {"
      }
    ]
  },
  {
    "sha": "2a3ccd212ba67cb5906326c6ddb87ad999e9e01d",
    "node_id": "C_kwDONDG85doAKDJhM2NjZDIxMmJhNjdjYjU5MDYzMjZjNmRkYjg3YWQ5OTllOWUwMWQ",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-11T13:26:58Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-11T13:26:58Z"
      },
      "message": "feat(analyse_UVL): Added error message on frontend and moved model checker to upload screen",
      "tree": {
        "sha": "3bd262e1d24e13a549cb7736c34c9379f7338439",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/3bd262e1d24e13a549cb7736c34c9379f7338439"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/2a3ccd212ba67cb5906326c6ddb87ad999e9e01d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/2a3ccd212ba67cb5906326c6ddb87ad999e9e01d",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/2a3ccd212ba67cb5906326c6ddb87ad999e9e01d",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/2a3ccd212ba67cb5906326c6ddb87ad999e9e01d/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eca40c55adcd94430cd9f965bead5c94c621f281",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/eca40c55adcd94430cd9f965bead5c94c621f281",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/eca40c55adcd94430cd9f965bead5c94c621f281"
      }
    ],
    "files": [
      {
        "sha": "c4fc8a3db6aa7a7d23d24b03bb754b67b429eea3",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 5,
        "deletions": 37,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/2a3ccd212ba67cb5906326c6ddb87ad999e9e01d/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/2a3ccd212ba67cb5906326c6ddb87ad999e9e01d/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=2a3ccd212ba67cb5906326c6ddb87ad999e9e01d",
        "patch": "@@ -116,43 +116,6 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n-@dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n-@login_required\n-def check_dataset():\n-    form = DataSetForm()\n-    if request.method==\"POST\": \n-\n-        temp_folder = current_user.temp_folder()\n-        if not os.path.exists(temp_folder):\n-           return jsonify({\"message\": \"Something went wrong, try again\"}), 400\n-        \n-        filename = os.listdir(temp_folder)[0]\n-        file_path = os.path.join(temp_folder, filename)\n-        message = None\n-        try:\n-            get_tree(file_path)\n-        except Exception as e:\n-            message = e\n-\n-        with open(file_path) as f:\n-            x = \"\".join([i for i in f])\n-        context = {\"message\":x}\n-        if message:\n-            context[\"error\"] = message\n-        else:\n-            context[\"error\"] = \"None\"\n-        return jsonify(context),200\n-   \n-    # setting things up for the checker to have only one file available\n-    temp_folder = current_user.temp_folder()\n-    if os.path.exists(temp_folder) and os.path.isdir(temp_folder):\n-            shutil.rmtree(temp_folder)\n-\n-    return render_template(\n-        \"dataset/check_datasets.html\", form = form )\n-\n-\n-\n \n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n@@ -186,6 +149,11 @@ def upload():\n         file.save(file_path)\n     except Exception as e:\n         return jsonify({\"message\": str(e)}), 500\n+    try:\n+        get_tree(file_path)\n+    except Exception as e:\n+        os.remove(file_path)\n+        return jsonify({\"message\": str(e)}),400\n \n     return (\n         jsonify("
      },
      {
        "sha": "9c39a7ba463e67ba1cf726d260f7a84a1d8cbd14",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "removed",
        "additions": 0,
        "deletions": 286,
        "changes": 286,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/eca40c55adcd94430cd9f965bead5c94c621f281/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/eca40c55adcd94430cd9f965bead5c94c621f281/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=eca40c55adcd94430cd9f965bead5c94c621f281",
        "patch": "@@ -1,286 +0,0 @@\n-{% extends \"base_template.html\" %}\n-\n-{% block title %}Check UVL model{% endblock %}\n-\n-{% block content %}\n-\n-    <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n-\n-    {% if messages %}\n-        <ul>\n-            {% for message in messages %}\n-                <li>{{ message }}</li>\n-            {% endfor %}\n-        </ul>\n-    {% endif %}\n-\n-    <div class=\"row\">\n-\n-        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n-\n-            <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n-\n-            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n-                \n-\t\t{{ form.hidden_tag() }}\n-\n-\n-                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n-                    <div id=\"dropzone-text\"></div>\n-                </form>\n-\n-                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n-                    </span>\n-\n-                <ul class=\"mt-2\" id=\"file-list\"></ul>\n-\n-                <script>\n-                    let dropzone = Dropzone.options.myDropzone = {\n-                        url: \"/dataset/file/upload\",\n-                        paramName: 'file',\n-                        maxFilesize: 10,\n-                        acceptedFiles: '.uvl',\n-                        init: function () {\n-\n-\t\t\t\tlet fileList = document.getElementById('file-list');\n-\t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n-\t\t\t\tlet alerts = document.getElementById('alerts');\n-\t\t\t\tthis.on('addedfile', function (file) {\n-\n-\t\t\t\t\tlet ext = file.name.split('.').pop();\n-\t\t\t\t\tif (ext !== 'uvl') {\n-\t\t\t\t\t\tthis.removeFile(file);\n-\n-\t\t\t\t\t\tlet alert = document.createElement('p');\n-\t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n-\t\t\t\t\t\talerts.appendChild(alert);\n-\t\t\t\t\t\talerts.style.display = 'block';\n-\t\t\t\t\t}\n-\t\t\t\t\tif (fileList.childElementCount > 0) {\n-\t\t\t\t\t\tthis.removeFile(file);\n-\n-\t\t\t\t\t\tlet alert = document.createElement('p');\n-\t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n-\t\t\t\t\t\talerts.appendChild(alert);\n-\t\t\t\t\t\talerts.style.display = 'block';\n-\t\t\t\t\t}\n-                            });\n-\n-                            this.on('success', function (file, response) {\n-\n-                                let dropzone = this;\n-\n-                                show_upload_dataset();\n-\n-                                console.log(\"File uploaded: \", response);\n-                                // actions when UVL model is uploaded\n-                                let listItem = document.createElement('li');\n-                                let h4Element = document.createElement('h4');\n-                                h4Element.textContent = response.filename;\n-                                listItem.appendChild(h4Element);\n-\n-                                // generate incremental id for form\n-                                let formUniqueId = generateIncrementalId();\n-\n-                               /*\n-                                    ##########################################\n-                                    REMOVE BUTTON\n-                                    ##########################################\n-                                */\n-\n-                                // remove button\n-                                let removeButton = document.createElement('button');\n-                                removeButton.innerHTML = 'Delete model';\n-                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n-                                removeButton.style.borderRadius = '5px';\n-\n-                                removeButton.addEventListener('click', function () {\n-                                    fileList.removeChild(listItem);\n-                                    this.removeFile(file);\n-\n-                                    // Ajax request\n-                                    let xhr = new XMLHttpRequest();\n-                                    xhr.open('POST', '/dataset/file/delete', true);\n-                                    xhr.setRequestHeader('Content-Type', 'application/json');\n-                                    xhr.onload = function () {\n-                                        if (xhr.status === 200) {\n-                                            console.log('Deleted file from server');\n-\n-                                            if (dropzone.files.length === 0) {\n-                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n-                                                clean_upload_errors();\n-                                            }\n-\n-                                        }\n-                                    };\n-                                    xhr.send(JSON.stringify({file: file.name}));\n-                                }.bind(this));\n-\n-                                /*\n-                                    ##########################################\n-                                    APPEND BUTTONS\n-                                    ##########################################\n-                                */\n-                                listItem.appendChild(removeButton);\n-\n-                                /*\n-                                    ##########################################\n-                                    UVL FORM\n-                                    ##########################################\n-                                */\n-\n-                                // create specific form for UVL\n-                                let formContainer = document.createElement('div');\n-                                formContainer.id = formUniqueId + \"_form\";\n-                                formContainer.classList.add('uvl_form', \"mt-3\");\n-                                formContainer.style.display = \"none\";\n-\n-                                formContainer.innerHTML = `\n-                                    <div class=\"row\">\n-                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n-                                        <div class=\"col-12\">\n-                                            <div class=\"row\">\n-                                                <div class=\"col-12\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">Title</label>\n-                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-12\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">Description</label>\n-                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-lg-6 col-12\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n-                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n-                                                            <option value=\"none\">None</option>\n-                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n-                                                            <option value=\"book\">Book</option>\n-                                                            <option value=\"section\">Book Section</option>\n-                                                            <option value=\"conferencepaper\">Conference Paper</option>\n-                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n-                                                            <option value=\"article\">Journal Article</option>\n-                                                            <option value=\"patent\">Patent</option>\n-                                                            <option value=\"preprint\">Preprint</option>\n-                                                            <option value=\"deliverable\">Project Deliverable</option>\n-                                                            <option value=\"milestone\">Project Milestone</option>\n-                                                            <option value=\"proposal\">Proposal</option>\n-                                                            <option value=\"report\">Report</option>\n-                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n-                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n-                                                            <option value=\"technicalnote\">Technical Note</option>\n-                                                            <option value=\"thesis\">Thesis</option>\n-                                                            <option value=\"workingpaper\">Working Paper</option>\n-                                                            <option value=\"other\">Other</option>\n-                                                        </select>\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-lg-6 col-6\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n-                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-6\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n-                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-6\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">UVL version</label>\n-                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n-                                                    </div>\n-                                                </div>\n-                                                <div class=\"col-12\">\n-                                                    <div class=\"mb-3\">\n-                                                        <label class=\"form-label\">Authors</label>\n-                                                        <div id=\"` + formContainer.id + `_authors\">\n-                                                        </div>\n-                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n-                                                    </div>\n-                                                </div>\n-                                            </div>\n-                                        </div>\n-                                    </div>\n-                                    `;\n-\n-                                listItem.appendChild(formContainer);\n-                                fileList.appendChild(listItem);\n-\n-                            });\n-\n-                            this.on('error', function (file, response) {\n-                                console.error(\"Error uploading file: \", response);\n-                                let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n-                                alerts.appendChild(alert);\n-                                alerts.style.display = 'block';\n-                            });\n-\n-                        }\n-                    };\n-\n-\n-                </script>\n-\n-            </div>\n-        </div>\n-\n-    </div>\n-\n-    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n-\n-        <div class=\"col-12\">\n-\n-            <hr>\n-\n-            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n-\n-            <div style=\"padding-left: 2rem\">\n-\n-                <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n-                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n-                    Upload dataset</button>\n-\n-                <div id=\"loading\" style=\"display: none\">\n-                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n-                    Uploading dataset, please wait...\n-                </div>\n-\n-                <div class=\"row\">\n-                    <div class=\"col-12 mb-3\">\n-\n-                    </div>\n-                </div>\n-\n-                \n-                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n-\n-                    </span>\n-\n-                <script>\n-                    const upload_button = document.getElementById('check_model_button');\n-\t\t\tupload_button.disabled = false;\n-                </script>\n-\n-            </div>\n-\n-\n-\n-\n-        </div>\n-\n-    </div>\n-\n-\n-{% endblock %}\n-\n-{% block scripts %}\n-    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n-    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n-{% endblock %}"
      },
      {
        "sha": "89ae298ce2c955c4ff35ead54dd42a4fcff8c57a",
        "filename": "app/modules/dataset/templates/dataset/upload_dataset.html",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/2a3ccd212ba67cb5906326c6ddb87ad999e9e01d/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/2a3ccd212ba67cb5906326c6ddb87ad999e9e01d/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html?ref=2a3ccd212ba67cb5906326c6ddb87ad999e9e01d",
        "patch": "@@ -434,7 +434,8 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n                             this.on('error', function (file, response) {\n                                 console.error(\"Error uploading file: \", response);\n                                 let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n+                                alert.textContent = 'UVL not valid: ' + file.name +'. Error: '+response.message;\n+\t\t\t\tthis.removeFile(file);\n                                 alerts.appendChild(alert);\n                                 alerts.style.display = 'block';\n                             });\n@@ -529,4 +530,4 @@ <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\">\n {% block scripts %}\n     <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n     <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n-{% endblock %}\n\\ No newline at end of file\n+{% endblock %}"
      },
      {
        "sha": "2b9e6eebf9e8aafbcf4f4b4668074c004f98ee6b",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/2a3ccd212ba67cb5906326c6ddb87ad999e9e01d/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/2a3ccd212ba67cb5906326c6ddb87ad999e9e01d/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=2a3ccd212ba67cb5906326c6ddb87ad999e9e01d",
        "patch": "@@ -110,14 +110,6 @@\n                         </a>\n                     </li>\n \n-\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.list_dataset' else '' }}\">\n-                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n-                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n-                                class=\"align-middle\">Check model</span>\n-                        </a>\n-                    </li>\n-\n-\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>"
      }
    ]
  },
  {
    "sha": "365790be6d10225b670fbb6e5804a3de3daf090a",
    "node_id": "C_kwDONDG85doAKDM2NTc5MGJlNmQxMDIyNWI2NzBmYmI2ZTU4MDRhM2RlM2RhZjA5MGE",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-12-10T18:53:36Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-10T18:53:36Z"
      },
      "message": "Merge pull request #19 from flamenquin-hub-single/feature-advanced_filtering\n\nFeature(explore): Advanced filtering",
      "tree": {
        "sha": "072c37d1981a2769b194686b12c3b2f4b7e12b76",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/072c37d1981a2769b194686b12c3b2f4b7e12b76"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/365790be6d10225b670fbb6e5804a3de3daf090a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnWI4wCRC1aQ7uu5UhlAAAGwYQAGHVuY8yEmK5k6urzt/ahbh/\nhmtOvVqcsGg9Mh37eXFFPwOCMbpZEpEChqZmdUaSESf6DFTUvp442tih8OMI3aMO\n3Z2Dcn2qI3LqxmVGxwO602rOH/u97emhHp15yJy18SGicKJJ4/upTTnW02QzuJSX\nfkqznFtOQlG4YMG06a9/4KA5y5yjWGkT4Wk96pbltZjmXRpy8bv3y3LDhYVXnmqi\n1dT8WsxKypJi8qn8/JuKCiVKNyWh1CLlab1WW07qCyCrpSUaD5q1/AghxrXsXBs5\nLVcFVbWCJZwsYs6PNWiPlyBX0u6QNeB/vqFcf0NYHx6zMlU/MhMXvkZ54rwwjW1B\nzArYi3J9G0Gm/ZEjqUGu83bYvPrBYwupngJE4Mf2OEHYBQbRTJ7p5CoBruRB4Fey\nY/bpbwWlSCICVOC+wbx2ZB+rFepiXLCesVGRMU8suziJ2508J/CsOdmUB0/F56nJ\n29JXMQ6rdcpQXz5/U8nP9KCt7Aeq1h7QhsuDNoRZkmPSgLq+rsTQ37ZwRnkVYfmc\nPaZXMxLv5Uqqey3SkE8qtuSEpY8JnPDrFUMnBYnwzZYresSTKVOt7GNYdtuOWlZF\nTEMjt0+3dIVehIQRwSBcaASCD4I9uQBC395d2tnIMJyk64Yiu5O8xDp6EYQO4DVX\nygfF+QfBevqV0kvEMtnE\n=a2wK\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 072c37d1981a2769b194686b12c3b2f4b7e12b76\nparent 9f5ad007febe6e1272c6e33788582f3c87595176\nparent ce6a18dfb9ed920305c01833ecda6c680f84f291\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1733856816 +0100\ncommitter GitHub <noreply@github.com> 1733856816 +0100\n\nMerge pull request #19 from flamenquin-hub-single/feature-advanced_filtering\n\nFeature(explore): Advanced filtering",
        "verified_at": "2024-12-10T18:54:59Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/365790be6d10225b670fbb6e5804a3de3daf090a",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/365790be6d10225b670fbb6e5804a3de3daf090a",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/365790be6d10225b670fbb6e5804a3de3daf090a/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9f5ad007febe6e1272c6e33788582f3c87595176",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9f5ad007febe6e1272c6e33788582f3c87595176",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/9f5ad007febe6e1272c6e33788582f3c87595176"
      },
      {
        "sha": "ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ce6a18dfb9ed920305c01833ecda6c680f84f291"
      }
    ],
    "files": [
      {
        "sha": "6f2edac23ceec557545bb8eaf134f3dcfa88d657",
        "filename": "app/modules/dataset/uvl_examples/file10.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tMessaging\t\n+\t\t\t\tor\n+\t\t\t\t\tSMS\n+\t\t\t\t\tMMS\n+\t\t\t\"Utility Features\"\t\n+\t\t\t\toptional\n+\t\t\t\t\tCalculator\n+\t\t\t\t\t\"Currency Exchange\"\n+\t\t\tOS\t\n+\t\t\t\talternative\n+\t\t\t\t\tSymbian\n+\t\t\t\t\tWinCE\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Currency Exchange\" => Calculator\n\\ No newline at end of file"
      },
      {
        "sha": "141cad170eaca409c3974334791706a0cc319f3b",
        "filename": "app/modules/dataset/uvl_examples/file11.uvl",
        "status": "modified",
        "additions": 25,
        "deletions": 17,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -1,19 +1,27 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tOnlineshop {abstract}\t\n+\t\tmandatory\n+\t\t\tPayment {abstract}\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Debit Card\"\n+\t\t\t\t\t\"Credit Card\"\n+\t\t\t\"Product Selection\" {abstract}\t\n+\t\t\t\tmandatory\n+\t\t\t\t\tCatalog\t\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tCategories\n+\t\t\t\t\t\t\tSort\n+\t\t\t\toptional\n+\t\t\t\t\tSearch\n+\t\toptional\n+\t\t\tUserManagement {abstract}\t\n+\t\t\t\tor\n+\t\t\t\t\tOrders\n+\t\t\t\t\tSecurity\n+\t\t\t\t\tPayments\n+\t\t\t\t\tWishlist\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSearch => Security\n+\tSecurity => !Payments\n+\tPayments => !Security\n+\tSort | Search\n\\ No newline at end of file"
      },
      {
        "sha": "117471c9d2dc5561b9562f672aec92d9af73450d",
        "filename": "app/modules/dataset/uvl_examples/file12.uvl",
        "status": "modified",
        "additions": 22,
        "deletions": 18,
        "changes": 40,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -1,19 +1,23 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Movies_App\" \n+\t\tmandatory\n+\t\t\t\"GUI\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Thin\" \n+\t\t\t\t\t\"Rich\" \n+\t\tmandatory\n+\t\t\t\"DB\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Local\" \n+\t\t\t\t\t\"Remote\" \n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\t\"Cache_Policy\" \n+\t\tmandatory\n+\t\t\t\"Network\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Wifi\" \n+\t\t\t\t\t\"Bluetooth\" \n+\t\toptional\n+\t\t\t\"GPS\" \n+\t\t\t\toptional\n+\t\t\t\t\t\"Built-In\" \n\\ No newline at end of file"
      },
      {
        "sha": "924a2f013c74f6bbea7f911b884dd9fd94e26f8b",
        "filename": "app/modules/dataset/uvl_examples/file2.uvl",
        "status": "modified",
        "additions": 19,
        "deletions": 18,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -1,19 +1,20 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40"
      },
      {
        "sha": "9e14cb807f57d510839a4d68aff29e690523ac78",
        "filename": "app/modules/dataset/uvl_examples/file3.uvl",
        "status": "modified",
        "additions": 17,
        "deletions": 18,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -1,19 +1,18 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "ad06cc4f7e038d2e2ab96ed02ae7ae1c2ef24dd0",
        "filename": "app/modules/dataset/uvl_examples/file4.uvl",
        "status": "modified",
        "additions": 20,
        "deletions": 17,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -1,19 +1,22 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tsmartwatch {abstract true}\n+\t\tmandatory\n+\t\t\tscreen\n+\t\t\t\talternative\n+\t\t\t\t\ttouch\n+\t\t\t\t\tstandard\n+\t\t\t\"energy management\"\n+\t\t\t\talternative\n+\t\t\t\t\tbasic\n+\t\t\t\t\t\"advanced solar\"\n+\t\toptional\n+\t\t\tpayment\n+\t\t\tgps\n+\t\t\t\"sports tracking\"\n+\t\t\t\tor\n+\t\t\t\t\trunning\n+\t\t\t\t\tskiing\n+\t\t\t\t\thiking\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t!(payment & standard)\n+\t\"sports tracking\" => gps"
      },
      {
        "sha": "2ed3f8f650ad498e4e3ca0220d63dc841fc39db0",
        "filename": "app/modules/dataset/uvl_examples/file5.uvl",
        "status": "modified",
        "additions": 33,
        "deletions": 18,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -1,19 +1,34 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "9234e685c686a0589a2f477bfc0f83156e104c5d",
        "filename": "app/modules/dataset/uvl_examples/file6.uvl",
        "status": "modified",
        "additions": 40,
        "deletions": 16,
        "changes": 56,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -1,19 +1,43 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\toptional\n+\t\t\t\t\tTouchScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\t\toptional\n+\t\t\t\t\tContactlessPayment\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n+\t\t\t\toptional\n+\t\t\t\t\tNFC\n \n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tContactlessPayment => NFC"
      },
      {
        "sha": "3d881f9b14f76d1a693988f487862607e513ce69",
        "filename": "app/modules/dataset/uvl_examples/file7.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tGSM_Protocol_1900\n+\t\t\tMP3_Recording\n+\t\t\tCamera_Resolution\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"2_1MP\"\n+\t\t\t\t\t\"5 MP\"\n+\t\t\t\t\t\"3_1MP\"\n+\t\t\tCamera\n+\t\t\tAudio_Formats\t\n+\t\t\t\tor\n+\t\t\t\t\tWAV\n+\t\t\t\t\tMP3\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tMP3_Recording => MP3\n\\ No newline at end of file"
      },
      {
        "sha": "10dddc5e29b5fc9da5ba4b8692ecbf437448f719",
        "filename": "app/modules/dataset/uvl_examples/file8.uvl",
        "status": "modified",
        "additions": 36,
        "deletions": 18,
        "changes": 54,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -1,19 +1,37 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tSV_Solution\t\n+\t\t\t\talternative\n+\t\t\t\t\tBMD\n+\t\t\t\t\tBMDCRM\n+\t\t\tCV_Documents\t\n+\t\t\t\tor\n+\t\t\t\t\t\"scan new\"\n+\t\t\t\t\t\"import external\"\n+\t\t\t\t\tarchive\n+\t\t\t\t\t\"read existing\"\n+\t\t\tCV_Claims\t\n+\t\t\t\tor\n+\t\t\t\t\tjournal\n+\t\t\t\t\t\"task manager\"\n+\t\t\tSV\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Particular Packages\"\n+\t\t\t\t\tSolution\n+\t\t\tCV_Customer\t\n+\t\t\t\tor\n+\t\t\t\t\tmail\n+\t\t\t\t\tphone\n+\t\t\tCV\t\n+\t\t\t\tor\n+\t\t\t\t\t\"Document Management\"\n+\t\t\t\t\t\"Claims Management\"\n+\t\t\t\t\t\"Customer Management\"\n+\t\t\tSV_Particular_Package\t\n+\t\t\t\tor\n+\t\t\t\t\tOrganizer\n+\t\t\t\t\t\"Label Printing\"\n+\t\t\t\t\tElse\n+\t\t\t\t\tDocs\n+\t\t\t\t\t\"Standard Letter\"\n\\ No newline at end of file"
      },
      {
        "sha": "1609b0318fca78c64b66a9f332daf50d08bb7879",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 41,
        "deletions": 1,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -16,13 +16,31 @@ function send_query() {\n         filter.addEventListener('input', () => {\n             const csrfToken = document.getElementById('csrf_token').value;\n \n+            const minFiles = document.getElementById('min_files').value || null;\n+            const maxFiles = document.getElementById('max_files').value || null;\n+            const minAvBranchingFactor = document.getElementById('min_av_branching_factor').value || null;\n+            const maxAvBranchingFactor = document.getElementById('max_av_branching_factor').value || null;\n+            const minLeafCount = document.getElementById('min_leaf_count').value || null;\n+            const maxLeafCount = document.getElementById('max_leaf_count').value || null;\n+            const minDepth = document.getElementById('min_depth').value || null;\n+            const maxDepth = document.getElementById('max_depth').value || null;\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n                 publication_type: document.querySelector('#publication_type').value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n+                min_files: minFiles,\n+                max_files: maxFiles,\n+                min_av_branching_factor: minAvBranchingFactor,\n+                max_av_branching_factor: maxAvBranchingFactor,\n+                min_leaf_count: minLeafCount,\n+                max_leaf_count: maxLeafCount,\n+                min_depth: minDepth,\n+                max_depth: maxDepth,\n+                leaf_feature_name: document.querySelector('#leaf_feature_name').value,\n+                core_feature_name: document.querySelector('#core_feature_name').value\n             };\n-\n+            \n             console.log(document.querySelector('#publication_type').value);\n \n             fetch('/explore', {\n@@ -179,6 +197,28 @@ function clearFilters() {\n         // option.dispatchEvent(new Event('input', {bubbles: true}));\n     });\n \n+    let minFilesInput = document.querySelector('#min_files');\n+    let maxFilesInput = document.querySelector('#max_files');\n+    minFilesInput.value = \"\"; \n+    maxFilesInput.value = \"\"; \n+    let minAvBranchingFactor = document.querySelector('#min_av_branching_factor');\n+    let maxAvBranchingFactor = document.querySelector('#max_av_branching_factor');\n+    minAvBranchingFactor.value = \"\"; \n+    maxAvBranchingFactor.value = \"\"; \n+    let minLeafCount = document.querySelector('#min_leaf_count');\n+    let maxLeafCount = document.querySelector('#max_leaf_count');\n+    minLeafCount.value = \"\"; \n+    maxLeafCount.value = \"\"; \n+    let minDepth = document.querySelector('#min_depth');\n+    let maxDepth = document.querySelector('#max_depth');\n+    minDepth.value = \"\"; \n+    maxDepth.value = \"\"; \n+    let leafFeatureName = document.querySelector('#leaf_feature_name');\n+    leafFeatureName.value = \"\";\n+    let coreFeatureName = document.querySelector('#core_feature_name');\n+    coreFeatureName.value = \"\";\n+\n+\n     // Perform a new search with the reset filters\n     queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n }"
      },
      {
        "sha": "fa37bd56d033abe4b84370094d21a3850923875b",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 71,
        "deletions": 2,
        "changes": 73,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -10,12 +10,31 @@ class ExploreRepository(BaseRepository):\n     def __init__(self):\n         super().__init__(DataSet)\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None, max_av_branching_factor=None,\n+               leaf_feature_name=\"\", core_feature_name=\"\",\n+               **kwargs):\n         # Normalize and remove unwanted characters\n         normalized_query = unidecode.unidecode(query).lower()\n         cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n \n         filters = []\n+        min_files = int(min_files) if min_files is not None else None\n+        max_files = int(max_files) if max_files is not None else None\n+\n+        min_leaf_count = int(min_leaf_count) if min_leaf_count is not None else None\n+        max_leaf_count = int(max_leaf_count) if max_leaf_count is not None else None\n+\n+        min_depth = int(min_depth) if min_depth is not None else None\n+        max_depth = int(max_depth) if max_depth is not None else None\n+\n+        min_av_branching_factor = float(min_av_branching_factor) if min_av_branching_factor is not None else None\n+        max_av_branching_factor = float(max_av_branching_factor) if max_av_branching_factor is not None else None\n+\n         for word in cleaned_query.split():\n             filters.append(DSMetaData.title.ilike(f\"%{word}%\"))\n             filters.append(DSMetaData.description.ilike(f\"%{word}%\"))\n@@ -55,7 +74,57 @@ def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **\n         # Order by created_at\n         if sorting == \"oldest\":\n             datasets = datasets.order_by(self.model.created_at.asc())\n+        elif sorting == \"filesize_asc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=False)\n+        elif sorting == \"filesize_desc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=True)\n         else:\n             datasets = datasets.order_by(self.model.created_at.desc())\n \n-        return datasets.all()\n+        if min_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() >= min_files]\n+        if max_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() <= max_files]\n+\n+        filtered_datasets = []\n+\n+        for dataset in datasets:\n+            feature_models = dataset.feature_models  \n+            dataset_passes_filter = False  \n+\n+            for model in feature_models:\n+                stats = model.calculate_statistics()  \n+                leaf_count = stats[\"leaf_count\"]\n+                depth = stats[\"max_depth\"]\n+                branching_factor = stats[\"branching_factor\"]\n+\n+                # Aplicar filtros a las estad\u00edsticas del modelo\n+                if ((min_leaf_count is not None and leaf_count < min_leaf_count) or\n+                    (max_leaf_count is not None and leaf_count > max_leaf_count) or\n+                    (min_depth is not None and depth < min_depth) or\n+                    (max_depth is not None and depth > max_depth) or\n+                    (min_av_branching_factor is not None and branching_factor < min_av_branching_factor) or\n+                        (max_av_branching_factor is not None and branching_factor > max_av_branching_factor)):\n+                    continue\n+\n+                if leaf_feature_name:\n+                    leaf_feature_names = model.get_leaf_feature_names()\n+                    print(leaf_feature_name)\n+                    if leaf_feature_name not in leaf_feature_names:\n+                        continue\n+\n+                if core_feature_name:\n+                    core_feature_names = model.get_core_feature_names()\n+                    if core_feature_name not in core_feature_names:\n+                        continue\n+\n+                dataset_passes_filter = True\n+                print(\"dataset_passes_filter\")\n+                break\n+\n+            if dataset_passes_filter:\n+                filtered_datasets.append(dataset)  \n+\n+        return filtered_datasets"
      },
      {
        "sha": "ecbed8e137e0f7d447b1b710e823b81cf204c427",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -6,5 +6,16 @@ class ExploreService(BaseService):\n     def __init__(self):\n         super().__init__(ExploreRepository())\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n-        return self.repository.filter(query, sorting, publication_type, tags, **kwargs)\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None,\n+               max_av_branching_factor=None,\n+               leaf_feature_name=\"\",\n+               core_feature_name=\"\", **kwargs):\n+        return self.repository.filter(query, sorting, publication_type, tags, min_files, max_files,\n+                                      min_leaf_count, max_leaf_count, min_depth, max_depth,\n+                                      min_av_branching_factor, max_av_branching_factor, leaf_feature_name,\n+                                      core_feature_name, **kwargs)"
      },
      {
        "sha": "f062144cdd68583a147b585fa2fa2d66cd94fb46",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 88,
        "deletions": 4,
        "changes": 92,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -54,8 +54,7 @@ <h3 class=\"h3 mb-3\">\n                                        value=\"\" autofocus>\n                             </div>\n                         </div>\n-\n-                        <div class=\"col-lg-6\">\n+                        <div class=\"col-lg-12\">\n                             <div class=\"mb-3\">\n                                 <label class=\"form-label\" for=\"publication_type\">Filter by publication\n                                     type</label>\n@@ -83,7 +82,79 @@ <h3 class=\"h3 mb-3\">\n                                     <option value=\"other\">Other</option>\n                                 </select>\n                             </div>\n-\n+                        </div>\n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_files\">Min Files:</label>\n+                                    <input type=\"number\" id=\"min_files\" name=\"min_files\" class=\"form-control\" placeholder=\"Min Files\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_files\">Max Files:</label>\n+                                    <input type=\"number\" id=\"max_files\" name=\"max_files\" class=\"form-control\" placeholder=\"Max Files\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_leaf_count\">Min Leaf Count:</label>\n+                                    <input type=\"number\" id=\"min_leaf_count\" name=\"min_leaf_count\" class=\"form-control\" placeholder=\"Min Leaf Count\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_leaf_count\">Max Leaf Count:</label>\n+                                    <input type=\"number\" id=\"max_leaf_count\" name=\"max_leaf_count\" class=\"form-control\" placeholder=\"Max Leaf Count\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_depth\">Min Depth:</label>\n+                                    <input type=\"number\" id=\"min_depth\" name=\"min_depth\" class=\"form-control\" placeholder=\"Min Depth\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_depth\">Max Depth:</label>\n+                                    <input type=\"number\" id=\"max_depth\" name=\"max_depth\" class=\"form-control\" placeholder=\"Max Depth\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_av_branching_factor\">Min Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"min_av_branching_factor\" name=\"min_av_branching_factor\" class=\"form-control\" placeholder=\"Min Average Branching Factor\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_av_branching_factor\">Max Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"max_av_branching_factor\" name=\"max_av_branching_factor\" class=\"form-control\" placeholder=\"Max Average Branching Factor\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"leaf_feature_name\">Leaf Feature Name:</label>\n+                                <input type=\"text\" id=\"leaf_feature_name\" name=\"leaf_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter leaf feature name\">\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"core_feature_name\">Core Feature Name:</label>\n+                                <input type=\"text\" id=\"core_feature_name\" name=\"core_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter core feature name\">\n+                            </div>\n                         </div>\n \n                     </div>\n@@ -108,7 +179,20 @@ <h3 class=\"h3 mb-3\">\n                                     </span>\n                                 </label>\n                             </div>\n-\n+                            <div>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_asc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Smallest first\n+                                    </span>\n+                                </label>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_desc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Largest first\n+                                    </span>\n+                                </label>\n+                            </div>\n                         </div>\n \n                     </div>"
      },
      {
        "sha": "9ed55640f52bbfc44bf4d95f0b7cd378428fd9e5",
        "filename": "app/modules/featuremodel/models.py",
        "status": "modified",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/365790be6d10225b670fbb6e5804a3de3daf090a/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Fmodels.py?ref=365790be6d10225b670fbb6e5804a3de3daf090a",
        "patch": "@@ -2,6 +2,9 @@\n from sqlalchemy import Enum as SQLAlchemyEnum\n \n from app.modules.dataset.models import Author, PublicationType\n+from flamapy.metamodels.fm_metamodel.transformations import UVLReader\n+from flamapy.metamodels.fm_metamodel.operations import FMAverageBranchingFactor, FMCountLeafs\n+from flamapy.metamodels.fm_metamodel.operations import FMMaxDepthTree, FMLeafFeatures, FMCoreFeatures\n \n \n class FeatureModel(db.Model):\n@@ -14,6 +17,51 @@ class FeatureModel(db.Model):\n     def __repr__(self):\n         return f'FeatureModel<{self.id}>'\n \n+    def calculate_statistics(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        leaf_counter = FMCountLeafs()\n+        leaf_counter.execute(fm)\n+        leaf_count = leaf_counter.get_result()\n+\n+        depth_calculator = FMMaxDepthTree()\n+        depth_calculator.execute(fm)\n+        max_tree_depth = depth_calculator.get_result()\n+\n+        branching_factor_calculator = FMAverageBranchingFactor()\n+        branching_factor_calculator.execute(fm)\n+        average_branching_factor = branching_factor_calculator.get_result()\n+\n+        return {\n+            \"leaf_count\": leaf_count,\n+            \"max_depth\": max_tree_depth,\n+            \"branching_factor\": average_branching_factor\n+        }\n+\n+    def get_leaf_feature_names(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        leaf_features_operation = FMLeafFeatures()\n+        leaf_features_operation.execute(fm)\n+        leaf_features = leaf_features_operation.get_result()\n+\n+        return [feature.name for feature in leaf_features]\n+\n+    def get_core_feature_names(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        core_features_operation = FMCoreFeatures()\n+        core_features_operation.execute(fm)\n+        core_features = core_features_operation.get_result()\n+\n+        return [feature.name for feature in core_features]\n+\n \n class FMMetaData(db.Model):\n     id = db.Column(db.Integer, primary_key=True)"
      }
    ]
  },
  {
    "sha": "9f5ad007febe6e1272c6e33788582f3c87595176",
    "node_id": "C_kwDONDG85doAKDlmNWFkMDA3ZmViZTZlMTI3MmM2ZTMzNzg4NTgyZjNjODc1OTUxNzY",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-10T18:39:02Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-10T18:39:02Z"
      },
      "message": "fix:added missing requirement",
      "tree": {
        "sha": "c81179bc3d7362d6cd6bc9af86345ed2f02f5c2b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/c81179bc3d7362d6cd6bc9af86345ed2f02f5c2b"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/9f5ad007febe6e1272c6e33788582f3c87595176",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9f5ad007febe6e1272c6e33788582f3c87595176",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/9f5ad007febe6e1272c6e33788582f3c87595176",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9f5ad007febe6e1272c6e33788582f3c87595176/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c0be2d776cb4640a1f70a9eb087bd03d1f02fe0c",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c0be2d776cb4640a1f70a9eb087bd03d1f02fe0c",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c0be2d776cb4640a1f70a9eb087bd03d1f02fe0c"
      }
    ],
    "files": [
      {
        "sha": "341be806fa39e544b166ce43d7a1f837351886eb",
        "filename": "requirements.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9f5ad007febe6e1272c6e33788582f3c87595176/requirements.txt",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9f5ad007febe6e1272c6e33788582f3c87595176/requirements.txt",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/requirements.txt?ref=9f5ad007febe6e1272c6e33788582f3c87595176",
        "patch": "@@ -19,6 +19,7 @@ dd==0.6.0\n dnspython==2.6.1\n docker==7.1.0\n email_validator==2.2.0\n+Flask-Dance==7.1.0\n Faker==26.0.0\n flake8==7.1.0\n flamapy==2.0.0.dev1"
      }
    ]
  },
  {
    "sha": "c0be2d776cb4640a1f70a9eb087bd03d1f02fe0c",
    "node_id": "C_kwDONDG85doAKGMwYmUyZDc3NmNiNDY0MGExZjcwYTllYjA4N2JkMDNkMWYwMmZlMGM",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-10T18:33:38Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-10T18:33:38Z"
      },
      "message": "fix: removed extra line in requirements file",
      "tree": {
        "sha": "f40a78234ab44418014a98dfaee95f1ed893676f",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/f40a78234ab44418014a98dfaee95f1ed893676f"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/c0be2d776cb4640a1f70a9eb087bd03d1f02fe0c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c0be2d776cb4640a1f70a9eb087bd03d1f02fe0c",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c0be2d776cb4640a1f70a9eb087bd03d1f02fe0c",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c0be2d776cb4640a1f70a9eb087bd03d1f02fe0c/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00a85f0a347812f37fe82060315f879dfa074d3b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/00a85f0a347812f37fe82060315f879dfa074d3b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/00a85f0a347812f37fe82060315f879dfa074d3b"
      }
    ],
    "files": [
      {
        "sha": "1285fa18f67657f9c1a32253514d86f155ee29bc",
        "filename": "requirements.txt",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c0be2d776cb4640a1f70a9eb087bd03d1f02fe0c/requirements.txt",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c0be2d776cb4640a1f70a9eb087bd03d1f02fe0c/requirements.txt",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/requirements.txt?ref=c0be2d776cb4640a1f70a9eb087bd03d1f02fe0c",
        "patch": "@@ -74,7 +74,6 @@ python-sat==1.8.dev13\n pytz==2024.1\n pyzmq==26.0.3\n requests==2.32.3\n--e git+https://github.com/flamenquin-hub-single/uvlhub.git@f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3#egg=rosemary\n selenium==4.22.0\n selenium-wire==5.1.0\n setuptools==70.3.0"
      }
    ]
  },
  {
    "sha": "00a85f0a347812f37fe82060315f879dfa074d3b",
    "node_id": "C_kwDONDG85doAKDAwYTg1ZjBhMzQ3ODEyZjM3ZmU4MjA2MDMxNWY4NzlkZmEwNzRkM2I",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-09T16:41:16Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-09T16:41:16Z"
      },
      "message": "fix(dataset): Remove unused requirement and format",
      "tree": {
        "sha": "1e95bd86533e4c342185900f4845d88448a2df54",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/1e95bd86533e4c342185900f4845d88448a2df54"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/00a85f0a347812f37fe82060315f879dfa074d3b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/00a85f0a347812f37fe82060315f879dfa074d3b",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/00a85f0a347812f37fe82060315f879dfa074d3b",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/00a85f0a347812f37fe82060315f879dfa074d3b/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ab64e4cbeed4c29a71b366e2a862114df5a5b77c"
      }
    ],
    "files": [
      {
        "sha": "ef40cc6e3f7bdfc6d7a7bae844294277c4952f62",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/00a85f0a347812f37fe82060315f879dfa074d3b/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/00a85f0a347812f37fe82060315f879dfa074d3b/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=00a85f0a347812f37fe82060315f879dfa074d3b",
        "patch": "@@ -47,11 +47,6 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                             <i data-feather=\"download\"></i> Download\n                         </button>\n                         <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n-                            <li>\n-                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n-                                    UVL\n-                                </a>\n-                            </li>\n                             <li>\n                                 <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n                                     Glencoe"
      },
      {
        "sha": "e79d86c7e2e3141bca6c3ae5143c00e227c676eb",
        "filename": "requirements.txt",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/00a85f0a347812f37fe82060315f879dfa074d3b/requirements.txt",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/00a85f0a347812f37fe82060315f879dfa074d3b/requirements.txt",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/requirements.txt?ref=00a85f0a347812f37fe82060315f879dfa074d3b",
        "patch": "@@ -19,7 +19,6 @@ dd==0.6.0\n dnspython==2.6.1\n docker==7.1.0\n email_validator==2.2.0\n-Flask-Dance==7.1.0\n Faker==26.0.0\n flake8==7.1.0\n flamapy==2.0.0.dev1"
      }
    ]
  },
  {
    "sha": "ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
    "node_id": "C_kwDONDG85doAKGFiNjRlNGNiZWVkNGMyOWE3MWIzNjZlMmE4NjIxMTRkZjVhNWI3N2M",
    "commit": {
      "author": {
        "name": "raumonmar1",
        "email": "72814383+raumonmar1@users.noreply.github.com",
        "date": "2024-12-09T14:06:21Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-09T14:06:21Z"
      },
      "message": "Merge pull request #8 from flamenquin-hub-single/feature-download_different_formats\n\nFeature(notepad): download different formats",
      "tree": {
        "sha": "83e9056e428743ac57fb16efea7e0374c91d2035",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/83e9056e428743ac57fb16efea7e0374c91d2035"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnVvldCRC1aQ7uu5UhlAAA9fgQABSxFWeM1mujtfD3GGTWu1Dr\nxbLzlYb1mqngpqkSZRu6zwMJuun8zZCkOE+9PPJzPRAGTANpBcIfejgMS0XkzxEo\nknyBsGGTPQmHhh8kCySOph0wPpXBqhyyB58v9qNcsmZfYZknr1z8QpqldaqsisiN\n6fVVvNSDuxT0CdSUwsTGGN2jnYBMJKTaDR0nv9r+59mZm8mY7PZNp75IZFueVBXd\ngGIJVY+9ZwiG1x6yHIWM0e5G7DvWBaljNTuo0ZCPf1QobPFe43W5M/ZD3vmppnNw\nFdVuv2TbaU2HbNz4p0PCIA+FRoxXqxfoJZxRW4Kx+gNGYpYrLP1/T8c+p1odhvCO\n/afSNOrSdqaZ4hN5Jj9uFMCic7fK+P70r4Uj3fktCD38UI5RvnB09gAGdt5LVG0e\nvXNNTh+sW3IVdwsQKcdGHoTBoY313mDEuENWtSuGVPZJWoLKnHnt/HjHsiLFSomz\nWewsdlib7RpUogjcW8R+Lni1994+xETfp7WmBo0tWaYBH6s4F//3sFg2+xnQl3l/\nd8rb4vYjd4J2V6bVR01z2XZcjXd6dSYz4qjg1Ut/YAkih2kTX+pZuxnC/f0e8KQZ\nqQVzVNFjY3iEZ+vvHZm0mAcqrlTQdfF5rIUIxenwMcJn7OIvJuGFxEl4OkgEcUhS\nvdkIRvC6gpjyGAWl3bDa\n=iCM1\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 83e9056e428743ac57fb16efea7e0374c91d2035\nparent d6e307820805348d54b8bb3fa19d938db0210958\nparent 5c9321b2b8342f50742156b721c5f8f94d57c6e3\nauthor raumonmar1 <72814383+raumonmar1@users.noreply.github.com> 1733753181 +0100\ncommitter GitHub <noreply@github.com> 1733753181 +0100\n\nMerge pull request #8 from flamenquin-hub-single/feature-download_different_formats\n\nFeature(notepad): download different formats",
        "verified_at": "2024-12-09T14:07:49Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d6e307820805348d54b8bb3fa19d938db0210958",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d6e307820805348d54b8bb3fa19d938db0210958",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d6e307820805348d54b8bb3fa19d938db0210958"
      },
      {
        "sha": "5c9321b2b8342f50742156b721c5f8f94d57c6e3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5c9321b2b8342f50742156b721c5f8f94d57c6e3",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5c9321b2b8342f50742156b721c5f8f94d57c6e3"
      }
    ],
    "files": [
      {
        "sha": "7f38d141209c35b92dd1f1a3919add56d2f8acd0",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 113,
        "deletions": 0,
        "changes": 113,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
        "patch": "@@ -139,6 +139,119 @@ var currentId = 0;\n \n         window.onload = function () {\n \n+            test_zenodo_connection();\n+\n+            document.getElementById('upload_button').addEventListener('click', function () {\n+\n+                clean_upload_errors();\n+                show_loading();\n+\n+                // check title and description\n+                let check = check_title_and_description();\n+\n+                if (check) {\n+                    // process data form\n+                    const formData = {};\n+\n+                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                        const form = document.getElementById(formId);\n+                        const inputs = form.querySelectorAll('input, select, textarea');\n+                        inputs.forEach(input => {\n+                            if (input.name) {\n+                                formData[input.name] = formData[input.name] || [];\n+                                formData[input.name].push(input.value);\n+                            }\n+                        });\n+                    });\n+\n+                    let formDataJson = JSON.stringify(formData);\n+                    console.log(formDataJson);\n+\n+                    const csrfToken = document.getElementById('csrf_token').value;\n+                    const formUploadData = new FormData();\n+                    formUploadData.append('csrf_token', csrfToken);\n+\n+                    for (let key in formData) {\n+                        if (formData.hasOwnProperty(key)) {\n+                            formUploadData.set(key, formData[key]);\n+                        }\n+                    }\n+\n+                    let checked_orcid = true;\n+                    if (Array.isArray(formData.author_orcid)) {\n+                        for (let orcid of formData.author_orcid) {\n+                            orcid = orcid.trim();\n+                            if (orcid !== '' && !isValidOrcid(orcid)) {\n+                                hide_loading();\n+                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                                checked_orcid = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    let checked_name = true;\n+                    if (Array.isArray(formData.author_name)) {\n+                        for (let name of formData.author_name) {\n+                            name = name.trim();\n+                            if (name === '') {\n+                                hide_loading();\n+                                write_upload_error(\"The author's name cannot be empty\");\n+                                checked_name = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    if (checked_orcid && checked_name) {\n+                        fetch('/dataset/upload', {\n+                            method: 'POST',\n+                            body: formUploadData\n+                        })\n+                            .then(response => {\n+                                if (response.ok) {\n+                                    console.log('Dataset sent successfully');\n+                                    response.json().then(data => {\n+                                        console.log(data.message);\n+                                        window.location.href = \"/dataset/list\";\n+                                    });\n+                                } else {\n+                                    response.json().then(data => {\n+                                        console.error('Error: ' + data.message);\n+                                        hide_loading();\n+\n+                                        write_upload_error(data.message);\n+\n+                                    });\n+                                }\n+                            })\n+                            .catch(error => {\n+                                console.error('Error in POST request:', error);\n+                            });\n+                    }\n+\n+\n+                } else {\n+                    hide_loading();\n+                }\n+\n+\n+            });\n+        };\n+\n+\n+        function isValidOrcid(orcid) {\n+            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+            return orcidRegex.test(orcid);\n+        }\n+\n+        function downloadDataset(datasetId, format) {\n+            const url = `/dataset/download/${datasetId}/${format}`;\n+            window.location.href = url;\n+        }\n+        \n \t\tif (document.getElementById('check_model_button')) {\n \n \t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {"
      },
      {
        "sha": "23d72338ddbcd462278af6be5b323670d5cea7cb",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 25,
        "deletions": 59,
        "changes": 84,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
        "patch": "@@ -7,24 +7,12 @@\n import uuid\n from datetime import datetime, timezone\n from zipfile import ZipFile\n-\n-from flask import (\n-    redirect,\n-    render_template,\n-    request,\n-    jsonify,\n-    send_from_directory,\n-    make_response,\n-    abort,\n-    url_for,\n-)\n+from flask import jsonify, redirect, url_for, render_template, request, send_from_directory, make_response, abort\n from flask_login import login_required, current_user\n import requests\n from app.modules.dataset.repositories import DSMetaDataRepository\n from app.modules.dataset.forms import DataSetForm\n-from app.modules.dataset.models import (\n-    DSDownloadRecord\n-)\n+from app.modules.dataset.models import DSDownloadRecord\n from app.modules.dataset import dataset_bp\n from app.modules.dataset.repositories import DataSetRepository\n from app.modules.dataset.services import (\n@@ -42,21 +30,18 @@\n \n logger = logging.getLogger(__name__)\n \n-\n dataset_service = DataSetService()\n author_service = AuthorService()\n dsmetadata_service = DSMetaDataService()\n zenodo_service = ZenodoService()\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n \n-\n @dataset_bp.route(\"/dataset/upload\", methods=[\"GET\", \"POST\"])\n @login_required\n def create_dataset():\n     form = DataSetForm()\n     if request.method == \"POST\":\n-\n         dataset = None\n \n         if not form.validate_on_submit():\n@@ -68,8 +53,8 @@ def create_dataset():\n             logger.info(f\"Created dataset: {dataset}\")\n             dataset_service.move_feature_models(dataset)\n         except Exception as exc:\n-            logger.exception(f\"Exception while create dataset data in local {exc}\")\n-            return jsonify({\"Exception while create dataset data in local: \": str(exc)}), 400\n+            logger.exception(f\"Exception while creating dataset data in local {exc}\")\n+            return jsonify({\"Exception while creating dataset data in local\": str(exc)}), 400\n \n         # send dataset as deposition to Zenodo\n         data = {}\n@@ -80,30 +65,22 @@ def create_dataset():\n         except Exception as exc:\n             data = {}\n             zenodo_response_json = {}\n-            logger.exception(f\"Exception while create dataset data in Zenodo {exc}\")\n+            logger.exception(f\"Exception while creating dataset data in Zenodo {exc}\")\n \n         if data.get(\"conceptrecid\"):\n             deposition_id = data.get(\"id\")\n-\n-            # update dataset with deposition id in Zenodo\n             dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n \n             try:\n-                # iterate for each feature model (one feature model = one request to Zenodo)\n                 for feature_model in dataset.feature_models:\n                     zenodo_service.upload_file(dataset, deposition_id, feature_model)\n-\n-                # publish deposition\n                 zenodo_service.publish_deposition(deposition_id)\n-\n-                # update DOI\n                 deposition_doi = zenodo_service.get_doi(deposition_id)\n                 dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n             except Exception as e:\n-                msg = f\"it has not been possible upload feature models in Zenodo and update the DOI: {e}\"\n+                msg = f\"it has not been possible to upload feature models in Zenodo and update the DOI: {e}\"\n                 return jsonify({\"message\": msg}), 200\n \n-        # Delete temp folder\n         file_path = current_user.temp_folder()\n         if os.path.exists(file_path) and os.path.isdir(file_path):\n             shutil.rmtree(file_path)\n@@ -113,7 +90,6 @@ def create_dataset():\n \n     return render_template(\"dataset/upload_dataset.html\", form=form)\n \n-\n @dataset_bp.route(\"/dataset/list\", methods=[\"GET\", \"POST\"])\n @login_required\n def list_dataset():\n@@ -150,9 +126,6 @@ def check_dataset():\n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n \n-\n-\n-\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -162,14 +135,12 @@ def upload():\n     if not file or not file.filename.endswith(\".uvl\"):\n         return jsonify({\"message\": \"No valid file\"}), 400\n \n-    # create temp folder\n     if not os.path.exists(temp_folder):\n         os.makedirs(temp_folder)\n \n     file_path = os.path.join(temp_folder, file.filename)\n \n     if os.path.exists(file_path):\n-        # Generate unique filename (by recursion)\n         base_name, extension = os.path.splitext(file.filename)\n         i = 1\n         while os.path.exists(\n@@ -196,8 +167,6 @@ def upload():\n         200,\n     )\n \n-\n-\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()\n@@ -211,23 +180,18 @@ def delete():\n \n     return jsonify({\"error\": \"Error: File not found\"})\n \n-\n @dataset_bp.route(\"/dataset/download/<int:dataset_id>\", methods=[\"GET\"])\n def download_dataset(dataset_id):\n     dataset = dataset_service.get_or_404(dataset_id)\n-\n     file_path = f\"uploads/user_{dataset.user_id}/dataset_{dataset.id}/\"\n-\n     temp_dir = tempfile.mkdtemp()\n     zip_path = os.path.join(temp_dir, f\"dataset_{dataset_id}.zip\")\n \n     with ZipFile(zip_path, \"w\") as zipf:\n         for subdir, dirs, files in os.walk(file_path):\n             for file in files:\n                 full_path = os.path.join(subdir, file)\n-\n                 relative_path = os.path.relpath(full_path, file_path)\n-\n                 zipf.write(\n                     full_path,\n                     arcname=os.path.join(\n@@ -237,10 +201,7 @@ def download_dataset(dataset_id):\n \n     user_cookie = request.cookies.get(\"download_cookie\")\n     if not user_cookie:\n-        user_cookie = str(\n-            uuid.uuid4()\n-        )  # Generate a new unique identifier if it does not exist\n-        # Save the cookie to the user's browser\n+        user_cookie = str(uuid.uuid4())\n         resp = make_response(\n             send_from_directory(\n                 temp_dir,\n@@ -258,15 +219,13 @@ def download_dataset(dataset_id):\n             mimetype=\"application/zip\",\n         )\n \n-    # Check if the download record already exists for this cookie\n     existing_record = DSDownloadRecord.query.filter_by(\n         user_id=current_user.id if current_user.is_authenticated else None,\n         dataset_id=dataset_id,\n         download_cookie=user_cookie\n     ).first()\n \n     if not existing_record:\n-        # Record the download in your database\n         DSDownloadRecordService().create(\n             user_id=current_user.id if current_user.is_authenticated else None,\n             dataset_id=dataset_id,\n@@ -276,26 +235,19 @@ def download_dataset(dataset_id):\n \n     return resp\n \n-\n @dataset_bp.route(\"/doi/<path:doi>/\", methods=[\"GET\"])\n def subdomain_index(doi):\n-\n-    # Check if the DOI is an old DOI\n     new_doi = doi_mapping_service.get_new_doi(doi)\n     if new_doi:\n-        # Redirect to the same path with the new DOI\n         return redirect(url_for('dataset.subdomain_index', doi=new_doi), code=302)\n \n-    # Try to search the dataset by the provided DOI (which should already be the new one)\n     ds_meta_data = dsmetadata_service.filter_by_doi(doi)\n \n     if not ds_meta_data:\n         abort(404)\n \n-    # Get dataset\n     dataset = ds_meta_data.data_set\n-\n-\n+    \n     # Export DataSet to BibTex\n     \n     bibtex_propiedades = {\n@@ -322,12 +274,9 @@ def subdomain_index(doi):\n \n     return resp\n \n-\n @dataset_bp.route(\"/dataset/unsynchronized/<int:dataset_id>/\", methods=[\"GET\"])\n @login_required\n def get_unsynchronized_dataset(dataset_id):\n-\n-    # Get dataset\n     dataset = dataset_service.get_unsynchronized_dataset(current_user.id, dataset_id)\n \n     if not dataset:\n@@ -446,3 +395,20 @@ def commit_file(file_id):\n     except subprocess.CalledProcessError as e:\n         return f\"This model is already in your github repository.\"\n \n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+\n+@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(file_id, format):\n+    \"\"\"Endpoint to download dataset in the specified format.\n+    Formats supported: glencoe, splot, dimacs, zip.\n+    \"\"\"\n+    if format == \"glencoe\":\n+        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n+    elif format == \"splot\":\n+        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n+    elif format == \"dimacs\":\n+        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n+    elif format == \"zip\":\n+        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n+    else:\n+        return jsonify({\"error\": \"Formato no soportado\"}), 400"
      },
      {
        "sha": "70bffb940afd8ec36c1e1fc138476075cf8a6353",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
        "patch": "@@ -41,6 +41,40 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n+                <div class=\"mt-2\">\n+                    <div class=\"btn-group\" role=\"group\">\n+                        <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n+                            <i data-feather=\"download\"></i> Download\n+                        </button>\n+                        <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n+                                    UVL\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                    Glencoe\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                    DIMACS\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                    SPLOT\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n+                                    ZIP\n+                                </a>\n+                            </li>\n+                        </ul>\n+                    </div>\n+                </div>\n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">"
      },
      {
        "sha": "d316841d1aca77398773dbb07abb7cbd5dd4e3dc",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
        "patch": "@@ -0,0 +1,58 @@\n+import pytest\n+from flask import url_for\n+from app.modules.dataset.routes import download_dataset_format\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client(test_client):\n+    \"\"\"\n+    Extiende la fixture test_client para el m\u00f3dulo dataset.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_download_glencoe_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato Glencoe.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/glencoe\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+\n+\n+def test_download_splot_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato SPLOT.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/splot\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+\n+\n+def test_download_dimacs_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato DIMACS.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/dimacs\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+\n+\n+def test_download_zip_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato ZIP.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/zip\")\n+    assert response.status_code == 302\n+    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n+\n+def test_download_invalid_format(test_client):\n+    \"\"\"\n+    Testea que se retorne un error 400 para un formato no soportado.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n+    assert response.status_code == 400\n+    assert response.json == {\"error\": \"Formato no soportado\"}"
      },
      {
        "sha": "9765d4aa769976cd87870704819c3cf0af65e9eb",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
        "patch": "@@ -91,12 +91,17 @@ <h2>\n                                     <i data-feather=\"eye\" class=\"center-button-icon\"></i>\n                                     View dataset\n                                 </a>\n-\n-                                <a href=\"/dataset/download/{{ dataset.id }}\" class=\"btn btn-outline-primary btn-sm\"\n-                                   style=\"border-radius: 5px;\">\n-                                    <i data-feather=\"download\" class=\"center-button-icon\"></i>\n-                                    Download ({{ dataset.get_file_total_size_for_human() }})\n-                                </a>\n+                                <div class=\"btn-group\" role=\"group\">\n+                                    <button id=\"btnDownloadDropdown_{{ dataset.id }}\" type=\"button\" class=\"btn btn-outline-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n+                                        <i data-feather=\"download\" class=\"center-button-icon\"></i> Download\n+                                    </button>\n+                                    <ul class=\"dropdown-menu\" aria-labelledby=\"btnDownloadDropdown_{{ dataset.id }}\">\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'glencoe')\">Glencoe</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'splot')\">SPLOT</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'dimacs')\">DIMACS</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'zip')\">ZIP</a></li>\n+                                    </ul>\n+                                </div>                                \n                             </div>\n                         </div>\n "
      },
      {
        "sha": "d337dad98b8d18e15de1bf67815af93f2d8216a0",
        "filename": "app/static/js/scripts.js",
        "status": "added",
        "additions": 246,
        "deletions": 0,
        "changes": 246,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Fstatic%2Fjs%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Fstatic%2Fjs%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fscripts.js?ref=ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
        "patch": "@@ -0,0 +1,246 @@\n+var currentId = 0;\n+        var amount_authors = 0;\n+\n+        function show_upload_dataset() {\n+            document.getElementById(\"upload_dataset\").style.display = \"block\";\n+        }\n+\n+        function generateIncrementalId() {\n+            return currentId++;\n+        }\n+\n+        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n+            let fieldWrapper = document.createElement('div');\n+            fieldWrapper.className = className;\n+\n+            let label = document.createElement('label');\n+            label.className = 'form-label';\n+            label.for = name;\n+            label.textContent = text;\n+\n+            let field = document.createElement('input');\n+            field.name = name;\n+            field.className = 'form-control';\n+\n+            fieldWrapper.appendChild(label);\n+            fieldWrapper.appendChild(field);\n+            newAuthor.appendChild(fieldWrapper);\n+        }\n+\n+        function addRemoveButton(newAuthor) {\n+            let buttonWrapper = document.createElement('div');\n+            buttonWrapper.className = 'col-12 mb-2';\n+\n+            let button = document.createElement('button');\n+            button.textContent = 'Remove author';\n+            button.className = 'btn btn-danger btn-sm';\n+            button.type = 'button';\n+            button.addEventListener('click', function (event) {\n+                event.preventDefault();\n+                newAuthor.remove();\n+            });\n+\n+            buttonWrapper.appendChild(button);\n+            newAuthor.appendChild(buttonWrapper);\n+        }\n+\n+        function createAuthorBlock(idx, suffix) {\n+            let newAuthor = document.createElement('div');\n+            newAuthor.className = 'author row';\n+            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n+\n+            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n+            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n+            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n+            addRemoveButton(newAuthor);\n+\n+            return newAuthor;\n+        }\n+\n+        function check_title_and_description() {\n+            let titleInput = document.querySelector('input[name=\"title\"]');\n+            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n+\n+            titleInput.classList.remove(\"error\");\n+            descriptionTextarea.classList.remove(\"error\");\n+            clean_upload_errors();\n+\n+            let titleLength = titleInput.value.trim().length;\n+            let descriptionLength = descriptionTextarea.value.trim().length;\n+\n+            if (titleLength < 3) {\n+                write_upload_error(\"title must be of minimum length 3\");\n+                titleInput.classList.add(\"error\");\n+            }\n+\n+            if (descriptionLength < 3) {\n+                write_upload_error(\"description must be of minimum length 3\");\n+                descriptionTextarea.classList.add(\"error\");\n+            }\n+\n+            return (titleLength >= 3 && descriptionLength >= 3);\n+        }\n+\n+\n+        document.getElementById('add_author').addEventListener('click', function () {\n+            let authors = document.getElementById('authors');\n+            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n+            authors.appendChild(newAuthor);\n+        });\n+\n+\n+        document.addEventListener('click', function (event) {\n+            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n+\n+                let authorsButtonId = event.target.id;\n+                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n+                let authors = document.getElementById(authorsId);\n+                let id = authorsId.replace(\"_form_authors\", \"\")\n+                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n+                authors.appendChild(newAuthor);\n+\n+            }\n+        });\n+\n+        function show_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"none\";\n+            document.getElementById(\"loading\").style.display = \"block\";\n+        }\n+\n+        function hide_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"block\";\n+            document.getElementById(\"loading\").style.display = \"none\";\n+        }\n+\n+        function clean_upload_errors() {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            upload_error.innerHTML = \"\";\n+            upload_error.style.display = 'none';\n+        }\n+\n+        function write_upload_error(error_message) {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            let alert = document.createElement('p');\n+            alert.style.margin = '0';\n+            alert.style.padding = '0';\n+            alert.textContent = 'Upload error: ' + error_message;\n+            upload_error.appendChild(alert);\n+            upload_error.style.display = 'block';\n+        }\n+\n+        window.onload = function () {\n+\n+            test_zenodo_connection();\n+\n+            document.getElementById('upload_button').addEventListener('click', function () {\n+\n+                clean_upload_errors();\n+                show_loading();\n+\n+                // check title and description\n+                let check = check_title_and_description();\n+\n+                if (check) {\n+                    // process data form\n+                    const formData = {};\n+\n+                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                        const form = document.getElementById(formId);\n+                        const inputs = form.querySelectorAll('input, select, textarea');\n+                        inputs.forEach(input => {\n+                            if (input.name) {\n+                                formData[input.name] = formData[input.name] || [];\n+                                formData[input.name].push(input.value);\n+                            }\n+                        });\n+                    });\n+\n+                    let formDataJson = JSON.stringify(formData);\n+                    console.log(formDataJson);\n+\n+                    const csrfToken = document.getElementById('csrf_token').value;\n+                    const formUploadData = new FormData();\n+                    formUploadData.append('csrf_token', csrfToken);\n+\n+                    for (let key in formData) {\n+                        if (formData.hasOwnProperty(key)) {\n+                            formUploadData.set(key, formData[key]);\n+                        }\n+                    }\n+\n+                    let checked_orcid = true;\n+                    if (Array.isArray(formData.author_orcid)) {\n+                        for (let orcid of formData.author_orcid) {\n+                            orcid = orcid.trim();\n+                            if (orcid !== '' && !isValidOrcid(orcid)) {\n+                                hide_loading();\n+                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                                checked_orcid = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    let checked_name = true;\n+                    if (Array.isArray(formData.author_name)) {\n+                        for (let name of formData.author_name) {\n+                            name = name.trim();\n+                            if (name === '') {\n+                                hide_loading();\n+                                write_upload_error(\"The author's name cannot be empty\");\n+                                checked_name = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    if (checked_orcid && checked_name) {\n+                        fetch('/dataset/upload', {\n+                            method: 'POST',\n+                            body: formUploadData\n+                        })\n+                            .then(response => {\n+                                if (response.ok) {\n+                                    console.log('Dataset sent successfully');\n+                                    response.json().then(data => {\n+                                        console.log(data.message);\n+                                        window.location.href = \"/dataset/list\";\n+                                    });\n+                                } else {\n+                                    response.json().then(data => {\n+                                        console.error('Error: ' + data.message);\n+                                        hide_loading();\n+\n+                                        write_upload_error(data.message);\n+\n+                                    });\n+                                }\n+                            })\n+                            .catch(error => {\n+                                console.error('Error in POST request:', error);\n+                            });\n+                    }\n+\n+\n+                } else {\n+                    hide_loading();\n+                }\n+\n+\n+            });\n+        };\n+\n+\n+        function isValidOrcid(orcid) {\n+            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+            return orcidRegex.test(orcid);\n+        }\n+\n+        function downloadDataset(datasetId, format) {\n+            const url = `/dataset/download/${datasetId}/${format}`;\n+            window.location.href = url;\n+        }\n+        \n+        \n\\ No newline at end of file"
      },
      {
        "sha": "9902e4c35331f624fe86a182c7bfdc3ce10a8310",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
        "patch": "@@ -33,6 +33,7 @@\n \n     <link rel=\"stylesheet\" href=\"{{ url_for(\"static\", filename=\"css/own.css\") }}\">\n \n+    <script src=\"{{ url_for('static', filename='js/scripts.js') }}\"></script>\n </head>\n \n <body>"
      },
      {
        "sha": "88a6e6395d54c0d942e7fe5c1dfbc34a62e7636b",
        "filename": "requirements.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/requirements.txt",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ab64e4cbeed4c29a71b366e2a862114df5a5b77c/requirements.txt",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/requirements.txt?ref=ab64e4cbeed4c29a71b366e2a862114df5a5b77c",
        "patch": "@@ -75,6 +75,7 @@ python-sat==1.8.dev13\n pytz==2024.1\n pyzmq==26.0.3\n requests==2.32.3\n+-e git+https://github.com/flamenquin-hub-single/uvlhub.git@f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3#egg=rosemary\n selenium==4.22.0\n selenium-wire==5.1.0\n setuptools==70.3.0"
      }
    ]
  },
  {
    "sha": "5c9321b2b8342f50742156b721c5f8f94d57c6e3",
    "node_id": "C_kwDONDG85doAKDVjOTMyMWIyYjgzNDJmNTA3NDIxNTZiNzIxYzVmOGY5NGQ1N2M2ZTM",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-09T13:58:56Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-09T13:58:56Z"
      },
      "message": "fix(dataset): Remove unknown character",
      "tree": {
        "sha": "83e9056e428743ac57fb16efea7e0374c91d2035",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/83e9056e428743ac57fb16efea7e0374c91d2035"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/5c9321b2b8342f50742156b721c5f8f94d57c6e3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5c9321b2b8342f50742156b721c5f8f94d57c6e3",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5c9321b2b8342f50742156b721c5f8f94d57c6e3",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5c9321b2b8342f50742156b721c5f8f94d57c6e3/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "432766f8d9de4f6dd98747666de984c979264f02",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/432766f8d9de4f6dd98747666de984c979264f02",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/432766f8d9de4f6dd98747666de984c979264f02"
      }
    ],
    "files": [
      {
        "sha": "23d72338ddbcd462278af6be5b323670d5cea7cb",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5c9321b2b8342f50742156b721c5f8f94d57c6e3/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=5c9321b2b8342f50742156b721c5f8f94d57c6e3",
        "patch": "@@ -395,7 +395,6 @@ def commit_file(file_id):\n     except subprocess.CalledProcessError as e:\n         return f\"This model is already in your github repository.\"\n \n-\u00a1\n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n @dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])"
      }
    ]
  },
  {
    "sha": "432766f8d9de4f6dd98747666de984c979264f02",
    "node_id": "C_kwDONDG85doAKDQzMjc2NmY4ZDlkZTRmNmRkOTg3NDc2NjZkZTk4NGM5NzkyNjRmMDI",
    "commit": {
      "author": {
        "name": "raumonmar1",
        "email": "72814383+raumonmar1@users.noreply.github.com",
        "date": "2024-12-09T13:52:31Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-09T13:52:31Z"
      },
      "message": "Merge branch 'develop' into feature-download_different_formats",
      "tree": {
        "sha": "d750000940043918dc7dfd670a0f3bc3e655edf7",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/d750000940043918dc7dfd670a0f3bc3e655edf7"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/432766f8d9de4f6dd98747666de984c979264f02",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnVvYfCRC1aQ7uu5UhlAAAquMQAC7rJS1NXjFS5VZQeyiwKAUe\nnFCrRG3/Aa8WOhyf1NxjXcSxB/NPZSw8dbrlZ9oPCqr69fiYVx4dKVoAPHyKYQs1\nPyIwV7MqIdj6dFv8aw+OklSSIh9+BsQ01gfeRQW1p7/BwztUAa9aDbD4uVNZbVBq\nu4D24qvCBjS2jnTOT3BQYBzmO1WVpn2yAiP9VtNF7fit3CbrZOmiQQSpzYaDor2H\nkzyH8qo4O3XZ+C1wnWNS19dw/LgPoIwUq6HCChbfTiFjPVZmpz/K6QHv90XzS/Jh\nw37dGa1w4kFQ140Oi4EA3+xz4D4gpkCuzGzTyCCeb4vLH2riz3MRWzEzdsZk3FHj\nm4fxxjHSesd371QjTDzRbAB3WRkGPO//jDZb66Qp6guRWsij126nSBJNPJgb2YoP\npcAK7D3Fka94WU1UHUzU+k8vk4dKqlfW6LyAXcD99886GeIoD9RZLBGUJixa6UJ4\noDwqT+PvsXXmti5lQoLyAcF0/GE5xxF6cJIswVuJ1eMQZCDx29dyIR4Qm5j1ADZj\nlnZX2nfppZKHGWQ/nixi7CwuSnA4g3H39PF3DkfiA7vAgpTbYs9/f2j6n8qoFlDh\nkA0Rwpqzc0YfgmEZaROG5zHJ37j/qtsOGFe/v+m6QZ5Cg6mzSndKo5j+jZ0/qJkR\nFUE30t8zJI2MRrOgeoWB\n=RYnl\n-----END PGP SIGNATURE-----\n",
        "payload": "tree d750000940043918dc7dfd670a0f3bc3e655edf7\nparent d48aada557bb124f1359811e57a2cb3c1d88285a\nparent d6e307820805348d54b8bb3fa19d938db0210958\nauthor raumonmar1 <72814383+raumonmar1@users.noreply.github.com> 1733752351 +0100\ncommitter GitHub <noreply@github.com> 1733752351 +0100\n\nMerge branch 'develop' into feature-download_different_formats",
        "verified_at": "2024-12-09T13:52:37Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/432766f8d9de4f6dd98747666de984c979264f02",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/432766f8d9de4f6dd98747666de984c979264f02",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/432766f8d9de4f6dd98747666de984c979264f02/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d48aada557bb124f1359811e57a2cb3c1d88285a",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d48aada557bb124f1359811e57a2cb3c1d88285a",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d48aada557bb124f1359811e57a2cb3c1d88285a"
      },
      {
        "sha": "d6e307820805348d54b8bb3fa19d938db0210958",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d6e307820805348d54b8bb3fa19d938db0210958",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d6e307820805348d54b8bb3fa19d938db0210958"
      }
    ],
    "files": [
      {
        "sha": "7a6013bf8ee1dfc7f2da495d18d7b020e9b0d3f0",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fbug_report.md?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -0,0 +1,38 @@\n+---\n+name: Bug report\n+about: For bugs you may find\n+title: Brief bug description\n+labels: bug\n+assignees: ''\n+\n+---\n+\n+**Describe the bug**\n+A clear and concise description of what the bug is.\n+\n+**To Reproduce**\n+Steps to reproduce the behavior:\n+1. Go to '...'\n+2. Click on '....'\n+3. Scroll down to '....'\n+4. See error\n+\n+**Expected behavior**\n+A clear and concise description of what you expected to happen.\n+\n+**Screenshots**\n+If applicable, add screenshots to help explain your problem.\n+\n+**Desktop (please complete the following information):**\n+ - OS: [e.g. iOS]\n+ - Browser [e.g. chrome, safari]\n+ - Version [e.g. 22]\n+\n+**Smartphone (please complete the following information):**\n+ - Device: [e.g. iPhone6]\n+ - OS: [e.g. iOS8.1]\n+ - Browser [e.g. stock browser, safari]\n+ - Version [e.g. 22]\n+\n+**Additional context**\n+Add any other context about the problem here."
      },
      {
        "sha": "ca07ee63e773329b8606abfa23190baa1209b303",
        "filename": ".github/ISSUE_TEMPLATE/documentation.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fdocumentation.md?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -0,0 +1,11 @@\n+---\n+name: Documentation\n+about: For documents that may need updating\n+title: Update for [document name]\n+labels: documentation\n+assignees: ''\n+\n+---\n+\n+**Name the document and describe the necessary updates**\n+Describe the updates that the document needs"
      },
      {
        "sha": "a4608544700957f9174c6c537bf9664fc3667d94",
        "filename": ".github/ISSUE_TEMPLATE/work-item.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fwork-item.md?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Work Item\n+about: For Work Items\n+title: Work Item name\n+labels: enhancement\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n+\n+**Describe the solution you'd like**\n+A clear and concise description of what you want to happen.\n+\n+**Describe alternatives you've considered**\n+A clear and concise description of any alternative solutions or features you've considered.\n+\n+**Additional context**\n+Add any other context or screenshots about the feature request here."
      },
      {
        "sha": "cecdd33c479807f9136a24c334ed2061c27240a8",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 15,
        "deletions": 13,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -1,18 +1,20 @@\n-name: Commits Syntax Checker\n+name: Commit Message Check\n \n-on:\n-  pull_request:\n-    branches: [main]\n-    types: [opened, reopened, edited, review_requested, synchronize]\n-  push:\n-    branches:\n-      - \"main\"\n-  workflow_call:\n+on: [push]\n \n jobs:\n-  check:\n-    name: Conventional Commits\n+  commit-check:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@v2\n-      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file\n+      - name: Checkout code\n+        uses: actions/checkout@v1\n+        with:\n+          fetch-depth: 0\n+\n+      - name: Install dependencies\n+        run: npm install @commitlint/config-conventional @commitlint/cli husky\n+\n+      - name: Run CommitLint\n+        run: npx commitlint --from=HEAD~1 --to=HEAD --config @commitlint/config-conventional\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      },
      {
        "sha": "c5b9dbad0e7570244cb84942b53b859bf041af6c",
        "filename": ".github/workflows/deloyment_on_webhook.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d48aada557bb124f1359811e57a2cb3c1d88285a/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d48aada557bb124f1359811e57a2cb3c1d88285a/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeloyment_on_webhook.yml?ref=d48aada557bb124f1359811e57a2cb3c1d88285a",
        "patch": "@@ -1,32 +0,0 @@\n-name: Deploy on Webhook\n-\n-on:\n-  workflow_run:\n-    workflows: \n-      - \"Python Lint\"\n-      - \"Run tests\"\n-    types:\n-      - completed\n-\n-jobs:\n-  deploy:\n-    if: github.ref == 'refs/heads/main'\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Check lint and test results\n-      run: |\n-        if [ \"${{ github.event.workflow_run.conclusion }}\" != \"success\" ]; then\n-          echo \"Lint or Test workflow did not succeed. Exiting.\"\n-          exit 1\n-        fi\n-\n-    - name: Trigger Deployment Webhook\n-      env:\n-        WEBHOOK_DOMAIN: ${{ secrets.WEBHOOK_DOMAIN }}\n-        WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}\n-      run: |\n-        curl -X POST https://${{ secrets.WEBHOOK_DOMAIN }}/webhook/deploy -H \"Authorization: Bearer ${{ secrets.WEBHOOK_TOKEN }}\""
      },
      {
        "sha": "f7dfe75eb96badbdd3ee434377bee31f33a173df",
        "filename": ".github/workflows/deployment_on_dockerhub.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d48aada557bb124f1359811e57a2cb3c1d88285a/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d48aada557bb124f1359811e57a2cb3c1d88285a/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml?ref=d48aada557bb124f1359811e57a2cb3c1d88285a",
        "patch": "@@ -1,43 +0,0 @@\n-# This workflow uses actions that are not certified by GitHub.\n-# They are provided by a third-party and are governed by\n-# separate terms of service, privacy policy, and support\n-# documentation.\n-\n-# GitHub recommends pinning actions to a commit SHA.\n-# To get a newer version, you will need to update the SHA.\n-# You can also reference a tag or branch, but the action may change without warning.\n-\n-name: Publish image in Docker Hub\n-\n-on:\n-  release:\n-    types: [published]\n-\n-jobs:\n-  push_to_registry:\n-    name: Push Docker image to Docker Hub\n-    runs-on: ubuntu-latest\n-    steps:\n-      - name: Check out the repo\n-        uses: actions/checkout@v3\n-\n-      - name: Log in to Docker Hub\n-        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a\n-        with:\n-          username: ${{ secrets.DOCKER_USER }}\n-          password: ${{ secrets.DOCKER_PASSWORD }}\n-\n-      - name: Build and push Docker image\n-        run: docker build --build-arg VERSION_TAG=${{ github.event.release.tag_name }} -t drorganvidez/uvlhub:${{ github.event.release.tag_name }} -f docker/images/Dockerfile.prod .\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled\n-\n-      - name: Push Docker image to Docker Hub\n-        run: docker push drorganvidez/uvlhub:${{ github.event.release.tag_name }}\n-\n-      - name: Tag and push latest\n-        run: |\n-          docker tag drorganvidez/uvlhub:${{ github.event.release.tag_name }} drorganvidez/uvlhub:latest\n-          docker push drorganvidez/uvlhub:latest\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled"
      },
      {
        "sha": "733a9d501cdd9fab530bcab9a5da80a5cfe7653c",
        "filename": ".github/workflows/render.yml",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -0,0 +1,72 @@\n+name: Deploy develop branch to Render\n+\n+on:\n+    push:\n+      branches:\n+        - develop\n+    pull_request:\n+      branches:\n+        - develop\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+      with:\n+        ref: 'develop'\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_DEVELOP }}\n+          ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+          GH_TOKEN: ${{ secrets.GH_TOKEN }}\n+          GH_PAT: ${{ secrets.GH_PAT }}\n+        run: |\n+          curl \"$deploy_url\"\n+      \n\\ No newline at end of file"
      },
      {
        "sha": "8ad25762a0dbb9b820352c6abaf50a7e089c893d",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -46,5 +46,6 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n       run: |\n-        pytest app/modules/ --ignore-glob='*selenium*'\n+        pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      },
      {
        "sha": "9b6cb2b000af47b9662bacb80e90dfe99149b9d9",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 118,
        "deletions": 2,
        "changes": 120,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -1,15 +1,28 @@\n-from flask import render_template, redirect, url_for, request\n+import os\n+import shutil\n+import subprocess\n+from flask import Flask, jsonify, render_template, redirect, url_for, request\n from flask_login import current_user, login_user, logout_user\n-\n+import requests\n from app.modules.auth import auth_bp\n from app.modules.auth.forms import SignupForm, LoginForm\n from app.modules.auth.services import AuthenticationService\n from app.modules.profile.services import UserProfileService\n+from flask_dance.contrib.github import make_github_blueprint, github\n \n \n authentication_service = AuthenticationService()\n user_profile_service = UserProfileService()\n \n+app = Flask(__name__)\n+#app.config[\"SECRET_KEY\"] = \"SECRET KEY  \"\n+token_admin = os.getenv(\"ORG_TOKEN_ADMIN\")\n+\n+github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g',\n+                                        client_secret='00b92023ceb36020d4d0a7f34d5a583e2e386611')\n+\n+app.register_blueprint(github_blueprint, url_prefix='/github_login')\n+\n \n @auth_bp.route(\"/signup/\", methods=[\"GET\", \"POST\"])\n def show_signup_form():\n@@ -53,3 +66,106 @@ def login():\n def logout():\n     logout_user()\n     return redirect(url_for('public.index'))\n+\n+\n+@auth_bp.route('/gitlogin')\n+def github_login():\n+    \n+   if not github.authorized:\n+        return redirect(url_for('github.login'))\n+   else:\n+       account_info = github.get('/user/repos')\n+       if account_info.ok:\n+           account_info_json = account_info.json()\n+           return 'Your github account is already sync with uvlhub.'\n+\n+   return 'Request failed!'\n+\n+\n+@auth_bp.route('/invite', methods=['GET', 'POST'])\n+def invite_user():\n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return 'First sync your github account.'\n+              \n+    url = f'https://api.github.com/orgs/uvlhub/invitations'  \n+    headers = {\n+        'Authorization': f'token {token_admin}',\n+        'Accept': 'application/vnd.github.v3+json'\n+    }\n+    payload = {\n+        \"invitee_id\": None, \n+    }\n+\n+    # OBTENER EL ID DEL USUARIO DE GITHUB\n+    user_url = f'https://api.github.com/users/{username}'\n+    user_response = requests.get(user_url, headers=headers)\n+    \n+    if user_response.status_code == 200:\n+        user_id = user_response.json().get(\"id\")\n+        payload[\"invitee_id\"] = user_id  \n+        \n+    elif user_response.status_code == 404:\n+        return jsonify({\"error\": f\"Can't find the user: {username}\"}), 404\n+    else:\n+        return jsonify({\"error\": f\"Something went wrong\"}), user_response.status_code\n+        \n+    response = requests.post(url, json=payload, headers=headers)\n+\n+    if response.status_code == 201:\n+        return f\"Now {username} can join our github organization. Accept it in github. Once joined, you don't have to repeat this process.\"\n+        #return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n+    \n+    elif response.status_code == 404:\n+        return jsonify({\"error\": f\"Username {username} not found\"}), 404\n+    \n+    elif response.status_code == 422:\n+        return f'User {username} already belongs to our github organization or have a valid invitation to join. You have to find out in github.'\n+    \n+    else:\n+        return jsonify({\"error\": \"Can't send the invitation\", \"details\": response.json()}), response.status_code\n+    \n+\n+\n+@auth_bp.route('/create_repo', methods=['GET', 'POST'])\n+def crear_repo():\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return 'First sync your github account.'\n+\n+    comando = f\"gh repo create uvlhub/{username} --public\"\n+    url_repo = f\"https://github.com/uvlhub/{username}.git\"\n+    \n+    try:\n+        \n+        subprocess.run(comando, check=True, shell=True)\n+        directory = f\"/app/uvl_git/{username}\"\n+        os.makedirs(directory, exist_ok=True)\n+        subprocess.run(f\"git clone {url_repo} {directory}\",cwd=directory, check=True, shell=True)\n+        return f\"Repository '{username}' created in our github organization correctly.\"\n+    \n+    except subprocess.CalledProcessError as e:\n+        \n+        if e.returncode == 127:\n+            return '''\n+                The command 'gh' is not recognized. Please install GitHub CLI by following these steps in your command line:\n+\n+                    1. Update your package list:\n+                sudo apt update\n+                \n+                    2. Install the GitHub CLI:\n+                sudo apt install gh\n+                \n+                    3. You can verify the installation:\n+                gh --version\n+                '''\n+        \n+        return f\"Repository '{username}' is already created. Now, always you are sync with github, you can push from here your datasets or models to github.\"\n+    "
      },
      {
        "sha": "a76c25ccdf881eb721e29af34f2d893b5fb6d677",
        "filename": "app/modules/auth/services.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/app%2Fmodules%2Fauth%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/app%2Fmodules%2Fauth%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fservices.py?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -9,6 +9,7 @@\n from core.configuration.configuration import uploads_folder_name\n from core.services.BaseService import BaseService\n \n+os.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'\n \n class AuthenticationService(BaseService):\n     def __init__(self):"
      },
      {
        "sha": "bea556e6faeac932fc225d0430e8bfb3d8ee2a7c",
        "filename": "app/modules/dataset/repositories.py",
        "status": "modified",
        "additions": 33,
        "deletions": 2,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -1,5 +1,6 @@\n from datetime import datetime, timezone\n import logging\n+import re\n from flask_login import current_user\n from typing import Optional\n \n@@ -38,7 +39,7 @@ def __init__(self):\n \n     def filter_by_doi(self, doi: str) -> Optional[DSMetaData]:\n         return self.model.query.filter_by(dataset_doi=doi).first()\n-\n+    \n \n class DSViewRecordRepository(BaseRepository):\n     def __init__(self):\n@@ -113,7 +114,37 @@ def latest_synchronized(self):\n             .limit(5)\n             .all()\n         )\n-\n+        \n+    def get_all_files_for_dataset(self, dataset_id: int):\n+        dataset = self.model.query.get(dataset_id)\n+        if not dataset:\n+            return None\n+        all_files = []\n+        for feature_model in dataset.feature_models:\n+            all_files.extend(feature_model.files)\n+        return all_files\n+    \n+    def _normalize_folder_name(self, folder_name: str) -> str:\n+   \n+        normalized_name = re.sub(r'[^\\w\\s-]', '', folder_name)\n+        normalized_name = re.sub(r'\\s+', '_', normalized_name.strip())\n+        return normalized_name\n+    \n+    def get_dataset_name(self, dataset_id: int) -> str:\n+        dataset = (\n+        self.model.query\n+        .filter_by(id=dataset_id)\n+        .first()\n+    )\n+        if dataset and dataset.ds_meta_data:\n+            title = dataset.ds_meta_data.title\n+            return self._normalize_folder_name(title)\n+        \n+        return None\n+    \n+\n+\n+    \n \n class DOIMappingRepository(BaseRepository):\n     def __init__(self):"
      },
      {
        "sha": "12dfbb95f09fe473f7a5af5a706f4d1f7f20a09f",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 138,
        "deletions": 33,
        "changes": 171,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -2,16 +2,19 @@\n import os\n import json\n import shutil\n+import subprocess\n import tempfile\n import uuid\n from datetime import datetime, timezone\n from zipfile import ZipFile\n from flask import jsonify, redirect, url_for, render_template, request, send_from_directory, make_response, abort\n from flask_login import login_required, current_user\n-\n+import requests\n+from app.modules.dataset.repositories import DSMetaDataRepository\n from app.modules.dataset.forms import DataSetForm\n from app.modules.dataset.models import DSDownloadRecord\n from app.modules.dataset import dataset_bp\n+from app.modules.dataset.repositories import DataSetRepository\n from app.modules.dataset.services import (\n     AuthorService,\n     DSDownloadRecordService,\n@@ -20,7 +23,10 @@\n     DataSetService,\n     DOIMappingService\n )\n+from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n+from flask_dance.contrib.github import github\n+\n \n logger = logging.getLogger(__name__)\n \n@@ -243,42 +249,27 @@ def subdomain_index(doi):\n     dataset = ds_meta_data.data_set\n     \n     # Export DataSet to BibTex\n-    closing_ = \"},\"\n-    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n-    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n-    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n     \n-    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n-        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    else:\n-        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n-    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n-    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n-\n-    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n-    bibtex_properties.append(\"}\")\n-    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n     \n-    max_preview_len = 60\n-    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n \n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    \n-    n_px = 17*(int(len(bibtex_properties)/2)+1)\n-\n-    page_render = render_template(\"dataset/view_dataset.html\",\n-                    dataset=dataset,\n-                    bibtex_dataset=bibtex_dataset,\n-                    bibtex_preview=bibtex_preview,\n-                    bibtex_preview_start = bibtex_properties[0],\n-                    bibtex_preview_lines=bibtex_properties[1:-1],\n-                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n-                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n-\n-    resp = make_response(page_render)\n-    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+\n+    resp = make_response(render_template(\"dataset/view_dataset.html\",dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp\n@@ -290,13 +281,127 @@ def get_unsynchronized_dataset(dataset_id):\n \n     if not dataset:\n         abort(404)\n+    \n+    ds_meta_data = dsmetadata_service.get_by_id(dataset.ds_meta_data_id)\n+\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    \n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n+   \n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name)\n+\n+\n+@dataset_bp.route('/dataset/commit/<int:dataset_id>', methods=['GET','POST'])\n+def commit(dataset_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n+    else:\n+        return 'First sync your github account.'\n+    \n+    try:\n+            \n+        ruta_repositorio = f\"/app/uvl_git/{username}\"   \n+        \n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        token = os.getenv('GH_PAT')\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n+             \n+        # Obtener el nombre y los archivos del dataset\n+        repository = DataSetRepository()\n+        nombre = repository.get_dataset_name(dataset_id)\n+        ruta_carpeta = os.path.join(ruta_repositorio, nombre)\n+        os.makedirs(ruta_carpeta, exist_ok=True)\n+        \n+        all_files = repository.get_all_files_for_dataset(dataset_id)\n+        \n+        # Copiar archivos y a\u00f1adirlos al commit\n+        for archivo in all_files:\n+            ruta_archivo_origen = archivo.get_path()\n+            ruta_destino_archivo = os.path.join(ruta_carpeta, os.path.basename(ruta_archivo_origen))\n+            shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+            subprocess.run(f\"git add {os.path.relpath(ruta_destino_archivo, ruta_repositorio)}\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        # Realizar el commit y el push\n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"Dataset has been pushed to GitHub correctly.\"\n+\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"This dataset is already in your github repository.\"\n+    \n+    \n+    \n+@dataset_bp.route('/dataset/commit_file/<int:file_id>', methods=['GET','POST'])\n+def commit_file(file_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n+        \n+    else:\n+        return 'First sync your github account.'\n+    \n+    try:\n+       \n+        ruta_repositorio = f\"/app/uvl_git/{username}\"\n+    \n+        # Configurar usuario de Git\n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        # Configurar URL remota con el PAT\n+        token = os.getenv('GH_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        # Obtener archivo y hacer commit\n+        hubfile_repository = HubfileRepository()\n+        hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n+        ruta_archivo_origen = hubfile.get_path()\n+        ruta_destino_archivo = os.path.join(ruta_repositorio, hubfile.name)\n+        shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+\n+        subprocess.run(f\"git add {hubfile.name}\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"This model has been pushed to GitHub correctly.\"\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"This model is already in your github repository.\"\n \n+\u00a1\n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n @dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n def download_dataset_format(file_id, format):\n     \"\"\"Endpoint to download dataset in the specified format.\n-    Formats supported: uvl, glencoe, splot, dimacs, zip.\n+    Formats supported: glencoe, splot, dimacs, zip.\n     \"\"\"\n     if format == \"glencoe\":\n         return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))"
      },
      {
        "sha": "70bffb940afd8ec36c1e1fc138476075cf8a6353",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 59,
        "deletions": 32,
        "changes": 91,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -193,44 +193,24 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n \n             {% if bibtex_dataset %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n-                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n-                    {{ bibtex_dataset }}\n-                </div>\n-\n-                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n-                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n-                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n-                        <b>BibTex</b>\n-                    </span>\n-\n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_dataset }}\n-                    </span> -->\n-                   \n-                    \n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_preview }}\n-                    </span> -->\n-                   \n \n-                    \n-                    <div class=\"doi_text\">\n-                        <div>{{ bibtex_preview_start }}</div>\n-                        {% for bib_line in bibtex_preview_lines %}\n-                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n-                        {% endfor %}\n-                        <div>{{ bibtex_preview_end }}</div>\n-                    </div>\n-                   \n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n+                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                    <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n+\n+                <a href=\"{{ url_for('dataset.commit', dataset_id=dataset.id) }}\" class=\"btn btn-primary mt-3\" style=\"border-radius: 5px;\">\n+                    <i class=\"center-button-icon\"></i>\n+                    Upload dataset to github\n+                </a>\n             </div>\n             {% endif %}\n \n+            \n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n \n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n@@ -249,6 +229,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n                 </div>\n+\n                 \n             </div>\n             {% endif %}\n@@ -342,6 +323,10 @@ <h4 style=\"margin-bottom: 0px;\"><span class=\"badge bg-dark\">{{ dataset.get_files\n                             </div>\n                             <div class=\"col-12 text-end\" >\n \n+                                <a href=\"{{ url_for('dataset.commit_file', file_id=file.id) }}\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                                    <i data-feather=\"github\"></i> Upload\n+                                </a>\n+\n                                 <button onclick=\"viewFile('{{ file.id }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                                     <i data-feather=\"eye\"></i> View\n                                 </button>\n@@ -433,6 +418,30 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n     </div>\n </div>\n \n+<div class=\"modal fade\" id=\"bibtexViewerModal\" tabindex=\"-1\" aria-labelledby=\"bibtexViewerModalLabel\" aria-hidden=\"true\">\n+    <div class=\"modal-dialog modal-lg\" style=\"height: 80vh; display: flex; align-items: center;\">\n+        <div class=\"modal-content\" style=\"height: 80vh;\">\n+            <div class=\"modal-header\" style=\"display: flex; justify-content: space-between; align-items: center;\">\n+                <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex format</h5>\n+                <div>\n+                    <a href=\"#\" class=\"btn btn-outline-primary btn-sm\" id=\"bibtexDownloadButton\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"download\"></i>\n+                    </a>\n+                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"copy\"></i>\n+                    </button>\n+                    <button onclick=\"freeBibtexUrl()\" type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n+                </div>\n+            </div>\n+            <div class=\"modal-body\" style=\"overflow-y: auto; height: calc(100vh - 50px);\">\n+                <pre id=\"bibtexContent\" style=\"height: 100%; overflow-y: auto; white-space: pre-wrap; word-wrap: break-word; background-color: #f5f5f5; padding: 20px; border-radius: 5px; border: 1px solid #ccc;\"></pre>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js\"></script>\n \n \n@@ -444,6 +453,24 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n \n     var currentFileId;\n \n+    function freeBibtexUrl() {\n+        console.log(\"entra en freeBibtexUrl\")\n+        URL.revokeObjectURL(document.getElementById('bibtexDownloadButton').href)\n+    }\n+\n+    function viewBibtex(bibfilename) {\n+        var bib_content_display = document.getElementById('dataset_bibtex_export').textContent;\n+\n+        var blob = new Blob([bib_content_display], { type: 'text/plain' });\n+        var fileURL = URL.createObjectURL(blob);\n+        document.getElementById('bibtexDownloadButton').href = fileURL;\n+        document.getElementById('bibtexDownloadButton').download = bibfilename;\n+        document.getElementById('bibtexContent').textContent = bib_content_display;\n+\n+        var modal = new bootstrap.Modal(document.getElementById('bibtexViewerModal'));\n+        modal.show();\n+    }\n+\n     function viewFile(fileId) {\n         fetch(`/file/view/${fileId}`)\n             .then(response => response.json())"
      },
      {
        "sha": "94c83d4cf76ce083619ed6dae3c0bb05e18f04f2",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -23,6 +23,9 @@ def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n \n     def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n         return db.session.query(DataSet).join(FeatureModel).join(Hubfile).filter(Hubfile.id == hubfile.id).first()\n+    \n+    def get_hubfile_by_id(self, hubfile_id: int) -> Hubfile:\n+        return db.session.query(Hubfile).filter(Hubfile.id == hubfile_id).first()\n \n \n class HubfileViewRecordRepository(BaseRepository):"
      },
      {
        "sha": "9902e4c35331f624fe86a182c7bfdc3ce10a8310",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -179,6 +179,18 @@\n \n                         {% else %}\n \n+                        <a href=\"{{ url_for('auth.github_login') }}\">\n+                            <button>Sync with Github</button>\n+                        </a> \n+\n+                        <a href=\"{{ url_for('auth.invite_user') }}\">\n+                            <button>Join our Github Organization</button>\n+                        </a> \n+\n+                        <a href=\"{{ url_for('auth.crear_repo') }}\">\n+                            <button>Create your repo in our Github Org</button>\n+                        </a> \n+\n                         <a class=\"nav-icon dropdown-toggle d-inline-block d-sm-none\" href=\"#\" data-bs-toggle=\"dropdown\">\n                             <i class=\"align-middle\" data-feather=\"user\"></i> \n                         </a>"
      },
      {
        "sha": "ed10caea787b0655f7bc8d63ef3c9386c2b45c04",
        "filename": "docker/images/Dockerfile.render",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/docker%2Fimages%2FDockerfile.render",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/docker%2Fimages%2FDockerfile.render",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.render?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -46,6 +46,19 @@ RUN pip install --no-cache-dir --upgrade pip\n # Install any needed packages specified in requirements.txt\n RUN pip install -r requirements.txt\n \n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+    curl \\\n+    git \\\n+    sudo \\\n+    && curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \\\n+    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \\\n+    && echo \"deb [signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \\\n+    && apt-get update && apt-get install -y gh \\\n+    && apt-get clean && rm -rf /var/lib/apt/lists/*\n+\n+RUN apt-get update && apt-get install -y git\n+\n+\n # Expose port 80\n EXPOSE 80\n "
      },
      {
        "sha": "88a6e6395d54c0d942e7fe5c1dfbc34a62e7636b",
        "filename": "requirements.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/432766f8d9de4f6dd98747666de984c979264f02/requirements.txt",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/432766f8d9de4f6dd98747666de984c979264f02/requirements.txt",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/requirements.txt?ref=432766f8d9de4f6dd98747666de984c979264f02",
        "patch": "@@ -19,6 +19,7 @@ dd==0.6.0\n dnspython==2.6.1\n docker==7.1.0\n email_validator==2.2.0\n+Flask-Dance==7.1.0\n Faker==26.0.0\n flake8==7.1.0\n flamapy==2.0.0.dev1"
      }
    ]
  },
  {
    "sha": "d48aada557bb124f1359811e57a2cb3c1d88285a",
    "node_id": "C_kwDONDG85doAKGQ0OGFhZGE1NTdiYjEyNGYxMzU5ODExZTU3YTJjYjNjMWQ4ODI4NWE",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-09T13:45:46Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-09T13:45:46Z"
      },
      "message": "test(dataset): Add unit tests",
      "tree": {
        "sha": "b7ea0ec70896f06eab1ba201d76591f6f0929b20",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/b7ea0ec70896f06eab1ba201d76591f6f0929b20"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/d48aada557bb124f1359811e57a2cb3c1d88285a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d48aada557bb124f1359811e57a2cb3c1d88285a",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d48aada557bb124f1359811e57a2cb3c1d88285a",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d48aada557bb124f1359811e57a2cb3c1d88285a/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d318cf54e70e282df500e140ad14edd325fb612",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9d318cf54e70e282df500e140ad14edd325fb612",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/9d318cf54e70e282df500e140ad14edd325fb612"
      }
    ],
    "files": [
      {
        "sha": "d316841d1aca77398773dbb07abb7cbd5dd4e3dc",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d48aada557bb124f1359811e57a2cb3c1d88285a/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d48aada557bb124f1359811e57a2cb3c1d88285a/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=d48aada557bb124f1359811e57a2cb3c1d88285a",
        "patch": "@@ -0,0 +1,58 @@\n+import pytest\n+from flask import url_for\n+from app.modules.dataset.routes import download_dataset_format\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client(test_client):\n+    \"\"\"\n+    Extiende la fixture test_client para el m\u00f3dulo dataset.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_download_glencoe_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato Glencoe.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/glencoe\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_glencoe\", file_id=4) in response.location\n+\n+\n+def test_download_splot_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato SPLOT.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/splot\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_splot\", file_id=4) in response.location\n+\n+\n+def test_download_dimacs_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato DIMACS.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/dimacs\")\n+    assert response.status_code == 302\n+    assert url_for(\"flamapy.to_cnf\", file_id=4) in response.location\n+\n+\n+def test_download_zip_redirect(test_client):\n+    \"\"\"\n+    Testea la redirecci\u00f3n para el formato ZIP.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/zip\")\n+    assert response.status_code == 302\n+    assert url_for(\"dataset.download_dataset\", dataset_id=4) in response.location\n+\n+def test_download_invalid_format(test_client):\n+    \"\"\"\n+    Testea que se retorne un error 400 para un formato no soportado.\n+    \"\"\"\n+    response = test_client.get(\"/dataset/download/4/unsupported_format\")\n+    assert response.status_code == 400\n+    assert response.json == {\"error\": \"Formato no soportado\"}"
      }
    ]
  },
  {
    "sha": "d6e307820805348d54b8bb3fa19d938db0210958",
    "node_id": "C_kwDONDG85doAKGQ2ZTMwNzgyMDgwNTM0OGQ1NGI4YmIzZmExOWQ5MzhkYjAyMTA5NTg",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "91947377+Javiruizg@users.noreply.github.com",
        "date": "2024-12-09T00:42:42Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-09T00:42:42Z"
      },
      "message": "Merge pull request #21 from flamenquin-hub-single/feature-sync-with-github\n\nfix(dataset): change name of the token",
      "tree": {
        "sha": "d8bc8ccdf8dd20062d8e6f02b670a205eefc2e4b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/d8bc8ccdf8dd20062d8e6f02b670a205eefc2e4b"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/d6e307820805348d54b8bb3fa19d938db0210958",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnVj0CCRC1aQ7uu5UhlAAAeYQQADZfYuwiYFkVIdXrEyLndEwI\nm53va0gJri5MoKjMw9AW0u70AumokWwFaicfFEdB6KG84Jm3Ac377GZ/7V1dHSpe\n6xSrb1dWK2Ez+EDTf6XLaCQkYo1kjRAnBUPYmbN/fwjgvx/jHi8+kaj9eGkDF71a\n1/E0hXsV850qtq7KHALuHZAQzTOGJ7Ss8k0Aw5ie52XeSX1pCLsk6CTa5F9fjM5S\nvV2QSCD6ZfOdnwQDpkU0CW+4RF7BMREjnml6PqLFlaNPcBGQT66U/u+gM9vC9nzR\nwKKbRqCzIKWehny4DNhCtJ3xWC7v2HlTHK+W7T45m8vUHYBTad3s/XNnSNgq6Xyg\nQnxxEDNrck3QxfvUWgyZcfnnHbFHdf79rHlLTznwOIvd6MdM5/gCiHMlAM8l/7fp\nNRN5rj9/dd55mA3xqdjwXcxWYT7wn661p0fG4F+6bi1VwQDJkQMfep06x+IcFeyt\nRBnxrlkK3y22WWW0nohTr74ZCb3qPkmxrIqihPDptpHAWQPzJYg/kM58YZ/F1vvW\ngqkG+F039GCYp8VAFBVG+yeVEbewZw8A9LdyKkdw6D7Qn3w2YVVKHbAwo/q8QjL5\noSZvHrpD44WVhL3ieii5pNLbZqizlrd3ggmC45MQ7KRWRtZabdM+wQs77gqleNZE\nDePoyaQyl3+D0xIRY8yu\n=yo5A\n-----END PGP SIGNATURE-----\n",
        "payload": "tree d8bc8ccdf8dd20062d8e6f02b670a205eefc2e4b\nparent b6a54bf03c23da2b108598770e203f7c7a6974c3\nparent da200f12479507535e09c260aad4b26f598a7087\nauthor Javiruizg <91947377+Javiruizg@users.noreply.github.com> 1733704962 +0100\ncommitter GitHub <noreply@github.com> 1733704962 +0100\n\nMerge pull request #21 from flamenquin-hub-single/feature-sync-with-github\n\nfix(dataset): change name of the token",
        "verified_at": "2024-12-09T00:44:17Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d6e307820805348d54b8bb3fa19d938db0210958",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d6e307820805348d54b8bb3fa19d938db0210958",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d6e307820805348d54b8bb3fa19d938db0210958/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6a54bf03c23da2b108598770e203f7c7a6974c3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b6a54bf03c23da2b108598770e203f7c7a6974c3",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/b6a54bf03c23da2b108598770e203f7c7a6974c3"
      },
      {
        "sha": "da200f12479507535e09c260aad4b26f598a7087",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/da200f12479507535e09c260aad4b26f598a7087",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/da200f12479507535e09c260aad4b26f598a7087"
      }
    ],
    "files": [
      {
        "sha": "deb17a1db679f04f2787e6525e6a0ff67f98ac5f",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d6e307820805348d54b8bb3fa19d938db0210958/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d6e307820805348d54b8bb3fa19d938db0210958/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=d6e307820805348d54b8bb3fa19d938db0210958",
        "patch": "@@ -373,7 +373,7 @@ def commit(dataset_id):\n         subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n         subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n         \n-        token = os.getenv('GITHUB_PAT')\n+        token = os.getenv('GH_PAT')\n         repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n         subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n              \n@@ -426,7 +426,7 @@ def commit_file(file_id):\n         subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n \n         # Configurar URL remota con el PAT\n-        token = os.getenv('GITHUB_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n+        token = os.getenv('GH_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n         repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n         subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n "
      }
    ]
  },
  {
    "sha": "da200f12479507535e09c260aad4b26f598a7087",
    "node_id": "C_kwDONDG85doAKGRhMjAwZjEyNDc5NTA3NTM1ZTA5YzI2MGFhZDRiMjZmNTk4YTcwODc",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-08T23:58:27Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-08T23:58:27Z"
      },
      "message": "fix(dataset): change name of the token",
      "tree": {
        "sha": "d8bc8ccdf8dd20062d8e6f02b670a205eefc2e4b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/d8bc8ccdf8dd20062d8e6f02b670a205eefc2e4b"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/da200f12479507535e09c260aad4b26f598a7087",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/da200f12479507535e09c260aad4b26f598a7087",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/da200f12479507535e09c260aad4b26f598a7087",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/da200f12479507535e09c260aad4b26f598a7087/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a0e8872007e4b70b18a69a4f44100feb6e24c764"
      }
    ],
    "files": [
      {
        "sha": "deb17a1db679f04f2787e6525e6a0ff67f98ac5f",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/da200f12479507535e09c260aad4b26f598a7087/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/da200f12479507535e09c260aad4b26f598a7087/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=da200f12479507535e09c260aad4b26f598a7087",
        "patch": "@@ -373,7 +373,7 @@ def commit(dataset_id):\n         subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n         subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n         \n-        token = os.getenv('GITHUB_PAT')\n+        token = os.getenv('GH_PAT')\n         repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n         subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n              \n@@ -426,7 +426,7 @@ def commit_file(file_id):\n         subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n \n         # Configurar URL remota con el PAT\n-        token = os.getenv('GITHUB_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n+        token = os.getenv('GH_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n         repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n         subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n "
      }
    ]
  },
  {
    "sha": "b6a54bf03c23da2b108598770e203f7c7a6974c3",
    "node_id": "C_kwDONDG85doAKGI2YTU0YmYwM2MyM2RhMmIxMDg1OTg3NzBlMjAzZjdjN2E2OTc0YzM",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-12-08T18:59:56Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-08T18:59:56Z"
      },
      "message": "Merge pull request #7 from flamenquin-hub-single/feature-sync-with-github\n\nFeature sync with GitHub",
      "tree": {
        "sha": "723d4ec65d58973788bc4abdb7a98358479558cc",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/723d4ec65d58973788bc4abdb7a98358479558cc"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/b6a54bf03c23da2b108598770e203f7c7a6974c3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnVeysCRC1aQ7uu5UhlAAA4X4QAGGhPmVXG9yh+tuSPsQWPJez\no1q4MdHV6wRj19Lixl5S0FeOJevKHV7gY0zfhz5u8pMB5Z5Ab5pzBfP5LBsPNU+7\nMatHwJNrmiccauaHZjdV+bTyaz2osjqCBlFkClhxVKZxOREy3JvHPnTgC57BFClJ\nO4kwrrdnasxkO9RjHuHAm8E16SmfXIv05qrREWwXZgqLd+s2aKRrDvALUPv4uPuo\n/Nhe1QP3w/sdWwbhG8V+/MSSI51el/UnD3skawj0BirAysvJQbdNv2KCgvbYVuKT\ns+JV8Yig1a4J//kPGQrdT7jBcFjr9ko0SelfhjiOF6g+swfQ2INYrVhNgzJboQkj\nfnuC88ruV6jBZacXbY4ez/s+TxxFnegB/NHFlDRZaV7klp91UazOKbgF/uIW3/YP\niECETNlyLISkFv1BygdB/YmjPC5ZPbOyt78g+Cl483G12xxGNQH/O5zOWg8vRJtn\n8FiOxfyenf6LHgk/osJLfiAC7304BKrfriyWDT0+kpPSNzFRoE2uO7J31rmRnne+\nw2+pj59YT3RsdXqhmXW3mhTgp6dr8TuAyU161/9dqDuVmRqgm6KxnOEkFQSEauqO\nkeJM9g7O+eE5nFovdqzjIrJVrxPROkf/nr7HoIVefbFtnIYDnezAVUai5SsH3tZF\n2kY6K9o4TVXgWtBO+XWX\n=24eF\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 723d4ec65d58973788bc4abdb7a98358479558cc\nparent ba3c464f4122ed6dded6c97dc115b20a7400150a\nparent a0e8872007e4b70b18a69a4f44100feb6e24c764\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1733684396 +0100\ncommitter GitHub <noreply@github.com> 1733684396 +0100\n\nMerge pull request #7 from flamenquin-hub-single/feature-sync-with-github\n\nFeature sync with GitHub",
        "verified_at": "2024-12-08T19:01:21Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b6a54bf03c23da2b108598770e203f7c7a6974c3",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/b6a54bf03c23da2b108598770e203f7c7a6974c3",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b6a54bf03c23da2b108598770e203f7c7a6974c3/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba3c464f4122ed6dded6c97dc115b20a7400150a",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ba3c464f4122ed6dded6c97dc115b20a7400150a",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ba3c464f4122ed6dded6c97dc115b20a7400150a"
      },
      {
        "sha": "a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a0e8872007e4b70b18a69a4f44100feb6e24c764"
      }
    ],
    "files": [
      {
        "sha": "733a9d501cdd9fab530bcab9a5da80a5cfe7653c",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b6a54bf03c23da2b108598770e203f7c7a6974c3/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b6a54bf03c23da2b108598770e203f7c7a6974c3/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=b6a54bf03c23da2b108598770e203f7c7a6974c3",
        "patch": "@@ -64,6 +64,9 @@ jobs:\n       - name: Deploy to Render\n         env:\n           deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_DEVELOP }}\n+          ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+          GH_TOKEN: ${{ secrets.GH_TOKEN }}\n+          GH_PAT: ${{ secrets.GH_PAT }}\n         run: |\n           curl \"$deploy_url\"\n       \n\\ No newline at end of file"
      },
      {
        "sha": "8ad25762a0dbb9b820352c6abaf50a7e089c893d",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b6a54bf03c23da2b108598770e203f7c7a6974c3/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b6a54bf03c23da2b108598770e203f7c7a6974c3/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=b6a54bf03c23da2b108598770e203f7c7a6974c3",
        "patch": "@@ -46,5 +46,6 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n       run: |\n         pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      },
      {
        "sha": "9b6cb2b000af47b9662bacb80e90dfe99149b9d9",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 118,
        "deletions": 2,
        "changes": 120,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=b6a54bf03c23da2b108598770e203f7c7a6974c3",
        "patch": "@@ -1,15 +1,28 @@\n-from flask import render_template, redirect, url_for, request\n+import os\n+import shutil\n+import subprocess\n+from flask import Flask, jsonify, render_template, redirect, url_for, request\n from flask_login import current_user, login_user, logout_user\n-\n+import requests\n from app.modules.auth import auth_bp\n from app.modules.auth.forms import SignupForm, LoginForm\n from app.modules.auth.services import AuthenticationService\n from app.modules.profile.services import UserProfileService\n+from flask_dance.contrib.github import make_github_blueprint, github\n \n \n authentication_service = AuthenticationService()\n user_profile_service = UserProfileService()\n \n+app = Flask(__name__)\n+#app.config[\"SECRET_KEY\"] = \"SECRET KEY  \"\n+token_admin = os.getenv(\"ORG_TOKEN_ADMIN\")\n+\n+github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g',\n+                                        client_secret='00b92023ceb36020d4d0a7f34d5a583e2e386611')\n+\n+app.register_blueprint(github_blueprint, url_prefix='/github_login')\n+\n \n @auth_bp.route(\"/signup/\", methods=[\"GET\", \"POST\"])\n def show_signup_form():\n@@ -53,3 +66,106 @@ def login():\n def logout():\n     logout_user()\n     return redirect(url_for('public.index'))\n+\n+\n+@auth_bp.route('/gitlogin')\n+def github_login():\n+    \n+   if not github.authorized:\n+        return redirect(url_for('github.login'))\n+   else:\n+       account_info = github.get('/user/repos')\n+       if account_info.ok:\n+           account_info_json = account_info.json()\n+           return 'Your github account is already sync with uvlhub.'\n+\n+   return 'Request failed!'\n+\n+\n+@auth_bp.route('/invite', methods=['GET', 'POST'])\n+def invite_user():\n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return 'First sync your github account.'\n+              \n+    url = f'https://api.github.com/orgs/uvlhub/invitations'  \n+    headers = {\n+        'Authorization': f'token {token_admin}',\n+        'Accept': 'application/vnd.github.v3+json'\n+    }\n+    payload = {\n+        \"invitee_id\": None, \n+    }\n+\n+    # OBTENER EL ID DEL USUARIO DE GITHUB\n+    user_url = f'https://api.github.com/users/{username}'\n+    user_response = requests.get(user_url, headers=headers)\n+    \n+    if user_response.status_code == 200:\n+        user_id = user_response.json().get(\"id\")\n+        payload[\"invitee_id\"] = user_id  \n+        \n+    elif user_response.status_code == 404:\n+        return jsonify({\"error\": f\"Can't find the user: {username}\"}), 404\n+    else:\n+        return jsonify({\"error\": f\"Something went wrong\"}), user_response.status_code\n+        \n+    response = requests.post(url, json=payload, headers=headers)\n+\n+    if response.status_code == 201:\n+        return f\"Now {username} can join our github organization. Accept it in github. Once joined, you don't have to repeat this process.\"\n+        #return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n+    \n+    elif response.status_code == 404:\n+        return jsonify({\"error\": f\"Username {username} not found\"}), 404\n+    \n+    elif response.status_code == 422:\n+        return f'User {username} already belongs to our github organization or have a valid invitation to join. You have to find out in github.'\n+    \n+    else:\n+        return jsonify({\"error\": \"Can't send the invitation\", \"details\": response.json()}), response.status_code\n+    \n+\n+\n+@auth_bp.route('/create_repo', methods=['GET', 'POST'])\n+def crear_repo():\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return 'First sync your github account.'\n+\n+    comando = f\"gh repo create uvlhub/{username} --public\"\n+    url_repo = f\"https://github.com/uvlhub/{username}.git\"\n+    \n+    try:\n+        \n+        subprocess.run(comando, check=True, shell=True)\n+        directory = f\"/app/uvl_git/{username}\"\n+        os.makedirs(directory, exist_ok=True)\n+        subprocess.run(f\"git clone {url_repo} {directory}\",cwd=directory, check=True, shell=True)\n+        return f\"Repository '{username}' created in our github organization correctly.\"\n+    \n+    except subprocess.CalledProcessError as e:\n+        \n+        if e.returncode == 127:\n+            return '''\n+                The command 'gh' is not recognized. Please install GitHub CLI by following these steps in your command line:\n+\n+                    1. Update your package list:\n+                sudo apt update\n+                \n+                    2. Install the GitHub CLI:\n+                sudo apt install gh\n+                \n+                    3. You can verify the installation:\n+                gh --version\n+                '''\n+        \n+        return f\"Repository '{username}' is already created. Now, always you are sync with github, you can push from here your datasets or models to github.\"\n+    "
      },
      {
        "sha": "a76c25ccdf881eb721e29af34f2d893b5fb6d677",
        "filename": "app/modules/auth/services.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Fmodules%2Fauth%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Fmodules%2Fauth%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fservices.py?ref=b6a54bf03c23da2b108598770e203f7c7a6974c3",
        "patch": "@@ -9,6 +9,7 @@\n from core.configuration.configuration import uploads_folder_name\n from core.services.BaseService import BaseService\n \n+os.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'\n \n class AuthenticationService(BaseService):\n     def __init__(self):"
      },
      {
        "sha": "bea556e6faeac932fc225d0430e8bfb3d8ee2a7c",
        "filename": "app/modules/dataset/repositories.py",
        "status": "modified",
        "additions": 33,
        "deletions": 2,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=b6a54bf03c23da2b108598770e203f7c7a6974c3",
        "patch": "@@ -1,5 +1,6 @@\n from datetime import datetime, timezone\n import logging\n+import re\n from flask_login import current_user\n from typing import Optional\n \n@@ -38,7 +39,7 @@ def __init__(self):\n \n     def filter_by_doi(self, doi: str) -> Optional[DSMetaData]:\n         return self.model.query.filter_by(dataset_doi=doi).first()\n-\n+    \n \n class DSViewRecordRepository(BaseRepository):\n     def __init__(self):\n@@ -113,7 +114,37 @@ def latest_synchronized(self):\n             .limit(5)\n             .all()\n         )\n-\n+        \n+    def get_all_files_for_dataset(self, dataset_id: int):\n+        dataset = self.model.query.get(dataset_id)\n+        if not dataset:\n+            return None\n+        all_files = []\n+        for feature_model in dataset.feature_models:\n+            all_files.extend(feature_model.files)\n+        return all_files\n+    \n+    def _normalize_folder_name(self, folder_name: str) -> str:\n+   \n+        normalized_name = re.sub(r'[^\\w\\s-]', '', folder_name)\n+        normalized_name = re.sub(r'\\s+', '_', normalized_name.strip())\n+        return normalized_name\n+    \n+    def get_dataset_name(self, dataset_id: int) -> str:\n+        dataset = (\n+        self.model.query\n+        .filter_by(id=dataset_id)\n+        .first()\n+    )\n+        if dataset and dataset.ds_meta_data:\n+            title = dataset.ds_meta_data.title\n+            return self._normalize_folder_name(title)\n+        \n+        return None\n+    \n+\n+\n+    \n \n class DOIMappingRepository(BaseRepository):\n     def __init__(self):"
      },
      {
        "sha": "271763e10cae2a7b28149ceb3f1161c3dc27808a",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 102,
        "deletions": 2,
        "changes": 104,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=b6a54bf03c23da2b108598770e203f7c7a6974c3",
        "patch": "@@ -2,6 +2,7 @@\n import os\n import json\n import shutil\n+import subprocess\n import tempfile\n import uuid\n from datetime import datetime, timezone\n@@ -18,12 +19,14 @@\n     url_for,\n )\n from flask_login import login_required, current_user\n-\n+import requests\n+from app.modules.dataset.repositories import DSMetaDataRepository\n from app.modules.dataset.forms import DataSetForm\n from app.modules.dataset.models import (\n     DSDownloadRecord\n )\n from app.modules.dataset import dataset_bp\n+from app.modules.dataset.repositories import DataSetRepository\n from app.modules.dataset.services import (\n     AuthorService,\n     DSDownloadRecordService,\n@@ -32,7 +35,10 @@\n     DataSetService,\n     DOIMappingService\n )\n+from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n+from flask_dance.contrib.github import github\n+\n \n logger = logging.getLogger(__name__)\n \n@@ -344,5 +350,99 @@ def get_unsynchronized_dataset(dataset_id):\n     lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n \n     bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n-\n+   \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name)\n+\n+\n+@dataset_bp.route('/dataset/commit/<int:dataset_id>', methods=['GET','POST'])\n+def commit(dataset_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n+    else:\n+        return 'First sync your github account.'\n+    \n+    try:\n+            \n+        ruta_repositorio = f\"/app/uvl_git/{username}\"   \n+        \n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        token = os.getenv('GITHUB_PAT')\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n+             \n+        # Obtener el nombre y los archivos del dataset\n+        repository = DataSetRepository()\n+        nombre = repository.get_dataset_name(dataset_id)\n+        ruta_carpeta = os.path.join(ruta_repositorio, nombre)\n+        os.makedirs(ruta_carpeta, exist_ok=True)\n+        \n+        all_files = repository.get_all_files_for_dataset(dataset_id)\n+        \n+        # Copiar archivos y a\u00f1adirlos al commit\n+        for archivo in all_files:\n+            ruta_archivo_origen = archivo.get_path()\n+            ruta_destino_archivo = os.path.join(ruta_carpeta, os.path.basename(ruta_archivo_origen))\n+            shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+            subprocess.run(f\"git add {os.path.relpath(ruta_destino_archivo, ruta_repositorio)}\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        # Realizar el commit y el push\n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"Dataset has been pushed to GitHub correctly.\"\n+\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"This dataset is already in your github repository.\"\n+    \n+    \n+    \n+@dataset_bp.route('/dataset/commit_file/<int:file_id>', methods=['GET','POST'])\n+def commit_file(file_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n+        \n+    else:\n+        return 'First sync your github account.'\n+    \n+    try:\n+       \n+        ruta_repositorio = f\"/app/uvl_git/{username}\"\n+    \n+        # Configurar usuario de Git\n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        # Configurar URL remota con el PAT\n+        token = os.getenv('GITHUB_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        # Obtener archivo y hacer commit\n+        hubfile_repository = HubfileRepository()\n+        hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n+        ruta_archivo_origen = hubfile.get_path()\n+        ruta_destino_archivo = os.path.join(ruta_repositorio, hubfile.name)\n+        shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+\n+        subprocess.run(f\"git add {hubfile.name}\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"This model has been pushed to GitHub correctly.\"\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"This model is already in your github repository.\"\n+"
      },
      {
        "sha": "0288d47f4b1fc95f37eba68b1678b14e17762ef8",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=b6a54bf03c23da2b108598770e203f7c7a6974c3",
        "patch": "@@ -160,16 +160,23 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             {% if bibtex_dataset %}\n \n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n                 <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n                 <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                     <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n+\n+                <a href=\"{{ url_for('dataset.commit', dataset_id=dataset.id) }}\" class=\"btn btn-primary mt-3\" style=\"border-radius: 5px;\">\n+                    <i class=\"center-button-icon\"></i>\n+                    Upload dataset to github\n+                </a>\n             </div>\n             {% endif %}\n \n+            \n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n \n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n@@ -188,6 +195,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n                 </div>\n+\n                 \n             </div>\n             {% endif %}\n@@ -281,6 +289,10 @@ <h4 style=\"margin-bottom: 0px;\"><span class=\"badge bg-dark\">{{ dataset.get_files\n                             </div>\n                             <div class=\"col-12 text-end\" >\n \n+                                <a href=\"{{ url_for('dataset.commit_file', file_id=file.id) }}\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                                    <i data-feather=\"github\"></i> Upload\n+                                </a>\n+\n                                 <button onclick=\"viewFile('{{ file.id }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                                     <i data-feather=\"eye\"></i> View\n                                 </button>"
      },
      {
        "sha": "94c83d4cf76ce083619ed6dae3c0bb05e18f04f2",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=b6a54bf03c23da2b108598770e203f7c7a6974c3",
        "patch": "@@ -23,6 +23,9 @@ def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n \n     def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n         return db.session.query(DataSet).join(FeatureModel).join(Hubfile).filter(Hubfile.id == hubfile.id).first()\n+    \n+    def get_hubfile_by_id(self, hubfile_id: int) -> Hubfile:\n+        return db.session.query(Hubfile).filter(Hubfile.id == hubfile_id).first()\n \n \n class HubfileViewRecordRepository(BaseRepository):"
      },
      {
        "sha": "5b4ed79e2dafd484efcc562d526721f9cc6eceae",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b6a54bf03c23da2b108598770e203f7c7a6974c3/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=b6a54bf03c23da2b108598770e203f7c7a6974c3",
        "patch": "@@ -178,6 +178,18 @@\n \n                         {% else %}\n \n+                        <a href=\"{{ url_for('auth.github_login') }}\">\n+                            <button>Sync with Github</button>\n+                        </a> \n+\n+                        <a href=\"{{ url_for('auth.invite_user') }}\">\n+                            <button>Join our Github Organization</button>\n+                        </a> \n+\n+                        <a href=\"{{ url_for('auth.crear_repo') }}\">\n+                            <button>Create your repo in our Github Org</button>\n+                        </a> \n+\n                         <a class=\"nav-icon dropdown-toggle d-inline-block d-sm-none\" href=\"#\" data-bs-toggle=\"dropdown\">\n                             <i class=\"align-middle\" data-feather=\"user\"></i> \n                         </a>"
      },
      {
        "sha": "ed10caea787b0655f7bc8d63ef3c9386c2b45c04",
        "filename": "docker/images/Dockerfile.render",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b6a54bf03c23da2b108598770e203f7c7a6974c3/docker%2Fimages%2FDockerfile.render",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b6a54bf03c23da2b108598770e203f7c7a6974c3/docker%2Fimages%2FDockerfile.render",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.render?ref=b6a54bf03c23da2b108598770e203f7c7a6974c3",
        "patch": "@@ -46,6 +46,19 @@ RUN pip install --no-cache-dir --upgrade pip\n # Install any needed packages specified in requirements.txt\n RUN pip install -r requirements.txt\n \n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+    curl \\\n+    git \\\n+    sudo \\\n+    && curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \\\n+    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \\\n+    && echo \"deb [signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \\\n+    && apt-get update && apt-get install -y gh \\\n+    && apt-get clean && rm -rf /var/lib/apt/lists/*\n+\n+RUN apt-get update && apt-get install -y git\n+\n+\n # Expose port 80\n EXPOSE 80\n "
      },
      {
        "sha": "341be806fa39e544b166ce43d7a1f837351886eb",
        "filename": "requirements.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b6a54bf03c23da2b108598770e203f7c7a6974c3/requirements.txt",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b6a54bf03c23da2b108598770e203f7c7a6974c3/requirements.txt",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/requirements.txt?ref=b6a54bf03c23da2b108598770e203f7c7a6974c3",
        "patch": "@@ -19,6 +19,7 @@ dd==0.6.0\n dnspython==2.6.1\n docker==7.1.0\n email_validator==2.2.0\n+Flask-Dance==7.1.0\n Faker==26.0.0\n flake8==7.1.0\n flamapy==2.0.0.dev1"
      }
    ]
  },
  {
    "sha": "a0e8872007e4b70b18a69a4f44100feb6e24c764",
    "node_id": "C_kwDONDG85doAKGEwZTg4NzIwMDdlNGI3MGIxOGE2OWE0ZjQ0MTAwZmViNmUyNGM3NjQ",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-08T18:54:08Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-08T18:54:08Z"
      },
      "message": "fix(workflow): github secrets added to render workflow",
      "tree": {
        "sha": "723d4ec65d58973788bc4abdb7a98358479558cc",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/723d4ec65d58973788bc4abdb7a98358479558cc"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/a0e8872007e4b70b18a69a4f44100feb6e24c764",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a0e8872007e4b70b18a69a4f44100feb6e24c764",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a0e8872007e4b70b18a69a4f44100feb6e24c764",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a0e8872007e4b70b18a69a4f44100feb6e24c764/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2b3638cf4d3f20f515a07a3e13b13535ad7ce079",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/2b3638cf4d3f20f515a07a3e13b13535ad7ce079",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/2b3638cf4d3f20f515a07a3e13b13535ad7ce079"
      }
    ],
    "files": [
      {
        "sha": "733a9d501cdd9fab530bcab9a5da80a5cfe7653c",
        "filename": ".github/workflows/render.yml",
        "status": "renamed",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a0e8872007e4b70b18a69a4f44100feb6e24c764/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a0e8872007e4b70b18a69a4f44100feb6e24c764/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=a0e8872007e4b70b18a69a4f44100feb6e24c764",
        "patch": "@@ -65,6 +65,8 @@ jobs:\n         env:\n           deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_DEVELOP }}\n           ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n+          GH_TOKEN: ${{ secrets.GH_TOKEN }}\n+          GH_PAT: ${{ secrets.GH_PAT }}\n         run: |\n           curl \"$deploy_url\"\n       \n\\ No newline at end of file",
        "previous_filename": "render.yaml"
      }
    ]
  },
  {
    "sha": "eca40c55adcd94430cd9f965bead5c94c621f281",
    "node_id": "C_kwDONDG85doAKGVjYTQwYzU1YWRjZDk0NDMwY2Q5Zjk2NWJlYWQ1Yzk0YzYyMWYyODE",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-07T22:20:35Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-12-07T22:20:35Z"
      },
      "message": "feat(dataset): added parser to codebase",
      "tree": {
        "sha": "a38fff10ff23c7461f0cfacb10fd31ceeee9ac17",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a38fff10ff23c7461f0cfacb10fd31ceeee9ac17"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/eca40c55adcd94430cd9f965bead5c94c621f281",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/eca40c55adcd94430cd9f965bead5c94c621f281",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/eca40c55adcd94430cd9f965bead5c94c621f281",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/eca40c55adcd94430cd9f965bead5c94c621f281/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4"
      }
    ],
    "files": [
      {
        "sha": "ab7b36c091b4b9d8a40d0c536c8c0cf5e7c636dd",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/eca40c55adcd94430cd9f965bead5c94c621f281/.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/eca40c55adcd94430cd9f965bead5c94c621f281/.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitignore?ref=eca40c55adcd94430cd9f965bead5c94c621f281",
        "patch": "@@ -16,4 +16,5 @@ nginx.prod.ssl.conf\n .version\n entrypoint.sh\n deployments.log\n-test_file.txt\n\\ No newline at end of file\n+test_file.txt\n+egc/"
      },
      {
        "sha": "0b7d1cc88c4b7e7859e7dab081dcdaa0c8395a97",
        "filename": "app/modules/dataset/UVLCustomLexer.py",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/eca40c55adcd94430cd9f965bead5c94c621f281/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/eca40c55adcd94430cd9f965bead5c94c621f281/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2FUVLCustomLexer.py?ref=eca40c55adcd94430cd9f965bead5c94c621f281",
        "patch": "@@ -0,0 +1,97 @@\n+import re\n+from .UVLPythonLexer import UVLPythonLexer\n+\n+from .UVLPythonParser import UVLPythonParser\n+from antlr4.Token import Token\n+from antlr4.Token import CommonToken\n+\n+class UVLCustomLexer(UVLPythonLexer):\n+   \n+    def __init__(self, input_stream):\n+        super().__init__(input_stream)\n+        self.tokens = []\n+        self.indents = []\n+        self.opened = 0\n+        self.lastToken = None\n+        \n+    def emitToken(self, t):\n+        super().emitToken(t)\n+        self.tokens.append(t)  \n+\n+    def nextToken(self):\n+        # Check if the end-of-file is ahead and there are still some DEDENTS expected.\n+        if self._input.LA(1) == Token.EOF and len(self.indents) != 0:\n+            # Remove any trailing EOF tokens from our buffer.\n+            while len(self.tokens) > 0 and self.tokens[-1].type == Token.EOF:\n+                del self.tokens[-1]\n+\n+            # First emit an extra line break that serves as the end of the statement.\n+            self.emitToken(self.common_token(UVLPythonLexer.NEWLINE, \"\\n\"));\n+\n+\n+            # Now emit as much DEDENT tokens as needed.\n+            while len(self.indents) != 0:\n+                self.emitToken(self.create_dedent())\n+                del self.indents[-1]              \n+            # Put the EOF back on the token stream.\n+            self.emitToken(self.common_token(Token.EOF, \"<EOF>\"));\n+\n+        next_token = super().nextToken()\n+\n+        if next_token.channel == Token.DEFAULT_CHANNEL:\n+            # Keep track of the last token on the default channel.\n+            self.lastToken = next_token\n+\n+        return self.tokens.pop(0) if len(self.tokens) > 0 else next_token\n+\n+    def create_dedent(self):\n+        dedent = self.common_token(self.DEDENT, \"\")\n+        dedent.line = self.lastToken.line\n+        return dedent\n+\n+    def common_token(self, type, text):\n+        stop = self.getCharIndex() - 1\n+        start = stop - len(text) + 1 if text else stop\n+        return CommonToken(self._tokenFactorySourcePair, type, Token.DEFAULT_CHANNEL, start, stop)\n+\n+    @staticmethod\n+    def getIndentationCount(spaces):\n+        count = 0\n+        for ch in spaces:\n+            if ch == '\\t':\n+                count += 8 - (count % 8)\n+            else:  # A normal space char.\n+                count += 1\n+        return count\n+    \n+    def skipToken(self):\n+        self.skip()\n+\n+    def atStartOfInput(self):\n+        return self._interp.column == 0 and self._interp.line == 1\n+    \n+    def handleNewline(self):\n+      new_line = re.sub(r\"[^\\r\\n\\f]+\", \"\", self._interp.getText(self._input)) #.replaceAll(\"[^\\r\\n\\f]+\", \"\")\n+      spaces = re.sub(r\"[\\r\\n\\f]+\", \"\", self._interp.getText(self._input)) #.replaceAll(\"[\\r\\n\\f]+\", \"\")\n+      next = self._input.LA(1)\n+\n+      if self.opened > 0 or next == '\\r' or next == '\\n' or next == '\\f' or next == '#':\n+        self.skip()\n+      else:\n+        self.emitToken(self.common_token(self.NEWLINE, new_line))\n+\n+        indent = self.getIndentationCount(spaces)\n+        if len(self.indents) == 0:\n+            previous = 0\n+        else:\n+            previous = self.indents[-1]\n+\n+        if indent == previous:\n+            self.skip()\n+        elif indent > previous:\n+            self.indents.append(indent)\n+            self.emitToken(self.common_token(UVLPythonParser.INDENT, spaces))\n+        else:\n+            while len(self.indents) > 0 and self.indents[-1] > indent:\n+                self.emitToken(self.create_dedent())\n+                del self.indents[-1]\n\\ No newline at end of file"
      },
      {
        "sha": "03c2e1a6418ec2dc70695cdfa30b36d1d71ebff5",
        "filename": "app/modules/dataset/parser.py",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/eca40c55adcd94430cd9f965bead5c94c621f281/app%2Fmodules%2Fdataset%2Fparser.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/eca40c55adcd94430cd9f965bead5c94c621f281/app%2Fmodules%2Fdataset%2Fparser.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fparser.py?ref=eca40c55adcd94430cd9f965bead5c94c621f281",
        "patch": "@@ -0,0 +1,62 @@\n+from antlr4 import CommonTokenStream, FileStream\n+from uvl.UVLCustomLexer import UVLCustomLexer\n+from uvl.UVLPythonParser import UVLPythonParser\n+from antlr4.error.ErrorListener import ErrorListener\n+\n+class CustomErrorListener(ErrorListener):\n+    def syntaxError(self, recognizer, offendingSymbol, line, column, msg, e):\n+        # If the error message contains a specific keyword related to tabulation, ignore it\n+        if \"\\\\t\" in msg:\n+            print(f\"The UVL has the following warning that prevents reading it :Line {line}:{column} - {msg}\")\n+            return\n+        else:\n+            # Otherwise, print the error (or handle it in another way)\n+            raise Exception(f\"The UVL has the following error that prevents reading it :Line {line}:{column} - {msg}\")\n+            \n+\n+def get_tree(argv):\n+    input_stream = FileStream(argv)\n+    lexer = UVLCustomLexer(input_stream)\n+    \n+    # Attach the custom error listener to the lexer\n+    lexer.removeErrorListeners()\n+    lexer.addErrorListener(CustomErrorListener())\n+\n+    stream = CommonTokenStream(lexer)\n+    parser = UVLPythonParser(stream)\n+    \n+    # Attach the custom error listener to the parser\n+    parser.removeErrorListeners()\n+    parser.addErrorListener(CustomErrorListener())\n+\n+    tree = parser.featureModel()\n+\n+    return tree\n+\n+\n+if __name__ == \"__main__\":\n+    import sys\n+\n+    # Check if the user provided a file argument\n+    if len(sys.argv) < 2:\n+        print(\"Usage: python script_name.py <path_to_uvl_file>\")\n+        sys.exit(1)\n+\n+    # Parse the provided file\n+    input_stream = FileStream(sys.argv[1])\n+    lexer = UVLCustomLexer(input_stream)\n+    \n+    # Attach the custom error listener to the lexer\n+    lexer.removeErrorListeners()\n+    lexer.addErrorListener(CustomErrorListener())\n+\n+    stream = CommonTokenStream(lexer)\n+    parser = UVLPythonParser(stream)\n+    \n+    # Attach the custom error listener to the parser\n+    parser.removeErrorListeners()\n+    parser.addErrorListener(CustomErrorListener())\n+\n+    tree = parser.featureModel()\n+    # Print the parse tree (optional)\n+    print(tree.toStringTree(recog=parser))"
      },
      {
        "sha": "e6c1ad5cdec8be377ae823311e5112d71d295d58",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 13,
        "deletions": 6,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/eca40c55adcd94430cd9f965bead5c94c621f281/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/eca40c55adcd94430cd9f965bead5c94c621f281/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=eca40c55adcd94430cd9f965bead5c94c621f281",
        "patch": "@@ -18,7 +18,6 @@\n     url_for,\n )\n from flask_login import login_required, current_user\n-\n from app.modules.dataset.forms import DataSetForm\n from app.modules.dataset.models import (\n     DSDownloadRecord\n@@ -33,7 +32,7 @@\n     DOIMappingService\n )\n from app.modules.zenodo.services import ZenodoService\n-\n+from app.modules.dataset.parser import get_tree\n logger = logging.getLogger(__name__)\n \n \n@@ -129,12 +128,20 @@ def check_dataset():\n         \n         filename = os.listdir(temp_folder)[0]\n         file_path = os.path.join(temp_folder, filename)\n-        \n+        message = None\n+        try:\n+            get_tree(file_path)\n+        except Exception as e:\n+            message = e\n+\n         with open(file_path) as f:\n-            indent = 0\n             x = \"\".join([i for i in f])\n-            print(x)\n-        return jsonify({\"message\": x}),200\n+        context = {\"message\":x}\n+        if message:\n+            context[\"error\"] = message\n+        else:\n+            context[\"error\"] = \"None\"\n+        return jsonify(context),200\n    \n     # setting things up for the checker to have only one file available\n     temp_folder = current_user.temp_folder()"
      }
    ]
  },
  {
    "sha": "2b3638cf4d3f20f515a07a3e13b13535ad7ce079",
    "node_id": "C_kwDONDG85doAKDJiMzYzOGNmNGQzZjIwZjUxNWEwN2EzZTEzYjEzNTM1YWQ3Y2UwNzk",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-06T19:07:10Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-06T19:07:10Z"
      },
      "message": "fix(dataset): better button message",
      "tree": {
        "sha": "a5a3a88c5d3919c2a941f232a9d32fa9fe1e00c0",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a5a3a88c5d3919c2a941f232a9d32fa9fe1e00c0"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/2b3638cf4d3f20f515a07a3e13b13535ad7ce079",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/2b3638cf4d3f20f515a07a3e13b13535ad7ce079",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/2b3638cf4d3f20f515a07a3e13b13535ad7ce079",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/2b3638cf4d3f20f515a07a3e13b13535ad7ce079/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4c68d83663af36574cf3ea1179c185a037baf7bc",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4c68d83663af36574cf3ea1179c185a037baf7bc",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/4c68d83663af36574cf3ea1179c185a037baf7bc"
      }
    ],
    "files": [
      {
        "sha": "0288d47f4b1fc95f37eba68b1678b14e17762ef8",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/2b3638cf4d3f20f515a07a3e13b13535ad7ce079/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/2b3638cf4d3f20f515a07a3e13b13535ad7ce079/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=2b3638cf4d3f20f515a07a3e13b13535ad7ce079",
        "patch": "@@ -168,7 +168,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n                 <a href=\"{{ url_for('dataset.commit', dataset_id=dataset.id) }}\" class=\"btn btn-primary mt-3\" style=\"border-radius: 5px;\">\n                     <i class=\"center-button-icon\"></i>\n-                    Upload all models to github\n+                    Upload dataset to github\n                 </a>\n             </div>\n             {% endif %}"
      }
    ]
  },
  {
    "sha": "4c68d83663af36574cf3ea1179c185a037baf7bc",
    "node_id": "C_kwDONDG85doAKDRjNjhkODM2NjNhZjM2NTc0Y2YzZWExMTc5YzE4NWEwMzdiYWY3YmM",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-06T18:56:13Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-06T18:56:13Z"
      },
      "message": "fix(dataset): show upload all models button fixed",
      "tree": {
        "sha": "8bfb53d62fe90ef6e325faf95b3f03749aca4fd3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/8bfb53d62fe90ef6e325faf95b3f03749aca4fd3"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/4c68d83663af36574cf3ea1179c185a037baf7bc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4c68d83663af36574cf3ea1179c185a037baf7bc",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/4c68d83663af36574cf3ea1179c185a037baf7bc",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4c68d83663af36574cf3ea1179c185a037baf7bc/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6030d66b9943c0c8bb4910820f72d30f8e33f30",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e6030d66b9943c0c8bb4910820f72d30f8e33f30",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e6030d66b9943c0c8bb4910820f72d30f8e33f30"
      }
    ],
    "files": [
      {
        "sha": "4a82a831e378525637fb8fc82d23a9815eb404e7",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/4c68d83663af36574cf3ea1179c185a037baf7bc/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/4c68d83663af36574cf3ea1179c185a037baf7bc/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=4c68d83663af36574cf3ea1179c185a037baf7bc",
        "patch": "@@ -160,14 +160,21 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             {% if bibtex_dataset %}\n \n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n                 <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n                 <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                     <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n+\n+                <a href=\"{{ url_for('dataset.commit', dataset_id=dataset.id) }}\" class=\"btn btn-primary mt-3\" style=\"border-radius: 5px;\">\n+                    <i class=\"center-button-icon\"></i>\n+                    Upload all models to github\n+                </a>\n             </div>\n             {% endif %}\n \n+            \n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n             <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n \n@@ -189,11 +196,6 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                     {{ dataset.get_uvlhub_doi() }}\n                 </div>\n \n-                <a href=\"{{ url_for('dataset.commit', dataset_id=dataset.id) }}\" class=\"btn btn-primary mt-3\" style=\"border-radius: 5px;\">\n-                    <i class=\"center-button-icon\"></i>\n-                    Upload all models to github\n-                </a>\n-\n                 \n             </div>\n             {% endif %}"
      }
    ]
  },
  {
    "sha": "e6030d66b9943c0c8bb4910820f72d30f8e33f30",
    "node_id": "C_kwDONDG85doAKGU2MDMwZDY2Yjk5NDNjMGM4YmI0OTEwODIwZjcyZDMwZjhlMzNmMzA",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-05T17:24:36Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-05T17:24:36Z"
      },
      "message": "fix(dataset): fixing commit_dataset now, commit_file now is functional",
      "tree": {
        "sha": "56bc64394a31c8e4a805b41a1e90825c148c9bd4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/56bc64394a31c8e4a805b41a1e90825c148c9bd4"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/e6030d66b9943c0c8bb4910820f72d30f8e33f30",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e6030d66b9943c0c8bb4910820f72d30f8e33f30",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e6030d66b9943c0c8bb4910820f72d30f8e33f30",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e6030d66b9943c0c8bb4910820f72d30f8e33f30/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "848ffcd220337a735656551d82ad5d8e645f20f9",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/848ffcd220337a735656551d82ad5d8e645f20f9",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/848ffcd220337a735656551d82ad5d8e645f20f9"
      }
    ],
    "files": [
      {
        "sha": "271763e10cae2a7b28149ceb3f1161c3dc27808a",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 18,
        "deletions": 7,
        "changes": 25,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e6030d66b9943c0c8bb4910820f72d30f8e33f30/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e6030d66b9943c0c8bb4910820f72d30f8e33f30/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=e6030d66b9943c0c8bb4910820f72d30f8e33f30",
        "patch": "@@ -361,32 +361,43 @@ def commit(dataset_id):\n     \n     if account_info.ok:\n         username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n     else:\n         return 'First sync your github account.'\n     \n     try:\n             \n         ruta_repositorio = f\"/app/uvl_git/{username}\"   \n+        \n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        token = os.getenv('GITHUB_PAT')\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n              \n+        # Obtener el nombre y los archivos del dataset\n         repository = DataSetRepository()\n         nombre = repository.get_dataset_name(dataset_id)\n         ruta_carpeta = os.path.join(ruta_repositorio, nombre)\n         os.makedirs(ruta_carpeta, exist_ok=True)\n         \n         all_files = repository.get_all_files_for_dataset(dataset_id)\n         \n+        # Copiar archivos y a\u00f1adirlos al commit\n         for archivo in all_files:\n-            \n-            #ruta_archivo_origen = f\"/home/javier/uvlhub/app/modules/dataset/uvl_examples/{archivo.name}\"\n             ruta_archivo_origen = archivo.get_path()\n             ruta_destino_archivo = os.path.join(ruta_carpeta, os.path.basename(ruta_archivo_origen))\n             shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n-            subprocess.run(f\"git add {ruta_carpeta}/{archivo.name}\",cwd=ruta_repositorio, check=True, shell=True)\n-            \n-        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"',cwd=ruta_repositorio, check=True, shell=True)\n-        subprocess.run(\"git push origin main\",cwd=ruta_repositorio, check=True, shell=True)\n+            subprocess.run(f\"git add {os.path.relpath(ruta_destino_archivo, ruta_repositorio)}\", cwd=ruta_repositorio, check=True, shell=True)\n+        \n+        # Realizar el commit y el push\n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"Dataset has been pushed to GitHub correctly.\"\n \n-        return \"Dataset have been pushed to github correctly.\"\n \n     except subprocess.CalledProcessError as e:\n         return f\"This dataset is already in your github repository.\""
      }
    ]
  },
  {
    "sha": "848ffcd220337a735656551d82ad5d8e645f20f9",
    "node_id": "C_kwDONDG85doAKDg0OGZmY2QyMjAzMzdhNzM1NjU2NTUxZDgyYWQ1ZDhlNjQ1ZjIwZjk",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-05T16:58:01Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-05T16:58:01Z"
      },
      "message": "fix(dataset): more fixes",
      "tree": {
        "sha": "f4a3526e025a5ce28ee7435bbe96568cb4a5986c",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/f4a3526e025a5ce28ee7435bbe96568cb4a5986c"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/848ffcd220337a735656551d82ad5d8e645f20f9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/848ffcd220337a735656551d82ad5d8e645f20f9",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/848ffcd220337a735656551d82ad5d8e645f20f9",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/848ffcd220337a735656551d82ad5d8e645f20f9/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "671bfcc80feb98899e908f46a3127f463dc609b5",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/671bfcc80feb98899e908f46a3127f463dc609b5",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/671bfcc80feb98899e908f46a3127f463dc609b5"
      }
    ],
    "files": [
      {
        "sha": "8daaf102859e18db7fa0d8656e35462231ae9aed",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 15,
        "deletions": 9,
        "changes": 24,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/848ffcd220337a735656551d82ad5d8e645f20f9/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/848ffcd220337a735656551d82ad5d8e645f20f9/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=848ffcd220337a735656551d82ad5d8e645f20f9",
        "patch": "@@ -409,22 +409,28 @@ def commit_file(file_id):\n     try:\n        \n         ruta_repositorio = f\"/app/uvl_git/{username}\"\n- \n-        subprocess.run(f\"git config user.name {name}\", cwd=ruta_repositorio, check=True, shell=True)\n-        subprocess.run(f\"git config user.email {email}\", cwd=ruta_repositorio, check=True, shell=True)\n+    \n+        # Configurar usuario de Git\n+        subprocess.run(f\"git config user.name '{name}'\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email '{email}'\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        # Configurar URL remota con el PAT\n+        token = os.getenv('GITHUB_PAT')  # Aseg\u00farate de configurar esta variable en tu entorno de despliegue\n+        repo_url = f\"https://{token}@github.com/uvlhub/{username}.git\"\n+        subprocess.run(f\"git remote set-url origin {repo_url}\", cwd=ruta_repositorio, check=True, shell=True)\n \n+        # Obtener archivo y hacer commit\n         hubfile_repository = HubfileRepository()\n         hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n         ruta_archivo_origen = hubfile.get_path()\n-        #ruta_archivo_origen = f\"/home/javier/uvlhub/app/modules/dataset/uvl_examples/{hubfile.name}\"\n         ruta_destino_archivo = os.path.join(ruta_repositorio, hubfile.name)\n         shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n-        subprocess.run(f\"git add {ruta_repositorio}/{hubfile.name}\",cwd=ruta_repositorio, check=True, shell=True)\n-            \n-        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"',cwd=ruta_repositorio, check=True, shell=True)\n-        subprocess.run(\"git push origin main\",cwd=ruta_repositorio, check=True, shell=True)\n \n-        return \"This model have been pushed to github correctly.\"\n+        subprocess.run(f\"git add {hubfile.name}\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"', cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\", cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"This model has been pushed to GitHub correctly.\"\n \n     except subprocess.CalledProcessError as e:\n         return f\"This model is already in your github repository.\""
      }
    ]
  },
  {
    "sha": "671bfcc80feb98899e908f46a3127f463dc609b5",
    "node_id": "C_kwDONDG85doAKDY3MWJmY2M4MGZlYjk4ODk5ZTkwOGY0NmEzMTI3ZjQ2M2RjNjA5YjU",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-05T16:23:57Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-05T16:23:57Z"
      },
      "message": "fix(dataset): some fixes added",
      "tree": {
        "sha": "1383d8c0a0ba83d7683cc64246844d654745b5b6",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/1383d8c0a0ba83d7683cc64246844d654745b5b6"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/671bfcc80feb98899e908f46a3127f463dc609b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/671bfcc80feb98899e908f46a3127f463dc609b5",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/671bfcc80feb98899e908f46a3127f463dc609b5",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/671bfcc80feb98899e908f46a3127f463dc609b5/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d29f5e203fcbcca7d756bdc32bf0570ec9c8b195",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d29f5e203fcbcca7d756bdc32bf0570ec9c8b195",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d29f5e203fcbcca7d756bdc32bf0570ec9c8b195"
      }
    ],
    "files": [
      {
        "sha": "35bb6fda1f0909af2771a9f1885c8eaf8fccc2bb",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/671bfcc80feb98899e908f46a3127f463dc609b5/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/671bfcc80feb98899e908f46a3127f463dc609b5/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=671bfcc80feb98899e908f46a3127f463dc609b5",
        "patch": "@@ -400,13 +400,19 @@ def commit_file(file_id):\n     \n     if account_info.ok:\n         username = account_info.json()['login']\n+        name = account_info.json().get('name') or \"Unknown Name\"\n+        email = account_info.json().get('email') or \"unknown@example.com\"\n+        \n     else:\n         return 'First sync your github account.'\n     \n     try:\n        \n         ruta_repositorio = f\"/app/uvl_git/{username}\"\n  \n+        subprocess.run(f\"git config user.name {name}\", cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(f\"git config user.email {email}\", cwd=ruta_repositorio, check=True, shell=True)\n+\n         hubfile_repository = HubfileRepository()\n         hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n         ruta_archivo_origen = hubfile.get_path()"
      }
    ]
  },
  {
    "sha": "d29f5e203fcbcca7d756bdc32bf0570ec9c8b195",
    "node_id": "C_kwDONDG85doAKGQyOWY1ZTIwM2ZjYmNjYTdkNzU2YmRjMzJiZjA1NzBlYzljOGIxOTU",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-05T12:40:46Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-05T12:40:46Z"
      },
      "message": "fix(auth, dataset, docker): fixes for the deploy",
      "tree": {
        "sha": "c8034236671f3596b6426fab6ce7dfaa2e2bbe12",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/c8034236671f3596b6426fab6ce7dfaa2e2bbe12"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/d29f5e203fcbcca7d756bdc32bf0570ec9c8b195",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d29f5e203fcbcca7d756bdc32bf0570ec9c8b195",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d29f5e203fcbcca7d756bdc32bf0570ec9c8b195",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d29f5e203fcbcca7d756bdc32bf0570ec9c8b195/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e7a2ee8396003295a4dfe4dcf49f8a647a41310",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9e7a2ee8396003295a4dfe4dcf49f8a647a41310",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/9e7a2ee8396003295a4dfe4dcf49f8a647a41310"
      }
    ],
    "files": [
      {
        "sha": "9b6cb2b000af47b9662bacb80e90dfe99149b9d9",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d29f5e203fcbcca7d756bdc32bf0570ec9c8b195/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d29f5e203fcbcca7d756bdc32bf0570ec9c8b195/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=d29f5e203fcbcca7d756bdc32bf0570ec9c8b195",
        "patch": "@@ -146,7 +146,7 @@ def crear_repo():\n     try:\n         \n         subprocess.run(comando, check=True, shell=True)\n-        directory = f\"/home/{os.getenv('USER')}/uvl_git/{username}\"\n+        directory = f\"/app/uvl_git/{username}\"\n         os.makedirs(directory, exist_ok=True)\n         subprocess.run(f\"git clone {url_repo} {directory}\",cwd=directory, check=True, shell=True)\n         return f\"Repository '{username}' created in our github organization correctly.\""
      },
      {
        "sha": "229faeed8b680c626b777e7f43427235586cb17b",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d29f5e203fcbcca7d756bdc32bf0570ec9c8b195/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d29f5e203fcbcca7d756bdc32bf0570ec9c8b195/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=d29f5e203fcbcca7d756bdc32bf0570ec9c8b195",
        "patch": "@@ -366,8 +366,8 @@ def commit(dataset_id):\n     \n     try:\n             \n-        ruta_repositorio = f\"/home/{os.getenv('USER')}/uvl_git/{username}\"\n-        \n+        ruta_repositorio = f\"/app/uvl_git/{username}\"   \n+             \n         repository = DataSetRepository()\n         nombre = repository.get_dataset_name(dataset_id)\n         ruta_carpeta = os.path.join(ruta_repositorio, nombre)\n@@ -405,7 +405,7 @@ def commit_file(file_id):\n     \n     try:\n        \n-        ruta_repositorio = f\"/home/{os.getenv('USER')}/uvl_git/{username}\"\n+        ruta_repositorio = f\"/app/uvl_git/{username}\"\n  \n         hubfile_repository = HubfileRepository()\n         hubfile = hubfile_repository.get_hubfile_by_id(file_id)"
      },
      {
        "sha": "ed10caea787b0655f7bc8d63ef3c9386c2b45c04",
        "filename": "docker/images/Dockerfile.render",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d29f5e203fcbcca7d756bdc32bf0570ec9c8b195/docker%2Fimages%2FDockerfile.render",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d29f5e203fcbcca7d756bdc32bf0570ec9c8b195/docker%2Fimages%2FDockerfile.render",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.render?ref=d29f5e203fcbcca7d756bdc32bf0570ec9c8b195",
        "patch": "@@ -56,6 +56,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n     && apt-get update && apt-get install -y gh \\\n     && apt-get clean && rm -rf /var/lib/apt/lists/*\n \n+RUN apt-get update && apt-get install -y git\n+\n+\n # Expose port 80\n EXPOSE 80\n "
      }
    ]
  },
  {
    "sha": "9e7a2ee8396003295a4dfe4dcf49f8a647a41310",
    "node_id": "C_kwDONDG85doAKDllN2EyZWU4Mzk2MDAzMjk1YTRkZmU0ZGNmNDlmOGE2NDdhNDEzMTA",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-05T12:22:02Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-05T12:22:02Z"
      },
      "message": "feat(docker): gh installation added",
      "tree": {
        "sha": "9929eea01606d586f087d5231fd51e3f7322cb03",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/9929eea01606d586f087d5231fd51e3f7322cb03"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/9e7a2ee8396003295a4dfe4dcf49f8a647a41310",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9e7a2ee8396003295a4dfe4dcf49f8a647a41310",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/9e7a2ee8396003295a4dfe4dcf49f8a647a41310",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9e7a2ee8396003295a4dfe4dcf49f8a647a41310/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d11992e07fae09c47bc3e17ea1917393c8a9a731",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d11992e07fae09c47bc3e17ea1917393c8a9a731",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d11992e07fae09c47bc3e17ea1917393c8a9a731"
      }
    ],
    "files": [
      {
        "sha": "92fae3883874946ce6476c5b9a42fe0d5122838f",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9e7a2ee8396003295a4dfe4dcf49f8a647a41310/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9e7a2ee8396003295a4dfe4dcf49f8a647a41310/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=9e7a2ee8396003295a4dfe4dcf49f8a647a41310",
        "patch": "@@ -72,7 +72,7 @@ def logout():\n def github_login():\n     \n    if not github.authorized:\n-       return redirect(url_for('github.login'))\n+        return redirect(url_for('github.login'))\n    else:\n        account_info = github.get('/user/repos')\n        if account_info.ok:"
      },
      {
        "sha": "863b417a97e12935831e912aedf9f2c1063ecd69",
        "filename": "docker/images/Dockerfile.render",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9e7a2ee8396003295a4dfe4dcf49f8a647a41310/docker%2Fimages%2FDockerfile.render",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9e7a2ee8396003295a4dfe4dcf49f8a647a41310/docker%2Fimages%2FDockerfile.render",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.render?ref=9e7a2ee8396003295a4dfe4dcf49f8a647a41310",
        "patch": "@@ -46,6 +46,16 @@ RUN pip install --no-cache-dir --upgrade pip\n # Install any needed packages specified in requirements.txt\n RUN pip install -r requirements.txt\n \n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+    curl \\\n+    git \\\n+    sudo \\\n+    && curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \\\n+    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \\\n+    && echo \"deb [signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \\\n+    && apt-get update && apt-get install -y gh \\\n+    && apt-get clean && rm -rf /var/lib/apt/lists/*\n+\n # Expose port 80\n EXPOSE 80\n "
      }
    ]
  },
  {
    "sha": "d11992e07fae09c47bc3e17ea1917393c8a9a731",
    "node_id": "C_kwDONDG85doAKGQxMTk5MmUwN2ZhZTA5YzQ3YmMzZTE3ZWExOTE3MzkzYzhhOWE3MzE",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-04T19:19:43Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-04T19:19:43Z"
      },
      "message": "fix(workflow): render.yaml moved into the root",
      "tree": {
        "sha": "e819384b1b1fb3699e5c919f259b40d2e4d00b66",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/e819384b1b1fb3699e5c919f259b40d2e4d00b66"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/d11992e07fae09c47bc3e17ea1917393c8a9a731",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d11992e07fae09c47bc3e17ea1917393c8a9a731",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d11992e07fae09c47bc3e17ea1917393c8a9a731",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d11992e07fae09c47bc3e17ea1917393c8a9a731/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "25ea06ed86d3685bbf2b13314a77f5f9b19630d8",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/25ea06ed86d3685bbf2b13314a77f5f9b19630d8",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/25ea06ed86d3685bbf2b13314a77f5f9b19630d8"
      }
    ],
    "files": [
      {
        "sha": "5108bb67a014088a4fe2232b80864b66166591b7",
        "filename": "render.yaml",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d11992e07fae09c47bc3e17ea1917393c8a9a731/render.yaml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d11992e07fae09c47bc3e17ea1917393c8a9a731/render.yaml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/render.yaml?ref=d11992e07fae09c47bc3e17ea1917393c8a9a731",
        "previous_filename": ".github/workflows/render.yaml"
      }
    ]
  },
  {
    "sha": "25ea06ed86d3685bbf2b13314a77f5f9b19630d8",
    "node_id": "C_kwDONDG85doAKDI1ZWEwNmVkODZkMzY4NWJiZjJiMTMzMTRhNzdmNWY5YjE5NjMwZDg",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-04T19:13:27Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-04T19:13:27Z"
      },
      "message": "fix(workflow): Rename render.yml into render.yaml",
      "tree": {
        "sha": "05f75e68805cc08164d4b239df61df6b4e37790e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/05f75e68805cc08164d4b239df61df6b4e37790e"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/25ea06ed86d3685bbf2b13314a77f5f9b19630d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/25ea06ed86d3685bbf2b13314a77f5f9b19630d8",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/25ea06ed86d3685bbf2b13314a77f5f9b19630d8",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/25ea06ed86d3685bbf2b13314a77f5f9b19630d8/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "805415439bb28852fa0cf4bffad98d6af7a7c998",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/805415439bb28852fa0cf4bffad98d6af7a7c998",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/805415439bb28852fa0cf4bffad98d6af7a7c998"
      }
    ],
    "files": [
      {
        "sha": "5108bb67a014088a4fe2232b80864b66166591b7",
        "filename": ".github/workflows/render.yaml",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/25ea06ed86d3685bbf2b13314a77f5f9b19630d8/.github%2Fworkflows%2Frender.yaml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/25ea06ed86d3685bbf2b13314a77f5f9b19630d8/.github%2Fworkflows%2Frender.yaml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yaml?ref=25ea06ed86d3685bbf2b13314a77f5f9b19630d8",
        "previous_filename": ".github/workflows/render.yml"
      }
    ]
  },
  {
    "sha": "9d318cf54e70e282df500e140ad14edd325fb612",
    "node_id": "C_kwDONDG85doAKDlkMzE4Y2Y1NGU3MGUyODJkZjUwMGUxNDBhZDE0ZWRkMzI1ZmI2MTI",
    "commit": {
      "author": {
        "name": "raumonmar1",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-04T12:00:01Z"
      },
      "committer": {
        "name": "raumonmar1",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-12-04T12:00:01Z"
      },
      "message": "feat(dataset): Include download on dataset view",
      "tree": {
        "sha": "acc3eb92a2579f33197833d86654154fad86c6cc",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/acc3eb92a2579f33197833d86654154fad86c6cc"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/9d318cf54e70e282df500e140ad14edd325fb612",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9d318cf54e70e282df500e140ad14edd325fb612",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/9d318cf54e70e282df500e140ad14edd325fb612",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9d318cf54e70e282df500e140ad14edd325fb612/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b"
      }
    ],
    "files": [
      {
        "sha": "3a3888c9c260111bcd18cbdade354e086ef75230",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9d318cf54e70e282df500e140ad14edd325fb612/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9d318cf54e70e282df500e140ad14edd325fb612/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=9d318cf54e70e282df500e140ad14edd325fb612",
        "patch": "@@ -41,6 +41,40 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n                     </div>\n                 </div>\n+                <div class=\"mt-2\">\n+                    <div class=\"btn-group\" role=\"group\">\n+                        <button id=\"btnGroupDropExport\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n+                            <i data-feather=\"download\"></i> Download\n+                        </button>\n+                        <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport\">\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n+                                    UVL\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=dataset.id) }}\">\n+                                    Glencoe\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=dataset.id) }}\">\n+                                    DIMACS\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=dataset.id) }}\">\n+                                    SPLOT\n+                                </a>\n+                            </li>\n+                            <li>\n+                                <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=dataset.id) }}\">\n+                                    ZIP\n+                                </a>\n+                            </li>\n+                        </ul>\n+                    </div>\n+                </div>\n                 <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n \n                 <div class=\"row mb-4\">"
      }
    ]
  },
  {
    "sha": "805415439bb28852fa0cf4bffad98d6af7a7c998",
    "node_id": "C_kwDONDG85doAKDgwNTQxNTQzOWJiMjg4NTJmYTBjZjRiZmZhZDk4ZDZhZjdhN2M5OTg",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-04T11:16:26Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-04T11:16:26Z"
      },
      "message": "fix(auth): fixed error message",
      "tree": {
        "sha": "a773539c7c3cd0935b0e6ddf467b61ca67d368a4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a773539c7c3cd0935b0e6ddf467b61ca67d368a4"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/805415439bb28852fa0cf4bffad98d6af7a7c998",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/805415439bb28852fa0cf4bffad98d6af7a7c998",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/805415439bb28852fa0cf4bffad98d6af7a7c998",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/805415439bb28852fa0cf4bffad98d6af7a7c998/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2434ccf86b441c67ac4829ebb49411800c892985",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/2434ccf86b441c67ac4829ebb49411800c892985",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/2434ccf86b441c67ac4829ebb49411800c892985"
      }
    ],
    "files": [
      {
        "sha": "501cab1b34174a50603c0737396680f0eb23b8aa",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/805415439bb28852fa0cf4bffad98d6af7a7c998/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/805415439bb28852fa0cf4bffad98d6af7a7c998/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=805415439bb28852fa0cf4bffad98d6af7a7c998",
        "patch": "@@ -107,9 +107,12 @@ def invite_user():\n     if user_response.status_code == 200:\n         user_id = user_response.json().get(\"id\")\n         payload[\"invitee_id\"] = user_id  \n-    else:\n+        \n+    elif user_response.status_code == 404:\n         return jsonify({\"error\": f\"Can't find the user: {username}\"}), 404\n-\n+    else:\n+        return jsonify({\"error\": f\"Something went wrong\"}), user_response.status_code\n+        \n     response = requests.post(url, json=payload, headers=headers)\n \n     if response.status_code == 201:"
      }
    ]
  },
  {
    "sha": "2434ccf86b441c67ac4829ebb49411800c892985",
    "node_id": "C_kwDONDG85doAKDI0MzRjY2Y4NmI0NDFjNjdhYzQ4MjllYmI0OTQxMTgwMGM4OTI5ODU",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-03T10:26:34Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-03T10:26:34Z"
      },
      "message": "fix(dataset): fixed errors ocurred in merge editor",
      "tree": {
        "sha": "3d0b2c25eeab436dae8b209b7311173bfbbb62ab",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/3d0b2c25eeab436dae8b209b7311173bfbbb62ab"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/2434ccf86b441c67ac4829ebb49411800c892985",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/2434ccf86b441c67ac4829ebb49411800c892985",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/2434ccf86b441c67ac4829ebb49411800c892985",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/2434ccf86b441c67ac4829ebb49411800c892985/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b"
      }
    ],
    "files": [
      {
        "sha": "a9f3d8cc1bd41f5650c0630a2bb4578f2eb20b3c",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/2434ccf86b441c67ac4829ebb49411800c892985/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/2434ccf86b441c67ac4829ebb49411800c892985/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=2434ccf86b441c67ac4829ebb49411800c892985",
        "patch": "@@ -351,7 +351,7 @@ def get_unsynchronized_dataset(dataset_id):\n \n     bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n    \n-    return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name)\n \n \n @dataset_bp.route('/dataset/commit/<int:dataset_id>', methods=['GET','POST'])\n@@ -423,4 +423,3 @@ def commit_file(file_id):\n     except subprocess.CalledProcessError as e:\n         return f\"This model is already in your github repository.\"\n \n-    return render_template(\"dataset/view_dataset.html\", dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name)"
      }
    ]
  },
  {
    "sha": "797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b",
    "node_id": "C_kwDONDG85doAKDc5N2VhN2ZkYzQ5NjM1ODkzZDFkNjRjNGU3YTJkM2Y4N2YwZDBlNWI",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "91947377+Javiruizg@users.noreply.github.com",
        "date": "2024-12-03T10:15:35Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-03T10:15:35Z"
      },
      "message": "Merge branch 'develop' into feature-sync-with-github",
      "tree": {
        "sha": "610067df0caf4feff865a7930623ad8c4bcb21e6",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/610067df0caf4feff865a7930623ad8c4bcb21e6"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnTtpHCRC1aQ7uu5UhlAAANP8QAFA6clB+1jjo58t79g3muXH8\nNHEyUl2e8efdSnMuDiec0FTe/7CxjtmIeEKISGu9ot3wazGSIxQhinlHEkPNYWi0\nG6oCdJYkZrqVRo1WDAqtDGPuEn+DzYikMeScJnj58vKmi8f2dZ11CTvTI5gQHX1b\n6a93+cG8dY1D7NhxEjjXpl/FVjH3P/YkE2q4mUe5RHmlTpy1SBf+z9f/Qj5PlGMg\nfRaTTgdcQA4TmUUAw5vt4Zivfzr0MjowuSSSWrcb6nqd03x+LBFtxFIVpqJ74Oq8\n9swN/70atHuVgVGMkz5mXaCdejaiugrdjMWg7fWaXOqz5bOhQltKHgQR87A/FDzx\nql1cww+UXoLUmDdmUpUWVXUBjMKbCpUehWvRgaLOtdbjKBd1lwrxLPb3Xs3h5H+R\no4Ic5kweybAuJFqEhMqj5BCo/vcHeulMUtb0xeN2+RhxsZ1MlNr2q3iE0rVZZT5G\nP2W5mkg/cnUv9rT81h2wT8LZ38aIC6s4NUGPn5AGTmrEH7S5dg9gp56jMz5RoW1s\nK2jq1NvgH1Uwy1xY7dONacE4HYTbebx6Kl2D8EWOQOkfqT+JPZNWwb2MGLgug4kU\nZq5WWXjJivXfddHkAz9snIlWGxL5JwCM0/g3tzjc+pKaT9rdhf32ZkyoBzWmLQp6\nx/HjAR4SuBGMeA6jHkTq\n=CkFW\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 610067df0caf4feff865a7930623ad8c4bcb21e6\nparent a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5\nparent ba3c464f4122ed6dded6c97dc115b20a7400150a\nauthor Javiruizg <91947377+Javiruizg@users.noreply.github.com> 1733220935 +0100\ncommitter GitHub <noreply@github.com> 1733220935 +0100\n\nMerge branch 'develop' into feature-sync-with-github",
        "verified_at": "2024-12-03T10:15:40Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5"
      },
      {
        "sha": "ba3c464f4122ed6dded6c97dc115b20a7400150a",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ba3c464f4122ed6dded6c97dc115b20a7400150a",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ba3c464f4122ed6dded6c97dc115b20a7400150a"
      }
    ],
    "files": [
      {
        "sha": "c5b9dbad0e7570244cb84942b53b859bf041af6c",
        "filename": ".github/workflows/deloyment_on_webhook.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeloyment_on_webhook.yml?ref=a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5",
        "patch": "@@ -1,32 +0,0 @@\n-name: Deploy on Webhook\n-\n-on:\n-  workflow_run:\n-    workflows: \n-      - \"Python Lint\"\n-      - \"Run tests\"\n-    types:\n-      - completed\n-\n-jobs:\n-  deploy:\n-    if: github.ref == 'refs/heads/main'\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Check lint and test results\n-      run: |\n-        if [ \"${{ github.event.workflow_run.conclusion }}\" != \"success\" ]; then\n-          echo \"Lint or Test workflow did not succeed. Exiting.\"\n-          exit 1\n-        fi\n-\n-    - name: Trigger Deployment Webhook\n-      env:\n-        WEBHOOK_DOMAIN: ${{ secrets.WEBHOOK_DOMAIN }}\n-        WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}\n-      run: |\n-        curl -X POST https://${{ secrets.WEBHOOK_DOMAIN }}/webhook/deploy -H \"Authorization: Bearer ${{ secrets.WEBHOOK_TOKEN }}\""
      },
      {
        "sha": "f7dfe75eb96badbdd3ee434377bee31f33a173df",
        "filename": ".github/workflows/deployment_on_dockerhub.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml?ref=a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5",
        "patch": "@@ -1,43 +0,0 @@\n-# This workflow uses actions that are not certified by GitHub.\n-# They are provided by a third-party and are governed by\n-# separate terms of service, privacy policy, and support\n-# documentation.\n-\n-# GitHub recommends pinning actions to a commit SHA.\n-# To get a newer version, you will need to update the SHA.\n-# You can also reference a tag or branch, but the action may change without warning.\n-\n-name: Publish image in Docker Hub\n-\n-on:\n-  release:\n-    types: [published]\n-\n-jobs:\n-  push_to_registry:\n-    name: Push Docker image to Docker Hub\n-    runs-on: ubuntu-latest\n-    steps:\n-      - name: Check out the repo\n-        uses: actions/checkout@v3\n-\n-      - name: Log in to Docker Hub\n-        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a\n-        with:\n-          username: ${{ secrets.DOCKER_USER }}\n-          password: ${{ secrets.DOCKER_PASSWORD }}\n-\n-      - name: Build and push Docker image\n-        run: docker build --build-arg VERSION_TAG=${{ github.event.release.tag_name }} -t drorganvidez/uvlhub:${{ github.event.release.tag_name }} -f docker/images/Dockerfile.prod .\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled\n-\n-      - name: Push Docker image to Docker Hub\n-        run: docker push drorganvidez/uvlhub:${{ github.event.release.tag_name }}\n-\n-      - name: Tag and push latest\n-        run: |\n-          docker tag drorganvidez/uvlhub:${{ github.event.release.tag_name }} drorganvidez/uvlhub:latest\n-          docker push drorganvidez/uvlhub:latest\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled"
      },
      {
        "sha": "5108bb67a014088a4fe2232b80864b66166591b7",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 18,
        "changes": 22,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b",
        "patch": "@@ -1,12 +1,12 @@\n-name: Deploy to Render\n+name: Deploy develop branch to Render\n \n on:\n     push:\n-      tags:\n-      - 'v*' \n+      branches:\n+        - develop\n     pull_request:\n       branches:\n-        - main\n+        - develop\n \n jobs:\n \n@@ -60,25 +60,11 @@ jobs:\n     steps:\n       - name: Check out the repo\n         uses: actions/checkout@v4\n-        with:\n-          ref: 'develop'\n \n       - name: Deploy to Render\n         env:\n           deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_DEVELOP }}\n           ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n         run: |\n           curl \"$deploy_url\"\n-      - name: Send Notification\n-        if: always()\n-        env:\n-          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n-        run: |\n-          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment completed successfully!\"}' $SLACK_WEBHOOK_URL\n-      - name: Send Deployment Failure Notification\n-        if: failure()\n-        env:\n-          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n-        run: |\n-          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment failed!\"}' $SLACK_WEBHOOK_URL\n       \n\\ No newline at end of file"
      },
      {
        "sha": "a04ec7363cbb449829a4c0f973c90d7889922c53",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 35,
        "deletions": 31,
        "changes": 66,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b",
        "patch": "@@ -297,42 +297,27 @@ def subdomain_index(doi):\n \n \n     # Export DataSet to BibTex\n-    closing_ = \"},\"\n-    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n-    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n-    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n     \n-    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n-        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    else:\n-        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n-    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n-    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n-\n-    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n-    bibtex_properties.append(\"}\")\n-    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n     \n-    max_preview_len = 60\n-    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n \n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    \n-    n_px = 17*(int(len(bibtex_properties)/2)+1)\n-\n-    page_render = render_template(\"dataset/view_dataset.html\",\n-                    dataset=dataset,\n-                    bibtex_dataset=bibtex_dataset,\n-                    bibtex_preview=bibtex_preview,\n-                    bibtex_preview_start = bibtex_properties[0],\n-                    bibtex_preview_lines=bibtex_properties[1:-1],\n-                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n-                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n-\n-    resp = make_response(page_render)\n-    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+\n+    resp = make_response(render_template(\"dataset/view_dataset.html\",dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp\n@@ -347,7 +332,25 @@ def get_unsynchronized_dataset(dataset_id):\n \n     if not dataset:\n         abort(404)\n+    \n+    ds_meta_data = dsmetadata_service.get_by_id(dataset.ds_meta_data_id)\n+\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    \n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n \n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n+   \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n \n@@ -420,3 +423,4 @@ def commit_file(file_id):\n     except subprocess.CalledProcessError as e:\n         return f\"This model is already in your github repository.\"\n \n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name)"
      },
      {
        "sha": "b14ec1b4ea13d1c08ee4e06177f02962ac201064",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 46,
        "deletions": 31,
        "changes": 77,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=797ea7fdc49635893d1d64c4e7a2d3f87f0d0e5b",
        "patch": "@@ -159,38 +159,11 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n \n             {% if bibtex_dataset %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n-                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n-                    {{ bibtex_dataset }}\n-                </div>\n \n-                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n-                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n-                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n-                        <b>BibTex</b>\n-                    </span>\n-\n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_dataset }}\n-                    </span> -->\n-                   \n-                    \n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_preview }}\n-                    </span> -->\n-                   \n-\n-                    \n-                    <div class=\"doi_text\">\n-                        <div>{{ bibtex_preview_start }}</div>\n-                        {% for bib_line in bibtex_preview_lines %}\n-                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n-                        {% endfor %}\n-                        <div>{{ bibtex_preview_end }}</div>\n-                    </div>\n-                   \n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n+                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                    <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n             </div>\n             {% endif %}\n@@ -409,6 +382,30 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n     </div>\n </div>\n \n+<div class=\"modal fade\" id=\"bibtexViewerModal\" tabindex=\"-1\" aria-labelledby=\"bibtexViewerModalLabel\" aria-hidden=\"true\">\n+    <div class=\"modal-dialog modal-lg\" style=\"height: 80vh; display: flex; align-items: center;\">\n+        <div class=\"modal-content\" style=\"height: 80vh;\">\n+            <div class=\"modal-header\" style=\"display: flex; justify-content: space-between; align-items: center;\">\n+                <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex format</h5>\n+                <div>\n+                    <a href=\"#\" class=\"btn btn-outline-primary btn-sm\" id=\"bibtexDownloadButton\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"download\"></i>\n+                    </a>\n+                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"copy\"></i>\n+                    </button>\n+                    <button onclick=\"freeBibtexUrl()\" type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n+                </div>\n+            </div>\n+            <div class=\"modal-body\" style=\"overflow-y: auto; height: calc(100vh - 50px);\">\n+                <pre id=\"bibtexContent\" style=\"height: 100%; overflow-y: auto; white-space: pre-wrap; word-wrap: break-word; background-color: #f5f5f5; padding: 20px; border-radius: 5px; border: 1px solid #ccc;\"></pre>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js\"></script>\n \n \n@@ -420,6 +417,24 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n \n     var currentFileId;\n \n+    function freeBibtexUrl() {\n+        console.log(\"entra en freeBibtexUrl\")\n+        URL.revokeObjectURL(document.getElementById('bibtexDownloadButton').href)\n+    }\n+\n+    function viewBibtex(bibfilename) {\n+        var bib_content_display = document.getElementById('dataset_bibtex_export').textContent;\n+\n+        var blob = new Blob([bib_content_display], { type: 'text/plain' });\n+        var fileURL = URL.createObjectURL(blob);\n+        document.getElementById('bibtexDownloadButton').href = fileURL;\n+        document.getElementById('bibtexDownloadButton').download = bibfilename;\n+        document.getElementById('bibtexContent').textContent = bib_content_display;\n+\n+        var modal = new bootstrap.Modal(document.getElementById('bibtexViewerModal'));\n+        modal.show();\n+    }\n+\n     function viewFile(fileId) {\n         fetch(`/file/view/${fileId}`)\n             .then(response => response.json())"
      }
    ]
  },
  {
    "sha": "a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5",
    "node_id": "C_kwDONDG85doAKGEyOWY2Njc5ZjMyMDBiMjcyN2RjODJmMGQ3ZjRlYjBjMjYwMWIzYzU",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-03T10:11:14Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-03T10:11:14Z"
      },
      "message": "fix(workflow): github secret added to render workflow",
      "tree": {
        "sha": "079870eca025968f480047b51cbf38c142449d7b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/079870eca025968f480047b51cbf38c142449d7b"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35cd3e1ccf04d8d24ffa6cbe48c1c6440c30f391",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/35cd3e1ccf04d8d24ffa6cbe48c1c6440c30f391",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/35cd3e1ccf04d8d24ffa6cbe48c1c6440c30f391"
      }
    ],
    "files": [
      {
        "sha": "cc3b0ef5e02f2b7af2a6243de7d076c1d0c14bdb",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=a29f6679f3200b2727dc82f0d7f4eb0c2601b3c5",
        "patch": "@@ -66,6 +66,7 @@ jobs:\n       - name: Deploy to Render\n         env:\n           deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_DEVELOP }}\n+          ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n         run: |\n           curl \"$deploy_url\"\n       - name: Send Notification"
      }
    ]
  },
  {
    "sha": "ce6a18dfb9ed920305c01833ecda6c680f84f291",
    "node_id": "C_kwDONDG85doAKGNlNmExOGRmYjllZDkyMDMwNWMwMTgzM2VjZGE2YzY4MGY4NGYyOTE",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-02T19:14:09Z"
      },
      "committer": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-02T19:14:09Z"
      },
      "message": "feat(feature_model): Update uvl content",
      "tree": {
        "sha": "dc43ba4b764421c789ce23596df9abf44cba7a3a",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/dc43ba4b764421c789ce23596df9abf44cba7a3a"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/ce6a18dfb9ed920305c01833ecda6c680f84f291",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ce6a18dfb9ed920305c01833ecda6c680f84f291",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ce6a18dfb9ed920305c01833ecda6c680f84f291",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ce6a18dfb9ed920305c01833ecda6c680f84f291/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "17262cbb9173f93b1606dc0f1255675ee9466e98",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/17262cbb9173f93b1606dc0f1255675ee9466e98",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/17262cbb9173f93b1606dc0f1255675ee9466e98"
      }
    ],
    "files": [
      {
        "sha": "6f2edac23ceec557545bb8eaf134f3dcfa88d657",
        "filename": "app/modules/dataset/uvl_examples/file10.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tMessaging\t\n+\t\t\t\tor\n+\t\t\t\t\tSMS\n+\t\t\t\t\tMMS\n+\t\t\t\"Utility Features\"\t\n+\t\t\t\toptional\n+\t\t\t\t\tCalculator\n+\t\t\t\t\t\"Currency Exchange\"\n+\t\t\tOS\t\n+\t\t\t\talternative\n+\t\t\t\t\tSymbian\n+\t\t\t\t\tWinCE\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Currency Exchange\" => Calculator\n\\ No newline at end of file"
      },
      {
        "sha": "141cad170eaca409c3974334791706a0cc319f3b",
        "filename": "app/modules/dataset/uvl_examples/file11.uvl",
        "status": "modified",
        "additions": 25,
        "deletions": 17,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,27 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tOnlineshop {abstract}\t\n+\t\tmandatory\n+\t\t\tPayment {abstract}\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Debit Card\"\n+\t\t\t\t\t\"Credit Card\"\n+\t\t\t\"Product Selection\" {abstract}\t\n+\t\t\t\tmandatory\n+\t\t\t\t\tCatalog\t\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tCategories\n+\t\t\t\t\t\t\tSort\n+\t\t\t\toptional\n+\t\t\t\t\tSearch\n+\t\toptional\n+\t\t\tUserManagement {abstract}\t\n+\t\t\t\tor\n+\t\t\t\t\tOrders\n+\t\t\t\t\tSecurity\n+\t\t\t\t\tPayments\n+\t\t\t\t\tWishlist\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSearch => Security\n+\tSecurity => !Payments\n+\tPayments => !Security\n+\tSort | Search\n\\ No newline at end of file"
      },
      {
        "sha": "117471c9d2dc5561b9562f672aec92d9af73450d",
        "filename": "app/modules/dataset/uvl_examples/file12.uvl",
        "status": "modified",
        "additions": 22,
        "deletions": 18,
        "changes": 40,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,23 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t\"Movies_App\" \n+\t\tmandatory\n+\t\t\t\"GUI\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Thin\" \n+\t\t\t\t\t\"Rich\" \n+\t\tmandatory\n+\t\t\t\"DB\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Local\" \n+\t\t\t\t\t\"Remote\" \n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\t\"Cache_Policy\" \n+\t\tmandatory\n+\t\t\t\"Network\" \n+\t\t\t\talternative\n+\t\t\t\t\t\"Wifi\" \n+\t\t\t\t\t\"Bluetooth\" \n+\t\toptional\n+\t\t\t\"GPS\" \n+\t\t\t\toptional\n+\t\t\t\t\t\"Built-In\" \n\\ No newline at end of file"
      },
      {
        "sha": "924a2f013c74f6bbea7f911b884dd9fd94e26f8b",
        "filename": "app/modules/dataset/uvl_examples/file2.uvl",
        "status": "modified",
        "additions": 19,
        "deletions": 18,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,20 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40"
      },
      {
        "sha": "9e14cb807f57d510839a4d68aff29e690523ac78",
        "filename": "app/modules/dataset/uvl_examples/file3.uvl",
        "status": "modified",
        "additions": 17,
        "deletions": 18,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,18 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\tAccelerometer\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "ad06cc4f7e038d2e2ab96ed02ae7ae1c2ef24dd0",
        "filename": "app/modules/dataset/uvl_examples/file4.uvl",
        "status": "modified",
        "additions": 20,
        "deletions": 17,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,22 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tsmartwatch {abstract true}\n+\t\tmandatory\n+\t\t\tscreen\n+\t\t\t\talternative\n+\t\t\t\t\ttouch\n+\t\t\t\t\tstandard\n+\t\t\t\"energy management\"\n+\t\t\t\talternative\n+\t\t\t\t\tbasic\n+\t\t\t\t\t\"advanced solar\"\n+\t\toptional\n+\t\t\tpayment\n+\t\t\tgps\n+\t\t\t\"sports tracking\"\n+\t\t\t\tor\n+\t\t\t\t\trunning\n+\t\t\t\t\tskiing\n+\t\t\t\t\thiking\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\t!(payment & standard)\n+\t\"sports tracking\" => gps"
      },
      {
        "sha": "2ed3f8f650ad498e4e3ca0220d63dc841fc39db0",
        "filename": "app/modules/dataset/uvl_examples/file5.uvl",
        "status": "modified",
        "additions": 33,
        "deletions": 18,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,34 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n\\ No newline at end of file"
      },
      {
        "sha": "9234e685c686a0589a2f477bfc0f83156e104c5d",
        "filename": "app/modules/dataset/uvl_examples/file6.uvl",
        "status": "modified",
        "additions": 40,
        "deletions": 16,
        "changes": 56,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,43 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n+\tSmartWatch {abstract true}\n+\t\toptional\n+\t\t\tScreen\n+\t\t\t\toptional\n+\t\t\t\t\tTouchScreen\n+\t\t\t\tmandatory\n+\t\t\t\t\tOLED\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCapacityButton\n+\t\tmandatory\n+\t\t\tFunctionalities {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tFitnessMonitor\n+\t\t\t\t\tSleepTracker\n+\t\t\t\t\tVibrateAlert\n+\t\t\t\t\t\tmandatory\n+\t\t\t\t\t\t\tCall\n+\t\t\t\t\t\t\tNotification\n+\t\t\t\toptional\n+\t\t\t\t\tContactlessPayment\n+\t\t\tSensors {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tPedometer\n+\t\t\t\t\t\toptional\n+\t\t\t\t\t\t\tMovementFilter\n+\t\t\t\t\tAccelerometer\n+\t\t\t\toptional\n+\t\t\t\t\tHeartRateSensor\n+\t\t\tConnectivity {abstract true}\n+\t\t\t\tmandatory\n+\t\t\t\t\tBluetooth\n+\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\tBLE {abstract true}\n+\t\t\t\t\t\t\t\talternative\n+\t\t\t\t\t\t\t\t\tBLEv40\n+\t\t\t\t\t\t\t\t\tBLEv42\n+\t\t\t\t\t\t\tBT40\n+\t\t\t\toptional\n+\t\t\t\t\tNFC\n \n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tContactlessPayment => NFC"
      },
      {
        "sha": "3d881f9b14f76d1a693988f487862607e513ce69",
        "filename": "app/modules/dataset/uvl_examples/file7.uvl",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,17 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tGSM_Protocol_1900\n+\t\t\tMP3_Recording\n+\t\t\tCamera_Resolution\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"2_1MP\"\n+\t\t\t\t\t\"5 MP\"\n+\t\t\t\t\t\"3_1MP\"\n+\t\t\tCamera\n+\t\t\tAudio_Formats\t\n+\t\t\t\tor\n+\t\t\t\t\tWAV\n+\t\t\t\t\tMP3\n constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tMP3_Recording => MP3\n\\ No newline at end of file"
      },
      {
        "sha": "10dddc5e29b5fc9da5ba4b8692ecbf437448f719",
        "filename": "app/modules/dataset/uvl_examples/file8.uvl",
        "status": "modified",
        "additions": 36,
        "deletions": 18,
        "changes": 54,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ce6a18dfb9ed920305c01833ecda6c680f84f291/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl?ref=ce6a18dfb9ed920305c01833ecda6c680f84f291",
        "patch": "@@ -1,19 +1,37 @@\n features\n-    Chat\n-        mandatory\n-            Connection\n-                alternative\n-                    \"Peer 2 Peer\"\n-                    Server\n-            Messages\n-                or\n-                    Text\n-                    Video\n-                    Audio\n-        optional\n-            \"Data Storage\"\n-            \"Media Player\"\n-\n-constraints\n-    Server => \"Data Storage\"\n-    Video | Audio => \"Media Player\"\n+\tVIRTUAL_ROOT {abstract}\t\n+\t\tor\n+\t\t\tSV_Solution\t\n+\t\t\t\talternative\n+\t\t\t\t\tBMD\n+\t\t\t\t\tBMDCRM\n+\t\t\tCV_Documents\t\n+\t\t\t\tor\n+\t\t\t\t\t\"scan new\"\n+\t\t\t\t\t\"import external\"\n+\t\t\t\t\tarchive\n+\t\t\t\t\t\"read existing\"\n+\t\t\tCV_Claims\t\n+\t\t\t\tor\n+\t\t\t\t\tjournal\n+\t\t\t\t\t\"task manager\"\n+\t\t\tSV\t\n+\t\t\t\talternative\n+\t\t\t\t\t\"Particular Packages\"\n+\t\t\t\t\tSolution\n+\t\t\tCV_Customer\t\n+\t\t\t\tor\n+\t\t\t\t\tmail\n+\t\t\t\t\tphone\n+\t\t\tCV\t\n+\t\t\t\tor\n+\t\t\t\t\t\"Document Management\"\n+\t\t\t\t\t\"Claims Management\"\n+\t\t\t\t\t\"Customer Management\"\n+\t\t\tSV_Particular_Package\t\n+\t\t\t\tor\n+\t\t\t\t\tOrganizer\n+\t\t\t\t\t\"Label Printing\"\n+\t\t\t\t\tElse\n+\t\t\t\t\tDocs\n+\t\t\t\t\t\"Standard Letter\"\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "ba3c464f4122ed6dded6c97dc115b20a7400150a",
    "node_id": "C_kwDONDG85doAKGJhM2M0NjRmNDEyMmVkNmRkZWQ2Yzk3ZGMxMTViMjBhNzQwMDE1MGE",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "73189183+Danguepre@users.noreply.github.com",
        "date": "2024-12-02T18:58:03Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-02T18:58:03Z"
      },
      "message": "Merge pull request #17 from flamenquin-hub-single/feature-export_dataset_bibtex\n\nfix: Changed bibtex export to match uvl model view",
      "tree": {
        "sha": "8bf0093c553d0b397eacd5fad51eda471901bd19",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/8bf0093c553d0b397eacd5fad51eda471901bd19"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/ba3c464f4122ed6dded6c97dc115b20a7400150a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnTgM7CRC1aQ7uu5UhlAAAjFwQAIxkXezCaw/wZwVmaFVOJZhW\nj+t90f69W9GwsmdeVTnHg5uYeaepfq+a3MYDVz6hm9J+fxj2iqIP1Pkws23jO3bt\nVe9visZ4ylSGus0wxbZWRf3uJn6d02Pc1HaEsr8RmXZqYaq+aDeThbYDqY/tIOcC\n4Nsf0Vx4PgibGhSE5C2jgcZNO6Pgxdtgv6oCB+oymwi5ifc5CfwN90VkaME+xPWM\nDwLha42VENf3f9hWvJ6rIo/XPdo2DRpHsQ7qretnRX2OuPpJ2nDDjv+1bCxVNZLX\nMd7xo6EM5R8Wf6SUcobEFJSgvQlRZ7we4GHmt9VhbVg9jPUTPKnA90ua5qwgM3B3\nHJRebs25D6zP6qMVKVlEdP7enut6BquzCoGQyKwAE4EOrbbbpADpAn8yem3HpJ/R\nQmjV9aUCEbNK0usNT3JG7oTnZYzdXpUq7hcDbVSjq3vSpYFjKRma6s9vbt9V6Pvq\nDTJ3vZBKeh3IlkOdXMn6xE0gCqgF/AXFjbxOjf/FaLyA31v3Gln7BgAwjIQz0mww\nZHz6jK5OCK8T0+HCerDEMRgslBwv8l40DTZShA3zjQDFHoW+xjhk5E19bjOWfO/q\nWP2x7AsqT4UpV8Q6Dy0vxwPzZTwvhNDEJ5RDwUwJ9DyDoYxTj/zjRQSU72kutlzJ\nmo7jg+xuCiFOl91VqIih\n=SJe0\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 8bf0093c553d0b397eacd5fad51eda471901bd19\nparent ba269140c5c419111708e39444c882bfeb4bbf40\nparent c0d47f94d525bb619130d51138ceb39f585b83cd\nauthor Danguepre <73189183+Danguepre@users.noreply.github.com> 1733165883 +0100\ncommitter GitHub <noreply@github.com> 1733165883 +0100\n\nMerge pull request #17 from flamenquin-hub-single/feature-export_dataset_bibtex\n\nfix: Changed bibtex export to match uvl model view",
        "verified_at": "2024-12-02T18:59:29Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ba3c464f4122ed6dded6c97dc115b20a7400150a",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ba3c464f4122ed6dded6c97dc115b20a7400150a",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ba3c464f4122ed6dded6c97dc115b20a7400150a/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba269140c5c419111708e39444c882bfeb4bbf40",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ba269140c5c419111708e39444c882bfeb4bbf40",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ba269140c5c419111708e39444c882bfeb4bbf40"
      },
      {
        "sha": "c0d47f94d525bb619130d51138ceb39f585b83cd",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c0d47f94d525bb619130d51138ceb39f585b83cd",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c0d47f94d525bb619130d51138ceb39f585b83cd"
      }
    ],
    "files": [
      {
        "sha": "83912e71bdd7d9910afb53f0fdf0a67a9b272be7",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 35,
        "deletions": 32,
        "changes": 67,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ba3c464f4122ed6dded6c97dc115b20a7400150a/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ba3c464f4122ed6dded6c97dc115b20a7400150a/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=ba3c464f4122ed6dded6c97dc115b20a7400150a",
        "patch": "@@ -291,42 +291,27 @@ def subdomain_index(doi):\n \n \n     # Export DataSet to BibTex\n-    closing_ = \"},\"\n-    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n-    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n-    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n     \n-    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n-        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    else:\n-        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n-    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n-    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n-\n-    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n-    bibtex_properties.append(\"}\")\n-    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n     \n-    max_preview_len = 60\n-    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n \n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    \n-    n_px = 17*(int(len(bibtex_properties)/2)+1)\n-\n-    page_render = render_template(\"dataset/view_dataset.html\",\n-                    dataset=dataset,\n-                    bibtex_dataset=bibtex_dataset,\n-                    bibtex_preview=bibtex_preview,\n-                    bibtex_preview_start = bibtex_properties[0],\n-                    bibtex_preview_lines=bibtex_properties[1:-1],\n-                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n-                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n-\n-    resp = make_response(page_render)\n-    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+\n+    resp = make_response(render_template(\"dataset/view_dataset.html\",dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp\n@@ -341,5 +326,23 @@ def get_unsynchronized_dataset(dataset_id):\n \n     if not dataset:\n         abort(404)\n+    \n+    ds_meta_data = dsmetadata_service.get_by_id(dataset.ds_meta_data_id)\n+\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    \n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n \n-    return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name)"
      },
      {
        "sha": "1adb3be4d273cc0921f5759f7ae1f44480da1cd1",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 46,
        "deletions": 31,
        "changes": 77,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ba3c464f4122ed6dded6c97dc115b20a7400150a/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ba3c464f4122ed6dded6c97dc115b20a7400150a/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=ba3c464f4122ed6dded6c97dc115b20a7400150a",
        "patch": "@@ -159,38 +159,11 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n \n             {% if bibtex_dataset %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n-                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n-                    {{ bibtex_dataset }}\n-                </div>\n \n-                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n-                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n-                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n-                        <b>BibTex</b>\n-                    </span>\n-\n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_dataset }}\n-                    </span> -->\n-                   \n-                    \n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_preview }}\n-                    </span> -->\n-                   \n-\n-                    \n-                    <div class=\"doi_text\">\n-                        <div>{{ bibtex_preview_start }}</div>\n-                        {% for bib_line in bibtex_preview_lines %}\n-                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n-                        {% endfor %}\n-                        <div>{{ bibtex_preview_end }}</div>\n-                    </div>\n-                   \n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n+                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                    <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n             </div>\n             {% endif %}\n@@ -399,6 +372,30 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n     </div>\n </div>\n \n+<div class=\"modal fade\" id=\"bibtexViewerModal\" tabindex=\"-1\" aria-labelledby=\"bibtexViewerModalLabel\" aria-hidden=\"true\">\n+    <div class=\"modal-dialog modal-lg\" style=\"height: 80vh; display: flex; align-items: center;\">\n+        <div class=\"modal-content\" style=\"height: 80vh;\">\n+            <div class=\"modal-header\" style=\"display: flex; justify-content: space-between; align-items: center;\">\n+                <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex format</h5>\n+                <div>\n+                    <a href=\"#\" class=\"btn btn-outline-primary btn-sm\" id=\"bibtexDownloadButton\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"download\"></i>\n+                    </a>\n+                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"copy\"></i>\n+                    </button>\n+                    <button onclick=\"freeBibtexUrl()\" type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n+                </div>\n+            </div>\n+            <div class=\"modal-body\" style=\"overflow-y: auto; height: calc(100vh - 50px);\">\n+                <pre id=\"bibtexContent\" style=\"height: 100%; overflow-y: auto; white-space: pre-wrap; word-wrap: break-word; background-color: #f5f5f5; padding: 20px; border-radius: 5px; border: 1px solid #ccc;\"></pre>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js\"></script>\n \n \n@@ -410,6 +407,24 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n \n     var currentFileId;\n \n+    function freeBibtexUrl() {\n+        console.log(\"entra en freeBibtexUrl\")\n+        URL.revokeObjectURL(document.getElementById('bibtexDownloadButton').href)\n+    }\n+\n+    function viewBibtex(bibfilename) {\n+        var bib_content_display = document.getElementById('dataset_bibtex_export').textContent;\n+\n+        var blob = new Blob([bib_content_display], { type: 'text/plain' });\n+        var fileURL = URL.createObjectURL(blob);\n+        document.getElementById('bibtexDownloadButton').href = fileURL;\n+        document.getElementById('bibtexDownloadButton').download = bibfilename;\n+        document.getElementById('bibtexContent').textContent = bib_content_display;\n+\n+        var modal = new bootstrap.Modal(document.getElementById('bibtexViewerModal'));\n+        modal.show();\n+    }\n+\n     function viewFile(fileId) {\n         fetch(`/file/view/${fileId}`)\n             .then(response => response.json())"
      }
    ]
  },
  {
    "sha": "ba269140c5c419111708e39444c882bfeb4bbf40",
    "node_id": "C_kwDONDG85doAKGJhMjY5MTQwYzVjNDE5MTExNzA4ZTM5NDQ0Yzg4MmJmZWI0YmJmNDA",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-02T18:54:55Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-02T18:54:55Z"
      },
      "message": "fix: removed unused workflows",
      "tree": {
        "sha": "a2c97339d9d554e8c5082ecec4bbbc4160a38649",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a2c97339d9d554e8c5082ecec4bbbc4160a38649"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/ba269140c5c419111708e39444c882bfeb4bbf40",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ba269140c5c419111708e39444c882bfeb4bbf40",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ba269140c5c419111708e39444c882bfeb4bbf40",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ba269140c5c419111708e39444c882bfeb4bbf40/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6aebf6e23432402706adee63daec2e2d42eb63cf",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6aebf6e23432402706adee63daec2e2d42eb63cf",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/6aebf6e23432402706adee63daec2e2d42eb63cf"
      }
    ],
    "files": [
      {
        "sha": "c5b9dbad0e7570244cb84942b53b859bf041af6c",
        "filename": ".github/workflows/deloyment_on_webhook.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6aebf6e23432402706adee63daec2e2d42eb63cf/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6aebf6e23432402706adee63daec2e2d42eb63cf/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeloyment_on_webhook.yml?ref=6aebf6e23432402706adee63daec2e2d42eb63cf",
        "patch": "@@ -1,32 +0,0 @@\n-name: Deploy on Webhook\n-\n-on:\n-  workflow_run:\n-    workflows: \n-      - \"Python Lint\"\n-      - \"Run tests\"\n-    types:\n-      - completed\n-\n-jobs:\n-  deploy:\n-    if: github.ref == 'refs/heads/main'\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Check lint and test results\n-      run: |\n-        if [ \"${{ github.event.workflow_run.conclusion }}\" != \"success\" ]; then\n-          echo \"Lint or Test workflow did not succeed. Exiting.\"\n-          exit 1\n-        fi\n-\n-    - name: Trigger Deployment Webhook\n-      env:\n-        WEBHOOK_DOMAIN: ${{ secrets.WEBHOOK_DOMAIN }}\n-        WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}\n-      run: |\n-        curl -X POST https://${{ secrets.WEBHOOK_DOMAIN }}/webhook/deploy -H \"Authorization: Bearer ${{ secrets.WEBHOOK_TOKEN }}\""
      },
      {
        "sha": "f7dfe75eb96badbdd3ee434377bee31f33a173df",
        "filename": ".github/workflows/deployment_on_dockerhub.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6aebf6e23432402706adee63daec2e2d42eb63cf/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6aebf6e23432402706adee63daec2e2d42eb63cf/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml?ref=6aebf6e23432402706adee63daec2e2d42eb63cf",
        "patch": "@@ -1,43 +0,0 @@\n-# This workflow uses actions that are not certified by GitHub.\n-# They are provided by a third-party and are governed by\n-# separate terms of service, privacy policy, and support\n-# documentation.\n-\n-# GitHub recommends pinning actions to a commit SHA.\n-# To get a newer version, you will need to update the SHA.\n-# You can also reference a tag or branch, but the action may change without warning.\n-\n-name: Publish image in Docker Hub\n-\n-on:\n-  release:\n-    types: [published]\n-\n-jobs:\n-  push_to_registry:\n-    name: Push Docker image to Docker Hub\n-    runs-on: ubuntu-latest\n-    steps:\n-      - name: Check out the repo\n-        uses: actions/checkout@v3\n-\n-      - name: Log in to Docker Hub\n-        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a\n-        with:\n-          username: ${{ secrets.DOCKER_USER }}\n-          password: ${{ secrets.DOCKER_PASSWORD }}\n-\n-      - name: Build and push Docker image\n-        run: docker build --build-arg VERSION_TAG=${{ github.event.release.tag_name }} -t drorganvidez/uvlhub:${{ github.event.release.tag_name }} -f docker/images/Dockerfile.prod .\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled\n-\n-      - name: Push Docker image to Docker Hub\n-        run: docker push drorganvidez/uvlhub:${{ github.event.release.tag_name }}\n-\n-      - name: Tag and push latest\n-        run: |\n-          docker tag drorganvidez/uvlhub:${{ github.event.release.tag_name }} drorganvidez/uvlhub:latest\n-          docker push drorganvidez/uvlhub:latest\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled"
      }
    ]
  },
  {
    "sha": "6aebf6e23432402706adee63daec2e2d42eb63cf",
    "node_id": "C_kwDONDG85doAKDZhZWJmNmUyMzQzMjQwMjcwNmFkZWU2M2RhZWMyZTJkNDJlYjYzY2Y",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-02T18:51:32Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-02T18:51:32Z"
      },
      "message": "fix: removed unused workflow steps",
      "tree": {
        "sha": "de4fab90f0938542b4f01f5218104a6ff964d9c7",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/de4fab90f0938542b4f01f5218104a6ff964d9c7"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/6aebf6e23432402706adee63daec2e2d42eb63cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6aebf6e23432402706adee63daec2e2d42eb63cf",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/6aebf6e23432402706adee63daec2e2d42eb63cf",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/6aebf6e23432402706adee63daec2e2d42eb63cf/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1f51be70959b5772c92b3f9647b24f5b65acf8ff",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/1f51be70959b5772c92b3f9647b24f5b65acf8ff",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/1f51be70959b5772c92b3f9647b24f5b65acf8ff"
      }
    ],
    "files": [
      {
        "sha": "af0ea04da193ab82fc7353491e92b74d15e45261",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/6aebf6e23432402706adee63daec2e2d42eb63cf/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/6aebf6e23432402706adee63daec2e2d42eb63cf/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=6aebf6e23432402706adee63daec2e2d42eb63cf",
        "patch": "@@ -66,16 +66,4 @@ jobs:\n           deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_DEVELOP }}\n         run: |\n           curl \"$deploy_url\"\n-      - name: Send Notification\n-        if: always()\n-        env:\n-          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n-        run: |\n-          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment completed successfully!\"}' $SLACK_WEBHOOK_URL\n-      - name: Send Deployment Failure Notification\n-        if: failure()\n-        env:\n-          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n-        run: |\n-          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment failed!\"}' $SLACK_WEBHOOK_URL\n       \n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "17262cbb9173f93b1606dc0f1255675ee9466e98",
    "node_id": "C_kwDONDG85doAKDE3MjYyY2JiOTE3M2Y5M2IxNjA2ZGMwZjEyNTU2NzVlZTk0NjZlOTg",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-02T17:13:13Z"
      },
      "committer": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-12-02T17:13:13Z"
      },
      "message": "feature(explore): Added more filters and sortings options related to the feature models",
      "tree": {
        "sha": "2e2320cf3eba8ddeb756be0d7a0b3a4211af4a64",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/2e2320cf3eba8ddeb756be0d7a0b3a4211af4a64"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/17262cbb9173f93b1606dc0f1255675ee9466e98",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/17262cbb9173f93b1606dc0f1255675ee9466e98",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/17262cbb9173f93b1606dc0f1255675ee9466e98",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/17262cbb9173f93b1606dc0f1255675ee9466e98/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc"
      }
    ],
    "files": [
      {
        "sha": "1609b0318fca78c64b66a9f332daf50d08bb7879",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/17262cbb9173f93b1606dc0f1255675ee9466e98/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/17262cbb9173f93b1606dc0f1255675ee9466e98/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=17262cbb9173f93b1606dc0f1255675ee9466e98",
        "patch": "@@ -24,7 +24,6 @@ function send_query() {\n             const maxLeafCount = document.getElementById('max_leaf_count').value || null;\n             const minDepth = document.getElementById('min_depth').value || null;\n             const maxDepth = document.getElementById('max_depth').value || null;\n-\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n@@ -37,7 +36,9 @@ function send_query() {\n                 min_leaf_count: minLeafCount,\n                 max_leaf_count: maxLeafCount,\n                 min_depth: minDepth,\n-                max_depth: maxDepth\n+                max_depth: maxDepth,\n+                leaf_feature_name: document.querySelector('#leaf_feature_name').value,\n+                core_feature_name: document.querySelector('#core_feature_name').value\n             };\n             \n             console.log(document.querySelector('#publication_type').value);\n@@ -212,6 +213,10 @@ function clearFilters() {\n     let maxDepth = document.querySelector('#max_depth');\n     minDepth.value = \"\"; \n     maxDepth.value = \"\"; \n+    let leafFeatureName = document.querySelector('#leaf_feature_name');\n+    leafFeatureName.value = \"\";\n+    let coreFeatureName = document.querySelector('#core_feature_name');\n+    coreFeatureName.value = \"\";\n \n \n     // Perform a new search with the reset filters"
      },
      {
        "sha": "fa37bd56d033abe4b84370094d21a3850923875b",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 18,
        "deletions": 3,
        "changes": 21,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/17262cbb9173f93b1606dc0f1255675ee9466e98/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/17262cbb9173f93b1606dc0f1255675ee9466e98/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=17262cbb9173f93b1606dc0f1255675ee9466e98",
        "patch": "@@ -16,6 +16,7 @@ def filter(self, query=\"\", sorting=\"newest\",\n                min_leaf_count=None, max_leaf_count=None,\n                min_depth=None, max_depth=None,\n                min_av_branching_factor=None, max_av_branching_factor=None,\n+               leaf_feature_name=\"\", core_feature_name=\"\",\n                **kwargs):\n         # Normalize and remove unwanted characters\n         normalized_query = unidecode.unidecode(query).lower()\n@@ -73,11 +74,15 @@ def filter(self, query=\"\", sorting=\"newest\",\n         # Order by created_at\n         if sorting == \"oldest\":\n             datasets = datasets.order_by(self.model.created_at.asc())\n+        elif sorting == \"filesize_asc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=False)\n+        elif sorting == \"filesize_desc\":\n+            datasets = datasets.all()\n+            datasets = sorted(datasets, key=lambda ds: ds.get_file_total_size(), reverse=True)\n         else:\n             datasets = datasets.order_by(self.model.created_at.desc())\n \n-        datasets = datasets.all()\n-\n         if min_files is not None:\n             datasets = [dataset for dataset in datasets if dataset.get_files_count() >= min_files]\n         if max_files is not None:\n@@ -94,7 +99,6 @@ def filter(self, query=\"\", sorting=\"newest\",\n                 leaf_count = stats[\"leaf_count\"]\n                 depth = stats[\"max_depth\"]\n                 branching_factor = stats[\"branching_factor\"]\n-                print(dataset_passes_filter)\n \n                 # Aplicar filtros a las estad\u00edsticas del modelo\n                 if ((min_leaf_count is not None and leaf_count < min_leaf_count) or\n@@ -105,6 +109,17 @@ def filter(self, query=\"\", sorting=\"newest\",\n                         (max_av_branching_factor is not None and branching_factor > max_av_branching_factor)):\n                     continue\n \n+                if leaf_feature_name:\n+                    leaf_feature_names = model.get_leaf_feature_names()\n+                    print(leaf_feature_name)\n+                    if leaf_feature_name not in leaf_feature_names:\n+                        continue\n+\n+                if core_feature_name:\n+                    core_feature_names = model.get_core_feature_names()\n+                    if core_feature_name not in core_feature_names:\n+                        continue\n+\n                 dataset_passes_filter = True\n                 print(\"dataset_passes_filter\")\n                 break"
      },
      {
        "sha": "ecbed8e137e0f7d447b1b710e823b81cf204c427",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/17262cbb9173f93b1606dc0f1255675ee9466e98/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/17262cbb9173f93b1606dc0f1255675ee9466e98/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=17262cbb9173f93b1606dc0f1255675ee9466e98",
        "patch": "@@ -12,7 +12,10 @@ def filter(self, query=\"\", sorting=\"newest\",\n                min_leaf_count=None, max_leaf_count=None,\n                min_depth=None, max_depth=None,\n                min_av_branching_factor=None,\n-               max_av_branching_factor=None, **kwargs):\n+               max_av_branching_factor=None,\n+               leaf_feature_name=\"\",\n+               core_feature_name=\"\", **kwargs):\n         return self.repository.filter(query, sorting, publication_type, tags, min_files, max_files,\n                                       min_leaf_count, max_leaf_count, min_depth, max_depth,\n-                                      min_av_branching_factor, max_av_branching_factor, **kwargs)\n+                                      min_av_branching_factor, max_av_branching_factor, leaf_feature_name,\n+                                      core_feature_name, **kwargs)"
      },
      {
        "sha": "f062144cdd68583a147b585fa2fa2d66cd94fb46",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 53,
        "deletions": 27,
        "changes": 80,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/17262cbb9173f93b1606dc0f1255675ee9466e98/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/17262cbb9173f93b1606dc0f1255675ee9466e98/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=17262cbb9173f93b1606dc0f1255675ee9466e98",
        "patch": "@@ -54,6 +54,35 @@ <h3 class=\"h3 mb-3\">\n                                        value=\"\" autofocus>\n                             </div>\n                         </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"publication_type\">Filter by publication\n+                                    type</label>\n+                                <select class=\"form-control\" id=\"publication_type\" name=\"publication_type\"\n+                                        required=\"\">\n+                                    <option value=\"any\">Any</option>\n+                                    <option value=\"none\">None</option>\n+                                    <option value=\"annotationcollection\">Annotation Collection</option>\n+                                    <option value=\"book\">Book</option>\n+                                    <option value=\"section\">Book Section</option>\n+                                    <option value=\"conferencepaper\">Conference Paper</option>\n+                                    <option value=\"datamanagementplan\">Data Management Plan</option>\n+                                    <option value=\"article\">Journal Article</option>\n+                                    <option value=\"patent\">Patent</option>\n+                                    <option value=\"preprint\">Preprint</option>\n+                                    <option value=\"deliverable\">Project Deliverable</option>\n+                                    <option value=\"milestone\">Project Milestone</option>\n+                                    <option value=\"proposal\">Proposal</option>\n+                                    <option value=\"report\">Report</option>\n+                                    <option value=\"softwaredocumentation\">Software Documentation</option>\n+                                    <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n+                                    <option value=\"technicalnote\">Technical Note</option>\n+                                    <option value=\"thesis\">Thesis</option>\n+                                    <option value=\"workingpaper\">Working Paper</option>\n+                                    <option value=\"other\">Other</option>\n+                                </select>\n+                            </div>\n+                        </div>\n                         <div class=\"row\">\n                             <div class=\"col-lg-6\">\n                                 <div class=\"mb-3\">\n@@ -115,33 +144,17 @@ <h3 class=\"h3 mb-3\">\n                         </div>\n                         <div class=\"col-lg-12\">\n                             <div class=\"mb-3\">\n-                                <label class=\"form-label\" for=\"publication_type\">Filter by publication\n-                                    type</label>\n-                                <select class=\"form-control\" id=\"publication_type\" name=\"publication_type\"\n-                                        required=\"\">\n-                                    <option value=\"any\">Any</option>\n-                                    <option value=\"none\">None</option>\n-                                    <option value=\"annotationcollection\">Annotation Collection</option>\n-                                    <option value=\"book\">Book</option>\n-                                    <option value=\"section\">Book Section</option>\n-                                    <option value=\"conferencepaper\">Conference Paper</option>\n-                                    <option value=\"datamanagementplan\">Data Management Plan</option>\n-                                    <option value=\"article\">Journal Article</option>\n-                                    <option value=\"patent\">Patent</option>\n-                                    <option value=\"preprint\">Preprint</option>\n-                                    <option value=\"deliverable\">Project Deliverable</option>\n-                                    <option value=\"milestone\">Project Milestone</option>\n-                                    <option value=\"proposal\">Proposal</option>\n-                                    <option value=\"report\">Report</option>\n-                                    <option value=\"softwaredocumentation\">Software Documentation</option>\n-                                    <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n-                                    <option value=\"technicalnote\">Technical Note</option>\n-                                    <option value=\"thesis\">Thesis</option>\n-                                    <option value=\"workingpaper\">Working Paper</option>\n-                                    <option value=\"other\">Other</option>\n-                                </select>\n+                                <label class=\"form-label\" for=\"leaf_feature_name\">Leaf Feature Name:</label>\n+                                <input type=\"text\" id=\"leaf_feature_name\" name=\"leaf_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter leaf feature name\">\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"core_feature_name\">Core Feature Name:</label>\n+                                <input type=\"text\" id=\"core_feature_name\" name=\"core_feature_name\" class=\"form-control\" \n+                                       placeholder=\"Enter core feature name\">\n                             </div>\n-\n                         </div>\n \n                     </div>\n@@ -166,7 +179,20 @@ <h3 class=\"h3 mb-3\">\n                                     </span>\n                                 </label>\n                             </div>\n-                            \n+                            <div>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_asc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Smallest first\n+                                    </span>\n+                                </label>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"filesize_desc\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                        Largest first\n+                                    </span>\n+                                </label>\n+                            </div>\n                         </div>\n \n                     </div>"
      },
      {
        "sha": "9ed55640f52bbfc44bf4d95f0b7cd378428fd9e5",
        "filename": "app/modules/featuremodel/models.py",
        "status": "modified",
        "additions": 23,
        "deletions": 1,
        "changes": 24,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/17262cbb9173f93b1606dc0f1255675ee9466e98/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/17262cbb9173f93b1606dc0f1255675ee9466e98/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Fmodels.py?ref=17262cbb9173f93b1606dc0f1255675ee9466e98",
        "patch": "@@ -4,7 +4,7 @@\n from app.modules.dataset.models import Author, PublicationType\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader\n from flamapy.metamodels.fm_metamodel.operations import FMAverageBranchingFactor, FMCountLeafs\n-from flamapy.metamodels.fm_metamodel.operations import FMMaxDepthTree\n+from flamapy.metamodels.fm_metamodel.operations import FMMaxDepthTree, FMLeafFeatures, FMCoreFeatures\n \n \n class FeatureModel(db.Model):\n@@ -40,6 +40,28 @@ def calculate_statistics(self):\n             \"branching_factor\": average_branching_factor\n         }\n \n+    def get_leaf_feature_names(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        leaf_features_operation = FMLeafFeatures()\n+        leaf_features_operation.execute(fm)\n+        leaf_features = leaf_features_operation.get_result()\n+\n+        return [feature.name for feature in leaf_features]\n+\n+    def get_core_feature_names(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        core_features_operation = FMCoreFeatures()\n+        core_features_operation.execute(fm)\n+        core_features = core_features_operation.get_result()\n+\n+        return [feature.name for feature in core_features]\n+\n \n class FMMetaData(db.Model):\n     id = db.Column(db.Integer, primary_key=True)"
      }
    ]
  },
  {
    "sha": "c0d47f94d525bb619130d51138ceb39f585b83cd",
    "node_id": "C_kwDONDG85doAKGMwZDQ3Zjk0ZDUyNWJiNjE5MTMwZDUxMTM4Y2ViMzlmNTg1YjgzY2Q",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-01T16:17:08Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-01T16:17:08Z"
      },
      "message": "fix: added bibtex export to unsynchronized datasets",
      "tree": {
        "sha": "640768ae659e9358e59afbc97f1bedf7516456c5",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/640768ae659e9358e59afbc97f1bedf7516456c5"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/c0d47f94d525bb619130d51138ceb39f585b83cd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c0d47f94d525bb619130d51138ceb39f585b83cd",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c0d47f94d525bb619130d51138ceb39f585b83cd",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c0d47f94d525bb619130d51138ceb39f585b83cd/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d5d5bd79ad5cd9c309e543b56bcf0b16be39294e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d5d5bd79ad5cd9c309e543b56bcf0b16be39294e",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d5d5bd79ad5cd9c309e543b56bcf0b16be39294e"
      }
    ],
    "files": [
      {
        "sha": "83912e71bdd7d9910afb53f0fdf0a67a9b272be7",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 19,
        "deletions": 2,
        "changes": 21,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c0d47f94d525bb619130d51138ceb39f585b83cd/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c0d47f94d525bb619130d51138ceb39f585b83cd/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=c0d47f94d525bb619130d51138ceb39f585b83cd",
        "patch": "@@ -305,7 +305,6 @@ def subdomain_index(doi):\n     \n     lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n     lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n-    # lineas_preview += \",\\n  \".join([k_ + \" = {\" + v_+ \"}\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n \n     bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n \n@@ -327,5 +326,23 @@ def get_unsynchronized_dataset(dataset_id):\n \n     if not dataset:\n         abort(404)\n+    \n+    ds_meta_data = dsmetadata_service.get_by_id(dataset.ds_meta_data_id)\n+\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n+    \n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n \n-    return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name)"
      }
    ]
  },
  {
    "sha": "35cd3e1ccf04d8d24ffa6cbe48c1c6440c30f391",
    "node_id": "C_kwDONDG85doAKDM1Y2QzZTFjY2YwNGQ4ZDI0ZmZhNmNiZTQ4YzFjNjQ0MGMzMGYzOTE",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-01T14:56:58Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-01T14:56:58Z"
      },
      "message": "fix(requirements): Flask-Dance added",
      "tree": {
        "sha": "8b695dc503b31c8b830cb3c1107fed1dcf7f21d0",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/8b695dc503b31c8b830cb3c1107fed1dcf7f21d0"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/35cd3e1ccf04d8d24ffa6cbe48c1c6440c30f391",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/35cd3e1ccf04d8d24ffa6cbe48c1c6440c30f391",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/35cd3e1ccf04d8d24ffa6cbe48c1c6440c30f391",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/35cd3e1ccf04d8d24ffa6cbe48c1c6440c30f391/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f3349a31e3bc7823d1084e2a26ac9fe0a1156dd3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f3349a31e3bc7823d1084e2a26ac9fe0a1156dd3",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f3349a31e3bc7823d1084e2a26ac9fe0a1156dd3"
      }
    ],
    "files": [
      {
        "sha": "341be806fa39e544b166ce43d7a1f837351886eb",
        "filename": "requirements.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/35cd3e1ccf04d8d24ffa6cbe48c1c6440c30f391/requirements.txt",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/35cd3e1ccf04d8d24ffa6cbe48c1c6440c30f391/requirements.txt",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/requirements.txt?ref=35cd3e1ccf04d8d24ffa6cbe48c1c6440c30f391",
        "patch": "@@ -19,6 +19,7 @@ dd==0.6.0\n dnspython==2.6.1\n docker==7.1.0\n email_validator==2.2.0\n+Flask-Dance==7.1.0\n Faker==26.0.0\n flake8==7.1.0\n flamapy==2.0.0.dev1"
      }
    ]
  },
  {
    "sha": "f3349a31e3bc7823d1084e2a26ac9fe0a1156dd3",
    "node_id": "C_kwDONDG85doAKGYzMzQ5YTMxZTNiYzc4MjNkMTA4NGUyYTI2YWM5ZmUwYTExNTZkZDM",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-01T14:43:01Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-12-01T14:48:42Z"
      },
      "message": "fix(dataset): fixed paths",
      "tree": {
        "sha": "bc5237de022b028456f6772eed52d165d2557783",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/bc5237de022b028456f6772eed52d165d2557783"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/f3349a31e3bc7823d1084e2a26ac9fe0a1156dd3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f3349a31e3bc7823d1084e2a26ac9fe0a1156dd3",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f3349a31e3bc7823d1084e2a26ac9fe0a1156dd3",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f3349a31e3bc7823d1084e2a26ac9fe0a1156dd3/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5557241ba83368a0a31d28cb2ccde456efa75f7a"
      }
    ],
    "files": [
      {
        "sha": "0e638480d945f148d3dcf7b80e2dd03872102cff",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f3349a31e3bc7823d1084e2a26ac9fe0a1156dd3/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f3349a31e3bc7823d1084e2a26ac9fe0a1156dd3/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=f3349a31e3bc7823d1084e2a26ac9fe0a1156dd3",
        "patch": "@@ -374,8 +374,8 @@ def commit(dataset_id):\n         \n         for archivo in all_files:\n             \n-            ruta_archivo_origen = f\"/home/javier/uvlhub/app/modules/dataset/uvl_examples/{archivo.name}\"\n-            #ruta_archivo_origen = archivo.get_path()\n+            #ruta_archivo_origen = f\"/home/javier/uvlhub/app/modules/dataset/uvl_examples/{archivo.name}\"\n+            ruta_archivo_origen = archivo.get_path()\n             ruta_destino_archivo = os.path.join(ruta_carpeta, os.path.basename(ruta_archivo_origen))\n             shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n             subprocess.run(f\"git add {ruta_carpeta}/{archivo.name}\",cwd=ruta_repositorio, check=True, shell=True)\n@@ -406,8 +406,8 @@ def commit_file(file_id):\n  \n         hubfile_repository = HubfileRepository()\n         hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n-        #ruta_archivo_origen = hubfile.get_path()\n-        ruta_archivo_origen = f\"/home/javier/uvlhub/app/modules/dataset/uvl_examples/{hubfile.name}\"\n+        ruta_archivo_origen = hubfile.get_path()\n+        #ruta_archivo_origen = f\"/home/javier/uvlhub/app/modules/dataset/uvl_examples/{hubfile.name}\"\n         ruta_destino_archivo = os.path.join(ruta_repositorio, hubfile.name)\n         shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n         subprocess.run(f\"git add {ruta_repositorio}/{hubfile.name}\",cwd=ruta_repositorio, check=True, shell=True)"
      }
    ]
  },
  {
    "sha": "1f51be70959b5772c92b3f9647b24f5b65acf8ff",
    "node_id": "C_kwDONDG85doAKDFmNTFiZTcwOTU5YjU3NzJjOTJiM2Y5NjQ3YjI0ZjViNjVhY2Y4ZmY",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-01T09:15:41Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-12-01T09:15:41Z"
      },
      "message": "fix: updated render workflow",
      "tree": {
        "sha": "0c98858343007001cdcf7b11e5ebd3da2b886994",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/0c98858343007001cdcf7b11e5ebd3da2b886994"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/1f51be70959b5772c92b3f9647b24f5b65acf8ff",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/1f51be70959b5772c92b3f9647b24f5b65acf8ff",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/1f51be70959b5772c92b3f9647b24f5b65acf8ff",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/1f51be70959b5772c92b3f9647b24f5b65acf8ff/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f2adecb17531f044870f3d2301ee000b88584083",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f2adecb17531f044870f3d2301ee000b88584083",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f2adecb17531f044870f3d2301ee000b88584083"
      }
    ],
    "files": [
      {
        "sha": "4e0b6d582c564c6bdc86c5371c7924554333f8b2",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/1f51be70959b5772c92b3f9647b24f5b65acf8ff/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/1f51be70959b5772c92b3f9647b24f5b65acf8ff/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=1f51be70959b5772c92b3f9647b24f5b65acf8ff",
        "patch": "@@ -2,8 +2,8 @@ name: Deploy develop branch to Render\n \n on:\n     push:\n-      tags:\n-      - 'v*' \n+      branches:\n+        - develop\n     pull_request:\n       branches:\n         - develop\n@@ -60,8 +60,6 @@ jobs:\n     steps:\n       - name: Check out the repo\n         uses: actions/checkout@v4\n-        with:\n-          ref: 'develop'\n \n       - name: Deploy to Render\n         env:"
      }
    ]
  },
  {
    "sha": "f2adecb17531f044870f3d2301ee000b88584083",
    "node_id": "C_kwDONDG85doAKGYyYWRlY2IxNzUzMWYwNDQ4NzBmM2QyMzAxZWUwMDBiODg1ODQwODM",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-11-30T17:40:07Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-11-30T17:40:07Z"
      },
      "message": "fix: updated render workflow to trigger with develop branch",
      "tree": {
        "sha": "35591be92da7bdc68673811ebf702c23dcdcc597",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/35591be92da7bdc68673811ebf702c23dcdcc597"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/f2adecb17531f044870f3d2301ee000b88584083",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f2adecb17531f044870f3d2301ee000b88584083",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f2adecb17531f044870f3d2301ee000b88584083",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f2adecb17531f044870f3d2301ee000b88584083/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b"
      }
    ],
    "files": [
      {
        "sha": "b658ab9780d1dc99c03ff1a081f89d9b35f0d999",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f2adecb17531f044870f3d2301ee000b88584083/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f2adecb17531f044870f3d2301ee000b88584083/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=f2adecb17531f044870f3d2301ee000b88584083",
        "patch": "@@ -1,12 +1,12 @@\n-name: Deploy to Render\n+name: Deploy develop branch to Render\n \n on:\n     push:\n       tags:\n       - 'v*' \n     pull_request:\n       branches:\n-        - main\n+        - develop\n \n jobs:\n "
      }
    ]
  },
  {
    "sha": "5557241ba83368a0a31d28cb2ccde456efa75f7a",
    "node_id": "C_kwDONDG85doAKDU1NTcyNDFiYTgzMzY4YTBhMzFkMjhjYjJjY2RlNDU2ZWZhNzVmN2E",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-11-30T07:34:11Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-11-30T07:34:11Z"
      },
      "message": "Merge branch 'develop' into feature-sync-with-github",
      "tree": {
        "sha": "a7af85b4ce15040d1291a9b73c047dc7f77105b9",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a7af85b4ce15040d1291a9b73c047dc7f77105b9"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/5557241ba83368a0a31d28cb2ccde456efa75f7a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnSr/zCRC1aQ7uu5UhlAAAIy8QADoCO80G8QZWITEkc8SPkai8\nTWi9EkcwQLFo06/JuW2qa1QYlxLAMhM03haZKRXKm19vHCennPaUqLizLe7bpk85\nXICtXZpZiEeR/jRT89MOA1GEznJaSDJcSXL2vD9U81xJQgZExT4ZXh/2V0N2PJ4y\nUasG0fSGO+WwddgY7IOFgW7WgNksJ82V/fB9CtT0WDlVditrkx09ZgNzelEIYoWr\nO+P8ANofCFiZdGFWDavNH93X4ejv0LtAKYk248lQmyYLqOLO18kQGT53me/fLtzk\nQI43B6d829GKsf+Q4RqBMpPYXixmKp1fGBZyo6OZMTGg18L/cTtppmW1deTGgjvH\nuOkStPX8wmqyMTi+xba3TOGPgv2xC+S2D9tmYr/2ZEPy20qoDwjZx8n7g5MJomNb\ngX1Sm562W9+Q/zNflJF0cLUv/xP16X7cdlXO+Q4C5jIi+dYaFDQAaY0oKrkGivH1\nMOlmJKPOgC4H319kRxeMnyhmcMJ1FMpO2wFhlrgyd59wTltOoNaeFZC+dgYRdMMJ\nxFFJFA9s6tfmklkunsoZca7hxW6j8kOuAaaLUL5ACSaGMLa7e/pKU8bk2Z83hYQI\neVZvBDuPpUtcW3oWRGyFwa834ljXg/FlFI4ISXD3wf3sv5pt/LfdD2zcIzNmcqGi\nvBL3Y3BbSSkluwdiOfED\n=mF4t\n-----END PGP SIGNATURE-----\n",
        "payload": "tree a7af85b4ce15040d1291a9b73c047dc7f77105b9\nparent a8172c27b42fed23762109f4595cc0af171bb324\nparent c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1732952051 +0100\ncommitter GitHub <noreply@github.com> 1732952051 +0100\n\nMerge branch 'develop' into feature-sync-with-github",
        "verified_at": "2024-11-30T07:34:13Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5557241ba83368a0a31d28cb2ccde456efa75f7a",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5557241ba83368a0a31d28cb2ccde456efa75f7a",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5557241ba83368a0a31d28cb2ccde456efa75f7a/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a8172c27b42fed23762109f4595cc0af171bb324",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a8172c27b42fed23762109f4595cc0af171bb324",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a8172c27b42fed23762109f4595cc0af171bb324"
      },
      {
        "sha": "c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b"
      }
    ],
    "files": [
      {
        "sha": "7a6013bf8ee1dfc7f2da495d18d7b020e9b0d3f0",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5557241ba83368a0a31d28cb2ccde456efa75f7a/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5557241ba83368a0a31d28cb2ccde456efa75f7a/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fbug_report.md?ref=5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "patch": "@@ -0,0 +1,38 @@\n+---\n+name: Bug report\n+about: For bugs you may find\n+title: Brief bug description\n+labels: bug\n+assignees: ''\n+\n+---\n+\n+**Describe the bug**\n+A clear and concise description of what the bug is.\n+\n+**To Reproduce**\n+Steps to reproduce the behavior:\n+1. Go to '...'\n+2. Click on '....'\n+3. Scroll down to '....'\n+4. See error\n+\n+**Expected behavior**\n+A clear and concise description of what you expected to happen.\n+\n+**Screenshots**\n+If applicable, add screenshots to help explain your problem.\n+\n+**Desktop (please complete the following information):**\n+ - OS: [e.g. iOS]\n+ - Browser [e.g. chrome, safari]\n+ - Version [e.g. 22]\n+\n+**Smartphone (please complete the following information):**\n+ - Device: [e.g. iPhone6]\n+ - OS: [e.g. iOS8.1]\n+ - Browser [e.g. stock browser, safari]\n+ - Version [e.g. 22]\n+\n+**Additional context**\n+Add any other context about the problem here."
      },
      {
        "sha": "ca07ee63e773329b8606abfa23190baa1209b303",
        "filename": ".github/ISSUE_TEMPLATE/documentation.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5557241ba83368a0a31d28cb2ccde456efa75f7a/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5557241ba83368a0a31d28cb2ccde456efa75f7a/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fdocumentation.md?ref=5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "patch": "@@ -0,0 +1,11 @@\n+---\n+name: Documentation\n+about: For documents that may need updating\n+title: Update for [document name]\n+labels: documentation\n+assignees: ''\n+\n+---\n+\n+**Name the document and describe the necessary updates**\n+Describe the updates that the document needs"
      },
      {
        "sha": "a4608544700957f9174c6c537bf9664fc3667d94",
        "filename": ".github/ISSUE_TEMPLATE/work-item.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5557241ba83368a0a31d28cb2ccde456efa75f7a/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5557241ba83368a0a31d28cb2ccde456efa75f7a/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fwork-item.md?ref=5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Work Item\n+about: For Work Items\n+title: Work Item name\n+labels: enhancement\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n+\n+**Describe the solution you'd like**\n+A clear and concise description of what you want to happen.\n+\n+**Describe alternatives you've considered**\n+A clear and concise description of any alternative solutions or features you've considered.\n+\n+**Additional context**\n+Add any other context or screenshots about the feature request here."
      },
      {
        "sha": "cecdd33c479807f9136a24c334ed2061c27240a8",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 15,
        "deletions": 13,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5557241ba83368a0a31d28cb2ccde456efa75f7a/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5557241ba83368a0a31d28cb2ccde456efa75f7a/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "patch": "@@ -1,18 +1,20 @@\n-name: Commits Syntax Checker\n+name: Commit Message Check\n \n-on:\n-  pull_request:\n-    branches: [main]\n-    types: [opened, reopened, edited, review_requested, synchronize]\n-  push:\n-    branches:\n-      - \"main\"\n-  workflow_call:\n+on: [push]\n \n jobs:\n-  check:\n-    name: Conventional Commits\n+  commit-check:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@v2\n-      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file\n+      - name: Checkout code\n+        uses: actions/checkout@v1\n+        with:\n+          fetch-depth: 0\n+\n+      - name: Install dependencies\n+        run: npm install @commitlint/config-conventional @commitlint/cli husky\n+\n+      - name: Run CommitLint\n+        run: npx commitlint --from=HEAD~1 --to=HEAD --config @commitlint/config-conventional\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      },
      {
        "sha": "2ad856f8c333908c810762cd71e95c626626bd45",
        "filename": ".github/workflows/render.yml",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5557241ba83368a0a31d28cb2ccde456efa75f7a/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5557241ba83368a0a31d28cb2ccde456efa75f7a/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "patch": "@@ -0,0 +1,83 @@\n+name: Deploy to Render\n+\n+on:\n+    push:\n+      tags:\n+      - 'v*' \n+    pull_request:\n+      branches:\n+        - main\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+      with:\n+        ref: 'develop'\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+        with:\n+          ref: 'develop'\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_DEVELOP }}\n+        run: |\n+          curl \"$deploy_url\"\n+      - name: Send Notification\n+        if: always()\n+        env:\n+          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n+        run: |\n+          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment completed successfully!\"}' $SLACK_WEBHOOK_URL\n+      - name: Send Deployment Failure Notification\n+        if: failure()\n+        env:\n+          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n+        run: |\n+          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment failed!\"}' $SLACK_WEBHOOK_URL\n+      \n\\ No newline at end of file"
      },
      {
        "sha": "8ad25762a0dbb9b820352c6abaf50a7e089c893d",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5557241ba83368a0a31d28cb2ccde456efa75f7a/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5557241ba83368a0a31d28cb2ccde456efa75f7a/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "patch": "@@ -48,5 +48,4 @@ jobs:\n         MARIADB_PASSWORD: uvlhub_password\n         ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n       run: |\n-        pytest app/modules/ --ignore-glob='*selenium*'\n-        \n\\ No newline at end of file\n+        pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      },
      {
        "sha": "4edc9174dc51d519b9495a2c564aabdf49b9f1d5",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 162,
        "deletions": 117,
        "changes": 279,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5557241ba83368a0a31d28cb2ccde456efa75f7a/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5557241ba83368a0a31d28cb2ccde456efa75f7a/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "patch": "@@ -5,6 +5,10 @@ var currentId = 0;\n             document.getElementById(\"upload_dataset\").style.display = \"block\";\n         }\n \n+\tfunction show_check_dataset() {\n+\t\tdocument.getElementById(\"check_dataset\").style.display = \"block\";\n+\t}\n+\n         function generateIncrementalId() {\n             return currentId++;\n         }\n@@ -81,13 +85,14 @@ var currentId = 0;\n             return (titleLength >= 3 && descriptionLength >= 3);\n         }\n \n+\tif (document.getElementById('add_author')) {\n+\t\tdocument.getElementById('add_author').addEventListener('click', function () {\n+\t\t\tlet authors = document.getElementById('authors');\n+\t\t\tlet newAuthor = createAuthorBlock(amount_authors++, \"\");\n+\t\t\tauthors.appendChild(newAuthor);\n+\t\t});\n \n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n+\t}        \n \n         document.addEventListener('click', function (event) {\n             if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n@@ -102,10 +107,14 @@ var currentId = 0;\n             }\n         });\n \n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n+        function show_loading(type) {\n+\t\tif (type===\"check\") {\n+\t\t\tdocument.getElementById(\"check_model_button\").style.display = \"none\";\n+\t\t} else {\n+\t\t\tdocument.getElementById(\"upload_button\").style.display = \"none\";\n+\t\t}\n+\t\tdocument.getElementById(\"loading\").style.display = \"block\";\n+\t}\n \n         function hide_loading() {\n             document.getElementById(\"upload_button\").style.display = \"block\";\n@@ -130,110 +139,146 @@ var currentId = 0;\n \n         window.onload = function () {\n \n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n-\n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n\\ No newline at end of file\n+\t\tif (document.getElementById('check_model_button')) {\n+\n+\t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n+\t\t\t\tconsole.log(\"hi\");\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"check\");\n+\n+\t\t\t\t\n+\t\t\t\tfetch('/dataset/check', {\n+\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\tbody: ''\n+\t\t\t\t})\n+\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\t//window.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t}\n+\t\t\t\t\t})\n+\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t});\n+\t\t\t\tconsole.log(\"yeah\")\n+\n+\t\t\t});\n+\t\t}\n+\t\tif (document.getElementById('upload_button')){\n+\t\t\tdocument.getElementById('upload_button').addEventListener('click', function () {\n+\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"upload\");\n+\n+\t\t\t\t// check title and description\n+\t\t\t\tlet check = check_title_and_description();\n+\n+\t\t\t\tif (check) {\n+\t\t\t\t\t// process data form\n+\t\t\t\t\tconst formData = {};\n+\n+\t\t\t\t\t[\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+\t\t\t\t\t\tconst form = document.getElementById(formId);\n+\t\t\t\t\t\tconst inputs = form.querySelectorAll('input, select, textarea');\n+\t\t\t\t\t\tinputs.forEach(input => {\n+\t\t\t\t\t\t\tif (input.name) {\n+\t\t\t\t\t\t\t\tformData[input.name] = formData[input.name] || [];\n+\t\t\t\t\t\t\t\tformData[input.name].push(input.value);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t});\n+\t\t\t\t\t});\n+\n+\t\t\t\t\tlet formDataJson = JSON.stringify(formData);\n+\t\t\t\t\tconsole.log(formDataJson);\n+\n+\t\t\t\t\tconst csrfToken = document.getElementById('csrf_token').value;\n+\t\t\t\t\tconst formUploadData = new FormData();\n+\t\t\t\t\tformUploadData.append('csrf_token', csrfToken);\n+\n+\t\t\t\t\tfor (let key in formData) {\n+\t\t\t\t\t\tif (formData.hasOwnProperty(key)) {\n+\t\t\t\t\t\t\tformUploadData.set(key, formData[key]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tlet checked_orcid = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_orcid)) {\n+\t\t\t\t\t\tfor (let orcid of formData.author_orcid) {\n+\t\t\t\t\t\t\torcid = orcid.trim();\n+\t\t\t\t\t\t\tif (orcid !== '' && !isValidOrcid(orcid)) {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+\t\t\t\t\t\t\t\tchecked_orcid = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tlet checked_name = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_name)) {\n+\t\t\t\t\t\tfor (let name of formData.author_name) {\n+\t\t\t\t\t\t\tname = name.trim();\n+\t\t\t\t\t\t\tif (name === '') {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"The author's name cannot be empty\");\n+\t\t\t\t\t\t\t\tchecked_name = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tif (checked_orcid && checked_name) {\n+\t\t\t\t\t\tfetch('/dataset/upload', {\n+\t\t\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\t\t\tbody: formUploadData\n+\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\t\t\twindow.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t} else {\n+\t\t\t\t\thide_loading();\n+\t\t\t\t}\n+\n+\n+\t\t\t});\n+\t\t}\n+\t};\n+\n+\n+function isValidOrcid(orcid) {\n+\tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+\treturn orcidRegex.test(orcid);\n+}"
      },
      {
        "sha": "02c4469967e1219d2e716a9c01923f725b290eef",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 66,
        "deletions": 1,
        "changes": 67,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5557241ba83368a0a31d28cb2ccde456efa75f7a/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5557241ba83368a0a31d28cb2ccde456efa75f7a/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "patch": "@@ -123,6 +123,35 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n+@dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n+@login_required\n+def check_dataset():\n+    form = DataSetForm()\n+    if request.method==\"POST\": \n+\n+        temp_folder = current_user.temp_folder()\n+        if not os.path.exists(temp_folder):\n+           return jsonify({\"message\": \"Something went wrong, try again\"}), 400\n+        \n+        filename = os.listdir(temp_folder)[0]\n+        file_path = os.path.join(temp_folder, filename)\n+        \n+        with open(file_path) as f:\n+            indent = 0\n+            x = \"\".join([i for i in f])\n+            print(x)\n+        return jsonify({\"message\": x}),200\n+   \n+    # setting things up for the checker to have only one file available\n+    temp_folder = current_user.temp_folder()\n+    if os.path.exists(temp_folder) and os.path.isdir(temp_folder):\n+            shutil.rmtree(temp_folder)\n+\n+    return render_template(\n+        \"dataset/check_datasets.html\", form = form )\n+\n+\n+\n \n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n@@ -168,6 +197,7 @@ def upload():\n     )\n \n \n+\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()\n@@ -265,9 +295,44 @@ def subdomain_index(doi):\n     # Get dataset\n     dataset = ds_meta_data.data_set\n \n+\n+    # Export DataSet to BibTex\n+    closing_ = \"},\"\n+    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n+    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n+    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n+    \n+    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n+        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    else:\n+        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n+    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n+    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n+\n+    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n+    bibtex_properties.append(\"}\")\n+    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    \n+    max_preview_len = 60\n+    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+\n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+    \n+    n_px = 17*(int(len(bibtex_properties)/2)+1)\n+\n+    page_render = render_template(\"dataset/view_dataset.html\",\n+                    dataset=dataset,\n+                    bibtex_dataset=bibtex_dataset,\n+                    bibtex_preview=bibtex_preview,\n+                    bibtex_preview_start = bibtex_properties[0],\n+                    bibtex_preview_lines=bibtex_properties[1:-1],\n+                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n+                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n+\n+    resp = make_response(page_render)\n+    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp"
      },
      {
        "sha": "9c39a7ba463e67ba1cf726d260f7a84a1d8cbd14",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "added",
        "additions": 286,
        "deletions": 0,
        "changes": 286,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5557241ba83368a0a31d28cb2ccde456efa75f7a/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5557241ba83368a0a31d28cb2ccde456efa75f7a/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "patch": "@@ -0,0 +1,286 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}Check UVL model{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n+\n+    {% if messages %}\n+        <ul>\n+            {% for message in messages %}\n+                <li>{{ message }}</li>\n+            {% endfor %}\n+        </ul>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+\n+            <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n+\n+            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n+                \n+\t\t{{ form.hidden_tag() }}\n+\n+\n+                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n+                    <div id=\"dropzone-text\"></div>\n+                </form>\n+\n+                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n+                    </span>\n+\n+                <ul class=\"mt-2\" id=\"file-list\"></ul>\n+\n+                <script>\n+                    let dropzone = Dropzone.options.myDropzone = {\n+                        url: \"/dataset/file/upload\",\n+                        paramName: 'file',\n+                        maxFilesize: 10,\n+                        acceptedFiles: '.uvl',\n+                        init: function () {\n+\n+\t\t\t\tlet fileList = document.getElementById('file-list');\n+\t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n+\t\t\t\tlet alerts = document.getElementById('alerts');\n+\t\t\t\tthis.on('addedfile', function (file) {\n+\n+\t\t\t\t\tlet ext = file.name.split('.').pop();\n+\t\t\t\t\tif (ext !== 'uvl') {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+\t\t\t\t\tif (fileList.childElementCount > 0) {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+                            });\n+\n+                            this.on('success', function (file, response) {\n+\n+                                let dropzone = this;\n+\n+                                show_upload_dataset();\n+\n+                                console.log(\"File uploaded: \", response);\n+                                // actions when UVL model is uploaded\n+                                let listItem = document.createElement('li');\n+                                let h4Element = document.createElement('h4');\n+                                h4Element.textContent = response.filename;\n+                                listItem.appendChild(h4Element);\n+\n+                                // generate incremental id for form\n+                                let formUniqueId = generateIncrementalId();\n+\n+                               /*\n+                                    ##########################################\n+                                    REMOVE BUTTON\n+                                    ##########################################\n+                                */\n+\n+                                // remove button\n+                                let removeButton = document.createElement('button');\n+                                removeButton.innerHTML = 'Delete model';\n+                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n+                                removeButton.style.borderRadius = '5px';\n+\n+                                removeButton.addEventListener('click', function () {\n+                                    fileList.removeChild(listItem);\n+                                    this.removeFile(file);\n+\n+                                    // Ajax request\n+                                    let xhr = new XMLHttpRequest();\n+                                    xhr.open('POST', '/dataset/file/delete', true);\n+                                    xhr.setRequestHeader('Content-Type', 'application/json');\n+                                    xhr.onload = function () {\n+                                        if (xhr.status === 200) {\n+                                            console.log('Deleted file from server');\n+\n+                                            if (dropzone.files.length === 0) {\n+                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n+                                                clean_upload_errors();\n+                                            }\n+\n+                                        }\n+                                    };\n+                                    xhr.send(JSON.stringify({file: file.name}));\n+                                }.bind(this));\n+\n+                                /*\n+                                    ##########################################\n+                                    APPEND BUTTONS\n+                                    ##########################################\n+                                */\n+                                listItem.appendChild(removeButton);\n+\n+                                /*\n+                                    ##########################################\n+                                    UVL FORM\n+                                    ##########################################\n+                                */\n+\n+                                // create specific form for UVL\n+                                let formContainer = document.createElement('div');\n+                                formContainer.id = formUniqueId + \"_form\";\n+                                formContainer.classList.add('uvl_form', \"mt-3\");\n+                                formContainer.style.display = \"none\";\n+\n+                                formContainer.innerHTML = `\n+                                    <div class=\"row\">\n+                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n+                                        <div class=\"col-12\">\n+                                            <div class=\"row\">\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Title</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Description</label>\n+                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n+                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n+                                                            <option value=\"none\">None</option>\n+                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n+                                                            <option value=\"book\">Book</option>\n+                                                            <option value=\"section\">Book Section</option>\n+                                                            <option value=\"conferencepaper\">Conference Paper</option>\n+                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n+                                                            <option value=\"article\">Journal Article</option>\n+                                                            <option value=\"patent\">Patent</option>\n+                                                            <option value=\"preprint\">Preprint</option>\n+                                                            <option value=\"deliverable\">Project Deliverable</option>\n+                                                            <option value=\"milestone\">Project Milestone</option>\n+                                                            <option value=\"proposal\">Proposal</option>\n+                                                            <option value=\"report\">Report</option>\n+                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n+                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n+                                                            <option value=\"technicalnote\">Technical Note</option>\n+                                                            <option value=\"thesis\">Thesis</option>\n+                                                            <option value=\"workingpaper\">Working Paper</option>\n+                                                            <option value=\"other\">Other</option>\n+                                                        </select>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n+                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">UVL version</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Authors</label>\n+                                                        <div id=\"` + formContainer.id + `_authors\">\n+                                                        </div>\n+                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n+                                                    </div>\n+                                                </div>\n+                                            </div>\n+                                        </div>\n+                                    </div>\n+                                    `;\n+\n+                                listItem.appendChild(formContainer);\n+                                fileList.appendChild(listItem);\n+\n+                            });\n+\n+                            this.on('error', function (file, response) {\n+                                console.error(\"Error uploading file: \", response);\n+                                let alert = document.createElement('p');\n+                                alert.textContent = 'UVL not valid: ' + file.name;\n+                                alerts.appendChild(alert);\n+                                alerts.style.display = 'block';\n+                            });\n+\n+                        }\n+                    };\n+\n+\n+                </script>\n+\n+            </div>\n+        </div>\n+\n+    </div>\n+\n+    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n+\n+        <div class=\"col-12\">\n+\n+            <hr>\n+\n+            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n+\n+            <div style=\"padding-left: 2rem\">\n+\n+                <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n+                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n+                    Upload dataset</button>\n+\n+                <div id=\"loading\" style=\"display: none\">\n+                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n+                    Uploading dataset, please wait...\n+                </div>\n+\n+                <div class=\"row\">\n+                    <div class=\"col-12 mb-3\">\n+\n+                    </div>\n+                </div>\n+\n+                \n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n+\n+                    </span>\n+\n+                <script>\n+                    const upload_button = document.getElementById('check_model_button');\n+\t\t\tupload_button.disabled = false;\n+                </script>\n+\n+            </div>\n+\n+\n+\n+\n+        </div>\n+\n+    </div>\n+\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "b44cb08c3525b339f8ef2a513686f0a8ee93804d",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5557241ba83368a0a31d28cb2ccde456efa75f7a/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5557241ba83368a0a31d28cb2ccde456efa75f7a/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "patch": "@@ -158,6 +158,43 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             </div>\n \n+            {% if bibtex_dataset %}\n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n+                    {{ bibtex_dataset }}\n+                </div>\n+\n+                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n+                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n+                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                        <b>BibTex</b>\n+                    </span>\n+\n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_dataset }}\n+                    </span> -->\n+                   \n+                    \n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_preview }}\n+                    </span> -->\n+                   \n+\n+                    \n+                    <div class=\"doi_text\">\n+                        <div>{{ bibtex_preview_start }}</div>\n+                        {% for bib_line in bibtex_preview_lines %}\n+                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n+                        {% endfor %}\n+                        <div>{{ bibtex_preview_end }}</div>\n+                    </div>\n+                   \n+                </button>\n+            </div>\n+            {% endif %}\n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n             <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n \n@@ -188,6 +225,8 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n             {% endif %}\n \n+            \n+\n         </div>\n \n         <div class=\"card\">"
      },
      {
        "sha": "6a3d5d74165417518ea46c42bc095400cc648683",
        "filename": "app/static/css/own.css",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5557241ba83368a0a31d28cb2ccde456efa75f7a/app%2Fstatic%2Fcss%2Fown.css",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5557241ba83368a0a31d28cb2ccde456efa75f7a/app%2Fstatic%2Fcss%2Fown.css",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fcss%2Fown.css?ref=5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "patch": "@@ -142,8 +142,10 @@\n     background-color: #147ABB;\n     padding: 10px;\n     display: flex;\n-    align-items: center;\n+    flex-direction: column;\n+    align-items: flex-start;\n     transition: background-color 0.3s ease;\n+    text-wrap: wrap;\n }\n \n .doi_button:hover .doi_text {"
      },
      {
        "sha": "5b4ed79e2dafd484efcc562d526721f9cc6eceae",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5557241ba83368a0a31d28cb2ccde456efa75f7a/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5557241ba83368a0a31d28cb2ccde456efa75f7a/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=5557241ba83368a0a31d28cb2ccde456efa75f7a",
        "patch": "@@ -110,6 +110,14 @@\n                         </a>\n                     </li>\n \n+\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.list_dataset' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n+                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n+                                class=\"align-middle\">Check model</span>\n+                        </a>\n+                    </li>\n+\n+\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>\n@@ -317,4 +325,4 @@\n \n </body>\n \n-</html>\n\\ No newline at end of file\n+</html>"
      }
    ]
  },
  {
    "sha": "c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b",
    "node_id": "C_kwDONDG85doAKGMyZjQ1ZmI0ZGNlNDI3ZDdjZDI3MzdmMmNiOTc4NjVmNGNmN2NlMGI",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-11-29T19:30:36Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-11-29T19:30:36Z"
      },
      "message": "fix: updated render workflow to use develop url",
      "tree": {
        "sha": "1783d90bbff78f51be339d0d445fee6f55e29414",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/1783d90bbff78f51be339d0d445fee6f55e29414"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5dcb03ef81e8e2ece83592f0d7c6a743ccb8f42e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5dcb03ef81e8e2ece83592f0d7c6a743ccb8f42e",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5dcb03ef81e8e2ece83592f0d7c6a743ccb8f42e"
      }
    ],
    "files": [
      {
        "sha": "2ad856f8c333908c810762cd71e95c626626bd45",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=c2f45fb4dce427d7cd2737f2cb97865f4cf7ce0b",
        "patch": "@@ -65,7 +65,7 @@ jobs:\n \n       - name: Deploy to Render\n         env:\n-          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_DEVELOP }}\n         run: |\n           curl \"$deploy_url\"\n       - name: Send Notification"
      }
    ]
  },
  {
    "sha": "5dcb03ef81e8e2ece83592f0d7c6a743ccb8f42e",
    "node_id": "C_kwDONDG85doAKDVkY2IwM2VmODFlOGUyZWNlODM1OTJmMGQ3YzZhNzQzY2NiOGY0MmU",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-11-29T17:57:25Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-11-29T17:57:25Z"
      },
      "message": "feat: updated render to use develop branch",
      "tree": {
        "sha": "05cb99dc2a8c75af8161f27444505cb94260e80d",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/05cb99dc2a8c75af8161f27444505cb94260e80d"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/5dcb03ef81e8e2ece83592f0d7c6a743ccb8f42e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5dcb03ef81e8e2ece83592f0d7c6a743ccb8f42e",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5dcb03ef81e8e2ece83592f0d7c6a743ccb8f42e",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5dcb03ef81e8e2ece83592f0d7c6a743ccb8f42e/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc37c4ec3764b8321f4269f382ce352b13d3ea2e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fc37c4ec3764b8321f4269f382ce352b13d3ea2e",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/fc37c4ec3764b8321f4269f382ce352b13d3ea2e"
      }
    ],
    "files": [
      {
        "sha": "2f7c4f940d8cb709a7755fb58a30589bdeca83d4",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5dcb03ef81e8e2ece83592f0d7c6a743ccb8f42e/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5dcb03ef81e8e2ece83592f0d7c6a743ccb8f42e/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=5dcb03ef81e8e2ece83592f0d7c6a743ccb8f42e",
        "patch": "@@ -30,6 +30,8 @@ jobs:\n     steps:\n \n     - uses: actions/checkout@v4\n+      with:\n+        ref: 'develop'\n \n     - uses: actions/setup-python@v5\n       with:\n@@ -58,6 +60,8 @@ jobs:\n     steps:\n       - name: Check out the repo\n         uses: actions/checkout@v4\n+        with:\n+          ref: 'develop'\n \n       - name: Deploy to Render\n         env:"
      }
    ]
  },
  {
    "sha": "fc37c4ec3764b8321f4269f382ce352b13d3ea2e",
    "node_id": "C_kwDONDG85doAKGZjMzdjNGVjMzc2NGI4MzIxZjQyNjlmMzgyY2UzNTJiMTNkM2VhMmU",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-11-29T17:52:21Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-11-29T17:52:21Z"
      },
      "message": "Merge pull request #15 from flamenquin-hub-single/feature-create_workflows\n\nFeature create workflows",
      "tree": {
        "sha": "3db64e7a597ad19b8e47f345f1044bc22e4d0f97",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/3db64e7a597ad19b8e47f345f1044bc22e4d0f97"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/fc37c4ec3764b8321f4269f382ce352b13d3ea2e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnSf9VCRC1aQ7uu5UhlAAAcU4QAEaAYZGUAV/11bm144gJ5n3X\nkAulUQmf1oXRmWGBUImbd7d9zal/ZTj1sE2Jd2OQ9GuvgfnDGZ1cVTKpNVr3K1wm\nPkWjjCdPypPhhmR6vV9X4vWu1kQq73vxYzlc6mAGZ5dnKmTwokJDj8sy3h3sWmsc\nJ+Zl/cT0I4zjhqkEFc4ba/acdRfS6JX4plMttM+jMWjs1Xz+9TizGJqnVZ0o4M9Z\nkIXohBNt20l5nHzqKweNouoG8EIlgZa620DuWIJwLMreOXWKr+lZaKw+ZtAdLy9P\ndkRzhl78r82Rver7B5Fxa8Vmj/E5bK6uksMy62OkrdmZvN+94Gp/I0gN0JZ+Fjhf\nSXiAsrt+hwvbq4uAi5++rD6yczJKNY4020N/0dXJYrbUt7fLEhiv4xcY3nV0NY9r\n3KlBdEiOrwU/sUFnQb9Hn7ICwZhwe0PvNV1Xx2+IL2aOIzfIr9AlA4pzxSCsUIRW\nshzSwBWSc7a2rGrtwNQ0F3ptvk+J6ZTFZbAIsFGnaO4u1YwhKt5sVzUDpbvGhsw5\nsvRQF9qDV7RBc9yl65I9pyon5Jo7bt8imGI4nuHdadSXThbpvdUCtDCO1oizRm7F\nmjcU4pdXzip2mMkkp2rI48mG1oHRfgSHB8A2GghUF6CpnYbYUv6qWs267B4yaILb\nDzQtgyYSIJoaY9FWrvHn\n=CvM5\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 3db64e7a597ad19b8e47f345f1044bc22e4d0f97\nparent aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a\nparent c4ef4f46604ed8c08fc0ca1506915ec9b060bef2\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1732902741 +0100\ncommitter GitHub <noreply@github.com> 1732902741 +0100\n\nMerge pull request #15 from flamenquin-hub-single/feature-create_workflows\n\nFeature create workflows",
        "verified_at": "2024-11-29T17:52:41Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fc37c4ec3764b8321f4269f382ce352b13d3ea2e",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/fc37c4ec3764b8321f4269f382ce352b13d3ea2e",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fc37c4ec3764b8321f4269f382ce352b13d3ea2e/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a"
      },
      {
        "sha": "c4ef4f46604ed8c08fc0ca1506915ec9b060bef2",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2"
      }
    ],
    "files": [
      {
        "sha": "cecdd33c479807f9136a24c334ed2061c27240a8",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 15,
        "deletions": 13,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/fc37c4ec3764b8321f4269f382ce352b13d3ea2e/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/fc37c4ec3764b8321f4269f382ce352b13d3ea2e/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=fc37c4ec3764b8321f4269f382ce352b13d3ea2e",
        "patch": "@@ -1,18 +1,20 @@\n-name: Commits Syntax Checker\n+name: Commit Message Check\n \n-on:\n-  pull_request:\n-    branches: [main]\n-    types: [opened, reopened, edited, review_requested, synchronize]\n-  push:\n-    branches:\n-      - \"main\"\n-  workflow_call:\n+on: [push]\n \n jobs:\n-  check:\n-    name: Conventional Commits\n+  commit-check:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@v2\n-      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file\n+      - name: Checkout code\n+        uses: actions/checkout@v1\n+        with:\n+          fetch-depth: 0\n+\n+      - name: Install dependencies\n+        run: npm install @commitlint/config-conventional @commitlint/cli husky\n+\n+      - name: Run CommitLint\n+        run: npx commitlint --from=HEAD~1 --to=HEAD --config @commitlint/config-conventional\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      },
      {
        "sha": "f4e983893e1b2152433c609db453d6ac3e1c883d",
        "filename": ".github/workflows/render.yml",
        "status": "added",
        "additions": 79,
        "deletions": 0,
        "changes": 79,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/fc37c4ec3764b8321f4269f382ce352b13d3ea2e/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/fc37c4ec3764b8321f4269f382ce352b13d3ea2e/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=fc37c4ec3764b8321f4269f382ce352b13d3ea2e",
        "patch": "@@ -0,0 +1,79 @@\n+name: Deploy to Render\n+\n+on:\n+    push:\n+      tags:\n+      - 'v*' \n+    pull_request:\n+      branches:\n+        - main\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+        run: |\n+          curl \"$deploy_url\"\n+      - name: Send Notification\n+        if: always()\n+        env:\n+          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n+        run: |\n+          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment completed successfully!\"}' $SLACK_WEBHOOK_URL\n+      - name: Send Deployment Failure Notification\n+        if: failure()\n+        env:\n+          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n+        run: |\n+          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment failed!\"}' $SLACK_WEBHOOK_URL\n+      \n\\ No newline at end of file"
      },
      {
        "sha": "4fa0ff24534f55b52d3f9f6a37ddab522612f79a",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/fc37c4ec3764b8321f4269f382ce352b13d3ea2e/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/fc37c4ec3764b8321f4269f382ce352b13d3ea2e/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=fc37c4ec3764b8321f4269f382ce352b13d3ea2e",
        "patch": "@@ -47,4 +47,4 @@ jobs:\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n       run: |\n-        pytest app/modules/ --ignore-glob='*selenium*'\n+        pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      }
    ]
  },
  {
    "sha": "aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
    "node_id": "C_kwDONDG85doAKGFhYWZmNThkNGU5YWM3Y2YwM2RjNDkzZTc0OWM0MDY4ZmNlM2ZkNGE",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-11-29T15:52:54Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-11-29T15:52:54Z"
      },
      "message": "Merge pull request #13 from flamenquin-hub-single/develop\n\nfeat: Implemented 2 Work Items and added issue templates",
      "tree": {
        "sha": "0d4c0d844151b24e421e5806f3e8c3b2c2401411",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/0d4c0d844151b24e421e5806f3e8c3b2c2401411"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnSeNWCRC1aQ7uu5UhlAAAXOcQAED+VZpiFYmt3htzpRt17+9c\n1AolCscF0NcKhV/CJXGoeFx5tz+XW3hEo3akRMJZ0DMtvjnR1Cp+8POOBCBCo6kl\n4PJS66NjLsc3J+ndUzQRH8sNYX1NYi9Ho/lCHi6090ar3JWk7ie7jMLIzvv4d0jP\nWBsGfm6e/lYjEHlZqcplFw3Y3ooTH+iI3wLiJxsfMaQ/5MRsfyFpSjTrVCA+3dlr\n0FP4zxLfA/WxkDjdQFV0HO3Jl7dkAR0Xs5Hy9B3/mACwYTPSUYWrPdTx6iw7wTSP\nG0VuscjnkBcz7GfNrH+Iauymb7zmF9nm3ZaJR+q/QSFmKVomAKBj80Jzv22usijs\nFpXWgiuojE4XUaFruG9ubCweFekzGLmXFqbqxvq5RHTYnEOLhvvP2hgajn+88K06\nnHGu6ZQ58Rl602VLRYxzvnAmPYCa5qTC2GUWxWWKph7+re69an2pS6OZx3CKR94/\nvh9xXYTw+E+LVHYS8a93rv833enNsKS/q4WPLG/exVj7VqQzKA/p1FlGPqSmjXGB\nt9kbd0jEe96BfeMGrmkDj8t1PCvGF8zTrbobRuZ87IdDr2dHhAmd+7Yny4owPTzb\n+XByXIrbw3Di0odpXaq2+PJwuLV7KwZAh5b8Ji/Vm/44a2juhoET8cbSLX1OL+vp\nAv3NQVAWhAtf/8+/bkr5\n=unPx\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 0d4c0d844151b24e421e5806f3e8c3b2c2401411\nparent 68bda8a260f5f4856b774b4ffe9186a072feb08b\nparent 722d52117374611b812d6a91cc77682da2a5afe2\nauthor vicgrabru <91720565+vicgrabru@users.noreply.github.com> 1732895574 +0100\ncommitter GitHub <noreply@github.com> 1732895574 +0100\n\nMerge pull request #13 from flamenquin-hub-single/develop\n\nfeat: Implemented 2 Work Items and added issue templates",
        "verified_at": "2024-11-29T15:57:56Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/68bda8a260f5f4856b774b4ffe9186a072feb08b"
      },
      {
        "sha": "722d52117374611b812d6a91cc77682da2a5afe2",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/722d52117374611b812d6a91cc77682da2a5afe2",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/722d52117374611b812d6a91cc77682da2a5afe2"
      }
    ],
    "files": [
      {
        "sha": "7a6013bf8ee1dfc7f2da495d18d7b020e9b0d3f0",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fbug_report.md?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -0,0 +1,38 @@\n+---\n+name: Bug report\n+about: For bugs you may find\n+title: Brief bug description\n+labels: bug\n+assignees: ''\n+\n+---\n+\n+**Describe the bug**\n+A clear and concise description of what the bug is.\n+\n+**To Reproduce**\n+Steps to reproduce the behavior:\n+1. Go to '...'\n+2. Click on '....'\n+3. Scroll down to '....'\n+4. See error\n+\n+**Expected behavior**\n+A clear and concise description of what you expected to happen.\n+\n+**Screenshots**\n+If applicable, add screenshots to help explain your problem.\n+\n+**Desktop (please complete the following information):**\n+ - OS: [e.g. iOS]\n+ - Browser [e.g. chrome, safari]\n+ - Version [e.g. 22]\n+\n+**Smartphone (please complete the following information):**\n+ - Device: [e.g. iPhone6]\n+ - OS: [e.g. iOS8.1]\n+ - Browser [e.g. stock browser, safari]\n+ - Version [e.g. 22]\n+\n+**Additional context**\n+Add any other context about the problem here."
      },
      {
        "sha": "ca07ee63e773329b8606abfa23190baa1209b303",
        "filename": ".github/ISSUE_TEMPLATE/documentation.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fdocumentation.md?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -0,0 +1,11 @@\n+---\n+name: Documentation\n+about: For documents that may need updating\n+title: Update for [document name]\n+labels: documentation\n+assignees: ''\n+\n+---\n+\n+**Name the document and describe the necessary updates**\n+Describe the updates that the document needs"
      },
      {
        "sha": "a4608544700957f9174c6c537bf9664fc3667d94",
        "filename": ".github/ISSUE_TEMPLATE/work-item.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fwork-item.md?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Work Item\n+about: For Work Items\n+title: Work Item name\n+labels: enhancement\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n+\n+**Describe the solution you'd like**\n+A clear and concise description of what you want to happen.\n+\n+**Describe alternatives you've considered**\n+A clear and concise description of any alternative solutions or features you've considered.\n+\n+**Additional context**\n+Add any other context or screenshots about the feature request here."
      },
      {
        "sha": "4edc9174dc51d519b9495a2c564aabdf49b9f1d5",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 162,
        "deletions": 117,
        "changes": 279,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -5,6 +5,10 @@ var currentId = 0;\n             document.getElementById(\"upload_dataset\").style.display = \"block\";\n         }\n \n+\tfunction show_check_dataset() {\n+\t\tdocument.getElementById(\"check_dataset\").style.display = \"block\";\n+\t}\n+\n         function generateIncrementalId() {\n             return currentId++;\n         }\n@@ -81,13 +85,14 @@ var currentId = 0;\n             return (titleLength >= 3 && descriptionLength >= 3);\n         }\n \n+\tif (document.getElementById('add_author')) {\n+\t\tdocument.getElementById('add_author').addEventListener('click', function () {\n+\t\t\tlet authors = document.getElementById('authors');\n+\t\t\tlet newAuthor = createAuthorBlock(amount_authors++, \"\");\n+\t\t\tauthors.appendChild(newAuthor);\n+\t\t});\n \n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n+\t}        \n \n         document.addEventListener('click', function (event) {\n             if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n@@ -102,10 +107,14 @@ var currentId = 0;\n             }\n         });\n \n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n+        function show_loading(type) {\n+\t\tif (type===\"check\") {\n+\t\t\tdocument.getElementById(\"check_model_button\").style.display = \"none\";\n+\t\t} else {\n+\t\t\tdocument.getElementById(\"upload_button\").style.display = \"none\";\n+\t\t}\n+\t\tdocument.getElementById(\"loading\").style.display = \"block\";\n+\t}\n \n         function hide_loading() {\n             document.getElementById(\"upload_button\").style.display = \"block\";\n@@ -130,110 +139,146 @@ var currentId = 0;\n \n         window.onload = function () {\n \n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n-\n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n\\ No newline at end of file\n+\t\tif (document.getElementById('check_model_button')) {\n+\n+\t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n+\t\t\t\tconsole.log(\"hi\");\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"check\");\n+\n+\t\t\t\t\n+\t\t\t\tfetch('/dataset/check', {\n+\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\tbody: ''\n+\t\t\t\t})\n+\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\t//window.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t}\n+\t\t\t\t\t})\n+\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t});\n+\t\t\t\tconsole.log(\"yeah\")\n+\n+\t\t\t});\n+\t\t}\n+\t\tif (document.getElementById('upload_button')){\n+\t\t\tdocument.getElementById('upload_button').addEventListener('click', function () {\n+\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"upload\");\n+\n+\t\t\t\t// check title and description\n+\t\t\t\tlet check = check_title_and_description();\n+\n+\t\t\t\tif (check) {\n+\t\t\t\t\t// process data form\n+\t\t\t\t\tconst formData = {};\n+\n+\t\t\t\t\t[\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+\t\t\t\t\t\tconst form = document.getElementById(formId);\n+\t\t\t\t\t\tconst inputs = form.querySelectorAll('input, select, textarea');\n+\t\t\t\t\t\tinputs.forEach(input => {\n+\t\t\t\t\t\t\tif (input.name) {\n+\t\t\t\t\t\t\t\tformData[input.name] = formData[input.name] || [];\n+\t\t\t\t\t\t\t\tformData[input.name].push(input.value);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t});\n+\t\t\t\t\t});\n+\n+\t\t\t\t\tlet formDataJson = JSON.stringify(formData);\n+\t\t\t\t\tconsole.log(formDataJson);\n+\n+\t\t\t\t\tconst csrfToken = document.getElementById('csrf_token').value;\n+\t\t\t\t\tconst formUploadData = new FormData();\n+\t\t\t\t\tformUploadData.append('csrf_token', csrfToken);\n+\n+\t\t\t\t\tfor (let key in formData) {\n+\t\t\t\t\t\tif (formData.hasOwnProperty(key)) {\n+\t\t\t\t\t\t\tformUploadData.set(key, formData[key]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tlet checked_orcid = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_orcid)) {\n+\t\t\t\t\t\tfor (let orcid of formData.author_orcid) {\n+\t\t\t\t\t\t\torcid = orcid.trim();\n+\t\t\t\t\t\t\tif (orcid !== '' && !isValidOrcid(orcid)) {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+\t\t\t\t\t\t\t\tchecked_orcid = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tlet checked_name = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_name)) {\n+\t\t\t\t\t\tfor (let name of formData.author_name) {\n+\t\t\t\t\t\t\tname = name.trim();\n+\t\t\t\t\t\t\tif (name === '') {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"The author's name cannot be empty\");\n+\t\t\t\t\t\t\t\tchecked_name = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tif (checked_orcid && checked_name) {\n+\t\t\t\t\t\tfetch('/dataset/upload', {\n+\t\t\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\t\t\tbody: formUploadData\n+\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\t\t\twindow.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t} else {\n+\t\t\t\t\thide_loading();\n+\t\t\t\t}\n+\n+\n+\t\t\t});\n+\t\t}\n+\t};\n+\n+\n+function isValidOrcid(orcid) {\n+\tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+\treturn orcidRegex.test(orcid);\n+}"
      },
      {
        "sha": "a2b1204eeb812d4ea6f9c9dd9d85aa28c0341c11",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 66,
        "deletions": 1,
        "changes": 67,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -117,6 +117,35 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n+@dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n+@login_required\n+def check_dataset():\n+    form = DataSetForm()\n+    if request.method==\"POST\": \n+\n+        temp_folder = current_user.temp_folder()\n+        if not os.path.exists(temp_folder):\n+           return jsonify({\"message\": \"Something went wrong, try again\"}), 400\n+        \n+        filename = os.listdir(temp_folder)[0]\n+        file_path = os.path.join(temp_folder, filename)\n+        \n+        with open(file_path) as f:\n+            indent = 0\n+            x = \"\".join([i for i in f])\n+            print(x)\n+        return jsonify({\"message\": x}),200\n+   \n+    # setting things up for the checker to have only one file available\n+    temp_folder = current_user.temp_folder()\n+    if os.path.exists(temp_folder) and os.path.isdir(temp_folder):\n+            shutil.rmtree(temp_folder)\n+\n+    return render_template(\n+        \"dataset/check_datasets.html\", form = form )\n+\n+\n+\n \n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n@@ -162,6 +191,7 @@ def upload():\n     )\n \n \n+\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()\n@@ -259,9 +289,44 @@ def subdomain_index(doi):\n     # Get dataset\n     dataset = ds_meta_data.data_set\n \n+\n+    # Export DataSet to BibTex\n+    closing_ = \"},\"\n+    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n+    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n+    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n+    \n+    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n+        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    else:\n+        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n+    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n+    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n+\n+    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n+    bibtex_properties.append(\"}\")\n+    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    \n+    max_preview_len = 60\n+    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+\n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+    \n+    n_px = 17*(int(len(bibtex_properties)/2)+1)\n+\n+    page_render = render_template(\"dataset/view_dataset.html\",\n+                    dataset=dataset,\n+                    bibtex_dataset=bibtex_dataset,\n+                    bibtex_preview=bibtex_preview,\n+                    bibtex_preview_start = bibtex_properties[0],\n+                    bibtex_preview_lines=bibtex_properties[1:-1],\n+                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n+                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n+\n+    resp = make_response(page_render)\n+    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp"
      },
      {
        "sha": "9c39a7ba463e67ba1cf726d260f7a84a1d8cbd14",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "added",
        "additions": 286,
        "deletions": 0,
        "changes": 286,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -0,0 +1,286 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}Check UVL model{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n+\n+    {% if messages %}\n+        <ul>\n+            {% for message in messages %}\n+                <li>{{ message }}</li>\n+            {% endfor %}\n+        </ul>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+\n+            <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n+\n+            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n+                \n+\t\t{{ form.hidden_tag() }}\n+\n+\n+                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n+                    <div id=\"dropzone-text\"></div>\n+                </form>\n+\n+                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n+                    </span>\n+\n+                <ul class=\"mt-2\" id=\"file-list\"></ul>\n+\n+                <script>\n+                    let dropzone = Dropzone.options.myDropzone = {\n+                        url: \"/dataset/file/upload\",\n+                        paramName: 'file',\n+                        maxFilesize: 10,\n+                        acceptedFiles: '.uvl',\n+                        init: function () {\n+\n+\t\t\t\tlet fileList = document.getElementById('file-list');\n+\t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n+\t\t\t\tlet alerts = document.getElementById('alerts');\n+\t\t\t\tthis.on('addedfile', function (file) {\n+\n+\t\t\t\t\tlet ext = file.name.split('.').pop();\n+\t\t\t\t\tif (ext !== 'uvl') {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+\t\t\t\t\tif (fileList.childElementCount > 0) {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+                            });\n+\n+                            this.on('success', function (file, response) {\n+\n+                                let dropzone = this;\n+\n+                                show_upload_dataset();\n+\n+                                console.log(\"File uploaded: \", response);\n+                                // actions when UVL model is uploaded\n+                                let listItem = document.createElement('li');\n+                                let h4Element = document.createElement('h4');\n+                                h4Element.textContent = response.filename;\n+                                listItem.appendChild(h4Element);\n+\n+                                // generate incremental id for form\n+                                let formUniqueId = generateIncrementalId();\n+\n+                               /*\n+                                    ##########################################\n+                                    REMOVE BUTTON\n+                                    ##########################################\n+                                */\n+\n+                                // remove button\n+                                let removeButton = document.createElement('button');\n+                                removeButton.innerHTML = 'Delete model';\n+                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n+                                removeButton.style.borderRadius = '5px';\n+\n+                                removeButton.addEventListener('click', function () {\n+                                    fileList.removeChild(listItem);\n+                                    this.removeFile(file);\n+\n+                                    // Ajax request\n+                                    let xhr = new XMLHttpRequest();\n+                                    xhr.open('POST', '/dataset/file/delete', true);\n+                                    xhr.setRequestHeader('Content-Type', 'application/json');\n+                                    xhr.onload = function () {\n+                                        if (xhr.status === 200) {\n+                                            console.log('Deleted file from server');\n+\n+                                            if (dropzone.files.length === 0) {\n+                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n+                                                clean_upload_errors();\n+                                            }\n+\n+                                        }\n+                                    };\n+                                    xhr.send(JSON.stringify({file: file.name}));\n+                                }.bind(this));\n+\n+                                /*\n+                                    ##########################################\n+                                    APPEND BUTTONS\n+                                    ##########################################\n+                                */\n+                                listItem.appendChild(removeButton);\n+\n+                                /*\n+                                    ##########################################\n+                                    UVL FORM\n+                                    ##########################################\n+                                */\n+\n+                                // create specific form for UVL\n+                                let formContainer = document.createElement('div');\n+                                formContainer.id = formUniqueId + \"_form\";\n+                                formContainer.classList.add('uvl_form', \"mt-3\");\n+                                formContainer.style.display = \"none\";\n+\n+                                formContainer.innerHTML = `\n+                                    <div class=\"row\">\n+                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n+                                        <div class=\"col-12\">\n+                                            <div class=\"row\">\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Title</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Description</label>\n+                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n+                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n+                                                            <option value=\"none\">None</option>\n+                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n+                                                            <option value=\"book\">Book</option>\n+                                                            <option value=\"section\">Book Section</option>\n+                                                            <option value=\"conferencepaper\">Conference Paper</option>\n+                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n+                                                            <option value=\"article\">Journal Article</option>\n+                                                            <option value=\"patent\">Patent</option>\n+                                                            <option value=\"preprint\">Preprint</option>\n+                                                            <option value=\"deliverable\">Project Deliverable</option>\n+                                                            <option value=\"milestone\">Project Milestone</option>\n+                                                            <option value=\"proposal\">Proposal</option>\n+                                                            <option value=\"report\">Report</option>\n+                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n+                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n+                                                            <option value=\"technicalnote\">Technical Note</option>\n+                                                            <option value=\"thesis\">Thesis</option>\n+                                                            <option value=\"workingpaper\">Working Paper</option>\n+                                                            <option value=\"other\">Other</option>\n+                                                        </select>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n+                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">UVL version</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Authors</label>\n+                                                        <div id=\"` + formContainer.id + `_authors\">\n+                                                        </div>\n+                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n+                                                    </div>\n+                                                </div>\n+                                            </div>\n+                                        </div>\n+                                    </div>\n+                                    `;\n+\n+                                listItem.appendChild(formContainer);\n+                                fileList.appendChild(listItem);\n+\n+                            });\n+\n+                            this.on('error', function (file, response) {\n+                                console.error(\"Error uploading file: \", response);\n+                                let alert = document.createElement('p');\n+                                alert.textContent = 'UVL not valid: ' + file.name;\n+                                alerts.appendChild(alert);\n+                                alerts.style.display = 'block';\n+                            });\n+\n+                        }\n+                    };\n+\n+\n+                </script>\n+\n+            </div>\n+        </div>\n+\n+    </div>\n+\n+    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n+\n+        <div class=\"col-12\">\n+\n+            <hr>\n+\n+            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n+\n+            <div style=\"padding-left: 2rem\">\n+\n+                <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n+                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n+                    Upload dataset</button>\n+\n+                <div id=\"loading\" style=\"display: none\">\n+                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n+                    Uploading dataset, please wait...\n+                </div>\n+\n+                <div class=\"row\">\n+                    <div class=\"col-12 mb-3\">\n+\n+                    </div>\n+                </div>\n+\n+                \n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n+\n+                    </span>\n+\n+                <script>\n+                    const upload_button = document.getElementById('check_model_button');\n+\t\t\tupload_button.disabled = false;\n+                </script>\n+\n+            </div>\n+\n+\n+\n+\n+        </div>\n+\n+    </div>\n+\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "d6c86796f02635516ddddabf1bd9491dd205e985",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -158,6 +158,43 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             </div>\n \n+            {% if bibtex_dataset %}\n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n+                    {{ bibtex_dataset }}\n+                </div>\n+\n+                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n+                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n+                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                        <b>BibTex</b>\n+                    </span>\n+\n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_dataset }}\n+                    </span> -->\n+                   \n+                    \n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_preview }}\n+                    </span> -->\n+                   \n+\n+                    \n+                    <div class=\"doi_text\">\n+                        <div>{{ bibtex_preview_start }}</div>\n+                        {% for bib_line in bibtex_preview_lines %}\n+                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n+                        {% endfor %}\n+                        <div>{{ bibtex_preview_end }}</div>\n+                    </div>\n+                   \n+                </button>\n+            </div>\n+            {% endif %}\n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n             <div class=\"card-body\" style=\"padding-top: 0px\">\n \n@@ -182,6 +219,8 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n             {% endif %}\n \n+            \n+\n         </div>\n \n         <div class=\"card\">"
      },
      {
        "sha": "6a3d5d74165417518ea46c42bc095400cc648683",
        "filename": "app/static/css/own.css",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/app%2Fstatic%2Fcss%2Fown.css",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/app%2Fstatic%2Fcss%2Fown.css",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fcss%2Fown.css?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -142,8 +142,10 @@\n     background-color: #147ABB;\n     padding: 10px;\n     display: flex;\n-    align-items: center;\n+    flex-direction: column;\n+    align-items: flex-start;\n     transition: background-color 0.3s ease;\n+    text-wrap: wrap;\n }\n \n .doi_button:hover .doi_text {"
      },
      {
        "sha": "59133f56c0ce9befb57f7f8318e60aedafcf0f41",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=aaaff58d4e9ac7cf03dc493e749c4068fce3fd4a",
        "patch": "@@ -110,6 +110,14 @@\n                         </a>\n                     </li>\n \n+\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.list_dataset' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n+                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n+                                class=\"align-middle\">Check model</span>\n+                        </a>\n+                    </li>\n+\n+\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>\n@@ -305,4 +313,4 @@\n \n </body>\n \n-</html>\n\\ No newline at end of file\n+</html>"
      }
    ]
  },
  {
    "sha": "c4ef4f46604ed8c08fc0ca1506915ec9b060bef2",
    "node_id": "C_kwDONDG85doAKGM0ZWY0ZjQ2NjA0ZWQ4YzA4ZmMwY2ExNTA2OTE1ZWM5YjA2MGJlZjI",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-28T17:52:06Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-28T17:52:06Z"
      },
      "message": "fix(workflow): fixed conventional test workflow",
      "tree": {
        "sha": "1315f07174ecefb6df3f6051725774dcfd2713e2",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/1315f07174ecefb6df3f6051725774dcfd2713e2"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9f7bddbab72d14f4f9247e0f6e34d75a49d8aaa9",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9f7bddbab72d14f4f9247e0f6e34d75a49d8aaa9",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/9f7bddbab72d14f4f9247e0f6e34d75a49d8aaa9"
      }
    ],
    "files": [
      {
        "sha": "4fa0ff24534f55b52d3f9f6a37ddab522612f79a",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/c4ef4f46604ed8c08fc0ca1506915ec9b060bef2/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=c4ef4f46604ed8c08fc0ca1506915ec9b060bef2",
        "patch": "@@ -47,4 +47,4 @@ jobs:\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n       run: |\n-        pytest app/modules/ --ignore-glob='*selenium*'\n+        pytest --cov=app/modules --cov-report=term-missing --ignore-glob='*selenium*'"
      }
    ]
  },
  {
    "sha": "a8172c27b42fed23762109f4595cc0af171bb324",
    "node_id": "C_kwDONDG85doAKGE4MTcyYzI3YjQyZmVkMjM3NjIxMDlmNDU5NWNjMGFmMTcxYmIzMjQ",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-28T17:38:49Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-28T17:38:49Z"
      },
      "message": "fix(dataset): some fixes",
      "tree": {
        "sha": "88992716f28a8f92eb3a8ccae0a317ccb9c16644",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/88992716f28a8f92eb3a8ccae0a317ccb9c16644"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/a8172c27b42fed23762109f4595cc0af171bb324",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a8172c27b42fed23762109f4595cc0af171bb324",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a8172c27b42fed23762109f4595cc0af171bb324",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a8172c27b42fed23762109f4595cc0af171bb324/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "078352226dbc7ba82e98b4e05d4a810f8cb5c1fa",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa"
      }
    ],
    "files": [
      {
        "sha": "e3d44c09be2ee9a157df7b743e6b103b0e544a59",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 25,
        "deletions": 11,
        "changes": 36,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a8172c27b42fed23762109f4595cc0af171bb324/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a8172c27b42fed23762109f4595cc0af171bb324/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=a8172c27b42fed23762109f4595cc0af171bb324",
        "patch": "@@ -10,7 +10,6 @@\n from app.modules.profile.services import UserProfileService\n from flask_dance.contrib.github import make_github_blueprint, github\n \n-from app.modules.dataset.repositories import DataSetRepository\n \n authentication_service = AuthenticationService()\n user_profile_service = UserProfileService()\n@@ -78,9 +77,9 @@ def github_login():\n        account_info = github.get('/user/repos')\n        if account_info.ok:\n            account_info_json = account_info.json()\n-           return '<h1>Your github account is already sync with uvlhub</h1>'\n+           return 'Your github account is already sync with uvlhub.'\n \n-   return '<h1>Request failed!</h1>'\n+   return 'Request failed!'\n \n \n @auth_bp.route('/invite', methods=['GET', 'POST'])\n@@ -90,7 +89,7 @@ def invite_user():\n     if account_info.ok:\n         username = account_info.json()['login']\n     else:\n-        return '<h1>First sync your github account</h1>'\n+        return 'First sync your github account.'\n               \n     url = f'https://api.github.com/orgs/uvlhub/invitations'  \n     headers = {\n@@ -114,17 +113,17 @@ def invite_user():\n     response = requests.post(url, json=payload, headers=headers)\n \n     if response.status_code == 201:\n-        return f'Invitaci\u00f3n enviada a {username} exitosamente. Debe aceptarla desde github y una vez pertenezca a nuestra organizaci\u00f3n no tenr\u00e1 que repetir este proceso</h1>'\n+        return f\"Now {username} can join our github organization. Accept it in github. Once joined, you don't have to repeat this process.\"\n         #return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n     \n     elif response.status_code == 404:\n-        return jsonify({\"error\": f\"Usuario {username} no encontrado.\"}), 404\n+        return jsonify({\"error\": f\"Username {username} not found\"}), 404\n     \n     elif response.status_code == 422:\n-        return f'El usuario {username} ya pertenece a nuestra organizaci\u00f3n de github o tiene una invitaci\u00f3n v\u00e1lida para unirse. Compru\u00e9belo desde github'\n+        return f'User {username} already belongs to our github organization or have a valid invitation to join. You have to find out in github.'\n     \n     else:\n-        return jsonify({\"error\": \"No se pudo enviar la invitaci\u00f3n\", \"details\": response.json()}), response.status_code\n+        return jsonify({\"error\": \"Can't send the invitation\", \"details\": response.json()}), response.status_code\n     \n \n \n@@ -136,7 +135,7 @@ def crear_repo():\n     if account_info.ok:\n         username = account_info.json()['login']\n     else:\n-        return '<h1>First sync your github account</h1>'\n+        return 'First sync your github account.'\n \n     comando = f\"gh repo create uvlhub/{username} --public\"\n     url_repo = f\"https://github.com/uvlhub/{username}.git\"\n@@ -147,8 +146,23 @@ def crear_repo():\n         directory = f\"/home/{os.getenv('USER')}/uvl_git/{username}\"\n         os.makedirs(directory, exist_ok=True)\n         subprocess.run(f\"git clone {url_repo} {directory}\",cwd=directory, check=True, shell=True)\n-        return f\"Repositorio '{username}' creado exitosamente en la organizaci\u00f3n uvlhub.\"\n+        return f\"Repository '{username}' created in our github organization correctly.\"\n     \n     except subprocess.CalledProcessError as e:\n-        return f\"El repositorio '{username}' ya est\u00e1 creado. Ahora siempre que su cuenta est\u00e9 sincronizada con github, puede subir desde uvlhub sus archivos a este repositorio.\"\n+        \n+        if e.returncode == 127:\n+            return '''\n+                The command 'gh' is not recognized. Please install GitHub CLI by following these steps in your command line:\n+\n+                    1. Update your package list:\n+                sudo apt update\n+                \n+                    2. Install the GitHub CLI:\n+                sudo apt install gh\n+                \n+                    3. You can verify the installation:\n+                gh --version\n+                '''\n+        \n+        return f\"Repository '{username}' is already created. Now, always you are sync with github, you can push from here your datasets or models to github.\"\n     "
      },
      {
        "sha": "b46e176ec4e1381b84368b738b3f677ea17ea19f",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a8172c27b42fed23762109f4595cc0af171bb324/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a8172c27b42fed23762109f4595cc0af171bb324/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=a8172c27b42fed23762109f4595cc0af171bb324",
        "patch": "@@ -294,7 +294,7 @@ def commit(dataset_id):\n     if account_info.ok:\n         username = account_info.json()['login']\n     else:\n-        return '<h1>First sync your github account</h1>'\n+        return 'First sync your github account.'\n     \n     try:\n             \n@@ -318,10 +318,10 @@ def commit(dataset_id):\n         subprocess.run('git commit -m \"Commit realizado desde uvlhub\"',cwd=ruta_repositorio, check=True, shell=True)\n         subprocess.run(\"git push origin main\",cwd=ruta_repositorio, check=True, shell=True)\n \n-        return \"Los cambios han sido commiteados y enviados al repositorio con \u00e9xito.\"\n+        return \"Dataset have been pushed to github correctly.\"\n \n     except subprocess.CalledProcessError as e:\n-        return f\"Este dataset ya se encuentra en su repositorio de github\"\n+        return f\"This dataset is already in your github repository.\"\n     \n     \n     \n@@ -333,7 +333,7 @@ def commit_file(file_id):\n     if account_info.ok:\n         username = account_info.json()['login']\n     else:\n-        return '<h1>First sync your github account</h1>'\n+        return 'First sync your github account.'\n     \n     try:\n        \n@@ -350,8 +350,8 @@ def commit_file(file_id):\n         subprocess.run('git commit -m \"Commit realizado desde uvlhub\"',cwd=ruta_repositorio, check=True, shell=True)\n         subprocess.run(\"git push origin main\",cwd=ruta_repositorio, check=True, shell=True)\n \n-        return \"Los cambios han sido commiteados y enviados al repositorio con \u00e9xito.\"\n+        return \"This model have been pushed to github correctly.\"\n \n     except subprocess.CalledProcessError as e:\n-        return f\"Este modelo ya se encuentra en su repositorio de github\"\n+        return f\"This model is already in your github repository.\"\n "
      },
      {
        "sha": "13379d7a8cf13db242736196a0afcda49bb0ca0c",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a8172c27b42fed23762109f4595cc0af171bb324/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a8172c27b42fed23762109f4595cc0af171bb324/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=a8172c27b42fed23762109f4595cc0af171bb324",
        "patch": "@@ -179,7 +179,7 @@\n                         </a> \n \n                         <a href=\"{{ url_for('auth.crear_repo') }}\">\n-                            <button>Crea tu repo en la organizacion</button>\n+                            <button>Create your repo in our Github Org</button>\n                         </a> \n \n                         <a class=\"nav-icon dropdown-toggle d-inline-block d-sm-none\" href=\"#\" data-bs-toggle=\"dropdown\">"
      }
    ]
  },
  {
    "sha": "078352226dbc7ba82e98b4e05d4a810f8cb5c1fa",
    "node_id": "C_kwDONDG85doAKDA3ODM1MjIyNmRiYzdiYTgyZTk4YjRlMDVkNGE4MTBmOGNiNWMxZmE",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-25T22:04:50Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-25T22:04:50Z"
      },
      "message": "feat(dataset): New feat, commit individual files, and some fixes",
      "tree": {
        "sha": "a9e776cc9f51eeded36ce3df9c4d8a4c950a00f0",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a9e776cc9f51eeded36ce3df9c4d8a4c950a00f0"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6d391ae6940b46d92fa871b630e7d03256e66f2",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e6d391ae6940b46d92fa871b630e7d03256e66f2",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e6d391ae6940b46d92fa871b630e7d03256e66f2"
      }
    ],
    "files": [
      {
        "sha": "c1a4c6bace88fb22f3e9f693874299b41f82369e",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=078352226dbc7ba82e98b4e05d4a810f8cb5c1fa",
        "patch": "@@ -92,7 +92,6 @@ def invite_user():\n     else:\n         return '<h1>First sync your github account</h1>'\n               \n-    # INVITACION A LA ORGANIZACION\n     url = f'https://api.github.com/orgs/uvlhub/invitations'  \n     headers = {\n         'Authorization': f'token {token_admin}',\n@@ -112,7 +111,6 @@ def invite_user():\n     else:\n         return jsonify({\"error\": f\"Can't find the user: {username}\"}), 404\n \n-    # ENVIA LA INVITACION AL USUARIO\n     response = requests.post(url, json=payload, headers=headers)\n \n     if response.status_code == 201:\n@@ -140,15 +138,17 @@ def crear_repo():\n     else:\n         return '<h1>First sync your github account</h1>'\n \n-    # Definir el comando que se ejecutar\u00e1\n     comando = f\"gh repo create uvlhub/{username} --public\"\n     url_repo = f\"https://github.com/uvlhub/{username}.git\"\n     \n     try:\n-        # Ejecutar el comando en el sistema\n+        \n         subprocess.run(comando, check=True, shell=True)\n-        subprocess.run(f\"git clone {url_repo}\", check=True, shell=True)\n+        directory = f\"/home/{os.getenv('USER')}/uvl_git/{username}\"\n+        os.makedirs(directory, exist_ok=True)\n+        subprocess.run(f\"git clone {url_repo} {directory}\",cwd=directory, check=True, shell=True)\n         return f\"Repositorio '{username}' creado exitosamente en la organizaci\u00f3n uvlhub.\"\n+    \n     except subprocess.CalledProcessError as e:\n         return f\"El repositorio '{username}' ya est\u00e1 creado. Ahora siempre que su cuenta est\u00e9 sincronizada con github, puede subir desde uvlhub sus archivos a este repositorio.\"\n     "
      },
      {
        "sha": "bea556e6faeac932fc225d0430e8bfb3d8ee2a7c",
        "filename": "app/modules/dataset/repositories.py",
        "status": "modified",
        "additions": 22,
        "deletions": 1,
        "changes": 23,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=078352226dbc7ba82e98b4e05d4a810f8cb5c1fa",
        "patch": "@@ -1,5 +1,6 @@\n from datetime import datetime, timezone\n import logging\n+import re\n from flask_login import current_user\n from typing import Optional\n \n@@ -38,7 +39,7 @@ def __init__(self):\n \n     def filter_by_doi(self, doi: str) -> Optional[DSMetaData]:\n         return self.model.query.filter_by(dataset_doi=doi).first()\n-\n+    \n \n class DSViewRecordRepository(BaseRepository):\n     def __init__(self):\n@@ -122,8 +123,28 @@ def get_all_files_for_dataset(self, dataset_id: int):\n         for feature_model in dataset.feature_models:\n             all_files.extend(feature_model.files)\n         return all_files\n+    \n+    def _normalize_folder_name(self, folder_name: str) -> str:\n+   \n+        normalized_name = re.sub(r'[^\\w\\s-]', '', folder_name)\n+        normalized_name = re.sub(r'\\s+', '_', normalized_name.strip())\n+        return normalized_name\n+    \n+    def get_dataset_name(self, dataset_id: int) -> str:\n+        dataset = (\n+        self.model.query\n+        .filter_by(id=dataset_id)\n+        .first()\n+    )\n+        if dataset and dataset.ds_meta_data:\n+            title = dataset.ds_meta_data.title\n+            return self._normalize_folder_name(title)\n+        \n+        return None\n+    \n \n \n+    \n \n class DOIMappingRepository(BaseRepository):\n     def __init__(self):"
      },
      {
        "sha": "a3b03de41429487d7b08df0c430f8f9cfdc4ddc4",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 53,
        "deletions": 22,
        "changes": 75,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=078352226dbc7ba82e98b4e05d4a810f8cb5c1fa",
        "patch": "@@ -19,7 +19,8 @@\n     url_for,\n )\n from flask_login import login_required, current_user\n-\n+import requests\n+from app.modules.dataset.repositories import DSMetaDataRepository\n from app.modules.dataset.forms import DataSetForm\n from app.modules.dataset.models import (\n     DSDownloadRecord\n@@ -34,6 +35,7 @@\n     DataSetService,\n     DOIMappingService\n )\n+from app.modules.hubfile.repositories import HubfileRepository\n from app.modules.zenodo.services import ZenodoService\n from flask_dance.contrib.github import github\n \n@@ -284,8 +286,8 @@ def get_unsynchronized_dataset(dataset_id):\n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n \n-@dataset_bp.route('/dataset/hacer_commit/<int:dataset_id>', methods=['GET','POST'])\n-def hacer_commit(dataset_id):\n+@dataset_bp.route('/dataset/commit/<int:dataset_id>', methods=['GET','POST'])\n+def commit(dataset_id):\n     \n     account_info = github.get('/user')\n     \n@@ -295,32 +297,61 @@ def hacer_commit(dataset_id):\n         return '<h1>First sync your github account</h1>'\n     \n     try:\n-        # Cambiar al directorio del repositorio\n-        if os.path.basename(os.getcwd()) != username:\n-            ruta_repositorio = os.path.join(os.getcwd(), username)\n-        \n+            \n+        ruta_repositorio = f\"/home/{os.getenv('USER')}/uvl_git/{username}\"\n         \n-        dataset_repository = DataSetRepository()\n-        all_files = dataset_repository.get_all_files_for_dataset(dataset_id)\n-        print(all_files)\n+        repository = DataSetRepository()\n+        nombre = repository.get_dataset_name(dataset_id)\n+        ruta_carpeta = os.path.join(ruta_repositorio, nombre)\n+        os.makedirs(ruta_carpeta, exist_ok=True)\n         \n-        archivos_a_subir = [f.name for f in all_files]\n+        all_files = repository.get_all_files_for_dataset(dataset_id)\n         \n-        # Ejecutar git add, git commit y git push\n-        for archivo in archivos_a_subir:\n-\n-            ruta_archivo_origen = f\"/home/javier/uvlhub/app/modules/dataset/uvl_examples/{archivo}\"\n-            ruta_destino_archivo = os.path.join(ruta_repositorio, os.path.basename(ruta_archivo_origen))\n-            # Copiar el archivo desde la ruta de origen a la carpeta del repositorio\n+        for archivo in all_files:\n+            \n+            ruta_archivo_origen = f\"/home/javier/uvlhub/app/modules/dataset/uvl_examples/{archivo.name}\"\n+            #ruta_archivo_origen = archivo.get_path()\n+            ruta_destino_archivo = os.path.join(ruta_carpeta, os.path.basename(ruta_archivo_origen))\n             shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n-            print(archivo)\n-            subprocess.run(f\"git add {os.getcwd()}/{archivo}\", check=True, shell=True)\n+            subprocess.run(f\"git add {ruta_carpeta}/{archivo.name}\",cwd=ruta_repositorio, check=True, shell=True)\n+            \n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"',cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\",cwd=ruta_repositorio, check=True, shell=True)\n+\n+        return \"Los cambios han sido commiteados y enviados al repositorio con \u00e9xito.\"\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"Este dataset ya se encuentra en su repositorio de github\"\n+    \n+    \n+    \n+@dataset_bp.route('/dataset/commit_file/<int:file_id>', methods=['GET','POST'])\n+def commit_file(file_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return '<h1>First sync your github account</h1>'\n+    \n+    try:\n+       \n+        ruta_repositorio = f\"/home/{os.getenv('USER')}/uvl_git/{username}\"\n+ \n+        hubfile_repository = HubfileRepository()\n+        hubfile = hubfile_repository.get_hubfile_by_id(file_id)\n+        #ruta_archivo_origen = hubfile.get_path()\n+        ruta_archivo_origen = f\"/home/javier/uvlhub/app/modules/dataset/uvl_examples/{hubfile.name}\"\n+        ruta_destino_archivo = os.path.join(ruta_repositorio, hubfile.name)\n+        shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+        subprocess.run(f\"git add {ruta_repositorio}/{hubfile.name}\",cwd=ruta_repositorio, check=True, shell=True)\n             \n-        subprocess.run('git commit -m \"Commit realizado desde Flask\"', check=True, shell=True)\n-        subprocess.run(\"git push origin main\", check=True, shell=True)\n+        subprocess.run('git commit -m \"Commit realizado desde uvlhub\"',cwd=ruta_repositorio, check=True, shell=True)\n+        subprocess.run(\"git push origin main\",cwd=ruta_repositorio, check=True, shell=True)\n \n         return \"Los cambios han sido commiteados y enviados al repositorio con \u00e9xito.\"\n \n     except subprocess.CalledProcessError as e:\n-        return f\"Hubo un error al hacer commit y push: {e.stderr}\"\n+        return f\"Este modelo ya se encuentra en su repositorio de github\"\n "
      },
      {
        "sha": "18c5f08e9f40c809cfe066d4f8331c0ef2a57bd2",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=078352226dbc7ba82e98b4e05d4a810f8cb5c1fa",
        "patch": "@@ -179,7 +179,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                     {{ dataset.get_uvlhub_doi() }}\n                 </div>\n \n-                <a href=\"{{ url_for('dataset.hacer_commit', dataset_id=dataset.id) }}\" class=\"btn btn-primary mt-3\" style=\"border-radius: 5px;\">\n+                <a href=\"{{ url_for('dataset.commit', dataset_id=dataset.id) }}\" class=\"btn btn-primary mt-3\" style=\"border-radius: 5px;\">\n                     <i class=\"center-button-icon\"></i>\n                     Upload all models to github\n                 </a>\n@@ -275,6 +275,10 @@ <h4 style=\"margin-bottom: 0px;\"><span class=\"badge bg-dark\">{{ dataset.get_files\n                             </div>\n                             <div class=\"col-12 text-end\" >\n \n+                                <a href=\"{{ url_for('dataset.commit_file', file_id=file.id) }}\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                                    <i data-feather=\"github\"></i> Upload\n+                                </a>\n+\n                                 <button onclick=\"viewFile('{{ file.id }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n                                     <i data-feather=\"eye\"></i> View\n                                 </button>"
      },
      {
        "sha": "94c83d4cf76ce083619ed6dae3c0bb05e18f04f2",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/078352226dbc7ba82e98b4e05d4a810f8cb5c1fa/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=078352226dbc7ba82e98b4e05d4a810f8cb5c1fa",
        "patch": "@@ -23,6 +23,9 @@ def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n \n     def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n         return db.session.query(DataSet).join(FeatureModel).join(Hubfile).filter(Hubfile.id == hubfile.id).first()\n+    \n+    def get_hubfile_by_id(self, hubfile_id: int) -> Hubfile:\n+        return db.session.query(Hubfile).filter(Hubfile.id == hubfile_id).first()\n \n \n class HubfileViewRecordRepository(BaseRepository):"
      }
    ]
  },
  {
    "sha": "e6d391ae6940b46d92fa871b630e7d03256e66f2",
    "node_id": "C_kwDONDG85doAKGU2ZDM5MWFlNjk0MGI0NmQ5MmZhODcxYjYzMGU3ZDAzMjU2ZTY2ZjI",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-25T15:22:53Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-25T15:22:53Z"
      },
      "message": "feat(dataset): push datasets models to github added",
      "tree": {
        "sha": "58e20dbe58248ffe0588679bdbe4d770586c6a75",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/58e20dbe58248ffe0588679bdbe4d770586c6a75"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/e6d391ae6940b46d92fa871b630e7d03256e66f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e6d391ae6940b46d92fa871b630e7d03256e66f2",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e6d391ae6940b46d92fa871b630e7d03256e66f2",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e6d391ae6940b46d92fa871b630e7d03256e66f2/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec"
      }
    ],
    "files": [
      {
        "sha": "0c23411a3ca446d96c09b222c05bffb3af12f8aa",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 18,
        "deletions": 47,
        "changes": 65,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e6d391ae6940b46d92fa871b630e7d03256e66f2/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e6d391ae6940b46d92fa871b630e7d03256e66f2/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=e6d391ae6940b46d92fa871b630e7d03256e66f2",
        "patch": "@@ -78,7 +78,7 @@ def github_login():\n        account_info = github.get('/user/repos')\n        if account_info.ok:\n            account_info_json = account_info.json()\n-           return '<h1>Your Github repo is {}'.format(account_info_json[1]['name'])\n+           return '<h1>Your github account is already sync with uvlhub</h1>'\n \n    return '<h1>Request failed!</h1>'\n \n@@ -110,74 +110,45 @@ def invite_user():\n         user_id = user_response.json().get(\"id\")\n         payload[\"invitee_id\"] = user_id  \n     else:\n-        return jsonify({\"error\": f\"No se pudo encontrar el usuario {username}\"}), 404\n+        return jsonify({\"error\": f\"Can't find the user: {username}\"}), 404\n \n     # ENVIA LA INVITACION AL USUARIO\n     response = requests.post(url, json=payload, headers=headers)\n \n     if response.status_code == 201:\n-        return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n+        return f'Invitaci\u00f3n enviada a {username} exitosamente. Debe aceptarla desde github y una vez pertenezca a nuestra organizaci\u00f3n no tenr\u00e1 que repetir este proceso</h1>'\n+        #return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n     \n     elif response.status_code == 404:\n         return jsonify({\"error\": f\"Usuario {username} no encontrado.\"}), 404\n     \n+    elif response.status_code == 422:\n+        return f'El usuario {username} ya pertenece a nuestra organizaci\u00f3n de github o tiene una invitaci\u00f3n v\u00e1lida para unirse. Compru\u00e9belo desde github'\n+    \n     else:\n         return jsonify({\"error\": \"No se pudo enviar la invitaci\u00f3n\", \"details\": response.json()}), response.status_code\n     \n \n \n @auth_bp.route('/create_repo', methods=['GET', 'POST'])\n def crear_repo():\n-\n-    #A PARTIR DE AQUI EL USERNAME SERA EL DE UVLHUB \n-    nombre_repositorio = \"Javiruizg\"\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return '<h1>First sync your github account</h1>'\n \n     # Definir el comando que se ejecutar\u00e1\n-    comando = f\"gh repo create uvlhub/{nombre_repositorio} --public\"\n-    url_repo = f\"https://github.com/uvlhub/{nombre_repositorio}.git\"\n+    comando = f\"gh repo create uvlhub/{username} --public\"\n+    url_repo = f\"https://github.com/uvlhub/{username}.git\"\n     \n     try:\n         # Ejecutar el comando en el sistema\n         subprocess.run(comando, check=True, shell=True)\n         subprocess.run(f\"git clone {url_repo}\", check=True, shell=True)\n-        return f\"Repositorio '{nombre_repositorio}' creado exitosamente en la organizaci\u00f3n uvlhub.\"\n+        return f\"Repositorio '{username}' creado exitosamente en la organizaci\u00f3n uvlhub.\"\n     except subprocess.CalledProcessError as e:\n-        return f\"Hubo un error al crear el repositorio: {e}\"\n-    \n-    \n-    \n-@auth_bp.route('/commit', methods=['GET','POST'])\n-def hacer_commit():\n+        return f\"El repositorio '{username}' ya est\u00e1 creado. Ahora siempre que su cuenta est\u00e9 sincronizada con github, puede subir desde uvlhub sus archivos a este repositorio.\"\n     \n-    try:\n-        # Cambiar al directorio del repositorio\n-        \n-        ruta_repositorio = os.path.join(os.getcwd(), \"Javiruizg\")\n-        \n-        # Corregir el cambio de directorio en cada ejecuci\u00f3n\n-        if os.path.basename(os.getcwd()) != \"Javiruizg\":\n-            os.chdir(ruta_repositorio)\n-        \n-        dataset_repository = DataSetRepository()\n-        all_files = dataset_repository.get_all_files_for_dataset(1)\n-        print(all_files)\n-        \n-        archivos_a_subir = [f.name for f in all_files]\n-        \n-        # Ejecutar git add, git commit y git push\n-        for archivo in archivos_a_subir:\n-\n-            ruta_archivo_origen = f\"/home/javier/uvlhub/app/modules/dataset/uvl_examples/{archivo}\"\n-            ruta_destino_archivo = os.path.join(ruta_repositorio, os.path.basename(ruta_archivo_origen))\n-            # Copiar el archivo desde la ruta de origen a la carpeta del repositorio\n-            shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n-            print(archivo)\n-            subprocess.run(f\"git add {os.getcwd()}/{archivo}\", check=True, shell=True)\n-            \n-        subprocess.run('git commit -m \"Commit realizado desde Flask\"', check=True, shell=True)\n-        subprocess.run(\"git push origin main\", check=True, shell=True)\n-\n-        return \"Los cambios han sido commiteados y enviados al repositorio con \u00e9xito.\"\n-\n-    except subprocess.CalledProcessError as e:\n-        return f\"Hubo un error al hacer commit y push: {e.stderr}\""
      },
      {
        "sha": "db5d56836815300a938bd7152ec1111069ea8fd4",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e6d391ae6940b46d92fa871b630e7d03256e66f2/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e6d391ae6940b46d92fa871b630e7d03256e66f2/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=e6d391ae6940b46d92fa871b630e7d03256e66f2",
        "patch": "@@ -2,6 +2,7 @@\n import os\n import json\n import shutil\n+import subprocess\n import tempfile\n import uuid\n from datetime import datetime, timezone\n@@ -24,6 +25,7 @@\n     DSDownloadRecord\n )\n from app.modules.dataset import dataset_bp\n+from app.modules.dataset.repositories import DataSetRepository\n from app.modules.dataset.services import (\n     AuthorService,\n     DSDownloadRecordService,\n@@ -33,6 +35,8 @@\n     DOIMappingService\n )\n from app.modules.zenodo.services import ZenodoService\n+from flask_dance.contrib.github import github\n+\n \n logger = logging.getLogger(__name__)\n \n@@ -278,3 +282,45 @@ def get_unsynchronized_dataset(dataset_id):\n         abort(404)\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+\n+\n+@dataset_bp.route('/dataset/hacer_commit/<int:dataset_id>', methods=['GET','POST'])\n+def hacer_commit(dataset_id):\n+    \n+    account_info = github.get('/user')\n+    \n+    if account_info.ok:\n+        username = account_info.json()['login']\n+    else:\n+        return '<h1>First sync your github account</h1>'\n+    \n+    try:\n+        # Cambiar al directorio del repositorio\n+        if os.path.basename(os.getcwd()) != username:\n+            ruta_repositorio = os.path.join(os.getcwd(), username)\n+        \n+        \n+        dataset_repository = DataSetRepository()\n+        all_files = dataset_repository.get_all_files_for_dataset(dataset_id)\n+        print(all_files)\n+        \n+        archivos_a_subir = [f.name for f in all_files]\n+        \n+        # Ejecutar git add, git commit y git push\n+        for archivo in archivos_a_subir:\n+\n+            ruta_archivo_origen = f\"/home/javier/uvlhub/app/modules/dataset/uvl_examples/{archivo}\"\n+            ruta_destino_archivo = os.path.join(ruta_repositorio, os.path.basename(ruta_archivo_origen))\n+            # Copiar el archivo desde la ruta de origen a la carpeta del repositorio\n+            shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+            print(archivo)\n+            subprocess.run(f\"git add {os.getcwd()}/{archivo}\", check=True, shell=True)\n+            \n+        subprocess.run('git commit -m \"Commit realizado desde Flask\"', check=True, shell=True)\n+        subprocess.run(\"git push origin main\", check=True, shell=True)\n+\n+        return \"Los cambios han sido commiteados y enviados al repositorio con \u00e9xito.\"\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"Hubo un error al hacer commit y push: {e.stderr}\"\n+"
      },
      {
        "sha": "eb6c38cbed2b41959724b58714a41f908cdf133d",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e6d391ae6940b46d92fa871b630e7d03256e66f2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e6d391ae6940b46d92fa871b630e7d03256e66f2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=e6d391ae6940b46d92fa871b630e7d03256e66f2",
        "patch": "@@ -159,7 +159,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n \n             {% if dataset.ds_meta_data.dataset_doi %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; flex-direction: row; align-items: center; justify-content: space-between;\">\n \n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n@@ -178,6 +178,12 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n                 </div>\n+\n+                <a href=\"{{ url_for('dataset.hacer_commit', dataset_id=dataset.id) }}\" class=\"btn btn-primary mt-3\" style=\"border-radius: 5px;\">\n+                    <i class=\"center-button-icon\"></i>\n+                    Upload all models to github\n+                </a>\n+\n                 \n             </div>\n             {% endif %}"
      },
      {
        "sha": "0e8d1ba728d22d52c92f260af629adb335fe0f54",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e6d391ae6940b46d92fa871b630e7d03256e66f2/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e6d391ae6940b46d92fa871b630e7d03256e66f2/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=e6d391ae6940b46d92fa871b630e7d03256e66f2",
        "patch": "@@ -182,10 +182,6 @@\n                             <button>Crea tu repo en la organizacion</button>\n                         </a> \n \n-                        <a href=\"{{ url_for('auth.hacer_commit') }}\">\n-                            <button>Haz un commit</button>\n-                        </a> \n-\n                         <a class=\"nav-icon dropdown-toggle d-inline-block d-sm-none\" href=\"#\" data-bs-toggle=\"dropdown\">\n                             <i class=\"align-middle\" data-feather=\"user\"></i> \n                         </a>"
      }
    ]
  },
  {
    "sha": "b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc",
    "node_id": "C_kwDONDG85doAKGI5ZWRmNWFkNjc1ZDY0MjQ3OGYyYmQyODUyYzBlYmY4ZWQ2YTJkZGM",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-11-17T21:31:59Z"
      },
      "committer": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-11-17T21:31:59Z"
      },
      "message": "feature(explore): Added some filters related to the feature models.",
      "tree": {
        "sha": "d378f2e06aaf1c9aa420e99f82b1d4e0214f2905",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/d378f2e06aaf1c9aa420e99f82b1d4e0214f2905"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d8c06c6831efae1a3e27eaac8f3f6f3609ad803e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e"
      }
    ],
    "files": [
      {
        "sha": "49d2b1b8109b735d07c53494aed7e60a4cf23eaf",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 25,
        "deletions": 1,
        "changes": 26,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc",
        "patch": "@@ -18,14 +18,26 @@ function send_query() {\n \n             const minFiles = document.getElementById('min_files').value || null;\n             const maxFiles = document.getElementById('max_files').value || null;\n+            const minAvBranchingFactor = document.getElementById('min_av_branching_factor').value || null;\n+            const maxAvBranchingFactor = document.getElementById('max_av_branching_factor').value || null;\n+            const minLeafCount = document.getElementById('min_leaf_count').value || null;\n+            const maxLeafCount = document.getElementById('max_leaf_count').value || null;\n+            const minDepth = document.getElementById('min_depth').value || null;\n+            const maxDepth = document.getElementById('max_depth').value || null;\n \n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n                 publication_type: document.querySelector('#publication_type').value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n                 min_files: minFiles,\n-                max_files: maxFiles\n+                max_files: maxFiles,\n+                min_av_branching_factor: minAvBranchingFactor,\n+                max_av_branching_factor: maxAvBranchingFactor,\n+                min_leaf_count: minLeafCount,\n+                max_leaf_count: maxLeafCount,\n+                min_depth: minDepth,\n+                max_depth: maxDepth\n             };\n             \n             console.log(document.querySelector('#publication_type').value);\n@@ -188,6 +200,18 @@ function clearFilters() {\n     let maxFilesInput = document.querySelector('#max_files');\n     minFilesInput.value = \"\"; \n     maxFilesInput.value = \"\"; \n+    let minAvBranchingFactor = document.querySelector('#min_av_branching_factor');\n+    let maxAvBranchingFactor = document.querySelector('#max_av_branching_factor');\n+    minAvBranchingFactor.value = \"\"; \n+    maxAvBranchingFactor.value = \"\"; \n+    let minLeafCount = document.querySelector('#min_leaf_count');\n+    let maxLeafCount = document.querySelector('#max_leaf_count');\n+    minLeafCount.value = \"\"; \n+    maxLeafCount.value = \"\"; \n+    let minDepth = document.querySelector('#min_depth');\n+    let maxDepth = document.querySelector('#max_depth');\n+    minDepth.value = \"\"; \n+    maxDepth.value = \"\"; \n \n \n     // Perform a new search with the reset filters"
      },
      {
        "sha": "fe1347b01b627b7c9800e4c415daab14320636f8",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 44,
        "deletions": 2,
        "changes": 46,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc",
        "patch": "@@ -12,7 +12,11 @@ def __init__(self):\n \n     def filter(self, query=\"\", sorting=\"newest\",\n                publication_type=\"any\", tags=[],\n-               min_files=None, max_files=None, **kwargs):\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None, max_av_branching_factor=None,\n+               **kwargs):\n         # Normalize and remove unwanted characters\n         normalized_query = unidecode.unidecode(query).lower()\n         cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n@@ -21,6 +25,15 @@ def filter(self, query=\"\", sorting=\"newest\",\n         min_files = int(min_files) if min_files is not None else None\n         max_files = int(max_files) if max_files is not None else None\n \n+        min_leaf_count = int(min_leaf_count) if min_leaf_count is not None else None\n+        max_leaf_count = int(max_leaf_count) if max_leaf_count is not None else None\n+\n+        min_depth = int(min_depth) if min_depth is not None else None\n+        max_depth = int(max_depth) if max_depth is not None else None\n+\n+        min_av_branching_factor = float(min_av_branching_factor) if min_av_branching_factor is not None else None\n+        max_av_branching_factor = float(max_av_branching_factor) if max_av_branching_factor is not None else None\n+\n         for word in cleaned_query.split():\n             filters.append(DSMetaData.title.ilike(f\"%{word}%\"))\n             filters.append(DSMetaData.description.ilike(f\"%{word}%\"))\n@@ -70,4 +83,33 @@ def filter(self, query=\"\", sorting=\"newest\",\n         if max_files is not None:\n             datasets = [dataset for dataset in datasets if dataset.get_files_count() <= max_files]\n \n-        return datasets\n+        filtered_datasets = []\n+\n+        for dataset in datasets:\n+            feature_models = dataset.feature_models  \n+            dataset_passes_filter = False  \n+\n+            for model in feature_models:\n+                stats = model.calculate_statistics()  \n+                leaf_count = stats[\"leaf_count\"]\n+                depth = stats[\"max_depth\"]\n+                branching_factor = stats[\"branching_factor\"]\n+                print(dataset_passes_filter)\n+\n+                # Aplicar filtros a las estad\u00edsticas del modelo\n+                if ((min_leaf_count is not None and leaf_count < min_leaf_count) or\n+                    (max_leaf_count is not None and leaf_count > max_leaf_count) or\n+                    (min_depth is not None and depth < min_depth) or\n+                    (max_depth is not None and depth > max_depth) or\n+                    (min_av_branching_factor is not None and branching_factor < min_av_branching_factor) or\n+                        (max_av_branching_factor is not None and branching_factor > max_av_branching_factor)):\n+                    continue\n+\n+                dataset_passes_filter = True\n+                print(\"dataset_passes_filter\")\n+                break\n+\n+            if dataset_passes_filter:\n+                filtered_datasets.append(dataset)  \n+\n+        return filtered_datasets"
      },
      {
        "sha": "fe42329df61736a18bcf5987d92445e591619dbc",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc",
        "patch": "@@ -8,5 +8,11 @@ def __init__(self):\n \n     def filter(self, query=\"\", sorting=\"newest\",\n                publication_type=\"any\", tags=[],\n-               min_files=None, max_files=None, **kwargs):\n-        return self.repository.filter(query, sorting, publication_type, tags, min_files, max_files, **kwargs)\n+               min_files=None, max_files=None,\n+               min_leaf_count=None, max_leaf_count=None,\n+               min_depth=None, max_depth=None,\n+               min_av_branching_factor=None,\n+               max_av_branching_factor=None, **kwargs):\n+        return self.repository.filter(query, sorting, publication_type, tags, min_files, max_files,\n+                                      min_leaf_count, max_leaf_count, min_depth, max_depth,\n+                                      min_av_branching_factor, max_av_branching_factor, **kwargs)"
      },
      {
        "sha": "ac550f01931d47c0b9b5b1cb52df5a48f483afa0",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 58,
        "deletions": 8,
        "changes": 66,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc",
        "patch": "@@ -54,13 +54,63 @@ <h3 class=\"h3 mb-3\">\n                                        value=\"\" autofocus>\n                             </div>\n                         </div>\n-                        <div class=\"col-6\">\n-                            <div class=\"mb-3\">\n-                                <label for=\"min_files\">Min Files:</label>\n-                                <input type=\"number\" id=\"min_files\" name=\"min_files\" placeholder=\"Min Files\">\n-\n-                                <label for=\"max_files\">Max Files:</label>\n-                                <input type=\"number\" id=\"max_files\" name=\"max_files\" placeholder=\"Max Files\">\n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_files\">Min Files:</label>\n+                                    <input type=\"number\" id=\"min_files\" name=\"min_files\" class=\"form-control\" placeholder=\"Min Files\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_files\">Max Files:</label>\n+                                    <input type=\"number\" id=\"max_files\" name=\"max_files\" class=\"form-control\" placeholder=\"Max Files\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_leaf_count\">Min Leaf Count:</label>\n+                                    <input type=\"number\" id=\"min_leaf_count\" name=\"min_leaf_count\" class=\"form-control\" placeholder=\"Min Leaf Count\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_leaf_count\">Max Leaf Count:</label>\n+                                    <input type=\"number\" id=\"max_leaf_count\" name=\"max_leaf_count\" class=\"form-control\" placeholder=\"Max Leaf Count\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_depth\">Min Depth:</label>\n+                                    <input type=\"number\" id=\"min_depth\" name=\"min_depth\" class=\"form-control\" placeholder=\"Min Depth\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_depth\">Max Depth:</label>\n+                                    <input type=\"number\" id=\"max_depth\" name=\"max_depth\" class=\"form-control\" placeholder=\"Max Depth\">\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"min_av_branching_factor\">Min Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"min_av_branching_factor\" name=\"min_av_branching_factor\" class=\"form-control\" placeholder=\"Min Average Branching Factor\">\n+                                </div>\n+                            </div>\n+                            <div class=\"col-lg-6\">\n+                                <div class=\"mb-3\">\n+                                    <label for=\"max_av_branching_factor\">Max Average Branching Factor:</label>\n+                                    <input type=\"number\" id=\"max_av_branching_factor\" name=\"max_av_branching_factor\" class=\"form-control\" placeholder=\"Max Average Branching Factor\">\n+                                </div>\n                             </div>\n                         </div>\n                         <div class=\"col-lg-12\">\n@@ -116,7 +166,7 @@ <h3 class=\"h3 mb-3\">\n                                     </span>\n                                 </label>\n                             </div>\n-\n+                            \n                         </div>\n \n                     </div>"
      },
      {
        "sha": "eb63efa40cbd6b3db6e8a289fab7a08bc6d735b0",
        "filename": "app/modules/featuremodel/models.py",
        "status": "modified",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Fmodels.py?ref=b9edf5ad675d642478f2bd2852c0ebf8ed6a2ddc",
        "patch": "@@ -2,6 +2,9 @@\n from sqlalchemy import Enum as SQLAlchemyEnum\n \n from app.modules.dataset.models import Author, PublicationType\n+from flamapy.metamodels.fm_metamodel.transformations import UVLReader\n+from flamapy.metamodels.fm_metamodel.operations import FMAverageBranchingFactor, FMCountLeafs\n+from flamapy.metamodels.fm_metamodel.operations import FMMaxDepthTree\n \n \n class FeatureModel(db.Model):\n@@ -14,6 +17,29 @@ class FeatureModel(db.Model):\n     def __repr__(self):\n         return f'FeatureModel<{self.id}>'\n \n+    def calculate_statistics(self):\n+        from app.modules.hubfile.services import HubfileService\n+        hubfile = HubfileService().get_by_id(self.id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+\n+        leaf_counter = FMCountLeafs()\n+        leaf_counter.execute(fm)\n+        leaf_count = leaf_counter.get_result()\n+\n+        depth_calculator = FMMaxDepthTree()\n+        depth_calculator.execute(fm)\n+        max_tree_depth = depth_calculator.get_result()\n+\n+        branching_factor_calculator = FMAverageBranchingFactor()\n+        branching_factor_calculator.execute(fm)\n+        average_branching_factor = branching_factor_calculator.get_result()\n+\n+        return {\n+            \"leaf_count\": leaf_count,\n+            \"max_depth\": max_tree_depth,\n+            \"branching_factor\": average_branching_factor\n+        }\n+\n \n class FMMetaData(db.Model):\n     id = db.Column(db.Integer, primary_key=True)"
      }
    ]
  },
  {
    "sha": "7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec",
    "node_id": "C_kwDONDG85doAKDdmN2M0ZWQ0YzgxMTk0MTM0YzhiMzExMGUyYzllMDJmMGUyM2RmZWM",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-14T23:20:17Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-14T23:20:17Z"
      },
      "message": "feat(dataset): functional commits and push first version",
      "tree": {
        "sha": "0efe844bff33be7d627e27107e102f20066b4f8e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/0efe844bff33be7d627e27107e102f20066b4f8e"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b587c1b97a1ddf857cc157ea43ab6323448ade1",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8b587c1b97a1ddf857cc157ea43ab6323448ade1",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/8b587c1b97a1ddf857cc157ea43ab6323448ade1"
      }
    ],
    "files": [
      {
        "sha": "72be74f2faa4d781148f9c931cb7904639c3dda5",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 95,
        "deletions": 32,
        "changes": 127,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec",
        "patch": "@@ -1,4 +1,6 @@\n import os\n+import shutil\n+import subprocess\n from flask import Flask, jsonify, render_template, redirect, url_for, request\n from flask_login import current_user, login_user, logout_user\n import requests\n@@ -8,6 +10,8 @@\n from app.modules.profile.services import UserProfileService\n from flask_dance.contrib.github import make_github_blueprint, github\n \n+from app.modules.dataset.repositories import DataSetRepository\n+\n authentication_service = AuthenticationService()\n user_profile_service = UserProfileService()\n \n@@ -82,39 +86,98 @@ def github_login():\n @auth_bp.route('/invite', methods=['GET', 'POST'])\n def invite_user():\n     account_info = github.get('/user')\n+    \n     if account_info.ok:\n         username = account_info.json()['login']\n-        #username = \"Javiruizg\"\n-         \n-        # API de GitHub para invitar a un usuario a una organizaci\u00f3n\n-        url = f'https://api.github.com/orgs/uvlhub/invitations'  \n-        headers = {\n-            'Authorization': f'token {token_admin}',\n-            'Accept': 'application/vnd.github.v3+json'\n-        }\n-        payload = {\n-            \"invitee_id\": None,  # Esta es una asignaci\u00f3n temporal\n-        }\n-\n-        # Obtener el ID del usuario desde la API de GitHub\n-        user_url = f'https://api.github.com/users/{username}'\n-        user_response = requests.get(user_url, headers=headers)\n+    else:\n+        return '<h1>First sync your github account</h1>'\n+              \n+    # INVITACION A LA ORGANIZACION\n+    url = f'https://api.github.com/orgs/uvlhub/invitations'  \n+    headers = {\n+        'Authorization': f'token {token_admin}',\n+        'Accept': 'application/vnd.github.v3+json'\n+    }\n+    payload = {\n+        \"invitee_id\": None, \n+    }\n+\n+    # OBTENER EL ID DEL USUARIO DE GITHUB\n+    user_url = f'https://api.github.com/users/{username}'\n+    user_response = requests.get(user_url, headers=headers)\n+    \n+    if user_response.status_code == 200:\n+        user_id = user_response.json().get(\"id\")\n+        payload[\"invitee_id\"] = user_id  \n+    else:\n+        return jsonify({\"error\": f\"No se pudo encontrar el usuario {username}\"}), 404\n+\n+    # ENVIA LA INVITACION AL USUARIO\n+    response = requests.post(url, json=payload, headers=headers)\n+\n+    if response.status_code == 201:\n+        return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n+    \n+    elif response.status_code == 404:\n+        return jsonify({\"error\": f\"Usuario {username} no encontrado.\"}), 404\n+    \n+    else:\n+        return jsonify({\"error\": \"No se pudo enviar la invitaci\u00f3n\", \"details\": response.json()}), response.status_code\n+    \n+\n+\n+@auth_bp.route('/create_repo', methods=['GET', 'POST'])\n+def crear_repo():\n+\n+    #A PARTIR DE AQUI EL USERNAME SERA EL DE UVLHUB \n+    nombre_repositorio = \"Javiruizg\"\n+\n+    # Definir el comando que se ejecutar\u00e1\n+    comando = f\"gh repo create uvlhub/{nombre_repositorio} --public\"\n+    url_repo = f\"https://github.com/uvlhub/{nombre_repositorio}.git\"\n+    \n+    try:\n+        # Ejecutar el comando en el sistema\n+        subprocess.run(comando, check=True, shell=True)\n+        subprocess.run(f\"git clone {url_repo}\", check=True, shell=True)\n+        return f\"Repositorio '{nombre_repositorio}' creado exitosamente en la organizaci\u00f3n uvlhub.\"\n+    except subprocess.CalledProcessError as e:\n+        return f\"Hubo un error al crear el repositorio: {e}\"\n+    \n+    \n+    \n+@auth_bp.route('/commit', methods=['GET','POST'])\n+def hacer_commit():\n+    \n+    try:\n+        # Cambiar al directorio del repositorio\n         \n-        if user_response.status_code == 200:\n-            user_id = user_response.json().get(\"id\")\n-            payload[\"invitee_id\"] = user_id  # Actualizo el invitee_id con el ID real del usuario de github\n-        else:\n-            return jsonify({\"error\": f\"No se pudo encontrar el usuario {username}\"}), 404\n-\n-        # Enviar la invitaci\u00f3n a la organizaci\u00f3n\n-        response = requests.post(url, json=payload, headers=headers)\n-\n-        if response.status_code == 201:\n-            return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n-        elif response.status_code == 404:\n-            return jsonify({\"error\": f\"Usuario {username} no encontrado.\"}), 404\n-        else:\n-            return jsonify({\"error\": \"No se pudo enviar la invitaci\u00f3n\", \"details\": response.json()}), response.status_code\n+        ruta_repositorio = os.path.join(os.getcwd(), \"Javiruizg\")\n         \n-    else:\n-        return '<h1>Request failed! First sync your account with github</h1>'\n\\ No newline at end of file\n+        # Corregir el cambio de directorio en cada ejecuci\u00f3n\n+        if os.path.basename(os.getcwd()) != \"Javiruizg\":\n+            os.chdir(ruta_repositorio)\n+        \n+        dataset_repository = DataSetRepository()\n+        all_files = dataset_repository.get_all_files_for_dataset(1)\n+        print(all_files)\n+        \n+        archivos_a_subir = [f.name for f in all_files]\n+        \n+        # Ejecutar git add, git commit y git push\n+        for archivo in archivos_a_subir:\n+\n+            ruta_archivo_origen = f\"/home/javier/uvlhub/app/modules/dataset/uvl_examples/{archivo}\"\n+            ruta_destino_archivo = os.path.join(ruta_repositorio, os.path.basename(ruta_archivo_origen))\n+            # Copiar el archivo desde la ruta de origen a la carpeta del repositorio\n+            shutil.copy(ruta_archivo_origen, ruta_destino_archivo)\n+            print(archivo)\n+            subprocess.run(f\"git add {os.getcwd()}/{archivo}\", check=True, shell=True)\n+            \n+        subprocess.run('git commit -m \"Commit realizado desde Flask\"', check=True, shell=True)\n+        subprocess.run(\"git push origin main\", check=True, shell=True)\n+\n+        return \"Los cambios han sido commiteados y enviados al repositorio con \u00e9xito.\"\n+\n+    except subprocess.CalledProcessError as e:\n+        return f\"Hubo un error al hacer commit y push: {e.stderr}\""
      },
      {
        "sha": "45ca73e19d4c6884856bc9d6fd1cd578dba1c377",
        "filename": "app/modules/dataset/repositories.py",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec",
        "patch": "@@ -113,6 +113,16 @@ def latest_synchronized(self):\n             .limit(5)\n             .all()\n         )\n+        \n+    def get_all_files_for_dataset(self, dataset_id: int):\n+        dataset = self.model.query.get(dataset_id)\n+        if not dataset:\n+            return None\n+        all_files = []\n+        for feature_model in dataset.feature_models:\n+            all_files.extend(feature_model.files)\n+        return all_files\n+\n \n \n class DOIMappingRepository(BaseRepository):"
      },
      {
        "sha": "23da1e96eac6f957b8e5ecc6b9b852ea1e1af915",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=7f7c4ed4c81194134c8b3110e2c9e02f0e23dfec",
        "patch": "@@ -175,7 +175,15 @@\n                         </a> \n \n                         <a href=\"{{ url_for('auth.invite_user') }}\">\n-                            <button>Join Github organization</button>\n+                            <button>Join our Github Organization</button>\n+                        </a> \n+\n+                        <a href=\"{{ url_for('auth.crear_repo') }}\">\n+                            <button>Crea tu repo en la organizacion</button>\n+                        </a> \n+\n+                        <a href=\"{{ url_for('auth.hacer_commit') }}\">\n+                            <button>Haz un commit</button>\n                         </a> \n \n                         <a class=\"nav-icon dropdown-toggle d-inline-block d-sm-none\" href=\"#\" data-bs-toggle=\"dropdown\">"
      }
    ]
  },
  {
    "sha": "d5d5bd79ad5cd9c309e543b56bcf0b16be39294e",
    "node_id": "C_kwDONDG85doAKGQ1ZDViZDc5YWQ1Y2Q5YzMwOWU1NDNiNTZiY2YwYjE2YmUzOTI5NGU",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-11-14T16:14:54Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-11-14T16:14:54Z"
      },
      "message": "fix: Changed bibtex export to match uvl model view",
      "tree": {
        "sha": "c8a24bfffa26b14057ea1b332d6f1b3b93579417",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/c8a24bfffa26b14057ea1b332d6f1b3b93579417"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/d5d5bd79ad5cd9c309e543b56bcf0b16be39294e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d5d5bd79ad5cd9c309e543b56bcf0b16be39294e",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d5d5bd79ad5cd9c309e543b56bcf0b16be39294e",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d5d5bd79ad5cd9c309e543b56bcf0b16be39294e/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "722d52117374611b812d6a91cc77682da2a5afe2",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/722d52117374611b812d6a91cc77682da2a5afe2",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/722d52117374611b812d6a91cc77682da2a5afe2"
      }
    ],
    "files": [
      {
        "sha": "7eb6875d9d0ff817124a260a187b942da4c4c7f5",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 17,
        "deletions": 31,
        "changes": 48,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d5d5bd79ad5cd9c309e543b56bcf0b16be39294e/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d5d5bd79ad5cd9c309e543b56bcf0b16be39294e/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=d5d5bd79ad5cd9c309e543b56bcf0b16be39294e",
        "patch": "@@ -291,42 +291,28 @@ def subdomain_index(doi):\n \n \n     # Export DataSet to BibTex\n-    closing_ = \"},\"\n-    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n-    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n-    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n     \n-    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n-        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    else:\n-        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n-    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n-    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n-    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n-\n-    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n-    bibtex_properties.append(\"}\")\n-    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    bibtex_propiedades = {\n+        \"author\": \" and \".join([a_.name for a_ in ds_meta_data.authors]),\n+        \"title\": ds_meta_data.title,\n+        \"howpublished\": None,\n+        \"year\": str(dataset.created_at.date().year),\n+        \"note\": \"Accessed: {}\".format(str(datetime.now().date())),\n+        \"annote\": ds_meta_data.description\n+    }\n+    texto_howpublished = \"https://zenodo.org/records/{}\" if os.environ.get(\"FLASK_ENV\").lower()==\"production\" else \"https://sandbox.zenodo.org/records/{}\"\n+    bibtex_propiedades[\"howpublished\"] = texto_howpublished.format(ds_meta_data.deposition_id)\n     \n-    max_preview_len = 60\n-    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+    lineas_preview =\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\\n  \"\n+    lineas_preview += \"\\n  \".join([k_ + \" = {\" + v_+ \"},\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+    # lineas_preview += \",\\n  \".join([k_ + \" = {\" + v_+ \"}\" for (k_,v_) in bibtex_propiedades.items()]) + \"\\n}\"\n+\n+    bibtex_file_name = ds_meta_data.title.replace(\" \", \"_\").lower() + \".bib\"\n \n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    \n-    n_px = 17*(int(len(bibtex_properties)/2)+1)\n-\n-    page_render = render_template(\"dataset/view_dataset.html\",\n-                    dataset=dataset,\n-                    bibtex_dataset=bibtex_dataset,\n-                    bibtex_preview=bibtex_preview,\n-                    bibtex_preview_start = bibtex_properties[0],\n-                    bibtex_preview_lines=bibtex_properties[1:-1],\n-                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n-                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n-\n-    resp = make_response(page_render)\n-    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+\n+    resp = make_response(render_template(\"dataset/view_dataset.html\",dataset=dataset,bibtex_dataset=lineas_preview,bibtex_file_name=bibtex_file_name))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp"
      },
      {
        "sha": "1adb3be4d273cc0921f5759f7ae1f44480da1cd1",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 46,
        "deletions": 31,
        "changes": 77,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d5d5bd79ad5cd9c309e543b56bcf0b16be39294e/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d5d5bd79ad5cd9c309e543b56bcf0b16be39294e/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=d5d5bd79ad5cd9c309e543b56bcf0b16be39294e",
        "patch": "@@ -159,38 +159,11 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n \n             {% if bibtex_dataset %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n-                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n-                    {{ bibtex_dataset }}\n-                </div>\n \n-                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n-                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n-                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n-                        <b>BibTex</b>\n-                    </span>\n-\n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_dataset }}\n-                    </span> -->\n-                   \n-                    \n-                    \n-                    <!-- <span class=\"doi_text\">\n-                        {{ bibtex_preview }}\n-                    </span> -->\n-                   \n-\n-                    \n-                    <div class=\"doi_text\">\n-                        <div>{{ bibtex_preview_start }}</div>\n-                        {% for bib_line in bibtex_preview_lines %}\n-                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n-                        {% endfor %}\n-                        <div>{{ bibtex_preview_end }}</div>\n-                    </div>\n-                   \n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">{{ bibtex_dataset }}</div>\n+                <button onclick=\"viewBibtex('{{ bibtex_file_name }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                    <i data-feather=\"eye\"></i> View dataset in BibTex format\n                 </button>\n             </div>\n             {% endif %}\n@@ -399,6 +372,30 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n     </div>\n </div>\n \n+<div class=\"modal fade\" id=\"bibtexViewerModal\" tabindex=\"-1\" aria-labelledby=\"bibtexViewerModalLabel\" aria-hidden=\"true\">\n+    <div class=\"modal-dialog modal-lg\" style=\"height: 80vh; display: flex; align-items: center;\">\n+        <div class=\"modal-content\" style=\"height: 80vh;\">\n+            <div class=\"modal-header\" style=\"display: flex; justify-content: space-between; align-items: center;\">\n+                <h5 class=\"modal-title\" id=\"bibtexViewerModalLabel\">Preview of dataset in BibTex format</h5>\n+                <div>\n+                    <a href=\"#\" class=\"btn btn-outline-primary btn-sm\" id=\"bibtexDownloadButton\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"download\"></i>\n+                    </a>\n+                    <button onclick=\"copyText('dataset_bibtex_export')\" class=\"btn btn-outline-secondary btn-sm\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"copy\"></i>\n+                    </button>\n+                    <button onclick=\"freeBibtexUrl()\" type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n+                </div>\n+            </div>\n+            <div class=\"modal-body\" style=\"overflow-y: auto; height: calc(100vh - 50px);\">\n+                <pre id=\"bibtexContent\" style=\"height: 100%; overflow-y: auto; white-space: pre-wrap; word-wrap: break-word; background-color: #f5f5f5; padding: 20px; border-radius: 5px; border: 1px solid #ccc;\"></pre>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js\"></script>\n \n \n@@ -410,6 +407,24 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n \n     var currentFileId;\n \n+    function freeBibtexUrl() {\n+        console.log(\"entra en freeBibtexUrl\")\n+        URL.revokeObjectURL(document.getElementById('bibtexDownloadButton').href)\n+    }\n+\n+    function viewBibtex(bibfilename) {\n+        var bib_content_display = document.getElementById('dataset_bibtex_export').textContent;\n+\n+        var blob = new Blob([bib_content_display], { type: 'text/plain' });\n+        var fileURL = URL.createObjectURL(blob);\n+        document.getElementById('bibtexDownloadButton').href = fileURL;\n+        document.getElementById('bibtexDownloadButton').download = bibfilename;\n+        document.getElementById('bibtexContent').textContent = bib_content_display;\n+\n+        var modal = new bootstrap.Modal(document.getElementById('bibtexViewerModal'));\n+        modal.show();\n+    }\n+\n     function viewFile(fileId) {\n         fetch(`/file/view/${fileId}`)\n             .then(response => response.json())"
      }
    ]
  },
  {
    "sha": "722d52117374611b812d6a91cc77682da2a5afe2",
    "node_id": "C_kwDONDG85doAKDcyMmQ1MjExNzM3NDYxMWI4MTJkNmE5MWNjNzc2ODJkYTJhNWFmZTI",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-11-14T10:39:13Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "91720565+vicgrabru@users.noreply.github.com",
        "date": "2024-11-14T10:40:45Z"
      },
      "message": "docs: Update issue templates\n\nAdded templates for issues related to Work Items, bug reports, and documentation",
      "tree": {
        "sha": "0d4c0d844151b24e421e5806f3e8c3b2c2401411",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/0d4c0d844151b24e421e5806f3e8c3b2c2401411"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/722d52117374611b812d6a91cc77682da2a5afe2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/722d52117374611b812d6a91cc77682da2a5afe2",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/722d52117374611b812d6a91cc77682da2a5afe2",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/722d52117374611b812d6a91cc77682da2a5afe2/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a3ecdacf869603862ed3463b553ac645d5cb92f4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a3ecdacf869603862ed3463b553ac645d5cb92f4",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a3ecdacf869603862ed3463b553ac645d5cb92f4"
      }
    ],
    "files": [
      {
        "sha": "7a6013bf8ee1dfc7f2da495d18d7b020e9b0d3f0",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/722d52117374611b812d6a91cc77682da2a5afe2/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/722d52117374611b812d6a91cc77682da2a5afe2/.github%2FISSUE_TEMPLATE%2Fbug_report.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fbug_report.md?ref=722d52117374611b812d6a91cc77682da2a5afe2",
        "patch": "@@ -0,0 +1,38 @@\n+---\n+name: Bug report\n+about: For bugs you may find\n+title: Brief bug description\n+labels: bug\n+assignees: ''\n+\n+---\n+\n+**Describe the bug**\n+A clear and concise description of what the bug is.\n+\n+**To Reproduce**\n+Steps to reproduce the behavior:\n+1. Go to '...'\n+2. Click on '....'\n+3. Scroll down to '....'\n+4. See error\n+\n+**Expected behavior**\n+A clear and concise description of what you expected to happen.\n+\n+**Screenshots**\n+If applicable, add screenshots to help explain your problem.\n+\n+**Desktop (please complete the following information):**\n+ - OS: [e.g. iOS]\n+ - Browser [e.g. chrome, safari]\n+ - Version [e.g. 22]\n+\n+**Smartphone (please complete the following information):**\n+ - Device: [e.g. iPhone6]\n+ - OS: [e.g. iOS8.1]\n+ - Browser [e.g. stock browser, safari]\n+ - Version [e.g. 22]\n+\n+**Additional context**\n+Add any other context about the problem here."
      },
      {
        "sha": "ca07ee63e773329b8606abfa23190baa1209b303",
        "filename": ".github/ISSUE_TEMPLATE/documentation.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/722d52117374611b812d6a91cc77682da2a5afe2/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/722d52117374611b812d6a91cc77682da2a5afe2/.github%2FISSUE_TEMPLATE%2Fdocumentation.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fdocumentation.md?ref=722d52117374611b812d6a91cc77682da2a5afe2",
        "patch": "@@ -0,0 +1,11 @@\n+---\n+name: Documentation\n+about: For documents that may need updating\n+title: Update for [document name]\n+labels: documentation\n+assignees: ''\n+\n+---\n+\n+**Name the document and describe the necessary updates**\n+Describe the updates that the document needs"
      },
      {
        "sha": "a4608544700957f9174c6c537bf9664fc3667d94",
        "filename": ".github/ISSUE_TEMPLATE/work-item.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/722d52117374611b812d6a91cc77682da2a5afe2/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/722d52117374611b812d6a91cc77682da2a5afe2/.github%2FISSUE_TEMPLATE%2Fwork-item.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fwork-item.md?ref=722d52117374611b812d6a91cc77682da2a5afe2",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Work Item\n+about: For Work Items\n+title: Work Item name\n+labels: enhancement\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n+\n+**Describe the solution you'd like**\n+A clear and concise description of what you want to happen.\n+\n+**Describe alternatives you've considered**\n+A clear and concise description of any alternative solutions or features you've considered.\n+\n+**Additional context**\n+Add any other context or screenshots about the feature request here."
      }
    ]
  },
  {
    "sha": "8b587c1b97a1ddf857cc157ea43ab6323448ade1",
    "node_id": "C_kwDONDG85doAKDhiNTg3YzFiOTdhMWRkZjg1N2NjMTU3ZWE0M2FiNjMyMzQ0OGFkZTE",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-13T20:17:23Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-13T20:17:23Z"
      },
      "message": "fix(auth): Github secret added",
      "tree": {
        "sha": "221cc7bb22e381edd2c57968ab840bd53a8b3824",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/221cc7bb22e381edd2c57968ab840bd53a8b3824"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/8b587c1b97a1ddf857cc157ea43ab6323448ade1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8b587c1b97a1ddf857cc157ea43ab6323448ade1",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/8b587c1b97a1ddf857cc157ea43ab6323448ade1",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8b587c1b97a1ddf857cc157ea43ab6323448ade1/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bd0ea567b9aa23a1b72abe07513c562de1731cc0",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/bd0ea567b9aa23a1b72abe07513c562de1731cc0",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/bd0ea567b9aa23a1b72abe07513c562de1731cc0"
      }
    ],
    "files": [
      {
        "sha": "779eab1bde69191c65374888b4e106b48af23c21",
        "filename": ".github/workflows/tests.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/8b587c1b97a1ddf857cc157ea43ab6323448ade1/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/8b587c1b97a1ddf857cc157ea43ab6323448ade1/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=8b587c1b97a1ddf857cc157ea43ab6323448ade1",
        "patch": "@@ -46,5 +46,7 @@ jobs:\n         MARIADB_TEST_DATABASE: uvlhubdb_test\n         MARIADB_USER: uvlhub_user\n         MARIADB_PASSWORD: uvlhub_password\n+        ORG_TOKEN_ADMIN: ${{ secrets.ORG_TOKEN_ADMIN }}\n       run: |\n         pytest app/modules/ --ignore-glob='*selenium*'\n+        \n\\ No newline at end of file"
      },
      {
        "sha": "32a211531863e45a8e75c9f254bb1ecc09240431",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/8b587c1b97a1ddf857cc157ea43ab6323448ade1/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/8b587c1b97a1ddf857cc157ea43ab6323448ade1/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=8b587c1b97a1ddf857cc157ea43ab6323448ade1",
        "patch": "@@ -13,7 +13,7 @@\n \n app = Flask(__name__)\n #app.config[\"SECRET_KEY\"] = \"SECRET KEY  \"\n-token_admin = os.getenv(\"GITHUB_TOKEN_ADMIN\")\n+token_admin = os.getenv(\"ORG_TOKEN_ADMIN\")\n \n github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g',\n                                         client_secret='00b92023ceb36020d4d0a7f34d5a583e2e386611')"
      }
    ]
  },
  {
    "sha": "fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b",
    "node_id": "C_kwDONDG85doAKGZjN2JjZmVmOWFjNzAxOGFjZmJhYTI2YWE2ZjZkOTk1ZjMzMTJhOWI",
    "commit": {
      "author": {
        "name": "raumonmar1",
        "email": "72814383+raumonmar1@users.noreply.github.com",
        "date": "2024-11-13T17:07:52Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-11-13T17:07:52Z"
      },
      "message": "Merge branch 'develop' into feature-download_different_formats",
      "tree": {
        "sha": "a756afc0721cabb64f7c53e8013ff131df71aaed",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a756afc0721cabb64f7c53e8013ff131df71aaed"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnNNzoCRC1aQ7uu5UhlAAAZEQQAFhZwDONAw9ccQAMd5fZsaJQ\nPme+tO+QynLiAs06F81KZptHGyzfaLnPiwOQtKeO6e79mtJQINM7ilE8K4obo+6o\nVh6w2TPP/TvwkEmsrQ000brJh/9czf3WQJVKvIBoRDfjCq5Z59b6UnuPmPL6baej\nVOV00KfzvhpidbME0PXjo7MJjAhBpwah9Xl3GZqsuA91WeR6gzffBWe4PEcnlVDp\nzndYX4vEwPdIpbIBFhxX0RqUFs8YJmuET4Jd5dtnHqtOljlMKMzA+qpSVxEk00/r\nngtORiC7IZL+cqWm04Ogf5OMu6KbOQedcsuMU20j25MXj0Lcd04MqFdte9IVDdHB\nUSgcsv+ZI2NVTDIVd5L3JdgADUBIWKj6ntiwyJGU24B3ByX+Du3uJCidyWtnFSfd\nD3c6Zwp8bTplIMOTnTtoTNquIymVrd53OREj/r7NADKxPR1zuIAJ/KP2Xwo8GHg2\nEMEPSmlvDkvpg/hVRCuw/W5lVr2Yt4U+SAGZq9NtXHjMvWEXSfKuiuYNp/NNRp+M\ngge6UxgP/z9zrHxtBOlzQ3bAuyk6p/G2bv0QX836jI1S0cXdWeRyHns3d1ggtkt7\n4v6nJ/OTHLmqE3wWZplF0kHsD1iI9fxATRo+EQMRj3/16a39nMmXmfgjf5/XVdXb\nC4Zyg0GchTFbiTcspmD+\n=Yu7T\n-----END PGP SIGNATURE-----\n",
        "payload": "tree a756afc0721cabb64f7c53e8013ff131df71aaed\nparent 5c5ed13096f494fe3f3782968b281ec220450447\nparent a3ecdacf869603862ed3463b553ac645d5cb92f4\nauthor raumonmar1 <72814383+raumonmar1@users.noreply.github.com> 1731517672 +0100\ncommitter GitHub <noreply@github.com> 1731517672 +0100\n\nMerge branch 'develop' into feature-download_different_formats",
        "verified_at": "2024-11-13T17:07:56Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5c5ed13096f494fe3f3782968b281ec220450447",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5c5ed13096f494fe3f3782968b281ec220450447",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5c5ed13096f494fe3f3782968b281ec220450447"
      },
      {
        "sha": "a3ecdacf869603862ed3463b553ac645d5cb92f4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a3ecdacf869603862ed3463b553ac645d5cb92f4",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a3ecdacf869603862ed3463b553ac645d5cb92f4"
      }
    ],
    "files": [
      {
        "sha": "7f38d141209c35b92dd1f1a3919add56d2f8acd0",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 162,
        "deletions": 11,
        "changes": 173,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b",
        "patch": "@@ -5,6 +5,10 @@ var currentId = 0;\n             document.getElementById(\"upload_dataset\").style.display = \"block\";\n         }\n \n+\tfunction show_check_dataset() {\n+\t\tdocument.getElementById(\"check_dataset\").style.display = \"block\";\n+\t}\n+\n         function generateIncrementalId() {\n             return currentId++;\n         }\n@@ -81,13 +85,14 @@ var currentId = 0;\n             return (titleLength >= 3 && descriptionLength >= 3);\n         }\n \n+\tif (document.getElementById('add_author')) {\n+\t\tdocument.getElementById('add_author').addEventListener('click', function () {\n+\t\t\tlet authors = document.getElementById('authors');\n+\t\t\tlet newAuthor = createAuthorBlock(amount_authors++, \"\");\n+\t\t\tauthors.appendChild(newAuthor);\n+\t\t});\n \n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n+\t}        \n \n         document.addEventListener('click', function (event) {\n             if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n@@ -102,10 +107,14 @@ var currentId = 0;\n             }\n         });\n \n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n+        function show_loading(type) {\n+\t\tif (type===\"check\") {\n+\t\t\tdocument.getElementById(\"check_model_button\").style.display = \"none\";\n+\t\t} else {\n+\t\t\tdocument.getElementById(\"upload_button\").style.display = \"none\";\n+\t\t}\n+\t\tdocument.getElementById(\"loading\").style.display = \"block\";\n+\t}\n \n         function hide_loading() {\n             document.getElementById(\"upload_button\").style.display = \"block\";\n@@ -243,4 +252,146 @@ var currentId = 0;\n             window.location.href = url;\n         }\n         \n-        \n\\ No newline at end of file\n+\t\tif (document.getElementById('check_model_button')) {\n+\n+\t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n+\t\t\t\tconsole.log(\"hi\");\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"check\");\n+\n+\t\t\t\t\n+\t\t\t\tfetch('/dataset/check', {\n+\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\tbody: ''\n+\t\t\t\t})\n+\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\t//window.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t}\n+\t\t\t\t\t})\n+\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t});\n+\t\t\t\tconsole.log(\"yeah\")\n+\n+\t\t\t});\n+\t\t}\n+\t\tif (document.getElementById('upload_button')){\n+\t\t\tdocument.getElementById('upload_button').addEventListener('click', function () {\n+\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"upload\");\n+\n+\t\t\t\t// check title and description\n+\t\t\t\tlet check = check_title_and_description();\n+\n+\t\t\t\tif (check) {\n+\t\t\t\t\t// process data form\n+\t\t\t\t\tconst formData = {};\n+\n+\t\t\t\t\t[\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+\t\t\t\t\t\tconst form = document.getElementById(formId);\n+\t\t\t\t\t\tconst inputs = form.querySelectorAll('input, select, textarea');\n+\t\t\t\t\t\tinputs.forEach(input => {\n+\t\t\t\t\t\t\tif (input.name) {\n+\t\t\t\t\t\t\t\tformData[input.name] = formData[input.name] || [];\n+\t\t\t\t\t\t\t\tformData[input.name].push(input.value);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t});\n+\t\t\t\t\t});\n+\n+\t\t\t\t\tlet formDataJson = JSON.stringify(formData);\n+\t\t\t\t\tconsole.log(formDataJson);\n+\n+\t\t\t\t\tconst csrfToken = document.getElementById('csrf_token').value;\n+\t\t\t\t\tconst formUploadData = new FormData();\n+\t\t\t\t\tformUploadData.append('csrf_token', csrfToken);\n+\n+\t\t\t\t\tfor (let key in formData) {\n+\t\t\t\t\t\tif (formData.hasOwnProperty(key)) {\n+\t\t\t\t\t\t\tformUploadData.set(key, formData[key]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tlet checked_orcid = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_orcid)) {\n+\t\t\t\t\t\tfor (let orcid of formData.author_orcid) {\n+\t\t\t\t\t\t\torcid = orcid.trim();\n+\t\t\t\t\t\t\tif (orcid !== '' && !isValidOrcid(orcid)) {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+\t\t\t\t\t\t\t\tchecked_orcid = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tlet checked_name = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_name)) {\n+\t\t\t\t\t\tfor (let name of formData.author_name) {\n+\t\t\t\t\t\t\tname = name.trim();\n+\t\t\t\t\t\t\tif (name === '') {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"The author's name cannot be empty\");\n+\t\t\t\t\t\t\t\tchecked_name = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tif (checked_orcid && checked_name) {\n+\t\t\t\t\t\tfetch('/dataset/upload', {\n+\t\t\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\t\t\tbody: formUploadData\n+\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\t\t\twindow.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t} else {\n+\t\t\t\t\thide_loading();\n+\t\t\t\t}\n+\n+\n+\t\t\t});\n+\t\t}\n+\t};\n+\n+\n+function isValidOrcid(orcid) {\n+\tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+\treturn orcidRegex.test(orcid);\n+}"
      },
      {
        "sha": "5e5649fd81951220c297cec6c3d241f60c213f50",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b",
        "patch": "@@ -93,6 +93,33 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n+@dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n+@login_required\n+def check_dataset():\n+    form = DataSetForm()\n+    if request.method==\"POST\": \n+\n+        temp_folder = current_user.temp_folder()\n+        if not os.path.exists(temp_folder):\n+           return jsonify({\"message\": \"Something went wrong, try again\"}), 400\n+        \n+        filename = os.listdir(temp_folder)[0]\n+        file_path = os.path.join(temp_folder, filename)\n+        \n+        with open(file_path) as f:\n+            indent = 0\n+            x = \"\".join([i for i in f])\n+            print(x)\n+        return jsonify({\"message\": x}),200\n+   \n+    # setting things up for the checker to have only one file available\n+    temp_folder = current_user.temp_folder()\n+    if os.path.exists(temp_folder) and os.path.isdir(temp_folder):\n+            shutil.rmtree(temp_folder)\n+\n+    return render_template(\n+        \"dataset/check_datasets.html\", form = form )\n+\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():"
      },
      {
        "sha": "9c39a7ba463e67ba1cf726d260f7a84a1d8cbd14",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "added",
        "additions": 286,
        "deletions": 0,
        "changes": 286,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b",
        "patch": "@@ -0,0 +1,286 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}Check UVL model{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n+\n+    {% if messages %}\n+        <ul>\n+            {% for message in messages %}\n+                <li>{{ message }}</li>\n+            {% endfor %}\n+        </ul>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+\n+            <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n+\n+            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n+                \n+\t\t{{ form.hidden_tag() }}\n+\n+\n+                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n+                    <div id=\"dropzone-text\"></div>\n+                </form>\n+\n+                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n+                    </span>\n+\n+                <ul class=\"mt-2\" id=\"file-list\"></ul>\n+\n+                <script>\n+                    let dropzone = Dropzone.options.myDropzone = {\n+                        url: \"/dataset/file/upload\",\n+                        paramName: 'file',\n+                        maxFilesize: 10,\n+                        acceptedFiles: '.uvl',\n+                        init: function () {\n+\n+\t\t\t\tlet fileList = document.getElementById('file-list');\n+\t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n+\t\t\t\tlet alerts = document.getElementById('alerts');\n+\t\t\t\tthis.on('addedfile', function (file) {\n+\n+\t\t\t\t\tlet ext = file.name.split('.').pop();\n+\t\t\t\t\tif (ext !== 'uvl') {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+\t\t\t\t\tif (fileList.childElementCount > 0) {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+                            });\n+\n+                            this.on('success', function (file, response) {\n+\n+                                let dropzone = this;\n+\n+                                show_upload_dataset();\n+\n+                                console.log(\"File uploaded: \", response);\n+                                // actions when UVL model is uploaded\n+                                let listItem = document.createElement('li');\n+                                let h4Element = document.createElement('h4');\n+                                h4Element.textContent = response.filename;\n+                                listItem.appendChild(h4Element);\n+\n+                                // generate incremental id for form\n+                                let formUniqueId = generateIncrementalId();\n+\n+                               /*\n+                                    ##########################################\n+                                    REMOVE BUTTON\n+                                    ##########################################\n+                                */\n+\n+                                // remove button\n+                                let removeButton = document.createElement('button');\n+                                removeButton.innerHTML = 'Delete model';\n+                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n+                                removeButton.style.borderRadius = '5px';\n+\n+                                removeButton.addEventListener('click', function () {\n+                                    fileList.removeChild(listItem);\n+                                    this.removeFile(file);\n+\n+                                    // Ajax request\n+                                    let xhr = new XMLHttpRequest();\n+                                    xhr.open('POST', '/dataset/file/delete', true);\n+                                    xhr.setRequestHeader('Content-Type', 'application/json');\n+                                    xhr.onload = function () {\n+                                        if (xhr.status === 200) {\n+                                            console.log('Deleted file from server');\n+\n+                                            if (dropzone.files.length === 0) {\n+                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n+                                                clean_upload_errors();\n+                                            }\n+\n+                                        }\n+                                    };\n+                                    xhr.send(JSON.stringify({file: file.name}));\n+                                }.bind(this));\n+\n+                                /*\n+                                    ##########################################\n+                                    APPEND BUTTONS\n+                                    ##########################################\n+                                */\n+                                listItem.appendChild(removeButton);\n+\n+                                /*\n+                                    ##########################################\n+                                    UVL FORM\n+                                    ##########################################\n+                                */\n+\n+                                // create specific form for UVL\n+                                let formContainer = document.createElement('div');\n+                                formContainer.id = formUniqueId + \"_form\";\n+                                formContainer.classList.add('uvl_form', \"mt-3\");\n+                                formContainer.style.display = \"none\";\n+\n+                                formContainer.innerHTML = `\n+                                    <div class=\"row\">\n+                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n+                                        <div class=\"col-12\">\n+                                            <div class=\"row\">\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Title</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Description</label>\n+                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n+                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n+                                                            <option value=\"none\">None</option>\n+                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n+                                                            <option value=\"book\">Book</option>\n+                                                            <option value=\"section\">Book Section</option>\n+                                                            <option value=\"conferencepaper\">Conference Paper</option>\n+                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n+                                                            <option value=\"article\">Journal Article</option>\n+                                                            <option value=\"patent\">Patent</option>\n+                                                            <option value=\"preprint\">Preprint</option>\n+                                                            <option value=\"deliverable\">Project Deliverable</option>\n+                                                            <option value=\"milestone\">Project Milestone</option>\n+                                                            <option value=\"proposal\">Proposal</option>\n+                                                            <option value=\"report\">Report</option>\n+                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n+                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n+                                                            <option value=\"technicalnote\">Technical Note</option>\n+                                                            <option value=\"thesis\">Thesis</option>\n+                                                            <option value=\"workingpaper\">Working Paper</option>\n+                                                            <option value=\"other\">Other</option>\n+                                                        </select>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n+                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">UVL version</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Authors</label>\n+                                                        <div id=\"` + formContainer.id + `_authors\">\n+                                                        </div>\n+                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n+                                                    </div>\n+                                                </div>\n+                                            </div>\n+                                        </div>\n+                                    </div>\n+                                    `;\n+\n+                                listItem.appendChild(formContainer);\n+                                fileList.appendChild(listItem);\n+\n+                            });\n+\n+                            this.on('error', function (file, response) {\n+                                console.error(\"Error uploading file: \", response);\n+                                let alert = document.createElement('p');\n+                                alert.textContent = 'UVL not valid: ' + file.name;\n+                                alerts.appendChild(alert);\n+                                alerts.style.display = 'block';\n+                            });\n+\n+                        }\n+                    };\n+\n+\n+                </script>\n+\n+            </div>\n+        </div>\n+\n+    </div>\n+\n+    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n+\n+        <div class=\"col-12\">\n+\n+            <hr>\n+\n+            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n+\n+            <div style=\"padding-left: 2rem\">\n+\n+                <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n+                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n+                    Upload dataset</button>\n+\n+                <div id=\"loading\" style=\"display: none\">\n+                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n+                    Uploading dataset, please wait...\n+                </div>\n+\n+                <div class=\"row\">\n+                    <div class=\"col-12 mb-3\">\n+\n+                    </div>\n+                </div>\n+\n+                \n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n+\n+                    </span>\n+\n+                <script>\n+                    const upload_button = document.getElementById('check_model_button');\n+\t\t\tupload_button.disabled = false;\n+                </script>\n+\n+            </div>\n+\n+\n+\n+\n+        </div>\n+\n+    </div>\n+\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "be09f0569ebce7c76a36fa4242b05493e8e2db46",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=fc7bcfef9ac7018acfbaa26aa6f6d995f3312a9b",
        "patch": "@@ -111,6 +111,14 @@\n                         </a>\n                     </li>\n \n+\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.list_dataset' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n+                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n+                                class=\"align-middle\">Check model</span>\n+                        </a>\n+                    </li>\n+\n+\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>\n@@ -306,4 +314,4 @@\n \n </body>\n \n-</html>\n\\ No newline at end of file\n+</html>"
      }
    ]
  },
  {
    "sha": "d8c06c6831efae1a3e27eaac8f3f6f3609ad803e",
    "node_id": "C_kwDONDG85doAKGQ4YzA2YzY4MzFlZmFlMWEzZTI3ZWFhYzhmM2Y2ZjM2MDlhZDgwM2U",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-11-13T17:05:42Z"
      },
      "committer": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-11-13T17:05:42Z"
      },
      "message": "feature(explore): Add filter of num of files",
      "tree": {
        "sha": "d91041e78b3579dda74b8ec7d771a6b7c7726506",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/d91041e78b3579dda74b8ec7d771a6b7c7726506"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/68bda8a260f5f4856b774b4ffe9186a072feb08b"
      }
    ],
    "files": [
      {
        "sha": "5121541af87aa72f5d80a8980adba7d01b82ff7b",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=d8c06c6831efae1a3e27eaac8f3f6f3609ad803e",
        "patch": "@@ -16,13 +16,18 @@ function send_query() {\n         filter.addEventListener('input', () => {\n             const csrfToken = document.getElementById('csrf_token').value;\n \n+            const minFiles = document.getElementById('min_files').value || null;\n+            const maxFiles = document.getElementById('max_files').value || null;\n+\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n                 publication_type: document.querySelector('#publication_type').value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n+                min_files: minFiles,\n+                max_files: maxFiles\n             };\n-\n+            \n             console.log(document.querySelector('#publication_type').value);\n \n             fetch('/explore', {\n@@ -179,6 +184,12 @@ function clearFilters() {\n         // option.dispatchEvent(new Event('input', {bubbles: true}));\n     });\n \n+    let minFilesInput = document.querySelector('#min_files');\n+    let maxFilesInput = document.querySelector('#max_files');\n+    minFilesInput.value = \"\"; \n+    maxFilesInput.value = \"\"; \n+\n+\n     // Perform a new search with the reset filters\n     queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n }"
      },
      {
        "sha": "97b70f41068aec68ab279e01cf2f4be9a47fd512",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=d8c06c6831efae1a3e27eaac8f3f6f3609ad803e",
        "patch": "@@ -10,12 +10,17 @@ class ExploreRepository(BaseRepository):\n     def __init__(self):\n         super().__init__(DataSet)\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None, **kwargs):\n         # Normalize and remove unwanted characters\n         normalized_query = unidecode.unidecode(query).lower()\n         cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n \n         filters = []\n+        min_files = int(min_files) if min_files is not None else None\n+        max_files = int(max_files) if max_files is not None else None\n+\n         for word in cleaned_query.split():\n             filters.append(DSMetaData.title.ilike(f\"%{word}%\"))\n             filters.append(DSMetaData.description.ilike(f\"%{word}%\"))\n@@ -58,4 +63,11 @@ def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **\n         else:\n             datasets = datasets.order_by(self.model.created_at.desc())\n \n-        return datasets.all()\n+        datasets = datasets.all()\n+\n+        if min_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() >= min_files]\n+        if max_files is not None:\n+            datasets = [dataset for dataset in datasets if dataset.get_files_count() <= max_files]\n+\n+        return datasets"
      },
      {
        "sha": "bac790287ba02a7c78edf128946264e4bcdffa4f",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=d8c06c6831efae1a3e27eaac8f3f6f3609ad803e",
        "patch": "@@ -6,5 +6,7 @@ class ExploreService(BaseService):\n     def __init__(self):\n         super().__init__(ExploreRepository())\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n-        return self.repository.filter(query, sorting, publication_type, tags, **kwargs)\n+    def filter(self, query=\"\", sorting=\"newest\",\n+               publication_type=\"any\", tags=[],\n+               min_files=None, max_files=None, **kwargs):\n+        return self.repository.filter(query, sorting, publication_type, tags, min_files, max_files, **kwargs)"
      },
      {
        "sha": "da435ff834eba3a7984edf3c2e186e5534a7d8cf",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/d8c06c6831efae1a3e27eaac8f3f6f3609ad803e/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=d8c06c6831efae1a3e27eaac8f3f6f3609ad803e",
        "patch": "@@ -54,8 +54,16 @@ <h3 class=\"h3 mb-3\">\n                                        value=\"\" autofocus>\n                             </div>\n                         </div>\n+                        <div class=\"col-6\">\n+                            <div class=\"mb-3\">\n+                                <label for=\"min_files\">Min Files:</label>\n+                                <input type=\"number\" id=\"min_files\" name=\"min_files\" placeholder=\"Min Files\">\n \n-                        <div class=\"col-lg-6\">\n+                                <label for=\"max_files\">Max Files:</label>\n+                                <input type=\"number\" id=\"max_files\" name=\"max_files\" placeholder=\"Max Files\">\n+                            </div>\n+                        </div>\n+                        <div class=\"col-lg-12\">\n                             <div class=\"mb-3\">\n                                 <label class=\"form-label\" for=\"publication_type\">Filter by publication\n                                     type</label>"
      }
    ]
  },
  {
    "sha": "5c5ed13096f494fe3f3782968b281ec220450447",
    "node_id": "C_kwDONDG85doAKDVjNWVkMTMwOTZmNDk0ZmUzZjM3ODI5NjhiMjgxZWMyMjA0NTA0NDc",
    "commit": {
      "author": {
        "name": "raumonmar1",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-13T17:01:51Z"
      },
      "committer": {
        "name": "raumonmar1",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-13T17:01:51Z"
      },
      "message": "Merge branch 'feature-download_different_formats' of ssh://github.com/flamenquin-hub-single/uvlhub into feature-download_different_formats",
      "tree": {
        "sha": "3d6f0f900c6da978e33dff2a6aefd4610ef910d7",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/3d6f0f900c6da978e33dff2a6aefd4610ef910d7"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/5c5ed13096f494fe3f3782968b281ec220450447",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5c5ed13096f494fe3f3782968b281ec220450447",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/5c5ed13096f494fe3f3782968b281ec220450447",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/5c5ed13096f494fe3f3782968b281ec220450447/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8551655cd4c407a15ffee8d4624eaba33cbbfbb4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8551655cd4c407a15ffee8d4624eaba33cbbfbb4",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/8551655cd4c407a15ffee8d4624eaba33cbbfbb4"
      },
      {
        "sha": "fad81ff92422ef57c509b0791b42f0f2c959e4b2",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fad81ff92422ef57c509b0791b42f0f2c959e4b2",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/fad81ff92422ef57c509b0791b42f0f2c959e4b2"
      }
    ],
    "files": [
      {
        "sha": "ed9662cda47acec4094ef10a2c148d2c41df6a54",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 37,
        "deletions": 1,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5c5ed13096f494fe3f3782968b281ec220450447/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5c5ed13096f494fe3f3782968b281ec220450447/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=5c5ed13096f494fe3f3782968b281ec220450447",
        "patch": "@@ -214,8 +214,44 @@ def subdomain_index(doi):\n         abort(404)\n \n     dataset = ds_meta_data.data_set\n+    \n+    # Export DataSet to BibTex\n+    closing_ = \"},\"\n+    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n+    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n+    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n+    \n+    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n+        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    else:\n+        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n+    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n+    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n+\n+    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n+    bibtex_properties.append(\"}\")\n+    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    \n+    max_preview_len = 60\n+    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+\n+    # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+    \n+    n_px = 17*(int(len(bibtex_properties)/2)+1)\n+\n+    page_render = render_template(\"dataset/view_dataset.html\",\n+                    dataset=dataset,\n+                    bibtex_dataset=bibtex_dataset,\n+                    bibtex_preview=bibtex_preview,\n+                    bibtex_preview_start = bibtex_properties[0],\n+                    bibtex_preview_lines=bibtex_properties[1:-1],\n+                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n+                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n+\n+    resp = make_response(page_render)\n+    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp"
      },
      {
        "sha": "d6c86796f02635516ddddabf1bd9491dd205e985",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5c5ed13096f494fe3f3782968b281ec220450447/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5c5ed13096f494fe3f3782968b281ec220450447/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=5c5ed13096f494fe3f3782968b281ec220450447",
        "patch": "@@ -158,6 +158,43 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             </div>\n \n+            {% if bibtex_dataset %}\n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n+                    {{ bibtex_dataset }}\n+                </div>\n+\n+                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n+                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n+                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                        <b>BibTex</b>\n+                    </span>\n+\n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_dataset }}\n+                    </span> -->\n+                   \n+                    \n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_preview }}\n+                    </span> -->\n+                   \n+\n+                    \n+                    <div class=\"doi_text\">\n+                        <div>{{ bibtex_preview_start }}</div>\n+                        {% for bib_line in bibtex_preview_lines %}\n+                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n+                        {% endfor %}\n+                        <div>{{ bibtex_preview_end }}</div>\n+                    </div>\n+                   \n+                </button>\n+            </div>\n+            {% endif %}\n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n             <div class=\"card-body\" style=\"padding-top: 0px\">\n \n@@ -182,6 +219,8 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n             {% endif %}\n \n+            \n+\n         </div>\n \n         <div class=\"card\">"
      },
      {
        "sha": "6a3d5d74165417518ea46c42bc095400cc648683",
        "filename": "app/static/css/own.css",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/5c5ed13096f494fe3f3782968b281ec220450447/app%2Fstatic%2Fcss%2Fown.css",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/5c5ed13096f494fe3f3782968b281ec220450447/app%2Fstatic%2Fcss%2Fown.css",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fcss%2Fown.css?ref=5c5ed13096f494fe3f3782968b281ec220450447",
        "patch": "@@ -142,8 +142,10 @@\n     background-color: #147ABB;\n     padding: 10px;\n     display: flex;\n-    align-items: center;\n+    flex-direction: column;\n+    align-items: flex-start;\n     transition: background-color 0.3s ease;\n+    text-wrap: wrap;\n }\n \n .doi_button:hover .doi_text {"
      }
    ]
  },
  {
    "sha": "a3ecdacf869603862ed3463b553ac645d5cb92f4",
    "node_id": "C_kwDONDG85doAKGEzZWNkYWNmODY5NjAzODYyZWQzNDYzYjU1M2FjNjQ1ZDVjYjkyZjQ",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-11-13T16:58:16Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-11-13T16:58:16Z"
      },
      "message": "Merge pull request #9 from flamenquin-hub-single/feature-upload_analyse_and_repair_UVL\n\nFeature upload analyse and repair uvl",
      "tree": {
        "sha": "5703eefb1a1806e97f3a2404e315b55ae8c7d1fa",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/5703eefb1a1806e97f3a2404e315b55ae8c7d1fa"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/a3ecdacf869603862ed3463b553ac645d5cb92f4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnNNqoCRC1aQ7uu5UhlAAAzz4QACLX4sYjDsHyStq/WOwiQ6FP\n+sHrgso0T2N4HY0IcKIfoGYkEsg6SqWDfDRB8cZVHqTM90f5tVDjm2bGe2SKr3Ju\no6eNx9KAcrPdvA26H+QN4F1+pdOU5gFcyjvb9B0KlFiWgMZXSAY8Gas0wJ1c9wJb\n8FuDyN5ZTG6gXlF6+AN4Qwr+5xveDWDl5dDRz9vJKspaonyO+xcTIpeguyX20U+8\n4VeAdxs0bOPAW/cqFunU6muk1cN+uH9ONDDDmbjY5Im2l0nv1ivjAIstN/l+BQzT\nlUgw4W4t2pTBlX3XCqCI5/zoxnPg6aWdnMR0zypoSz8i57q2mJMcBJAddPGes5yO\nKIjHkFa78PINJCd3B0WEe6hjBeR/yJI1nLZZEb8yQr0C0zX3YY8pQgfbcx2SVngV\nFLYxzedhfls7z57pGjeGqOmOdhlWeMmZzIe8sVMAL+bvJh66fMps8WNvNLdNYtae\n7ZghYY5SNamAIc8uICnfofw2J/7oFhrSQ4BrPbXbDvBZSIlFozRrWpJwLYUh+7RE\nGNyIPAwP44qXRzBjrIVnNca1+ULSRLekq7l7hWx47U3ctI0zTTtpMYOXz8kluuwR\npgh1mKOw4/ovMhGB75VZGvZlowqWkdu8BgHsoWtVieuXaHmYzYMxjqobbt0qJe7g\nAEo96lyrn46lUwhEIIO0\n=qu5c\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 5703eefb1a1806e97f3a2404e315b55ae8c7d1fa\nparent 0747a5a100176c8f57a7dd372e0ff745842391c4\nparent 3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1731517096 +0100\ncommitter GitHub <noreply@github.com> 1731517096 +0100\n\nMerge pull request #9 from flamenquin-hub-single/feature-upload_analyse_and_repair_UVL\n\nFeature upload analyse and repair uvl",
        "verified_at": "2024-11-13T17:03:20Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a3ecdacf869603862ed3463b553ac645d5cb92f4",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a3ecdacf869603862ed3463b553ac645d5cb92f4",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a3ecdacf869603862ed3463b553ac645d5cb92f4/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0747a5a100176c8f57a7dd372e0ff745842391c4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/0747a5a100176c8f57a7dd372e0ff745842391c4",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/0747a5a100176c8f57a7dd372e0ff745842391c4"
      },
      {
        "sha": "3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4"
      }
    ],
    "files": [
      {
        "sha": "4edc9174dc51d519b9495a2c564aabdf49b9f1d5",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 162,
        "deletions": 117,
        "changes": 279,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a3ecdacf869603862ed3463b553ac645d5cb92f4/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a3ecdacf869603862ed3463b553ac645d5cb92f4/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=a3ecdacf869603862ed3463b553ac645d5cb92f4",
        "patch": "@@ -5,6 +5,10 @@ var currentId = 0;\n             document.getElementById(\"upload_dataset\").style.display = \"block\";\n         }\n \n+\tfunction show_check_dataset() {\n+\t\tdocument.getElementById(\"check_dataset\").style.display = \"block\";\n+\t}\n+\n         function generateIncrementalId() {\n             return currentId++;\n         }\n@@ -81,13 +85,14 @@ var currentId = 0;\n             return (titleLength >= 3 && descriptionLength >= 3);\n         }\n \n+\tif (document.getElementById('add_author')) {\n+\t\tdocument.getElementById('add_author').addEventListener('click', function () {\n+\t\t\tlet authors = document.getElementById('authors');\n+\t\t\tlet newAuthor = createAuthorBlock(amount_authors++, \"\");\n+\t\t\tauthors.appendChild(newAuthor);\n+\t\t});\n \n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n+\t}        \n \n         document.addEventListener('click', function (event) {\n             if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n@@ -102,10 +107,14 @@ var currentId = 0;\n             }\n         });\n \n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n+        function show_loading(type) {\n+\t\tif (type===\"check\") {\n+\t\t\tdocument.getElementById(\"check_model_button\").style.display = \"none\";\n+\t\t} else {\n+\t\t\tdocument.getElementById(\"upload_button\").style.display = \"none\";\n+\t\t}\n+\t\tdocument.getElementById(\"loading\").style.display = \"block\";\n+\t}\n \n         function hide_loading() {\n             document.getElementById(\"upload_button\").style.display = \"block\";\n@@ -130,110 +139,146 @@ var currentId = 0;\n \n         window.onload = function () {\n \n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n-\n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n\\ No newline at end of file\n+\t\tif (document.getElementById('check_model_button')) {\n+\n+\t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n+\t\t\t\tconsole.log(\"hi\");\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"check\");\n+\n+\t\t\t\t\n+\t\t\t\tfetch('/dataset/check', {\n+\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\tbody: ''\n+\t\t\t\t})\n+\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\t//window.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t}\n+\t\t\t\t\t})\n+\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t});\n+\t\t\t\tconsole.log(\"yeah\")\n+\n+\t\t\t});\n+\t\t}\n+\t\tif (document.getElementById('upload_button')){\n+\t\t\tdocument.getElementById('upload_button').addEventListener('click', function () {\n+\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"upload\");\n+\n+\t\t\t\t// check title and description\n+\t\t\t\tlet check = check_title_and_description();\n+\n+\t\t\t\tif (check) {\n+\t\t\t\t\t// process data form\n+\t\t\t\t\tconst formData = {};\n+\n+\t\t\t\t\t[\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+\t\t\t\t\t\tconst form = document.getElementById(formId);\n+\t\t\t\t\t\tconst inputs = form.querySelectorAll('input, select, textarea');\n+\t\t\t\t\t\tinputs.forEach(input => {\n+\t\t\t\t\t\t\tif (input.name) {\n+\t\t\t\t\t\t\t\tformData[input.name] = formData[input.name] || [];\n+\t\t\t\t\t\t\t\tformData[input.name].push(input.value);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t});\n+\t\t\t\t\t});\n+\n+\t\t\t\t\tlet formDataJson = JSON.stringify(formData);\n+\t\t\t\t\tconsole.log(formDataJson);\n+\n+\t\t\t\t\tconst csrfToken = document.getElementById('csrf_token').value;\n+\t\t\t\t\tconst formUploadData = new FormData();\n+\t\t\t\t\tformUploadData.append('csrf_token', csrfToken);\n+\n+\t\t\t\t\tfor (let key in formData) {\n+\t\t\t\t\t\tif (formData.hasOwnProperty(key)) {\n+\t\t\t\t\t\t\tformUploadData.set(key, formData[key]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tlet checked_orcid = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_orcid)) {\n+\t\t\t\t\t\tfor (let orcid of formData.author_orcid) {\n+\t\t\t\t\t\t\torcid = orcid.trim();\n+\t\t\t\t\t\t\tif (orcid !== '' && !isValidOrcid(orcid)) {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+\t\t\t\t\t\t\t\tchecked_orcid = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tlet checked_name = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_name)) {\n+\t\t\t\t\t\tfor (let name of formData.author_name) {\n+\t\t\t\t\t\t\tname = name.trim();\n+\t\t\t\t\t\t\tif (name === '') {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"The author's name cannot be empty\");\n+\t\t\t\t\t\t\t\tchecked_name = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tif (checked_orcid && checked_name) {\n+\t\t\t\t\t\tfetch('/dataset/upload', {\n+\t\t\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\t\t\tbody: formUploadData\n+\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\t\t\twindow.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t} else {\n+\t\t\t\t\thide_loading();\n+\t\t\t\t}\n+\n+\n+\t\t\t});\n+\t\t}\n+\t};\n+\n+\n+function isValidOrcid(orcid) {\n+\tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+\treturn orcidRegex.test(orcid);\n+}"
      },
      {
        "sha": "a2b1204eeb812d4ea6f9c9dd9d85aa28c0341c11",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a3ecdacf869603862ed3463b553ac645d5cb92f4/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a3ecdacf869603862ed3463b553ac645d5cb92f4/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=a3ecdacf869603862ed3463b553ac645d5cb92f4",
        "patch": "@@ -117,6 +117,35 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n+@dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n+@login_required\n+def check_dataset():\n+    form = DataSetForm()\n+    if request.method==\"POST\": \n+\n+        temp_folder = current_user.temp_folder()\n+        if not os.path.exists(temp_folder):\n+           return jsonify({\"message\": \"Something went wrong, try again\"}), 400\n+        \n+        filename = os.listdir(temp_folder)[0]\n+        file_path = os.path.join(temp_folder, filename)\n+        \n+        with open(file_path) as f:\n+            indent = 0\n+            x = \"\".join([i for i in f])\n+            print(x)\n+        return jsonify({\"message\": x}),200\n+   \n+    # setting things up for the checker to have only one file available\n+    temp_folder = current_user.temp_folder()\n+    if os.path.exists(temp_folder) and os.path.isdir(temp_folder):\n+            shutil.rmtree(temp_folder)\n+\n+    return render_template(\n+        \"dataset/check_datasets.html\", form = form )\n+\n+\n+\n \n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n@@ -162,6 +191,7 @@ def upload():\n     )\n \n \n+\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()"
      },
      {
        "sha": "9c39a7ba463e67ba1cf726d260f7a84a1d8cbd14",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "added",
        "additions": 286,
        "deletions": 0,
        "changes": 286,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a3ecdacf869603862ed3463b553ac645d5cb92f4/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a3ecdacf869603862ed3463b553ac645d5cb92f4/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=a3ecdacf869603862ed3463b553ac645d5cb92f4",
        "patch": "@@ -0,0 +1,286 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}Check UVL model{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n+\n+    {% if messages %}\n+        <ul>\n+            {% for message in messages %}\n+                <li>{{ message }}</li>\n+            {% endfor %}\n+        </ul>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+\n+            <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n+\n+            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n+                \n+\t\t{{ form.hidden_tag() }}\n+\n+\n+                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n+                    <div id=\"dropzone-text\"></div>\n+                </form>\n+\n+                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n+                    </span>\n+\n+                <ul class=\"mt-2\" id=\"file-list\"></ul>\n+\n+                <script>\n+                    let dropzone = Dropzone.options.myDropzone = {\n+                        url: \"/dataset/file/upload\",\n+                        paramName: 'file',\n+                        maxFilesize: 10,\n+                        acceptedFiles: '.uvl',\n+                        init: function () {\n+\n+\t\t\t\tlet fileList = document.getElementById('file-list');\n+\t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n+\t\t\t\tlet alerts = document.getElementById('alerts');\n+\t\t\t\tthis.on('addedfile', function (file) {\n+\n+\t\t\t\t\tlet ext = file.name.split('.').pop();\n+\t\t\t\t\tif (ext !== 'uvl') {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+\t\t\t\t\tif (fileList.childElementCount > 0) {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+                            });\n+\n+                            this.on('success', function (file, response) {\n+\n+                                let dropzone = this;\n+\n+                                show_upload_dataset();\n+\n+                                console.log(\"File uploaded: \", response);\n+                                // actions when UVL model is uploaded\n+                                let listItem = document.createElement('li');\n+                                let h4Element = document.createElement('h4');\n+                                h4Element.textContent = response.filename;\n+                                listItem.appendChild(h4Element);\n+\n+                                // generate incremental id for form\n+                                let formUniqueId = generateIncrementalId();\n+\n+                               /*\n+                                    ##########################################\n+                                    REMOVE BUTTON\n+                                    ##########################################\n+                                */\n+\n+                                // remove button\n+                                let removeButton = document.createElement('button');\n+                                removeButton.innerHTML = 'Delete model';\n+                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n+                                removeButton.style.borderRadius = '5px';\n+\n+                                removeButton.addEventListener('click', function () {\n+                                    fileList.removeChild(listItem);\n+                                    this.removeFile(file);\n+\n+                                    // Ajax request\n+                                    let xhr = new XMLHttpRequest();\n+                                    xhr.open('POST', '/dataset/file/delete', true);\n+                                    xhr.setRequestHeader('Content-Type', 'application/json');\n+                                    xhr.onload = function () {\n+                                        if (xhr.status === 200) {\n+                                            console.log('Deleted file from server');\n+\n+                                            if (dropzone.files.length === 0) {\n+                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n+                                                clean_upload_errors();\n+                                            }\n+\n+                                        }\n+                                    };\n+                                    xhr.send(JSON.stringify({file: file.name}));\n+                                }.bind(this));\n+\n+                                /*\n+                                    ##########################################\n+                                    APPEND BUTTONS\n+                                    ##########################################\n+                                */\n+                                listItem.appendChild(removeButton);\n+\n+                                /*\n+                                    ##########################################\n+                                    UVL FORM\n+                                    ##########################################\n+                                */\n+\n+                                // create specific form for UVL\n+                                let formContainer = document.createElement('div');\n+                                formContainer.id = formUniqueId + \"_form\";\n+                                formContainer.classList.add('uvl_form', \"mt-3\");\n+                                formContainer.style.display = \"none\";\n+\n+                                formContainer.innerHTML = `\n+                                    <div class=\"row\">\n+                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n+                                        <div class=\"col-12\">\n+                                            <div class=\"row\">\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Title</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Description</label>\n+                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n+                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n+                                                            <option value=\"none\">None</option>\n+                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n+                                                            <option value=\"book\">Book</option>\n+                                                            <option value=\"section\">Book Section</option>\n+                                                            <option value=\"conferencepaper\">Conference Paper</option>\n+                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n+                                                            <option value=\"article\">Journal Article</option>\n+                                                            <option value=\"patent\">Patent</option>\n+                                                            <option value=\"preprint\">Preprint</option>\n+                                                            <option value=\"deliverable\">Project Deliverable</option>\n+                                                            <option value=\"milestone\">Project Milestone</option>\n+                                                            <option value=\"proposal\">Proposal</option>\n+                                                            <option value=\"report\">Report</option>\n+                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n+                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n+                                                            <option value=\"technicalnote\">Technical Note</option>\n+                                                            <option value=\"thesis\">Thesis</option>\n+                                                            <option value=\"workingpaper\">Working Paper</option>\n+                                                            <option value=\"other\">Other</option>\n+                                                        </select>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n+                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">UVL version</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Authors</label>\n+                                                        <div id=\"` + formContainer.id + `_authors\">\n+                                                        </div>\n+                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n+                                                    </div>\n+                                                </div>\n+                                            </div>\n+                                        </div>\n+                                    </div>\n+                                    `;\n+\n+                                listItem.appendChild(formContainer);\n+                                fileList.appendChild(listItem);\n+\n+                            });\n+\n+                            this.on('error', function (file, response) {\n+                                console.error(\"Error uploading file: \", response);\n+                                let alert = document.createElement('p');\n+                                alert.textContent = 'UVL not valid: ' + file.name;\n+                                alerts.appendChild(alert);\n+                                alerts.style.display = 'block';\n+                            });\n+\n+                        }\n+                    };\n+\n+\n+                </script>\n+\n+            </div>\n+        </div>\n+\n+    </div>\n+\n+    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n+\n+        <div class=\"col-12\">\n+\n+            <hr>\n+\n+            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n+\n+            <div style=\"padding-left: 2rem\">\n+\n+                <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n+                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n+                    Upload dataset</button>\n+\n+                <div id=\"loading\" style=\"display: none\">\n+                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n+                    Uploading dataset, please wait...\n+                </div>\n+\n+                <div class=\"row\">\n+                    <div class=\"col-12 mb-3\">\n+\n+                    </div>\n+                </div>\n+\n+                \n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n+\n+                    </span>\n+\n+                <script>\n+                    const upload_button = document.getElementById('check_model_button');\n+\t\t\tupload_button.disabled = false;\n+                </script>\n+\n+            </div>\n+\n+\n+\n+\n+        </div>\n+\n+    </div>\n+\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "59133f56c0ce9befb57f7f8318e60aedafcf0f41",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a3ecdacf869603862ed3463b553ac645d5cb92f4/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a3ecdacf869603862ed3463b553ac645d5cb92f4/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=a3ecdacf869603862ed3463b553ac645d5cb92f4",
        "patch": "@@ -110,6 +110,14 @@\n                         </a>\n                     </li>\n \n+\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.list_dataset' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n+                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n+                                class=\"align-middle\">Check model</span>\n+                        </a>\n+                    </li>\n+\n+\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>\n@@ -305,4 +313,4 @@\n \n </body>\n \n-</html>\n\\ No newline at end of file\n+</html>"
      }
    ]
  },
  {
    "sha": "8551655cd4c407a15ffee8d4624eaba33cbbfbb4",
    "node_id": "C_kwDONDG85doAKDg1NTE2NTVjZDRjNDA3YTE1ZmZlZThkNDYyNGVhYmEzM2NiYmZiYjQ",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-13T16:47:34Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-13T16:47:34Z"
      },
      "message": "fix(requirements): add dependencies",
      "tree": {
        "sha": "a026294dcf62ebd68fe83df08c54435d0cf3655e",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a026294dcf62ebd68fe83df08c54435d0cf3655e"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/8551655cd4c407a15ffee8d4624eaba33cbbfbb4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8551655cd4c407a15ffee8d4624eaba33cbbfbb4",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/8551655cd4c407a15ffee8d4624eaba33cbbfbb4",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/8551655cd4c407a15ffee8d4624eaba33cbbfbb4/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3"
      }
    ],
    "files": [
      {
        "sha": "e79d86c7e2e3141bca6c3ae5143c00e227c676eb",
        "filename": "requirements.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/8551655cd4c407a15ffee8d4624eaba33cbbfbb4/requirements.txt",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/8551655cd4c407a15ffee8d4624eaba33cbbfbb4/requirements.txt",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/requirements.txt?ref=8551655cd4c407a15ffee8d4624eaba33cbbfbb4",
        "patch": "@@ -74,6 +74,7 @@ python-sat==1.8.dev13\n pytz==2024.1\n pyzmq==26.0.3\n requests==2.32.3\n+-e git+https://github.com/flamenquin-hub-single/uvlhub.git@f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3#egg=rosemary\n selenium==4.22.0\n selenium-wire==5.1.0\n setuptools==70.3.0"
      }
    ]
  },
  {
    "sha": "fad81ff92422ef57c509b0791b42f0f2c959e4b2",
    "node_id": "C_kwDONDG85doAKGZhZDgxZmY5MjQyMmVmNTdjNTA5YjA3OTFiNDJmMGYyYzk1OWU0YjI",
    "commit": {
      "author": {
        "name": "raumonmar1",
        "email": "72814383+raumonmar1@users.noreply.github.com",
        "date": "2024-11-13T16:18:15Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-11-13T16:18:15Z"
      },
      "message": "Merge branch 'develop' into feature-download_different_formats",
      "tree": {
        "sha": "bc0830f46319d55d76e9a3f27ea7a4600157f80c",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/bc0830f46319d55d76e9a3f27ea7a4600157f80c"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/fad81ff92422ef57c509b0791b42f0f2c959e4b2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnNNFHCRC1aQ7uu5UhlAAAc+AQAHogbQD3b/oh4dkWDRO69Vyk\n/JZmmZLTBDbmyPdyuvWRX694UIiQxhWHjn5xHA3qB32tG2V4V5FPSUIpD01Ph++Q\nQ7IvEBXTWFFpsr84kysrMQDunfCfUXcM8Us/Mi6GVEXNuTh6xXpHfX14Np6m+oTA\ncWq8Yy80gGD72CLn3reKD/Dge6KuDEmRHdqCInlNZLWaWXMxNDBRbSK6UrxabU4V\nn2aTx1QsfDeH1aG1fCg/ajeyM6rfS+N98k95eHya8v126S3VP/du/ms+23NZZmlU\n4WMZwQ+GX/lEJRvjqzhXogFEpkAIU4YRBf5bh3ZI4aKAvVDf+QhzmLvCKfp3Y94v\nSu+iq03HT9CbbOVYzsLboPLCYnytRKx1nalTnhAjhzW09PjAp9FKpf08snIIiMLn\nYw65y4SDXPjXDCz9ZwNv7K5Hir0+yvvhFqllxXkU2g7zhVNBogOYuWxtiVeMsPXN\nofvllFzJf1s3jHZSW/hpBeZPLxIxWXQs4tDdm8xQXF8+Wt8SOEU/VFLjIUThQTA4\npa37BQS4zjCBbqz1CaOdWzDNd+4feeT1wddxqVeiUc6ZSDlessLasn0eJZGtS8EJ\nAqJxqRFrnw5WWsHDWNz3Rw04LgWJDEk0TA+mdr2LWEBVAdXF5jzzJELAKmGzamxi\ndErMm42IkqJctJcby/ZG\n=yiUl\n-----END PGP SIGNATURE-----\n",
        "payload": "tree bc0830f46319d55d76e9a3f27ea7a4600157f80c\nparent f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3\nparent 0747a5a100176c8f57a7dd372e0ff745842391c4\nauthor raumonmar1 <72814383+raumonmar1@users.noreply.github.com> 1731514695 +0100\ncommitter GitHub <noreply@github.com> 1731514695 +0100\n\nMerge branch 'develop' into feature-download_different_formats",
        "verified_at": "2024-11-13T16:18:18Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fad81ff92422ef57c509b0791b42f0f2c959e4b2",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/fad81ff92422ef57c509b0791b42f0f2c959e4b2",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/fad81ff92422ef57c509b0791b42f0f2c959e4b2/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3"
      },
      {
        "sha": "0747a5a100176c8f57a7dd372e0ff745842391c4",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/0747a5a100176c8f57a7dd372e0ff745842391c4",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/0747a5a100176c8f57a7dd372e0ff745842391c4"
      }
    ],
    "files": [
      {
        "sha": "ed9662cda47acec4094ef10a2c148d2c41df6a54",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 37,
        "deletions": 1,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/fad81ff92422ef57c509b0791b42f0f2c959e4b2/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/fad81ff92422ef57c509b0791b42f0f2c959e4b2/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=fad81ff92422ef57c509b0791b42f0f2c959e4b2",
        "patch": "@@ -214,8 +214,44 @@ def subdomain_index(doi):\n         abort(404)\n \n     dataset = ds_meta_data.data_set\n+    \n+    # Export DataSet to BibTex\n+    closing_ = \"},\"\n+    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n+    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n+    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n+    \n+    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n+        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    else:\n+        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n+    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n+    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n+\n+    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n+    bibtex_properties.append(\"}\")\n+    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    \n+    max_preview_len = 60\n+    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+\n+    # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+    \n+    n_px = 17*(int(len(bibtex_properties)/2)+1)\n+\n+    page_render = render_template(\"dataset/view_dataset.html\",\n+                    dataset=dataset,\n+                    bibtex_dataset=bibtex_dataset,\n+                    bibtex_preview=bibtex_preview,\n+                    bibtex_preview_start = bibtex_properties[0],\n+                    bibtex_preview_lines=bibtex_properties[1:-1],\n+                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n+                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n+\n+    resp = make_response(page_render)\n+    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp"
      },
      {
        "sha": "d6c86796f02635516ddddabf1bd9491dd205e985",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/fad81ff92422ef57c509b0791b42f0f2c959e4b2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/fad81ff92422ef57c509b0791b42f0f2c959e4b2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=fad81ff92422ef57c509b0791b42f0f2c959e4b2",
        "patch": "@@ -158,6 +158,43 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             </div>\n \n+            {% if bibtex_dataset %}\n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n+                    {{ bibtex_dataset }}\n+                </div>\n+\n+                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n+                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n+                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                        <b>BibTex</b>\n+                    </span>\n+\n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_dataset }}\n+                    </span> -->\n+                   \n+                    \n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_preview }}\n+                    </span> -->\n+                   \n+\n+                    \n+                    <div class=\"doi_text\">\n+                        <div>{{ bibtex_preview_start }}</div>\n+                        {% for bib_line in bibtex_preview_lines %}\n+                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n+                        {% endfor %}\n+                        <div>{{ bibtex_preview_end }}</div>\n+                    </div>\n+                   \n+                </button>\n+            </div>\n+            {% endif %}\n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n             <div class=\"card-body\" style=\"padding-top: 0px\">\n \n@@ -182,6 +219,8 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n             {% endif %}\n \n+            \n+\n         </div>\n \n         <div class=\"card\">"
      },
      {
        "sha": "6a3d5d74165417518ea46c42bc095400cc648683",
        "filename": "app/static/css/own.css",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/fad81ff92422ef57c509b0791b42f0f2c959e4b2/app%2Fstatic%2Fcss%2Fown.css",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/fad81ff92422ef57c509b0791b42f0f2c959e4b2/app%2Fstatic%2Fcss%2Fown.css",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fcss%2Fown.css?ref=fad81ff92422ef57c509b0791b42f0f2c959e4b2",
        "patch": "@@ -142,8 +142,10 @@\n     background-color: #147ABB;\n     padding: 10px;\n     display: flex;\n-    align-items: center;\n+    flex-direction: column;\n+    align-items: flex-start;\n     transition: background-color 0.3s ease;\n+    text-wrap: wrap;\n }\n \n .doi_button:hover .doi_text {"
      }
    ]
  },
  {
    "sha": "f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3",
    "node_id": "C_kwDONDG85doAKGY3OWI0MTJmYzFhZTBmMmQzMWE3NGZhM2IyNmZiN2JhZWMzY2FkZDM",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-13T16:11:48Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-13T16:11:48Z"
      },
      "message": "refactor(notepad): clean and organize routes in routes.py for improved readability",
      "tree": {
        "sha": "43f806974f4040f786ce55b82c2619fa222e6c4d",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/43f806974f4040f786ce55b82c2619fa222e6c4d"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e71253f322d609a7a37b4adcb68a034b4bb69a42",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e71253f322d609a7a37b4adcb68a034b4bb69a42",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e71253f322d609a7a37b4adcb68a034b4bb69a42"
      }
    ],
    "files": [
      {
        "sha": "32776d82984141e89410449c4ec48051b3c79a27",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 8,
        "deletions": 62,
        "changes": 70,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=f79b412fc1ae0f2d31a74fa3b26fb7baec3cadd3",
        "patch": "@@ -6,24 +6,11 @@\n import uuid\n from datetime import datetime, timezone\n from zipfile import ZipFile\n-from flask import jsonify, redirect, url_for\n-\n-from flask import (\n-    redirect,\n-    render_template,\n-    request,\n-    jsonify,\n-    send_from_directory,\n-    make_response,\n-    abort,\n-    url_for,\n-)\n+from flask import jsonify, redirect, url_for, render_template, request, send_from_directory, make_response, abort\n from flask_login import login_required, current_user\n \n from app.modules.dataset.forms import DataSetForm\n-from app.modules.dataset.models import (\n-    DSDownloadRecord\n-)\n+from app.modules.dataset.models import DSDownloadRecord\n from app.modules.dataset import dataset_bp\n from app.modules.dataset.services import (\n     AuthorService,\n@@ -37,21 +24,18 @@\n \n logger = logging.getLogger(__name__)\n \n-\n dataset_service = DataSetService()\n author_service = AuthorService()\n dsmetadata_service = DSMetaDataService()\n zenodo_service = ZenodoService()\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n \n-\n @dataset_bp.route(\"/dataset/upload\", methods=[\"GET\", \"POST\"])\n @login_required\n def create_dataset():\n     form = DataSetForm()\n     if request.method == \"POST\":\n-\n         dataset = None\n \n         if not form.validate_on_submit():\n@@ -63,8 +47,8 @@ def create_dataset():\n             logger.info(f\"Created dataset: {dataset}\")\n             dataset_service.move_feature_models(dataset)\n         except Exception as exc:\n-            logger.exception(f\"Exception while create dataset data in local {exc}\")\n-            return jsonify({\"Exception while create dataset data in local: \": str(exc)}), 400\n+            logger.exception(f\"Exception while creating dataset data in local {exc}\")\n+            return jsonify({\"Exception while creating dataset data in local\": str(exc)}), 400\n \n         # send dataset as deposition to Zenodo\n         data = {}\n@@ -75,30 +59,22 @@ def create_dataset():\n         except Exception as exc:\n             data = {}\n             zenodo_response_json = {}\n-            logger.exception(f\"Exception while create dataset data in Zenodo {exc}\")\n+            logger.exception(f\"Exception while creating dataset data in Zenodo {exc}\")\n \n         if data.get(\"conceptrecid\"):\n             deposition_id = data.get(\"id\")\n-\n-            # update dataset with deposition id in Zenodo\n             dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n \n             try:\n-                # iterate for each feature model (one feature model = one request to Zenodo)\n                 for feature_model in dataset.feature_models:\n                     zenodo_service.upload_file(dataset, deposition_id, feature_model)\n-\n-                # publish deposition\n                 zenodo_service.publish_deposition(deposition_id)\n-\n-                # update DOI\n                 deposition_doi = zenodo_service.get_doi(deposition_id)\n                 dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n             except Exception as e:\n-                msg = f\"it has not been possible upload feature models in Zenodo and update the DOI: {e}\"\n+                msg = f\"it has not been possible to upload feature models in Zenodo and update the DOI: {e}\"\n                 return jsonify({\"message\": msg}), 200\n \n-        # Delete temp folder\n         file_path = current_user.temp_folder()\n         if os.path.exists(file_path) and os.path.isdir(file_path):\n             shutil.rmtree(file_path)\n@@ -108,7 +84,6 @@ def create_dataset():\n \n     return render_template(\"dataset/upload_dataset.html\", form=form)\n \n-\n @dataset_bp.route(\"/dataset/list\", methods=[\"GET\", \"POST\"])\n @login_required\n def list_dataset():\n@@ -118,7 +93,6 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n-\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -128,14 +102,12 @@ def upload():\n     if not file or not file.filename.endswith(\".uvl\"):\n         return jsonify({\"message\": \"No valid file\"}), 400\n \n-    # create temp folder\n     if not os.path.exists(temp_folder):\n         os.makedirs(temp_folder)\n \n     file_path = os.path.join(temp_folder, file.filename)\n \n     if os.path.exists(file_path):\n-        # Generate unique filename (by recursion)\n         base_name, extension = os.path.splitext(file.filename)\n         i = 1\n         while os.path.exists(\n@@ -162,7 +134,6 @@ def upload():\n         200,\n     )\n \n-\n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():\n     data = request.get_json()\n@@ -176,23 +147,18 @@ def delete():\n \n     return jsonify({\"error\": \"Error: File not found\"})\n \n-\n @dataset_bp.route(\"/dataset/download/<int:dataset_id>\", methods=[\"GET\"])\n def download_dataset(dataset_id):\n     dataset = dataset_service.get_or_404(dataset_id)\n-\n     file_path = f\"uploads/user_{dataset.user_id}/dataset_{dataset.id}/\"\n-\n     temp_dir = tempfile.mkdtemp()\n     zip_path = os.path.join(temp_dir, f\"dataset_{dataset_id}.zip\")\n \n     with ZipFile(zip_path, \"w\") as zipf:\n         for subdir, dirs, files in os.walk(file_path):\n             for file in files:\n                 full_path = os.path.join(subdir, file)\n-\n                 relative_path = os.path.relpath(full_path, file_path)\n-\n                 zipf.write(\n                     full_path,\n                     arcname=os.path.join(\n@@ -202,10 +168,7 @@ def download_dataset(dataset_id):\n \n     user_cookie = request.cookies.get(\"download_cookie\")\n     if not user_cookie:\n-        user_cookie = str(\n-            uuid.uuid4()\n-        )  # Generate a new unique identifier if it does not exist\n-        # Save the cookie to the user's browser\n+        user_cookie = str(uuid.uuid4())\n         resp = make_response(\n             send_from_directory(\n                 temp_dir,\n@@ -223,15 +186,13 @@ def download_dataset(dataset_id):\n             mimetype=\"application/zip\",\n         )\n \n-    # Check if the download record already exists for this cookie\n     existing_record = DSDownloadRecord.query.filter_by(\n         user_id=current_user.id if current_user.is_authenticated else None,\n         dataset_id=dataset_id,\n         download_cookie=user_cookie\n     ).first()\n \n     if not existing_record:\n-        # Record the download in your database\n         DSDownloadRecordService().create(\n             user_id=current_user.id if current_user.is_authenticated else None,\n             dataset_id=dataset_id,\n@@ -241,61 +202,46 @@ def download_dataset(dataset_id):\n \n     return resp\n \n-\n @dataset_bp.route(\"/doi/<path:doi>/\", methods=[\"GET\"])\n def subdomain_index(doi):\n-\n-    # Check if the DOI is an old DOI\n     new_doi = doi_mapping_service.get_new_doi(doi)\n     if new_doi:\n-        # Redirect to the same path with the new DOI\n         return redirect(url_for('dataset.subdomain_index', doi=new_doi), code=302)\n \n-    # Try to search the dataset by the provided DOI (which should already be the new one)\n     ds_meta_data = dsmetadata_service.filter_by_doi(doi)\n \n     if not ds_meta_data:\n         abort(404)\n \n-    # Get dataset\n     dataset = ds_meta_data.data_set\n-\n-    # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n     resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp\n \n-\n @dataset_bp.route(\"/dataset/unsynchronized/<int:dataset_id>/\", methods=[\"GET\"])\n @login_required\n def get_unsynchronized_dataset(dataset_id):\n-\n-    # Get dataset\n     dataset = dataset_service.get_unsynchronized_dataset(current_user.id, dataset_id)\n \n     if not dataset:\n         abort(404)\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n-\n @dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n def download_dataset_format(file_id, format):\n-    \"\"\"\n-    Endpoint to download dataset in the specified format.\n+    \"\"\"Endpoint to download dataset in the specified format.\n     Formats supported: uvl, glencoe, splot, dimacs, zip.\n     \"\"\"\n-    # Redirigir a los endpoints de flamapy seg\u00fan el formato solicitado\n     if format == \"glencoe\":\n         return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n     elif format == \"splot\":\n         return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n     elif format == \"dimacs\":\n         return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n     elif format == \"zip\":\n-        # Redirige al endpoint original de descarga ZIP\n         return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n     else:\n         return jsonify({\"error\": \"Formato no soportado\"}), 400"
      }
    ]
  },
  {
    "sha": "0747a5a100176c8f57a7dd372e0ff745842391c4",
    "node_id": "C_kwDONDG85doAKDA3NDdhNWExMDAxNzZjOGY1N2E3ZGQzNzJlMGZmNzQ1ODQyMzkxYzQ",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "91948919+JoseGTD@users.noreply.github.com",
        "date": "2024-11-13T15:25:07Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-11-13T15:25:07Z"
      },
      "message": "Merge pull request #1 from flamenquin-hub-single/feature-export_dataset_bibtex\n\nfeat (dataset): Export dataset bibtex",
      "tree": {
        "sha": "8ab91357e4cfcc1dbd49082c0550ed03e70fa4ec",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/8ab91357e4cfcc1dbd49082c0550ed03e70fa4ec"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/0747a5a100176c8f57a7dd372e0ff745842391c4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnNMTTCRC1aQ7uu5UhlAAAIBUQADdoOC2TIdpVEa72iwYthjHl\ngboQ/RPobVBhPNEX3Vga3tro6uGAYSWu5bzbG9b/D8nDxy92Svy7qOdSdgB9II7l\nd5TI+watucO7WtL6kaWJ1P/kRP/iG01WQeG+Z+SPvOH3Q+SeNBWUYM2oP/4m4prw\nOCzg14b9gSI2SvWd6lLGkZQdVy+sLNJK8b2lfRym4ogZdMmYWfpwH/nbWqfMELVT\ns4TYurppIaOGPHZzW2E3VtNQFX+Y0WbL9t1dmbpVb3SQMLvQ0Kfw8pomv1clTmu0\nLugHWr9HUrLtPX+Hs3JpWOxNFZfA+96KLhEDYTh/LzEkklC+tvo9Cd4oLg+5jVCv\n/bBHGB7i6NiybGQiJe/IkUYhPKSa1jgZ4/6iDX77l+Cf8+h4JUtJX/vgCCR6BTRY\nyeAH59W5L38yYz495FB23jQ3pjBX3xeGegwtLrcL7tIIm6M7lycw6IpCldqUcduj\n/kBbeVWgMtZhHFLf4hQ1Eg9tqq2aOnb2jVIWStUdq2EPCAAaR5bCXcc0a/aoGLyE\nLsS2asp5t5Ayb8VPyKW2mqJAAd0fa5uSW1Irp7/crgsqo0RElO7BlsYDf25d7ko1\nK2QBh/VEPrq9VutBk9wGWzoNkn/KWs7H29GAwKUv4hE8NLtLb6sVItUK799aExoD\n30RHHQsN4PWek33HM8Pg\n=/yb5\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 8ab91357e4cfcc1dbd49082c0550ed03e70fa4ec\nparent 68bda8a260f5f4856b774b4ffe9186a072feb08b\nparent ad167c05fc35c0e4ab3093bf45ef671a8ca527ed\nauthor JoseGTD <91948919+JoseGTD@users.noreply.github.com> 1731511507 +0100\ncommitter GitHub <noreply@github.com> 1731511507 +0100\n\nMerge pull request #1 from flamenquin-hub-single/feature-export_dataset_bibtex\n\nfeat (dataset): Export dataset bibtex",
        "verified_at": "2024-11-13T15:30:11Z"
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/0747a5a100176c8f57a7dd372e0ff745842391c4",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/0747a5a100176c8f57a7dd372e0ff745842391c4",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/0747a5a100176c8f57a7dd372e0ff745842391c4/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/68bda8a260f5f4856b774b4ffe9186a072feb08b"
      },
      {
        "sha": "ad167c05fc35c0e4ab3093bf45ef671a8ca527ed",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed"
      }
    ],
    "files": [
      {
        "sha": "3a6a3d48a02958ccb500182532815d7e54df02c3",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 36,
        "deletions": 1,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/0747a5a100176c8f57a7dd372e0ff745842391c4/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/0747a5a100176c8f57a7dd372e0ff745842391c4/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=0747a5a100176c8f57a7dd372e0ff745842391c4",
        "patch": "@@ -259,9 +259,44 @@ def subdomain_index(doi):\n     # Get dataset\n     dataset = ds_meta_data.data_set\n \n+\n+    # Export DataSet to BibTex\n+    closing_ = \"},\"\n+    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n+    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n+    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n+    \n+    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n+        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    else:\n+        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n+    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n+    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n+\n+    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n+    bibtex_properties.append(\"}\")\n+    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    \n+    max_preview_len = 60\n+    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+\n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+    \n+    n_px = 17*(int(len(bibtex_properties)/2)+1)\n+\n+    page_render = render_template(\"dataset/view_dataset.html\",\n+                    dataset=dataset,\n+                    bibtex_dataset=bibtex_dataset,\n+                    bibtex_preview=bibtex_preview,\n+                    bibtex_preview_start = bibtex_properties[0],\n+                    bibtex_preview_lines=bibtex_properties[1:-1],\n+                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n+                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n+\n+    resp = make_response(page_render)\n+    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp"
      },
      {
        "sha": "d6c86796f02635516ddddabf1bd9491dd205e985",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/0747a5a100176c8f57a7dd372e0ff745842391c4/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/0747a5a100176c8f57a7dd372e0ff745842391c4/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=0747a5a100176c8f57a7dd372e0ff745842391c4",
        "patch": "@@ -158,6 +158,43 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             </div>\n \n+            {% if bibtex_dataset %}\n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n+                    {{ bibtex_dataset }}\n+                </div>\n+\n+                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n+                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n+                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                        <b>BibTex</b>\n+                    </span>\n+\n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_dataset }}\n+                    </span> -->\n+                   \n+                    \n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_preview }}\n+                    </span> -->\n+                   \n+\n+                    \n+                    <div class=\"doi_text\">\n+                        <div>{{ bibtex_preview_start }}</div>\n+                        {% for bib_line in bibtex_preview_lines %}\n+                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n+                        {% endfor %}\n+                        <div>{{ bibtex_preview_end }}</div>\n+                    </div>\n+                   \n+                </button>\n+            </div>\n+            {% endif %}\n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n             <div class=\"card-body\" style=\"padding-top: 0px\">\n \n@@ -182,6 +219,8 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n             {% endif %}\n \n+            \n+\n         </div>\n \n         <div class=\"card\">"
      },
      {
        "sha": "6a3d5d74165417518ea46c42bc095400cc648683",
        "filename": "app/static/css/own.css",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/0747a5a100176c8f57a7dd372e0ff745842391c4/app%2Fstatic%2Fcss%2Fown.css",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/0747a5a100176c8f57a7dd372e0ff745842391c4/app%2Fstatic%2Fcss%2Fown.css",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fcss%2Fown.css?ref=0747a5a100176c8f57a7dd372e0ff745842391c4",
        "patch": "@@ -142,8 +142,10 @@\n     background-color: #147ABB;\n     padding: 10px;\n     display: flex;\n-    align-items: center;\n+    flex-direction: column;\n+    align-items: flex-start;\n     transition: background-color 0.3s ease;\n+    text-wrap: wrap;\n }\n \n .doi_button:hover .doi_text {"
      }
    ]
  },
  {
    "sha": "3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
    "node_id": "C_kwDONDG85doAKDNjOGY3MTFlYWI1NmUyMWEzNWE4MmJjNTJkMmZmYjVmN2I4OWM4YjQ",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-11-13T15:11:52Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-11-13T15:11:52Z"
      },
      "message": "Integraci\u00f3n de las peticiones de checkeo al backend + respuesta al\nfrontend",
      "tree": {
        "sha": "b8f963be32e12673e52ebabda56901bf4f2bbd9d",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/b8f963be32e12673e52ebabda56901bf4f2bbd9d"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0"
      }
    ],
    "files": [
      {
        "sha": "4edc9174dc51d519b9495a2c564aabdf49b9f1d5",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
        "patch": "@@ -156,7 +156,7 @@ var currentId = 0;\n \t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n \t\t\t\t\t\t\tresponse.json().then(data => {\n \t\t\t\t\t\t\t\tconsole.log(data.message);\n-\t\t\t\t\t\t\t\twindow.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\t//window.location.href = \"/dataset/list\";\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tresponse.json().then(data => {"
      },
      {
        "sha": "718b38dceefcd18e24fa95ffe7384f3007b8940d",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 16,
        "deletions": 28,
        "changes": 44,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
        "patch": "@@ -122,14 +122,24 @@ def list_dataset():\n def check_dataset():\n     form = DataSetForm()\n     if request.method==\"POST\": \n-        file = request.files[\"file\"]\n \n-        if not file or not file.filename.endswith(\".uvl\"):\n-            return jsonify({\"message\": \"No valid file\"}), 400\n+        temp_folder = current_user.temp_folder()\n+        if not os.path.exists(temp_folder):\n+           return jsonify({\"message\": \"Something went wrong, try again\"}), 400\n         \n-        contents = file.read()\n-        print(contents)\n-\n+        filename = os.listdir(temp_folder)[0]\n+        file_path = os.path.join(temp_folder, filename)\n+        \n+        with open(file_path) as f:\n+            indent = 0\n+            x = \"\".join([i for i in f])\n+            print(x)\n+        return jsonify({\"message\": x}),200\n+   \n+    # setting things up for the checker to have only one file available\n+    temp_folder = current_user.temp_folder()\n+    if os.path.exists(temp_folder) and os.path.isdir(temp_folder):\n+            shutil.rmtree(temp_folder)\n \n     return render_template(\n         \"dataset/check_datasets.html\", form = form )\n@@ -180,28 +190,6 @@ def upload():\n         200,\n     )\n \n-@dataset_bp.route(\"/dataset/file/check\", methods=[\"POST\"])\n-@login_required\n-def check():\n-    temp_folder = current_user.temp_folder()\n-    print(\"hi\")\n-    print(temp_folder)\n-    #if not file or not file.filename.endswith(\".uvl\"):\n-    #    return jsonify({\"message\": \"No valid file\"}), 400\n-    #test = file.read()\n-    #res = \"\"\n-    #for i in test:\n-    #    res+=chr(i)\n-    #print(res)\n-    return (\n-        jsonify(\n-            {\n-                \"message\": \"UVL uploaded and validated successfully\",\n-                \"filename\": \"hi\",\n-            }\n-        ),\n-        200,\n-    )\n \n \n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])"
      },
      {
        "sha": "9c39a7ba463e67ba1cf726d260f7a84a1d8cbd14",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
        "patch": "@@ -36,7 +36,7 @@ <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n \n                 <script>\n                     let dropzone = Dropzone.options.myDropzone = {\n-                        url: \"/dataset/file/check\",\n+                        url: \"/dataset/file/upload\",\n                         paramName: 'file',\n                         maxFilesize: 10,\n                         acceptedFiles: '.uvl',"
      },
      {
        "sha": "59133f56c0ce9befb57f7f8318e60aedafcf0f41",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=3c8f711eab56e21a35a82bc52d2ffb5f7b89c8b4",
        "patch": "@@ -110,6 +110,14 @@\n                         </a>\n                     </li>\n \n+\t\t    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.list_dataset' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.check_dataset') }}\">\n+                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n+                                class=\"align-middle\">Check model</span>\n+                        </a>\n+                    </li>\n+\n+\n                     <li class=\"sidebar-header\">\n                         Options\n                     </li>\n@@ -305,4 +313,4 @@\n \n </body>\n \n-</html>\n\\ No newline at end of file\n+</html>"
      }
    ]
  },
  {
    "sha": "f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0",
    "node_id": "C_kwDONDG85doAKGY3MmM0NmU0OWQ3ZTNhOTU4YTVmNGZkYWRiMGY4YWFlM2VmZjEzZDA",
    "commit": {
      "author": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-11-12T20:24:33Z"
      },
      "committer": {
        "name": "JoseGTD",
        "email": "josgardel8@alum.us.es",
        "date": "2024-11-12T20:24:33Z"
      },
      "message": "Frontend para subir el UVL a comprobar",
      "tree": {
        "sha": "590790d341f10a8aef1774d25b767e07258fb3fb",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/590790d341f10a8aef1774d25b767e07258fb3fb"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0/comments",
    "author": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "JoseGTD",
      "id": 91948919,
      "node_id": "U_kgDOBXsHdw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91948919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoseGTD",
      "html_url": "https://github.com/JoseGTD",
      "followers_url": "https://api.github.com/users/JoseGTD/followers",
      "following_url": "https://api.github.com/users/JoseGTD/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoseGTD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoseGTD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoseGTD/subscriptions",
      "organizations_url": "https://api.github.com/users/JoseGTD/orgs",
      "repos_url": "https://api.github.com/users/JoseGTD/repos",
      "events_url": "https://api.github.com/users/JoseGTD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoseGTD/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/68bda8a260f5f4856b774b4ffe9186a072feb08b"
      }
    ],
    "files": [
      {
        "sha": "863d7fdd31eaf3c8187c26ecd4556fdc2182696c",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 162,
        "deletions": 117,
        "changes": 279,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0",
        "patch": "@@ -5,6 +5,10 @@ var currentId = 0;\n             document.getElementById(\"upload_dataset\").style.display = \"block\";\n         }\n \n+\tfunction show_check_dataset() {\n+\t\tdocument.getElementById(\"check_dataset\").style.display = \"block\";\n+\t}\n+\n         function generateIncrementalId() {\n             return currentId++;\n         }\n@@ -81,13 +85,14 @@ var currentId = 0;\n             return (titleLength >= 3 && descriptionLength >= 3);\n         }\n \n+\tif (document.getElementById('add_author')) {\n+\t\tdocument.getElementById('add_author').addEventListener('click', function () {\n+\t\t\tlet authors = document.getElementById('authors');\n+\t\t\tlet newAuthor = createAuthorBlock(amount_authors++, \"\");\n+\t\t\tauthors.appendChild(newAuthor);\n+\t\t});\n \n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n+\t}        \n \n         document.addEventListener('click', function (event) {\n             if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n@@ -102,10 +107,14 @@ var currentId = 0;\n             }\n         });\n \n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n+        function show_loading(type) {\n+\t\tif (type===\"check\") {\n+\t\t\tdocument.getElementById(\"check_model_button\").style.display = \"none\";\n+\t\t} else {\n+\t\t\tdocument.getElementById(\"upload_button\").style.display = \"none\";\n+\t\t}\n+\t\tdocument.getElementById(\"loading\").style.display = \"block\";\n+\t}\n \n         function hide_loading() {\n             document.getElementById(\"upload_button\").style.display = \"block\";\n@@ -130,110 +139,146 @@ var currentId = 0;\n \n         window.onload = function () {\n \n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n-\n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n-                                hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n-\n-\n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n-                            });\n-                    }\n-\n-\n-                } else {\n-                    hide_loading();\n-                }\n-\n-\n-            });\n-        };\n-\n-\n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n\\ No newline at end of file\n+\t\tif (document.getElementById('check_model_button')) {\n+\n+\t\t\tdocument.getElementById('check_model_button').addEventListener('click', function () {\n+\t\t\t\tconsole.log(\"hi\");\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"check\");\n+\n+\t\t\t\t\n+\t\t\t\tfetch('/dataset/check', {\n+\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\tbody: ''\n+\t\t\t\t})\n+\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\twindow.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t}\n+\t\t\t\t\t})\n+\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t});\n+\t\t\t\tconsole.log(\"yeah\")\n+\n+\t\t\t});\n+\t\t}\n+\t\tif (document.getElementById('upload_button')){\n+\t\t\tdocument.getElementById('upload_button').addEventListener('click', function () {\n+\n+\t\t\t\tclean_upload_errors();\n+\t\t\t\tshow_loading(\"upload\");\n+\n+\t\t\t\t// check title and description\n+\t\t\t\tlet check = check_title_and_description();\n+\n+\t\t\t\tif (check) {\n+\t\t\t\t\t// process data form\n+\t\t\t\t\tconst formData = {};\n+\n+\t\t\t\t\t[\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+\t\t\t\t\t\tconst form = document.getElementById(formId);\n+\t\t\t\t\t\tconst inputs = form.querySelectorAll('input, select, textarea');\n+\t\t\t\t\t\tinputs.forEach(input => {\n+\t\t\t\t\t\t\tif (input.name) {\n+\t\t\t\t\t\t\t\tformData[input.name] = formData[input.name] || [];\n+\t\t\t\t\t\t\t\tformData[input.name].push(input.value);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t});\n+\t\t\t\t\t});\n+\n+\t\t\t\t\tlet formDataJson = JSON.stringify(formData);\n+\t\t\t\t\tconsole.log(formDataJson);\n+\n+\t\t\t\t\tconst csrfToken = document.getElementById('csrf_token').value;\n+\t\t\t\t\tconst formUploadData = new FormData();\n+\t\t\t\t\tformUploadData.append('csrf_token', csrfToken);\n+\n+\t\t\t\t\tfor (let key in formData) {\n+\t\t\t\t\t\tif (formData.hasOwnProperty(key)) {\n+\t\t\t\t\t\t\tformUploadData.set(key, formData[key]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tlet checked_orcid = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_orcid)) {\n+\t\t\t\t\t\tfor (let orcid of formData.author_orcid) {\n+\t\t\t\t\t\t\torcid = orcid.trim();\n+\t\t\t\t\t\t\tif (orcid !== '' && !isValidOrcid(orcid)) {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+\t\t\t\t\t\t\t\tchecked_orcid = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tlet checked_name = true;\n+\t\t\t\t\tif (Array.isArray(formData.author_name)) {\n+\t\t\t\t\t\tfor (let name of formData.author_name) {\n+\t\t\t\t\t\t\tname = name.trim();\n+\t\t\t\t\t\t\tif (name === '') {\n+\t\t\t\t\t\t\t\thide_loading();\n+\t\t\t\t\t\t\t\twrite_upload_error(\"The author's name cannot be empty\");\n+\t\t\t\t\t\t\t\tchecked_name = false;\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\tif (checked_orcid && checked_name) {\n+\t\t\t\t\t\tfetch('/dataset/upload', {\n+\t\t\t\t\t\t\tmethod: 'POST',\n+\t\t\t\t\t\t\tbody: formUploadData\n+\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.then(response => {\n+\t\t\t\t\t\t\t\tif (response.ok) {\n+\t\t\t\t\t\t\t\t\tconsole.log('Dataset sent successfully');\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.log(data.message);\n+\t\t\t\t\t\t\t\t\t\twindow.location.href = \"/dataset/list\";\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tresponse.json().then(data => {\n+\t\t\t\t\t\t\t\t\t\tconsole.error('Error: ' + data.message);\n+\t\t\t\t\t\t\t\t\t\thide_loading();\n+\n+\t\t\t\t\t\t\t\t\t\twrite_upload_error(data.message);\n+\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.catch(error => {\n+\t\t\t\t\t\t\t\tconsole.error('Error in POST request:', error);\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t} else {\n+\t\t\t\t\thide_loading();\n+\t\t\t\t}\n+\n+\n+\t\t\t});\n+\t\t}\n+\t};\n+\n+\n+function isValidOrcid(orcid) {\n+\tlet orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+\treturn orcidRegex.test(orcid);\n+}"
      },
      {
        "sha": "32485230b07a0454b565102aa38dea4c243fe1e8",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0",
        "patch": "@@ -117,6 +117,25 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n+@dataset_bp.route(\"/dataset/check\", methods=[\"GET\", \"POST\"])\n+@login_required\n+def check_dataset():\n+    form = DataSetForm()\n+    if request.method==\"POST\": \n+        file = request.files[\"file\"]\n+\n+        if not file or not file.filename.endswith(\".uvl\"):\n+            return jsonify({\"message\": \"No valid file\"}), 400\n+        \n+        contents = file.read()\n+        print(contents)\n+\n+\n+    return render_template(\n+        \"dataset/check_datasets.html\", form = form )\n+\n+\n+\n \n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n@@ -161,6 +180,29 @@ def upload():\n         200,\n     )\n \n+@dataset_bp.route(\"/dataset/file/check\", methods=[\"POST\"])\n+@login_required\n+def check():\n+    temp_folder = current_user.temp_folder()\n+    print(\"hi\")\n+    print(temp_folder)\n+    #if not file or not file.filename.endswith(\".uvl\"):\n+    #    return jsonify({\"message\": \"No valid file\"}), 400\n+    #test = file.read()\n+    #res = \"\"\n+    #for i in test:\n+    #    res+=chr(i)\n+    #print(res)\n+    return (\n+        jsonify(\n+            {\n+                \"message\": \"UVL uploaded and validated successfully\",\n+                \"filename\": \"hi\",\n+            }\n+        ),\n+        200,\n+    )\n+\n \n @dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n def delete():"
      },
      {
        "sha": "9959546b1fa3096f9516a4f1dabb0655b7544bde",
        "filename": "app/modules/dataset/templates/dataset/check_datasets.html",
        "status": "added",
        "additions": 286,
        "deletions": 0,
        "changes": 286,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fcheck_datasets.html?ref=f72c46e49d7e3a958a5f4fdadb0f8aae3eff13d0",
        "patch": "@@ -0,0 +1,286 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}Check UVL model{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h2 mb-3\"><b>Check UVL model</b></h1>\n+\n+    {% if messages %}\n+        <ul>\n+            {% for message in messages %}\n+                <li>{{ message }}</li>\n+            {% endfor %}\n+        </ul>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+\n+            <h1 class=\"h3 mb-3 mt-2\">UVL model to be checked</h1>\n+\n+            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n+                \n+\t\t{{ form.hidden_tag() }}\n+\n+\n+                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n+                    <div id=\"dropzone-text\"></div>\n+                </form>\n+\n+                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n+                    </span>\n+\n+                <ul class=\"mt-2\" id=\"file-list\"></ul>\n+\n+                <script>\n+                    let dropzone = Dropzone.options.myDropzone = {\n+                        url: \"/dataset/file/check\",\n+                        paramName: 'file',\n+                        maxFilesize: 10,\n+                        acceptedFiles: '.uvl',\n+                        init: function () {\n+\n+\t\t\t\tlet fileList = document.getElementById('file-list');\n+\t\t\t\tlet dropzoneText = document.getElementById('dropzone-text');\n+\t\t\t\tlet alerts = document.getElementById('alerts');\n+\t\t\t\tthis.on('addedfile', function (file) {\n+\n+\t\t\t\t\tlet ext = file.name.split('.').pop();\n+\t\t\t\t\tif (ext !== 'uvl') {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Invalid file extension: ' + file.name;\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+\t\t\t\t\tif (fileList.childElementCount > 0) {\n+\t\t\t\t\t\tthis.removeFile(file);\n+\n+\t\t\t\t\t\tlet alert = document.createElement('p');\n+\t\t\t\t\t\talert.textContent = 'Only one check at a time!';\n+\t\t\t\t\t\talerts.appendChild(alert);\n+\t\t\t\t\t\talerts.style.display = 'block';\n+\t\t\t\t\t}\n+                            });\n+\n+                            this.on('success', function (file, response) {\n+\n+                                let dropzone = this;\n+\n+                                show_upload_dataset();\n+\n+                                console.log(\"File uploaded: \", response);\n+                                // actions when UVL model is uploaded\n+                                let listItem = document.createElement('li');\n+                                let h4Element = document.createElement('h4');\n+                                h4Element.textContent = response.filename;\n+                                listItem.appendChild(h4Element);\n+\n+                                // generate incremental id for form\n+                                let formUniqueId = generateIncrementalId();\n+\n+                               /*\n+                                    ##########################################\n+                                    REMOVE BUTTON\n+                                    ##########################################\n+                                */\n+\n+                                // remove button\n+                                let removeButton = document.createElement('button');\n+                                removeButton.innerHTML = 'Delete model';\n+                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n+                                removeButton.style.borderRadius = '5px';\n+\n+                                removeButton.addEventListener('click', function () {\n+                                    fileList.removeChild(listItem);\n+                                    this.removeFile(file);\n+\n+                                    // Ajax request\n+                                    let xhr = new XMLHttpRequest();\n+                                    xhr.open('POST', '/dataset/file/delete', true);\n+                                    xhr.setRequestHeader('Content-Type', 'application/json');\n+                                    xhr.onload = function () {\n+                                        if (xhr.status === 200) {\n+                                            console.log('Deleted file from server');\n+\n+                                            if (dropzone.files.length === 0) {\n+                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n+                                                clean_upload_errors();\n+                                            }\n+\n+                                        }\n+                                    };\n+                                    xhr.send(JSON.stringify({file: file.name}));\n+                                }.bind(this));\n+\n+                                /*\n+                                    ##########################################\n+                                    APPEND BUTTONS\n+                                    ##########################################\n+                                */\n+                                listItem.appendChild(removeButton);\n+\n+                                /*\n+                                    ##########################################\n+                                    UVL FORM\n+                                    ##########################################\n+                                */\n+\n+                                // create specific form for UVL\n+                                let formContainer = document.createElement('div');\n+                                formContainer.id = formUniqueId + \"_form\";\n+                                formContainer.classList.add('uvl_form', \"mt-3\");\n+                                formContainer.style.display = \"none\";\n+\n+                                formContainer.innerHTML = `\n+                                    <div class=\"row\">\n+                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n+                                        <div class=\"col-12\">\n+                                            <div class=\"row\">\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Title</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Description</label>\n+                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n+                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n+                                                            <option value=\"none\">None</option>\n+                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n+                                                            <option value=\"book\">Book</option>\n+                                                            <option value=\"section\">Book Section</option>\n+                                                            <option value=\"conferencepaper\">Conference Paper</option>\n+                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n+                                                            <option value=\"article\">Journal Article</option>\n+                                                            <option value=\"patent\">Patent</option>\n+                                                            <option value=\"preprint\">Preprint</option>\n+                                                            <option value=\"deliverable\">Project Deliverable</option>\n+                                                            <option value=\"milestone\">Project Milestone</option>\n+                                                            <option value=\"proposal\">Proposal</option>\n+                                                            <option value=\"report\">Report</option>\n+                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n+                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n+                                                            <option value=\"technicalnote\">Technical Note</option>\n+                                                            <option value=\"thesis\">Thesis</option>\n+                                                            <option value=\"workingpaper\">Working Paper</option>\n+                                                            <option value=\"other\">Other</option>\n+                                                        </select>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n+                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">UVL version</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Authors</label>\n+                                                        <div id=\"` + formContainer.id + `_authors\">\n+                                                        </div>\n+                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n+                                                    </div>\n+                                                </div>\n+                                            </div>\n+                                        </div>\n+                                    </div>\n+                                    `;\n+\n+                                listItem.appendChild(formContainer);\n+                                fileList.appendChild(listItem);\n+\n+                            });\n+\n+                            this.on('error', function (file, response) {\n+                                console.error(\"Error uploading file: \", response);\n+                                let alert = document.createElement('p');\n+                                alert.textContent = 'UVL not valid: ' + file.name;\n+                                alerts.appendChild(alert);\n+                                alerts.style.display = 'block';\n+                            });\n+\n+                        }\n+                    };\n+\n+\n+                </script>\n+\n+            </div>\n+        </div>\n+\n+    </div>\n+\n+    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n+\n+        <div class=\"col-12\">\n+\n+            <hr>\n+\n+            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n+\n+            <div style=\"padding-left: 2rem\">\n+\n+                <button id=\"check_model_button\" class=\"btn btn-primary mt-2\" disabled>\n+                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n+                    Upload dataset</button>\n+\n+                <div id=\"loading\" style=\"display: none\">\n+                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n+                    Uploading dataset, please wait...\n+                </div>\n+\n+                <div class=\"row\">\n+                    <div class=\"col-12 mb-3\">\n+\n+                    </div>\n+                </div>\n+\n+                \n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n+\n+                    </span>\n+\n+                <script>\n+                    const upload_button = document.getElementById('check_model_button');\n+\t\t\tupload_button.disabled = false;\n+                </script>\n+\n+            </div>\n+\n+\n+\n+\n+        </div>\n+\n+    </div>\n+\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n+{% endblock %}"
      }
    ]
  },
  {
    "sha": "9f7bddbab72d14f4f9247e0f6e34d75a49d8aaa9",
    "node_id": "C_kwDONDG85doAKDlmN2JkZGJhYjcyZDE0ZjRmOTI0N2UwZjZlMzRkNzVhNDlkOGFhYTk",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-12T19:19:20Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-12T19:19:20Z"
      },
      "message": "Merge branch 'feature-create_workflows' of https://github.com/flamenquin-hub-single/uvlhub into feature-create_workflows",
      "tree": {
        "sha": "bf2337c821958e938413c9a523f5057dafc26b7a",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/bf2337c821958e938413c9a523f5057dafc26b7a"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/9f7bddbab72d14f4f9247e0f6e34d75a49d8aaa9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9f7bddbab72d14f4f9247e0f6e34d75a49d8aaa9",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/9f7bddbab72d14f4f9247e0f6e34d75a49d8aaa9",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/9f7bddbab72d14f4f9247e0f6e34d75a49d8aaa9/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8f45be79330a97473115a160eb13904905144f1",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e8f45be79330a97473115a160eb13904905144f1",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e8f45be79330a97473115a160eb13904905144f1"
      },
      {
        "sha": "148b5064129ca6ca0fd9605ad46eec43a70938f7",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/148b5064129ca6ca0fd9605ad46eec43a70938f7",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/148b5064129ca6ca0fd9605ad46eec43a70938f7"
      }
    ],
    "files": [
      {
        "sha": "f4e983893e1b2152433c609db453d6ac3e1c883d",
        "filename": ".github/workflows/render.yml",
        "status": "added",
        "additions": 79,
        "deletions": 0,
        "changes": 79,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/9f7bddbab72d14f4f9247e0f6e34d75a49d8aaa9/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/9f7bddbab72d14f4f9247e0f6e34d75a49d8aaa9/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=9f7bddbab72d14f4f9247e0f6e34d75a49d8aaa9",
        "patch": "@@ -0,0 +1,79 @@\n+name: Deploy to Render\n+\n+on:\n+    push:\n+      tags:\n+      - 'v*' \n+    pull_request:\n+      branches:\n+        - main\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+        run: |\n+          curl \"$deploy_url\"\n+      - name: Send Notification\n+        if: always()\n+        env:\n+          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n+        run: |\n+          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment completed successfully!\"}' $SLACK_WEBHOOK_URL\n+      - name: Send Deployment Failure Notification\n+        if: failure()\n+        env:\n+          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n+        run: |\n+          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment failed!\"}' $SLACK_WEBHOOK_URL\n+      \n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "e8f45be79330a97473115a160eb13904905144f1",
    "node_id": "C_kwDONDG85doAKGU4ZjQ1YmU3OTMzMGE5NzQ3MzExNWExNjBlYjEzOTA0OTA1MTQ0ZjE",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-12T19:16:04Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-12T19:16:04Z"
      },
      "message": "fix(workflow): fixed conventional commits workflow",
      "tree": {
        "sha": "f68437cfe293d78c66db70350545a6af9b754313",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/f68437cfe293d78c66db70350545a6af9b754313"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/e8f45be79330a97473115a160eb13904905144f1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e8f45be79330a97473115a160eb13904905144f1",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e8f45be79330a97473115a160eb13904905144f1",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e8f45be79330a97473115a160eb13904905144f1/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3"
      }
    ],
    "files": [
      {
        "sha": "cecdd33c479807f9136a24c334ed2061c27240a8",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e8f45be79330a97473115a160eb13904905144f1/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e8f45be79330a97473115a160eb13904905144f1/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=e8f45be79330a97473115a160eb13904905144f1",
        "patch": "@@ -7,7 +7,9 @@ jobs:\n     runs-on: ubuntu-latest\n     steps:\n       - name: Checkout code\n-        uses: actions/checkout@v2\n+        uses: actions/checkout@v1\n+        with:\n+          fetch-depth: 0\n \n       - name: Install dependencies\n         run: npm install @commitlint/config-conventional @commitlint/cli husky"
      }
    ]
  },
  {
    "sha": "148b5064129ca6ca0fd9605ad46eec43a70938f7",
    "node_id": "C_kwDONDG85doAKDE0OGI1MDY0MTI5Y2E2Y2EwZmQ5NjA1YWQ0NmVlYzQzYTcwOTM4Zjc",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-11-12T19:04:07Z"
      },
      "committer": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-11-12T19:04:07Z"
      },
      "message": "feat(workflow): add workflow, Deploy to Render",
      "tree": {
        "sha": "44600539faac7fa1f4dd9eb33e3855eb72482a73",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/44600539faac7fa1f4dd9eb33e3855eb72482a73"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/148b5064129ca6ca0fd9605ad46eec43a70938f7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/148b5064129ca6ca0fd9605ad46eec43a70938f7",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/148b5064129ca6ca0fd9605ad46eec43a70938f7",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/148b5064129ca6ca0fd9605ad46eec43a70938f7/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3"
      }
    ],
    "files": [
      {
        "sha": "f4e983893e1b2152433c609db453d6ac3e1c883d",
        "filename": ".github/workflows/render.yml",
        "status": "added",
        "additions": 79,
        "deletions": 0,
        "changes": 79,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/148b5064129ca6ca0fd9605ad46eec43a70938f7/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/148b5064129ca6ca0fd9605ad46eec43a70938f7/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=148b5064129ca6ca0fd9605ad46eec43a70938f7",
        "patch": "@@ -0,0 +1,79 @@\n+name: Deploy to Render\n+\n+on:\n+    push:\n+      tags:\n+      - 'v*' \n+    pull_request:\n+      branches:\n+        - main\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+        run: |\n+          curl \"$deploy_url\"\n+      - name: Send Notification\n+        if: always()\n+        env:\n+          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n+        run: |\n+          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment completed successfully!\"}' $SLACK_WEBHOOK_URL\n+      - name: Send Deployment Failure Notification\n+        if: failure()\n+        env:\n+          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n+        run: |\n+          curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Deployment failed!\"}' $SLACK_WEBHOOK_URL\n+      \n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3",
    "node_id": "C_kwDONDG85doAKDRmZDFmMjM5MzdkNWVkNmZiMjEzYWZkZjZlN2FhOTQ1MmI1ZTFhYTM",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-12T18:29:28Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-12T18:29:28Z"
      },
      "message": "feat(workflow): add commit message check with CommitLint",
      "tree": {
        "sha": "660816d101edd57834ebe0827dd6570465610118",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/660816d101edd57834ebe0827dd6570465610118"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/68bda8a260f5f4856b774b4ffe9186a072feb08b"
      }
    ],
    "files": [
      {
        "sha": "533b11faf2e0bdc4264ebf3b33453bdd8e774996",
        "filename": ".github/workflows/commits.yml",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=4fd1f23937d5ed6fb213afdf6e7aa9452b5e1aa3",
        "patch": "@@ -1,18 +1,18 @@\n-name: Commits Syntax Checker\n+name: Commit Message Check\n \n-on:\n-  pull_request:\n-    branches: [main]\n-    types: [opened, reopened, edited, review_requested, synchronize]\n-  push:\n-    branches:\n-      - \"main\"\n-  workflow_call:\n+on: [push]\n \n jobs:\n-  check:\n-    name: Conventional Commits\n+  commit-check:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@v2\n-      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+\n+      - name: Install dependencies\n+        run: npm install @commitlint/config-conventional @commitlint/cli husky\n+\n+      - name: Run CommitLint\n+        run: npx commitlint --from=HEAD~1 --to=HEAD --config @commitlint/config-conventional\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      }
    ]
  },
  {
    "sha": "e71253f322d609a7a37b4adcb68a034b4bb69a42",
    "node_id": "C_kwDONDG85doAKGU3MTI1M2YzMjJkNjA5YTdhMzdiNGFkY2I2OGEwMzRiNGJiNjlhNDI",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-12T17:30:13Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-12T17:34:37Z"
      },
      "message": "refactor(base): move notepad script to static and include in base template",
      "tree": {
        "sha": "011d8f425b480bf6dc356eeaaf98348b9a016802",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/011d8f425b480bf6dc356eeaaf98348b9a016802"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/e71253f322d609a7a37b4adcb68a034b4bb69a42",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e71253f322d609a7a37b4adcb68a034b4bb69a42",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e71253f322d609a7a37b4adcb68a034b4bb69a42",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e71253f322d609a7a37b4adcb68a034b4bb69a42/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a97a8319657bece863faea6827ba23c6e6b67e3b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a97a8319657bece863faea6827ba23c6e6b67e3b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a97a8319657bece863faea6827ba23c6e6b67e3b"
      }
    ],
    "files": [
      {
        "sha": "d337dad98b8d18e15de1bf67815af93f2d8216a0",
        "filename": "app/static/js/scripts.js",
        "status": "added",
        "additions": 246,
        "deletions": 0,
        "changes": 246,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e71253f322d609a7a37b4adcb68a034b4bb69a42/app%2Fstatic%2Fjs%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e71253f322d609a7a37b4adcb68a034b4bb69a42/app%2Fstatic%2Fjs%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fscripts.js?ref=e71253f322d609a7a37b4adcb68a034b4bb69a42",
        "patch": "@@ -0,0 +1,246 @@\n+var currentId = 0;\n+        var amount_authors = 0;\n+\n+        function show_upload_dataset() {\n+            document.getElementById(\"upload_dataset\").style.display = \"block\";\n+        }\n+\n+        function generateIncrementalId() {\n+            return currentId++;\n+        }\n+\n+        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n+            let fieldWrapper = document.createElement('div');\n+            fieldWrapper.className = className;\n+\n+            let label = document.createElement('label');\n+            label.className = 'form-label';\n+            label.for = name;\n+            label.textContent = text;\n+\n+            let field = document.createElement('input');\n+            field.name = name;\n+            field.className = 'form-control';\n+\n+            fieldWrapper.appendChild(label);\n+            fieldWrapper.appendChild(field);\n+            newAuthor.appendChild(fieldWrapper);\n+        }\n+\n+        function addRemoveButton(newAuthor) {\n+            let buttonWrapper = document.createElement('div');\n+            buttonWrapper.className = 'col-12 mb-2';\n+\n+            let button = document.createElement('button');\n+            button.textContent = 'Remove author';\n+            button.className = 'btn btn-danger btn-sm';\n+            button.type = 'button';\n+            button.addEventListener('click', function (event) {\n+                event.preventDefault();\n+                newAuthor.remove();\n+            });\n+\n+            buttonWrapper.appendChild(button);\n+            newAuthor.appendChild(buttonWrapper);\n+        }\n+\n+        function createAuthorBlock(idx, suffix) {\n+            let newAuthor = document.createElement('div');\n+            newAuthor.className = 'author row';\n+            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n+\n+            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n+            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n+            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n+            addRemoveButton(newAuthor);\n+\n+            return newAuthor;\n+        }\n+\n+        function check_title_and_description() {\n+            let titleInput = document.querySelector('input[name=\"title\"]');\n+            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n+\n+            titleInput.classList.remove(\"error\");\n+            descriptionTextarea.classList.remove(\"error\");\n+            clean_upload_errors();\n+\n+            let titleLength = titleInput.value.trim().length;\n+            let descriptionLength = descriptionTextarea.value.trim().length;\n+\n+            if (titleLength < 3) {\n+                write_upload_error(\"title must be of minimum length 3\");\n+                titleInput.classList.add(\"error\");\n+            }\n+\n+            if (descriptionLength < 3) {\n+                write_upload_error(\"description must be of minimum length 3\");\n+                descriptionTextarea.classList.add(\"error\");\n+            }\n+\n+            return (titleLength >= 3 && descriptionLength >= 3);\n+        }\n+\n+\n+        document.getElementById('add_author').addEventListener('click', function () {\n+            let authors = document.getElementById('authors');\n+            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n+            authors.appendChild(newAuthor);\n+        });\n+\n+\n+        document.addEventListener('click', function (event) {\n+            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n+\n+                let authorsButtonId = event.target.id;\n+                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n+                let authors = document.getElementById(authorsId);\n+                let id = authorsId.replace(\"_form_authors\", \"\")\n+                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n+                authors.appendChild(newAuthor);\n+\n+            }\n+        });\n+\n+        function show_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"none\";\n+            document.getElementById(\"loading\").style.display = \"block\";\n+        }\n+\n+        function hide_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"block\";\n+            document.getElementById(\"loading\").style.display = \"none\";\n+        }\n+\n+        function clean_upload_errors() {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            upload_error.innerHTML = \"\";\n+            upload_error.style.display = 'none';\n+        }\n+\n+        function write_upload_error(error_message) {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            let alert = document.createElement('p');\n+            alert.style.margin = '0';\n+            alert.style.padding = '0';\n+            alert.textContent = 'Upload error: ' + error_message;\n+            upload_error.appendChild(alert);\n+            upload_error.style.display = 'block';\n+        }\n+\n+        window.onload = function () {\n+\n+            test_zenodo_connection();\n+\n+            document.getElementById('upload_button').addEventListener('click', function () {\n+\n+                clean_upload_errors();\n+                show_loading();\n+\n+                // check title and description\n+                let check = check_title_and_description();\n+\n+                if (check) {\n+                    // process data form\n+                    const formData = {};\n+\n+                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                        const form = document.getElementById(formId);\n+                        const inputs = form.querySelectorAll('input, select, textarea');\n+                        inputs.forEach(input => {\n+                            if (input.name) {\n+                                formData[input.name] = formData[input.name] || [];\n+                                formData[input.name].push(input.value);\n+                            }\n+                        });\n+                    });\n+\n+                    let formDataJson = JSON.stringify(formData);\n+                    console.log(formDataJson);\n+\n+                    const csrfToken = document.getElementById('csrf_token').value;\n+                    const formUploadData = new FormData();\n+                    formUploadData.append('csrf_token', csrfToken);\n+\n+                    for (let key in formData) {\n+                        if (formData.hasOwnProperty(key)) {\n+                            formUploadData.set(key, formData[key]);\n+                        }\n+                    }\n+\n+                    let checked_orcid = true;\n+                    if (Array.isArray(formData.author_orcid)) {\n+                        for (let orcid of formData.author_orcid) {\n+                            orcid = orcid.trim();\n+                            if (orcid !== '' && !isValidOrcid(orcid)) {\n+                                hide_loading();\n+                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                                checked_orcid = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    let checked_name = true;\n+                    if (Array.isArray(formData.author_name)) {\n+                        for (let name of formData.author_name) {\n+                            name = name.trim();\n+                            if (name === '') {\n+                                hide_loading();\n+                                write_upload_error(\"The author's name cannot be empty\");\n+                                checked_name = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    if (checked_orcid && checked_name) {\n+                        fetch('/dataset/upload', {\n+                            method: 'POST',\n+                            body: formUploadData\n+                        })\n+                            .then(response => {\n+                                if (response.ok) {\n+                                    console.log('Dataset sent successfully');\n+                                    response.json().then(data => {\n+                                        console.log(data.message);\n+                                        window.location.href = \"/dataset/list\";\n+                                    });\n+                                } else {\n+                                    response.json().then(data => {\n+                                        console.error('Error: ' + data.message);\n+                                        hide_loading();\n+\n+                                        write_upload_error(data.message);\n+\n+                                    });\n+                                }\n+                            })\n+                            .catch(error => {\n+                                console.error('Error in POST request:', error);\n+                            });\n+                    }\n+\n+\n+                } else {\n+                    hide_loading();\n+                }\n+\n+\n+            });\n+        };\n+\n+\n+        function isValidOrcid(orcid) {\n+            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+            return orcidRegex.test(orcid);\n+        }\n+\n+        function downloadDataset(datasetId, format) {\n+            const url = `/dataset/download/${datasetId}/${format}`;\n+            window.location.href = url;\n+        }\n+        \n+        \n\\ No newline at end of file"
      },
      {
        "sha": "657c6dcf4d6b231dae937e14aa0732bf85bba30c",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e71253f322d609a7a37b4adcb68a034b4bb69a42/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e71253f322d609a7a37b4adcb68a034b4bb69a42/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=e71253f322d609a7a37b4adcb68a034b4bb69a42",
        "patch": "@@ -33,6 +33,7 @@\n \n     <link rel=\"stylesheet\" href=\"{{ url_for(\"static\", filename=\"css/own.css\") }}\">\n \n+    <script src=\"{{ url_for('static', filename='js/scripts.js') }}\"></script>\n </head>\n \n <body>"
      }
    ]
  },
  {
    "sha": "a97a8319657bece863faea6827ba23c6e6b67e3b",
    "node_id": "C_kwDONDG85doAKGE5N2E4MzE5NjU3YmVjZTg2M2ZhZWE2ODI3YmEyM2M2ZTZiNjdlM2I",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-12T17:23:41Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-12T17:34:33Z"
      },
      "message": "feature(dataset): add dropdown menu for dataset download in multiple formats",
      "tree": {
        "sha": "612227846b4cb5367568c3704e264c0ca269ead9",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/612227846b4cb5367568c3704e264c0ca269ead9"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/a97a8319657bece863faea6827ba23c6e6b67e3b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a97a8319657bece863faea6827ba23c6e6b67e3b",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a97a8319657bece863faea6827ba23c6e6b67e3b",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a97a8319657bece863faea6827ba23c6e6b67e3b/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6c07616030b212dcc46210ac71533d9e61a8fcf",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e6c07616030b212dcc46210ac71533d9e61a8fcf",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e6c07616030b212dcc46210ac71533d9e61a8fcf"
      }
    ],
    "files": [
      {
        "sha": "d337dad98b8d18e15de1bf67815af93f2d8216a0",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a97a8319657bece863faea6827ba23c6e6b67e3b/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a97a8319657bece863faea6827ba23c6e6b67e3b/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=a97a8319657bece863faea6827ba23c6e6b67e3b",
        "patch": "@@ -236,4 +236,11 @@ var currentId = 0;\n         function isValidOrcid(orcid) {\n             let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n             return orcidRegex.test(orcid);\n-        }\n\\ No newline at end of file\n+        }\n+\n+        function downloadDataset(datasetId, format) {\n+            const url = `/dataset/download/${datasetId}/${format}`;\n+            window.location.href = url;\n+        }\n+        \n+        \n\\ No newline at end of file"
      },
      {
        "sha": "9765d4aa769976cd87870704819c3cf0af65e9eb",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a97a8319657bece863faea6827ba23c6e6b67e3b/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a97a8319657bece863faea6827ba23c6e6b67e3b/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=a97a8319657bece863faea6827ba23c6e6b67e3b",
        "patch": "@@ -91,12 +91,17 @@ <h2>\n                                     <i data-feather=\"eye\" class=\"center-button-icon\"></i>\n                                     View dataset\n                                 </a>\n-\n-                                <a href=\"/dataset/download/{{ dataset.id }}\" class=\"btn btn-outline-primary btn-sm\"\n-                                   style=\"border-radius: 5px;\">\n-                                    <i data-feather=\"download\" class=\"center-button-icon\"></i>\n-                                    Download ({{ dataset.get_file_total_size_for_human() }})\n-                                </a>\n+                                <div class=\"btn-group\" role=\"group\">\n+                                    <button id=\"btnDownloadDropdown_{{ dataset.id }}\" type=\"button\" class=\"btn btn-outline-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border-radius: 5px;\">\n+                                        <i data-feather=\"download\" class=\"center-button-icon\"></i> Download\n+                                    </button>\n+                                    <ul class=\"dropdown-menu\" aria-labelledby=\"btnDownloadDropdown_{{ dataset.id }}\">\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'glencoe')\">Glencoe</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'splot')\">SPLOT</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'dimacs')\">DIMACS</a></li>\n+                                        <li><a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"downloadDataset('{{ dataset.id }}', 'zip')\">ZIP</a></li>\n+                                    </ul>\n+                                </div>                                \n                             </div>\n                         </div>\n "
      }
    ]
  },
  {
    "sha": "e6c07616030b212dcc46210ac71533d9e61a8fcf",
    "node_id": "C_kwDONDG85doAKGU2YzA3NjE2MDMwYjIxMmRjYzQ2MjEwYWM3MTUzM2Q5ZTYxYThmY2Y",
    "commit": {
      "author": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-12T17:20:34Z"
      },
      "committer": {
        "name": "Ra\u00fal Montalb\u00e1n Mart\u00edn",
        "email": "raumonmar1@alum.us.es",
        "date": "2024-11-12T17:33:10Z"
      },
      "message": "feature(dataset): add endpoint to download dataset in various formats",
      "tree": {
        "sha": "6c07237004e30b371d692513060fa27a4200e379",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/6c07237004e30b371d692513060fa27a4200e379"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/e6c07616030b212dcc46210ac71533d9e61a8fcf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e6c07616030b212dcc46210ac71533d9e61a8fcf",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/e6c07616030b212dcc46210ac71533d9e61a8fcf",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/e6c07616030b212dcc46210ac71533d9e61a8fcf/comments",
    "author": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "raumonmar1",
      "id": 72814383,
      "node_id": "MDQ6VXNlcjcyODE0Mzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72814383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raumonmar1",
      "html_url": "https://github.com/raumonmar1",
      "followers_url": "https://api.github.com/users/raumonmar1/followers",
      "following_url": "https://api.github.com/users/raumonmar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/raumonmar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raumonmar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raumonmar1/subscriptions",
      "organizations_url": "https://api.github.com/users/raumonmar1/orgs",
      "repos_url": "https://api.github.com/users/raumonmar1/repos",
      "events_url": "https://api.github.com/users/raumonmar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raumonmar1/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/68bda8a260f5f4856b774b4ffe9186a072feb08b"
      }
    ],
    "files": [
      {
        "sha": "372663f4f236bc175d028520341a0499f281a9e7",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/e6c07616030b212dcc46210ac71533d9e61a8fcf/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/e6c07616030b212dcc46210ac71533d9e61a8fcf/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=e6c07616030b212dcc46210ac71533d9e61a8fcf",
        "patch": "@@ -6,6 +6,7 @@\n import uuid\n from datetime import datetime, timezone\n from zipfile import ZipFile\n+from flask import jsonify, redirect, url_for\n \n from flask import (\n     redirect,\n@@ -278,3 +279,23 @@ def get_unsynchronized_dataset(dataset_id):\n         abort(404)\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+\n+\n+@dataset_bp.route(\"/dataset/download/<int:file_id>/<string:format>\", methods=[\"GET\"])\n+def download_dataset_format(file_id, format):\n+    \"\"\"\n+    Endpoint to download dataset in the specified format.\n+    Formats supported: uvl, glencoe, splot, dimacs, zip.\n+    \"\"\"\n+    # Redirigir a los endpoints de flamapy seg\u00fan el formato solicitado\n+    if format == \"glencoe\":\n+        return redirect(url_for(\"flamapy.to_glencoe\", file_id=file_id))\n+    elif format == \"splot\":\n+        return redirect(url_for(\"flamapy.to_splot\", file_id=file_id))\n+    elif format == \"dimacs\":\n+        return redirect(url_for(\"flamapy.to_cnf\", file_id=file_id))\n+    elif format == \"zip\":\n+        # Redirige al endpoint original de descarga ZIP\n+        return redirect(url_for(\"dataset.download_dataset\", dataset_id=file_id))\n+    else:\n+        return jsonify({\"error\": \"Formato no soportado\"}), 400"
      }
    ]
  },
  {
    "sha": "bd0ea567b9aa23a1b72abe07513c562de1731cc0",
    "node_id": "C_kwDONDG85doAKGJkMGVhNTY3YjlhYTIzYTFiNzJhYmUwNzUxM2M1NjJkZTE3MzFjYzA",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-12T17:17:13Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-12T17:17:13Z"
      },
      "message": "button to join organization added",
      "tree": {
        "sha": "0afdf0c2a42a823a2fde59de86e819f3de82af79",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/0afdf0c2a42a823a2fde59de86e819f3de82af79"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/bd0ea567b9aa23a1b72abe07513c562de1731cc0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/bd0ea567b9aa23a1b72abe07513c562de1731cc0",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/bd0ea567b9aa23a1b72abe07513c562de1731cc0",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/bd0ea567b9aa23a1b72abe07513c562de1731cc0/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a0d7141173d37d71066176dd5abe4b463ece1dfd",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a0d7141173d37d71066176dd5abe4b463ece1dfd",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a0d7141173d37d71066176dd5abe4b463ece1dfd"
      }
    ],
    "files": [
      {
        "sha": "8c7ec536e87f1a4e90152f63d77922f3e6064bfb",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/bd0ea567b9aa23a1b72abe07513c562de1731cc0/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/bd0ea567b9aa23a1b72abe07513c562de1731cc0/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=bd0ea567b9aa23a1b72abe07513c562de1731cc0",
        "patch": "@@ -174,6 +174,10 @@\n                             <button>Sync with Github</button>\n                         </a> \n \n+                        <a href=\"{{ url_for('auth.invite_user') }}\">\n+                            <button>Join Github organization</button>\n+                        </a> \n+\n                         <a class=\"nav-icon dropdown-toggle d-inline-block d-sm-none\" href=\"#\" data-bs-toggle=\"dropdown\">\n                             <i class=\"align-middle\" data-feather=\"user\"></i> \n                         </a>"
      }
    ]
  },
  {
    "sha": "a0d7141173d37d71066176dd5abe4b463ece1dfd",
    "node_id": "C_kwDONDG85doAKGEwZDcxNDExNzNkMzdkNzEwNjYxNzZkZDVhYmU0YjQ2M2VjZTFkZmQ",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-12T11:01:03Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-12T11:01:03Z"
      },
      "message": "feat(auth): send uvlhub github organization invitation to the user added",
      "tree": {
        "sha": "0cce0a7a85fddd7be68aa345aa5f174444cf53be",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/0cce0a7a85fddd7be68aa345aa5f174444cf53be"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/a0d7141173d37d71066176dd5abe4b463ece1dfd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a0d7141173d37d71066176dd5abe4b463ece1dfd",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/a0d7141173d37d71066176dd5abe4b463ece1dfd",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/a0d7141173d37d71066176dd5abe4b463ece1dfd/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "48155336a06f1d80d345aad962a8ac7bf5a3aeb1",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/48155336a06f1d80d345aad962a8ac7bf5a3aeb1",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/48155336a06f1d80d345aad962a8ac7bf5a3aeb1"
      }
    ],
    "files": [
      {
        "sha": "d50bf29e616dbcfa95af6e3407f5212c331c5930",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 46,
        "deletions": 2,
        "changes": 48,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/a0d7141173d37d71066176dd5abe4b463ece1dfd/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/a0d7141173d37d71066176dd5abe4b463ece1dfd/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=a0d7141173d37d71066176dd5abe4b463ece1dfd",
        "patch": "@@ -1,5 +1,7 @@\n-from flask import Flask, render_template, redirect, url_for, request\n+import os\n+from flask import Flask, jsonify, render_template, redirect, url_for, request\n from flask_login import current_user, login_user, logout_user\n+import requests\n from app.modules.auth import auth_bp\n from app.modules.auth.forms import SignupForm, LoginForm\n from app.modules.auth.services import AuthenticationService\n@@ -10,7 +12,8 @@\n user_profile_service = UserProfileService()\n \n app = Flask(__name__)\n-app.config[\"SECRET_KEY\"] = \"SECRET KEY  \"\n+#app.config[\"SECRET_KEY\"] = \"SECRET KEY  \"\n+token_admin = os.getenv(\"GITHUB_TOKEN_ADMIN\")\n \n github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g',\n                                         client_secret='00b92023ceb36020d4d0a7f34d5a583e2e386611')\n@@ -74,3 +77,44 @@ def github_login():\n            return '<h1>Your Github repo is {}'.format(account_info_json[1]['name'])\n \n    return '<h1>Request failed!</h1>'\n+\n+\n+@auth_bp.route('/invite', methods=['GET', 'POST'])\n+def invite_user():\n+    account_info = github.get('/user')\n+    if account_info.ok:\n+        username = account_info.json()['login']\n+        #username = \"Javiruizg\"\n+         \n+        # API de GitHub para invitar a un usuario a una organizaci\u00f3n\n+        url = f'https://api.github.com/orgs/uvlhub/invitations'  \n+        headers = {\n+            'Authorization': f'token {token_admin}',\n+            'Accept': 'application/vnd.github.v3+json'\n+        }\n+        payload = {\n+            \"invitee_id\": None,  # Esta es una asignaci\u00f3n temporal\n+        }\n+\n+        # Obtener el ID del usuario desde la API de GitHub\n+        user_url = f'https://api.github.com/users/{username}'\n+        user_response = requests.get(user_url, headers=headers)\n+        \n+        if user_response.status_code == 200:\n+            user_id = user_response.json().get(\"id\")\n+            payload[\"invitee_id\"] = user_id  # Actualizo el invitee_id con el ID real del usuario de github\n+        else:\n+            return jsonify({\"error\": f\"No se pudo encontrar el usuario {username}\"}), 404\n+\n+        # Enviar la invitaci\u00f3n a la organizaci\u00f3n\n+        response = requests.post(url, json=payload, headers=headers)\n+\n+        if response.status_code == 201:\n+            return jsonify({\"message\": f\"Invitaci\u00f3n enviada a {username} exitosamente.\"}), 201\n+        elif response.status_code == 404:\n+            return jsonify({\"error\": f\"Usuario {username} no encontrado.\"}), 404\n+        else:\n+            return jsonify({\"error\": \"No se pudo enviar la invitaci\u00f3n\", \"details\": response.json()}), response.status_code\n+        \n+    else:\n+        return '<h1>Request failed! First sync your account with github</h1>'\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "48155336a06f1d80d345aad962a8ac7bf5a3aeb1",
    "node_id": "C_kwDONDG85doAKDQ4MTU1MzM2YTA2ZjFkODBkMzQ1YWFkOTYyYThhYzdiZjVhM2FlYjE",
    "commit": {
      "author": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-10T11:15:14Z"
      },
      "committer": {
        "name": "Javiruizg",
        "email": "javruigar2@alum.us.es",
        "date": "2024-11-10T11:15:14Z"
      },
      "message": "feat(auth): added button to connect application with GitHub via OAuth",
      "tree": {
        "sha": "50b8228905eb619b2caf45bd005ccbbec7b0a6a2",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/50b8228905eb619b2caf45bd005ccbbec7b0a6a2"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/48155336a06f1d80d345aad962a8ac7bf5a3aeb1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/48155336a06f1d80d345aad962a8ac7bf5a3aeb1",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/48155336a06f1d80d345aad962a8ac7bf5a3aeb1",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/48155336a06f1d80d345aad962a8ac7bf5a3aeb1/comments",
    "author": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Javiruizg",
      "id": 91947377,
      "node_id": "U_kgDOBXsBcQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91947377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Javiruizg",
      "html_url": "https://github.com/Javiruizg",
      "followers_url": "https://api.github.com/users/Javiruizg/followers",
      "following_url": "https://api.github.com/users/Javiruizg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Javiruizg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Javiruizg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Javiruizg/subscriptions",
      "organizations_url": "https://api.github.com/users/Javiruizg/orgs",
      "repos_url": "https://api.github.com/users/Javiruizg/repos",
      "events_url": "https://api.github.com/users/Javiruizg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Javiruizg/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/68bda8a260f5f4856b774b4ffe9186a072feb08b"
      }
    ],
    "files": [
      {
        "sha": "ac41c38470fe3cc7a5c2bd79e44a59fb798a939d",
        "filename": "app/modules/auth/routes.py",
        "status": "modified",
        "additions": 24,
        "deletions": 3,
        "changes": 27,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/48155336a06f1d80d345aad962a8ac7bf5a3aeb1/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/48155336a06f1d80d345aad962a8ac7bf5a3aeb1/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=48155336a06f1d80d345aad962a8ac7bf5a3aeb1",
        "patch": "@@ -1,15 +1,22 @@\n-from flask import render_template, redirect, url_for, request\n+from flask import Flask, render_template, redirect, url_for, request\n from flask_login import current_user, login_user, logout_user\n-\n from app.modules.auth import auth_bp\n from app.modules.auth.forms import SignupForm, LoginForm\n from app.modules.auth.services import AuthenticationService\n from app.modules.profile.services import UserProfileService\n-\n+from flask_dance.contrib.github import make_github_blueprint, github\n \n authentication_service = AuthenticationService()\n user_profile_service = UserProfileService()\n \n+app = Flask(__name__)\n+app.config[\"SECRET_KEY\"] = \"SECRET KEY  \"\n+\n+github_blueprint = make_github_blueprint(client_id='Ov23liH3c6144kMW6I2g',\n+                                        client_secret='00b92023ceb36020d4d0a7f34d5a583e2e386611')\n+\n+app.register_blueprint(github_blueprint, url_prefix='/github_login')\n+\n \n @auth_bp.route(\"/signup/\", methods=[\"GET\", \"POST\"])\n def show_signup_form():\n@@ -53,3 +60,17 @@ def login():\n def logout():\n     logout_user()\n     return redirect(url_for('public.index'))\n+\n+\n+@auth_bp.route('/gitlogin')\n+def github_login():\n+    \n+   if not github.authorized:\n+       return redirect(url_for('github.login'))\n+   else:\n+       account_info = github.get('/user/repos')\n+       if account_info.ok:\n+           account_info_json = account_info.json()\n+           return '<h1>Your Github repo is {}'.format(account_info_json[1]['name'])\n+\n+   return '<h1>Request failed!</h1>'"
      },
      {
        "sha": "a76c25ccdf881eb721e29af34f2d893b5fb6d677",
        "filename": "app/modules/auth/services.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/48155336a06f1d80d345aad962a8ac7bf5a3aeb1/app%2Fmodules%2Fauth%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/48155336a06f1d80d345aad962a8ac7bf5a3aeb1/app%2Fmodules%2Fauth%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fservices.py?ref=48155336a06f1d80d345aad962a8ac7bf5a3aeb1",
        "patch": "@@ -9,6 +9,7 @@\n from core.configuration.configuration import uploads_folder_name\n from core.services.BaseService import BaseService\n \n+os.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'\n \n class AuthenticationService(BaseService):\n     def __init__(self):"
      },
      {
        "sha": "7da04efbcf1b18b03c9b073d980a257f46a6bbb2",
        "filename": "app/templates/base_template.html",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/48155336a06f1d80d345aad962a8ac7bf5a3aeb1/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/48155336a06f1d80d345aad962a8ac7bf5a3aeb1/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=48155336a06f1d80d345aad962a8ac7bf5a3aeb1",
        "patch": "@@ -170,6 +170,10 @@\n \n                         {% else %}\n \n+                        <a href=\"{{ url_for('auth.github_login') }}\">\n+                            <button>Sync with Github</button>\n+                        </a> \n+\n                         <a class=\"nav-icon dropdown-toggle d-inline-block d-sm-none\" href=\"#\" data-bs-toggle=\"dropdown\">\n                             <i class=\"align-middle\" data-feather=\"user\"></i> \n                         </a>"
      }
    ]
  },
  {
    "sha": "ad167c05fc35c0e4ab3093bf45ef671a8ca527ed",
    "node_id": "C_kwDONDG85doAKGFkMTY3YzA1ZmMzNWMwZTRhYjMwOTNiZjQ1ZWY2NzFhOGNhNTI3ZWQ",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-11-03T18:46:59Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-11-03T18:46:59Z"
      },
      "message": "feat(dataset): added button to copy dataset info in bibtex format to clipboard",
      "tree": {
        "sha": "8ab91357e4cfcc1dbd49082c0550ed03e70fa4ec",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/8ab91357e4cfcc1dbd49082c0550ed03e70fa4ec"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e454be127e949e7aa8345c377ccdfe55b37f9f0",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4e454be127e949e7aa8345c377ccdfe55b37f9f0",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/4e454be127e949e7aa8345c377ccdfe55b37f9f0"
      }
    ],
    "files": [
      {
        "sha": "d6c86796f02635516ddddabf1bd9491dd205e985",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=ad167c05fc35c0e4ab3093bf45ef671a8ca527ed",
        "patch": "@@ -158,6 +158,43 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n \n             </div>\n \n+            {% if bibtex_dataset %}\n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n+                <div id=\"dataset_bibtex_export\" style=\"display: none\">\n+                    {{ bibtex_dataset }}\n+                </div>\n+\n+                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_bibtex_export')\">\n+                    <span class=\"button_doi_id\" id=\"boton_exportar_bibtex\">\n+                        <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                        <b>BibTex</b>\n+                    </span>\n+\n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_dataset }}\n+                    </span> -->\n+                   \n+                    \n+                    \n+                    <!-- <span class=\"doi_text\">\n+                        {{ bibtex_preview }}\n+                    </span> -->\n+                   \n+\n+                    \n+                    <div class=\"doi_text\">\n+                        <div>{{ bibtex_preview_start }}</div>\n+                        {% for bib_line in bibtex_preview_lines %}\n+                        <div>&nbsp;&nbsp;{{ bib_line }}</div>\n+                        {% endfor %}\n+                        <div>{{ bibtex_preview_end }}</div>\n+                    </div>\n+                   \n+                </button>\n+            </div>\n+            {% endif %}\n+\n             {% if dataset.ds_meta_data.dataset_doi %}\n             <div class=\"card-body\" style=\"padding-top: 0px\">\n \n@@ -182,6 +219,8 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n             {% endif %}\n \n+            \n+\n         </div>\n \n         <div class=\"card\">"
      },
      {
        "sha": "6a3d5d74165417518ea46c42bc095400cc648683",
        "filename": "app/static/css/own.css",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed/app%2Fstatic%2Fcss%2Fown.css",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/ad167c05fc35c0e4ab3093bf45ef671a8ca527ed/app%2Fstatic%2Fcss%2Fown.css",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fcss%2Fown.css?ref=ad167c05fc35c0e4ab3093bf45ef671a8ca527ed",
        "patch": "@@ -142,8 +142,10 @@\n     background-color: #147ABB;\n     padding: 10px;\n     display: flex;\n-    align-items: center;\n+    flex-direction: column;\n+    align-items: flex-start;\n     transition: background-color 0.3s ease;\n+    text-wrap: wrap;\n }\n \n .doi_button:hover .doi_text {"
      }
    ]
  },
  {
    "sha": "4e454be127e949e7aa8345c377ccdfe55b37f9f0",
    "node_id": "C_kwDONDG85doAKDRlNDU0YmUxMjdlOTQ5ZTdhYTgzNDVjMzc3Y2NkZmU1NWIzN2Y5ZjA",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-11-03T18:46:00Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-11-03T18:46:00Z"
      },
      "message": "feat (dataset): added dataset bibtex info to response model",
      "tree": {
        "sha": "a068a9e401cb18775c740f1582df930b2dac3f21",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/a068a9e401cb18775c740f1582df930b2dac3f21"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/4e454be127e949e7aa8345c377ccdfe55b37f9f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4e454be127e949e7aa8345c377ccdfe55b37f9f0",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/4e454be127e949e7aa8345c377ccdfe55b37f9f0",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/4e454be127e949e7aa8345c377ccdfe55b37f9f0/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/68bda8a260f5f4856b774b4ffe9186a072feb08b"
      }
    ],
    "files": [
      {
        "sha": "3a6a3d48a02958ccb500182532815d7e54df02c3",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 36,
        "deletions": 1,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/4e454be127e949e7aa8345c377ccdfe55b37f9f0/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/4e454be127e949e7aa8345c377ccdfe55b37f9f0/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=4e454be127e949e7aa8345c377ccdfe55b37f9f0",
        "patch": "@@ -259,9 +259,44 @@ def subdomain_index(doi):\n     # Get dataset\n     dataset = ds_meta_data.data_set\n \n+\n+    # Export DataSet to BibTex\n+    closing_ = \"},\"\n+    bibtex_properties = [\"@misc{MiscUvl\" + ds_meta_data.title.replace(\" \", \"\") + \",\"]\n+    bibtex_properties.append(\"  author = {\" + \" and \".join([a_.name for a_ in ds_meta_data.authors]) + closing_)\n+    bibtex_properties.append(\"  title = {\" + ds_meta_data.title + closing_)\n+    \n+    if os.environ.get(\"FLASK_ENV\").lower()==\"production\":\n+        bibtex_properties.append(\"  howpublished = {https://zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    else:\n+        bibtex_properties.append(\"  howpublished = {https://sandbox.zenodo.org/records/\" + str(ds_meta_data.deposition_id) + closing_)\n+    bibtex_properties.append(\"  year = {\" + str(dataset.created_at.date().year) + closing_)\n+    bibtex_properties.append(\"  note = {Accessed: \" + str(datetime.now().date()) + closing_) #opcional\n+    bibtex_properties.append(\"  annote = {\" + ds_meta_data.description + closing_) #opcional\n+\n+    bibtex_properties[-1] = bibtex_properties[-1][:-1]\n+    bibtex_properties.append(\"}\")\n+    bibtex_dataset = \"\\n\".join(bibtex_properties)\n+    \n+    max_preview_len = 60\n+    bibtex_preview = bibtex_dataset if len(bibtex_dataset)<=max_preview_len else bibtex_dataset[:max_preview_len] + \" ...\"\n+\n     # Save the cookie to the user's browser\n     user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n-    resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+    \n+    n_px = 17*(int(len(bibtex_properties)/2)+1)\n+\n+    page_render = render_template(\"dataset/view_dataset.html\",\n+                    dataset=dataset,\n+                    bibtex_dataset=bibtex_dataset,\n+                    bibtex_preview=bibtex_preview,\n+                    bibtex_preview_start = bibtex_properties[0],\n+                    bibtex_preview_lines=bibtex_properties[1:-1],\n+                    bibtex_preview_end = bibtex_properties[-1]).replace('id=\"boton_exportar_bibtex\">',\n+                    'id=\"boton_exportar_bibtex\" style=\"padding-top: {}px;padding-bottom: {}px;\">'.format(n_px, n_px), 1)\n+\n+    resp = make_response(page_render)\n+    # resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n     resp.set_cookie(\"view_cookie\", user_cookie)\n \n     return resp"
      }
    ]
  },
  {
    "sha": "68bda8a260f5f4856b774b4ffe9186a072feb08b",
    "node_id": "C_kwDONDG85doAKDY4YmRhOGEyNjBmNWY0ODU2Yjc3NGI0ZmZlOTE4NmEwNzJmZWIwOGI",
    "commit": {
      "author": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-10-21T19:02:08Z"
      },
      "committer": {
        "name": "vicgrabru",
        "email": "vgravanbru@gmail.com",
        "date": "2024-10-21T19:02:08Z"
      },
      "message": "Testing fix",
      "tree": {
        "sha": "1be40479f0f417c7c7eb6deaf943a9814d063925",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/1be40479f0f417c7c7eb6deaf943a9814d063925"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/68bda8a260f5f4856b774b4ffe9186a072feb08b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/68bda8a260f5f4856b774b4ffe9186a072feb08b",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/68bda8a260f5f4856b774b4ffe9186a072feb08b",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/68bda8a260f5f4856b774b4ffe9186a072feb08b/comments",
    "author": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "vicgrabru",
      "id": 91720565,
      "node_id": "U_kgDOBXeLdQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/91720565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicgrabru",
      "html_url": "https://github.com/vicgrabru",
      "followers_url": "https://api.github.com/users/vicgrabru/followers",
      "following_url": "https://api.github.com/users/vicgrabru/following{/other_user}",
      "gists_url": "https://api.github.com/users/vicgrabru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vicgrabru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vicgrabru/subscriptions",
      "organizations_url": "https://api.github.com/users/vicgrabru/orgs",
      "repos_url": "https://api.github.com/users/vicgrabru/repos",
      "events_url": "https://api.github.com/users/vicgrabru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vicgrabru/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4897d68fac414147687cc5226c0257e501fa0d7",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f4897d68fac414147687cc5226c0257e501fa0d7",
        "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f4897d68fac414147687cc5226c0257e501fa0d7"
      }
    ],
    "files": [
      {
        "sha": "57c20159d20707de998f985904b5d5391fceb8c6",
        "filename": ".moduleignore",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/68bda8a260f5f4856b774b4ffe9186a072feb08b/.moduleignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/68bda8a260f5f4856b774b4ffe9186a072feb08b/.moduleignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.moduleignore?ref=68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "patch": "@@ -0,0 +1 @@\n+webhook"
      },
      {
        "sha": "36cf18dd436acb79fe0b80454d0909dd6fbb783b",
        "filename": "core/selenium/common.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/68bda8a260f5f4856b774b4ffe9186a072feb08b/core%2Fselenium%2Fcommon.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/68bda8a260f5f4856b774b4ffe9186a072feb08b/core%2Fselenium%2Fcommon.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fselenium%2Fcommon.py?ref=68bda8a260f5f4856b774b4ffe9186a072feb08b",
        "patch": "@@ -1,3 +1,4 @@\n+import os\n from selenium import webdriver\n from selenium.webdriver.chrome.service import Service\n from webdriver_manager.chrome import ChromeDriverManager\n@@ -6,9 +7,12 @@\n def initialize_driver():\n     # Initializes the browser options\n     options = webdriver.ChromeOptions()\n+    driver_path = ChromeDriverManager().install()\n \n     # Initialise the browser using WebDriver Manager\n-    service = Service(ChromeDriverManager().install())\n+    chrome_driver_binary = os.path.join(os.path.dirname(driver_path), 'chromedriver')\n+    service = Service(chrome_driver_binary)\n+    \n     driver = webdriver.Chrome(service=service, options=options)\n     return driver\n "
      }
    ]
  },
  {
    "sha": "f4897d68fac414147687cc5226c0257e501fa0d7",
    "node_id": "C_kwDONDG85doAKGY0ODk3ZDY4ZmFjNDE0MTQ3Njg3Y2M1MjI2YzAyNTdlNTAxZmEwZDc",
    "commit": {
      "author": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-10-20T16:45:21Z"
      },
      "committer": {
        "name": "Danguepre",
        "email": "danguepre@alum.us.es",
        "date": "2024-10-20T16:45:21Z"
      },
      "message": "Nuevo commit sin historial",
      "tree": {
        "sha": "2ad4daa1a0bd9113971138f99615583d404f14e5",
        "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/trees/2ad4daa1a0bd9113971138f99615583d404f14e5"
      },
      "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/git/commits/f4897d68fac414147687cc5226c0257e501fa0d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null,
        "verified_at": null
      }
    },
    "url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f4897d68fac414147687cc5226c0257e501fa0d7",
    "html_url": "https://github.com/flamenquin-hub-single/uvlhub/commit/f4897d68fac414147687cc5226c0257e501fa0d7",
    "comments_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/commits/f4897d68fac414147687cc5226c0257e501fa0d7/comments",
    "author": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "committer": {
      "login": "Danguepre",
      "id": 73189183,
      "node_id": "MDQ6VXNlcjczMTg5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73189183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Danguepre",
      "html_url": "https://github.com/Danguepre",
      "followers_url": "https://api.github.com/users/Danguepre/followers",
      "following_url": "https://api.github.com/users/Danguepre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Danguepre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Danguepre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Danguepre/subscriptions",
      "organizations_url": "https://api.github.com/users/Danguepre/orgs",
      "repos_url": "https://api.github.com/users/Danguepre/repos",
      "events_url": "https://api.github.com/users/Danguepre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Danguepre/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "parents": [],
    "files": [
      {
        "sha": "e27476a47f9e321d8f2a13d529388e069a72a8af",
        "filename": ".env.docker.example",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/.env.docker.example",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/.env.docker.example",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.env.docker.example?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,11 @@\n+FLASK_APP_NAME=\"UVLHUB.IO(dev)\"\n+FLASK_ENV=development\n+DOMAIN=localhost\n+MARIADB_HOSTNAME=db\n+MARIADB_PORT=3306\n+MARIADB_DATABASE=uvlhubdb\n+MARIADB_TEST_DATABASE=uvlhubdb_test\n+MARIADB_USER=uvlhubdb_user\n+MARIADB_PASSWORD=uvlhubdb_password\n+MARIADB_ROOT_PASSWORD=uvlhubdb_root_password\n+WORKING_DIR=/app/"
      },
      {
        "sha": "e3ce7df1fac92046908dca9965f4242d1eb37e34",
        "filename": ".env.docker.production.example",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/.env.docker.production.example",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/.env.docker.production.example",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.env.docker.production.example?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,11 @@\n+FLASK_APP_NAME=\"UVLHUB.IO\"\n+FLASK_ENV=production\n+DOMAIN=<CHANGE_THIS>\n+MARIADB_HOSTNAME=db\n+MARIADB_PORT=3306\n+MARIADB_DATABASE=uvlhubdb\n+MARIADB_USER=<CHANGE_THIS>\n+MARIADB_PASSWORD=<CHANGE_THIS>\n+MARIADB_ROOT_PASSWORD=<CHANGE_THIS>\n+WEBHOOK_TOKEN=<CHANGE_THIS>\n+WORKING_DIR=/app/"
      },
      {
        "sha": "2772aa2a7a352944ab711e47b457d2a8b5e5430d",
        "filename": ".env.local.example",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/.env.local.example",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/.env.local.example",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.env.local.example?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,11 @@\n+FLASK_APP_NAME=\"UVLHUB.IO(dev)\"\n+FLASK_ENV=development\n+DOMAIN=localhost:5000\n+MARIADB_HOSTNAME=localhost\n+MARIADB_PORT=3306\n+MARIADB_DATABASE=uvlhubdb\n+MARIADB_TEST_DATABASE=uvlhubdb_test\n+MARIADB_USER=uvlhubdb_user\n+MARIADB_PASSWORD=uvlhubdb_password\n+MARIADB_ROOT_PASSWORD=uvlhubdb_root_password\n+WORKING_DIR=\"\""
      },
      {
        "sha": "7192716cddb497d6f933209c36273fd06e32bea2",
        "filename": ".env.vagrant.example",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/.env.vagrant.example",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/.env.vagrant.example",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.env.vagrant.example?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,11 @@\n+FLASK_APP_NAME=\"UVLHUB.IO(dev)\"\n+FLASK_ENV=development\n+DOMAIN=localhost:5000\n+MARIADB_HOSTNAME=localhost\n+MARIADB_PORT=3306\n+MARIADB_DATABASE=uvlhubdb\n+MARIADB_TEST_DATABASE=uvlhubdb_test\n+MARIADB_USER=uvlhubdb_user\n+MARIADB_PASSWORD=uvlhubdb_password\n+MARIADB_ROOT_PASSWORD=uvlhubdb_root_password\n+WORKING_DIR=/vagrant/"
      },
      {
        "sha": "6deafc261704e20369c0983af88042e502ae4880",
        "filename": ".flake8",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/.flake8",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/.flake8",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.flake8?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,2 @@\n+[flake8]\n+max-line-length = 120"
      },
      {
        "sha": "6e19c8fe4c221cbb0f2b6426d6482f66f45d5d85",
        "filename": ".gitattributes",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/.gitattributes",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/.gitattributes",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitattributes?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,13 @@\n+* text=auto\n+*.sh text eol=lf\n+*.py text eol=lf\n+*.txt text eol=lf\n+*.md text eol=lf\n+*.yml text eol=lf\n+*.yaml text eol=lf\n+*.json text eol=lf\n+*.js text eol=lf\n+*.css text eol=lf\n+*.html text eol=lf\n+*.jsx text eol=lf\n+*.tsx text eol=lf\n\\ No newline at end of file"
      },
      {
        "sha": "9f8c6c53b50ba7d3700bd63206e9ff408fddffaa",
        "filename": ".github/workflows/commits.yml",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,18 @@\n+name: Commits Syntax Checker\n+\n+on:\n+  pull_request:\n+    branches: [main]\n+    types: [opened, reopened, edited, review_requested, synchronize]\n+  push:\n+    branches:\n+      - \"main\"\n+  workflow_call:\n+\n+jobs:\n+  check:\n+    name: Conventional Commits\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file"
      },
      {
        "sha": "c5b9dbad0e7570244cb84942b53b859bf041af6c",
        "filename": ".github/workflows/deloyment_on_webhook.yml",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeloyment_on_webhook.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,32 @@\n+name: Deploy on Webhook\n+\n+on:\n+  workflow_run:\n+    workflows: \n+      - \"Python Lint\"\n+      - \"Run tests\"\n+    types:\n+      - completed\n+\n+jobs:\n+  deploy:\n+    if: github.ref == 'refs/heads/main'\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - name: Checkout code\n+      uses: actions/checkout@v2\n+\n+    - name: Check lint and test results\n+      run: |\n+        if [ \"${{ github.event.workflow_run.conclusion }}\" != \"success\" ]; then\n+          echo \"Lint or Test workflow did not succeed. Exiting.\"\n+          exit 1\n+        fi\n+\n+    - name: Trigger Deployment Webhook\n+      env:\n+        WEBHOOK_DOMAIN: ${{ secrets.WEBHOOK_DOMAIN }}\n+        WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}\n+      run: |\n+        curl -X POST https://${{ secrets.WEBHOOK_DOMAIN }}/webhook/deploy -H \"Authorization: Bearer ${{ secrets.WEBHOOK_TOKEN }}\""
      },
      {
        "sha": "f7dfe75eb96badbdd3ee434377bee31f33a173df",
        "filename": ".github/workflows/deployment_on_dockerhub.yml",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,43 @@\n+# This workflow uses actions that are not certified by GitHub.\n+# They are provided by a third-party and are governed by\n+# separate terms of service, privacy policy, and support\n+# documentation.\n+\n+# GitHub recommends pinning actions to a commit SHA.\n+# To get a newer version, you will need to update the SHA.\n+# You can also reference a tag or branch, but the action may change without warning.\n+\n+name: Publish image in Docker Hub\n+\n+on:\n+  release:\n+    types: [published]\n+\n+jobs:\n+  push_to_registry:\n+    name: Push Docker image to Docker Hub\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v3\n+\n+      - name: Log in to Docker Hub\n+        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a\n+        with:\n+          username: ${{ secrets.DOCKER_USER }}\n+          password: ${{ secrets.DOCKER_PASSWORD }}\n+\n+      - name: Build and push Docker image\n+        run: docker build --build-arg VERSION_TAG=${{ github.event.release.tag_name }} -t drorganvidez/uvlhub:${{ github.event.release.tag_name }} -f docker/images/Dockerfile.prod .\n+        env:\n+          DOCKER_CLI_EXPERIMENTAL: enabled\n+\n+      - name: Push Docker image to Docker Hub\n+        run: docker push drorganvidez/uvlhub:${{ github.event.release.tag_name }}\n+\n+      - name: Tag and push latest\n+        run: |\n+          docker tag drorganvidez/uvlhub:${{ github.event.release.tag_name }} drorganvidez/uvlhub:latest\n+          docker push drorganvidez/uvlhub:latest\n+        env:\n+          DOCKER_CLI_EXPERIMENTAL: enabled"
      },
      {
        "sha": "ccbd3311ba585fae0de19dc7a96de461fce8de9c",
        "filename": ".github/workflows/lint.yml",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/.github%2Fworkflows%2Flint.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/.github%2Fworkflows%2Flint.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Flint.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,28 @@\n+name: Python Lint\n+\n+on:\n+  push:\n+    branches: [main, develop]\n+  pull_request:\n+    branches: [main, develop]\n+\n+jobs:\n+  lint:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+\n+    - name: Set up Python\n+      uses: actions/setup-python@v2\n+      with:\n+        python-version: '3.x'\n+\n+    - name: Install Dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install flake8\n+\n+    - name: Lint with flake8\n+      run: |\n+        flake8 app"
      },
      {
        "sha": "69663764faaf23999ecdab70b43968ca63a5d87f",
        "filename": ".github/workflows/tests.yml",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/.github%2Fworkflows%2Ftests.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/.github%2Fworkflows%2Ftests.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.github%2Fworkflows%2Ftests.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,50 @@\n+name: Run tests\n+\n+on:\n+  push:\n+    branches: [main, develop]\n+  pull_request:\n+    branches: [main, develop]\n+\n+jobs:\n+  pytest:\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Prepare environment\n+      run: |\n+        sed -i '/rosemary @ file:\\/\\/\\/app/d' requirements.txt\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'"
      },
      {
        "sha": "71b757e7911bac6e31e296b39b6ccd3992a88e44",
        "filename": ".gitignore",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.gitignore?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+.env\n+__pycache__/\n+.idea\n+uploads/\n+app.log\n+.DS_Store\n+rosemary.egg-info/\n+build/\n+.coverage\n+htmlcov/\n+.pytest_cache\n+venv/\n+ubuntu-bionic-18.04-cloudimg-console.log\n+.vagrant/\n+nginx.prod.ssl.conf\n+.version\n+entrypoint.sh\n+deployments.log\n+test_file.txt\n\\ No newline at end of file"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": ".moduleignore",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/.moduleignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/.moduleignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/.moduleignore?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "e97e32cf2af7254e60397ad048f331098f29ec05",
        "filename": "README.md",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/README.md",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/README.md",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/README.md?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,18 @@\n+<div align=\"center\">\n+\n+  <a href=\"\">[![Pytest Testing Suite](https://github.com/diverso-lab/uvlhub/actions/workflows/tests.yml/badge.svg?branch=main)](https://github.com/diverso-lab/uvlhub/actions/workflows/tests.yml)</a>\n+  <a href=\"\">[![Commits Syntax Checker](https://github.com/diverso-lab/uvlhub/actions/workflows/commits.yml/badge.svg?branch=main)](https://github.com/diverso-lab/uvlhub/actions/workflows/commits.yml)</a>\n+  \n+</div>\n+\n+<div style=\"text-align: center;\">\n+  <img src=\"https://www.uvlhub.io/static/img/logos/logo-light.svg\" alt=\"Logo\">\n+</div>\n+\n+# uvlhub.io\n+\n+Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab\n+\n+## Official documentation\n+\n+You can consult the official documentation of the project at [docs.uvlhub.io](https://docs.uvlhub.io/)"
      },
      {
        "sha": "518c87fdce1c996b6f6a3f80b6a2c2b87b0ef1ad",
        "filename": "app/__init__.py",
        "status": "added",
        "additions": 70,
        "deletions": 0,
        "changes": 70,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,70 @@\n+import os\n+\n+from flask import Flask\n+\n+from flask_sqlalchemy import SQLAlchemy\n+from dotenv import load_dotenv\n+from flask_migrate import Migrate\n+\n+from core.configuration.configuration import get_app_version\n+from core.managers.module_manager import ModuleManager\n+from core.managers.config_manager import ConfigManager\n+from core.managers.error_handler_manager import ErrorHandlerManager\n+from core.managers.logging_manager import LoggingManager\n+\n+# Load environment variables\n+load_dotenv()\n+\n+# Create the instances\n+db = SQLAlchemy()\n+migrate = Migrate()\n+\n+\n+def create_app(config_name='development'):\n+    app = Flask(__name__)\n+\n+    # Load configuration according to environment\n+    config_manager = ConfigManager(app)\n+    config_manager.load_config(config_name=config_name)\n+\n+    # Initialize SQLAlchemy and Migrate with the app\n+    db.init_app(app)\n+    migrate.init_app(app, db)\n+\n+    # Register modules\n+    module_manager = ModuleManager(app)\n+    module_manager.register_modules()\n+\n+    # Register login manager\n+    from flask_login import LoginManager\n+    login_manager = LoginManager()\n+    login_manager.init_app(app)\n+    login_manager.login_view = \"auth.login\"\n+\n+    @login_manager.user_loader\n+    def load_user(user_id):\n+        from app.modules.auth.models import User\n+        return User.query.get(int(user_id))\n+\n+    # Set up logging\n+    logging_manager = LoggingManager(app)\n+    logging_manager.setup_logging()\n+\n+    # Initialize error handler manager\n+    error_handler_manager = ErrorHandlerManager(app)\n+    error_handler_manager.register_error_handlers()\n+\n+    # Injecting environment variables into jinja context\n+    @app.context_processor\n+    def inject_vars_into_jinja():\n+        return {\n+            'FLASK_APP_NAME': os.getenv('FLASK_APP_NAME'),\n+            'FLASK_ENV': os.getenv('FLASK_ENV'),\n+            'DOMAIN': os.getenv('DOMAIN', 'localhost'),\n+            'APP_VERSION': get_app_version()\n+        }\n+\n+    return app\n+\n+\n+app = create_app()"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "b7dc44ad5d20fcaae17a221d545e5e8c73fa09ec",
        "filename": "app/modules/auth/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+auth_bp = BaseBlueprint('auth', __name__, template_folder='templates')"
      },
      {
        "sha": "6b5c6196b18a8594c5a65948981c3cba9b75d903",
        "filename": "app/modules/auth/assets/scripts.js",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fassets%2Fscripts.js?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+console.log(\"Hi, I am a script loaded from auth module\");"
      },
      {
        "sha": "23ee544ea03b031df45e95bafb6e42e7463e9dd2",
        "filename": "app/modules/auth/forms.py",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Fforms.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Fforms.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fforms.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,18 @@\n+from flask_wtf import FlaskForm\n+from wtforms import StringField, SubmitField, PasswordField, BooleanField\n+from wtforms.validators import DataRequired, Email, Length\n+\n+\n+class SignupForm(FlaskForm):\n+    name = StringField('Name', validators=[DataRequired(), Length(max=100)])\n+    surname = StringField('Surname', validators=[DataRequired(), Length(max=100)])\n+    password = PasswordField('Password', validators=[DataRequired()])\n+    email = StringField('Email', validators=[DataRequired(), Email()])\n+    submit = SubmitField('Submit')\n+\n+\n+class LoginForm(FlaskForm):\n+    email = StringField('Email', validators=[DataRequired()])\n+    password = PasswordField('Password', validators=[DataRequired()])\n+    remember_me = BooleanField('Remember me')\n+    submit = SubmitField('Login')"
      },
      {
        "sha": "76348c3eb58c7c727c42004f50827ec8ac27871b",
        "filename": "app/modules/auth/models.py",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fmodels.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,35 @@\n+from datetime import datetime, timezone\n+\n+from flask_login import UserMixin\n+from werkzeug.security import generate_password_hash, check_password_hash\n+\n+from app import db\n+\n+\n+class User(db.Model, UserMixin):\n+    id = db.Column(db.Integer, primary_key=True)\n+\n+    email = db.Column(db.String(256), unique=True, nullable=False)\n+    password = db.Column(db.String(256), nullable=False)\n+    created_at = db.Column(db.DateTime, nullable=False, default=lambda: datetime.now(timezone.utc))\n+\n+    data_sets = db.relationship('DataSet', backref='user', lazy=True)\n+    profile = db.relationship('UserProfile', backref='user', uselist=False)\n+\n+    def __init__(self, **kwargs):\n+        super(User, self).__init__(**kwargs)\n+        if 'password' in kwargs:\n+            self.set_password(kwargs['password'])\n+\n+    def __repr__(self):\n+        return f'<User {self.email}>'\n+\n+    def set_password(self, password):\n+        self.password = generate_password_hash(password)\n+\n+    def check_password(self, password):\n+        return check_password_hash(self.password, password)\n+\n+    def temp_folder(self) -> str:\n+        from app.modules.auth.services import AuthenticationService\n+        return AuthenticationService().temp_folder_by_user(self)"
      },
      {
        "sha": "f24e3bc9b3a6212119c15d718dc470d56305a8b9",
        "filename": "app/modules/auth/repositories.py",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Frepositories.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,21 @@\n+from app.modules.auth.models import User\n+from core.repositories.BaseRepository import BaseRepository\n+\n+\n+class UserRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(User)\n+\n+    def create(self, commit: bool = True, **kwargs):\n+        password = kwargs.pop(\"password\")\n+        instance = self.model(**kwargs)\n+        instance.set_password(password)\n+        self.session.add(instance)\n+        if commit:\n+            self.session.commit()\n+        else:\n+            self.session.flush()\n+        return instance\n+\n+    def get_by_email(self, email: str):\n+        return self.model.query.filter_by(email=email).first()"
      },
      {
        "sha": "abe5dc6f62d27713ded23b764d679da472a6e009",
        "filename": "app/modules/auth/routes.py",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Froutes.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,55 @@\n+from flask import render_template, redirect, url_for, request\n+from flask_login import current_user, login_user, logout_user\n+\n+from app.modules.auth import auth_bp\n+from app.modules.auth.forms import SignupForm, LoginForm\n+from app.modules.auth.services import AuthenticationService\n+from app.modules.profile.services import UserProfileService\n+\n+\n+authentication_service = AuthenticationService()\n+user_profile_service = UserProfileService()\n+\n+\n+@auth_bp.route(\"/signup/\", methods=[\"GET\", \"POST\"])\n+def show_signup_form():\n+    if current_user.is_authenticated:\n+        return redirect(url_for('public.index'))\n+\n+    form = SignupForm()\n+    if form.validate_on_submit():\n+        email = form.email.data\n+        if not authentication_service.is_email_available(email):\n+            return render_template(\"auth/signup_form.html\", form=form, error=f'Email {email} in use')\n+\n+        try:\n+            user = authentication_service.create_with_profile(**form.data)\n+        except Exception as exc:\n+            return render_template(\"auth/signup_form.html\", form=form, error=f'Error creating user: {exc}')\n+\n+        # Log user\n+        login_user(user, remember=True)\n+        return redirect(url_for('public.index'))\n+\n+    return render_template(\"auth/signup_form.html\", form=form)\n+\n+\n+@auth_bp.route('/login', methods=['GET', 'POST'])\n+def login():\n+    if current_user.is_authenticated:\n+        return redirect(url_for('public.index'))\n+\n+    form = LoginForm()\n+    if request.method == 'POST' and form.validate_on_submit():\n+        if authentication_service.login(form.email.data, form.password.data):\n+            return redirect(url_for('public.index'))\n+\n+        return render_template(\"auth/login_form.html\", form=form, error='Invalid credentials')\n+\n+    return render_template('auth/login_form.html', form=form)\n+\n+\n+@auth_bp.route('/logout')\n+def logout():\n+    logout_user()\n+    return redirect(url_for('public.index'))"
      },
      {
        "sha": "27f5e44bbdea379670c7eaf8684fc1b6720e4b3b",
        "filename": "app/modules/auth/seeders.py",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Fseeders.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fseeders.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,37 @@\n+from app.modules.auth.models import User\n+from app.modules.profile.models import UserProfile\n+from core.seeders.BaseSeeder import BaseSeeder\n+\n+\n+class AuthSeeder(BaseSeeder):\n+\n+    priority = 1  # Higher priority\n+\n+    def run(self):\n+\n+        # Seeding users\n+        users = [\n+            User(email='user1@example.com', password='1234'),\n+            User(email='user2@example.com', password='1234'),\n+        ]\n+\n+        # Inserted users with their assigned IDs are returned by `self.seed`.\n+        seeded_users = self.seed(users)\n+\n+        # Create profiles for each user inserted.\n+        user_profiles = []\n+        names = [(\"John\", \"Doe\"), (\"Jane\", \"Doe\")]\n+\n+        for user, name in zip(seeded_users, names):\n+            profile_data = {\n+                \"user_id\": user.id,\n+                \"orcid\": \"\",\n+                \"affiliation\": \"Some University\",\n+                \"name\": name[0],\n+                \"surname\": name[1],\n+            }\n+            user_profile = UserProfile(**profile_data)\n+            user_profiles.append(user_profile)\n+\n+        # Seeding user profiles\n+        self.seed(user_profiles)"
      },
      {
        "sha": "76a1cdba2596d950bb33e8ffc1e0b71d95451230",
        "filename": "app/modules/auth/services.py",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Fservices.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,81 @@\n+import os\n+from flask_login import login_user\n+from flask_login import current_user\n+\n+from app.modules.auth.models import User\n+from app.modules.auth.repositories import UserRepository\n+from app.modules.profile.models import UserProfile\n+from app.modules.profile.repositories import UserProfileRepository\n+from core.configuration.configuration import uploads_folder_name\n+from core.services.BaseService import BaseService\n+\n+\n+class AuthenticationService(BaseService):\n+    def __init__(self):\n+        super().__init__(UserRepository())\n+        self.user_profile_repository = UserProfileRepository()\n+\n+    def login(self, email, password, remember=True):\n+        user = self.repository.get_by_email(email)\n+        if user is not None and user.check_password(password):\n+            login_user(user, remember=remember)\n+            return True\n+        return False\n+\n+    def is_email_available(self, email: str) -> bool:\n+        return self.repository.get_by_email(email) is None\n+\n+    def create_with_profile(self, **kwargs):\n+        try:\n+            email = kwargs.pop(\"email\", None)\n+            password = kwargs.pop(\"password\", None)\n+            name = kwargs.pop(\"name\", None)\n+            surname = kwargs.pop(\"surname\", None)\n+\n+            if not email:\n+                raise ValueError(\"Email is required.\")\n+            if not password:\n+                raise ValueError(\"Password is required.\")\n+            if not name:\n+                raise ValueError(\"Name is required.\")\n+            if not surname:\n+                raise ValueError(\"Surname is required.\")\n+\n+            user_data = {\n+                \"email\": email,\n+                \"password\": password\n+            }\n+\n+            profile_data = {\n+                \"name\": name,\n+                \"surname\": surname,\n+            }\n+\n+            user = self.create(commit=False, **user_data)\n+            profile_data[\"user_id\"] = user.id\n+            self.user_profile_repository.create(**profile_data)\n+            self.repository.session.commit()\n+        except Exception as exc:\n+            self.repository.session.rollback()\n+            raise exc\n+        return user\n+\n+    def update_profile(self, user_profile_id, form):\n+        if form.validate():\n+            updated_instance = self.update(user_profile_id, **form.data)\n+            return updated_instance, None\n+\n+        return None, form.errors\n+\n+    def get_authenticated_user(self) -> User | None:\n+        if current_user.is_authenticated:\n+            return current_user\n+        return None\n+\n+    def get_authenticated_user_profile(self) -> UserProfile | None:\n+        if current_user.is_authenticated:\n+            return current_user.profile\n+        return None\n+\n+    def temp_folder_by_user(self, user: User) -> str:\n+        return os.path.join(uploads_folder_name(), \"temp\", str(user.id))"
      },
      {
        "sha": "6bf6ebb9c2d58aabd1272b84742f668eb14e2ab8",
        "filename": "app/modules/auth/templates/auth/login_form.html",
        "status": "added",
        "additions": 95,
        "deletions": 0,
        "changes": 95,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftemplates%2Fauth%2Flogin_form.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftemplates%2Fauth%2Flogin_form.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftemplates%2Fauth%2Flogin_form.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,95 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}Login{% endblock %}\n+\n+{% block content %}\n+\n+<h1 class=\"h2 mb-3\"><b>Login</b></h1>\n+\n+<div class=\"row\">\n+    <div class=\"col-12\">\n+\n+        <form action=\"\" method=\"post\" novalidate>\n+                    {{ form.hidden_tag() }}\n+\n+                    <div class=\"row\">\n+\n+                        <div class=\"col-md-6 col-lg-6 col-xs-12\">\n+                            <div class=\"mb-3\">\n+                                {{ form.email.label(class=\"form-label\") }}\n+                                {{ form.email(class=\"form-control\",placeholder=\"Enter email\") }}\n+                                {% for error in form.email.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                                {% endfor %}\n+                            </div>\n+                        </div>\n+\n+                    </div>\n+\n+\n+                    <div class=\"row\">\n+\n+                        <div class=\"col-md-6 col-lg-6 col-xs-12\">\n+                            <div class=\"mb-3\">\n+                                {{ form.password.label(class=\"form-label\") }}\n+                                {{ form.password(class=\"form-control\",placeholder=\"Enter password\") }}\n+                                {% for error in form.password.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                                {% endfor %}\n+                            </div>\n+                        </div>\n+\n+                    </div>\n+\n+                    <div class=\"row\">\n+\n+                        <div class=\"col-md-6 col-lg-6 col-xs-12\">\n+                            <div class=\"mb-3\">\n+                                {{ form.remember_me(class=\"form-check-input\") }}\n+                                {{ form.remember_me.label(class=\"form-check-label\") }}\n+                            </div>\n+                        </div>\n+\n+                    </div>\n+\n+                    <div class=\"row\">\n+\n+                        <div class=\"col-lg-6 col-12\">\n+                            {{ form.submit(class=\"btn btn-primary\") }}\n+                        </div>\n+\n+                    </div>\n+\n+                    <div class=\"row\">\n+\n+                        {% if error %}\n+\n+                        <div class=\"mt-3 col-lg-6 col-12\">\n+                            <span style=\"color: red;\">{{ error }}</span>\n+                        </div>\n+\n+                        {% endif %}\n+\n+                    </div>\n+\n+                    <div class=\"row\">\n+\n+                        <div class=\"mt-3\">\n+                            <div class=\"col-lg-6 col-12\">\n+                                Don't have an account? <a href=\"{{ url_for('auth.show_signup_form') }}\">Sign up!</a>\n+                            </div>\n+                        </div>\n+\n+                    </div>\n+\n+                </form>\n+\n+    </div>\n+</div>\n+\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('auth.scripts') }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "6851470541e99a86d66695fd498d71d9a2566cf8",
        "filename": "app/modules/auth/templates/auth/signup_form.html",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftemplates%2Fauth%2Fsignup_form.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftemplates%2Fauth%2Fsignup_form.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftemplates%2Fauth%2Fsignup_form.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,116 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}Sign up{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h2 mb-3\"><b>Sign</b> Up</h1>\n+\n+    <div class=\"row\">\n+        <div class=\"col-5\">\n+\n+            <form action=\"\" method=\"post\" novalidate>\n+                {{ form.hidden_tag() }}\n+\n+                <div class=\"row\">\n+\n+                    <div class=\"col-md-6 col-lg-6 col-xs-12\">\n+                        <div class=\"mb-3\">\n+                            {{ form.name.label(class=\"form-label\") }} *\n+                            {{ form.name(class=\"form-control\",placeholder=\"Enter name\") }}\n+                            {% for error in form.name.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                            {% endfor %}\n+                        </div>\n+                    </div>\n+\n+                    <div class=\"col-md-6 col-lg-6 col-xs-12\">\n+                        <div class=\"mb-3\">\n+                            {{ form.surname.label(class=\"form-label\") }} *\n+                            {{ form.surname(class=\"form-control\",placeholder=\"Enter surname\") }}\n+                            {% for error in form.surname.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                            {% endfor %}\n+                        </div>\n+                    </div>\n+\n+                </div>\n+\n+                <div class=\"row\">\n+\n+\n+                </div>\n+\n+                <div class=\"row\">\n+\n+                    <div class=\"col-md-6 col-lg-6 col-xs-12\">\n+                        <div class=\"mb-3\">\n+                            {{ form.email.label(class=\"form-label\") }}\n+                            {{ form.email(class=\"form-control\",placeholder=\"Enter email\") }}\n+                            {% for error in form.email.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                            {% endfor %}\n+                        </div>\n+                    </div>\n+\n+                </div>\n+\n+\n+                <div class=\"row\">\n+\n+                    <div class=\"col-md-6 col-lg-6 col-xs-12\">\n+                        <div class=\"mb-3\">\n+                            {{ form.password.label(class=\"form-label\") }}\n+                            {{ form.password(class=\"form-control\",placeholder=\"Enter password\") }}\n+                            {% for error in form.password.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                            {% endfor %}\n+                        </div>\n+                    </div>\n+\n+                </div>\n+\n+                <div class=\"row\">\n+\n+                    <div class=\"col-lg-6 col-12\">\n+                        {{ form.submit(class=\"btn btn-primary\") }}\n+                    </div>\n+\n+                </div>\n+\n+                <div class=\"row\">\n+\n+                    <div class=\"col-lg-6 col-12\">\n+\n+                        {% if error %}\n+\n+                            <div class=\"mt-3\">\n+                                <p style=\"color: red;\"><strong>Error:</strong> {{ error }}\n+                            </div>\n+\n+                        {% endif %}\n+\n+                    </div>\n+\n+                </div>\n+\n+                <div class=\"row\">\n+\n+                    <div class=\"mt-3\">\n+                        <div class=\"col-lg-6 col-12\">\n+                            Already an account? <a href=\"{{ url_for('auth.login') }}\">Login</a>\n+                        </div>\n+                    </div>\n+\n+                </div>\n+\n+            </form>\n+\n+        </div>\n+    </div>\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('auth.scripts') }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/auth/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "5f7951c55fb27df19f621d1f5eaf0876bfe66e72",
        "filename": "app/modules/auth/tests/locustfile.py",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Flocustfile.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,58 @@\n+from locust import HttpUser, TaskSet, task\n+from core.locust.common import get_csrf_token, fake\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class SignupBehavior(TaskSet):\n+    def on_start(self):\n+        self.signup()\n+\n+    @task\n+    def signup(self):\n+        response = self.client.get(\"/signup\")\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/signup\", data={\n+            \"email\": fake.email(),\n+            \"password\": fake.password(),\n+            \"csrf_token\": csrf_token\n+        })\n+        if response.status_code != 200:\n+            print(f\"Signup failed: {response.status_code}\")\n+\n+\n+class LoginBehavior(TaskSet):\n+    def on_start(self):\n+        self.ensure_logged_out()\n+        self.login()\n+\n+    @task\n+    def ensure_logged_out(self):\n+        response = self.client.get(\"/logout\")\n+        if response.status_code != 200:\n+            print(f\"Logout failed or no active session: {response.status_code}\")\n+\n+    @task\n+    def login(self):\n+        response = self.client.get(\"/login\")\n+        if response.status_code != 200 or \"Login\" not in response.text:\n+            print(\"Already logged in or unexpected response, redirecting to logout\")\n+            self.ensure_logged_out()\n+            response = self.client.get(\"/login\")\n+\n+        csrf_token = get_csrf_token(response)\n+\n+        response = self.client.post(\"/login\", data={\n+            \"email\": 'user1@example.com',\n+            \"password\": '1234',\n+            \"csrf_token\": csrf_token\n+        })\n+        if response.status_code != 200:\n+            print(f\"Login failed: {response.status_code}\")\n+\n+\n+class AuthUser(HttpUser):\n+    tasks = [SignupBehavior, LoginBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "f5cf34093a4129ca20f55367a5917f13368c2535",
        "filename": "app/modules/auth/tests/test_selenium.py",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Ftest_selenium.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,51 @@\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.keys import Keys\n+from selenium.common.exceptions import NoSuchElementException\n+import time\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def test_login_and_check_element():\n+\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the login page\n+        driver.get(f'{host}/login')\n+\n+        # Wait a little while to make sure the page has loaded completely\n+        time.sleep(4)\n+\n+        # Find the username and password field and enter the values\n+        email_field = driver.find_element(By.NAME, 'email')\n+        password_field = driver.find_element(By.NAME, 'password')\n+\n+        email_field.send_keys('user1@example.com')\n+        password_field.send_keys('1234')\n+\n+        # Send the form\n+        password_field.send_keys(Keys.RETURN)\n+\n+        # Wait a little while to ensure that the action has been completed\n+        time.sleep(4)\n+\n+        try:\n+\n+            driver.find_element(By.XPATH, \"//h1[contains(@class, 'h2 mb-3') and contains(., 'Latest datasets')]\")\n+            print('Test passed!')\n+\n+        except NoSuchElementException:\n+            raise AssertionError('Test failed!')\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_login_and_check_element()"
      },
      {
        "sha": "4216cc787a63b572680bde44c2a7b69e940b6cf4",
        "filename": "app/modules/auth/tests/test_selenium_ide/test_signup.py",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftests%2Ftest_selenium_ide%2Ftest_signup.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftests%2Ftest_selenium_ide%2Ftest_signup.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Ftest_selenium_ide%2Ftest_signup.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,26 @@\n+# Generated by Selenium IDE\n+from selenium.webdriver.common.by import By\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver\n+\n+\n+class TestSignup():\n+    def setup_method(self, method):\n+        self.driver = initialize_driver()\n+        self.vars = {}\n+\n+    def teardown_method(self, method):\n+        self.driver.quit()\n+\n+    def test_signup(self):\n+        self.driver.get(get_host_for_selenium_testing())\n+        self.driver.find_element(By.LINK_TEXT, \"Sign Up\").click()\n+        self.driver.find_element(By.ID, \"email\").send_keys(\"user1@example.com\")\n+        self.driver.find_element(By.ID, \"password\").send_keys(\"1234\")\n+        self.driver.find_element(By.ID, \"name\").click()\n+        self.driver.find_element(By.ID, \"name\").send_keys(\"Hola\")\n+        self.driver.find_element(By.ID, \"surname\").send_keys(\"Juan\")\n+        self.driver.find_element(By.ID, \"email\").send_keys(\"holajuan@example.com\")\n+        self.driver.find_element(By.ID, \"password\").send_keys(\"holajuan\")\n+        self.driver.find_element(By.ID, \"submit\").click()"
      },
      {
        "sha": "b6db6d5b792584bf0b969029785f12d20350dd70",
        "filename": "app/modules/auth/tests/test_unit.py",
        "status": "added",
        "additions": 119,
        "deletions": 0,
        "changes": 119,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fauth%2Ftests%2Ftest_unit.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,119 @@\n+import pytest\n+from flask import url_for\n+\n+from app.modules.auth.services import AuthenticationService\n+from app.modules.auth.repositories import UserRepository\n+from app.modules.profile.repositories import UserProfileRepository\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        # Add HERE new elements to the database that you want to exist in the test context.\n+        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_login_success(test_client):\n+    response = test_client.post(\n+        \"/login\", data=dict(email=\"test@example.com\", password=\"test1234\"), follow_redirects=True\n+    )\n+\n+    assert response.request.path != url_for(\"auth.login\"), \"Login was unsuccessful\"\n+\n+    test_client.get(\"/logout\", follow_redirects=True)\n+\n+\n+def test_login_unsuccessful_bad_email(test_client):\n+    response = test_client.post(\n+        \"/login\", data=dict(email=\"bademail@example.com\", password=\"test1234\"), follow_redirects=True\n+    )\n+\n+    assert response.request.path == url_for(\"auth.login\"), \"Login was unsuccessful\"\n+\n+    test_client.get(\"/logout\", follow_redirects=True)\n+\n+\n+def test_login_unsuccessful_bad_password(test_client):\n+    response = test_client.post(\n+        \"/login\", data=dict(email=\"test@example.com\", password=\"basspassword\"), follow_redirects=True\n+    )\n+\n+    assert response.request.path == url_for(\"auth.login\"), \"Login was unsuccessful\"\n+\n+    test_client.get(\"/logout\", follow_redirects=True)\n+\n+\n+def test_signup_user_no_name(test_client):\n+    response = test_client.post(\n+        \"/signup\", data=dict(surname=\"Foo\", email=\"test@example.com\", password=\"test1234\"), follow_redirects=True\n+    )\n+    assert response.request.path == url_for(\"auth.show_signup_form\"), \"Signup was unsuccessful\"\n+    assert b\"This field is required\" in response.data, response.data\n+\n+\n+def test_signup_user_unsuccessful(test_client):\n+    email = \"test@example.com\"\n+    response = test_client.post(\n+        \"/signup\", data=dict(name=\"Test\", surname=\"Foo\", email=email, password=\"test1234\"), follow_redirects=True\n+    )\n+    assert response.request.path == url_for(\"auth.show_signup_form\"), \"Signup was unsuccessful\"\n+    assert f\"Email {email} in use\".encode(\"utf-8\") in response.data\n+\n+\n+def test_signup_user_successful(test_client):\n+    response = test_client.post(\n+        \"/signup\",\n+        data=dict(name=\"Foo\", surname=\"Example\", email=\"foo@example.com\", password=\"foo1234\"),\n+        follow_redirects=True,\n+    )\n+    assert response.request.path == url_for(\"public.index\"), \"Signup was unsuccessful\"\n+\n+\n+def test_service_create_with_profie_success(clean_database):\n+    data = {\n+        \"name\": \"Test\",\n+        \"surname\": \"Foo\",\n+        \"email\": \"service_test@example.com\",\n+        \"password\": \"test1234\"\n+    }\n+\n+    AuthenticationService().create_with_profile(**data)\n+\n+    assert UserRepository().count() == 1\n+    assert UserProfileRepository().count() == 1\n+\n+\n+def test_service_create_with_profile_fail_no_email(clean_database):\n+    data = {\n+        \"name\": \"Test\",\n+        \"surname\": \"Foo\",\n+        \"email\": \"\",\n+        \"password\": \"1234\"\n+    }\n+\n+    with pytest.raises(ValueError, match=\"Email is required.\"):\n+        AuthenticationService().create_with_profile(**data)\n+\n+    assert UserRepository().count() == 0\n+    assert UserProfileRepository().count() == 0\n+\n+\n+def test_service_create_with_profile_fail_no_password(clean_database):\n+    data = {\n+        \"name\": \"Test\",\n+        \"surname\": \"Foo\",\n+        \"email\": \"test@example.com\",\n+        \"password\": \"\"\n+    }\n+\n+    with pytest.raises(ValueError, match=\"Password is required.\"):\n+        AuthenticationService().create_with_profile(**data)\n+\n+    assert UserRepository().count() == 0\n+    assert UserProfileRepository().count() == 0"
      },
      {
        "sha": "b0e3ff37e8950786149bbae3645c33de6296f5f2",
        "filename": "app/modules/conftest.py",
        "status": "added",
        "additions": 84,
        "deletions": 0,
        "changes": 84,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fconftest.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fconftest.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fconftest.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,84 @@\n+import pytest\n+\n+from app import create_app, db\n+from app.modules.auth.models import User\n+\n+\n+@pytest.fixture(scope='session')\n+def test_app():\n+    \"\"\" Create and configure a new app instance for each test session. \"\"\"\n+    test_app = create_app('testing')\n+\n+    with test_app.app_context():\n+        # Imprimir los blueprints registrados\n+        print(\"TESTING SUITE (1): Blueprints registrados:\", test_app.blueprints)\n+        yield test_app\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_app):\n+\n+    with test_app.test_client() as testing_client:\n+        with test_app.app_context():\n+            print(\"TESTING SUITE (2): Blueprints registrados:\", test_app.blueprints)\n+\n+            db.drop_all()\n+            db.create_all()\n+            \"\"\"\n+            The test suite always includes the following user in order to avoid repetition\n+            of its creation\n+            \"\"\"\n+            user_test = User(email='test@example.com', password='test1234')\n+            db.session.add(user_test)\n+            db.session.commit()\n+\n+            print(\"Rutas registradas:\")\n+            for rule in test_app.url_map.iter_rules():\n+                print(rule)\n+            yield testing_client\n+\n+            db.session.remove()\n+            db.drop_all()\n+\n+\n+@pytest.fixture(scope='function')\n+def clean_database():\n+    db.session.remove()\n+    db.drop_all()\n+    db.create_all()\n+    yield\n+    db.session.remove()\n+    db.drop_all()\n+    db.create_all()\n+\n+\n+def login(test_client, email, password):\n+    \"\"\"\n+    Authenticates the user with the credentials provided.\n+\n+    Args:\n+        test_client: Flask test client.\n+        email (str): User's email address.\n+        password (str): User's password.\n+\n+    Returns:\n+        response: POST login request response.\n+    \"\"\"\n+    response = test_client.post('/login', data=dict(\n+        email=email,\n+        password=password\n+    ), follow_redirects=True)\n+    return response\n+\n+\n+def logout(test_client):\n+    \"\"\"\n+    Logs out the user.\n+\n+    Args:\n+        test_client: Flask test client.\n+\n+    Returns:\n+        response: Response to GET request to log out.\n+    \"\"\"\n+    return test_client.get('/logout', follow_redirects=True)"
      },
      {
        "sha": "c2e2d34047a68b910b8d0b20be08a98d58375d2c",
        "filename": "app/modules/dataset/__init__.py",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,10 @@\n+from flask_restful import Api\n+\n+from app.modules.dataset.api import init_blueprint_api\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+dataset_bp = BaseBlueprint('dataset', __name__, template_folder='templates')\n+\n+\n+api = Api(dataset_bp)\n+init_blueprint_api(api)"
      },
      {
        "sha": "03731f1d0bfa9cfc3e0c685f4e45dea469c066d9",
        "filename": "app/modules/dataset/api.py",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fapi.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fapi.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fapi.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,28 @@\n+from app.modules.dataset.models import DataSet\n+from core.resources.generic_resource import create_resource\n+from core.serialisers.serializer import Serializer\n+\n+file_fields = {\n+    'file_id': 'id',\n+    'file_name': 'name',\n+    'size': 'get_formatted_size'\n+}\n+file_serializer = Serializer(file_fields)\n+\n+dataset_fields = {\n+    'dataset_id': 'id',\n+    'created': 'created_at',\n+    'name': 'name',\n+    'doi': 'get_uvlhub_doi',\n+    'files': 'files'\n+}\n+\n+dataset_serializer = Serializer(dataset_fields, related_serializers={'files': file_serializer})\n+\n+DataSetResource = create_resource(DataSet, dataset_serializer)\n+\n+\n+def init_blueprint_api(api):\n+    \"\"\" Function to register resources with the provided Flask-RESTful Api instance. \"\"\"\n+    api.add_resource(DataSetResource, '/api/v1/datasets/', endpoint='datasets')\n+    api.add_resource(DataSetResource, '/api/v1/datasets/<int:id>', endpoint='dataset')"
      },
      {
        "sha": "ba83afe5135af2f30039acfc85aa95eb09d8ee4f",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "added",
        "additions": 239,
        "deletions": 0,
        "changes": 239,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,239 @@\n+var currentId = 0;\n+        var amount_authors = 0;\n+\n+        function show_upload_dataset() {\n+            document.getElementById(\"upload_dataset\").style.display = \"block\";\n+        }\n+\n+        function generateIncrementalId() {\n+            return currentId++;\n+        }\n+\n+        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n+            let fieldWrapper = document.createElement('div');\n+            fieldWrapper.className = className;\n+\n+            let label = document.createElement('label');\n+            label.className = 'form-label';\n+            label.for = name;\n+            label.textContent = text;\n+\n+            let field = document.createElement('input');\n+            field.name = name;\n+            field.className = 'form-control';\n+\n+            fieldWrapper.appendChild(label);\n+            fieldWrapper.appendChild(field);\n+            newAuthor.appendChild(fieldWrapper);\n+        }\n+\n+        function addRemoveButton(newAuthor) {\n+            let buttonWrapper = document.createElement('div');\n+            buttonWrapper.className = 'col-12 mb-2';\n+\n+            let button = document.createElement('button');\n+            button.textContent = 'Remove author';\n+            button.className = 'btn btn-danger btn-sm';\n+            button.type = 'button';\n+            button.addEventListener('click', function (event) {\n+                event.preventDefault();\n+                newAuthor.remove();\n+            });\n+\n+            buttonWrapper.appendChild(button);\n+            newAuthor.appendChild(buttonWrapper);\n+        }\n+\n+        function createAuthorBlock(idx, suffix) {\n+            let newAuthor = document.createElement('div');\n+            newAuthor.className = 'author row';\n+            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n+\n+            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n+            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n+            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n+            addRemoveButton(newAuthor);\n+\n+            return newAuthor;\n+        }\n+\n+        function check_title_and_description() {\n+            let titleInput = document.querySelector('input[name=\"title\"]');\n+            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n+\n+            titleInput.classList.remove(\"error\");\n+            descriptionTextarea.classList.remove(\"error\");\n+            clean_upload_errors();\n+\n+            let titleLength = titleInput.value.trim().length;\n+            let descriptionLength = descriptionTextarea.value.trim().length;\n+\n+            if (titleLength < 3) {\n+                write_upload_error(\"title must be of minimum length 3\");\n+                titleInput.classList.add(\"error\");\n+            }\n+\n+            if (descriptionLength < 3) {\n+                write_upload_error(\"description must be of minimum length 3\");\n+                descriptionTextarea.classList.add(\"error\");\n+            }\n+\n+            return (titleLength >= 3 && descriptionLength >= 3);\n+        }\n+\n+\n+        document.getElementById('add_author').addEventListener('click', function () {\n+            let authors = document.getElementById('authors');\n+            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n+            authors.appendChild(newAuthor);\n+        });\n+\n+\n+        document.addEventListener('click', function (event) {\n+            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n+\n+                let authorsButtonId = event.target.id;\n+                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n+                let authors = document.getElementById(authorsId);\n+                let id = authorsId.replace(\"_form_authors\", \"\")\n+                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n+                authors.appendChild(newAuthor);\n+\n+            }\n+        });\n+\n+        function show_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"none\";\n+            document.getElementById(\"loading\").style.display = \"block\";\n+        }\n+\n+        function hide_loading() {\n+            document.getElementById(\"upload_button\").style.display = \"block\";\n+            document.getElementById(\"loading\").style.display = \"none\";\n+        }\n+\n+        function clean_upload_errors() {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            upload_error.innerHTML = \"\";\n+            upload_error.style.display = 'none';\n+        }\n+\n+        function write_upload_error(error_message) {\n+            let upload_error = document.getElementById(\"upload_error\");\n+            let alert = document.createElement('p');\n+            alert.style.margin = '0';\n+            alert.style.padding = '0';\n+            alert.textContent = 'Upload error: ' + error_message;\n+            upload_error.appendChild(alert);\n+            upload_error.style.display = 'block';\n+        }\n+\n+        window.onload = function () {\n+\n+            test_zenodo_connection();\n+\n+            document.getElementById('upload_button').addEventListener('click', function () {\n+\n+                clean_upload_errors();\n+                show_loading();\n+\n+                // check title and description\n+                let check = check_title_and_description();\n+\n+                if (check) {\n+                    // process data form\n+                    const formData = {};\n+\n+                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                        const form = document.getElementById(formId);\n+                        const inputs = form.querySelectorAll('input, select, textarea');\n+                        inputs.forEach(input => {\n+                            if (input.name) {\n+                                formData[input.name] = formData[input.name] || [];\n+                                formData[input.name].push(input.value);\n+                            }\n+                        });\n+                    });\n+\n+                    let formDataJson = JSON.stringify(formData);\n+                    console.log(formDataJson);\n+\n+                    const csrfToken = document.getElementById('csrf_token').value;\n+                    const formUploadData = new FormData();\n+                    formUploadData.append('csrf_token', csrfToken);\n+\n+                    for (let key in formData) {\n+                        if (formData.hasOwnProperty(key)) {\n+                            formUploadData.set(key, formData[key]);\n+                        }\n+                    }\n+\n+                    let checked_orcid = true;\n+                    if (Array.isArray(formData.author_orcid)) {\n+                        for (let orcid of formData.author_orcid) {\n+                            orcid = orcid.trim();\n+                            if (orcid !== '' && !isValidOrcid(orcid)) {\n+                                hide_loading();\n+                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                                checked_orcid = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    let checked_name = true;\n+                    if (Array.isArray(formData.author_name)) {\n+                        for (let name of formData.author_name) {\n+                            name = name.trim();\n+                            if (name === '') {\n+                                hide_loading();\n+                                write_upload_error(\"The author's name cannot be empty\");\n+                                checked_name = false;\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n+\n+                    if (checked_orcid && checked_name) {\n+                        fetch('/dataset/upload', {\n+                            method: 'POST',\n+                            body: formUploadData\n+                        })\n+                            .then(response => {\n+                                if (response.ok) {\n+                                    console.log('Dataset sent successfully');\n+                                    response.json().then(data => {\n+                                        console.log(data.message);\n+                                        window.location.href = \"/dataset/list\";\n+                                    });\n+                                } else {\n+                                    response.json().then(data => {\n+                                        console.error('Error: ' + data.message);\n+                                        hide_loading();\n+\n+                                        write_upload_error(data.message);\n+\n+                                    });\n+                                }\n+                            })\n+                            .catch(error => {\n+                                console.error('Error in POST request:', error);\n+                            });\n+                    }\n+\n+\n+                } else {\n+                    hide_loading();\n+                }\n+\n+\n+            });\n+        };\n+\n+\n+        function isValidOrcid(orcid) {\n+            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+            return orcidRegex.test(orcid);\n+        }\n\\ No newline at end of file"
      },
      {
        "sha": "f72ad5199d0b0a1a573d704f2741ca6a67c1b8c2",
        "filename": "app/modules/dataset/forms.py",
        "status": "added",
        "additions": 96,
        "deletions": 0,
        "changes": 96,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fforms.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fforms.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fforms.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,96 @@\n+from flask_wtf import FlaskForm\n+from wtforms import StringField, SelectField, FieldList, FormField, SubmitField, TextAreaField\n+from wtforms.validators import DataRequired, URL, Optional\n+\n+from app.modules.dataset.models import PublicationType\n+\n+\n+class AuthorForm(FlaskForm):\n+    name = StringField(\"Name\", validators=[DataRequired()])\n+    affiliation = StringField(\"Affiliation\")\n+    orcid = StringField(\"ORCID\")\n+    gnd = StringField(\"GND\")\n+\n+    class Meta:\n+        csrf = False  # disable CSRF because is subform\n+\n+    def get_author(self):\n+        return {\n+            \"name\": self.name.data,\n+            \"affiliation\": self.affiliation.data,\n+            \"orcid\": self.orcid.data,\n+        }\n+\n+\n+class FeatureModelForm(FlaskForm):\n+    uvl_filename = StringField(\"UVL Filename\", validators=[DataRequired()])\n+    title = StringField(\"Title\", validators=[Optional()])\n+    desc = TextAreaField(\"Description\", validators=[Optional()])\n+    publication_type = SelectField(\n+        \"Publication type\",\n+        choices=[(pt.value, pt.name.replace(\"_\", \" \").title()) for pt in PublicationType],\n+        validators=[Optional()],\n+    )\n+    publication_doi = StringField(\"Publication DOI\", validators=[Optional(), URL()])\n+    tags = StringField(\"Tags (separated by commas)\")\n+    version = StringField(\"UVL Version\")\n+    authors = FieldList(FormField(AuthorForm))\n+\n+    class Meta:\n+        csrf = False  # disable CSRF because is subform\n+\n+    def get_authors(self):\n+        return [author.get_author() for author in self.authors]\n+\n+    def get_fmmetadata(self):\n+        return {\n+            \"uvl_filename\": self.uvl_filename.data,\n+            \"title\": self.title.data,\n+            \"description\": self.desc.data,\n+            \"publication_type\": self.publication_type.data,\n+            \"publication_doi\": self.publication_doi.data,\n+            \"tags\": self.tags.data,\n+            \"uvl_version\": self.version.data,\n+        }\n+\n+\n+class DataSetForm(FlaskForm):\n+    title = StringField(\"Title\", validators=[DataRequired()])\n+    desc = TextAreaField(\"Description\", validators=[DataRequired()])\n+    publication_type = SelectField(\n+        \"Publication type\",\n+        choices=[(pt.value, pt.name.replace(\"_\", \" \").title()) for pt in PublicationType],\n+        validators=[DataRequired()],\n+    )\n+    publication_doi = StringField(\"Publication DOI\", validators=[Optional(), URL()])\n+    dataset_doi = StringField(\"Dataset DOI\", validators=[Optional(), URL()])\n+    tags = StringField(\"Tags (separated by commas)\")\n+    authors = FieldList(FormField(AuthorForm))\n+    feature_models = FieldList(FormField(FeatureModelForm), min_entries=1)\n+\n+    submit = SubmitField(\"Submit\")\n+\n+    def get_dsmetadata(self):\n+\n+        publication_type_converted = self.convert_publication_type(self.publication_type.data)\n+\n+        return {\n+            \"title\": self.title.data,\n+            \"description\": self.desc.data,\n+            \"publication_type\": publication_type_converted,\n+            \"publication_doi\": self.publication_doi.data,\n+            \"dataset_doi\": self.dataset_doi.data,\n+            \"tags\": self.tags.data,\n+        }\n+\n+    def convert_publication_type(self, value):\n+        for pt in PublicationType:\n+            if pt.value == value:\n+                return pt.name\n+        return \"NONE\"\n+\n+    def get_authors(self):\n+        return [author.get_author() for author in self.authors]\n+\n+    def get_feature_models(self):\n+        return [fm.get_feature_model() for fm in self.feature_models]"
      },
      {
        "sha": "222ca3617274219768bca1be310b9996bf2c8934",
        "filename": "app/modules/dataset/models.py",
        "status": "added",
        "additions": 166,
        "deletions": 0,
        "changes": 166,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fmodels.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,166 @@\n+from datetime import datetime\n+from enum import Enum\n+\n+from flask import request\n+from sqlalchemy import Enum as SQLAlchemyEnum\n+\n+from app import db\n+\n+\n+class PublicationType(Enum):\n+    NONE = 'none'\n+    ANNOTATION_COLLECTION = 'annotationcollection'\n+    BOOK = 'book'\n+    BOOK_SECTION = 'section'\n+    CONFERENCE_PAPER = 'conferencepaper'\n+    DATA_MANAGEMENT_PLAN = 'datamanagementplan'\n+    JOURNAL_ARTICLE = 'article'\n+    PATENT = 'patent'\n+    PREPRINT = 'preprint'\n+    PROJECT_DELIVERABLE = 'deliverable'\n+    PROJECT_MILESTONE = 'milestone'\n+    PROPOSAL = 'proposal'\n+    REPORT = 'report'\n+    SOFTWARE_DOCUMENTATION = 'softwaredocumentation'\n+    TAXONOMIC_TREATMENT = 'taxonomictreatment'\n+    TECHNICAL_NOTE = 'technicalnote'\n+    THESIS = 'thesis'\n+    WORKING_PAPER = 'workingpaper'\n+    OTHER = 'other'\n+\n+\n+class Author(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    name = db.Column(db.String(120), nullable=False)\n+    affiliation = db.Column(db.String(120))\n+    orcid = db.Column(db.String(120))\n+    ds_meta_data_id = db.Column(db.Integer, db.ForeignKey('ds_meta_data.id'))\n+    fm_meta_data_id = db.Column(db.Integer, db.ForeignKey('fm_meta_data.id'))\n+\n+    def to_dict(self):\n+        return {\n+            'name': self.name,\n+            'affiliation': self.affiliation,\n+            'orcid': self.orcid\n+        }\n+\n+\n+class DSMetrics(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    number_of_models = db.Column(db.String(120))\n+    number_of_features = db.Column(db.String(120))\n+\n+    def __repr__(self):\n+        return f'DSMetrics<models={self.number_of_models}, features={self.number_of_features}>'\n+\n+\n+class DSMetaData(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    deposition_id = db.Column(db.Integer)\n+    title = db.Column(db.String(120), nullable=False)\n+    description = db.Column(db.Text, nullable=False)\n+    publication_type = db.Column(SQLAlchemyEnum(PublicationType), nullable=False)\n+    publication_doi = db.Column(db.String(120))\n+    dataset_doi = db.Column(db.String(120))\n+    tags = db.Column(db.String(120))\n+    ds_metrics_id = db.Column(db.Integer, db.ForeignKey('ds_metrics.id'))\n+    ds_metrics = db.relationship('DSMetrics', uselist=False, backref='ds_meta_data', cascade=\"all, delete\")\n+    authors = db.relationship('Author', backref='ds_meta_data', lazy=True, cascade=\"all, delete\")\n+\n+\n+class DataSet(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)\n+\n+    ds_meta_data_id = db.Column(db.Integer, db.ForeignKey('ds_meta_data.id'), nullable=False)\n+    created_at = db.Column(db.DateTime, nullable=False, default=datetime.utcnow)\n+\n+    ds_meta_data = db.relationship('DSMetaData', backref=db.backref('data_set', uselist=False))\n+    feature_models = db.relationship('FeatureModel', backref='data_set', lazy=True, cascade=\"all, delete\")\n+\n+    def name(self):\n+        return self.ds_meta_data.title\n+\n+    def files(self):\n+        return [file for fm in self.feature_models for file in fm.files]\n+\n+    def delete(self):\n+        db.session.delete(self)\n+        db.session.commit()\n+\n+    def get_cleaned_publication_type(self):\n+        return self.ds_meta_data.publication_type.name.replace('_', ' ').title()\n+\n+    def get_zenodo_url(self):\n+        return f'https://zenodo.org/record/{self.ds_meta_data.deposition_id}' if self.ds_meta_data.dataset_doi else None\n+\n+    def get_files_count(self):\n+        return sum(len(fm.files) for fm in self.feature_models)\n+\n+    def get_file_total_size(self):\n+        return sum(file.size for fm in self.feature_models for file in fm.files)\n+\n+    def get_file_total_size_for_human(self):\n+        from app.modules.dataset.services import SizeService\n+        return SizeService().get_human_readable_size(self.get_file_total_size())\n+\n+    def get_uvlhub_doi(self):\n+        from app.modules.dataset.services import DataSetService\n+        return DataSetService().get_uvlhub_doi(self)\n+\n+    def to_dict(self):\n+        return {\n+            'title': self.ds_meta_data.title,\n+            'id': self.id,\n+            'created_at': self.created_at,\n+            'created_at_timestamp': int(self.created_at.timestamp()),\n+            'description': self.ds_meta_data.description,\n+            'authors': [author.to_dict() for author in self.ds_meta_data.authors],\n+            'publication_type': self.get_cleaned_publication_type(),\n+            'publication_doi': self.ds_meta_data.publication_doi,\n+            'dataset_doi': self.ds_meta_data.dataset_doi,\n+            'tags': self.ds_meta_data.tags.split(\",\") if self.ds_meta_data.tags else [],\n+            'url': self.get_uvlhub_doi(),\n+            'download': f'{request.host_url.rstrip(\"/\")}/dataset/download/{self.id}',\n+            'zenodo': self.get_zenodo_url(),\n+            'files': [file.to_dict() for fm in self.feature_models for file in fm.files],\n+            'files_count': self.get_files_count(),\n+            'total_size_in_bytes': self.get_file_total_size(),\n+            'total_size_in_human_format': self.get_file_total_size_for_human(),\n+        }\n+\n+    def __repr__(self):\n+        return f'DataSet<{self.id}>'\n+\n+\n+class DSDownloadRecord(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=True)\n+    dataset_id = db.Column(db.Integer, db.ForeignKey('data_set.id'))\n+    download_date = db.Column(db.DateTime, nullable=False, default=datetime.utcnow)\n+    download_cookie = db.Column(db.String(36), nullable=False)  # Assuming UUID4 strings\n+\n+    def __repr__(self):\n+        return (\n+            f'<Download id={self.id} '\n+            f'dataset_id={self.dataset_id} '\n+            f'date={self.download_date} '\n+            f'cookie={self.download_cookie}>'\n+        )\n+\n+\n+class DSViewRecord(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=True)\n+    dataset_id = db.Column(db.Integer, db.ForeignKey('data_set.id'))\n+    view_date = db.Column(db.DateTime, nullable=False, default=datetime.utcnow)\n+    view_cookie = db.Column(db.String(36), nullable=False)  # Assuming UUID4 strings\n+\n+    def __repr__(self):\n+        return f'<View id={self.id} dataset_id={self.dataset_id} date={self.view_date} cookie={self.view_cookie}>'\n+\n+\n+class DOIMapping(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    dataset_doi_old = db.Column(db.String(120))\n+    dataset_doi_new = db.Column(db.String(120))"
      },
      {
        "sha": "50ee7082a653d42f6b5de9e9b3e7aca32574ca24",
        "filename": "app/modules/dataset/repositories.py",
        "status": "added",
        "additions": 123,
        "deletions": 0,
        "changes": 123,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,123 @@\n+from datetime import datetime, timezone\n+import logging\n+from flask_login import current_user\n+from typing import Optional\n+\n+from sqlalchemy import desc, func\n+\n+from app.modules.dataset.models import (\n+    Author,\n+    DOIMapping,\n+    DSDownloadRecord,\n+    DSMetaData,\n+    DSViewRecord,\n+    DataSet\n+)\n+from core.repositories.BaseRepository import BaseRepository\n+\n+logger = logging.getLogger(__name__)\n+\n+\n+class AuthorRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(Author)\n+\n+\n+class DSDownloadRecordRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(DSDownloadRecord)\n+\n+    def total_dataset_downloads(self) -> int:\n+        max_id = self.model.query.with_entities(func.max(self.model.id)).scalar()\n+        return max_id if max_id is not None else 0\n+\n+\n+class DSMetaDataRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(DSMetaData)\n+\n+    def filter_by_doi(self, doi: str) -> Optional[DSMetaData]:\n+        return self.model.query.filter_by(dataset_doi=doi).first()\n+\n+\n+class DSViewRecordRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(DSViewRecord)\n+\n+    def total_dataset_views(self) -> int:\n+        max_id = self.model.query.with_entities(func.max(self.model.id)).scalar()\n+        return max_id if max_id is not None else 0\n+\n+    def the_record_exists(self, dataset: DataSet, user_cookie: str):\n+        return self.model.query.filter_by(\n+            user_id=current_user.id if current_user.is_authenticated else None,\n+            dataset_id=dataset.id,\n+            view_cookie=user_cookie\n+        ).first()\n+\n+    def create_new_record(self, dataset: DataSet, user_cookie: str) -> DSViewRecord:\n+        return self.create(\n+                user_id=current_user.id if current_user.is_authenticated else None,\n+                dataset_id=dataset.id,\n+                view_date=datetime.now(timezone.utc),\n+                view_cookie=user_cookie,\n+            )\n+\n+\n+class DataSetRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(DataSet)\n+\n+    def get_synchronized(self, current_user_id: int) -> DataSet:\n+        return (\n+            self.model.query.join(DSMetaData)\n+            .filter(DataSet.user_id == current_user_id, DSMetaData.dataset_doi.isnot(None))\n+            .order_by(self.model.created_at.desc())\n+            .all()\n+        )\n+\n+    def get_unsynchronized(self, current_user_id: int) -> DataSet:\n+        return (\n+            self.model.query.join(DSMetaData)\n+            .filter(DataSet.user_id == current_user_id, DSMetaData.dataset_doi.is_(None))\n+            .order_by(self.model.created_at.desc())\n+            .all()\n+        )\n+\n+    def get_unsynchronized_dataset(self, current_user_id: int, dataset_id: int) -> DataSet:\n+        return (\n+            self.model.query.join(DSMetaData)\n+            .filter(DataSet.user_id == current_user_id, DataSet.id == dataset_id, DSMetaData.dataset_doi.is_(None))\n+            .first()\n+        )\n+\n+    def count_synchronized_datasets(self):\n+        return (\n+            self.model.query.join(DSMetaData)\n+            .filter(DSMetaData.dataset_doi.isnot(None))\n+            .count()\n+        )\n+\n+    def count_unsynchronized_datasets(self):\n+        return (\n+            self.model.query.join(DSMetaData)\n+            .filter(DSMetaData.dataset_doi.is_(None))\n+            .count()\n+        )\n+\n+    def latest_synchronized(self):\n+        return (\n+            self.model.query.join(DSMetaData)\n+            .filter(DSMetaData.dataset_doi.isnot(None))\n+            .order_by(desc(self.model.id))\n+            .limit(5)\n+            .all()\n+        )\n+\n+\n+class DOIMappingRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(DOIMapping)\n+\n+    def get_new_doi(self, old_doi: str) -> str:\n+        return self.model.query.filter_by(dataset_doi_old=old_doi).first()"
      },
      {
        "sha": "77a61b06c31d91d9b7b950d7e1efbd434baf742c",
        "filename": "app/modules/dataset/routes.py",
        "status": "added",
        "additions": 280,
        "deletions": 0,
        "changes": 280,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,280 @@\n+import logging\n+import os\n+import json\n+import shutil\n+import tempfile\n+import uuid\n+from datetime import datetime, timezone\n+from zipfile import ZipFile\n+\n+from flask import (\n+    redirect,\n+    render_template,\n+    request,\n+    jsonify,\n+    send_from_directory,\n+    make_response,\n+    abort,\n+    url_for,\n+)\n+from flask_login import login_required, current_user\n+\n+from app.modules.dataset.forms import DataSetForm\n+from app.modules.dataset.models import (\n+    DSDownloadRecord\n+)\n+from app.modules.dataset import dataset_bp\n+from app.modules.dataset.services import (\n+    AuthorService,\n+    DSDownloadRecordService,\n+    DSMetaDataService,\n+    DSViewRecordService,\n+    DataSetService,\n+    DOIMappingService\n+)\n+from app.modules.zenodo.services import ZenodoService\n+\n+logger = logging.getLogger(__name__)\n+\n+\n+dataset_service = DataSetService()\n+author_service = AuthorService()\n+dsmetadata_service = DSMetaDataService()\n+zenodo_service = ZenodoService()\n+doi_mapping_service = DOIMappingService()\n+ds_view_record_service = DSViewRecordService()\n+\n+\n+@dataset_bp.route(\"/dataset/upload\", methods=[\"GET\", \"POST\"])\n+@login_required\n+def create_dataset():\n+    form = DataSetForm()\n+    if request.method == \"POST\":\n+\n+        dataset = None\n+\n+        if not form.validate_on_submit():\n+            return jsonify({\"message\": form.errors}), 400\n+\n+        try:\n+            logger.info(\"Creating dataset...\")\n+            dataset = dataset_service.create_from_form(form=form, current_user=current_user)\n+            logger.info(f\"Created dataset: {dataset}\")\n+            dataset_service.move_feature_models(dataset)\n+        except Exception as exc:\n+            logger.exception(f\"Exception while create dataset data in local {exc}\")\n+            return jsonify({\"Exception while create dataset data in local: \": str(exc)}), 400\n+\n+        # send dataset as deposition to Zenodo\n+        data = {}\n+        try:\n+            zenodo_response_json = zenodo_service.create_new_deposition(dataset)\n+            response_data = json.dumps(zenodo_response_json)\n+            data = json.loads(response_data)\n+        except Exception as exc:\n+            data = {}\n+            zenodo_response_json = {}\n+            logger.exception(f\"Exception while create dataset data in Zenodo {exc}\")\n+\n+        if data.get(\"conceptrecid\"):\n+            deposition_id = data.get(\"id\")\n+\n+            # update dataset with deposition id in Zenodo\n+            dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n+\n+            try:\n+                # iterate for each feature model (one feature model = one request to Zenodo)\n+                for feature_model in dataset.feature_models:\n+                    zenodo_service.upload_file(dataset, deposition_id, feature_model)\n+\n+                # publish deposition\n+                zenodo_service.publish_deposition(deposition_id)\n+\n+                # update DOI\n+                deposition_doi = zenodo_service.get_doi(deposition_id)\n+                dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n+            except Exception as e:\n+                msg = f\"it has not been possible upload feature models in Zenodo and update the DOI: {e}\"\n+                return jsonify({\"message\": msg}), 200\n+\n+        # Delete temp folder\n+        file_path = current_user.temp_folder()\n+        if os.path.exists(file_path) and os.path.isdir(file_path):\n+            shutil.rmtree(file_path)\n+\n+        msg = \"Everything works!\"\n+        return jsonify({\"message\": msg}), 200\n+\n+    return render_template(\"dataset/upload_dataset.html\", form=form)\n+\n+\n+@dataset_bp.route(\"/dataset/list\", methods=[\"GET\", \"POST\"])\n+@login_required\n+def list_dataset():\n+    return render_template(\n+        \"dataset/list_datasets.html\",\n+        datasets=dataset_service.get_synchronized(current_user.id),\n+        local_datasets=dataset_service.get_unsynchronized(current_user.id),\n+    )\n+\n+\n+@dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n+@login_required\n+def upload():\n+    file = request.files[\"file\"]\n+    temp_folder = current_user.temp_folder()\n+\n+    if not file or not file.filename.endswith(\".uvl\"):\n+        return jsonify({\"message\": \"No valid file\"}), 400\n+\n+    # create temp folder\n+    if not os.path.exists(temp_folder):\n+        os.makedirs(temp_folder)\n+\n+    file_path = os.path.join(temp_folder, file.filename)\n+\n+    if os.path.exists(file_path):\n+        # Generate unique filename (by recursion)\n+        base_name, extension = os.path.splitext(file.filename)\n+        i = 1\n+        while os.path.exists(\n+            os.path.join(temp_folder, f\"{base_name} ({i}){extension}\")\n+        ):\n+            i += 1\n+        new_filename = f\"{base_name} ({i}){extension}\"\n+        file_path = os.path.join(temp_folder, new_filename)\n+    else:\n+        new_filename = file.filename\n+\n+    try:\n+        file.save(file_path)\n+    except Exception as e:\n+        return jsonify({\"message\": str(e)}), 500\n+\n+    return (\n+        jsonify(\n+            {\n+                \"message\": \"UVL uploaded and validated successfully\",\n+                \"filename\": new_filename,\n+            }\n+        ),\n+        200,\n+    )\n+\n+\n+@dataset_bp.route(\"/dataset/file/delete\", methods=[\"POST\"])\n+def delete():\n+    data = request.get_json()\n+    filename = data.get(\"file\")\n+    temp_folder = current_user.temp_folder()\n+    filepath = os.path.join(temp_folder, filename)\n+\n+    if os.path.exists(filepath):\n+        os.remove(filepath)\n+        return jsonify({\"message\": \"File deleted successfully\"})\n+\n+    return jsonify({\"error\": \"Error: File not found\"})\n+\n+\n+@dataset_bp.route(\"/dataset/download/<int:dataset_id>\", methods=[\"GET\"])\n+def download_dataset(dataset_id):\n+    dataset = dataset_service.get_or_404(dataset_id)\n+\n+    file_path = f\"uploads/user_{dataset.user_id}/dataset_{dataset.id}/\"\n+\n+    temp_dir = tempfile.mkdtemp()\n+    zip_path = os.path.join(temp_dir, f\"dataset_{dataset_id}.zip\")\n+\n+    with ZipFile(zip_path, \"w\") as zipf:\n+        for subdir, dirs, files in os.walk(file_path):\n+            for file in files:\n+                full_path = os.path.join(subdir, file)\n+\n+                relative_path = os.path.relpath(full_path, file_path)\n+\n+                zipf.write(\n+                    full_path,\n+                    arcname=os.path.join(\n+                        os.path.basename(zip_path[:-4]), relative_path\n+                    ),\n+                )\n+\n+    user_cookie = request.cookies.get(\"download_cookie\")\n+    if not user_cookie:\n+        user_cookie = str(\n+            uuid.uuid4()\n+        )  # Generate a new unique identifier if it does not exist\n+        # Save the cookie to the user's browser\n+        resp = make_response(\n+            send_from_directory(\n+                temp_dir,\n+                f\"dataset_{dataset_id}.zip\",\n+                as_attachment=True,\n+                mimetype=\"application/zip\",\n+            )\n+        )\n+        resp.set_cookie(\"download_cookie\", user_cookie)\n+    else:\n+        resp = send_from_directory(\n+            temp_dir,\n+            f\"dataset_{dataset_id}.zip\",\n+            as_attachment=True,\n+            mimetype=\"application/zip\",\n+        )\n+\n+    # Check if the download record already exists for this cookie\n+    existing_record = DSDownloadRecord.query.filter_by(\n+        user_id=current_user.id if current_user.is_authenticated else None,\n+        dataset_id=dataset_id,\n+        download_cookie=user_cookie\n+    ).first()\n+\n+    if not existing_record:\n+        # Record the download in your database\n+        DSDownloadRecordService().create(\n+            user_id=current_user.id if current_user.is_authenticated else None,\n+            dataset_id=dataset_id,\n+            download_date=datetime.now(timezone.utc),\n+            download_cookie=user_cookie,\n+        )\n+\n+    return resp\n+\n+\n+@dataset_bp.route(\"/doi/<path:doi>/\", methods=[\"GET\"])\n+def subdomain_index(doi):\n+\n+    # Check if the DOI is an old DOI\n+    new_doi = doi_mapping_service.get_new_doi(doi)\n+    if new_doi:\n+        # Redirect to the same path with the new DOI\n+        return redirect(url_for('dataset.subdomain_index', doi=new_doi), code=302)\n+\n+    # Try to search the dataset by the provided DOI (which should already be the new one)\n+    ds_meta_data = dsmetadata_service.filter_by_doi(doi)\n+\n+    if not ds_meta_data:\n+        abort(404)\n+\n+    # Get dataset\n+    dataset = ds_meta_data.data_set\n+\n+    # Save the cookie to the user's browser\n+    user_cookie = ds_view_record_service.create_cookie(dataset=dataset)\n+    resp = make_response(render_template(\"dataset/view_dataset.html\", dataset=dataset))\n+    resp.set_cookie(\"view_cookie\", user_cookie)\n+\n+    return resp\n+\n+\n+@dataset_bp.route(\"/dataset/unsynchronized/<int:dataset_id>/\", methods=[\"GET\"])\n+@login_required\n+def get_unsynchronized_dataset(dataset_id):\n+\n+    # Get dataset\n+    dataset = dataset_service.get_unsynchronized_dataset(current_user.id, dataset_id)\n+\n+    if not dataset:\n+        abort(404)\n+\n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset)"
      },
      {
        "sha": "5f6d7b69d060d42c0675b11580a8d0e0184c0d96",
        "filename": "app/modules/dataset/seeders.py",
        "status": "added",
        "additions": 124,
        "deletions": 0,
        "changes": 124,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fseeders.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fseeders.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,124 @@\n+import os\n+import shutil\n+from app.modules.auth.models import User\n+from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from app.modules.hubfile.models import Hubfile\n+from core.seeders.BaseSeeder import BaseSeeder\n+from app.modules.dataset.models import (\n+    DataSet,\n+    DSMetaData,\n+    PublicationType,\n+    DSMetrics,\n+    Author)\n+from datetime import datetime, timezone\n+from dotenv import load_dotenv\n+\n+\n+class DataSetSeeder(BaseSeeder):\n+\n+    priority = 2  # Lower priority\n+\n+    def run(self):\n+        # Retrieve users\n+        user1 = User.query.filter_by(email='user1@example.com').first()\n+        user2 = User.query.filter_by(email='user2@example.com').first()\n+\n+        if not user1 or not user2:\n+            raise Exception(\"Users not found. Please seed users first.\")\n+\n+        # Create DSMetrics instance\n+        ds_metrics = DSMetrics(number_of_models='5', number_of_features='50')\n+        seeded_ds_metrics = self.seed([ds_metrics])[0]\n+\n+        # Create DSMetaData instances\n+        ds_meta_data_list = [\n+            DSMetaData(\n+                deposition_id=1 + i,\n+                title=f'Sample dataset {i+1}',\n+                description=f'Description for dataset {i+1}',\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n+                publication_doi=f'10.1234/dataset{i+1}',\n+                dataset_doi=f'10.1234/dataset{i+1}',\n+                tags='tag1, tag2',\n+                ds_metrics_id=seeded_ds_metrics.id\n+            ) for i in range(4)\n+        ]\n+        seeded_ds_meta_data = self.seed(ds_meta_data_list)\n+\n+        # Create Author instances and associate with DSMetaData\n+        authors = [\n+            Author(\n+                name=f'Author {i+1}',\n+                affiliation=f'Affiliation {i+1}',\n+                orcid=f'0000-0000-0000-000{i}',\n+                ds_meta_data_id=seeded_ds_meta_data[i % 4].id\n+            ) for i in range(4)\n+        ]\n+        self.seed(authors)\n+\n+        # Create DataSet instances\n+        datasets = [\n+            DataSet(\n+                user_id=user1.id if i % 2 == 0 else user2.id,\n+                ds_meta_data_id=seeded_ds_meta_data[i].id,\n+                created_at=datetime.now(timezone.utc)\n+            ) for i in range(4)\n+        ]\n+        seeded_datasets = self.seed(datasets)\n+\n+        # Assume there are 12 UVL files, create corresponding FMMetaData and FeatureModel\n+        fm_meta_data_list = [\n+            FMMetaData(\n+                uvl_filename=f'file{i+1}.uvl',\n+                title=f'Feature Model {i+1}',\n+                description=f'Description for feature model {i+1}',\n+                publication_type=PublicationType.SOFTWARE_DOCUMENTATION,\n+                publication_doi=f'10.1234/fm{i+1}',\n+                tags='tag1, tag2',\n+                uvl_version='1.0'\n+            ) for i in range(12)\n+        ]\n+        seeded_fm_meta_data = self.seed(fm_meta_data_list)\n+\n+        # Create Author instances and associate with FMMetaData\n+        fm_authors = [\n+            Author(\n+                name=f'Author {i+5}',\n+                affiliation=f'Affiliation {i+5}',\n+                orcid=f'0000-0000-0000-000{i+5}',\n+                fm_meta_data_id=seeded_fm_meta_data[i].id\n+            ) for i in range(12)\n+        ]\n+        self.seed(fm_authors)\n+\n+        feature_models = [\n+            FeatureModel(\n+                data_set_id=seeded_datasets[i // 3].id,\n+                fm_meta_data_id=seeded_fm_meta_data[i].id\n+            ) for i in range(12)\n+        ]\n+        seeded_feature_models = self.seed(feature_models)\n+\n+        # Create files, associate them with FeatureModels and copy files\n+        load_dotenv()\n+        working_dir = os.getenv('WORKING_DIR', '')\n+        src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n+        for i in range(12):\n+            file_name = f'file{i+1}.uvl'\n+            feature_model = seeded_feature_models[i]\n+            dataset = next(ds for ds in seeded_datasets if ds.id == feature_model.data_set_id)\n+            user_id = dataset.user_id\n+\n+            dest_folder = os.path.join(working_dir, 'uploads', f'user_{user_id}', f'dataset_{dataset.id}')\n+            os.makedirs(dest_folder, exist_ok=True)\n+            shutil.copy(os.path.join(src_folder, file_name), dest_folder)\n+\n+            file_path = os.path.join(dest_folder, file_name)\n+\n+            uvl_file = Hubfile(\n+                name=file_name,\n+                checksum=f'checksum{i+1}',\n+                size=os.path.getsize(file_path),\n+                feature_model_id=feature_model.id\n+            )\n+            self.seed([uvl_file])"
      },
      {
        "sha": "b3ca798783c890a4dcef011fb5f0be4c69d273c8",
        "filename": "app/modules/dataset/services.py",
        "status": "added",
        "additions": 214,
        "deletions": 0,
        "changes": 214,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fservices.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,214 @@\n+import logging\n+import os\n+import hashlib\n+import shutil\n+from typing import Optional\n+import uuid\n+\n+from flask import request\n+\n+from app.modules.auth.services import AuthenticationService\n+from app.modules.dataset.models import DSViewRecord, DataSet, DSMetaData\n+from app.modules.dataset.repositories import (\n+    AuthorRepository,\n+    DOIMappingRepository,\n+    DSDownloadRecordRepository,\n+    DSMetaDataRepository,\n+    DSViewRecordRepository,\n+    DataSetRepository\n+)\n+from app.modules.featuremodel.repositories import FMMetaDataRepository, FeatureModelRepository\n+from app.modules.hubfile.repositories import (\n+    HubfileDownloadRecordRepository,\n+    HubfileRepository,\n+    HubfileViewRecordRepository\n+)\n+from core.services.BaseService import BaseService\n+\n+logger = logging.getLogger(__name__)\n+\n+\n+def calculate_checksum_and_size(file_path):\n+    file_size = os.path.getsize(file_path)\n+    with open(file_path, \"rb\") as file:\n+        content = file.read()\n+        hash_md5 = hashlib.md5(content).hexdigest()\n+        return hash_md5, file_size\n+\n+\n+class DataSetService(BaseService):\n+    def __init__(self):\n+        super().__init__(DataSetRepository())\n+        self.feature_model_repository = FeatureModelRepository()\n+        self.author_repository = AuthorRepository()\n+        self.dsmetadata_repository = DSMetaDataRepository()\n+        self.fmmetadata_repository = FMMetaDataRepository()\n+        self.dsdownloadrecord_repository = DSDownloadRecordRepository()\n+        self.hubfiledownloadrecord_repository = HubfileDownloadRecordRepository()\n+        self.hubfilerepository = HubfileRepository()\n+        self.dsviewrecord_repostory = DSViewRecordRepository()\n+        self.hubfileviewrecord_repository = HubfileViewRecordRepository()\n+\n+    def move_feature_models(self, dataset: DataSet):\n+        current_user = AuthenticationService().get_authenticated_user()\n+        source_dir = current_user.temp_folder()\n+\n+        working_dir = os.getenv(\"WORKING_DIR\", \"\")\n+        dest_dir = os.path.join(working_dir, \"uploads\", f\"user_{current_user.id}\", f\"dataset_{dataset.id}\")\n+\n+        os.makedirs(dest_dir, exist_ok=True)\n+\n+        for feature_model in dataset.feature_models:\n+            uvl_filename = feature_model.fm_meta_data.uvl_filename\n+            shutil.move(os.path.join(source_dir, uvl_filename), dest_dir)\n+\n+    def get_synchronized(self, current_user_id: int) -> DataSet:\n+        return self.repository.get_synchronized(current_user_id)\n+\n+    def get_unsynchronized(self, current_user_id: int) -> DataSet:\n+        return self.repository.get_unsynchronized(current_user_id)\n+\n+    def get_unsynchronized_dataset(self, current_user_id: int, dataset_id: int) -> DataSet:\n+        return self.repository.get_unsynchronized_dataset(current_user_id, dataset_id)\n+\n+    def latest_synchronized(self):\n+        return self.repository.latest_synchronized()\n+\n+    def count_synchronized_datasets(self):\n+        return self.repository.count_synchronized_datasets()\n+\n+    def count_feature_models(self):\n+        return self.feature_model_service.count_feature_models()\n+\n+    def count_authors(self) -> int:\n+        return self.author_repository.count()\n+\n+    def count_dsmetadata(self) -> int:\n+        return self.dsmetadata_repository.count()\n+\n+    def total_dataset_downloads(self) -> int:\n+        return self.dsdownloadrecord_repository.total_dataset_downloads()\n+\n+    def total_dataset_views(self) -> int:\n+        return self.dsviewrecord_repostory.total_dataset_views()\n+\n+    def create_from_form(self, form, current_user) -> DataSet:\n+        main_author = {\n+            \"name\": f\"{current_user.profile.surname}, {current_user.profile.name}\",\n+            \"affiliation\": current_user.profile.affiliation,\n+            \"orcid\": current_user.profile.orcid,\n+        }\n+        try:\n+            logger.info(f\"Creating dsmetadata...: {form.get_dsmetadata()}\")\n+            dsmetadata = self.dsmetadata_repository.create(**form.get_dsmetadata())\n+            for author_data in [main_author] + form.get_authors():\n+                author = self.author_repository.create(commit=False, ds_meta_data_id=dsmetadata.id, **author_data)\n+                dsmetadata.authors.append(author)\n+\n+            dataset = self.create(commit=False, user_id=current_user.id, ds_meta_data_id=dsmetadata.id)\n+\n+            for feature_model in form.feature_models:\n+                uvl_filename = feature_model.uvl_filename.data\n+                fmmetadata = self.fmmetadata_repository.create(commit=False, **feature_model.get_fmmetadata())\n+                for author_data in feature_model.get_authors():\n+                    author = self.author_repository.create(commit=False, fm_meta_data_id=fmmetadata.id, **author_data)\n+                    fmmetadata.authors.append(author)\n+\n+                fm = self.feature_model_repository.create(\n+                    commit=False, data_set_id=dataset.id, fm_meta_data_id=fmmetadata.id\n+                )\n+\n+                # associated files in feature model\n+                file_path = os.path.join(current_user.temp_folder(), uvl_filename)\n+                checksum, size = calculate_checksum_and_size(file_path)\n+\n+                file = self.hubfilerepository.create(\n+                    commit=False, name=uvl_filename, checksum=checksum, size=size, feature_model_id=fm.id\n+                )\n+                fm.files.append(file)\n+            self.repository.session.commit()\n+        except Exception as exc:\n+            logger.info(f\"Exception creating dataset from form...: {exc}\")\n+            self.repository.session.rollback()\n+            raise exc\n+        return dataset\n+\n+    def update_dsmetadata(self, id, **kwargs):\n+        return self.dsmetadata_repository.update(id, **kwargs)\n+\n+    def get_uvlhub_doi(self, dataset: DataSet) -> str:\n+        domain = os.getenv('DOMAIN', 'localhost')\n+        return f'http://{domain}/doi/{dataset.ds_meta_data.dataset_doi}'\n+\n+\n+class AuthorService(BaseService):\n+    def __init__(self):\n+        super().__init__(AuthorRepository())\n+\n+\n+class DSDownloadRecordService(BaseService):\n+    def __init__(self):\n+        super().__init__(DSDownloadRecordRepository())\n+\n+\n+class DSMetaDataService(BaseService):\n+    def __init__(self):\n+        super().__init__(DSMetaDataRepository())\n+\n+    def update(self, id, **kwargs):\n+        return self.repository.update(id, **kwargs)\n+\n+    def filter_by_doi(self, doi: str) -> Optional[DSMetaData]:\n+        return self.repository.filter_by_doi(doi)\n+\n+\n+class DSViewRecordService(BaseService):\n+    def __init__(self):\n+        super().__init__(DSViewRecordRepository())\n+\n+    def the_record_exists(self, dataset: DataSet, user_cookie: str):\n+        return self.repository.the_record_exists(dataset, user_cookie)\n+\n+    def create_new_record(self, dataset: DataSet,  user_cookie: str) -> DSViewRecord:\n+        return self.repository.create_new_record(dataset, user_cookie)\n+\n+    def create_cookie(self, dataset: DataSet) -> str:\n+\n+        user_cookie = request.cookies.get(\"view_cookie\")\n+        if not user_cookie:\n+            user_cookie = str(uuid.uuid4())\n+\n+        existing_record = self.the_record_exists(dataset=dataset, user_cookie=user_cookie)\n+\n+        if not existing_record:\n+            self.create_new_record(dataset=dataset, user_cookie=user_cookie)\n+\n+        return user_cookie\n+\n+\n+class DOIMappingService(BaseService):\n+    def __init__(self):\n+        super().__init__(DOIMappingRepository())\n+\n+    def get_new_doi(self, old_doi: str) -> str:\n+        doi_mapping = self.repository.get_new_doi(old_doi)\n+        if doi_mapping:\n+            return doi_mapping.dataset_doi_new\n+        else:\n+            return None\n+\n+\n+class SizeService():\n+\n+    def __init__(self):\n+        pass\n+\n+    def get_human_readable_size(self, size: int) -> str:\n+        if size < 1024:\n+            return f'{size} bytes'\n+        elif size < 1024 ** 2:\n+            return f'{round(size / 1024, 2)} KB'\n+        elif size < 1024 ** 3:\n+            return f'{round(size / (1024 ** 2), 2)} MB'\n+        else:\n+            return f'{round(size / (1024 ** 3), 2)} GB'"
      },
      {
        "sha": "0e17349e5c4dc2c9cbe870960029ff270c0f2bf7",
        "filename": "app/modules/dataset/templates/dataset/list_datasets.html",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,118 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}My datasets{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h3 mb-3\">My datasets</h1>\n+\n+    {% if datasets %}\n+        <div class=\" col-12\">\n+            <div class=\"card\">\n+\n+                <div class=\"card-body\">\n+                    <table class=\"table\">\n+                        <thead>\n+                        <tr>\n+                            <th>Title</th>\n+                            <th>Description</th>\n+                            <th>Publication type</th>\n+                            <th>Dataset DOI</th>\n+                            <th>Options</th>\n+                        </tr>\n+                        </thead>\n+                        <tbody>\n+                        {% for dataset in datasets %}\n+                            <tr>\n+                                <td>\n+                                    <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                        {{ dataset.ds_meta_data.title }}\n+                                    </a>\n+                                </td>\n+                                <td>{{ dataset.ds_meta_data.description }}</td>\n+                                <td>{{ dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n+                                <td><a href=\"{{ dataset.get_uvlhub_doi() }}\"\n+                                       target=\"_blank\">{{ dataset.get_uvlhub_doi() }}</a></td>\n+                                <td>\n+                                    <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                        <i data-feather=\"eye\"></i>\n+                                    </a>\n+                                    <a href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">\n+                                        <i data-feather=\"download\"></i>\n+                                    </a>\n+                                </td>\n+                            </tr>\n+                        {% endfor %}\n+                        </tbody>\n+                    </table>\n+                </div>\n+\n+            </div>\n+\n+        </div>\n+    {% else %}\n+        <div class=\"col-12 col-md-6\">\n+            <div class=\"card\">\n+                <div class=\"card-header\">\n+                    <h5 class=\"card-title mb-0\">No datasets found</h5>\n+                </div>\n+                <div class=\"card-body\">\n+                    <p class=\"card-text\">\n+                        You have not created any dataset synchronized with Zenodo, are you up for it?\n+                    </p>\n+                    <a href=\"{{ url_for('dataset.create_dataset') }}\" class=\"btn btn-primary\">\n+                        Upload dataset</a>\n+                </div>\n+            </div>\n+        </div>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+\n+        <div class=\"col-12\">\n+            {% if local_datasets %}\n+                <div class=\"card\">\n+                    <div class=\"card-body\">\n+                        <div class=\"card-header\">\n+                            <h5 class=\"card-title\">Unsynchronized datasets</h5>\n+                        </div>\n+                        <div class=\"card-body\">\n+                            <table class=\"table\">\n+                                <thead>\n+                                <tr>\n+                                    <th>Title</th>\n+                                    <th>Description</th>\n+                                    <th>Publication type</th>\n+                                    <th>Options</th>\n+                                </tr>\n+                                </thead>\n+                                <tbody>\n+                                {% for local_dataset in local_datasets %}\n+                                    <tr>\n+                                        <td>\n+                                            <a href=\"{{ url_for('dataset.get_unsynchronized_dataset', dataset_id=local_dataset.id) }}\">\n+                                                {{ local_dataset.ds_meta_data.title }}\n+                                            </a>\n+                                        </td>\n+                                        <td>{{ local_dataset.ds_meta_data.description }}</td>\n+                                        <td>{{ local_dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n+                                        <td>\n+                                            <a href=\"{{ url_for('dataset.get_unsynchronized_dataset', dataset_id=local_dataset.id) }}\">\n+                                                <i data-feather=\"eye\"></i>\n+                                            </a>\n+                                            <a href=\"{{ url_for('dataset.download_dataset', dataset_id=local_dataset.id) }}\">\n+                                                <i data-feather=\"download\"></i>\n+                                            </a>\n+                                        </td>\n+                                    </tr>\n+                                {% endfor %}\n+                                </tbody>\n+                            </table>\n+                        </div>\n+                    </div>\n+                </div>\n+            {% endif %}\n+        </div>\n+\n+{% endblock %}"
      },
      {
        "sha": "fcc2e87cdabfb25715a21ce6a1c5dbc880874207",
        "filename": "app/modules/dataset/templates/dataset/upload_dataset.html",
        "status": "added",
        "additions": 532,
        "deletions": 0,
        "changes": 532,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,532 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}Upload dataset{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h2 mb-3\"><b>Upload</b> dataset</h1>\n+\n+    <div class=\"row\">\n+        <div class=\"col-12 mb-3\">\n+            <div class=\"alert alert-warning\" role=\"alert\" id=\"test_zenodo_connection_error\" style=\"display: none\">\n+                <div class=\"alert-message\">\n+\n+                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n+                        connection to the Zenodo API</h4>\n+                    <p class=\"p-0 m-0\">\n+                        There seems to be some kind of problem with the Zenodo API and synchronization of your dataset\n+                        files may not be possible. We will save your files locally to eventually synchronize them with\n+                        Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n+                        anything about it.\n+                    </p>\n+                </div>\n+            </div>\n+        </div>\n+\n+    </div>\n+\n+    {% if messages %}\n+        <ul>\n+            {% for message in messages %}\n+                <li>{{ message }}</li>\n+            {% endfor %}\n+        </ul>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+            <div id=\"basic_info_form\">\n+\n+                {{ form.hidden_tag() }}\n+\n+                <div class=\"row\">\n+\n+                    <div class=\"col-12\">\n+\n+                        <h1 class=\"h3 mb-3\">Basic info</h1>\n+\n+                        <div class=\"row\" style=\"padding-left: 2rem\">\n+\n+                            <div class=\"col-lg-6 col-xs-12 col-md-12\">\n+                                <div class=\"mb-3\">\n+                                    {{ form.title.label(class=\"form-label\") }} *\n+                                    {{ form.title(class=\"form-control\") }}\n+                                    {% for error in form.title.errors %}\n+                                        <span style=\"color: red;\">{{ error }}</span>\n+                                    {% endfor %}\n+                                </div>\n+                            </div>\n+\n+                            <div class=\"col-12\">\n+                                <div class=\"mb-3\">\n+                                    {{ form.desc.label(class=\"form-label\") }} *\n+                                    {{ form.desc(rows=4, class=\"form-control\") }}\n+                                    {% for error in form.desc.errors %}\n+                                        <span style=\"color: red;\">{{ error }}</span>\n+                                    {% endfor %}\n+                                </div>\n+                            </div>\n+\n+                            <div class=\"col-lg-6 col-6\">\n+                                <div class=\"mb-3\">\n+                                    {{ form.publication_type.label(class=\"form-label\") }}\n+                                    {{ form.publication_type(class=\"form-control\") }}\n+                                </div>\n+\n+                            </div>\n+\n+                            <div class=\"col-lg-6 col-6\">\n+                                <div class=\"mb-3\">\n+                                    {{ form.publication_doi.label(class=\"form-label\") }}\n+                                    {{ form.publication_doi(class=\"form-control\") }}\n+                                    {% for error in form.publication_doi.errors %}\n+                                        <span style=\"color: red;\">{{ error }}</span>\n+                                    {% endfor %}\n+                                </div>\n+                            </div>\n+\n+                            <div class=\"col-6\">\n+                                <div class=\"mb-3\">\n+                                    {{ form.tags.label(class=\"form-label\") }}\n+                                    {{ form.tags(class=\"form-control\") }}\n+                                    {% for error in form.tags.errors %}\n+                                        <span style=\"color: red;\">{{ error }}</span>\n+                                    {% endfor %}\n+                                </div>\n+                            </div>\n+\n+                        </div>\n+\n+                        <h1 class=\"h3 mb-3 mt-4\">\n+                          Authors\n+                          <a href=\"#\" data-toggle=\"modal\" data-target=\"#infoModal\">\n+                            <i data-feather=\"info\"></i> <!-- Usamos \"info\" porque Feather no tiene un \u00edcono espec\u00edfico llamado \"feather\" para m\u00e1s info -->\n+                          </a>\n+                        </h1>\n+\n+                        <!-- Modal -->\n+                        <div class=\"modal fade\" id=\"infoModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"infoModalLabel\" aria-hidden=\"true\" style=\"display: none\">\n+                          <div class=\"modal-dialog\" role=\"document\">\n+                            <div class=\"modal-content\">\n+                              <div class=\"modal-header\">\n+                                <h5 class=\"modal-title\" id=\"infoModalLabel\">Informaci\u00f3n Importante</h5>\n+                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n+                                  <span aria-hidden=\"true\">&times;</span>\n+                                </button>\n+                              </div>\n+                              <div class=\"modal-body\">\n+                                \u00a1Cuidado! Los autores no se pueden editar una vez que el dataset se haya subido a UVLHub. Esta funcionalidad estar\u00e1 disponible para futuras versiones.\n+                              </div>\n+                              <div class=\"modal-footer\">\n+                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\n+                              </div>\n+                            </div>\n+                          </div>\n+                        </div>\n+\n+                        <div class=\"row\" style=\"padding-left: 2rem\">\n+\n+                            <div class=\"col-lg-6 col-12 mb-3\">\n+                                <label class=\"form-label\">Author name</label>\n+                                <input class=\"form-control\"\n+                                       disabled\n+                                       value=\"{{ current_user.profile.surname }}, {{ current_user.profile.name }}\">\n+                            </div>\n+\n+                            <div class=\"col-lg-6 col-12 mb-3\">\n+                                <label class=\"form-label\">Author affiliation</label>\n+                                <input class=\"form-control\"\n+                                       disabled value=\"{{ current_user.profile.affiliation }}\">\n+                            </div>\n+\n+                            <div class=\"col-lg-6 col-12 mb-3\">\n+                                <label class=\"form-label\">Author ORCID</label>\n+                                <input class=\"form-control\"\n+                                       disabled value=\"{{ current_user.profile.orcid }}\">\n+                            </div>\n+\n+                            <div class=\"col-12\">\n+\n+                                <div class=\"mb-3\">\n+\n+                                    <div id=\"authors\">\n+                                        {% for subform in form.authors %}\n+                                        <div class=\"row author\" {% if not loop.first %}\n+                                            style=\"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\"\n+                                            {% endif %}\n+                                        >\n+                                            <div class=\"col-lg-6 col-12 mb-3\">\n+                                                {{ subform.form.name.label(class=\"form-label\") }}\n+                                                {{ subform.form.name(class=\"form-control\", disabled=loop.first) }}\n+                                                {% for error in subform.name.errors %}\n+                                                    <span style=\"color: red;\">{{ error }}</span>\n+                                                {% endfor %}\n+                                            </div>\n+\n+                                            <div class=\"col-lg-6 col-12 mb-3\">\n+                                                {{ subform.form.affiliation.label(class=\"form-label\") }}\n+                                                {{ subform.form.affiliation(class=\"form-control\", disabled=loop.first) }}\n+                                                {% for error in subform.name.errors %}\n+                                                    <span style=\"color: red;\">{{ error }}</span>\n+                                                {% endfor %}\n+                                            </div>\n+\n+                                            <div class=\"col-lg-6 col-12 mb-3\">\n+                                                {{ subform.orcid.label(class=\"form-label\") }}\n+                                                {{ subform.orcid(class=\"form-control\", disabled=loop.first) }}\n+                                                {% for error in subform.orcid.errors %}\n+                                                    <span style=\"color: red;\">{{ error }}</span>\n+                                                {% endfor %}\n+                                            </div>\n+                                        </div>\n+                                        {% endfor %}\n+                                    </div>\n+                                    <button type=\"button\" class=\"btn btn-secondary\" id=\"add_author\">Add author\n+                                    </button>\n+\n+                                </div>\n+\n+                            </div>\n+\n+\n+                        </div>\n+\n+                    </div>\n+\n+                </div>\n+\n+                <div class=\"row\">\n+\n+                    {% if error %}\n+\n+                        <div class=\"mt-3 col-lg-6 col-12\">\n+                            <span style=\"color: red;\">{{ error }}</span>\n+                        </div>\n+\n+                    {% endif %}\n+\n+                </div>\n+\n+\n+            </div>\n+        </div>\n+\n+        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+\n+            <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n+\n+            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n+\n+                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n+                    <div id=\"dropzone-text\"></div>\n+                </form>\n+\n+                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n+                    </span>\n+\n+                <ul class=\"mt-2\" id=\"file-list\"></ul>\n+\n+                <script>\n+                    let dropzone = Dropzone.options.myDropzone = {\n+                        url: \"/dataset/file/upload\",\n+                        paramName: 'file',\n+                        maxFilesize: 10,\n+                        acceptedFiles: '.uvl',\n+                        init: function () {\n+\n+                            let fileList = document.getElementById('file-list');\n+                            let dropzoneText = document.getElementById('dropzone-text');\n+                            let alerts = document.getElementById('alerts');\n+\n+                            this.on('addedfile', function (file) {\n+\n+                                let ext = file.name.split('.').pop();\n+                                if (ext !== 'uvl') {\n+                                    this.removeFile(file);\n+\n+                                    let alert = document.createElement('p');\n+                                    alert.textContent = 'Invalid file extension: ' + file.name;\n+                                    alerts.appendChild(alert);\n+                                    alerts.style.display = 'block';\n+                                }\n+\n+                            });\n+\n+                            this.on('success', function (file, response) {\n+\n+                                let dropzone = this;\n+\n+                                show_upload_dataset();\n+\n+                                console.log(\"File uploaded: \", response);\n+                                // actions when UVL model is uploaded\n+                                let listItem = document.createElement('li');\n+                                let h4Element = document.createElement('h4');\n+                                h4Element.textContent = response.filename;\n+                                listItem.appendChild(h4Element);\n+\n+                                // generate incremental id for form\n+                                let formUniqueId = generateIncrementalId();\n+\n+                                /*\n+                                    ##########################################\n+                                    FORM BUTTON\n+                                    ##########################################\n+                                */\n+                                let formButton = document.createElement('button');\n+                                formButton.innerHTML = 'Show info';\n+                                formButton.classList.add('info-button', 'btn', 'btn-outline-secondary', \"btn-sm\");\n+                                formButton.style.borderRadius = '5px';\n+                                formButton.id = formUniqueId + \"_button\";\n+\n+                                formButton.addEventListener('click', function () {\n+                                    if (formContainer.style.display === \"none\") {\n+                                        formContainer.style.display = \"block\";\n+                                        formButton.innerHTML = 'Hide info';\n+                                    } else {\n+                                        formContainer.style.display = \"none\";\n+                                        formButton.innerHTML = 'Add info';\n+                                    }\n+                                });\n+\n+                                // append space\n+                                let space = document.createTextNode(\" \");\n+                                listItem.appendChild(space);\n+\n+                                /*\n+                                    ##########################################\n+                                    REMOVE BUTTON\n+                                    ##########################################\n+                                */\n+\n+                                // remove button\n+                                let removeButton = document.createElement('button');\n+                                removeButton.innerHTML = 'Delete model';\n+                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n+                                removeButton.style.borderRadius = '5px';\n+\n+                                // append space\n+                                space = document.createTextNode(\" \");\n+                                listItem.appendChild(space);\n+\n+                                removeButton.addEventListener('click', function () {\n+                                    fileList.removeChild(listItem);\n+                                    this.removeFile(file);\n+\n+                                    // Ajax request\n+                                    let xhr = new XMLHttpRequest();\n+                                    xhr.open('POST', '/dataset/file/delete', true);\n+                                    xhr.setRequestHeader('Content-Type', 'application/json');\n+                                    xhr.onload = function () {\n+                                        if (xhr.status === 200) {\n+                                            console.log('Deleted file from server');\n+\n+                                            if (dropzone.files.length === 0) {\n+                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n+                                                clean_upload_errors();\n+                                            }\n+\n+                                        }\n+                                    };\n+                                    xhr.send(JSON.stringify({file: file.name}));\n+                                }.bind(this));\n+\n+                                /*\n+                                    ##########################################\n+                                    APPEND BUTTONS\n+                                    ##########################################\n+                                */\n+                                listItem.appendChild(formButton);\n+                                listItem.appendChild(removeButton);\n+\n+                                /*\n+                                    ##########################################\n+                                    UVL FORM\n+                                    ##########################################\n+                                */\n+\n+                                // create specific form for UVL\n+                                let formContainer = document.createElement('div');\n+                                formContainer.id = formUniqueId + \"_form\";\n+                                formContainer.classList.add('uvl_form', \"mt-3\");\n+                                formContainer.style.display = \"none\";\n+\n+                                formContainer.innerHTML = `\n+                                    <div class=\"row\">\n+                                        <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n+                                        <div class=\"col-12\">\n+                                            <div class=\"row\">\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Title</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-title\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Description</label>\n+                                                        <textarea rows=\"4\" class=\"form-control\" name=\"feature_models-${formUniqueId}-desc\"></textarea>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_type\">Publication type</label>\n+                                                        <select class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_type\">\n+                                                            <option value=\"none\">None</option>\n+                                                            <option value=\"annotationcollection\">Annotation Collection</option>\n+                                                            <option value=\"book\">Book</option>\n+                                                            <option value=\"section\">Book Section</option>\n+                                                            <option value=\"conferencepaper\">Conference Paper</option>\n+                                                            <option value=\"datamanagementplan\">Data Management Plan</option>\n+                                                            <option value=\"article\">Journal Article</option>\n+                                                            <option value=\"patent\">Patent</option>\n+                                                            <option value=\"preprint\">Preprint</option>\n+                                                            <option value=\"deliverable\">Project Deliverable</option>\n+                                                            <option value=\"milestone\">Project Milestone</option>\n+                                                            <option value=\"proposal\">Proposal</option>\n+                                                            <option value=\"report\">Report</option>\n+                                                            <option value=\"softwaredocumentation\">Software Documentation</option>\n+                                                            <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n+                                                            <option value=\"technicalnote\">Technical Note</option>\n+                                                            <option value=\"thesis\">Thesis</option>\n+                                                            <option value=\"workingpaper\">Working Paper</option>\n+                                                            <option value=\"other\">Other</option>\n+                                                        </select>\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-lg-6 col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\" for=\"publication_doi\">Publication DOI</label>\n+                                                        <input class=\"form-control\" name=\"feature_models-${formUniqueId}-publication_doi\" type=\"text\" value=\"\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Tags (separated by commas)</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-tags\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-6\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">UVL version</label>\n+                                                        <input type=\"text\" class=\"form-control\" name=\"feature_models-${formUniqueId}-uvl_version\">\n+                                                    </div>\n+                                                </div>\n+                                                <div class=\"col-12\">\n+                                                    <div class=\"mb-3\">\n+                                                        <label class=\"form-label\">Authors</label>\n+                                                        <div id=\"` + formContainer.id + `_authors\">\n+                                                        </div>\n+                                                        <button type=\"button\" class=\"add_author_to_uvl btn btn-secondary\" id=\"` + formContainer.id + `_authors_button\">Add author</button>\n+                                                    </div>\n+                                                </div>\n+                                            </div>\n+                                        </div>\n+                                    </div>\n+                                    `;\n+\n+                                listItem.appendChild(formContainer);\n+                                fileList.appendChild(listItem);\n+\n+                            });\n+\n+                            this.on('error', function (file, response) {\n+                                console.error(\"Error uploading file: \", response);\n+                                let alert = document.createElement('p');\n+                                alert.textContent = 'UVL not valid: ' + file.name;\n+                                alerts.appendChild(alert);\n+                                alerts.style.display = 'block';\n+                            });\n+\n+                        }\n+                    };\n+\n+\n+                </script>\n+\n+            </div>\n+        </div>\n+\n+    </div>\n+\n+    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n+\n+        <div class=\"col-12\">\n+\n+            <hr>\n+\n+            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n+\n+            <div style=\"padding-left: 2rem\">\n+\n+                <label class=\"form-check\">\n+                    <input id=\"agreeCheckbox\" class=\"form-check-input\" type=\"checkbox\" value=\"\">\n+                    <span class=\"form-check-label\" style=\"font-size: 15px\">\n+                                I agree to have my feature models automatically uploaded to Zenodo and made available to the public according to the <a\n+                            href=\"https://en.wikipedia.org/wiki/Open_science\" target=\"_blank\">Open Science</a> manifesto\n+                            </span>\n+                </label>\n+\n+                <button id=\"upload_button\" class=\"btn btn-primary mt-2\" disabled>\n+                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n+                    Upload dataset</button>\n+\n+                <div id=\"loading\" style=\"display: none\">\n+                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n+                    Uploading dataset, please wait...\n+                </div>\n+\n+                <div class=\"row\">\n+                    <div class=\"col-12 mb-3\">\n+\n+                    </div>\n+                </div>\n+\n+                <div class=\"alert alert-error\" role=\"alert\" id=\"upload_error\"\n+                     style=\"display: none\">\n+                    <div class=\"alert-message\">\n+\n+                        <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n+                            connection to the Zenodo API</h4>\n+                        <p class=\"p-0 m-0\">\n+                            There seems to be some kind of problem with the Zenodo API and synchronization of your\n+                            dataset\n+                            files may not be possible. We will save your files locally to eventually synchronize\n+                            them with\n+                            Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n+                            anything about it.\n+                        </p>\n+                    </div>\n+                </div>\n+\n+\n+                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n+\n+                    </span>\n+\n+                <script>\n+                    const checkbox = document.getElementById('agreeCheckbox');\n+                    const upload_button = document.getElementById('upload_button');\n+\n+                    checkbox.addEventListener('change', function () {\n+                        upload_button.disabled = !checkbox.checked;\n+                    });\n+                </script>\n+\n+            </div>\n+\n+\n+\n+\n+        </div>\n+\n+    </div>\n+\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "6246ba957094975080fd4ecd7df8be4c9f93af80",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "added",
        "additions": 497,
        "deletions": 0,
        "changes": 497,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,497 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}View dataset{% endblock %}\n+\n+{% block head_extra %}\n+<style>\n+    .option-button {\n+        display: block;\n+        width: 100%;\n+        margin-bottom: 5px;\n+    }\n+\n+    .option-button:last-child {\n+        margin-bottom: 0;\n+    }\n+</style>\n+{% endblock %}\n+\n+{% block content %}\n+\n+<div class=\"row mb-3\">\n+\n+    <div class=\"col-6\">\n+        <a href=\"/explore\" class=\"btn btn-primary btn-sm\" id=\"search\" style=\"border-radius: 5px;\">\n+            <i data-feather=\"search\" class=\"center-button-icon\"></i>\n+            Explore more datasets\n+        </a>\n+    </div>\n+\n+</div>\n+\n+<div class=\"row\">\n+\n+    <div class=\"col-xl-8 col-lg-12 col-md-12 col-sm-12\">\n+\n+        <div class=\"card\">\n+            <div class=\"card-body\">\n+                <div class=\"d-flex align-items-center justify-content-between\">\n+                    <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n+                    <div>\n+                        <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n+                    </div>\n+                </div>\n+                <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n+\n+                <div class=\"row mb-4\">\n+\n+                    <div class=\"col-md-4 col-12\">\n+                        <span class=\" text-secondary\">\n+                            Description\n+                        </span>\n+                    </div>\n+                    <div class=\"col-md-8 col-12\">\n+                        <p class=\"card-text\">{{ dataset.ds_meta_data.description }}</p>\n+                    </div>\n+\n+                </div>\n+\n+                <div class=\"row mb-2\">\n+\n+                    <div class=\"col-md-4 col-12\">\n+                        <span class=\" text-secondary\">\n+                            Uploaded by\n+                        </span>\n+                    </div>\n+                    <div class=\"col-md-8 col-12\">\n+                        <a href=\"#\">{{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}</a>\n+                    </div>\n+\n+                </div>\n+\n+                <div class=\"row mb-2\">\n+\n+                    <div class=\"col-md-4 col-12\">\n+                        <span class=\" text-secondary\">\n+                            Authors\n+                        </span>\n+                    </div>\n+                    <div class=\"col-md-8 col-12\">\n+                        {% for author in dataset.ds_meta_data.authors %}\n+                        <p class=\"p-0 m-0\">\n+                            {{ author.name }}\n+                            {% if author.affiliation %}\n+                            ({{ author.affiliation }})\n+                            {% endif %}\n+                            {% if author.orcid %}\n+                            ({{ author.orcid }})\n+                            {% endif %}\n+                        </p>\n+                        {% endfor %}\n+                    </div>\n+\n+\n+                </div>\n+\n+                {% if dataset.ds_meta_data.publication_doi %}\n+                <div class=\"row mb-2\">\n+                    <div class=\"col-md-4 col-12\">\n+                        <span class=\"text-secondary\">\n+                            Publication DOI\n+                        </span>\n+                    </div>\n+                    <div class=\"col-md-8 col-12\">\n+                        <a href=\"{{ dataset.ds_meta_data.publication_doi }}\">\n+                            {{ dataset.ds_meta_data.publication_doi }}\n+                        </a>\n+                    </div>\n+                </div>\n+                {% endif %}\n+\n+                {% if dataset.ds_meta_data.dataset_doi %}\n+                <div class=\"row mb-2\">\n+                    \n+                        <div class=\"col-md-4 col-12\">\n+                            <span class=\" text-secondary\">\n+                                Zenodo record\n+                            </span>\n+                        </div>\n+\n+                        {% if FLASK_ENV == 'production' %}\n+                            <div class=\"col-md-8 col-12\">\n+                                <a href=\"https://zenodo.org/records/{{ dataset.ds_meta_data.deposition_id }}\" target=\"_blank\">\n+                                    https://zenodo.org/records/{{ dataset.ds_meta_data.deposition_id }}\n+                                </a>\n+                            </div>\n+                        {% elif FLASK_ENV == 'development' %}\n+                            <div class=\"col-md-8 col-12\">\n+                                <a href=\"https://sandbox.zenodo.org/records/{{ dataset.ds_meta_data.deposition_id }}\" target=\"_blank\">\n+                                    https://sandbox.zenodo.org/records/{{ dataset.ds_meta_data.deposition_id }}\n+                                </a>\n+                            </div>\n+                        {% else %}\n+                            <div class=\"col-md-8 col-12\">\n+                                <a href=\"https://zenodo.org/records/{{ dataset.ds_meta_data.deposition_id }}\" target=\"_blank\">\n+                                    https://sandbox.zenodo.org/records/{{ dataset.ds_meta_data.deposition_id }}\n+                                </a>\n+                            </div>\n+                        {% endif %}\n+\n+                </div>\n+                {% endif %}\n+                <div class=\"row mb-2\">\n+\n+                    <div class=\"col-md-4 col-12\">\n+                        <span class=\" text-secondary\">\n+                            Tags\n+                        </span>\n+                    </div>\n+                    <div class=\"col-md-8 col-12\">\n+                        {% for tag in dataset.ds_meta_data.tags.split(',') %}\n+                        <span class=\"badge bg-secondary\">{{ tag.strip() }}</span>\n+                        {% endfor %}\n+                    </div>\n+\n+                </div>\n+\n+                \n+\n+            </div>\n+\n+            {% if dataset.ds_meta_data.dataset_doi %}\n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n+\n+                <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n+                    {{ dataset.get_uvlhub_doi() }}\n+                </div>\n+\n+                <button type=\"button\" class=\"btn doi_button btn-sm\" onclick=\"copyText('dataset_doi_uvlhub')\">\n+                    <span class=\"button_doi_id\">\n+                        <i data-feather=\"clipboard\" class=\"center-button-icon\" style=\"cursor: pointer\"></i>\n+                        <b>DOI</b>\n+                    </span>\n+                    <span class=\"doi_text\">\n+                        {{ dataset.get_uvlhub_doi() }}\n+                    </span>\n+                </button>\n+                \n+                <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n+                    {{ dataset.get_uvlhub_doi() }}\n+                </div>\n+                \n+            </div>\n+            {% endif %}\n+\n+        </div>\n+\n+        <div class=\"card\">\n+\n+            <div class=\"card-body\">\n+\n+                <h3> Related publication </h3>\n+                \n+                David Romero-Organvidez, Jos\u00e9 A. Galindo, Chico Sundermann, Jose-Miguel Horcas, David Benavides,\n+                <i>UVLHub: A feature model data repository using UVL and open science principles</i>,\n+                Journal of Systems and Software,\n+                2024,\n+                112150,\n+                ISSN 0164-1212,\n+                <a href=\"https://doi.org/10.1016/j.jss.2024.112150\" target=\"_blank\">https://doi.org/10.1016/j.jss.2024.112150</a>\n+\n+            </div>\n+\n+            <div class=\"card-body mt-0 pt-0\">\n+\n+                <button onclick=\"copyText('bibtex_cite')\" class=\"btn btn-light btn-sm\" style=\"border-radius: 5px; margin-right: 10px\">\n+                    <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                    Copy in BibTex\n+                </button>\n+\n+                <button onclick=\"copyText('ris_cite')\" class=\"btn btn-light btn-sm\" style=\"border-radius: 5px;\">\n+                    <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                    Copy in RIS\n+                </button>\n+\n+                <button onclick=\"copyText('apa_cite')\" class=\"btn btn-light btn-sm\" style=\"border-radius: 5px;\">\n+                    <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                    Copy in APA\n+                </button>\n+\n+                <button onclick=\"copyText('text_cite')\" class=\"btn btn-light btn-sm\" style=\"border-radius: 5px;\">\n+                    <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                    Copy in text\n+                </button>\n+\n+            </div>\n+\n+        </div>\n+\n+\n+    </div>\n+\n+    <div class=\"col-xl-4 col-lg-12 col-md-12 col-sm-12\">\n+\n+        <div class=\"list-group\">\n+\n+            <div class=\"list-group-item\">\n+\n+                <div class=\"row\">\n+                    <div class=\"col-12 d-flex justify-content-between align-items-center\">\n+                        <h4 style=\"margin-bottom: 0px\">UVL models</h4>\n+                        <h4 style=\"margin-bottom: 0px;\"><span class=\"badge bg-dark\">{{ dataset.get_files_count() }}</span></h4>\n+                    </div>\n+                </div>\n+                \n+\n+            </div>\n+            \n+\n+            {% for feature_model in dataset.feature_models %}\n+                {% for file in feature_model.files %}\n+                    <div class=\"list-group-item\">\n+                        \n+                        <div class=\"row\">\n+                            <div class=\"col-12\">\n+\n+                                <div class=\"row\">\n+                                    <div class=\"col-8\">\n+                                        <i data-feather=\"file\"></i> {{ file.name }}\n+                                        <br>\n+                                        <small class=\"text-muted\">({{ file.get_formatted_size() }})</small>\n+                                    </div>\n+                                    <div class=\"col-2\">\n+                                        <div id=\"check_{{ file.id }}\">\n+                                        </div>\n+                                    </div>\n+                                </div>\n+\n+                                \n+                            </div>\n+                            <div class=\"col-12 text-end\" >\n+\n+                                <button onclick=\"viewFile('{{ file.id }}')\" class=\"btn btn-outline-secondary btn-sm\" style=\"border-radius: 5px;\">\n+                                    <i data-feather=\"eye\"></i> View\n+                                </button>\n+\n+                                <div class=\"btn-group\" role=\"group\">\n+                                    <button id=\"btnGroupDrop{{ file.id }}\" type=\"button\" class=\"btn btn-outline-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\" border-radius: 5px;\">\n+                                        <i data-feather=\"check\"></i> Check\n+                                    </button>\n+                                    <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop{{ file.id }}\">\n+                                        <li>\n+                                            <a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"checkUVL('{{ file.id }}')\">Syntax check</a>\n+                                        </li>\n+                                        <!--\n+                                        <li>\n+                                            <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.valid', file_id=file.id) }}\">SAT validity check</a>\n+                                        </li>\n+                                        -->\n+                                    </ul>\n+                                </div>\n+                                \n+                                <div class=\"btn-group\" role=\"group\">\n+                                    <button id=\"btnGroupDropExport{{ file.id }}\" type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\" border-radius: 5px;\">\n+                                        <i data-feather=\"download\"></i> Export\n+                                    </button>\n+                                    <ul class=\"dropdown-menu\" aria-labelledby=\"btnGroupDropExport{{ file.id }}\">\n+                                        <li>\n+                                            <a class=\"dropdown-item\" href=\"{{ url_for('hubfile.download_file', file_id=file.id) }}\">\n+                                                UVL\n+                                            </a>\n+                                            <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_glencoe', file_id=file.id) }}\">\n+                                                Glencoe\n+                                            </a>\n+                                        </li>\n+                                        <li>\n+                                            <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_cnf', file_id=file.id) }}\">\n+                                                DIMACS\n+                                            </a>\n+                                        </li>\n+                                        <li>\n+                                            <a class=\"dropdown-item\" href=\"{{ url_for('flamapy.to_splot', file_id=file.id) }}\">\n+                                                SPLOT\n+                                            </a>\n+                                        </li>\n+                                    </ul>\n+                                </div>\n+                                \n+                                \n+\n+                            </div>\n+                        </div>\n+                    </div>\n+                {% endfor %}\n+            {% endfor %}\n+        </div>\n+        \n+        \n+    \n+        <a href=\"/dataset/download/{{ dataset.id }}\" class=\"btn btn-primary mt-3\" style=\"border-radius: 5px;\">\n+            <i data-feather=\"download\" class=\"center-button-icon\"></i>\n+            Download all ({{ dataset.get_file_total_size_for_human() }})\n+        </a>\n+    </div>\n+    \n+</div>\n+\n+<!-- Modal-->\n+<div class=\"modal fade\" id=\"fileViewerModal\" tabindex=\"-1\" aria-labelledby=\"fileViewerModalLabel\" aria-hidden=\"true\">\n+    <div class=\"modal-dialog modal-lg\" style=\"height: 80vh; display: flex; align-items: center;\">\n+        <div class=\"modal-content\" style=\"height: 80vh;\">\n+            <div class=\"modal-header\" style=\"display: flex; justify-content: space-between; align-items: center;\">\n+                <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n+                <div>\n+                    <a href=\"#\" class=\"btn btn-outline-primary btn-sm\" id=\"downloadButton\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"download\"></i>\n+                    </a>\n+                    <button onclick=\"copyToClipboard()\" class=\"btn btn-outline-secondary btn-sm\"\n+                        style=\"margin-right: 5px; margin-bottom: 5px; border-radius: 5px;\">\n+                        <i data-feather=\"copy\"></i>\n+                    </button>\n+                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n+                </div>\n+            </div>\n+            <div class=\"modal-body\" style=\"overflow-y: auto; height: calc(100vh - 50px);\">\n+                <pre id=\"fileContent\" style=\"height: 100%; overflow-y: auto; white-space: pre-wrap; word-wrap: break-word; background-color: #f5f5f5; padding: 20px; border-radius: 5px; border: 1px solid #ccc;\"></pre>\n+\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n+<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js\"></script>\n+\n+\n+\n+<script>\n+    document.addEventListener('DOMContentLoaded', function () {\n+        feather.replace();\n+    });\n+\n+    var currentFileId;\n+\n+    function viewFile(fileId) {\n+        fetch(`/file/view/${fileId}`)\n+            .then(response => response.json())\n+            .then(data => {\n+                document.getElementById('fileContent').textContent = data.content;\n+                currentFileId = fileId;\n+                document.getElementById('downloadButton').href = `/file/download/${fileId}`;\n+                var modal = new bootstrap.Modal(document.getElementById('fileViewerModal'));\n+                modal.show();\n+            })\n+            .catch(error => console.error('Error loading file:', error));\n+    }\n+\n+    function showLoading() {\n+        document.getElementById(\"loading\").style.display = \"initial\";\n+    }\n+\n+    function hideLoading() {\n+        document.getElementById(\"loading\").style.display = \"none\";\n+    }\n+\n+    function checkUVL(file_id) {\n+    const outputDiv = document.getElementById('check_' + file_id);\n+    outputDiv.innerHTML = ''; // Clear previous output\n+\n+    fetch(`/flamapy/check_uvl/${file_id}`)\n+        .then(response => {\n+            return response.json().then(data => ({\n+                status: response.status,\n+                data\n+            }));\n+        })\n+        .then(({ status, data }) => {\n+            if (status === 400) {\n+                // Display errors\n+                if (data.errors) {\n+                    outputDiv.innerHTML = '<span class=\"badge badge-danger\">Errors:</span>';\n+                    data.errors.forEach(error => {\n+                        const errorElement = document.createElement('span');\n+                        errorElement.className = 'badge badge-danger';\n+                        errorElement.textContent = error;\n+                        outputDiv.appendChild(errorElement);\n+                        outputDiv.appendChild(document.createElement('br')); // Line break for better readability\n+                    });\n+                } else {\n+                    outputDiv.innerHTML = `<span class=\"badge badge-danger\">Error: ${data.error}</span>`;\n+                }\n+            } else if (status === 200) {\n+                // Display success message\n+                outputDiv.innerHTML = '<span class=\"badge badge-success\">Valid Model</span>';\n+            } else {\n+                // Handle unexpected status\n+                outputDiv.innerHTML = `<span class=\"badge badge-warning\">Unexpected response status: ${status}</span>`;\n+            }\n+        })\n+        .catch(error => {\n+            // Handle fetch errors\n+            outputDiv.innerHTML = `<span class=\"badge badge-danger\">An unexpected error occurred: ${error.message}</span>`;\n+        });\n+}\n+\n+\n+    /*\n+    async function valid() {\n+        showLoading()\n+        let pyodide = await loadPyodide();\n+        await pyodide.loadPackage(\"micropip\");\n+        const micropip = pyodide.pyimport(\"micropip\");\n+        //await micropip.install(\"/assets/web_assembly/antlr4_python3_runtime-4.7.2-py3-none-any.whl\");\n+        await micropip.install(\"antlr4-python3-runtime==4.13.1\");\n+        await micropip.install(\"uvlparser==2.0.1\");\n+        //await micropip.install(\"afmparser==1.0.0\");\n+\n+        await pyodide.runPythonAsync(\n+        `\n+            import micropip\n+            #await micropip.install(\"flamapy-fm-dist\", deps=False)#this is to avoid problems with deps later on\n+            await micropip.install(\"flamapy==2.0.1.dev1\", deps=False);\n+            await micropip.install(\"flamapy-fm==2.0.1.dev1\", deps=False);\n+            await micropip.install(\"flamapy-sat\");\n+        `\n+        )\n+        hideLoading()\n+\n+        try {\n+            let output = pyodide.runPython(\n+            `\n+            import js\n+\n+            file_content = js.document.getElementById('fileContent').textContent \n+            div = js.document.createElement(\"result\")\n+\n+            with open(\"uvlfile.uvl\", \"w\") as text_file:\n+                print(file_content, file=text_file)\n+\n+            from flamapy.interfaces.python.FLAMAFeatureModel import FLAMAFeatureModel\n+\n+            fm = FLAMAFeatureModel(\"uvlfile.uvl\")\n+            result=fm.valid()\n+\n+            div.innerHTML = \"<div id='deleteme'>\"+str(result)+\"</div>\"\n+            exists=js.document.getElementById('deleteme')\n+            if(exists):\n+                exists.remove()\n+\n+            js.document.getElementById('result').append(div)\n+            `\n+        );\n+        } catch (err) {\n+            console.log(err);\n+        }\n+    }\n+    */\n+    function copyToClipboard() {\n+        const text = document.getElementById('fileContent').textContent;\n+        navigator.clipboard.writeText(text).then(() => {\n+            console.log('Text copied to clipboard');\n+        }).catch(err => {\n+            console.error('Failed to copy text: ', err);\n+        });\n+    }\n+</script>\n+\n+{% endblock %}"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/dataset/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "8337b2ff3e8a6a9548ec897c8721e36a71fc69fb",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,20 @@\n+from locust import HttpUser, TaskSet, task\n+from core.locust.common import get_csrf_token\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class DatasetBehavior(TaskSet):\n+    def on_start(self):\n+        self.dataset()\n+\n+    @task\n+    def dataset(self):\n+        response = self.client.get(\"/dataset/upload\")\n+        get_csrf_token(response)\n+\n+\n+class DatasetUser(HttpUser):\n+    tasks = [DatasetBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "6f601972cbba66c0b635a532d3733db27c084feb",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "added",
        "additions": 135,
        "deletions": 0,
        "changes": 135,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,135 @@\n+import os\n+import time\n+\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.keys import Keys\n+from selenium.webdriver.support.ui import WebDriverWait\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def wait_for_page_to_load(driver, timeout=4):\n+    WebDriverWait(driver, timeout).until(\n+        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+    )\n+\n+\n+def count_datasets(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets\n+\n+\n+def test_upload_dataset():\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the login page\n+        driver.get(f\"{host}/login\")\n+        wait_for_page_to_load(driver)\n+\n+        # Find the username and password field and enter the values\n+        email_field = driver.find_element(By.NAME, \"email\")\n+        password_field = driver.find_element(By.NAME, \"password\")\n+\n+        email_field.send_keys(\"user1@example.com\")\n+        password_field.send_keys(\"1234\")\n+\n+        # Send the form\n+        password_field.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        # Count initial datasets\n+        initial_datasets = count_datasets(driver, host)\n+\n+        # Open the upload dataset\n+        driver.get(f\"{host}/dataset/upload\")\n+        wait_for_page_to_load(driver)\n+\n+        # Find basic info and UVL model and fill values\n+        title_field = driver.find_element(By.NAME, \"title\")\n+        title_field.send_keys(\"Title\")\n+        desc_field = driver.find_element(By.NAME, \"desc\")\n+        desc_field.send_keys(\"Description\")\n+        tags_field = driver.find_element(By.NAME, \"tags\")\n+        tags_field.send_keys(\"tag1,tag2\")\n+\n+        # Add two authors and fill\n+        add_author_button = driver.find_element(By.ID, \"add_author\")\n+        add_author_button.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+        add_author_button.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        name_field0 = driver.find_element(By.NAME, \"authors-0-name\")\n+        name_field0.send_keys(\"Author0\")\n+        affiliation_field0 = driver.find_element(By.NAME, \"authors-0-affiliation\")\n+        affiliation_field0.send_keys(\"Club0\")\n+        orcid_field0 = driver.find_element(By.NAME, \"authors-0-orcid\")\n+        orcid_field0.send_keys(\"0000-0000-0000-0000\")\n+\n+        name_field1 = driver.find_element(By.NAME, \"authors-1-name\")\n+        name_field1.send_keys(\"Author1\")\n+        affiliation_field1 = driver.find_element(By.NAME, \"authors-1-affiliation\")\n+        affiliation_field1.send_keys(\"Club1\")\n+\n+        # Obt\u00e9n las rutas absolutas de los archivos\n+        file1_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file1.uvl\")\n+        file2_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file2.uvl\")\n+\n+        # Subir el primer archivo\n+        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+        dropzone.send_keys(file1_path)\n+        wait_for_page_to_load(driver)\n+\n+        # Subir el segundo archivo\n+        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+        dropzone.send_keys(file2_path)\n+        wait_for_page_to_load(driver)\n+\n+        # Add authors in UVL models\n+        show_button = driver.find_element(By.ID, \"0_button\")\n+        show_button.send_keys(Keys.RETURN)\n+        add_author_uvl_button = driver.find_element(By.ID, \"0_form_authors_button\")\n+        add_author_uvl_button.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        name_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-name\")\n+        name_field.send_keys(\"Author3\")\n+        affiliation_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-affiliation\")\n+        affiliation_field.send_keys(\"Club3\")\n+\n+        # Check I agree and send form\n+        check = driver.find_element(By.ID, \"agreeCheckbox\")\n+        check.send_keys(Keys.SPACE)\n+        wait_for_page_to_load(driver)\n+\n+        upload_btn = driver.find_element(By.ID, \"upload_button\")\n+        upload_btn.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+        time.sleep(2)  # Force wait time\n+\n+        assert driver.current_url == f\"{host}/dataset/list\", \"Test failed!\"\n+\n+        # Count final datasets\n+        final_datasets = count_datasets(driver, host)\n+        assert final_datasets == initial_datasets + 1, \"Test failed!\"\n+\n+        print(\"Test passed!\")\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_upload_dataset()"
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/file1.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile1.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile1.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile1.uvl?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/file10.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile10.uvl?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/file11.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile11.uvl?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/file12.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile12.uvl?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/file2.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile2.uvl?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/file3.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile3.uvl?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/file4.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile4.uvl?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/file5.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile5.uvl?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/file6.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile6.uvl?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/file7.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile7.uvl?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/file8.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile8.uvl?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "2468f3dc2130148db5edcce6128edbaa8c06da87",
        "filename": "app/modules/dataset/uvl_examples/file9.uvl",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile9.uvl",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile9.uvl",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Ffile9.uvl?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+features\n+    Chat\n+        mandatory\n+            Connection\n+                alternative\n+                    \"Peer 2 Peer\"\n+                    Server\n+            Messages\n+                or\n+                    Text\n+                    Video\n+                    Audio\n+        optional\n+            \"Data Storage\"\n+            \"Media Player\"\n+\n+constraints\n+    Server => \"Data Storage\"\n+    Video | Audio => \"Media Player\""
      },
      {
        "sha": "e26eb1d71fee5609a6a2c087532e98ade7a604be",
        "filename": "app/modules/explore/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+explore_bp = BaseBlueprint('explore', __name__, template_folder='templates')"
      },
      {
        "sha": "2966e778826ec5ae7c093d75f60b7385a58806c1",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "added",
        "additions": 205,
        "deletions": 0,
        "changes": 205,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,205 @@\n+document.addEventListener('DOMContentLoaded', () => {\n+    send_query();\n+});\n+\n+function send_query() {\n+\n+    console.log(\"send query...\")\n+\n+    document.getElementById('results').innerHTML = '';\n+    document.getElementById(\"results_not_found\").style.display = \"none\";\n+    console.log(\"hide not found icon\");\n+\n+    const filters = document.querySelectorAll('#filters input, #filters select, #filters [type=\"radio\"]');\n+\n+    filters.forEach(filter => {\n+        filter.addEventListener('input', () => {\n+            const csrfToken = document.getElementById('csrf_token').value;\n+\n+            const searchCriteria = {\n+                csrf_token: csrfToken,\n+                query: document.querySelector('#query').value,\n+                publication_type: document.querySelector('#publication_type').value,\n+                sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n+            };\n+\n+            console.log(document.querySelector('#publication_type').value);\n+\n+            fetch('/explore', {\n+                method: 'POST',\n+                headers: {\n+                    'Content-Type': 'application/json',\n+                },\n+                body: JSON.stringify(searchCriteria),\n+            })\n+                .then(response => response.json())\n+                .then(data => {\n+\n+                    console.log(data);\n+                    document.getElementById('results').innerHTML = '';\n+\n+                    // results counter\n+                    const resultCount = data.length;\n+                    const resultText = resultCount === 1 ? 'dataset' : 'datasets';\n+                    document.getElementById('results_number').textContent = `${resultCount} ${resultText} found`;\n+\n+                    if (resultCount === 0) {\n+                        console.log(\"show not found icon\");\n+                        document.getElementById(\"results_not_found\").style.display = \"block\";\n+                    } else {\n+                        document.getElementById(\"results_not_found\").style.display = \"none\";\n+                    }\n+\n+\n+                    data.forEach(dataset => {\n+                        let card = document.createElement('div');\n+                        card.className = 'col-12';\n+                        card.innerHTML = `\n+                            <div class=\"card\">\n+                                <div class=\"card-body\">\n+                                    <div class=\"d-flex align-items-center justify-content-between\">\n+                                        <h3><a href=\"${dataset.url}\">${dataset.title}</a></h3>\n+                                        <div>\n+                                            <span class=\"badge bg-primary\" style=\"cursor: pointer;\" onclick=\"set_publication_type_as_query('${dataset.publication_type}')\">${dataset.publication_type}</span>\n+                                        </div>\n+                                    </div>\n+                                    <p class=\"text-secondary\">${formatDate(dataset.created_at)}</p>\n+\n+                                    <div class=\"row mb-2\">\n+\n+                                        <div class=\"col-md-4 col-12\">\n+                                            <span class=\" text-secondary\">\n+                                                Description\n+                                            </span>\n+                                        </div>\n+                                        <div class=\"col-md-8 col-12\">\n+                                            <p class=\"card-text\">${dataset.description}</p>\n+                                        </div>\n+\n+                                    </div>\n+\n+                                    <div class=\"row mb-2\">\n+\n+                                        <div class=\"col-md-4 col-12\">\n+                                            <span class=\" text-secondary\">\n+                                                Authors\n+                                            </span>\n+                                        </div>\n+                                        <div class=\"col-md-8 col-12\">\n+                                            ${dataset.authors.map(author => `\n+                                                <p class=\"p-0 m-0\">${author.name}${author.affiliation ? ` (${author.affiliation})` : ''}${author.orcid ? ` (${author.orcid})` : ''}</p>\n+                                            `).join('')}\n+                                        </div>\n+\n+                                    </div>\n+\n+                                    <div class=\"row mb-2\">\n+\n+                                        <div class=\"col-md-4 col-12\">\n+                                            <span class=\" text-secondary\">\n+                                                Tags\n+                                            </span>\n+                                        </div>\n+                                        <div class=\"col-md-8 col-12\">\n+                                            ${dataset.tags.map(tag => `<span class=\"badge bg-primary me-1\" style=\"cursor: pointer;\" onclick=\"set_tag_as_query('${tag}')\">${tag}</span>`).join('')}\n+                                        </div>\n+\n+                                    </div>\n+\n+                                    <div class=\"row\">\n+\n+                                        <div class=\"col-md-4 col-12\">\n+\n+                                        </div>\n+                                        <div class=\"col-md-8 col-12\">\n+                                            <a href=\"${dataset.url}\" class=\"btn btn-outline-primary btn-sm\" id=\"search\" style=\"border-radius: 5px;\">\n+                                                View dataset\n+                                            </a>\n+                                            <a href=\"/dataset/download/${dataset.id}\" class=\"btn btn-outline-primary btn-sm\" id=\"search\" style=\"border-radius: 5px;\">\n+                                                Download (${dataset.total_size_in_human_format})\n+                                            </a>\n+                                        </div>\n+\n+\n+                                    </div>\n+\n+                                </div>\n+                            </div>\n+                        `;\n+\n+                        document.getElementById('results').appendChild(card);\n+                    });\n+                });\n+        });\n+    });\n+}\n+\n+function formatDate(dateString) {\n+    const options = {day: 'numeric', month: 'long', year: 'numeric', hour: 'numeric', minute: 'numeric'};\n+    const date = new Date(dateString);\n+    return date.toLocaleString('en-US', options);\n+}\n+\n+function set_tag_as_query(tagName) {\n+    const queryInput = document.getElementById('query');\n+    queryInput.value = tagName.trim();\n+    queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n+}\n+\n+function set_publication_type_as_query(publicationType) {\n+    const publicationTypeSelect = document.getElementById('publication_type');\n+    for (let i = 0; i < publicationTypeSelect.options.length; i++) {\n+        if (publicationTypeSelect.options[i].text === publicationType.trim()) {\n+            // Set the value of the select to the value of the matching option\n+            publicationTypeSelect.value = publicationTypeSelect.options[i].value;\n+            break;\n+        }\n+    }\n+    publicationTypeSelect.dispatchEvent(new Event('input', {bubbles: true}));\n+}\n+\n+document.getElementById('clear-filters').addEventListener('click', clearFilters);\n+\n+function clearFilters() {\n+\n+    // Reset the search query\n+    let queryInput = document.querySelector('#query');\n+    queryInput.value = \"\";\n+    // queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n+\n+    // Reset the publication type to its default value\n+    let publicationTypeSelect = document.querySelector('#publication_type');\n+    publicationTypeSelect.value = \"any\"; // replace \"any\" with whatever your default value is\n+    // publicationTypeSelect.dispatchEvent(new Event('input', {bubbles: true}));\n+\n+    // Reset the sorting option\n+    let sortingOptions = document.querySelectorAll('[name=\"sorting\"]');\n+    sortingOptions.forEach(option => {\n+        option.checked = option.value == \"newest\"; // replace \"default\" with whatever your default value is\n+        // option.dispatchEvent(new Event('input', {bubbles: true}));\n+    });\n+\n+    // Perform a new search with the reset filters\n+    queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n+}\n+\n+document.addEventListener('DOMContentLoaded', () => {\n+\n+    //let queryInput = document.querySelector('#query');\n+    //queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n+\n+    let urlParams = new URLSearchParams(window.location.search);\n+    let queryParam = urlParams.get('query');\n+\n+    if (queryParam && queryParam.trim() !== '') {\n+\n+        const queryInput = document.getElementById('query');\n+        queryInput.value = queryParam\n+        queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n+        console.log(\"throw event\");\n+\n+    } else {\n+        const queryInput = document.getElementById('query');\n+        queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n+    }\n+});\n\\ No newline at end of file"
      },
      {
        "sha": "aeecfe91fcc0578b65df2bc65560658e6b3c5c33",
        "filename": "app/modules/explore/forms.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2Fforms.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2Fforms.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fforms.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,6 @@\n+from flask_wtf import FlaskForm\n+from wtforms import SubmitField\n+\n+\n+class ExploreForm(FlaskForm):\n+    submit = SubmitField('Submit')"
      },
      {
        "sha": "29ae7a24b58460b8765c1aeef6fc487d6ffb0029",
        "filename": "app/modules/explore/repositories.py",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,61 @@\n+import re\n+from sqlalchemy import any_, or_\n+import unidecode\n+from app.modules.dataset.models import Author, DSMetaData, DataSet, PublicationType\n+from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from core.repositories.BaseRepository import BaseRepository\n+\n+\n+class ExploreRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(DataSet)\n+\n+    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n+        # Normalize and remove unwanted characters\n+        normalized_query = unidecode.unidecode(query).lower()\n+        cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n+\n+        filters = []\n+        for word in cleaned_query.split():\n+            filters.append(DSMetaData.title.ilike(f\"%{word}%\"))\n+            filters.append(DSMetaData.description.ilike(f\"%{word}%\"))\n+            filters.append(Author.name.ilike(f\"%{word}%\"))\n+            filters.append(Author.affiliation.ilike(f\"%{word}%\"))\n+            filters.append(Author.orcid.ilike(f\"%{word}%\"))\n+            filters.append(FMMetaData.uvl_filename.ilike(f\"%{word}%\"))\n+            filters.append(FMMetaData.title.ilike(f\"%{word}%\"))\n+            filters.append(FMMetaData.description.ilike(f\"%{word}%\"))\n+            filters.append(FMMetaData.publication_doi.ilike(f\"%{word}%\"))\n+            filters.append(FMMetaData.tags.ilike(f\"%{word}%\"))\n+            filters.append(DSMetaData.tags.ilike(f\"%{word}%\"))\n+\n+        datasets = (\n+            self.model.query\n+            .join(DataSet.ds_meta_data)\n+            .join(DSMetaData.authors)\n+            .join(DataSet.feature_models)\n+            .join(FeatureModel.fm_meta_data)\n+            .filter(or_(*filters))\n+            .filter(DSMetaData.dataset_doi.isnot(None))  # Exclude datasets with empty dataset_doi\n+        )\n+\n+        if publication_type != \"any\":\n+            matching_type = None\n+            for member in PublicationType:\n+                if member.value.lower() == publication_type:\n+                    matching_type = member\n+                    break\n+\n+            if matching_type is not None:\n+                datasets = datasets.filter(DSMetaData.publication_type == matching_type.name)\n+\n+        if tags:\n+            datasets = datasets.filter(DSMetaData.tags.ilike(any_(f\"%{tag}%\" for tag in tags)))\n+\n+        # Order by created_at\n+        if sorting == \"oldest\":\n+            datasets = datasets.order_by(self.model.created_at.asc())\n+        else:\n+            datasets = datasets.order_by(self.model.created_at.desc())\n+\n+        return datasets.all()"
      },
      {
        "sha": "489b36f50dd89c351ce67a298056648a25eedee8",
        "filename": "app/modules/explore/routes.py",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Froutes.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,18 @@\n+from flask import render_template, request, jsonify\n+\n+from app.modules.explore import explore_bp\n+from app.modules.explore.forms import ExploreForm\n+from app.modules.explore.services import ExploreService\n+\n+\n+@explore_bp.route('/explore', methods=['GET', 'POST'])\n+def index():\n+    if request.method == 'GET':\n+        query = request.args.get('query', '')\n+        form = ExploreForm()\n+        return render_template('explore/index.html', form=form, query=query)\n+\n+    if request.method == 'POST':\n+        criteria = request.get_json()\n+        datasets = ExploreService().filter(**criteria)\n+        return jsonify([dataset.to_dict() for dataset in datasets])"
      },
      {
        "sha": "db4670655386ed6d00b4aa8b61db2e91da54352b",
        "filename": "app/modules/explore/services.py",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,10 @@\n+from app.modules.explore.repositories import ExploreRepository\n+from core.services.BaseService import BaseService\n+\n+\n+class ExploreService(BaseService):\n+    def __init__(self):\n+        super().__init__(ExploreRepository())\n+\n+    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n+        return self.repository.filter(query, sorting, publication_type, tags, **kwargs)"
      },
      {
        "sha": "3ab05cabf9007c3efb4048ca43ce48b84ea65681",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "added",
        "additions": 155,
        "deletions": 0,
        "changes": 155,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,155 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}Explore{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h2 mb-3\"><b>Explore</b></h1>\n+\n+    <div class=\"row\">\n+\n+        <h3 class=\"h3 mb-3\">\n+                <span id=\"results_number\"></span>\n+            </h3>\n+\n+        <div class=\"col-lg-7 scrollable-column\">\n+\n+\n+            <div class=\"row\">\n+\n+                <div id=\"results\"></div>\n+\n+                <div class=\"col text-center\" id=\"results_not_found\">\n+                    <img src=\"{{ url_for('static', filename='img/items/not_found.svg') }}\"\n+                         style=\"width: 50%; max-width: 100px; height: auto; margin-top: 30px\"/>\n+                    <p style=\"margin-top: 20px\">\n+                        We have not found any datasets that meet your search criteria. <br>How about trying some others?\n+                    </p>\n+                </div>\n+\n+                <div id=\"results_not_found\" style=\"text-align: center;\">\n+\n+                </div>\n+\n+\n+            </div>\n+        </div>\n+\n+        <div class=\"col-lg-5 fixed-column\" id=\"filters\">\n+\n+            {{ form.hidden_tag() }}\n+\n+            <div class=\"row\">\n+\n+                <div class=\"col-12\">\n+\n+                    <div class=\"row\">\n+\n+                        <div class=\"col-12\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"query\">\n+                                    Search for datasets by title, description, authors, tags, UVL files...\n+                                </label>\n+                                <input class=\"form-control\" id=\"query\" name=\"query\" required=\"\" type=\"text\"\n+                                       value=\"\" autofocus>\n+                            </div>\n+                        </div>\n+\n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"publication_type\">Filter by publication\n+                                    type</label>\n+                                <select class=\"form-control\" id=\"publication_type\" name=\"publication_type\"\n+                                        required=\"\">\n+                                    <option value=\"any\">Any</option>\n+                                    <option value=\"none\">None</option>\n+                                    <option value=\"annotationcollection\">Annotation Collection</option>\n+                                    <option value=\"book\">Book</option>\n+                                    <option value=\"section\">Book Section</option>\n+                                    <option value=\"conferencepaper\">Conference Paper</option>\n+                                    <option value=\"datamanagementplan\">Data Management Plan</option>\n+                                    <option value=\"article\">Journal Article</option>\n+                                    <option value=\"patent\">Patent</option>\n+                                    <option value=\"preprint\">Preprint</option>\n+                                    <option value=\"deliverable\">Project Deliverable</option>\n+                                    <option value=\"milestone\">Project Milestone</option>\n+                                    <option value=\"proposal\">Proposal</option>\n+                                    <option value=\"report\">Report</option>\n+                                    <option value=\"softwaredocumentation\">Software Documentation</option>\n+                                    <option value=\"taxonomictreatment\">Taxonomic Treatment</option>\n+                                    <option value=\"technicalnote\">Technical Note</option>\n+                                    <option value=\"thesis\">Thesis</option>\n+                                    <option value=\"workingpaper\">Working Paper</option>\n+                                    <option value=\"other\">Other</option>\n+                                </select>\n+                            </div>\n+\n+                        </div>\n+\n+                    </div>\n+\n+                    <div class=\"row\">\n+\n+                        <div class=\"col-6\">\n+\n+                            <div>\n+                                Sort results by creation date\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"newest\" name=\"sorting\"\n+                                           checked=\"\">\n+                                    <span class=\"form-check-label\">\n+                                      Newest first\n+                                    </span>\n+                                </label>\n+                                <label class=\"form-check\">\n+                                    <input class=\"form-check-input\" type=\"radio\" value=\"oldest\" name=\"sorting\">\n+                                    <span class=\"form-check-label\">\n+                                      Oldest first\n+                                    </span>\n+                                </label>\n+                            </div>\n+\n+                        </div>\n+\n+                    </div>\n+\n+                    <div class=\"row\">\n+\n+                        <div class=\"col-12\">\n+\n+                            <div class=\"mt-3\">\n+\n+                                <div id=\"authors\">\n+\n+                                </div>\n+\n+                                <button id=\"clear-filters\" class=\"btn btn-outline-primary\">\n+                                    <i data-feather=\"x-circle\" style=\"vertical-align: middle; margin-top: -2px\"></i>\n+                                    Clear filters\n+                                </button>\n+\n+\n+                            </div>\n+\n+                        </div>\n+                    </div>\n+\n+                </div>\n+\n+            </div>\n+\n+            <div class=\"row\">\n+\n+            </div>\n+\n+        </div>\n+\n+\n+    </div>\n+\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('explore.scripts') }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "1985b2059b6cf46e6081428163fb32f77b870713",
        "filename": "app/modules/featuremodel/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+featuremodel_bp = BaseBlueprint('featuremodel', __name__, template_folder='templates')"
      },
      {
        "sha": "2da3c876a2136a6cf3dbfc7b113d325eb66458e0",
        "filename": "app/modules/featuremodel/assets/scripts.js",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Fassets%2Fscripts.js?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+console.log(\"Hi, I am a script loaded from featuremodel module\");"
      },
      {
        "sha": "49913c891917cf8aaa3129e01ff5e64dfcb0ba9e",
        "filename": "app/modules/featuremodel/forms.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Fforms.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Fforms.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Fforms.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,6 @@\n+from flask_wtf import FlaskForm\n+from wtforms import SubmitField\n+\n+\n+class FeaturemodelForm(FlaskForm):\n+    submit = SubmitField('Save featuremodel')"
      },
      {
        "sha": "c51f8977e163bc2b92420c0ef640d81964bf9067",
        "filename": "app/modules/featuremodel/models.py",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Fmodels.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,42 @@\n+from app import db\n+from sqlalchemy import Enum as SQLAlchemyEnum\n+\n+from app.modules.dataset.models import Author, PublicationType\n+\n+\n+class FeatureModel(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    data_set_id = db.Column(db.Integer, db.ForeignKey('data_set.id'), nullable=False)\n+    fm_meta_data_id = db.Column(db.Integer, db.ForeignKey('fm_meta_data.id'))\n+    files = db.relationship('Hubfile', backref='feature_model', lazy=True, cascade=\"all, delete\")\n+    fm_meta_data = db.relationship('FMMetaData', uselist=False, backref='feature_model', cascade=\"all, delete\")\n+\n+    def __repr__(self):\n+        return f'FeatureModel<{self.id}>'\n+\n+\n+class FMMetaData(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    uvl_filename = db.Column(db.String(120), nullable=False)\n+    title = db.Column(db.String(120), nullable=False)\n+    description = db.Column(db.Text, nullable=False)\n+    publication_type = db.Column(SQLAlchemyEnum(PublicationType), nullable=False)\n+    publication_doi = db.Column(db.String(120))\n+    tags = db.Column(db.String(120))\n+    uvl_version = db.Column(db.String(120))\n+    fm_metrics_id = db.Column(db.Integer, db.ForeignKey('fm_metrics.id'))\n+    fm_metrics = db.relationship('FMMetrics', uselist=False, backref='fm_meta_data')\n+    authors = db.relationship('Author', backref='fm_metadata', lazy=True, cascade=\"all, delete\",\n+                              foreign_keys=[Author.fm_meta_data_id])\n+\n+    def __repr__(self):\n+        return f'FMMetaData<{self.title}'\n+\n+\n+class FMMetrics(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    solver = db.Column(db.Text)\n+    not_solver = db.Column(db.Text)\n+\n+    def __repr__(self):\n+        return f'FMMetrics<solver={self.solver}, not_solver={self.not_solver}>'"
      },
      {
        "sha": "4f6685ae0f6b9fbaf01cff1b49dcf6c0d695f3be",
        "filename": "app/modules/featuremodel/repositories.py",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Frepositories.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,18 @@\n+\n+from sqlalchemy import func\n+from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from core.repositories.BaseRepository import BaseRepository\n+\n+\n+class FeatureModelRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(FeatureModel)\n+\n+    def count_feature_models(self) -> int:\n+        max_id = self.model.query.with_entities(func.max(self.model.id)).scalar()\n+        return max_id if max_id is not None else 0\n+\n+\n+class FMMetaDataRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(FMMetaData)"
      },
      {
        "sha": "a47e6fcb29a19d11f1cd541fb217e8fd936a803f",
        "filename": "app/modules/featuremodel/routes.py",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Froutes.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,7 @@\n+from flask import render_template\n+from app.modules.featuremodel import featuremodel_bp\n+\n+\n+@featuremodel_bp.route('/featuremodel', methods=['GET'])\n+def index():\n+    return render_template('featuremodel/index.html')"
      },
      {
        "sha": "f7d27c1528c5abb220b0e0d423e319a745c90686",
        "filename": "app/modules/featuremodel/seeders.py",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Fseeders.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Fseeders.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,12 @@\n+from core.seeders.BaseSeeder import BaseSeeder\n+\n+\n+class FeaturemodelSeeder(BaseSeeder):\n+\n+    def run(self):\n+\n+        data = [\n+            # Create any Model object you want to make seed\n+        ]\n+\n+        self.seed(data)"
      },
      {
        "sha": "d6fad6c8f0e15a6f19a276f934f8922984346664",
        "filename": "app/modules/featuremodel/services.py",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Fservices.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,22 @@\n+from app.modules.featuremodel.repositories import FMMetaDataRepository, FeatureModelRepository\n+from app.modules.hubfile.services import HubfileService\n+from core.services.BaseService import BaseService\n+\n+\n+class FeatureModelService(BaseService):\n+    def __init__(self):\n+        super().__init__(FeatureModelRepository())\n+        self.hubfile_service = HubfileService()\n+\n+    def total_feature_model_views(self) -> int:\n+        return self.hubfile_service.total_hubfile_views()\n+\n+    def total_feature_model_downloads(self) -> int:\n+        return self.hubfile_service.total_hubfile_downloads()\n+\n+    def count_feature_models(self):\n+        return self.repository.count_feature_models()\n+\n+    class FMMetaDataService(BaseService):\n+        def __init__(self):\n+            super().__init__(FMMetaDataRepository())"
      },
      {
        "sha": "01597e4a6b06a9d36028d01965324dd8ffa33ffd",
        "filename": "app/modules/featuremodel/templates/featuremodel/index.html",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Ftemplates%2Ffeaturemodel%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Ftemplates%2Ffeaturemodel%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Ftemplates%2Ffeaturemodel%2Findex.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,11 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}View featuremodel{% endblock %}\n+\n+{% block content %}\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('featuremodel.scripts') }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/featuremodel/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Ftests%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "71160998b0b1b7f87e0c2a29b2c4fe1f34af9c3e",
        "filename": "app/modules/featuremodel/tests/locustfile.py",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Ftests%2Flocustfile.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,21 @@\n+from locust import HttpUser, TaskSet, task\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class FeaturemodelBehavior(TaskSet):\n+    def on_start(self):\n+        self.index()\n+\n+    @task\n+    def index(self):\n+        response = self.client.get(\"/featuremodel\")\n+\n+        if response.status_code != 200:\n+            print(f\"Featuremodel index failed: {response.status_code}\")\n+\n+\n+class FeaturemodelUser(HttpUser):\n+    tasks = [FeaturemodelBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "92e025d8c566ecd3e736276992e3c279d7077cdb",
        "filename": "app/modules/featuremodel/tests/test_selenium.py",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Ftests%2Ftest_selenium.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,35 @@\n+from selenium.common.exceptions import NoSuchElementException\n+import time\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def test_featuremodel_index():\n+\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the index page\n+        driver.get(f'{host}/featuremodel')\n+\n+        # Wait a little while to make sure the page has loaded completely\n+        time.sleep(4)\n+\n+        try:\n+\n+            pass\n+\n+        except NoSuchElementException:\n+            raise AssertionError('Test failed!')\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_featuremodel_index()"
      },
      {
        "sha": "950421eb7b4ee15f00b45f83730c55dd2dda9336",
        "filename": "app/modules/featuremodel/tests/test_unit.py",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Ffeaturemodel%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Ffeaturemodel%2Ftests%2Ftest_unit.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,24 @@\n+import pytest\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        # Add HERE new elements to the database that you want to exist in the test context.\n+        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_sample_assertion(test_client):\n+    \"\"\"\n+    Sample test to verify that the test framework and environment are working correctly.\n+    It does not communicate with the Flask application; it only performs a simple assertion to\n+    confirm that the tests in this module can be executed.\n+    \"\"\"\n+    greeting = \"Hello, World!\"\n+    assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\""
      },
      {
        "sha": "17f2d8133d83b3e60dd0c2ceb7c2908877d2bba4",
        "filename": "app/modules/flamapy/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+flamapy_bp = BaseBlueprint('flamapy', __name__, template_folder='templates')"
      },
      {
        "sha": "888aaa6de2608b31e145a171347404b6be236018",
        "filename": "app/modules/flamapy/assets/scripts.js",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Fassets%2Fscripts.js?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+console.log(\"Hi, I am a script from flamapy module ;)\")\n\\ No newline at end of file"
      },
      {
        "sha": "39c42b5e7809bc6c0b1af4ebf144c76537cdf8ee",
        "filename": "app/modules/flamapy/forms.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Fforms.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Fforms.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Fforms.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,6 @@\n+from flask_wtf import FlaskForm\n+from wtforms import SubmitField\n+\n+\n+class FlamapyForm(FlaskForm):\n+    submit = SubmitField('Save flamapy')"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/flamapy/models.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Fmodels.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "b9fe86f0a1a1b99940891294c1ce3b819a36d3ba",
        "filename": "app/modules/flamapy/repositories.py",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Frepositories.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,7 @@\n+from app.modules.flamapy.models import Flamapy\n+from core.repositories.BaseRepository import BaseRepository\n+\n+\n+class FlamapyRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(Flamapy)"
      },
      {
        "sha": "d12f2c72d1e5496b79fc20e86342206d88cac236",
        "filename": "app/modules/flamapy/routes.py",
        "status": "added",
        "additions": 117,
        "deletions": 0,
        "changes": 117,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,117 @@\n+import logging\n+from app.modules.hubfile.services import HubfileService\n+from flask import send_file, jsonify\n+from app.modules.flamapy import flamapy_bp\n+from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n+from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n+import tempfile\n+import os\n+\n+from antlr4 import CommonTokenStream, FileStream\n+from uvl.UVLCustomLexer import UVLCustomLexer\n+from uvl.UVLPythonParser import UVLPythonParser\n+from antlr4.error.ErrorListener import ErrorListener\n+\n+logger = logging.getLogger(__name__)\n+\n+\n+@flamapy_bp.route('/flamapy/check_uvl/<int:file_id>', methods=['GET'])\n+def check_uvl(file_id):\n+    class CustomErrorListener(ErrorListener):\n+        def __init__(self):\n+            self.errors = []\n+\n+        def syntaxError(self, recognizer, offendingSymbol, line, column, msg, e):\n+            if \"\\\\t\" in msg:\n+                warning_message = (\n+                    f\"The UVL has the following warning that prevents reading it: \"\n+                    f\"Line {line}:{column} - {msg}\"\n+                )\n+                print(warning_message)\n+                self.errors.append(warning_message)\n+            else:\n+                error_message = (\n+                    f\"The UVL has the following error that prevents reading it: \"\n+                    f\"Line {line}:{column} - {msg}\"\n+                )\n+                self.errors.append(error_message)\n+\n+    try:\n+        hubfile = HubfileService().get_by_id(file_id)\n+        input_stream = FileStream(hubfile.get_path())\n+        lexer = UVLCustomLexer(input_stream)\n+\n+        error_listener = CustomErrorListener()\n+\n+        lexer.removeErrorListeners()\n+        lexer.addErrorListener(error_listener)\n+\n+        stream = CommonTokenStream(lexer)\n+        parser = UVLPythonParser(stream)\n+\n+        parser.removeErrorListeners()\n+        parser.addErrorListener(error_listener)\n+\n+        # tree = parser.featureModel()\n+\n+        if error_listener.errors:\n+            return jsonify({\"errors\": error_listener.errors}), 400\n+\n+        # Optional: Print the parse tree\n+        # print(tree.toStringTree(recog=parser))\n+\n+        return jsonify({\"message\": \"Valid Model\"}), 200\n+\n+    except Exception as e:\n+        return jsonify({\"error\": str(e)}), 500\n+\n+\n+@flamapy_bp.route('/flamapy/valid/<int:file_id>', methods=['GET'])\n+def valid(file_id):\n+    return jsonify({\"success\": True, \"file_id\": file_id})\n+\n+\n+@flamapy_bp.route('/flamapy/to_glencoe/<int:file_id>', methods=['GET'])\n+def to_glencoe(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.json', delete=False)\n+    try:\n+        hubfile = HubfileService().get_or_404(file_id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+        GlencoeWriter(temp_file.name, fm).transform()\n+\n+        # Return the file in the response\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_glencoe.txt')\n+    finally:\n+        # Clean up the temporary file\n+        os.remove(temp_file.name)\n+\n+\n+@flamapy_bp.route('/flamapy/to_splot/<int:file_id>', methods=['GET'])\n+def to_splot(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.splx', delete=False)\n+    try:\n+        hubfile = HubfileService().get_by_id(file_id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+        SPLOTWriter(temp_file.name, fm).transform()\n+\n+        # Return the file in the response\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_splot.txt')\n+    finally:\n+        # Clean up the temporary file\n+        os.remove(temp_file.name)\n+\n+\n+@flamapy_bp.route('/flamapy/to_cnf/<int:file_id>', methods=['GET'])\n+def to_cnf(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.cnf', delete=False)\n+    try:\n+        hubfile = HubfileService().get_by_id(file_id)\n+        fm = UVLReader(hubfile.get_path()).transform()\n+        sat = FmToPysat(fm).transform()\n+        DimacsWriter(temp_file.name, sat).transform()\n+\n+        # Return the file in the response\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_cnf.txt')\n+    finally:\n+        # Clean up the temporary file\n+        os.remove(temp_file.name)"
      },
      {
        "sha": "45172294f0a9b66005216d2082f928567cb46fbc",
        "filename": "app/modules/flamapy/seeders.py",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Fseeders.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Fseeders.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,12 @@\n+from core.seeders.BaseSeeder import BaseSeeder\n+\n+\n+class FlamapySeeder(BaseSeeder):\n+\n+    def run(self):\n+\n+        data = [\n+            # Create any Model object you want to make seed\n+        ]\n+\n+        self.seed(data)"
      },
      {
        "sha": "e0f09de2bf0d87c8de15a5d754bcc40eccce861a",
        "filename": "app/modules/flamapy/services.py",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Fservices.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,7 @@\n+from app.modules.flamapy.repositories import FlamapyRepository\n+from core.services.BaseService import BaseService\n+\n+\n+class FlamapyService(BaseService):\n+    def __init__(self):\n+        super().__init__(FlamapyRepository())"
      },
      {
        "sha": "f75ff78988e9ded441122a03b99fb6a1fd9f4c7e",
        "filename": "app/modules/flamapy/templates/flamapy/index.html",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Ftemplates%2Fflamapy%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Ftemplates%2Fflamapy%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftemplates%2Fflamapy%2Findex.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,11 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}View flamapy{% endblock %}\n+\n+{% block content %}\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('flamapy.scripts') }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/flamapy/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "1e73253e3c068bf19c18b91459cd65fffbc8bf7e",
        "filename": "app/modules/flamapy/tests/locustfile.py",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2Flocustfile.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,21 @@\n+from locust import HttpUser, TaskSet, task\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class FlamapyBehavior(TaskSet):\n+    def on_start(self):\n+        self.index()\n+\n+    @task\n+    def index(self):\n+        response = self.client.get(\"/flamapy\")\n+\n+        if response.status_code != 200:\n+            print(f\"Flamapy index failed: {response.status_code}\")\n+\n+\n+class FlamapyUser(HttpUser):\n+    tasks = [FlamapyBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "c182ff2b20cb451751c46912af7ae16fdb54c5a1",
        "filename": "app/modules/flamapy/tests/test_selenium.py",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_selenium.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,35 @@\n+from selenium.common.exceptions import NoSuchElementException\n+import time\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def test_flamapy_index():\n+\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the index page\n+        driver.get(f'{host}/flamapy')\n+\n+        # Wait a little while to make sure the page has loaded completely\n+        time.sleep(4)\n+\n+        try:\n+\n+            pass\n+\n+        except NoSuchElementException:\n+            raise AssertionError('Test failed!')\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_flamapy_index()"
      },
      {
        "sha": "950421eb7b4ee15f00b45f83730c55dd2dda9336",
        "filename": "app/modules/flamapy/tests/test_unit.py",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,24 @@\n+import pytest\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        # Add HERE new elements to the database that you want to exist in the test context.\n+        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_sample_assertion(test_client):\n+    \"\"\"\n+    Sample test to verify that the test framework and environment are working correctly.\n+    It does not communicate with the Flask application; it only performs a simple assertion to\n+    confirm that the tests in this module can be executed.\n+    \"\"\"\n+    greeting = \"Hello, World!\"\n+    assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\""
      },
      {
        "sha": "21a20dd81c8787d37deba2e96334aeab1f4fd80a",
        "filename": "app/modules/hubfile/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+hubfile_bp = BaseBlueprint('hubfile', __name__, template_folder='templates')"
      },
      {
        "sha": "6d3a6790f5c445f222344252acc7bb88d5bc1b7e",
        "filename": "app/modules/hubfile/assets/scripts.js",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Fassets%2Fscripts.js?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+console.log(\"Hi, I am a script loaded from hubfile module\");"
      },
      {
        "sha": "0e946b4787a859d05038fb1f37850f79de4a48d5",
        "filename": "app/modules/hubfile/forms.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Fforms.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Fforms.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Fforms.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,6 @@\n+from flask_wtf import FlaskForm\n+from wtforms import SubmitField\n+\n+\n+class HubfileForm(FlaskForm):\n+    submit = SubmitField('Save hubfile')"
      },
      {
        "sha": "76b2bdac9cdf84aeb7f679f3d5a08bee9067dd4e",
        "filename": "app/modules/hubfile/models.py",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Fmodels.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,72 @@\n+from datetime import datetime, timezone\n+from flask import request\n+from app import db\n+from app.modules.auth.models import User\n+from app.modules.dataset.models import DataSet\n+\n+\n+class Hubfile(db.Model):\n+    __tablename__ = 'file'\n+    id = db.Column(db.Integer, primary_key=True)\n+    name = db.Column(db.String(120), nullable=False)\n+    checksum = db.Column(db.String(120), nullable=False)\n+    size = db.Column(db.Integer, nullable=False)\n+    feature_model_id = db.Column(db.Integer, db.ForeignKey('feature_model.id'), nullable=False)\n+\n+    def get_formatted_size(self):\n+        from app.modules.dataset.services import SizeService\n+        return SizeService().get_human_readable_size(self.size)\n+\n+    def get_owner_user(self) -> User:\n+        from app.modules.hubfile.services import HubfileService\n+        return HubfileService().get_owner_user_by_hubfile(self)\n+\n+    def get_dataset(self) -> DataSet:\n+        from app.modules.hubfile.services import HubfileService\n+        return HubfileService().get_dataset_by_hubfile(self)\n+\n+    def get_path(self) -> DataSet:\n+        from app.modules.hubfile.services import HubfileService\n+        return HubfileService().get_path_by_hubfile(self)\n+\n+    def to_dict(self):\n+        return {\n+            'id': self.id,\n+            'name': self.name,\n+            'checksum': self.checksum,\n+            'size_in_bytes': self.size,\n+            'size_in_human_format': self.get_formatted_size(),\n+            'url': f'{request.host_url.rstrip(\"/\")}/file/download/{self.id}',\n+        }\n+\n+    def __repr__(self):\n+        return f'File<{self.id}>'\n+\n+\n+class HubfileViewRecord(db.Model):\n+    __tablename__ = 'file_view_record'\n+    id = db.Column(db.Integer, primary_key=True)\n+    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=True)\n+    file_id = db.Column(db.Integer, db.ForeignKey('file.id'), nullable=False)\n+    view_date = db.Column(db.DateTime, default=lambda: datetime.now(timezone.utc))\n+    view_cookie = db.Column(db.String(36))\n+\n+    def __repr__(self):\n+        return '<FileViewRecord {}>'.format(self.id)\n+\n+\n+class HubfileDownloadRecord(db.Model):\n+    __tablename__ = 'file_download_record'\n+    id = db.Column(db.Integer, primary_key=True)\n+    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=True)\n+    file_id = db.Column(db.Integer, db.ForeignKey('file.id'))\n+    download_date = db.Column(db.DateTime, nullable=False, default=lambda: datetime.now(timezone.utc))\n+    download_cookie = db.Column(db.String(36), nullable=False)\n+\n+    def __repr__(self):\n+        return (\n+            f'<FileDownload id={self.id} '\n+            f'file_id={self.file_id} '\n+            f'date={self.download_date} '\n+            f'cookie={self.download_cookie}>'\n+        )"
      },
      {
        "sha": "fec554e7245e900ac41af2923ea1063af28d3258",
        "filename": "app/modules/hubfile/repositories.py",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Frepositories.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,43 @@\n+from sqlalchemy import func\n+from app.modules.auth.models import User\n+from app.modules.dataset.models import DataSet\n+from app.modules.featuremodel.models import FeatureModel\n+from app.modules.hubfile.models import Hubfile, HubfileDownloadRecord, HubfileViewRecord\n+from core.repositories.BaseRepository import BaseRepository\n+from app import db\n+\n+\n+class HubfileRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(Hubfile)\n+\n+    def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n+        return (\n+            db.session.query(User)\n+            .join(DataSet)\n+            .join(FeatureModel)\n+            .join(Hubfile)\n+            .filter(Hubfile.id == hubfile.id)\n+            .first()\n+        )\n+\n+    def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n+        return db.session.query(DataSet).join(FeatureModel).join(Hubfile).filter(Hubfile.id == hubfile.id).first()\n+\n+\n+class HubfileViewRecordRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(HubfileViewRecord)\n+\n+    def total_hubfile_views(self) -> int:\n+        max_id = self.model.query.with_entities(func.max(self.model.id)).scalar()\n+        return max_id if max_id is not None else 0\n+\n+\n+class HubfileDownloadRecordRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(HubfileDownloadRecord)\n+\n+    def total_hubfile_downloads(self) -> int:\n+        max_id = self.model.query.with_entities(func.max(self.model.id)).scalar()\n+        return max_id if max_id is not None else 0"
      },
      {
        "sha": "b03c9bf65b20997991fa67ad4471aa612d810cd2",
        "filename": "app/modules/hubfile/routes.py",
        "status": "added",
        "additions": 98,
        "deletions": 0,
        "changes": 98,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Froutes.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,98 @@\n+from datetime import datetime, timezone\n+import os\n+import uuid\n+from flask import current_app, jsonify, make_response, request, send_from_directory\n+from flask_login import current_user\n+from app.modules.hubfile import hubfile_bp\n+from app.modules.hubfile.models import HubfileDownloadRecord, HubfileViewRecord\n+from app.modules.hubfile.services import HubfileDownloadRecordService, HubfileService\n+\n+from app import db\n+\n+\n+@hubfile_bp.route(\"/file/download/<int:file_id>\", methods=[\"GET\"])\n+def download_file(file_id):\n+    file = HubfileService().get_or_404(file_id)\n+    filename = file.name\n+\n+    directory_path = f\"uploads/user_{file.feature_model.data_set.user_id}/dataset_{file.feature_model.data_set_id}/\"\n+    parent_directory_path = os.path.dirname(current_app.root_path)\n+    file_path = os.path.join(parent_directory_path, directory_path)\n+\n+    # Get the cookie from the request or generate a new one if it does not exist\n+    user_cookie = request.cookies.get(\"file_download_cookie\")\n+    if not user_cookie:\n+        user_cookie = str(uuid.uuid4())\n+\n+    # Check if the download record already exists for this cookie\n+    existing_record = HubfileDownloadRecord.query.filter_by(\n+        user_id=current_user.id if current_user.is_authenticated else None,\n+        file_id=file_id,\n+        download_cookie=user_cookie\n+    ).first()\n+\n+    if not existing_record:\n+        # Record the download in your database\n+        HubfileDownloadRecordService().create(\n+            user_id=current_user.id if current_user.is_authenticated else None,\n+            file_id=file_id,\n+            download_date=datetime.now(timezone.utc),\n+            download_cookie=user_cookie,\n+        )\n+\n+    # Save the cookie to the user's browser\n+    resp = make_response(\n+        send_from_directory(directory=file_path, path=filename, as_attachment=True)\n+    )\n+    resp.set_cookie(\"file_download_cookie\", user_cookie)\n+\n+    return resp\n+\n+\n+@hubfile_bp.route('/file/view/<int:file_id>', methods=['GET'])\n+def view_file(file_id):\n+    file = HubfileService().get_or_404(file_id)\n+    filename = file.name\n+\n+    directory_path = f\"uploads/user_{file.feature_model.data_set.user_id}/dataset_{file.feature_model.data_set_id}/\"\n+    parent_directory_path = os.path.dirname(current_app.root_path)\n+    file_path = os.path.join(parent_directory_path, directory_path, filename)\n+\n+    try:\n+        if os.path.exists(file_path):\n+            with open(file_path, 'r') as f:\n+                content = f.read()\n+\n+            user_cookie = request.cookies.get('view_cookie')\n+            if not user_cookie:\n+                user_cookie = str(uuid.uuid4())\n+\n+            # Check if the view record already exists for this cookie\n+            existing_record = HubfileViewRecord.query.filter_by(\n+                user_id=current_user.id if current_user.is_authenticated else None,\n+                file_id=file_id,\n+                view_cookie=user_cookie\n+            ).first()\n+\n+            if not existing_record:\n+                # Register file view\n+                new_view_record = HubfileViewRecord(\n+                    user_id=current_user.id if current_user.is_authenticated else None,\n+                    file_id=file_id,\n+                    view_date=datetime.now(),\n+                    view_cookie=user_cookie\n+                )\n+                db.session.add(new_view_record)\n+                db.session.commit()\n+\n+            # Prepare response\n+            response = jsonify({'success': True, 'content': content})\n+            if not request.cookies.get('view_cookie'):\n+                response = make_response(response)\n+                response.set_cookie('view_cookie', user_cookie, max_age=60*60*24*365*2)\n+\n+            return response\n+        else:\n+            return jsonify({'success': False, 'error': 'File not found'}), 404\n+    except Exception as e:\n+        return jsonify({'success': False, 'error': str(e)}), 500"
      },
      {
        "sha": "b93f960c8f2af90e344abe585837edeb6b1cf9e8",
        "filename": "app/modules/hubfile/seeders.py",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Fseeders.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Fseeders.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,12 @@\n+from core.seeders.BaseSeeder import BaseSeeder\n+\n+\n+class HubfileSeeder(BaseSeeder):\n+\n+    def run(self):\n+\n+        data = [\n+            # Create any Model object you want to make seed\n+        ]\n+\n+        self.seed(data)"
      },
      {
        "sha": "266b6b1680c2f438e09a513c497211eb158b449f",
        "filename": "app/modules/hubfile/services.py",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Fservices.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,49 @@\n+import os\n+from app.modules.auth.models import User\n+from app.modules.dataset.models import DataSet\n+from app.modules.hubfile.models import Hubfile\n+from app.modules.hubfile.repositories import (\n+    HubfileDownloadRecordRepository,\n+    HubfileRepository,\n+    HubfileViewRecordRepository\n+)\n+from core.services.BaseService import BaseService\n+\n+\n+class HubfileService(BaseService):\n+    def __init__(self):\n+        super().__init__(HubfileRepository())\n+        self.hubfile_view_record_repository = HubfileViewRecordRepository()\n+        self.hubfile_download_record_repository = HubfileDownloadRecordRepository()\n+\n+    def get_owner_user_by_hubfile(self, hubfile: Hubfile) -> User:\n+        return self.repository.get_owner_user_by_hubfile(hubfile)\n+\n+    def get_dataset_by_hubfile(self, hubfile: Hubfile) -> DataSet:\n+        return self.repository.get_dataset_by_hubfile(hubfile)\n+\n+    def get_path_by_hubfile(self, hubfile: Hubfile) -> str:\n+\n+        hubfile_user = self.get_owner_user_by_hubfile(hubfile)\n+        hubfile_dataset = self.get_dataset_by_hubfile(hubfile)\n+        working_dir = os.getenv('WORKING_DIR')\n+\n+        path = os.path.join(working_dir,\n+                            'uploads',\n+                            f'user_{hubfile_user.id}',\n+                            f'dataset_{hubfile_dataset.id}',\n+                            hubfile.name)\n+\n+        return path\n+\n+    def total_hubfile_views(self) -> int:\n+        return self.hubfile_view_record_repository.total_hubfile_views()\n+\n+    def total_hubfile_downloads(self) -> int:\n+        hubfile_download_record_repository = HubfileDownloadRecordRepository()\n+        return hubfile_download_record_repository.total_hubfile_downloads()\n+\n+\n+class HubfileDownloadRecordService(BaseService):\n+    def __init__(self):\n+        super().__init__(HubfileDownloadRecordRepository())"
      },
      {
        "sha": "bf989b12fede7c3e473bee3baee6eabaea4491b2",
        "filename": "app/modules/hubfile/templates/hubfile/index.html",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Ftemplates%2Fhubfile%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Ftemplates%2Fhubfile%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Ftemplates%2Fhubfile%2Findex.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,11 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}View hubfile{% endblock %}\n+\n+{% block content %}\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('hubfile.scripts') }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/hubfile/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Ftests%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "0a93e370bedec149f36361a359028581ccaf6e24",
        "filename": "app/modules/hubfile/tests/locustfile.py",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Ftests%2Flocustfile.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,21 @@\n+from locust import HttpUser, TaskSet, task\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class HubfileBehavior(TaskSet):\n+    def on_start(self):\n+        self.index()\n+\n+    @task\n+    def index(self):\n+        response = self.client.get(\"/hubfile\")\n+\n+        if response.status_code != 200:\n+            print(f\"Hubfile index failed: {response.status_code}\")\n+\n+\n+class HubfileUser(HttpUser):\n+    tasks = [HubfileBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "e86eef52600a450e1544b92aabb344c361f8b4fa",
        "filename": "app/modules/hubfile/tests/test_selenium.py",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_selenium.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,35 @@\n+from selenium.common.exceptions import NoSuchElementException\n+import time\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def test_hubfile_index():\n+\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the index page\n+        driver.get(f'{host}/hubfile')\n+\n+        # Wait a little while to make sure the page has loaded completely\n+        time.sleep(4)\n+\n+        try:\n+\n+            pass\n+\n+        except NoSuchElementException:\n+            raise AssertionError('Test failed!')\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_hubfile_index()"
      },
      {
        "sha": "950421eb7b4ee15f00b45f83730c55dd2dda9336",
        "filename": "app/modules/hubfile/tests/test_unit.py",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_unit.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,24 @@\n+import pytest\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        # Add HERE new elements to the database that you want to exist in the test context.\n+        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_sample_assertion(test_client):\n+    \"\"\"\n+    Sample test to verify that the test framework and environment are working correctly.\n+    It does not communicate with the Flask application; it only performs a simple assertion to\n+    confirm that the tests in this module can be executed.\n+    \"\"\"\n+    greeting = \"Hello, World!\"\n+    assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\""
      },
      {
        "sha": "ddef5239e4801c59b788a4bbca4625ba9d215b72",
        "filename": "app/modules/profile/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fprofile%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+profile_bp = BaseBlueprint('profile', __name__, template_folder='templates')"
      },
      {
        "sha": "138b965263bed079eb7acbba7fb9e93c4edcccf4",
        "filename": "app/modules/profile/assets/scripts.js",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fprofile%2Fassets%2Fscripts.js?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+console.log(\"Hi, I am a script loaded from profile module\");"
      },
      {
        "sha": "868a382b212ba451a35f201bd1981b381a0fda8c",
        "filename": "app/modules/profile/forms.py",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Fforms.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Fforms.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fprofile%2Fforms.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,18 @@\n+from flask_wtf import FlaskForm\n+from wtforms import StringField, SubmitField\n+from wtforms.validators import DataRequired, Length, Regexp, Optional\n+\n+\n+class UserProfileForm(FlaskForm):\n+    name = StringField('Name', validators=[DataRequired(), Length(max=100)])\n+    surname = StringField('Surname', validators=[DataRequired(), Length(max=100)])\n+    orcid = StringField('ORCID', validators=[\n+        Optional(),\n+        Length(min=19, max=19, message='ORCID must have 16 numbers separated by dashes'),\n+        Regexp(r'^\\d{4}-\\d{4}-\\d{4}-\\d{4}$', message='Invalid ORCID format')\n+    ])\n+    affiliation = StringField('Affiliation', validators=[\n+        Optional(),\n+        Length(min=5, max=100)\n+    ])\n+    submit = SubmitField('Save profile')"
      },
      {
        "sha": "cdeeba4f5afebe088ff7c7a2b3032c45daca36e9",
        "filename": "app/modules/profile/models.py",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fprofile%2Fmodels.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,16 @@\n+from app import db\n+\n+\n+class UserProfile(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), unique=True, nullable=False)\n+\n+    orcid = db.Column(db.String(19))\n+    affiliation = db.Column(db.String(100))\n+    name = db.Column(db.String(100), nullable=False)\n+    surname = db.Column(db.String(100), nullable=False)\n+\n+    def save(self):\n+        if not self.id:\n+            db.session.add(self)\n+        db.session.commit()"
      },
      {
        "sha": "0c4b789b1158483e413c2730092e5cb6c3cbc9b6",
        "filename": "app/modules/profile/repositories.py",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fprofile%2Frepositories.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,7 @@\n+from app.modules.profile.models import UserProfile\n+from core.repositories.BaseRepository import BaseRepository\n+\n+\n+class UserProfileRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(UserProfile)"
      },
      {
        "sha": "8cae4442bef033da9f1de8bbc2cf58c28f8ec321",
        "filename": "app/modules/profile/routes.py",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fprofile%2Froutes.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,55 @@\n+from app.modules.auth.services import AuthenticationService\n+from app.modules.dataset.models import DataSet\n+from flask import render_template, redirect, url_for, request\n+from flask_login import login_required, current_user\n+\n+from app import db\n+from app.modules.profile import profile_bp\n+from app.modules.profile.forms import UserProfileForm\n+from app.modules.profile.services import UserProfileService\n+\n+\n+@profile_bp.route(\"/profile/edit\", methods=[\"GET\", \"POST\"])\n+@login_required\n+def edit_profile():\n+    auth_service = AuthenticationService()\n+    profile = auth_service.get_authenticated_user_profile\n+    if not profile:\n+        return redirect(url_for(\"public.index\"))\n+\n+    form = UserProfileForm()\n+    if request.method == \"POST\":\n+        service = UserProfileService()\n+        result, errors = service.update_profile(profile.id, form)\n+        return service.handle_service_response(\n+            result, errors, \"profile.edit_profile\", \"Profile updated successfully\", \"profile/edit.html\", form\n+        )\n+\n+    return render_template(\"profile/edit.html\", form=form)\n+\n+\n+@profile_bp.route('/profile/summary')\n+@login_required\n+def my_profile():\n+    page = request.args.get('page', 1, type=int)\n+    per_page = 5\n+\n+    user_datasets_pagination = db.session.query(DataSet) \\\n+        .filter(DataSet.user_id == current_user.id) \\\n+        .order_by(DataSet.created_at.desc()) \\\n+        .paginate(page=page, per_page=per_page, error_out=False)\n+\n+    total_datasets_count = db.session.query(DataSet) \\\n+        .filter(DataSet.user_id == current_user.id) \\\n+        .count()\n+\n+    print(user_datasets_pagination.items)\n+\n+    return render_template(\n+        'profile/summary.html',\n+        user_profile=current_user.profile,\n+        user=current_user,\n+        datasets=user_datasets_pagination.items,\n+        pagination=user_datasets_pagination,\n+        total_datasets=total_datasets_count\n+    )"
      },
      {
        "sha": "5b459beaeea7737e66249e8471c517a485f44adf",
        "filename": "app/modules/profile/services.py",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fprofile%2Fservices.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,14 @@\n+from app.modules.profile.repositories import UserProfileRepository\n+from core.services.BaseService import BaseService\n+\n+\n+class UserProfileService(BaseService):\n+    def __init__(self):\n+        super().__init__(UserProfileRepository())\n+\n+    def update_profile(self, user_profile_id, form):\n+        if form.validate():\n+            updated_instance = self.update(user_profile_id, **form.data)\n+            return updated_instance, None\n+\n+        return None, form.errors"
      },
      {
        "sha": "0ccdf16fc5adacd3427198743c904ad4743ad221",
        "filename": "app/modules/profile/templates/profile/edit.html",
        "status": "added",
        "additions": 128,
        "deletions": 0,
        "changes": 128,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Ftemplates%2Fprofile%2Fedit.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Ftemplates%2Fprofile%2Fedit.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fprofile%2Ftemplates%2Fprofile%2Fedit.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,128 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}View dataset{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h3 mb-3\">Edit profile</h1>\n+\n+    {% with messages = get_flashed_messages(with_categories=true) %}\n+      {% if messages %}\n+        {% for category, message in messages %}\n+          <div class=\"row\">\n+            <div class=\"col-12 mb-3\">\n+              <!-- Aqu\u00ed se elige la clase en funci\u00f3n de la categor\u00eda del mensaje -->\n+              <div class=\"alert alert-{{ category }}\" role=\"alert\">\n+                <div class=\"alert-message\">\n+                  {% if category == 'success' %}\n+                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"check-circle\"></i> Success</h4>\n+                  {% elif category == 'error' %}\n+                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"x-circle\"></i> Error</h4>\n+                  {% endif %}\n+                  <p style=\"margin-bottom: 0px\">{{ message }}</p>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        {% endfor %}\n+      {% endif %}\n+    {% endwith %}\n+\n+\n+    <div class=\"row\">\n+\n+        <div class=\"col-12 col-lg-6\">\n+\n+            <form method=\"POST\" action=\"{{ url_for('profile.edit_profile') }}\" class=\"needs-validation\" novalidate>\n+                {{ form.hidden_tag() }}\n+\n+                <div class=\"row form-group\">\n+\n+                    <div class=\"col-6\">\n+                        {{ form.surname.label(class=\"form-label\") }}\n+                        {% set surname_value = form.surname.data if form.surname.data else current_user.profile.surname %}\n+                        {{ form.surname(class=\"form-control\", placeholder=\"Enter your surname\", required=true, value=surname_value) }}\n+                        {% for error in form.surname.errors %}\n+                            <span style=\"color: red;\">{{ error }}</span>\n+                            <br>\n+                        {% endfor %}\n+                    </div>\n+\n+                    <div class=\"col-6\">\n+                        {{ form.name.label(class=\"form-label\") }}\n+                        {% set name_value = form.name.data if form.name.data else current_user.profile.name %}\n+                        {{ form.name(class=\"form-control\", placeholder=\"Enter your name\",\n+                        required=true, value=name_value) }}\n+                        {% for error in form.name.errors %}\n+                            <span style=\"color: red;\">{{ error }}</span>\n+                            <br>\n+                        {% endfor %}\n+                    </div>\n+\n+                </div>\n+\n+                <div class=\"row form-group mt-3\">\n+\n+                    <div class=\"col-6\">\n+                        {{ form.affiliation.label(class=\"form-label\") }}\n+                        {% set affiliation_value = form.affiliation.data if form.affiliation.data else (current_user.profile.affiliation  if current_user.profile.affiliation else '') %}\n+                        {{ form.affiliation(class=\"form-control\", placeholder=\"Enter your affiliation\", required=true, value=affiliation_value) }}\n+                        {% for error in form.affiliation.errors %}\n+                            <span style=\"color: red;\">{{ error }}</span>\n+                            <br>\n+                        {% endfor %}\n+                    </div>\n+\n+                </div>\n+\n+                <div class=\"row form-group mt-3\">\n+\n+                    <div class=\"col-12\">\n+                        {{ form.orcid.label(class=\"form-label\") }}\n+                        {% set orcid_value = form.orcid.data if form.orcid.data else (current_user.profile.orcid  if current_user.profile.orcid else '') %}\n+                        {{ form.orcid(class=\"form-control\", placeholder=\"Enter your ORCID (0000-0123-4567-8901)\",\n+                        required=true, value=orcid_value) }}\n+                        {% for error in form.orcid.errors %}\n+                            <span style=\"color: red;\">{{ error }}</span>\n+                            <br>\n+                        {% endfor %}\n+                    </div>\n+\n+                </div>\n+\n+                <div class=\"row form-group\">\n+\n+                    <div class=\"col-12 mt-3\">\n+                        {{ form.submit(class=\"btn btn-primary\") }}\n+                    </div>\n+\n+\n+                </div>\n+            </form>\n+\n+\n+        </div>\n+\n+        <div class=\"row\">\n+\n+            <div class=\"col-lg-6 col-12\">\n+\n+                {% if error %}\n+\n+                    <div class=\"mt-3\">\n+                        <p style=\"color: red;\"><strong>Error:</strong> {{ error }}\n+                    </div>\n+\n+                {% endif %}\n+\n+            </div>\n+\n+        </div>\n+\n+    </div>\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('profile.scripts') }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "3e32f4b3f0da4e5f245de9d39d3036350c706f87",
        "filename": "app/modules/profile/templates/profile/summary.html",
        "status": "added",
        "additions": 117,
        "deletions": 0,
        "changes": 117,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Ftemplates%2Fprofile%2Fsummary.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Ftemplates%2Fprofile%2Fsummary.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fprofile%2Ftemplates%2Fprofile%2Fsummary.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,117 @@\n+{% extends \"base_template.html\" %}\n+\n+\n+{% block title %}User Profile{% endblock %}\n+\n+{% block content %}\n+\n+<h1 class=\"h3 mb-3\">User profile</h1>\n+\n+<div class=\"row\">\n+\n+    <div class=\"col-12 col-md-8 col-lg-6\"> \n+\n+        <div class=\"card shadow-sm\" > \n+            <div class=\"card-header card-dark\"> \n+                <h5 class=\"card-title mb-0\" style=\"color: white; font-size: 15px;\">Profile Information</h5>\n+            </div>\n+            <div class=\"card-body\">\n+                <p class=\"card-text h5\"><i class=\"fa fa-user\"></i> <strong>Name:</strong> {{user_profile.name}}</p>\n+                <p class=\"card-text h5\"><i class=\"fa fa-user-circle\"></i> <strong>Surname:</strong> {{user_profile.surname}}</p>\n+                <p class=\"card-text h5\"><i class=\"fa fa-building\"></i> <strong>Affiliation:</strong> {{user_profile.affiliation}}</p>\n+                <p class=\"card-text h5\"><i class=\"fa fa-id-card\"></i> <strong>Orcid:</strong> {{user_profile.orcid}}</p>\n+                <p class=\"card-text h5\"><i class=\"fa fa-envelope\"></i> <strong>Email:</strong> {{user.email}}</p>\n+                <p class=\"card-text h5\"><i class=\"fa fa-database\"></i> <strong>Uploaded datasets:</strong> {{ total_datasets }} datasets</p>\n+            </div>\n+            \n+        </div>\n+\n+    </div>\n+\n+</div>\n+\n+<h1 class=\"h3 mb-3\">User datasets</h1>\n+\n+    {% if datasets %}\n+    <div class=\"row\">\n+        <div class=\"col-12\">\n+            <div class=\"card shadow-sm\">\n+                <div class=\"card-body\">\n+                    <table class=\"table table-hover\">\n+                        <thead class=\"table-light\">\n+                            <tr>\n+                                <th>Title</th>\n+                                <th>Publication type</th>\n+                            </tr>\n+                        </thead>\n+                        <tbody>\n+                          \n+                            {% for dataset in datasets %}\n+                            <tr>\n+                                <td>\n+\n+                                    {% if dataset.ds_meta_data.dataset_doi %}\n+                                        <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                            {{ dataset.ds_meta_data.title }}\n+                                        </a>\n+                                    {% else %}\n+                                        <a href=\"{{ url_for('dataset.get_unsynchronized_dataset', dataset_id=dataset.id) }}\">\n+                                            {{ dataset.ds_meta_data.title }}\n+                                        </a>                                    \n+                                    {% endif %}\n+\n+                                    \n+                                </td>\n+                                <td>{{ dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n+                            </tr>\n+                            {% else %}\n+                          \n+                            <tr>\n+                                <td colspan=\"2\">No datasets uploaded.</td>\n+                            </tr>\n+                            {% endfor %}\n+                        </tbody>\n+                    </table>\n+                </div>\n+            </div>\n+        </div>\n+    </div>\n+    \n+   <div class=\"row\">\n+        <div class=\"col-12\">\n+            <div class=\"d-flex justify-content-center mt-4\">\n+                <nav>\n+                    <ul class=\"pagination\">\n+                        <li class=\"page-item {% if not pagination.has_prev %}disabled{% endif %}\">\n+                            <a class=\"page-link\" href=\"{% if pagination.has_prev %}{{ url_for('profile.my_profile', page=pagination.prev_num) }}{% else %}# {% endif %}\" aria-label=\"Previous\">\n+                                &laquo;\n+                            </a>\n+                        </li>\n+                        {% for num in pagination.iter_pages() %}\n+                        <li class=\"page-item {% if num == pagination.page %}active{% endif %}\">\n+                            <a class=\"page-link\" href=\"{{ url_for('profile.my_profile', page=num) }}\">\n+                                {{ num }}\n+                            </a>\n+                        </li>\n+                        {% endfor %}\n+                        <li class=\"page-item {% if not pagination.has_next %}disabled{% endif %}\">\n+                            <a class=\"page-link\" href=\"{% if pagination.has_next %}{{ url_for('profile.my_profile', page=pagination.next_num) }}{% else %}# {% endif %}\" aria-label=\"Next\">\n+                                &raquo;\n+                            </a>\n+                        </li>\n+                    </ul>\n+                </nav>\n+            </div>\n+        </div>\n+    </div>\n+    {% else %}\n+    <div class=\"alert alert-info\" role=\"alert\">\n+        No datasets found\n+    </div>\n+    {% endif %}\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('profile.scripts') }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/profile/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fprofile%2Ftests%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "51be18576155bbf0cccfa0d58a39615025eb8b4e",
        "filename": "app/modules/profile/tests/test_unit.py",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fprofile%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fprofile%2Ftests%2Ftest_unit.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,38 @@\n+import pytest\n+\n+from app import db\n+from app.modules.conftest import login, logout\n+from app.modules.auth.models import User\n+from app.modules.profile.models import UserProfile\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    for module testing (por example, new users)\n+    \"\"\"\n+    with test_client.application.app_context():\n+        user_test = User(email='user@example.com', password='test1234')\n+        db.session.add(user_test)\n+        db.session.commit()\n+\n+        profile = UserProfile(user_id=user_test.id, name=\"Name\", surname=\"Surname\")\n+        db.session.add(profile)\n+        db.session.commit()\n+\n+    yield test_client\n+\n+\n+def test_edit_profile_page_get(test_client):\n+    \"\"\"\n+    Tests access to the profile editing page via a GET request.\n+    \"\"\"\n+    login_response = login(test_client, \"user@example.com\", \"test1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+\n+    response = test_client.get(\"/profile/edit\")\n+    assert response.status_code == 200, \"The profile editing page could not be accessed.\"\n+    assert b\"Edit profile\" in response.data, \"The expected content is not present on the page\"\n+\n+    logout(test_client)"
      },
      {
        "sha": "8fad38e9e3db95874141373d129c46fa4cb67684",
        "filename": "app/modules/public/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fpublic%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fpublic%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+public_bp = BaseBlueprint('public', __name__, template_folder='templates')"
      },
      {
        "sha": "061917e8b2cb0b9f16c6f958aae0e652944dcb05",
        "filename": "app/modules/public/assets/scripts.js",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fpublic%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fpublic%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Fassets%2Fscripts.js?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+console.log(\"Hi, I am a script loaded from public module\");"
      },
      {
        "sha": "4ae03991e79ba2803915b59559986d87b334ec38",
        "filename": "app/modules/public/routes.py",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fpublic%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fpublic%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Froutes.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,39 @@\n+import logging\n+\n+from flask import render_template\n+\n+from app.modules.featuremodel.services import FeatureModelService\n+from app.modules.public import public_bp\n+from app.modules.dataset.services import DataSetService\n+\n+logger = logging.getLogger(__name__)\n+\n+\n+@public_bp.route(\"/\")\n+def index():\n+    logger.info(\"Access index\")\n+    dataset_service = DataSetService()\n+    feature_model_service = FeatureModelService()\n+\n+    # Statistics: total datasets and feature models\n+    datasets_counter = dataset_service.count_synchronized_datasets()\n+    feature_models_counter = feature_model_service.count_feature_models()\n+\n+    # Statistics: total downloads\n+    total_dataset_downloads = dataset_service.total_dataset_downloads()\n+    total_feature_model_downloads = feature_model_service.total_feature_model_downloads()\n+\n+    # Statistics: total views\n+    total_dataset_views = dataset_service.total_dataset_views()\n+    total_feature_model_views = feature_model_service.total_feature_model_views()\n+\n+    return render_template(\n+        \"public/index.html\",\n+        datasets=dataset_service.latest_synchronized(),\n+        datasets_counter=datasets_counter,\n+        feature_models_counter=feature_models_counter,\n+        total_dataset_downloads=total_dataset_downloads,\n+        total_feature_model_downloads=total_feature_model_downloads,\n+        total_dataset_views=total_dataset_views,\n+        total_feature_model_views=total_feature_model_views\n+    )"
      },
      {
        "sha": "177d154f8918f7b7e00b54ef54bbd20b25e08a9a",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "added",
        "additions": 286,
        "deletions": 0,
        "changes": 286,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,286 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}Main page{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h2 mb-3\">\n+\n+        <b>Latest</b> datasets\n+    </h1>\n+\n+    <div class=\"row\">\n+\n+        <div class=\"mb-2 col-xl-8 col-lg-12 col-md-12 col-sm-12\">\n+\n+            {% for dataset in datasets %}\n+                <div class=\"card\">\n+                    <div class=\"card-body\">\n+                        <div class=\"d-flex align-items-center justify-content-between\">\n+                            <h2>\n+\n+                                <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                    {{ dataset.ds_meta_data.title }}\n+                                </a>\n+\n+                            </h2>\n+                            <div>\n+                                <span class=\"badge bg-secondary\">{{ dataset.get_cleaned_publication_type() }}</span>\n+                            </div>\n+                        </div>\n+                        <p class=\"text-secondary\">{{ dataset.created_at.strftime('%B %d, %Y at %I:%M %p') }}</p>\n+\n+                        <div class=\"row mb-2\">\n+\n+                            <div class=\"col-12\">\n+                                <p class=\"card-text\">{{ dataset.ds_meta_data.description }}</p>\n+                            </div>\n+\n+                        </div>\n+\n+                        <div class=\"row mb-2 mt-4\">\n+\n+                            <div class=\"col-12\">\n+                                {% for author in dataset.ds_meta_data.authors %}\n+                                    <p class=\"p-0 m-0\">\n+                                        {{ author.name }}\n+                                        {% if author.affiliation %}\n+                                            ({{ author.affiliation }})\n+                                        {% endif %}\n+                                        {% if author.orcid %}\n+                                            ({{ author.orcid }})\n+                                        {% endif %}\n+                                    </p>\n+                                {% endfor %}\n+                            </div>\n+\n+\n+                        </div>\n+\n+                        <div class=\"row mb-2\">\n+\n+                            <div class=\"col-12\">\n+                                <a href=\"{{ dataset.get_uvlhub_doi() }}\">{{ dataset.get_uvlhub_doi() }}</a>\n+                                 <div id=\"dataset_doi_uvlhub_{{ dataset.id }}\" style=\"display: none\">\n+                                {{ dataset.get_uvlhub_doi() }}\n+                            </div>\n+\n+                            <i data-feather=\"clipboard\" class=\"center-button-icon\"\n+                               style=\"cursor: pointer\"\n+                               onclick=\"copyText('dataset_doi_uvlhub_{{ dataset.id }}')\"></i>\n+                            </div>\n+\n+\n+\n+                        </div>\n+\n+                        <div class=\"row mb-2\">\n+\n+                            <div class=\"col-12\">\n+                                {% for tag in dataset.ds_meta_data.tags.split(',') %}\n+                                    <span class=\"badge bg-secondary\">{{ tag.strip() }}</span>\n+                                {% endfor %}\n+                            </div>\n+\n+                        </div>\n+\n+                        <div class=\"row  mt-4\">\n+                            <div class=\"col-12\">\n+                                <a href=\"{{ dataset.get_uvlhub_doi() }}\" class=\"btn btn-outline-primary btn-sm\"\n+                                   style=\"border-radius: 5px;\">\n+                                    <i data-feather=\"eye\" class=\"center-button-icon\"></i>\n+                                    View dataset\n+                                </a>\n+\n+                                <a href=\"/dataset/download/{{ dataset.id }}\" class=\"btn btn-outline-primary btn-sm\"\n+                                   style=\"border-radius: 5px;\">\n+                                    <i data-feather=\"download\" class=\"center-button-icon\"></i>\n+                                    Download ({{ dataset.get_file_total_size_for_human() }})\n+                                </a>\n+                            </div>\n+                        </div>\n+\n+\n+                    </div>\n+                </div>\n+            {% endfor %}\n+\n+            <a href=\"/explore\" class=\"btn btn-primary\">\n+                <i data-feather=\"search\" class=\"center-button-icon\"></i>\n+                Explore more datasets\n+            </a>\n+\n+        </div>\n+\n+        <div class=\"col-xl-4 col-lg-12 col-md-12 col-sm-12\">\n+\n+            <div class=\"row\">\n+\n+                <div class=\"col-12\">\n+\n+                <div class=\"card\">\n+\n+                    <div class=\"card-body\">\n+\n+                        <h2> <b>Hub statistics</b> </h2>\n+                    \n+                        <h1 class=\"h2 mb-3\">\n+                    \n+                            <h4 class=\"h4 mb-3\" class=\"stats-color\">\n+                                <i data-feather=\"database\" class=\"align-middle mr-2 stats-color\"></i>&nbsp;{{ datasets_counter }} datasets\n+                            </h4>\n+                    \n+                            <h4 class=\"h4 mb-3\" class=\"stats-color\">\n+                                <i data-feather=\"file\" class=\"align-middle mr-2 stats-color\"></i>&nbsp;{{ feature_models_counter }} feature models\n+                            </h4>\n+                    \n+                            <h4 class=\"h4 mb-3\" class=\"stats-color\">\n+                                <i data-feather=\"eye\" class=\"align-middle mr-2 stats-color\"></i>&nbsp;{{ total_dataset_views }} datasets viewed\n+                            </h4>\n+                    \n+                            <h4 class=\"h4 mb-3\" class=\"stats-color\">\n+                                <i data-feather=\"eye\" class=\"align-middle mr-2 stats-color\"></i>&nbsp;{{ total_feature_model_views }} feature models viewed\n+                            </h4>\n+                    \n+                            <h4 class=\"h4 mb-3\" class=\"stats-color\">\n+                                <i data-feather=\"download\" class=\"align-middle mr-2 stats-color\"></i>&nbsp;{{ total_dataset_downloads }} datasets downloaded\n+                            </h4>\n+                    \n+                            <h4 class=\"h4\" class=\"stats-color\">\n+                                <i data-feather=\"download\" class=\"align-middle mr-2 stats-color\"></i>&nbsp;{{ total_feature_model_downloads }} feature models downloaded\n+                            </h4>\n+                    \n+                        </h1>\n+                    \n+                    </div>                    \n+\n+                </div>\n+            </div>\n+\n+                <div class=\"col-12\">\n+\n+                    <div class=\"card\">\n+\n+                        <div class=\"card-body\">\n+                    \n+\n+                    \n+                            <h2> <b>Related publication</b> </h2>\n+                            \n+                            David Romero-Organvidez, Jos\u00e9 A. Galindo, Chico Sundermann, Jose-Miguel Horcas, David Benavides. \n+                            <i>UVLHub: A feature model data repository using UVL and open science principles</i>,\n+                            Journal of Systems and Software,\n+                            2024,\n+                            112150,\n+                            ISSN 0164-1212,\n+                            <a href=\"https://doi.org/10.1016/j.jss.2024.112150\" target=\"_blank\">https://doi.org/10.1016/j.jss.2024.112150</a>\n+                    \n+                        </div>\n+                    \n+                        <div class=\"card-body mt-0 pt-0\">\n+                    \n+                            <button onclick=\"copyText('bibtex_cite')\" class=\"btn btn-light\" style=\"border-radius: 5px; margin-right: 10px\">\n+                                <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                                Copy in BibTex\n+                            </button>\n+                    \n+                            <button onclick=\"copyText('ris_cite')\" class=\"btn btn-light\" style=\"border-radius: 5px;\">\n+                                <i data-feather=\"clipboard\" class=\"center-button-icon\"></i>\n+                                Copy in RIS\n+                            </button>\n+                    \n+                        </div>\n+                    \n+                    </div>\n+                    \n+\n+                </div>\n+\n+                {% if current_user.is_anonymous %}\n+\n+                    <div class=\"col-12\">\n+                        <div class=\"card card-welcome\">\n+\n+                            <h2 class=\"card-title card-title-light\">\n+                                Let's get started!\n+                            </h2>\n+\n+                            <div class=\"card-body card-body-slim\">\n+\n+                                What are you waiting for to upload your fantastic feature models in UVL format?\n+\n+                                <div class=\"row mt-2\">\n+\n+                                    <div class=\"col-12\">\n+                                        <a href=\"/signup\"\n+                                           class=\"btn btn-dark\"\n+                                           style=\"background-color: #0662A6; border-color: #0662A6\">\n+                                            <i data-feather=\"user-plus\" class=\"center-button-icon\"></i>\n+                                            Sign up\n+                                        </a>\n+                                    </div>\n+\n+                                    <div class=\"col-12 mt-2\">\n+                                        <a href=\"/login\"\n+                                           class=\"btn btn-outline-dark\" style=\" border-color: #0662A6\">\n+                                            <i data-feather=\"log-in\" class=\"center-button-icon\"></i>\n+                                            I am already registered!\n+                                        </a>\n+                                    </div>\n+\n+                                </div>\n+\n+\n+                            </div>\n+\n+                        </div>\n+                    </div>\n+\n+                {% endif %}\n+\n+                <div class=\"col-12\">\n+\n+                    <div class=\"card card-dark\">\n+\n+                        <h2 class=\"card-title card-title-light\">\n+                            What is <b>uvlhub.io</b>?\n+                        </h2>\n+\n+                        <div class=\"card-body card-body-slim\">\n+\n+                            <strong>uvlhub.io</strong> is a repository of feature models in UVL format integrated with\n+                            Zenodo and FlamaPy developed by DiversoLab\n+\n+                        </div>\n+\n+                        <h2 class=\"card-title card-title-light\">\n+                            Can I contribute?\n+                        </h2>\n+\n+                        <div class=\"card-body card-body-slim\">\n+\n+                            Sure! You can make a fork of our official repository on GitHub,\n+                            create fantastic features and then make a pull request to us.\n+\n+                            <br><br>\n+\n+                            <a href=\"https://github.com/diverso-lab/uvlhub\" target=\"_blank\" class=\"btn btn-primary\">\n+                                Go to GitHub</a>\n+\n+                        </div>\n+\n+                    </div>\n+                </div>\n+\n+            </div>\n+\n+\n+        </div>\n+\n+    </div>\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('public.scripts') }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "c24fe5bb9e65c74aec64d71269f3617ed1bb776b",
        "filename": "app/modules/pytest.ini",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fpytest.ini",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fpytest.ini",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fpytest.ini?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,3 @@\n+[pytest]\n+filterwarnings =\n+    ignore::DeprecationWarning"
      },
      {
        "sha": "48f9e4cb1ddc118d056d029e79614d0e4eced9ff",
        "filename": "app/modules/team/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fteam%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fteam%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fteam%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+team_bp = BaseBlueprint('team', __name__, template_folder='templates')"
      },
      {
        "sha": "4ca80ac056a0cf5fe47534a91d7408a003bcebfc",
        "filename": "app/modules/team/assets/scripts.js",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fteam%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fteam%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fteam%2Fassets%2Fscripts.js?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+console.log(\"Hi, I am a script loaded from team module\");"
      },
      {
        "sha": "e59587964741560e6d61abca4df9c0b9eee9b02d",
        "filename": "app/modules/team/routes.py",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fteam%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fteam%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fteam%2Froutes.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,8 @@\n+from flask import render_template\n+\n+from app.modules.team import team_bp\n+\n+\n+@team_bp.route('/team', methods=['GET'])\n+def index():\n+    return render_template('team/index.html')"
      },
      {
        "sha": "8ff8c610bee5f53c7d1284801a991068089e4595",
        "filename": "app/modules/team/templates/team/index.html",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fteam%2Ftemplates%2Fteam%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fteam%2Ftemplates%2Fteam%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fteam%2Ftemplates%2Fteam%2Findex.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,74 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}View dataset{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h3 mb-3\"><b>Team</b></h1>\n+\n+\n+    <div class=\"row row-cols-1 row-cols-lg-3 row-cols-md-2 row-cols-12 g-4\">\n+\n+        <div class=\"col\">\n+\n+            <div class=\"card h-100\">\n+                <img src=\"{{ url_for('static', filename='img/logos/university_of_seville.svg') }}\"\n+                     class=\"card-img-top custom-img\" alt=\"University of Seville\">\n+                <div class=\"card-body custom-card-body\">\n+                    <h5 class=\"card-title\">University of Seville, Spain</h5>\n+                    <p class=\"card-text\">\n+                        Performs active development of the application and is responsible for code maintenance,\n+                        deployment, operation of services and new functionalities.\n+                    </p>\n+                </div>\n+                <div class=\"card-footer\">\n+                    <a href=\"http://www.us.es\" target=\"_blank\">www.us.es</a>\n+                </div>\n+            </div>\n+\n+        </div>\n+\n+        <div class=\"col\">\n+\n+            <div class=\"card h-100\">\n+                <img src=\"{{ url_for('static', filename='img/logos/university_of_malaga.svg') }}\"\n+                     class=\"card-img-top custom-img\" alt=\"University of Malaga\">\n+                <div class=\"card-body custom-card-body\">\n+                    <h5 class=\"card-title\">University of Malaga, Spain</h5>\n+                    <p class=\"card-text\">\n+                        Responsible for active research, technical support\n+                    </p>\n+                </div>\n+                <div class=\"card-footer\">\n+                    <a href=\"http://www.uma.es\" target=\"_blank\">www.uma.es</a>\n+                </div>\n+            </div>\n+\n+        </div>\n+\n+        <div class=\"col\">\n+\n+            <div class=\"card h-100\">\n+                <img src=\"{{ url_for('static', filename='img/logos/university_of_ulm.svg') }}\"\n+                     class=\"card-img-top custom-img\" alt=\"University of Ulm\">\n+                <div class=\"card-body custom-card-body\">\n+                    <h5 class=\"card-title\">University of Ulm, Germany</h5>\n+                    <p class=\"card-text\">\n+                        Provides population of consistent datasets with rich metadata for initial loading of models into\n+                        UVL. Responsible for the UVL parser. Active research.\n+                    </p>\n+                </div>\n+                <div class=\"card-footer\">\n+                    <a href=\"http://www.uni-ulm.de\" target=\"_blank\">www.uni-ulm.de</a>\n+                </div>\n+            </div>\n+\n+        </div>\n+\n+    </div>\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('team.scripts') }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "22635ac456edaa384916ebe838651569f2b6a1cb",
        "filename": "app/modules/webhook/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fwebhook%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+webhook_bp = BaseBlueprint('webhook', __name__, template_folder='templates')"
      },
      {
        "sha": "5ae36dd6b2a4bbc06542eaaa8ebf9b690fee43ed",
        "filename": "app/modules/webhook/assets/scripts.js",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fwebhook%2Fassets%2Fscripts.js?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+console.log(\"Hi, I am a script loaded from webhook module\");"
      },
      {
        "sha": "cefc8595f30cd0f075015b2193369ec9adb9bdd8",
        "filename": "app/modules/webhook/forms.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Fforms.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Fforms.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fwebhook%2Fforms.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,6 @@\n+from flask_wtf import FlaskForm\n+from wtforms import SubmitField\n+\n+\n+class WebhookForm(FlaskForm):\n+    submit = SubmitField('Save webhook')"
      },
      {
        "sha": "4340dd08743f3a387319559aa5fd7c67b2af612e",
        "filename": "app/modules/webhook/models.py",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fwebhook%2Fmodels.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,5 @@\n+from app import db\n+\n+\n+class Webhook(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)"
      },
      {
        "sha": "4251f8ff5160ae2601791cc736e62c2bd6f1080f",
        "filename": "app/modules/webhook/repositories.py",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fwebhook%2Frepositories.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,7 @@\n+from app.modules.webhook.models import Webhook\n+from core.repositories.BaseRepository import BaseRepository\n+\n+\n+class WebhookRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(Webhook)"
      },
      {
        "sha": "4e6d99ba15eb4211efbd9b9dfcb0087a69463194",
        "filename": "app/modules/webhook/routes.py",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fwebhook%2Froutes.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,37 @@\n+from flask import request, abort\n+import os\n+from dotenv import load_dotenv\n+from app.modules.webhook import webhook_bp\n+from app.modules.webhook.services import WebhookService\n+load_dotenv()\n+\n+WEBHOOK_TOKEN = os.getenv('WEBHOOK_TOKEN')\n+\n+\n+@webhook_bp.route('/webhook/deploy', methods=['POST'])\n+def deploy():\n+\n+    token = request.headers.get('Authorization')\n+    if token != f\"Bearer {WEBHOOK_TOKEN}\":\n+        abort(403, description=\"Unauthorized\")\n+\n+    service = WebhookService()\n+\n+    web_container = service.get_web_container()\n+\n+    # Pull the latest code in the container\n+    service.execute_container_command(web_container, '/app/scripts/git_update.sh')\n+\n+    # Update dependencies in the container\n+    service.execute_container_command(web_container, 'pip install -r requirements.txt')\n+\n+    # Run migrations in the container\n+    service.execute_container_command(web_container, 'flask db upgrade')\n+\n+    # Log the deployment\n+    service.log_deployment(web_container)\n+\n+    # Ejecutar el script de reinicio en segundo plano\n+    service.restart_container(web_container)\n+\n+    return 'Deployment successful', 200"
      },
      {
        "sha": "aa6b7d5ac295651f4b18b828270ce4a68e94963b",
        "filename": "app/modules/webhook/seeders.py",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Fseeders.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fwebhook%2Fseeders.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,12 @@\n+from core.seeders.BaseSeeder import BaseSeeder\n+\n+\n+class WebhookSeeder(BaseSeeder):\n+\n+    def run(self):\n+\n+        data = [\n+            # Create any Model object you want to make seed\n+        ]\n+\n+        self.seed(data)"
      },
      {
        "sha": "7ed45163e80b10602ba1b7c26d390f8c370d3f62",
        "filename": "app/modules/webhook/services.py",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fwebhook%2Fservices.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,61 @@\n+from app.modules.webhook.repositories import WebhookRepository\n+from core.services.BaseService import BaseService\n+\n+from flask import abort\n+import subprocess\n+import docker\n+from datetime import datetime, timezone\n+\n+client = docker.from_env()\n+\n+\n+class WebhookService(BaseService):\n+    def __init__(self):\n+        super().__init__(WebhookRepository())\n+\n+    def get_web_container(self):\n+        try:\n+            return client.containers.get('web_app_container')\n+        except docker.errors.NotFound:\n+            abort(404, description=\"Web container not found.\")\n+\n+    def get_volume_name(self, container):\n+        volume_name = next(\n+            (\n+                mount.get('Name') or mount.get('Source')\n+                for mount in container.attrs['Mounts']\n+                if mount['Destination'] == '/app'\n+            ),\n+            None\n+        )\n+\n+        if not volume_name:\n+            raise ValueError(\"No volume or bind mount found mounted on /app\")\n+\n+        return volume_name\n+\n+    def execute_host_command(self, volume_name, command):\n+        try:\n+            subprocess.run([\n+                'docker', 'run', '--rm',\n+                '-v', f'{volume_name}:/app',\n+                '-v', '/var/run/docker.sock:/var/run/docker.sock',\n+                '-w', '/app',\n+                *command\n+            ], check=True)\n+        except subprocess.CalledProcessError as e:\n+            abort(500, description=f\"Host command failed: {str(e)}\")\n+\n+    def execute_container_command(self, container, command, workdir='/app'):\n+        exit_code, output = container.exec_run(command, workdir=workdir)\n+        if exit_code != 0:\n+            abort(500, description=f\"Container command failed: {output.decode('utf-8')}\")\n+        return output.decode('utf-8')\n+\n+    def log_deployment(self, container):\n+        log_entry = f\"Deployment successful at {datetime.now(timezone.utc).isoformat()}\\n\"\n+        log_file_path = \"/app/deployments.log\"\n+        self.execute_container_command(container, f\"sh -c 'echo \\\"{log_entry}\\\" >> {log_file_path}'\")\n+\n+    def restart_container(self, container):\n+        subprocess.Popen([\"/bin/sh\", \"/app/scripts/restart_container.sh\", container.id])"
      },
      {
        "sha": "9638993df13eec0cf688f9e4bc9f9747c694ef92",
        "filename": "app/modules/webhook/templates/webhook/index.html",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Ftemplates%2Fwebhook%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Ftemplates%2Fwebhook%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fwebhook%2Ftemplates%2Fwebhook%2Findex.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,11 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}View webhook{% endblock %}\n+\n+{% block content %}\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('webhook.scripts') }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/webhook/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fwebhook%2Ftests%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "1b8001ccaab345e88b7e42f5ee1e89ed3fa0064b",
        "filename": "app/modules/webhook/tests/test_selenium.py",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fwebhook%2Ftests%2Ftest_selenium.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,35 @@\n+from selenium.common.exceptions import NoSuchElementException\n+import time\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def test_webhook_index():\n+\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the index page\n+        driver.get(f'{host}/webhook')\n+\n+        # Wait a little while to make sure the page has loaded completely\n+        time.sleep(4)\n+\n+        try:\n+\n+            pass\n+\n+        except NoSuchElementException:\n+            raise AssertionError('Test failed!')\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_webhook_index()"
      },
      {
        "sha": "722bd6b0eb4a4437491b284bb00dd0d3dbdd7d0a",
        "filename": "app/modules/webhook/tests/test_unit.py",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fwebhook%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fwebhook%2Ftests%2Ftest_unit.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,25 @@\n+import pytest\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    for module testing (por example, new users)\n+    \"\"\"\n+    with test_client.application.app_context():\n+        # Add HERE new elements to the database that you want to exist in the test context.\n+        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_sample_assertion(test_client):\n+    \"\"\"\n+    Sample test to verify that the test framework and environment are working correctly.\n+    It does not communicate with the Flask application; it only performs a simple assertion to\n+    confirm that the tests in this module can be executed.\n+    \"\"\"\n+    greeting = \"Hello, World!\"\n+    assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\""
      },
      {
        "sha": "973e947552aaa428e0c052fb87aa9606266d7910",
        "filename": "app/modules/zenodo/.env.example",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2F.env.example",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2F.env.example",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2F.env.example?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+ZENODO_ACCESS_TOKEN=<GET_ACCESS_TOKEN_IN_ZENODO>\n\\ No newline at end of file"
      },
      {
        "sha": "997c9b7f77f37283ae41682e9f6400df5adcce64",
        "filename": "app/modules/zenodo/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+zenodo_bp = BaseBlueprint('zenodo', __name__, template_folder='templates')"
      },
      {
        "sha": "2252385d42ab3c9e17b38ab6468e56400da427e4",
        "filename": "app/modules/zenodo/assets/scripts.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Fassets%2Fscripts.js?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+function test_zenodo_connection() {\n+    var xhr = new XMLHttpRequest();\n+    xhr.open('GET', '/zenodo/test', true);\n+    xhr.setRequestHeader('Content-Type', 'application/json');\n+    xhr.onreadystatechange = function () {\n+        if (xhr.readyState === 4 && xhr.status === 200) {\n+            var response = JSON.parse(xhr.responseText);\n+            if (!response.success) {\n+                document.getElementById(\"test_zenodo_connection_error\").style.display = \"block\";\n+                console.log(response);\n+                console.log(response.success);\n+                console.log(response.messages);\n+            }\n+        } else if (xhr.readyState === 4 && xhr.status !== 200) {\n+            console.error('Error:', xhr.status);\n+        }\n+    };\n+    xhr.send();\n+}"
      },
      {
        "sha": "aa61d03e7eed91a324caa600996324464d3dc90c",
        "filename": "app/modules/zenodo/forms.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Fforms.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Fforms.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Fforms.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,6 @@\n+from flask_wtf import FlaskForm\n+from wtforms import SubmitField\n+\n+\n+class ZenodoForm(FlaskForm):\n+    submit = SubmitField('Save zenodo')"
      },
      {
        "sha": "be29e74b3b1d98f32ddef22eca2add5ffdfe0b57",
        "filename": "app/modules/zenodo/models.py",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Fmodels.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Fmodels.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,5 @@\n+from app import db\n+\n+\n+class Zenodo(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)"
      },
      {
        "sha": "202849a3e7120b01ff1c9f5ee884e9ba494e57c6",
        "filename": "app/modules/zenodo/repositories.py",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Frepositories.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Frepositories.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,7 @@\n+from app.modules.zenodo.models import Zenodo\n+from core.repositories.BaseRepository import BaseRepository\n+\n+\n+class ZenodoRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(Zenodo)"
      },
      {
        "sha": "d06fb4265e9587159f2f64b7e39eec2be455b6f5",
        "filename": "app/modules/zenodo/routes.py",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Froutes.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Froutes.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Froutes.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,15 @@\n+from flask import render_template\n+\n+from app.modules.zenodo import zenodo_bp\n+from app.modules.zenodo.services import ZenodoService\n+\n+\n+@zenodo_bp.route('/zenodo', methods=['GET'])\n+def index():\n+    return render_template('zenodo/index.html')\n+\n+\n+@zenodo_bp.route('/zenodo/test', methods=['GET'])\n+def zenodo_test() -> dict:\n+    service = ZenodoService()\n+    return service.test_full_connection()"
      },
      {
        "sha": "c0cde2e146ba3dbf0359e5967d1357ab25e9b793",
        "filename": "app/modules/zenodo/services.py",
        "status": "added",
        "additions": 250,
        "deletions": 0,
        "changes": 250,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Fservices.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Fservices.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,250 @@\n+import logging\n+import os\n+import requests\n+\n+from app.modules.dataset.models import DataSet\n+from app.modules.featuremodel.models import FeatureModel\n+from app.modules.zenodo.repositories import ZenodoRepository\n+\n+from core.configuration.configuration import uploads_folder_name\n+from dotenv import load_dotenv\n+from flask import jsonify, Response\n+from flask_login import current_user\n+\n+\n+from core.services.BaseService import BaseService\n+\n+logger = logging.getLogger(__name__)\n+\n+load_dotenv()\n+\n+\n+class ZenodoService(BaseService):\n+\n+    def get_zenodo_url(self):\n+\n+        FLASK_ENV = os.getenv(\"FLASK_ENV\", \"development\")\n+        ZENODO_API_URL = \"\"\n+\n+        if FLASK_ENV == \"development\":\n+            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+        elif FLASK_ENV == \"production\":\n+            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://zenodo.org/api/deposit/depositions\")\n+        else:\n+            ZENODO_API_URL = os.getenv(\"ZENODO_API_URL\", \"https://sandbox.zenodo.org/api/deposit/depositions\")\n+\n+        return ZENODO_API_URL\n+\n+    def get_zenodo_access_token(self):\n+        return os.getenv(\"ZENODO_ACCESS_TOKEN\")\n+\n+    def __init__(self):\n+        super().__init__(ZenodoRepository())\n+        self.ZENODO_ACCESS_TOKEN = self.get_zenodo_access_token()\n+        self.ZENODO_API_URL = self.get_zenodo_url()\n+        self.headers = {\"Content-Type\": \"application/json\"}\n+        self.params = {\"access_token\": self.ZENODO_ACCESS_TOKEN}\n+\n+    def test_connection(self) -> bool:\n+        \"\"\"\n+        Test the connection with Zenodo.\n+\n+        Returns:\n+            bool: True if the connection is successful, False otherwise.\n+        \"\"\"\n+        response = requests.get(self.ZENODO_API_URL, params=self.params, headers=self.headers)\n+        return response.status_code == 200\n+\n+    def test_full_connection(self) -> Response:\n+        \"\"\"\n+        Test the connection with Zenodo by creating a deposition, uploading an empty test file, and deleting the\n+        deposition.\n+\n+        Returns:\n+            bool: True if the connection, upload, and deletion are successful, False otherwise.\n+        \"\"\"\n+\n+        success = True\n+\n+        # Create a test file\n+        working_dir = os.getenv('WORKING_DIR', \"\")\n+        file_path = os.path.join(working_dir, \"test_file.txt\")\n+        with open(file_path, \"w\") as f:\n+            f.write(\"This is a test file with some content.\")\n+\n+        messages = []  # List to store messages\n+\n+        # Step 1: Create a deposition on Zenodo\n+        data = {\n+            \"metadata\": {\n+                \"title\": \"Test Deposition\",\n+                \"upload_type\": \"dataset\",\n+                \"description\": \"This is a test deposition created via Zenodo API\",\n+                \"creators\": [{\"name\": \"John Doe\"}],\n+            }\n+        }\n+\n+        response = requests.post(self.ZENODO_API_URL, json=data, params=self.params, headers=self.headers)\n+\n+        if response.status_code != 201:\n+            return jsonify(\n+                {\n+                    \"success\": False,\n+                    \"messages\": f\"Failed to create test deposition on Zenodo. Response code: {response.status_code}\",\n+                }\n+            )\n+\n+        deposition_id = response.json()[\"id\"]\n+\n+        # Step 2: Upload an empty file to the deposition\n+        data = {\"name\": \"test_file.txt\"}\n+        files = {\"file\": open(file_path, \"rb\")}\n+        publish_url = f\"{self.ZENODO_API_URL}/{deposition_id}/files\"\n+        response = requests.post(publish_url, params=self.params, data=data, files=files)\n+        files[\"file\"].close()  # Close the file after uploading\n+\n+        logger.info(f\"Publish URL: {publish_url}\")\n+        logger.info(f\"Params: {self.params}\")\n+        logger.info(f\"Data: {data}\")\n+        logger.info(f\"Files: {files}\")\n+        logger.info(f\"Response Status Code: {response.status_code}\")\n+        logger.info(f\"Response Content: {response.content}\")\n+\n+        if response.status_code != 201:\n+            messages.append(f\"Failed to upload test file to Zenodo. Response code: {response.status_code}\")\n+            success = False\n+\n+        # Step 3: Delete the deposition\n+        response = requests.delete(f\"{self.ZENODO_API_URL}/{deposition_id}\", params=self.params)\n+\n+        if os.path.exists(file_path):\n+            os.remove(file_path)\n+\n+        return jsonify({\"success\": success, \"messages\": messages})\n+\n+    def get_all_depositions(self) -> dict:\n+        \"\"\"\n+        Get all depositions from Zenodo.\n+\n+        Returns:\n+            dict: The response in JSON format with the depositions.\n+        \"\"\"\n+        response = requests.get(self.ZENODO_API_URL, params=self.params, headers=self.headers)\n+        if response.status_code != 200:\n+            raise Exception(\"Failed to get depositions\")\n+        return response.json()\n+\n+    def create_new_deposition(self, dataset: DataSet) -> dict:\n+        \"\"\"\n+        Create a new deposition in Zenodo.\n+\n+        Args:\n+            dataset (DataSet): The DataSet object containing the metadata of the deposition.\n+\n+        Returns:\n+            dict: The response in JSON format with the details of the created deposition.\n+        \"\"\"\n+\n+        logger.info(\"Dataset sending to Zenodo...\")\n+        logger.info(f\"Publication type...{dataset.ds_meta_data.publication_type.value}\")\n+\n+        metadata = {\n+            \"title\": dataset.ds_meta_data.title,\n+            \"upload_type\": \"dataset\" if dataset.ds_meta_data.publication_type.value == \"none\" else \"publication\",\n+            \"publication_type\": (\n+                dataset.ds_meta_data.publication_type.value\n+                if dataset.ds_meta_data.publication_type.value != \"none\"\n+                else None\n+            ),\n+            \"description\": dataset.ds_meta_data.description,\n+            \"creators\": [\n+                {\n+                    \"name\": author.name,\n+                    **({\"affiliation\": author.affiliation} if author.affiliation else {}),\n+                    **({\"orcid\": author.orcid} if author.orcid else {}),\n+                }\n+                for author in dataset.ds_meta_data.authors\n+            ],\n+            \"keywords\": (\n+                [\"uvlhub\"] if not dataset.ds_meta_data.tags else dataset.ds_meta_data.tags.split(\", \") + [\"uvlhub\"]\n+            ),\n+            \"access_right\": \"open\",\n+            \"license\": \"CC-BY-4.0\",\n+        }\n+\n+        data = {\"metadata\": metadata}\n+\n+        response = requests.post(self.ZENODO_API_URL, params=self.params, json=data, headers=self.headers)\n+        if response.status_code != 201:\n+            error_message = f\"Failed to create deposition. Error details: {response.json()}\"\n+            raise Exception(error_message)\n+        return response.json()\n+\n+    def upload_file(self, dataset: DataSet, deposition_id: int, feature_model: FeatureModel, user=None) -> dict:\n+        \"\"\"\n+        Upload a file to a deposition in Zenodo.\n+\n+        Args:\n+            deposition_id (int): The ID of the deposition in Zenodo.\n+            feature_model (FeatureModel): The FeatureModel object representing the feature model.\n+            user (FeatureModel): The User object representing the file owner.\n+\n+        Returns:\n+            dict: The response in JSON format with the details of the uploaded file.\n+        \"\"\"\n+        uvl_filename = feature_model.fm_meta_data.uvl_filename\n+        data = {\"name\": uvl_filename}\n+        user_id = current_user.id if user is None else user.id\n+        file_path = os.path.join(uploads_folder_name(), f\"user_{str(user_id)}\", f\"dataset_{dataset.id}/\", uvl_filename)\n+        files = {\"file\": open(file_path, \"rb\")}\n+\n+        publish_url = f\"{self.ZENODO_API_URL}/{deposition_id}/files\"\n+        response = requests.post(publish_url, params=self.params, data=data, files=files)\n+        if response.status_code != 201:\n+            error_message = f\"Failed to upload files. Error details: {response.json()}\"\n+            raise Exception(error_message)\n+        return response.json()\n+\n+    def publish_deposition(self, deposition_id: int) -> dict:\n+        \"\"\"\n+        Publish a deposition in Zenodo.\n+\n+        Args:\n+            deposition_id (int): The ID of the deposition in Zenodo.\n+\n+        Returns:\n+            dict: The response in JSON format with the details of the published deposition.\n+        \"\"\"\n+        publish_url = f\"{self.ZENODO_API_URL}/{deposition_id}/actions/publish\"\n+        response = requests.post(publish_url, params=self.params, headers=self.headers)\n+        if response.status_code != 202:\n+            raise Exception(\"Failed to publish deposition\")\n+        return response.json()\n+\n+    def get_deposition(self, deposition_id: int) -> dict:\n+        \"\"\"\n+        Get a deposition from Zenodo.\n+\n+        Args:\n+            deposition_id (int): The ID of the deposition in Zenodo.\n+\n+        Returns:\n+            dict: The response in JSON format with the details of the deposition.\n+        \"\"\"\n+        deposition_url = f\"{self.ZENODO_API_URL}/{deposition_id}\"\n+        response = requests.get(deposition_url, params=self.params, headers=self.headers)\n+        if response.status_code != 200:\n+            raise Exception(\"Failed to get deposition\")\n+        return response.json()\n+\n+    def get_doi(self, deposition_id: int) -> str:\n+        \"\"\"\n+        Get the DOI of a deposition from Zenodo.\n+\n+        Args:\n+            deposition_id (int): The ID of the deposition in Zenodo.\n+\n+        Returns:\n+            str: The DOI of the deposition.\n+        \"\"\"\n+        return self.get_deposition(deposition_id).get(\"doi\")"
      },
      {
        "sha": "6d5c9210981ab0eb41f61c92bd866392a7795bc5",
        "filename": "app/modules/zenodo/templates/zenodo/index.html",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Ftemplates%2Fzenodo%2Findex.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fmodules%2Fzenodo%2Ftemplates%2Fzenodo%2Findex.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fmodules%2Fzenodo%2Ftemplates%2Fzenodo%2Findex.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,11 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}View zenodo{% endblock %}\n+\n+{% block content %}\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "478ed4f0cc17d9aa4b2c0d4b54975810905ffe90",
        "filename": "app/static/css/app.css",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fcss%2Fapp.css",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fcss%2Fapp.css",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fcss%2Fapp.css?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "825c6602f9de9bb5f2643dd253b5511884c9b22c",
        "filename": "app/static/css/app.css.map",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fcss%2Fapp.css.map",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fcss%2Fapp.css.map",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fcss%2Fapp.css.map?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "56ef8d6c13648a26c9349989856830a106b5358a",
        "filename": "app/static/css/dropzone.css",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fcss%2Fdropzone.css",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fcss%2Fdropzone.css",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fcss%2Fdropzone.css?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,49 @@\n+#myDropzone {\n+    min-height: auto;\n+    border: 2px dashed #ccc;\n+    border-radius:10px;\n+    padding: 20px;\n+    display: flex;\n+    flex-wrap: wrap;\n+    justify-content: flex-start;\n+}\n+\n+#myDropzone .dz-preview {\n+    display: flex;\n+    flex-direction: column;\n+    align-items: center;\n+    margin: 10px;\n+    width: 150px;\n+}\n+\n+#myDropzone .dz-preview .dz-details {\n+    text-align: center;\n+    padding: 5px;\n+}\n+\n+#dropzone-text {\n+    position: absolute;\n+    top: 50%;\n+    left: 50%;\n+    transform: translate(-50%, -50%);\n+    text-align: center;\n+}\n+\n+#file-list {\n+    list-style-type: none;\n+    padding: 0;\n+    margin: 0;\n+}\n+\n+#file-list li {\n+    margin-bottom: 10px;\n+    padding: 10px;\n+    background-color: #F4F7FB;\n+    border: 1px solid #ccc;\n+    border-radius: 5px;\n+}\n+\n+\n+.remove-button {\n+    margin-left: 10px;\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "c94fe51fa5fcb14b3ace7ab8cf3f6f693785eb25",
        "filename": "app/static/css/own.css",
        "status": "added",
        "additions": 187,
        "deletions": 0,
        "changes": 187,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fcss%2Fown.css",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fcss%2Fown.css",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fcss%2Fown.css?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,187 @@\n+.error {\n+    border: 1px solid red;\n+}\n+\n+.alert-warning {\n+    background-color: #FFF3CD;\n+    padding: 20px;\n+    border-radius: 5px;\n+}\n+\n+.alert-success {\n+    background-color: #D4EDD9;\n+    padding: 20px;\n+    border-radius: 5px;\n+}\n+\n+.alert-error {\n+    background-color: #F9D6D9;\n+    padding: 20px;\n+    border-radius: 5px;\n+}\n+\n+.fixed-column {\n+    position: sticky;\n+    top: 0;\n+    height: 100vh;\n+    overflow-y: auto;\n+    padding-left: 50px;\n+}\n+\n+.scrollable-column {\n+    height: 200vh;\n+    overflow-y: auto;\n+}\n+\n+.rounded-search {\n+    border: none;\n+    border-radius: 20px;\n+    background-color: #f3f6fa;\n+    font-size: 12px;\n+    padding: 10px 50px 10px 20px;\n+}\n+\n+.center-button-icon {\n+    vertical-align: middle;\n+    margin-top: -2px\n+}\n+\n+.card-header-slim {\n+    padding-bottom: 0px;\n+}\n+\n+.card-body-slim {\n+    padding-top: 0px\n+}\n+\n+.card-dark {\n+    background-color: #2B3947 !important;\n+    color: #ffffff;\n+}\n+\n+.card-header-dark {\n+    background: inherit;\n+    color: inherit !important;\n+}\n+\n+.card-welcome{\n+    background: #F68017 radial-gradient(circle at center left, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5));\n+    color: #ffffff;\n+}\n+\n+.card-note{\n+    background: #1ab7ea radial-gradient(circle at center right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5));\n+    color: #ffffff;\n+}\n+\n+.card-header-welcome {\n+    background: inherit;\n+    color: inherit !important;\n+}\n+\n+.card-title-light {\n+    margin-left: 1.25rem;\n+    margin-top: 1.25rem;\n+    color: white;\n+    font-size: 17px;\n+}\n+\n+.card-title-note {\n+    margin-left: 1.25rem;\n+    margin-top: 0.5rem;\n+    color: white;\n+    font-size: 35px;\n+}\n+\n+.custom-card-body {\n+    height: 150px;\n+}\n+\n+.custom-img {\n+    padding: 0px 20px;\n+    max-height: 200px;\n+    min-height: 200px;\n+}\n+\n+.stats-color {\n+    color: #009688; \n+}\n+\n+.doi_button {\n+    background-color: #147ABB;\n+    border-color: #147ABB;\n+    color: white;\n+    display: flex;\n+    align-items: center;\n+    padding: 0;\n+    border-radius: 5px;\n+    overflow: hidden;\n+}\n+\n+.doi_button:hover {\n+    background-color: #075585;\n+    border-color: #075585;\n+}\n+\n+.button_doi_id {\n+    background-color: #5C5C5C;\n+    padding: 10px;\n+    margin: 0;\n+    display: flex;\n+    align-items: center;\n+    justify-content: center;\n+    transition: background-color 0.3s ease, color 0.3s ease;\n+}\n+\n+.doi_button:hover .button_doi_id {\n+    background-color: #075585;\n+    color: white;\n+}\n+\n+.doi_text {\n+    background-color: #147ABB;\n+    padding: 10px;\n+    display: flex;\n+    align-items: center;\n+    transition: background-color 0.3s ease;\n+}\n+\n+.doi_button:hover .doi_text {\n+    background-color: #4ebbff;\n+    color: white;\n+}\n+\n+.doi_button:active .doi_text {\n+    background-color: #4ebbff;\n+    color: white;\n+}\n+\n+.doi_button:active .button_doi_id {\n+    background-color: #075585;\n+    color: white;\n+}\n+\n+.center-button-icon {\n+    margin-right: 5px;\n+}\n+\n+.badge-success {\n+    background-color: green;\n+    color: white;\n+    padding: 5px;\n+    border-radius: 3px;\n+}\n+\n+.badge-danger {\n+    background-color: red;\n+    color: white;\n+    padding: 5px;\n+    border-radius: 3px;\n+}\n+\n+.badge-warning {\n+    background-color: orange;\n+    color: white;\n+    padding: 5px;\n+    border-radius: 3px;\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/static/fonts/.gitkeep",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Ffonts%2F.gitkeep",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Ffonts%2F.gitkeep",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Ffonts%2F.gitkeep?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "161477839f8de059129f9b73bb60fb7f76c549d0",
        "filename": "app/static/gifs/loading.svg",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fgifs%2Floading.svg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fgifs%2Floading.svg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fgifs%2Floading.svg?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: none; display: block; shape-rendering: auto;\" width=\"249px\" height=\"249px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n+<circle cx=\"50\" cy=\"41\" r=\"31\" fill=\"#222e3c\">\n+  <animate attributeName=\"cy\" dur=\"0.7518796992481203s\" repeatCount=\"indefinite\" calcMode=\"spline\" keySplines=\"0.45 0 0.9 0.55;0 0.45 0.55 0.9\" keyTimes=\"0;0.5;1\" values=\"41;59;41\"></animate>\n+</circle>\n+<!-- [ldio] generated by https://loading.io/ --></svg>\n\\ No newline at end of file"
      },
      {
        "sha": "45eb491c9c313383c9a2316636a5a4aea971d1c9",
        "filename": "app/static/img/avatars/avatar-2.jpg",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Favatars%2Favatar-2.jpg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Favatars%2Favatar-2.jpg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Favatars%2Favatar-2.jpg?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "f3d30c1bd8825ddacb72f365b46008df367b5a03",
        "filename": "app/static/img/avatars/avatar-3.jpg",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Favatars%2Favatar-3.jpg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Favatars%2Favatar-3.jpg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Favatars%2Favatar-3.jpg?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "ddf9bd5b6dec490fb04c755d62d3c851da2972af",
        "filename": "app/static/img/avatars/avatar-4.jpg",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Favatars%2Favatar-4.jpg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Favatars%2Favatar-4.jpg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Favatars%2Favatar-4.jpg?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "60f0e5d31c6ff14597c35721a9c558f9c37953b0",
        "filename": "app/static/img/avatars/avatar-5.jpg",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Favatars%2Favatar-5.jpg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Favatars%2Favatar-5.jpg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Favatars%2Favatar-5.jpg?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "3c01e595abdaac9531cbf135b0e027b4eff9d5d8",
        "filename": "app/static/img/avatars/avatar.jpg",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Favatars%2Favatar.jpg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Favatars%2Favatar.jpg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Favatars%2Favatar.jpg?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "5e585af04080c6c10326eff2750e74d7eaeeda99",
        "filename": "app/static/img/icons/icon-250x250.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Ficons%2Ficon-250x250.png",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Ficons%2Ficon-250x250.png",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Ficons%2Ficon-250x250.png?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "b7e28fdbdcd15d67a91d551fb78584f8e04f13c8",
        "filename": "app/static/img/items/not_found.svg",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Fitems%2Fnot_found.svg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Fitems%2Fnot_found.svg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Fitems%2Fnot_found.svg?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"500\" zoomAndPan=\"magnify\" viewBox=\"0 0 375 374.999991\" height=\"500\" preserveAspectRatio=\"xMidYMid meet\" version=\"1.0\"><path fill=\"#222e3c\" d=\"M 93.75 112.5 C 93.136719 112.5 92.523438 112.53125 91.914062 112.589844 C 91.300781 112.652344 90.695312 112.742188 90.09375 112.859375 C 89.488281 112.980469 88.894531 113.128906 88.308594 113.308594 C 87.71875 113.484375 87.140625 113.691406 86.574219 113.925781 C 86.007812 114.164062 85.453125 114.425781 84.910156 114.714844 C 84.371094 115.003906 83.84375 115.320312 83.332031 115.660156 C 82.824219 116 82.328125 116.367188 81.855469 116.757812 C 81.378906 117.144531 80.925781 117.558594 80.492188 117.992188 C 80.058594 118.425781 79.644531 118.878906 79.257812 119.355469 C 78.867188 119.828125 78.5 120.324219 78.160156 120.832031 C 77.820312 121.34375 77.503906 121.871094 77.214844 122.410156 C 76.925781 122.953125 76.664062 123.507812 76.425781 124.074219 C 76.191406 124.640625 75.984375 125.21875 75.808594 125.808594 C 75.628906 126.394531 75.480469 126.988281 75.359375 127.59375 C 75.242188 128.195312 75.152344 128.800781 75.089844 129.414062 C 75.03125 130.023438 75 130.636719 75 131.25 C 75 131.863281 75.03125 132.476562 75.089844 133.085938 C 75.152344 133.699219 75.242188 134.304688 75.359375 134.90625 C 75.480469 135.511719 75.628906 136.105469 75.808594 136.691406 C 75.984375 137.28125 76.191406 137.859375 76.425781 138.425781 C 76.664062 138.992188 76.925781 139.546875 77.214844 140.089844 C 77.503906 140.628906 77.820312 141.15625 78.160156 141.667969 C 78.5 142.175781 78.867188 142.671875 79.257812 143.144531 C 79.644531 143.621094 80.058594 144.074219 80.492188 144.507812 C 80.925781 144.941406 81.378906 145.355469 81.855469 145.742188 C 82.328125 146.132812 82.824219 146.5 83.332031 146.839844 C 83.84375 147.179688 84.371094 147.496094 84.910156 147.785156 C 85.453125 148.074219 86.007812 148.335938 86.574219 148.574219 C 87.140625 148.808594 87.71875 149.015625 88.308594 149.191406 C 88.894531 149.371094 89.488281 149.519531 90.09375 149.640625 C 90.695312 149.757812 91.300781 149.847656 91.914062 149.910156 C 92.523438 149.96875 93.136719 150 93.75 150 C 94.363281 150 94.976562 149.96875 95.585938 149.910156 C 96.199219 149.847656 96.804688 149.757812 97.40625 149.640625 C 98.011719 149.519531 98.605469 149.371094 99.191406 149.191406 C 99.78125 149.015625 100.359375 148.808594 100.925781 148.574219 C 101.492188 148.335938 102.046875 148.074219 102.589844 147.785156 C 103.128906 147.496094 103.65625 147.179688 104.167969 146.839844 C 104.675781 146.5 105.171875 146.132812 105.644531 145.742188 C 106.121094 145.355469 106.574219 144.941406 107.007812 144.507812 C 107.441406 144.074219 107.855469 143.621094 108.242188 143.144531 C 108.632812 142.671875 109 142.175781 109.339844 141.667969 C 109.679688 141.15625 109.996094 140.628906 110.285156 140.089844 C 110.574219 139.546875 110.835938 138.992188 111.074219 138.425781 C 111.308594 137.859375 111.515625 137.28125 111.691406 136.691406 C 111.871094 136.105469 112.019531 135.511719 112.140625 134.90625 C 112.257812 134.304688 112.347656 133.699219 112.410156 133.085938 C 112.46875 132.476562 112.5 131.863281 112.5 131.25 C 112.5 130.636719 112.46875 130.023438 112.410156 129.414062 C 112.347656 128.800781 112.257812 128.195312 112.140625 127.59375 C 112.019531 126.988281 111.871094 126.394531 111.691406 125.808594 C 111.515625 125.21875 111.308594 124.640625 111.074219 124.074219 C 110.835938 123.507812 110.574219 122.953125 110.285156 122.410156 C 109.996094 121.871094 109.679688 121.34375 109.339844 120.832031 C 109 120.324219 108.632812 119.828125 108.242188 119.355469 C 107.855469 118.878906 107.441406 118.425781 107.007812 117.992188 C 106.574219 117.558594 106.121094 117.144531 105.644531 116.757812 C 105.171875 116.367188 104.675781 116 104.167969 115.660156 C 103.65625 115.320312 103.128906 115.003906 102.589844 114.714844 C 102.046875 114.425781 101.492188 114.164062 100.925781 113.925781 C 100.359375 113.691406 99.78125 113.484375 99.191406 113.308594 C 98.605469 113.128906 98.011719 112.980469 97.40625 112.859375 C 96.804688 112.742188 96.199219 112.652344 95.585938 112.589844 C 94.976562 112.53125 94.363281 112.5 93.75 112.5 Z M 206.25 112.5 C 205.636719 112.5 205.023438 112.53125 204.414062 112.589844 C 203.800781 112.652344 203.195312 112.742188 202.59375 112.859375 C 201.988281 112.980469 201.394531 113.128906 200.808594 113.308594 C 200.21875 113.484375 199.640625 113.691406 199.074219 113.925781 C 198.507812 114.164062 197.953125 114.425781 197.410156 114.714844 C 196.871094 115.003906 196.34375 115.320312 195.832031 115.660156 C 195.324219 116 194.828125 116.367188 194.355469 116.757812 C 193.878906 117.144531 193.425781 117.558594 192.992188 117.992188 C 192.558594 118.425781 192.144531 118.878906 191.757812 119.355469 C 191.367188 119.828125 191 120.324219 190.660156 120.832031 C 190.320312 121.34375 190.003906 121.871094 189.714844 122.410156 C 189.425781 122.953125 189.164062 123.507812 188.925781 124.074219 C 188.691406 124.640625 188.484375 125.21875 188.308594 125.808594 C 188.128906 126.394531 187.980469 126.988281 187.859375 127.59375 C 187.742188 128.195312 187.652344 128.800781 187.589844 129.414062 C 187.53125 130.023438 187.5 130.636719 187.5 131.25 C 187.5 131.863281 187.53125 132.476562 187.589844 133.085938 C 187.652344 133.699219 187.742188 134.304688 187.859375 134.90625 C 187.980469 135.511719 188.128906 136.105469 188.308594 136.691406 C 188.484375 137.28125 188.691406 137.859375 188.925781 138.425781 C 189.164062 138.992188 189.425781 139.546875 189.714844 140.089844 C 190.003906 140.628906 190.320312 141.15625 190.660156 141.667969 C 191 142.175781 191.367188 142.671875 191.757812 143.144531 C 192.144531 143.621094 192.558594 144.074219 192.992188 144.507812 C 193.425781 144.941406 193.878906 145.355469 194.355469 145.742188 C 194.828125 146.132812 195.324219 146.5 195.832031 146.839844 C 196.34375 147.179688 196.871094 147.496094 197.410156 147.785156 C 197.953125 148.074219 198.507812 148.335938 199.074219 148.574219 C 199.640625 148.808594 200.21875 149.015625 200.808594 149.191406 C 201.394531 149.371094 201.988281 149.519531 202.59375 149.640625 C 203.195312 149.757812 203.800781 149.847656 204.414062 149.910156 C 205.023438 149.96875 205.636719 150 206.25 150 C 206.863281 150 207.476562 149.96875 208.085938 149.910156 C 208.699219 149.847656 209.304688 149.757812 209.90625 149.640625 C 210.511719 149.519531 211.105469 149.371094 211.691406 149.191406 C 212.28125 149.015625 212.859375 148.808594 213.425781 148.574219 C 213.992188 148.335938 214.546875 148.074219 215.089844 147.785156 C 215.628906 147.496094 216.15625 147.179688 216.667969 146.839844 C 217.175781 146.5 217.671875 146.132812 218.144531 145.742188 C 218.621094 145.355469 219.074219 144.941406 219.507812 144.507812 C 219.941406 144.074219 220.355469 143.621094 220.742188 143.144531 C 221.132812 142.671875 221.5 142.175781 221.839844 141.667969 C 222.179688 141.15625 222.496094 140.628906 222.785156 140.089844 C 223.074219 139.546875 223.335938 138.992188 223.574219 138.425781 C 223.808594 137.859375 224.015625 137.28125 224.191406 136.691406 C 224.371094 136.105469 224.519531 135.511719 224.640625 134.90625 C 224.757812 134.304688 224.847656 133.699219 224.910156 133.085938 C 224.96875 132.476562 225 131.863281 225 131.25 C 225 130.636719 224.96875 130.023438 224.910156 129.414062 C 224.847656 128.800781 224.757812 128.195312 224.640625 127.59375 C 224.519531 126.988281 224.371094 126.394531 224.191406 125.808594 C 224.015625 125.21875 223.808594 124.640625 223.574219 124.074219 C 223.335938 123.507812 223.074219 122.953125 222.785156 122.410156 C 222.496094 121.871094 222.179688 121.34375 221.839844 120.832031 C 221.5 120.324219 221.132812 119.828125 220.742188 119.355469 C 220.355469 118.878906 219.941406 118.425781 219.507812 117.992188 C 219.074219 117.558594 218.621094 117.144531 218.144531 116.757812 C 217.671875 116.367188 217.175781 116 216.667969 115.660156 C 216.15625 115.320312 215.628906 115.003906 215.089844 114.714844 C 214.546875 114.425781 213.992188 114.164062 213.425781 113.925781 C 212.859375 113.691406 212.28125 113.484375 211.691406 113.308594 C 211.105469 113.128906 210.511719 112.980469 209.90625 112.859375 C 209.304688 112.742188 208.699219 112.652344 208.085938 112.589844 C 207.476562 112.53125 206.863281 112.5 206.25 112.5 Z M 193.125 219.375 C 166.875 200.625 131.25 200.625 106.875 219.375 L 84.375 189.375 C 121.875 161.25 176.25 161.25 215.625 189.375 Z M 375 337.5 L 337.5 375 L 262.5 300 L 262.5 262.5 L 300 262.5 Z M 375 337.5 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#222e3c\" d=\"M 150 300 C 67.5 300 0 232.5 0 150 C 0 67.5 67.5 0 150 0 C 232.5 0 300 67.5 300 150 C 300 232.5 232.5 300 150 300 Z M 150 37.5 C 88.125 37.5 37.5 88.125 37.5 150 C 37.5 211.875 88.125 262.5 150 262.5 C 211.875 262.5 262.5 211.875 262.5 150 C 262.5 88.125 211.875 37.5 150 37.5 Z M 150 37.5 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#222e3c\" d=\"M 236.707031 251.273438 L 249.964844 238.015625 L 296.371094 284.417969 L 283.109375 297.675781 Z M 236.707031 251.273438 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/></svg>\n\\ No newline at end of file"
      },
      {
        "sha": "fead383ca177b6906e2a0e94b9f51181cea2bd00",
        "filename": "app/static/img/logos/logo-dark.svg",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Flogos%2Flogo-dark.svg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Flogos%2Flogo-dark.svg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Flogos%2Flogo-dark.svg?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "5694a2712b26829448b2c366499a1cd27436b5c1",
        "filename": "app/static/img/logos/logo-light.svg",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Flogos%2Flogo-light.svg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Flogos%2Flogo-light.svg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Flogos%2Flogo-light.svg?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "f7e9a25be3b3d6338e06a18a171f324fe3e67253",
        "filename": "app/static/img/logos/university_of_malaga.svg",
        "status": "added",
        "additions": 1616,
        "deletions": 0,
        "changes": 1616,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Flogos%2Funiversity_of_malaga.svg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Flogos%2Funiversity_of_malaga.svg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Flogos%2Funiversity_of_malaga.svg?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "a46639132f91582185e1bcfbe76523444ad961eb",
        "filename": "app/static/img/logos/university_of_seville.svg",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Flogos%2Funiversity_of_seville.svg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Flogos%2Funiversity_of_seville.svg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Flogos%2Funiversity_of_seville.svg?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 894.83 372.82\"><defs><style>.cls-1{fill:#1a171b;}.cls-2{fill:#bd0e2e;fill-rule:evenodd;}</style></defs><title>logo_us_color</title><g id=\"Capa_2\" data-name=\"Capa 2\"><g id=\"Capa_1-2\" data-name=\"Capa 1\"><path class=\"cls-1\" d=\"M318.88,346.3a19.71,19.71,0,0,0,10.41-8.49h.13v27.38c0,2.77-.2,5,2.44,6.7V372h-10.2v-.15c3-1.46,2.87-3.73,2.87-6.7V346.45h-5.65Z\"/><path class=\"cls-1\" d=\"M358,346h-.14c-1.81-1.94-5.15-2.08-7.74-2.08l-5.29.29-.43,8a17.48,17.48,0,0,1,4.71-.64c6.36,0,11.76,3.6,11.76,10.41,0,6.49-6.22,10.87-14.43,10.87a27.4,27.4,0,0,1-6.28-.78l-2.27-5a18.14,18.14,0,0,0,8.5,1.95c4.48,0,8.94-2,8.94-7.13,0-4.66-4.46-6.56-8.47-6.56a19.44,19.44,0,0,0-7.42,1.61l1.06-16.86H358Z\"/><path class=\"cls-1\" d=\"M365.39,356.16c0-9,4.43-16.85,13-16.85,9,0,12.82,8.69,12.82,16.56s-3.88,16.95-13,16.95c-7.63-.1-12.78-7.69-12.78-16.66m5.2-.49c0,4.91,1.6,13.35,7.87,13.35,4.82,0,7.55-5.92,7.55-12.76s-2.94-13.07-7.84-13.16c-6.12,0-7.58,7.87-7.58,12.57\"/><path class=\"cls-1\" d=\"M416.33,346h-.15c-1.79-1.94-5.15-2.08-7.73-2.08l-5.29.29-.44,8a17.49,17.49,0,0,1,4.72-.63c6.38,0,11.76,3.59,11.76,10.4,0,6.49-6.22,10.87-14.45,10.87a27.29,27.29,0,0,1-6.25-.78l-2.29-5a18.41,18.41,0,0,0,8.51,1.93c4.46,0,8.94-2,8.94-7.13,0-4.66-4.48-6.56-8.46-6.56a19.54,19.54,0,0,0-7.44,1.61l1.06-16.86h17.51Z\"/><path class=\"cls-2\" d=\"M452.84,256.41l31.73.21v10.3s-2.77-3.72-6.57-3.72-13.78.61-13.78.61v16.68h13.71l1.33-.31v9.29l-2.77-2.1-12.1,0v20.7s4.32,2.15,11.67,2.15,16.62-5,16.62-5L492,307l-3.39,9.6H450.81s4.13-2.73,4.08-5.89,0-48.2,0-48.2.23-4.88-3.34-4.88c.83-1.16,1.29-1.17,1.29-1.17\"/><path class=\"cls-2\" d=\"M372.05,283.92c0-16.68-13.5-24.28-21.27-26.44-6.52-1.71-14.71-1.37-18.82-1.34l-12-.09s-.45,0-1.24,1.17a2.78,2.78,0,0,1,2.23,1c.18.34.39.69.55.95A6.14,6.14,0,0,1,322,261v48.3c-.4,2.84-3.91,5.12-3.91,5.12h24.41s29.59,1.35,29.59-30.46m-26.91,23.25H334.07a17.54,17.54,0,0,1-2.84-1V286.09h13.09l1.31.62v-8.07l-1.31.76H331V263.22s14-.74,19.74,1.69,12.2,8.32,12.2,19.74c0,19.67-17.84,22.52-17.84,22.52\"/><path class=\"cls-2\" d=\"M719.25,317.06h18c-3.66-.54-6.61-7.14-6.61-7.14l-21-52.24H695.8c3.49,1.48.71,8.52.71,8.52s-13.64,33.43-16.43,40.71-7.23,9.7-7.23,9.7l-.31.37h16.08a10,10,0,0,1-2.19-2.16c-1.34-2-.21-5.54-.21-5.54l5.89-14.63h23.06s4.68,13.26,6.29,17.27a3.57,3.57,0,0,1-2.21,5.14m-25.44-27.92,9.63-23.63,8.84,23.64Z\"/><path class=\"cls-2\" d=\"M492.35,256.45H505v3.91l15.41,40.95,1.07,3.45,1.21-.85,14.14-38.16s1.71-5,.2-6.93a17.59,17.59,0,0,1-1.69-2.28h12.41l-.86,3.7-22.8,58.27s-7.85-1.9-11.4-12.15c-3.2-9.22-15.57-41.69-15.57-41.69s-1.58-3.2-3.06-5.65c-.68-1.13-1.82-1.09-1.75-2.56\"/><path class=\"cls-2\" d=\"M553.68,256.38h15.83l.74.75s-3.41,2.35-3.41,4.65c0,1.84,0,49.92,0,49.92s.79,2.9,1.78,3.4a4,4,0,0,1,1.54,1.33H554v-1s3.17-1.36,3.17-4.18-.42-48.8-.42-50c0-2.64-3.07-3.43-3.07-3.43Z\"/><path class=\"cls-2\" d=\"M605.84,310.26c-5.91,0-9.89-.66-11.19-1.19,0-10.76,0-45.91,0-47.47,0-2.28,3.41-4.64,3.41-4.64l0-.43H580.84v.52c0,.08,2.45.78,3.28,2.4a6.4,6.4,0,0,1,.48,1.67c0,.35,0,4.16.08,9.56,0,13.13,0,37.69,0,40,0,3.77-4.08,5.89-4.08,5.89h37.78l3.38-9.59.71-1.69s-7.63,5-16.63,5\"/><path class=\"cls-2\" d=\"M653.73,310.26c-5.93,0-9.9-.66-11.19-1.19,0-10.76,0-45.91,0-47.47,0-2.28,3.43-4.64,3.43-4.64l0-.43H628.72v.52c0,.08,2.45.78,3.27,2.4a6.44,6.44,0,0,1,.49,1.67c0,.35,0,4.16.06,9.56,0,13.13,0,37.69,0,40,0,3.77-4.08,5.89-4.08,5.89h37.77l3.4-9.59.72-1.69s-7.65,5-16.64,5\"/><path class=\"cls-2\" d=\"M437.81,261V250.15s-8.23-2.38-14.8-2.38-25.66,1.22-25.66,19.12c0,18.73,35.26,16.53,35.26,33.52,0,5.22-7.76,9.95-15.39,9.95-10.79,0-21.45-8-21.45-8l2.59,12a50.47,50.47,0,0,0,17.09,3.36c9,0,28.11-5.05,28.11-20.61,0-20.94-35.07-18.32-35.07-32.73,0-6.09,4.94-9.45,12.77-9.45,9.09,0,16.55,6.06,16.55,6.06\"/><path class=\"cls-2\" d=\"M318.05,159.59h17.86v.74s-3.76.18-3.76,5.42V207.8s1.15,12.42,15.09,12.42c17,0,18.36-10.44,18.36-10.44l0-42.81s-.6-7-3.82-7c0-.67.29-.28.29-.28h17.58v.63a4.15,4.15,0,0,0-3.53,4.3v55.08c0,2,.36,4.08,2.32,5.52s1.55,1.56,1.55,1.56H365.7v-6.43h-1.36s-5.65,7.68-18.46,7.68c-14.56,0-23.81-8.24-23.81-20.26V165.59s-1.35-5.18-4-6\"/><path class=\"cls-2\" d=\"M389.07,167.81v-.66h12.45l35.55,45.61V172.89s-1.48-4.62-3.65-4.95v-.82h14.76v.7s-3.87,1.08-3.87,5.93-.6,55.58-.6,55.58h-1.33s-4.85-2-16.62-16.56-25.25-32.11-25.25-32.11l-.42-.31v40.84s2,5.07,4.26,5.07V227h-15.8v-1s3.86-2.73,3.86-5,.41-46.77.41-46.77-.55-5.26-3.75-6.51\"/><path class=\"cls-2\" d=\"M457.59,167.06l15.66.24v.57s-3.09.72-3.09,3.69v49.91s.3,3.5,2.9,4.55v1H457.51l0-1a5.21,5.21,0,0,0,3.3-4.81v-49.4s-1.06-2.87-3.23-3.9a1.3,1.3,0,0,1,0-.81\"/><path class=\"cls-2\" d=\"M693.44,167.05l15.65.25v.58s-3.07.69-3.07,3.68v49.92s.31,3.5,2.9,4.54v1H693.34l.07-1a5.22,5.22,0,0,0,3.31-4.81v-49.4s-1.08-2.87-3.23-3.89a1.59,1.59,0,0,1,0-.83\"/><path class=\"cls-2\" d=\"M478.57,167.13h12.52a13,13,0,0,0,.39,3.69c.48,1.65,16.87,44.56,16.87,44.56l15.37-40s.09-5.3-1.35-6.42-1.54-1.93-1.54-1.93H534.4l-24.83,63.15s-6.51-2.25-10-10.4c-2.83-6.53-17.77-47.12-17.77-47.12l-3.3-4.45Z\"/><path class=\"cls-2\" d=\"M540.93,167.36l31.76.21v10.3s-2.78-4-6.54-4-13.82,0-13.82,0v17.54H566l1.34-.32v9.29l-2.76-2.09H552.5l-.07,20.78s4.33,2.13,11.69,2.13,16.68-5,16.68-5l-4.1,11.3H538.94s4.12-2.71,4.06-5.89,0-48.22,0-48.22.25-4.83-3.34-4.83c.85-1.18,1.27-1.21,1.27-1.21\"/><path class=\"cls-2\" d=\"M587.68,168s16.39-.57,20.61-.57,18.76,2.67,18.76,15.51c0,10.17-13.68,14.64-13.68,14.64l-.49,1.19s11.76,16.36,17.46,21.18a92.26,92.26,0,0,0,10,7.47H628.53s-3,.35-13.94-12.47-12.7-18.62-12.7-18.62,15.13-2,15.13-12.79c0-7.78-7.28-10.11-7.28-10.11s-9.78-1.57-9.78.44V223s1.92,4.41,3.51,4.41H586.73s3.67-.93,3.67-10.46V173s-1.27-4.3-2.72-4.93\"/><path class=\"cls-2\" d=\"M740.27,168.07H717.79l3.41,3.56-.05,51.4-3.37,4.66h21.37c14.65,0,33.66-6.3,33.66-31.21,0-26-25.36-28.41-32.54-28.41m2.67,52.39H730.55l-.08-45.36s33-6.49,33,22.15c0,22.9-20.53,23.21-20.53,23.21\"/><path class=\"cls-2\" d=\"M818.26,227.54h18c-3.71-.53-6.61-7.15-6.61-7.15l-21-52.2H794.8c3.49,1.44.74,8.48.74,8.48s-13.67,33.45-16.44,40.73-7.23,9.7-7.23,9.7l-.33.37h16.07a10.91,10.91,0,0,1-2.18-2.18c-1.33-1.95-.21-5.53-.21-5.53l5.9-14.62h23s4.68,13.27,6.32,17.26a3.6,3.6,0,0,1-2.23,5.14M792.8,199.6,802.45,176l8.82,23.63Z\"/><path class=\"cls-2\" d=\"M679.42,177.65v-9.74a57.86,57.86,0,0,0-13.31-2.14c-5.94,0-23.08,1.1-23.08,17.21,0,16.82,31.75,14.87,31.75,30.13,0,4.68-7,8.95-13.83,8.95-9.72,0-19.33-7.21-19.33-7.21l2.32,10.8a45.7,45.7,0,0,0,15.41,3c11.45,0,25.27-4.55,25.27-18.52,0-18.83-31.55-16.5-31.55-29.45,0-5.5,4.43-8.48,11.49-8.48,8.16,0,14.86,5.43,14.86,5.43\"/><path class=\"cls-2\" d=\"M862.3,168.07H839.78l3.42,3.56V223l-3.42,4.66h21.4c14.62,0,33.65-6.3,33.65-31.21,0-26-25.39-28.41-32.53-28.41M865,220.46H852.58l-.11-45.36s33-6.49,33,22.15c0,22.9-20.5,23.21-20.5,23.21\"/><path class=\"cls-1\" d=\"M240.67,294.41a17.68,17.68,0,0,0,2.09-.83c-.71.29-1.43.57-2.15.83Z\"/><path class=\"cls-1\" d=\"M234.93,250.09c-20.21-7.1-35-16.08-35-40.65.91-9.22,3.85-15.89,5.55-17.71,1-1-1.91-.07-4.68,3.29a5.19,5.19,0,0,1,1.27-2.56c5.41-5.85,8.37-9.47,8.37-10.61,1.4-2.26.38-1.72-1.73-.58-3.39,2.81-2.72,1.64-5,5.19-.4.63-1.26-.14-1.69.47-4.15,3-6,11.1-4,12.76a19.66,19.66,0,0,0-1.39,4.92c-.66,4.29-1,8-1.45,10.47-1.48-8.79-2.87-17.72-3.87-24.42,0-.47-.55-2.32-.62-2.77-.16-1.14.05-2.42-.48-3.6a4.73,4.73,0,0,1-.47-2.78c.73-4.26-.44-7-.9-9.79-.08-.5-.65-.4-.77.47-.19,1.44-.26,4.38-.68,5.21-.13.23-.89-4.55-1.3-5.29-.12-.21-.24-.73-.46-1.23a3.92,3.92,0,0,0-.38-.91,3.08,3.08,0,0,1-.4-.84c-.12-.29-.06-.72-.17-1s-.5-.75-.68-1.19c-1-2.48-2-5-2.35-4.52s.7,5.37,1.4,6.91A61.35,61.35,0,0,1,187.17,183c.14.74.65,3.12.8,3.83s.24,1.78.39,2.57.21,1.91.34,2.53c.29,1.62.23,2.36.45,3.3a15.51,15.51,0,0,0,.75,3.36c.65,1.62.65,5.09,0,4-.32-.55-3.09-4.16-4.07-4.76-.33-.19-.66-.44-1-.66-2.87-2-6.09-4.86-6.09-2.8,4.72,2.38,9.76,11.19,11.48,16.35a65.39,65.39,0,0,0,.27,7.17c.11,1.36-1.11,2.1-.83,3,.21.67,1.82,2.11,2.13,2.67.86,1.55,2.22,2.52,4.1,4.52a9.64,9.64,0,0,0,.93,1.87c0,5.17,32.12,17.5,12,15.24-4.28-2-10.7-5.94-12.56-5.94,0,4.16,15.58,12.45,25.46,15.05,1.58-1.61-10.15-4.68-7.38-4.68,2-.06,20.54,2.18,20.54.41\"/><path class=\"cls-1\" d=\"M184,69.54c.35.66.71,1.26,1,1.84,4.38-.74-1-4.41-1-1.84\"/><path class=\"cls-1\" d=\"M188.67,66.16c.29.23.56-.07.73-.16s.21,0,.34.09.3,0,.43-.06c4.24-2.48-4.19-3.32-1.81-.17.1.15.1.14.31.3\"/><path class=\"cls-1\" d=\"M151.57,208.51c1.09-.73,1-.6,1.52-1.48s.64-1.36-.29-2.35c-2.81-2.84-5.42-5.7-11.39-19.1-1.89-4.26-2.74,7.25-1.35,14.47,2.12,11,3.2,13.06,5.22,15.36,3.55,4,9.15,11,9.15,11s3.58,4,2.53-.55-4.51-7.81-7.6-9.94-1.86-4.4-1.86-4.4,1.59-1.23,4.07-3\"/><path class=\"cls-1\" d=\"M156.38,237.5c-.26-1.87-1.84-7.16-3-8.64S142.22,217,141,215.49s1.62,8.36,1.62,8.36.08.11.22.34c-.4.57-.29,2.58-.47,2.62,1.42,3.63,9.62,6.51,12.18,10.18,1,.83,1.89.94,1.82.51\"/><path class=\"cls-1\" d=\"M153.17,238.6c-2-1.73-5.72-4.28-7.39-4.28a10.87,10.87,0,0,0-4.12,1.41s-1.54,7.56-1.54,10.11-.33,7.82,1.65,5.94,2.87,1.45,4.56,1.45,0,3.08,5.13-2.58a17.38,17.38,0,0,0,4-6.9s.81-2.39-2.3-5.15\"/><path class=\"cls-1\" d=\"M135.78,259c-5.77,1.86-6,2.15-9.81,2.74-7.25,1.1-4.85-11.46-8.51-7.27s-5.35,6.83-5.32,12.64c0,3.16-3.41,4.16.84,7.21s5.71-.15,11.69-.39,4.46-1.8,9.54-2.88,8.31-3.36,9.53-9.17,3.95-5.14-.37-6.37-2.21,1.76-7.59,3.49\"/><path class=\"cls-1\" d=\"M251,250.4l6.86,3.79c1.1.6,5.5,3.88,1.93,0-3.39-3.67-19-11.12-22.52-20.81-.61-1.73-4-4-4-4,.21-2.23-.71-2.31-.59-4l-.19-1.07.26-2.91c.44-5.09,9.19-15.75,10.26-19.83.16-.61.64-1.84-2-2.05-8.11-.63-12.41-6.06-14.46-7.91-.4-.36-.68.19-.66.82.06,3-.08,7.38-.1,10.07-.32-.13-.67-.23-1.05-.35-1.78-.52-7.22-.61-10-.61a15.26,15.26,0,0,0-7.35,2.28c-1.38,1-7.48,3.36,1.92,1.19a31.09,31.09,0,0,1,6.69-.87,24.34,24.34,0,0,1,5.72,1.33c1.67.49,3.19,1,4.39,1.42.69,3.31,2.16,6.61,3,10.58a65.1,65.1,0,0,1,1.27,10.19s3.77,6.86,5.91,11.42c1,2.13,3,4,6.07,6.14a1.05,1.05,0,0,0-.19.58c-.08.65-.68-.65-3.22-1.09-1.23-.21-2.45-.29-3.15-.49a14.07,14.07,0,0,1-2.32-.78c-1.94-.89-3.24-1.38-5.46-2.21-4.64-2.71-7.44-2.38-9.4-4.22-3.54-2.68-7.37-6.75-8.3-5.49a6.62,6.62,0,0,0,1.87,2.68c.32.34.61.34,1,.71s.57,1,.87,1.23c.47.39,1.39.6,2.09,1.16s1,.59,1.54,1.05c.22.16.57.78.77.94a31.89,31.89,0,0,0,3.61,2.36c-.06.22,1.49,1.16,2.09,1.3a2,2,0,0,0,1.3,1c.66.69,2.53,1.32,3.82,1.75a4.65,4.65,0,0,0,2.2.91c1.07.73,3.25.78,4.24,1a31.8,31.8,0,0,0,9,3.06c2.45,1,6.8,1.24,6.18-.17a.21.21,0,0,0,.12-.08\"/><path class=\"cls-1\" d=\"M220.26,171c.11,2.56.49,5.12,1.64,6.59-.08-.2-.15-.4-.22-.61a51.56,51.56,0,0,1-1.42-6\"/><path class=\"cls-1\" d=\"M166.92,329.43l3.26-.2s2.64.93,5.1,1.84,8.35,5.44,9.15,6.15,4.86,6.48,5.67,7.28a13.93,13.93,0,0,1,2.67,4.65c.83,2.2.09,4.29-1.23,4.71-4.26,1.43-5.39-1.46-5.48-2.4s-.35-1,.56-2.56,3,.61,2.67-1.38-2.76-1.87-2.76-1.87-5.22.85-5.09,6,3.31,6.76,6.56,7.71,7-.47,8.25-2.8c4.84-9.31-1.36-18.46-1.5-18.82-2.53-6.5-10.56-13.4-10.56-13.4a15.76,15.76,0,0,1-1.64-2.58c-.31-.93,11,7.49,13.68,13.37,1.63,3.4,2.26,5,2.38,7.54s-.12,3,1,3.65,1.31-2.31,2-2.31,1.92-1.53,1.92-1.53a32.78,32.78,0,0,0,.63-6.58,30.68,30.68,0,0,0-1.8-10.28c-.91-2.2.83-.68.83-.68s2-.5,4,8.07-1.43,13-.95,13.57,1.88-1.7,2.57-2.61.87-2.32,1.2-4.77,2-9.34,2.49-10.1,1,2.81.74,8.58-1.22,5.15-2.25,8.87c-.66,2.29-2.47,7.1,2.88-.33,2.13-3,3.6-9.91,3.76-11.06.35-2.52,1.77-5.29,2.69-4.92s-.56,3.13-.88,5.13-2.42,8.19-2.81,9.22a30.77,30.77,0,0,1-1.49,3.37c-.37.69,4.69.4,12.73-20.15.3-.75,2-2.91,2.12-3.71.2-1.91.17-2.06-.52-2.69-.4-.34-.5-1-1.71-1.07a4.55,4.55,0,0,0-2.26.21c-1.28.33-.58,2.19-1.61,3s-6.7,1.23-8.05.86a25.74,25.74,0,0,0-3.6-.58c-.94-.12-.68-1.48-.68-2.45s-.36-1.95-1.15-1.95-2.44-3.43-4-3.69-3-1-3.65-1a7.37,7.37,0,0,1-4.63-2.61c-1.53-1.88-8.37,0-10.35-.14-1.21-.09-7.05,2.86-8.56,2.87-.49,0-1.69.73-2.65.73-.45,0-1.4.85-1.82.84-2.43-.08-3.44.18-3-.24,1.17-1.17,8.22-2.69,9.05-3.18,7.8-4.83,7.76-1.83,8.76-3.42.64-1.4,5.19-1.11,4.73-2.53s-6-.53-7.2-.53,0-1-8,2.33c-1.3.55-4.79,4.16-8.43,3.27-1.38-.34-9.22,1-11,2.84-1.5,2.37-2,1.44-2.14,2.93s0,2.32.34,2.43,4,0,4,0,4.54,1.53,4.84,5.22c.13,1.83-1.7,1.38-1.7,1.38s-1-1.52-.7-2.19-.35-1.29-1.5-.84-.94,3-.94,3,.34,3.37,5.08,2.39\"/><path class=\"cls-1\" d=\"M182,360.13s-3.34-2.15-3.63-5.39-2.55-2.33-2.55-2.33-1,5.13,2.27,7.93c4.22,3.67,8.7,4.91,7.86,3.16s-4-3.37-4-3.37\"/><path class=\"cls-1\" d=\"M176.87,347.92c-2.28-.88-9.89-2.38-9.89-2.38s1.1,3.84,4.23,3.84A51.43,51.43,0,0,1,178,350s1.1-1.17-1.1-2\"/><path class=\"cls-1\" d=\"M180.42,339.08c-1-.8-1.67-1.73-2.48-2.34-4.26-3.24-6.88-4-6.88-4a2.3,2.3,0,0,0-2,.5c-.37.34-.78.6-.93.94-.41.92,1.3,1.76,1.73,1.94a16.27,16.27,0,0,1,3.82,1.57,20.87,20.87,0,0,1,3.83,2.1,75.17,75.17,0,0,0,6.77,5s2.3-.78-3.9-5.75\"/><path class=\"cls-1\" d=\"M179.37,347.63s.57.29,2.53-.59-6.19-5-8.46-6.76-7.31-2.68-7.31-2.68-1.15-.28-1.15,2.08a6.56,6.56,0,0,0,1.15,3.81,16.64,16.64,0,0,1,6.78,1.33c3.07,1.48,6.46,2.81,6.46,2.81\"/><path class=\"cls-1\" d=\"M242.88,329.43c.79-2.3,8.78-14.38,8.2-16.89s-3.77-1.24-4.63-1.68-.63.41-2.27.41-2.42-2.86-3.57-1.56-3.27-.25-4.15,0-1.77.18-.94,1.94c.12.25-4.12,3.3-4.53,5s4,5,3.58,6.36a148.08,148.08,0,0,1-7.41,17.58c-1,1.87-3.78,5-4.47,6.38a10.08,10.08,0,0,0-.67,3.12c-.05.51,4.67,1.59,6.5,3.88a4.73,4.73,0,0,0,1.3,1.32,13.18,13.18,0,0,1,1.46,2.14c1.48,3,2.75,6.05,5.19,6.08a5,5,0,0,0,4.26-3.58c.49-2,.66-4.23-2-5.92a3.67,3.67,0,0,0-4.76.8s-.78,1.26.16,2.06.45-.95,1.53-1,1.08.16,1.53.51,1.65,1.86-.41,3.67c-.61.56-1.95.3-2.86-.85a6.8,6.8,0,0,1-1.07-3.55,7.36,7.36,0,0,0-.21-1.3c1.13-.49,2-1.34,3.1-1.67,1.32-.47,3.46-.87,4.5-.44,3.1,1.31,3.84,1.69,5.18,3.19s1.68-3.86.59-4.46-2.93-.35-4-2.17-2.38-4.55-3.56-5.18-3.22-1.27-3.61-1.11-1.36.55-.43,2.05,2.49,2.56.51,1.94-3.33-1.42-2.72-3.24a4.76,4.76,0,0,1,3.15-3c1-.36,2.93.67,3.87,1.8s4.2,1.78,3.95.15-1.3-6.13-1.91-6-1.38-.36-1.58-2.18,2.52-2.2,3.27-4.51\"/><path class=\"cls-1\" d=\"M247.29,294.2a31.82,31.82,0,0,0-8.58,5c-4.05,1.6-11.62,4.49-16,4.1-3.85-.35-2.23,1.1-7.17.53s-8.51,2.94-11.91,2.53c-2.4-.28-.09,0-4.62,0-3.14,0-3.07,1.52-2.76,2.47.15.41,2.19.62,4.88.93s5.9,2.79,8.45,4.1,3.54,4.48,4.24,5.49,4.66,1.16,7.51.87,3.68-2.17,5.23-5.94,3.69-3.89,6.23-6.07c.18-.15.4-.34.62-.56,4.51-.92,7.89-1.81,8.75-1.63,2.37.44,4.23,2.43,6.45,2.29s2.33.21,2.73-.65-.57-.76-2.16-1.91c-4.19-3,2.16-5.84,4.39-4s-2.23,2.66.75,3.11c2,.3,3.35-2.35,2.68-5.48s-3.71-7.42-9.74-5.18\"/><path class=\"cls-1\" d=\"M239,366.27c-.2-.32-.69-.58-1.79-.63-2.88-.13-2.16-.6-4-1.35s-.78.36-1.81-3.87a10.12,10.12,0,0,0-7.48-7.65,37.41,37.41,0,0,0-7.6-.58c-1.33.25,1.88,1.93,3.47,2.12s4-.68,5.18.94,1.92,2.39,1.85,3.42-.15,2.62-1.48,2.94-.8.74-3,1c-1.52.16-2.18.35-3.39-.73s-1.85-2.52-.94-3.67,2.86-2.29,1-2.79-5.31-3-6.76-2.25-4.15-.43-5.69.56a29.37,29.37,0,0,1-3.65,1.72c-1.28.64-1.3,1.32-1.3,1.32s-.45,1,.37,1.09,2-.89,3.85-.44,6.08,4.66,6.48,5.28a9.84,9.84,0,0,1,1.4,2.93.17.17,0,0,1,0,.07c-1.47,0-3,0-4.47,0a3,3,0,0,0-2.62-1.22c-1.62.06-1.76-.89-3.09-2.09-.58-.53-1.18-2.45-2.29-3.31s-6.2,1.11-6.85,1.57-2.53,1.57-5.56,4a10.42,10.42,0,0,1-1.27.92l-7.82-.08c-.13-.07-.27-.12-.4-.2a8.22,8.22,0,0,1-4.2-4.74c-.61-1.36-.57-4.69-.61-6.53s-.71-1.9-1.88-1.95-.68,2.62-.53,4.64-.88,3.92-.2,7.16c.52,2.5,1.3,5.6,2.09,5.54h.15a5.4,5.4,0,0,0,4.61,2.42c-5.69.55,51.11.63,56.14.15,3.15.3,4.67-3.4,4.31-5.16a1.29,1.29,0,0,0-.27-.55\"/><path class=\"cls-1\" d=\"M397.92,129c-4-7.5-19.84-21.21-28.69-27-3.39-2.23-7.52-3.76-11.51-5.78-2.68-1.33-5.09-3.21-7.94-4.43C345,89.7,341.15,89,337.65,87.71s-7-3.08-10.45-4.09c-4.77-1.42-9.23-1.89-13.64-2.87-1.88-.42-3.9-1.55-5.65-1.87a93.63,93.63,0,0,0-10.29-1c-2.44-.23-4.83-.89-6.68-.82-6.9.22-21.9-2.66-23.79,7.25.12,2.11,1.44,5.67,1.32,8.54-.2,5.13-8.44,7.69-11,7.72-7.74.14-14.21-.6-22.8,7.41-8.14,7.62-8.75,24.32-8.92,24.38-.3,2-.21,3.22.14,3.88-.21.14-.37.21-.51.17-1.14-.36-.38-3.1-.38-6.5a36.91,36.91,0,0,0-.78-6.81c-.37-2.3,4.18-14.62,8.1-17.24,1.59-1.07,2.8-2.2,2.55-2.54-1.51-2-9.1-.73-12.17,1.48-1,.74-2,.58-3.77,2.4-.3.31-1.27,1.43-2.17,2.35-.52.55-1.65,1.6-2.1,2.09a14,14,0,0,1-3.35,2.55S205.62,118,208.1,117c3-1.16,4.23-.59,5,.6s3,6.81,3,10.19-1.85,6.44,0,5.68,1-6.46,1-6.46l-.5-7.14s.3-1.82.49-1.37A14.26,14.26,0,0,1,218,121c1.21,4.27.84,16.38-.71,19.23a10.32,10.32,0,0,0-.18,8.06c1.52,2.93-.09,1.75-1,1.09a35.44,35.44,0,0,1-4.62-3.81c-1.47-1.52-1.84-3.36-1.31-4.17,1.07-1.73,1.54-1,2.75-1.17.62-.09-.38-1.34-2.41-2.79-.2-.17-.92-.13-1.44-.59a5.09,5.09,0,0,0-.69-.62c-.32-.23-1.22-.25-1.53-.64a11,11,0,0,0-2.22-1.91c-.51-.48,1.57-.26,3.28,0a6.26,6.26,0,0,0,3-.15c.47-.3.91-.65.55-.76-2.09-.59-6.91-1.12-8.72-1.62-2.37-.68-2.9,0-5.06-1.51s-1.09-6.78-1.09-6.78l3.07.06,1.84-1.34c.08.18.25.22.61,0a5.25,5.25,0,0,0,.79-.79.91.91,0,0,0,.55-.63c1.21-1.39,2.87-3.34,3.11-3.5s.48-.92.86-1.19.91-.07,1.25-.34.65-.56,1-.86.59-.58.87-.87a17.83,17.83,0,0,0,3.51-5.39c.5-1.19-.11-2.64,2.45-3.53s2.94-.57,3.57-1.11a5.85,5.85,0,0,0,1.78-2.72c.26-1.21.15-.7-.56-2.85s-1.22-3.2-2.09-3.2-1.12-3.07-.85-4,.95-1.78-.13-2-2.67,1.84-2.22,0,1.58,0,1.58-1.12,3.09.61,3.87-2-.05-7.12-1.34-8.33-2.64-2.89-1.87-3.44,2.44-1.6.95-3.17c-2.41-2.51-1.2-4.46-2.29-6.81-3.59-7.72-7.39-7.4-8.24-7.5s-1.36,1.52.12,4.08.24,2.36.1,2.31l-2.79-.85c-.86-.27-1.11,1,.48,3.48s3.33,3.69,3.47,4.88.76,1.54-.42,1.54-3.56-.73-3.89-.61c-3.65,1.34,1,8.33-.37,8.25-.46,0-2.68-4.84-3.7-5.86s-.95-2.22-.69-3.85a5.86,5.86,0,0,0-1.08-3.75c-.34-.62-2.35-2-.18-4.35s4-2.38,3.06-2.64-3.17-1.33-3.7-1.49-1-.26-1.08.66a5.05,5.05,0,0,1-.89,3.26c-.86,1-.6,2.32-1.41,2.17a3,3,0,0,0-1.91.6c-.54.44,0,.14-1.21,1.57-.72.92-1.1,1-.83,1.36s1.26,0,3,0,2.17-.46,2.54,1,.46,2.46-.42,2.82-3.4,0-4.57,1.46-.6,2.38-1.71,2.49-2.18-.81-2.62.1,0,2,0,3a2.82,2.82,0,0,1-2.48,1.94,3,3,0,0,1-2.3-1.59c-.53-.73-.31-1.4-.75-1.14,0,0-.63.13-.34,1.9s2.12,2.73,2.27,4.48.35,2.67.34,4c0,.86,1,2.08-.14,3.15-.4.38-3.93.53-6,1.63-1.8.92,2.31,5.88,1.79,7.12a13.5,13.5,0,0,0-1.14,2.9c-.17,1.71.84,2,1.09,3.27.14.71-.33,1.38-.41,1.77a1,1,0,0,0-.3-.29c-1-.66,0-2.5-1.22-3.47-2.34-1.79-1.16-1.77-.51-4.41a7.75,7.75,0,0,0-1.55-6.74c-.47-.78-3.44-2.53-5.63-3.61-2-2.22-10.54-1.5-11.25-2.84-2-3.85,3.94-10.62,4.89-14.7.16-.58.42-2.7.49-2.92,2.72,1,16.11,5.74,18,6.4a1.32,1.32,0,0,0,.89.39c1.06,0,1.84-.06,2.41-1.4.41-.79-1.93-.83-2.45-1-3.39-1.46-15-5.45-18.21-7a5.17,5.17,0,0,0-.29-3.53c-.4-1.14-1.37-2.74-4.49-2.83a2.69,2.69,0,0,0-2.56-.9.28.28,0,0,1-.2,0c-.15-.33-.8-.29-1.12-.52a2.78,2.78,0,0,0-2.86-.65.56.56,0,0,1,0-.08,5.64,5.64,0,0,0-3.16-1.2,2.5,2.5,0,0,1-.68.06c-.1,0-.13-.08-.22-.13-1.06-.55-3.69-.06-5.11.38-3.91-1.88-7.88-3.65-9.17-4.29C123.27,46.65,79.87,29,70.23,25.24A146.21,146.21,0,0,1,49,14.91c-2.74-1.69-5.17-5.09-7.42-12.23-.39-1.23-.1-4.75-3.19-1-3.25,4-6.93,11.4-8,20.34-.14,1.11-.74,3.68,1.42,2.54,3-1.6,8.71-4.47,14-3.31,6.84,1.49,28.79,9.41,45.42,16.3C102.35,42.19,137,55.93,140.57,58c.44.23.51.35.44.42s-.44,0-.65,0h-.23c-.07.39-7.74-2.55-26-3.6a65.55,65.55,0,0,0-11.82-.48c-2.83.15-6.22.8-9.8,1.18-4,.43-8.18.62-12.83,1.44-2.64.47-6.63.64-9.44,1.27a48.26,48.26,0,0,0-13,5c-3.06,1.49-6.64,1.4-10,2.68A129,129,0,0,0,5.75,91.12C0,96.45-3.25,99,4.92,97.59c2.4-.44,3.89.14,5.07-1.4,2.07-2.69,12.86-7,9.51.59-1.57,8.74,3.78,4.59,8.89,1.89,1.39-.74,14.86-7.86,15.91-7.71.52-.06.82.17.89.42a2,2,0,0,1-.26,1.35c-1.45,3.26-7.68,10-8,10-.43,2.29,1.85,2.84,5,1.24,8.47-1.94,15.37-8,24.32-10.16,5.81-1.4,9.68-2.88,11-2.15.63.34.48,2,.5,2.39.18,4.68-3.37,14.55-.68,15.33,2.85.82,10.38-11.52,12.06-13.68a28,28,0,0,1,2-2.26c.66-.69,1-.19,1.16.33a32.41,32.41,0,0,1,.82,7.35,18.9,18.9,0,0,1-1.16,7.27c-2.13,5.7,1.83,3.13,5.54,1a42.55,42.55,0,0,0,7.59-5.68c2.63-2.83,5.79-6.19,5.79-6.19a1.55,1.55,0,0,1,1.38-.76c3.35.84-1.11,17.84,4.48,17.84,4.91,0,7.1-10.1,9.08-9.37s5.73,13.2,9.73,14a8.32,8.32,0,0,1,.11-4.73c.83,1.24-.75-3.91.52-2.83,7.54,6.38,4.33,8.19,4.62,12.7.46,8,6.22,5.91,6.67,6.46,2.58,3.24-.92-4.39,1.78-2.07.71.6,6.69,2.15,6.36,3.16-1.72,5.37,4.37,13.47.51,17.57a17.13,17.13,0,0,0-3.4,5.45,53.71,53.71,0,0,0-10.52,23.23c1.73,10.6,10.83,22.33,13.12,23.94s2.89.77,2.37-1.45c-.4-1.67.74-3-1.08-5.21-.68-.83-1-3.81-1.38-4.81a61.2,61.2,0,0,1-3-9.12c-.2-1.3-.44-2.32-.56-3.41-.07-.48-.1-1-.13-1.46a20.23,20.23,0,0,1,.33-4.56,27.9,27.9,0,0,1,.72-3.51,9,9,0,0,1,.84-1.58c.43-.89.82-1.8,1.3-2.68.27-.44.31-1.06.58-1.49.42-.68,1.09-.81,1.33-1.17a2,2,0,0,0-.08-1.84c1.24-1.86,2.64-4,4-6,1.3-1.76,2.5-3.37,3-4a1,1,0,0,0,.26-.42,8.92,8.92,0,0,1,2.63-2.36,32.88,32.88,0,0,0,4-2.13c.4.18,1.22.07,2.58-.44,4.35-1.63,8.74-5.66,8.74-5.66l.32-1.17c1.11-1.16,2.14-2.28,3.12-3.14a21.34,21.34,0,0,0,1.79-1.75,5.16,5.16,0,0,1,3.09,0l3.69-8.31s1,5.81,1.42,7.35,2.24,5.54,4,5.54-.36-3.05-.36-3.05a22,22,0,0,1,3.62,2.63c2.2,1.89,5.49,1.89,6.58,4.51s0,3.06,0,3.06-14.89-4.89-20.73-3.78-15.17,4.09-18.44,7.87a6,6,0,0,0-1.25,2.29A37.4,37.4,0,0,1,166,154.6c-.38.47-.49,1.46-.9,2.05s-.23,1.33-.74,2.12c-1.62,2.53-1.45,5.09-3.1,9.07a52.26,52.26,0,0,0-2.32,5.5,31.75,31.75,0,0,0-.46,5.4c-.11,1.46-.46,3-.42,4.42a39.76,39.76,0,0,0,1.35,8.81c.83,4.82,2.23,14.21,1.89,20.68-.05.84.31,1.94.26,2.81s-.54,1.45-.6,2.3.41,2.45.34,3.26c-.33,5.88-1.12,10-1.12,13.65.12,1.74-.36,3.06-.1,4.42a56.11,56.11,0,0,1-13.73,26.09c-4.57,9.38-15.37,12-29.1,14.37-2.88,1.45-10-3.31-9.61-4.13-5.27-2.67-9.5,7.2-6.09,7.2,5,2.28,9.06,22.58,14.94,19.13,4.07-2.4,3.35,3.89,7.47,1.49,1.84-.44,2.51.09,4-2.7,3.44-5.64,8.84-8.65,12-12.18,2.29-2.49,6.26-13.67,7.39-13.22,0,7.64-9.61,20.7-14.07,23.22-6.78,6.93-3.17,10.42-.2,16.7.68,1.46.82,2.82,2.14,4a21.68,21.68,0,0,0,2.52,1.69c2.64,2.24,10.06,2.14,12.64.71s5.45-.51,5.92-1.4c.92-1.78-4.06-8.42-5.35-10s-2.49-1.34-1.85-3.49c1-3.52-2-2.89-.14-6.77,2-4.33,3.48-11,5.05-14.79.12,0,10.32-27.31,10.59-31.87.5-3.23,4-11.64,4.58-9.35-1.54,12.16-5.35,29-10.27,45.78,1.17,7.43-3.39,10.55-3.3,16.17.06,3.55,2.57,2.83,3.4,2.93,4.23.48,6.92,3.34,9.82,2.37,3.89-1.11,10.7-5.92,8.39-5.77-1.72.11,2.21-7.26,2.21-10.09,0-2.6-4.16-10.43-5-19.45-.3-3.12,6.08-7.77,6.05-9.05,0-1.52-5.64.6-6.56-1.37-1.46-3.21-1.32-12.06-.39-16.65.24-4.72,1.52-17.5,1.3-19.29.81-3.6,8.35,5.85,10.93,11.56.11,0,.38.82.48,3.16,0,.76-.16,1.77-.1,2.82s.32,2.49.35,4c0,.57,0,1.17,0,1.79s-.21,1.46-.19,2.07c0,1,.25,1.85.26,3,0,1.62,0,3.39,0,5.28,0,.87-.25.66-2.52,1.87-1.18.65-2.09.6-1.92,1.78.24,1.88,4.3,2.66,4.8,8,.21,2.18-.27,10.8.72,15.74.21,1,.46,2.53.54,2.65.64.85.83,4.26-.08,5.73-.24.38-1.29,5.52-.46,5.48l6.48-.95a7.88,7.88,0,0,0,1.53-.26,5.34,5.34,0,0,0,1.14.07,6.39,6.39,0,0,0,3.94-1.87c2.12-.88,4-.71,5.12-1.19,1.52-.67,9.4.31,11-.15,6.8-1.89,17.81-2.22,19.75-4.2a36.14,36.14,0,0,0,4-1.34c-.57.1-1.84,0-3.33-4.47a33,33,0,0,0-7.82-13.1c-3.29-3.23-16.21-18.26-16.21-18.26a45.27,45.27,0,0,0,5.42,2.8,55.56,55.56,0,0,0,11.82,2.42s4.25,7.16,7.23,11.08,9.73,10,11.25,12.55c1.67,2.77,1.55,3.09-1,4-2.05.76-3.87,1.53-5.19,2.11,3.23-1.33,6.19-2.64,7.56-2.67.95.15,1.76-.26,2.58,0h.62c7.32,1.36,10.5,12.42,12.05,12.52,3.4,1.07,4.18-.81,8-2.51,3.42-1.5-5-4.89-2.74-10.49.84-2,3.41-9.2,6.3-12.05,1.53-1.49,2.46-.76,3.23-1.55,1.1-1.12-.1-4.07-1-4.85-1.68-1.37-6.11-.44-9,5.42a2.61,2.61,0,0,1-1.59,1c-.59,0-.78.77-1.56.26s3.47-3.7,2.72-4.53c-2.3-2.48-7-3-3.74-4.55,1-1.45-.88-3.53-1-5-1-6.73-7.33-9.11-14.59-9.84-.8-.07-.47-1.27-1.52-1.09a32.32,32.32,0,0,1-3.95.84c-1.22,0-2.11-.43-3.47-.22a17.73,17.73,0,0,1-2.11.33c-.76,0-1.38-.19-2.12-.16-1.12.06-2.34.36-3.36.42a31.91,31.91,0,0,1-6.67-.12c-1.81-.33-1.75.64-5.39.87-12.76-2.55-20.09-7.24-29.95-18.07-6.7-4.17,1.39.37,1.29-1.21,4.08,1-4.92-2.69-9.92-6.51-1.67-2.64-4.13-1.52-8.33-5.89-.54-.55-1.81-1-4.19-3-.05-.2-.08-.39-.15-.6-.92-2.37-3-4-2.68-7.47a8.11,8.11,0,0,0-1.71-5.75s2.73-1.94,0-5.29a15.06,15.06,0,0,1-2.47-4.72c.1-.56.17-1.19.24-1.9.21-1.73-3.18-3.8-1.95-13.35.15-1.06.91-4.11,1.14-5.28.18-1-.69-2.8-.44-3.84.28-1.19,1.7-1.6,2.1-2.91.43-1.52.72-4.55,2.35-7.42a51.78,51.78,0,0,0,3.23-7.55l3.36-5.62s4.89-4.09,10-4.09,7.4-8.15,25,2.94c3.52,2.2,2.44,7.75,4.39,9.21,1.76,1.33,1.65,1.92,1.92,3.29.45,2.31-1.52,4.69-3,6.08-3.26,3.15-14.67,20.76-10.25,17.67,6.06-4.26,5.43-9.47,6.89-9.85s6.38-7.77,8.53-9.31c1.37-.94,2.16,2.28,2.9,5.84-.09-2.14,0-4.27,0-5.75,0-5.26,2.75-9.11,4.16-11.34,1.73-2.83,2.33-4,8.63-15s9-12.07,9-12.07a12.85,12.85,0,0,1,3.46-.73,13.48,13.48,0,0,1,3,.77c1.15.36,1.45,0,2.94.47s.92,1.48.72,3-.65,1.64-.77,2.2a25.07,25.07,0,0,1-6.93,13.92c-4.41,4.54-16.25,14.71-17.31,16.1s-.66,1.53-.6,2.67a8.09,8.09,0,0,0,2.55,4.17c.89.64,1.59,1.77,1.34,2.39s-.81.95-2.28-.24c-2.2-1.7-3.72-1.57-3.65,0s-.32,3.36.65,4.82c.62.92,2.93,2.51,4.15,1.93.66-.32,1.26-.55,1.52-.2s.24.45-.92,1.42c-1.36,1.12-4.21.95-7.29-1.19a2.81,2.81,0,0,1-.73-.73c1.31,3.89,2,7.44,3.08,9.6a4.44,4.44,0,0,1,.19.53c.22.33.38.58.5.73,6.15,8.54,9.71,7.46,9.71,7.46s4.22,1.31,5.82,1.83a2.46,2.46,0,0,1,.83.33l.27.16a33.15,33.15,0,0,1,3.53,2.86c1,.94.65,1.17,2,1.6,1.15.38.42.6,1.59.6,1.88,0,5.35-.42,6.58.07.42.18,1.37-3.16,4.6-5.38.1-.06,1.49-1.93,1.53-2.05s-6.13,6.39-10.52,3.24c-6.55-4.67-7.05-8.31-10.56-11.92-.24-.25-1.2-1.46-1.44-1.69-.5-.57-.62-.44-1.07-.95s-.68-.94-1-1.24c-1.59-1.47-2.72-4.41-3.22-5.29-.37-.68-.77-1.37-.39-1,.61.57,1.55,1.45,2.69,2.54.53.49,2.24,1.14,2.84,1.71.24.23.48.47.74.7s.57.54.86.83c4.65,4.37,12.47,3.86,13.78,4,.23,0-.23-.2,0-.2s2.84,1.42,3.17,1.39.54-.31.74-.35c.66-.08,1.38.22,1.94,0a7.18,7.18,0,0,0,.84-.39c.5-.29.93,0,1.24-.47,1.11-1.78,1.5.23,2-1.23.32-.87.63.14.77-.32a1.06,1.06,0,0,1,.66-.62,69.83,69.83,0,0,1-1.07,8.36c-.62,3.74-7.74,10.2-7.47,11.09a25.63,25.63,0,0,0,4.88,8.33,40.33,40.33,0,0,1,2.7,3.81c1,1.75,3,1.06,4.67-.68a11.78,11.78,0,0,0,1.49-2.72c.17-.34.72-1,1.12-1.69.53-.85,1.27-1.59,2-2.73.28-.47.3-1.2.59-1.69s1.07-1.09,1.33-1.56a8.38,8.38,0,0,0,.95-2.85c.36-2.83-3.57-4.22-3.55-4.5.19-1.31-3-2.56-2.12-6.6,1.48-6.79,5.87-8.8,2.68-13.46-.64-1-.76-2.81-1.28-3.4a6.64,6.64,0,0,0-2.57-1.5c-1.66-.75-3.7,2.53-5.94,2.21a19.57,19.57,0,0,1-9.91-4.93s-10.88-5.93-11.53-9c-.31-1.19-5.29-5-4.31-5.81.67-.55-.56.34.11-.21a9.94,9.94,0,0,1,1.45-1c.34-.16.35-.64.6-.38,1.64,1.67,6.26,9.49,8.53,10.7,2.94,1.59,3.57,1.69,6,4.49s2.67.05,2.79-2c.1-1.75,1.88-5,1.72-7.13-.31-4.54.09-7.16,1.52-12.44s2.3-8.79.15-14.84a11.25,11.25,0,0,1-.15-3.71c0-2.64-2.65-7.78-4.32-8.71-1.31-.76-3.66-2.33-8.51-.57a12.67,12.67,0,0,1-2,.66c-.28,0-.91.64-1,.61-.4-.1-.3-.46.26-1a11.88,11.88,0,0,1,1.55-1.25c1.2-.83,3.5-2,4.91-1.76,1.68.25,2.21-.93.63-1.31a10.53,10.53,0,0,0-5.3-.11,6.61,6.61,0,0,0-2.52,1.34,8.7,8.7,0,0,0-.86.59c-.13.14-.46.69-.6.81s-1.36,1.11-1.51,1.26a12,12,0,0,0-1.79,2.28c-1.11,1.5-4.74,4-5.85,7s-1.92,4.66-1.92,2.77-.19-1.27.62-4.63c3.39-5.7,9.14-12.44,12.1-14.11,5.9-2.42,7,.5,9.27,1.52,4.64,3.47,8.88,7,8.88,15.4,0,2.76,4.89-.35,5.5-1.23,1.66-2.36,4.6-5.15,4.91-4.6a17.7,17.7,0,0,1,2.82,3.61c.84,1.32,4.71,6.68,5.74,7.89,2.75,3.19,4,3,3.22-1.08-.9-4.7,2.32-13.24,2.78-15.24.59-.11,8.08,6.32,9.46,7.68,4.8,4.71,6.85,5.92,8.24,4.91s.71-3.27.52-5c-.52-4.4-1.62-11-.76-11.73s6.07,3.26,8.42,6.49c1.5,2.08,8.84,9.86,12,9.31,1.24-.23-1-2.23-1.69-5.79s-1.66-11.37.79-11.15c4.18.39,5.8,2.71,10.42,6,2.21,1.57,6.6,5.92,13.39,9,6.07,2.69,7.06,1.71,5.95-.4-.6-1.13-3.94-6.62-4.57-8.73s.17-3.35,1.52-2.26c5.82,4.71,16.73,9.62,18.14,10,5.49,1.38,8.2,2.57,9.13,1.17,1.31-1.91-.65-5.07-.83-7.22-.09-1,.08-1.77.65-1.32.95.76,2,1.71,3,2.69a29.21,29.21,0,0,0,14.11,7.71c2,.51,2-.31,1.41-1.4M175.08,104.3a7.06,7.06,0,0,1-.68-1.11l.68,1.11M157.33,59.72c-.31.06-.66.16-1,.24a.39.39,0,0,0,.16-.25.78.78,0,0,0-.05-.23,8.11,8.11,0,0,1,.88.24m-4.8-.1a1,1,0,0,0,.14.16c-.21-.09-.42-.17-.62-.27a1.48,1.48,0,0,1,.48.11m1.83.49a1.07,1.07,0,0,0,.64.23c-.22.08-.41.14-.63.2l-1.06-.46a4.36,4.36,0,0,1,1.05,0m37.42,61.1c0-.26,0-.39,0-.38-1.46-.16-1.51,1-3.3,2.71-.16.15-.36.3-.53.46a8.78,8.78,0,0,1-1.95,1.28c-2.34.75-7-.19-11.94,1-2.11-.21-4.35-.09-5.74,1a1.27,1.27,0,0,0-.47,1.7c-1.9.78-4.73,1.26-5.79.12a4.4,4.4,0,0,1,.47-1c3.53-5.41,4.09-3.22,2.77-10.06a27.58,27.58,0,0,1-.56-5.16c-.4-.54-1.24-1.47-3.42-.89s-4.47.39-10-.38a36.93,36.93,0,0,1-5.34-1.4c-.49-.13-1.52-.19-2-.32s-.88-.43-1.42-.6c-.24-.08-.7-.11-1-.19-2-.69-3.68-1.64-5.41-2.28-1.34-.5-2.88-.7-3.92-1a19.65,19.65,0,0,1-3.79-1.39c-.89-.87-.65-1-.5-3.5,1.11-16.44,11-24.38,11.59-25.62,2.54-4.78,5.06-7,6.45-9.11s1.27-4.33,1.68-4.74c.91.1,2.23,1,3,1,1.45.21,1.18.65,2.67.27a8.06,8.06,0,0,1,2.35.39,3.18,3.18,0,0,0,.63-.79c.23-.39.45-1.52.95-1.61a.88.88,0,0,1,1.1.94,6.8,6.8,0,0,1-.19,2.09,5.19,5.19,0,0,1-.85,1.36s-.05,0-.06,0l-.17.12c-.06,0-.13.13-.19.19s0,0,0,0c-.84.89-1.44,2.29-3.43,2.51-4.55.54-7.66,13.28-9.34,17.74-.89,2.41-3.34,6.1-3.25,9.17.14.54,1.21.88,2.47,1.12a29.28,29.28,0,0,0,5.73.51c1.06,0,2.26-.11,3.45-.13.81,0,1.56.14,2.42.13s2-.22,3.06-.25l5.37-.12a12.45,12.45,0,0,0,3.49-.71,14.92,14.92,0,0,1,5.45-.58,7.25,7.25,0,0,1-.11,2.61c-.1.06-.18.14-.28.21-.77.6-2.64,1.64-2.94,5.39s-.18,2.63,1,4.35c1.73,2.44.89.75,2.56.23s5.2,2.76,5.76,1.09c.16-.45-.11-1-.59-1.64a3,3,0,0,0,1.36.6c.27,0,.76-.08.88-.28.07.12.32.17.88.12,1.19-.1,1.91-2.24,1.69-4.6a6.1,6.1,0,0,1-.05-2.24,10.66,10.66,0,0,1,.81-4.93c.8-1.53,3.65-1.31,3.65-3.54s.12-6.78.69-6.49,1.24,2.35,1.24,5-.26,3,.64,3.9a8.5,8.5,0,0,0,2.3,1.5s1.69.53,1-2.32-2.14-3-1.5-5,1.38-4.42,4.22-1.72c1.78,1.71,1.07,1,2.45,3.63.62,1.18,1.42,2.31.87,4.23-.3,1.06-1.07,1.33-1.32,3.5s-.58,2.63,1.44,3.13,2.57.73,4.38-.73,3-2.49,3.72-2.23,1.87.31,1.38,1.51-1,.39-1.42,1.43c-.24.6-1.13,2.38.13,2.38s.36,1.49,1,1.91.87.45-.07,2.19-.28.86-1.43,2a27.53,27.53,0,0,0-4.33,7.34c-1.38-.11-3.66,3.22-5.71,2.65-1.38-.44-3.13.06-4.85,1m47.07,47.07c8,6.95,11.29,6.28,12.93,6.25s6.88,1.59,6.8,2.48-1.94-.38-2.42-.37c-10.53.52-16.31-3.75-18.85-5.23s-4.12-8.15-6.71-10.15c.7-.73,1-1,1.56-1.5,1.56.81,5.77,7.72,6.69,8.52\"/></g></g></svg>\n\\ No newline at end of file"
      },
      {
        "sha": "9bd4f35c6cd567d410d558c3e81d16b22fa5e5d2",
        "filename": "app/static/img/logos/university_of_ulm.svg",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Flogos%2Funiversity_of_ulm.svg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Flogos%2Funiversity_of_ulm.svg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Flogos%2Funiversity_of_ulm.svg?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"300\" zoomAndPan=\"magnify\" viewBox=\"0 0 224.87999 74.999997\" height=\"100\" preserveAspectRatio=\"xMidYMid meet\" version=\"1.0\"><defs><clipPath id=\"1bb9c47279\"><path d=\"M 0 0.0195312 L 224.761719 0.0195312 L 224.761719 74.980469 L 0 74.980469 Z M 0 0.0195312 \" clip-rule=\"nonzero\"/></clipPath><clipPath id=\"d9c3b46b4f\"><path d=\"M 179 28 L 224.761719 28 L 224.761719 63 L 179 63 Z M 179 28 \" clip-rule=\"nonzero\"/></clipPath></defs><g clip-path=\"url(#1bb9c47279)\"><path fill=\"#ffffff\" d=\"M 0 0.0195312 L 224.878906 0.0195312 L 224.878906 82.476562 L 0 82.476562 Z M 0 0.0195312 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#ffffff\" d=\"M 0 0.0195312 L 224.878906 0.0195312 L 224.878906 74.980469 L 0 74.980469 Z M 0 0.0195312 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#ffffff\" d=\"M 0 0.0195312 L 224.878906 0.0195312 L 224.878906 74.980469 L 0 74.980469 Z M 0 0.0195312 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/></g><path fill=\"#000000\" d=\"M 120.382812 28.972656 L 111.582031 28.972656 L 111.582031 45.414062 C 111.582031 49.699219 110.191406 56.644531 103.820312 56.644531 C 98.261719 56.644531 98.144531 51.089844 98.144531 46.917969 L 98.144531 28.972656 L 89.457031 28.972656 L 89.457031 50.277344 C 89.457031 57.804688 92.929688 63.476562 100.925781 63.476562 C 105.210938 63.476562 109.265625 61.507812 111.929688 58.152344 L 112.042969 58.152344 L 112.042969 62.78125 L 120.382812 62.78125 Z M 120.382812 28.972656 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 166.488281 11.949219 L 170.542969 11.949219 L 170.542969 62.667969 L 166.488281 62.667969 Z M 166.488281 11.949219 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 157.566406 14.613281 L 155.714844 14.613281 L 155.714844 12.296875 L 154.671875 12.644531 L 154.671875 14.496094 L 153.050781 14.496094 L 153.050781 15.425781 L 154.671875 15.425781 L 154.671875 20.054688 C 154.671875 21.5625 154.789062 22.71875 156.527344 22.71875 C 156.875 22.71875 157.335938 22.601562 157.683594 22.488281 L 157.566406 21.675781 C 157.21875 21.792969 156.988281 21.792969 156.640625 21.792969 C 155.832031 21.792969 155.484375 21.097656 155.484375 20.402344 L 155.484375 15.191406 L 157.335938 15.191406 L 157.335938 14.496094 L 157.566406 14.496094 Z M 146.910156 13.222656 L 148.070312 13.222656 L 148.070312 11.949219 L 146.910156 11.949219 Z M 149.574219 13.222656 L 150.734375 13.222656 L 150.734375 11.949219 L 149.574219 11.949219 Z M 150.617188 19.015625 C 150.617188 19.941406 150.503906 21.910156 148.300781 21.910156 C 147.375 21.910156 146.679688 21.5625 146.679688 20.519531 C 146.679688 18.78125 148.765625 18.667969 150.503906 18.667969 L 150.847656 18.667969 L 150.847656 19.015625 Z M 150.734375 22.601562 L 151.660156 22.601562 C 151.542969 22.023438 151.542969 21.445312 151.542969 20.980469 L 151.542969 17.507812 C 151.542969 15.425781 150.617188 14.496094 148.765625 14.496094 C 147.953125 14.496094 147.144531 14.730469 146.449219 15.078125 L 146.449219 16.003906 C 147.144531 15.539062 147.953125 15.308594 148.765625 15.425781 C 150.039062 15.425781 150.617188 16.117188 150.617188 17.507812 L 150.617188 17.855469 L 150.503906 17.855469 C 148.417969 17.855469 145.636719 17.972656 145.636719 20.636719 C 145.636719 21.910156 146.679688 22.949219 147.953125 22.949219 C 148.070312 22.949219 148.183594 22.949219 148.300781 22.949219 C 149.34375 22.949219 150.269531 22.371094 150.734375 21.445312 Z M 144.246094 14.613281 L 142.507812 14.613281 L 142.507812 12.296875 L 141.46875 12.644531 L 141.46875 14.496094 L 139.84375 14.496094 L 139.84375 15.425781 L 141.46875 15.425781 L 141.46875 20.054688 C 141.46875 21.5625 141.582031 22.71875 143.320312 22.71875 C 143.667969 22.71875 144.132812 22.601562 144.480469 22.488281 L 144.363281 21.675781 C 144.015625 21.792969 143.785156 21.792969 143.4375 21.792969 C 142.625 21.792969 142.277344 21.097656 142.277344 20.402344 L 142.277344 15.308594 L 144.132812 15.308594 L 144.132812 14.613281 Z M 138.222656 11.140625 L 137.179688 11.140625 L 137.179688 12.53125 L 138.222656 12.53125 Z M 137.296875 22.601562 L 138.339844 22.601562 L 138.339844 14.613281 L 137.296875 14.613281 Z M 130.347656 22.488281 C 131.042969 22.71875 131.851562 22.949219 132.546875 22.835938 C 133.707031 22.835938 135.328125 22.257812 135.328125 20.519531 C 135.328125 17.972656 131.390625 18.085938 131.390625 16.582031 C 131.390625 15.539062 132.085938 15.191406 133.125 15.191406 C 133.707031 15.191406 134.285156 15.308594 134.863281 15.539062 L 134.980469 14.613281 C 134.285156 14.382812 133.707031 14.265625 133.011719 14.265625 C 131.621094 14.265625 130.460938 14.960938 130.460938 16.464844 C 130.460938 18.78125 134.285156 18.550781 134.285156 20.402344 C 134.285156 21.328125 133.359375 21.792969 132.546875 21.792969 C 131.851562 21.792969 131.15625 21.5625 130.460938 21.328125 Z M 125.714844 22.601562 L 126.753906 22.601562 L 126.753906 18.667969 C 126.753906 17.277344 127.101562 15.425781 128.726562 15.425781 C 128.957031 15.425781 129.1875 15.425781 129.417969 15.539062 L 129.417969 14.496094 C 129.1875 14.382812 128.957031 14.382812 128.726562 14.382812 C 127.683594 14.382812 127.101562 15.308594 126.640625 16.117188 L 126.640625 14.613281 L 125.597656 14.613281 C 125.714844 15.191406 125.714844 15.773438 125.714844 16.464844 Z M 118.300781 18.085938 C 118.183594 16.699219 119.226562 15.425781 120.617188 15.308594 C 122.121094 15.308594 122.703125 16.699219 122.703125 18.085938 Z M 123.164062 21.445312 C 122.46875 21.792969 121.773438 22.023438 120.964844 22.023438 C 119.226562 22.023438 118.414062 20.636719 118.414062 18.898438 L 123.859375 18.898438 L 123.859375 18.320312 C 123.859375 16.234375 122.933594 14.382812 120.730469 14.382812 C 118.53125 14.382812 117.371094 16.117188 117.371094 18.550781 C 117.371094 20.980469 118.414062 22.71875 120.964844 22.71875 C 121.773438 22.71875 122.585938 22.601562 123.28125 22.257812 Z M 116.332031 14.613281 L 115.289062 14.613281 L 112.972656 21.5625 L 110.769531 14.613281 L 109.726562 14.613281 L 112.507812 22.601562 L 113.667969 22.601562 Z M 108.222656 11.140625 L 107.179688 11.140625 L 107.179688 12.53125 L 108.222656 12.53125 Z M 107.179688 22.601562 L 108.222656 22.601562 L 108.222656 14.613281 L 107.179688 14.613281 Z M 98.375 22.601562 L 99.417969 22.601562 L 99.417969 18.203125 C 99.417969 16.8125 99.996094 15.308594 101.734375 15.308594 C 103.125 15.308594 103.589844 16.234375 103.589844 17.738281 L 103.589844 22.601562 L 104.632812 22.601562 L 104.632812 17.507812 C 104.632812 15.773438 103.820312 14.382812 101.851562 14.382812 C 100.691406 14.265625 99.648438 14.960938 99.300781 16.003906 L 99.300781 14.613281 L 98.375 14.613281 C 98.492188 15.191406 98.492188 15.886719 98.492188 16.464844 Z M 95.828125 14.613281 L 94.785156 14.613281 L 94.785156 19.015625 C 94.785156 20.402344 94.207031 21.910156 92.46875 21.910156 C 91.078125 21.910156 90.613281 20.980469 90.613281 19.476562 L 90.613281 14.613281 L 89.6875 14.613281 L 89.6875 19.707031 C 89.6875 21.445312 90.5 22.835938 92.46875 22.835938 C 93.625 22.949219 94.667969 22.257812 95.015625 21.214844 L 95.015625 22.601562 L 95.941406 22.601562 C 95.828125 22.023438 95.828125 21.328125 95.828125 20.75 Z M 95.828125 14.613281 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 157.105469 28.855469 L 152.933594 28.855469 L 152.933594 47.5 C 152.933594 53.054688 150.617188 59.773438 142.855469 59.773438 C 137.066406 59.773438 134.863281 55.71875 134.863281 49.351562 L 134.863281 28.855469 L 130.695312 28.855469 L 130.695312 50.394531 C 130.695312 57.804688 133.820312 63.363281 142.160156 63.363281 C 149.226562 63.363281 151.660156 59.539062 153.050781 56.644531 L 153.167969 56.644531 L 153.167969 62.550781 L 157.21875 62.550781 C 156.988281 59.886719 156.988281 57.226562 156.988281 54.5625 Z M 157.105469 28.855469 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><g clip-path=\"url(#d9c3b46b4f)\"><path fill=\"#000000\" d=\"M 224.289062 62.667969 L 224.289062 39.394531 C 224.289062 32.792969 220.46875 28.160156 213.632812 28.160156 C 208.882812 28.046875 204.597656 30.941406 202.859375 35.339844 L 202.746094 35.339844 C 201.703125 29.433594 196.835938 28.160156 193.824219 28.160156 C 186.644531 28.160156 184.671875 32.445312 183.285156 34.761719 L 183.167969 34.644531 L 183.167969 28.972656 L 179.113281 28.972656 C 179.34375 31.636719 179.34375 34.296875 179.34375 36.960938 L 179.34375 62.667969 L 183.515625 62.667969 L 183.515625 44.023438 C 183.515625 35.6875 188.03125 31.75 192.550781 31.75 C 197.878906 31.75 199.617188 35.570312 199.617188 40.203125 L 199.617188 62.550781 L 203.785156 62.550781 L 203.785156 44.023438 C 203.785156 35.6875 208.304688 31.75 212.820312 31.75 C 218.152344 31.75 219.886719 35.570312 219.886719 40.203125 L 219.886719 62.550781 Z M 224.289062 62.667969 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/></g><path fill=\"#000000\" d=\"M 25.746094 49.46875 C 25.976562 50.507812 26.210938 51.550781 26.558594 52.59375 L 26.671875 52.59375 C 27.601562 52.59375 28.292969 53.289062 28.292969 54.214844 C 28.292969 54.675781 28.0625 55.140625 27.714844 55.488281 C 28.988281 58.265625 30.378906 59.773438 31.886719 59.773438 C 34.203125 59.773438 36.636719 55.835938 37.910156 49.234375 C 35.941406 48.539062 33.972656 47.730469 32.117188 46.804688 C 30.03125 47.730469 27.949219 48.65625 25.746094 49.46875 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 27.714844 44.488281 C 26.789062 43.910156 25.746094 43.328125 24.820312 42.636719 C 24.9375 44.488281 25.167969 46.339844 25.515625 48.191406 C 27.136719 47.5 28.875 46.804688 30.726562 46.109375 C 29.683594 45.644531 28.757812 45.066406 27.714844 44.488281 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 35.941406 30.246094 C 36.867188 30.824219 37.792969 31.402344 38.71875 31.867188 C 38.605469 30.128906 38.371094 28.394531 38.023438 26.773438 C 36.402344 27.351562 34.78125 28.046875 33.277344 28.738281 C 34.085938 29.203125 35.011719 29.667969 35.941406 30.246094 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 20.070312 26.078125 C 19.375 26.078125 18.679688 25.613281 18.449219 24.804688 C 17.871094 24.804688 17.289062 24.6875 16.828125 24.6875 C 14.742188 24.6875 13.234375 25.265625 12.65625 26.308594 C 11.5 28.277344 13.699219 32.328125 18.679688 36.730469 C 20.300781 35.339844 21.921875 34.183594 23.777344 32.910156 C 23.894531 30.707031 24.242188 28.507812 24.703125 26.308594 C 23.546875 25.960938 22.617188 25.730469 21.578125 25.382812 C 21.113281 25.960938 20.535156 26.191406 20.070312 26.078125 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 33.160156 46.226562 C 34.78125 47.035156 36.519531 47.613281 38.023438 48.191406 C 38.371094 46.457031 38.605469 44.71875 38.71875 42.984375 C 37.792969 43.5625 36.867188 44.140625 35.824219 44.71875 C 34.78125 45.296875 34.085938 45.761719 33.160156 46.226562 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 37.792969 25.730469 C 37.5625 24.570312 37.214844 23.296875 36.867188 22.140625 C 35.941406 22.023438 35.359375 21.328125 35.246094 20.519531 C 35.246094 20.054688 35.359375 19.59375 35.707031 19.359375 C 34.550781 16.8125 33.160156 15.425781 31.652344 15.425781 C 29.335938 15.425781 27.019531 19.246094 25.628906 25.5 C 27.714844 26.191406 29.800781 27.121094 31.769531 28.046875 C 33.738281 27.121094 35.824219 26.308594 37.792969 25.730469 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 19.375 37.425781 C 20.765625 38.582031 22.15625 39.625 23.546875 40.550781 C 23.429688 39.507812 23.429688 38.464844 23.429688 37.425781 C 23.429688 36.382812 23.429688 35.222656 23.546875 34.066406 C 22.039062 35.222656 20.648438 36.382812 19.375 37.425781 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 30.726562 28.738281 C 29.105469 27.929688 27.367188 27.234375 25.515625 26.65625 C 25.167969 28.507812 24.9375 30.359375 24.820312 32.214844 C 25.746094 31.636719 26.671875 31.054688 27.714844 30.476562 C 28.640625 29.898438 29.683594 29.320312 30.726562 28.738281 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 18.566406 38.121094 C 17.636719 38.929688 16.828125 39.742188 16.132812 40.433594 C 16.246094 40.667969 16.363281 40.898438 16.363281 41.246094 C 16.363281 42.171875 15.667969 42.867188 14.742188 42.867188 C 14.511719 42.867188 14.394531 42.867188 14.164062 42.75 C 12.308594 45.183594 11.847656 47.265625 12.542969 48.539062 C 13.46875 50.160156 16.363281 50.507812 20.417969 49.699219 C 21.808594 49.351562 23.082031 49.003906 24.472656 48.539062 C 24.007812 46.339844 23.777344 44.140625 23.660156 41.824219 C 21.921875 40.78125 20.1875 39.507812 18.566406 38.121094 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 29.570312 41.476562 C 29.570312 41.941406 30.378906 42.636719 31.539062 42.75 L 31.539062 40.320312 C 30.613281 40.320312 29.570312 40.898438 29.570312 41.476562 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 44.28125 37.425781 C 42.890625 36.265625 41.382812 35.109375 39.878906 34.066406 C 39.996094 35.222656 39.996094 36.382812 39.996094 37.539062 C 39.996094 38.699219 39.996094 39.742188 39.878906 40.898438 C 41.5 39.855469 42.890625 38.699219 44.28125 37.425781 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 45.089844 38.121094 C 43.46875 39.625 41.617188 41.015625 39.761719 42.171875 C 39.648438 44.257812 39.414062 46.339844 38.953125 48.425781 C 40.109375 48.773438 41.269531 49.121094 42.542969 49.351562 C 42.773438 48.773438 43.355469 48.425781 43.933594 48.425781 C 44.742188 48.425781 45.4375 49.003906 45.554688 49.8125 C 48.335938 50.046875 50.1875 49.46875 50.882812 48.308594 C 52.15625 46.570312 49.957031 42.636719 45.089844 38.121094 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 46.828125 51.089844 C 46.367188 51.089844 45.902344 51.089844 45.4375 50.972656 C 45.089844 51.433594 44.628906 51.78125 44.046875 51.898438 C 43.238281 51.898438 42.542969 51.320312 42.425781 50.507812 C 41.269531 50.277344 39.996094 49.929688 38.835938 49.582031 C 37.445312 55.953125 35.011719 60.8125 31.769531 60.8125 C 29.683594 60.8125 27.949219 58.847656 26.558594 55.835938 C 25.628906 55.835938 24.9375 55.140625 24.9375 54.214844 C 24.9375 53.75 25.167969 53.289062 25.398438 52.941406 C 25.050781 51.898438 24.820312 50.855469 24.589844 49.8125 C 23.199219 50.277344 21.808594 50.625 20.535156 50.972656 C 19.257812 51.320312 17.871094 51.433594 16.59375 51.433594 C 14.046875 51.433594 12.308594 50.742188 11.5 49.351562 C 10.457031 47.5 11.265625 45.066406 13.234375 42.402344 C 13.121094 42.171875 13.003906 41.824219 13.003906 41.476562 C 13.003906 40.550781 13.699219 39.855469 14.625 39.855469 C 14.859375 39.855469 15.089844 39.972656 15.207031 39.972656 C 15.898438 39.160156 16.828125 38.351562 17.636719 37.65625 C 12.773438 33.371094 9.875 28.855469 11.5 25.960938 C 12.425781 24.339844 14.859375 23.644531 18.332031 23.992188 C 18.566406 23.414062 19.144531 23.066406 19.839844 23.066406 C 20.648438 23.066406 21.460938 23.761719 21.460938 24.570312 C 22.503906 24.804688 23.546875 25.152344 24.589844 25.5 C 25.976562 19.128906 28.410156 14.496094 31.652344 14.496094 C 33.625 14.496094 35.359375 16.234375 36.636719 19.128906 L 36.75 19.128906 C 37.675781 19.128906 38.371094 19.824219 38.371094 20.75 C 38.371094 21.328125 38.140625 21.792969 37.675781 22.140625 C 38.023438 23.296875 38.257812 24.457031 38.605469 25.613281 C 39.996094 25.152344 41.382812 24.804688 42.660156 24.457031 C 47.292969 23.53125 50.535156 24.109375 51.695312 26.078125 C 52.621094 27.8125 52.042969 30.128906 50.304688 32.5625 C 50.417969 32.792969 50.535156 33.140625 50.535156 33.488281 C 50.535156 34.414062 49.839844 35.109375 48.914062 35.109375 C 48.683594 35.109375 48.566406 34.992188 48.335938 34.992188 C 47.523438 35.917969 46.710938 36.730469 45.785156 37.539062 C 50.652344 41.824219 53.429688 46.339844 51.808594 49.121094 C 51.230469 50.394531 49.378906 51.089844 46.828125 51.089844 M 31.769531 12.644531 C 17.984375 12.644531 6.863281 23.761719 6.75 37.425781 C 6.75 51.203125 17.871094 62.320312 31.539062 62.433594 C 45.324219 62.433594 56.441406 51.320312 56.558594 37.65625 C 56.558594 37.65625 56.558594 37.539062 56.558594 37.539062 C 56.558594 23.878906 45.4375 12.761719 31.769531 12.644531 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 45.089844 36.730469 C 46.019531 35.804688 46.945312 34.992188 47.640625 34.183594 C 47.523438 33.949219 47.40625 33.601562 47.40625 33.257812 C 47.40625 32.328125 48.101562 31.636719 49.03125 31.636719 C 49.144531 31.636719 49.378906 31.636719 49.492188 31.75 C 51 29.433594 51.460938 27.699219 50.882812 26.425781 C 50.1875 25.265625 48.796875 24.917969 46.710938 24.917969 C 45.4375 24.917969 44.28125 25.035156 43.007812 25.265625 C 41.617188 25.613281 40.339844 25.960938 38.953125 26.425781 C 39.300781 28.507812 39.648438 30.59375 39.761719 32.675781 C 41.730469 34.066406 43.585938 35.457031 45.089844 36.730469 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 29.222656 38.121094 C 29.222656 38.699219 30.378906 39.394531 31.539062 39.507812 L 31.539062 36.730469 C 30.378906 36.84375 29.222656 37.539062 29.222656 38.121094 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 35.941406 38.121094 C 35.941406 38.8125 35.246094 39.507812 34.085938 39.972656 C 35.011719 40.320312 35.707031 40.898438 35.707031 41.59375 C 35.707031 42.289062 35.128906 42.867188 34.085938 43.214844 C 33.625 43.328125 33.160156 43.445312 32.695312 43.445312 L 32.695312 44.371094 C 32.695312 44.605469 32.464844 44.835938 32.117188 44.71875 C 31.886719 44.71875 31.769531 44.488281 31.769531 44.371094 L 31.769531 43.5625 C 31.304688 43.5625 30.84375 43.445312 30.378906 43.328125 C 29.335938 42.984375 28.757812 42.402344 28.757812 41.707031 C 28.757812 41.015625 29.335938 40.550781 30.378906 40.085938 C 28.988281 39.742188 28.292969 39.046875 28.292969 38.234375 C 28.292969 37.425781 28.875 36.84375 30.03125 36.5 C 28.640625 36.152344 27.832031 35.339844 27.832031 34.53125 C 27.832031 33.71875 28.410156 33.140625 29.453125 32.792969 C 29.570312 32.5625 29.800781 32.328125 30.03125 32.214844 C 30.265625 32.097656 30.496094 32.097656 30.726562 32.214844 C 30.960938 32.328125 31.074219 32.328125 31.074219 32.5625 C 31.074219 32.792969 31.074219 32.910156 30.960938 33.140625 C 30.84375 33.371094 30.613281 33.488281 30.378906 33.488281 C 30.265625 33.488281 30.03125 33.601562 29.917969 33.601562 C 29.335938 33.949219 28.988281 34.296875 28.988281 34.644531 C 28.988281 35.339844 30.265625 36.035156 31.539062 36.265625 L 31.539062 31.289062 C 31.539062 31.054688 31.652344 30.824219 31.886719 30.707031 C 32.234375 30.707031 32.347656 30.941406 32.347656 31.289062 L 32.347656 36.265625 C 33.738281 36.152344 34.898438 35.339844 34.898438 34.644531 C 34.898438 34.296875 34.550781 33.949219 33.972656 33.601562 C 33.855469 33.601562 33.625 33.601562 33.507812 33.488281 C 33.277344 33.371094 33.042969 33.257812 32.929688 33.140625 C 32.8125 33.023438 32.695312 32.792969 32.8125 32.5625 C 32.929688 32.445312 33.042969 32.214844 33.160156 32.214844 C 33.390625 32.097656 33.625 32.097656 33.855469 32.214844 C 34.203125 32.328125 34.433594 32.5625 34.433594 32.792969 C 35.359375 33.257812 36.054688 33.949219 36.054688 34.53125 C 36.054688 35.457031 35.128906 36.152344 33.855469 36.5 C 35.246094 36.730469 35.941406 37.539062 35.941406 38.121094 M 35.476562 31.171875 L 32 29.320312 C 30.726562 30.015625 29.453125 30.59375 28.179688 31.402344 C 26.90625 32.214844 25.863281 32.792969 24.703125 33.488281 C 24.589844 34.761719 24.589844 36.152344 24.589844 37.539062 C 24.589844 38.929688 24.589844 40.085938 24.703125 41.363281 C 25.863281 42.054688 27.019531 42.867188 28.292969 43.5625 C 29.570312 44.257812 30.726562 44.949219 32 45.53125 C 33.160156 44.949219 34.316406 44.371094 35.359375 43.675781 C 36.402344 42.984375 37.675781 42.289062 38.835938 41.59375 C 38.953125 40.320312 38.953125 38.929688 38.953125 37.539062 C 38.953125 36.152344 38.835938 34.644531 38.835938 33.257812 C 37.792969 32.675781 36.636719 31.867188 35.476562 31.171875 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 32.464844 39.507812 C 33.625 39.394531 34.78125 38.699219 34.78125 38.121094 C 34.78125 37.539062 33.625 36.84375 32.464844 36.730469 Z M 32.464844 39.507812 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 32.464844 42.75 C 33.390625 42.636719 34.433594 42.054688 34.433594 41.476562 C 34.433594 40.898438 33.390625 40.320312 32.464844 40.203125 Z M 32.464844 42.75 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/><path fill=\"#000000\" d=\"M 5.242188 26.886719 C 5.476562 27.003906 5.707031 26.886719 5.824219 26.65625 C 5.9375 26.425781 5.824219 26.191406 5.589844 26.191406 C 5.359375 26.078125 5.242188 26.191406 5.128906 26.425781 C 5.128906 26.425781 5.128906 26.425781 5.128906 26.539062 C 5.011719 26.539062 5.011719 26.773438 5.242188 26.886719 M 3.273438 32.445312 C 4.433594 32.910156 5.707031 32.328125 6.054688 31.171875 C 6.054688 31.054688 6.171875 30.941406 6.171875 30.824219 C 6.519531 29.667969 5.9375 28.507812 4.78125 28.160156 C 4.664062 28.160156 4.546875 28.160156 4.433594 28.046875 C 3.273438 27.582031 2 28.160156 1.652344 29.320312 C 1.652344 29.433594 1.535156 29.550781 1.535156 29.667969 C 1.1875 30.824219 1.769531 31.980469 2.925781 32.328125 C 3.042969 32.445312 3.160156 32.445312 3.273438 32.445312 M 3.390625 31.75 C 2.464844 31.519531 1.769531 30.824219 2.117188 29.78125 C 2.347656 28.972656 3.273438 28.507812 4.085938 28.738281 C 4.199219 28.738281 4.199219 28.738281 4.199219 28.855469 C 5.011719 28.972656 5.707031 29.667969 5.589844 30.59375 C 5.476562 31.519531 4.78125 32.097656 3.851562 31.980469 C 3.738281 31.867188 3.503906 31.867188 3.390625 31.75 M 1.074219 36.730469 L 1.1875 35.917969 C 1.1875 34.992188 1.882812 34.296875 2.8125 34.296875 C 2.925781 34.296875 2.925781 34.296875 3.042969 34.296875 C 3.851562 34.183594 4.664062 34.878906 4.78125 35.6875 C 4.78125 35.804688 4.78125 36.035156 4.78125 36.152344 L 4.664062 36.84375 Z M 5.128906 37.539062 L 5.242188 36.152344 C 5.476562 34.992188 4.664062 33.835938 3.503906 33.601562 C 3.390625 33.601562 3.273438 33.601562 3.160156 33.601562 C 1.882812 33.488281 0.839844 34.53125 0.726562 35.804688 C 0.726562 35.804688 0.726562 35.917969 0.726562 35.917969 L 0.492188 37.425781 Z M 5.707031 42.75 L 5.707031 42.171875 L 1.882812 42.75 L 5.359375 40.203125 L 5.242188 39.277344 L 0.609375 39.855469 L 0.726562 40.550781 L 4.433594 39.972656 L 0.957031 42.519531 L 1.074219 43.445312 Z M 4.664062 45.644531 L 5.242188 47.5 L 2.695312 47.382812 Z M 7.328125 48.191406 L 7.097656 47.5 L 5.824219 47.5 L 5.128906 45.414062 L 6.054688 44.488281 L 5.824219 43.792969 L 2.117188 47.152344 L 2.347656 47.847656 Z M 5.242188 53.054688 L 4.894531 52.476562 C 4.546875 51.898438 4.664062 51.550781 5.011719 51.320312 C 5.359375 51.089844 5.824219 51.320312 6.171875 51.898438 L 6.402344 52.363281 Z M 9.183594 51.667969 L 8.835938 51.089844 L 6.980469 52.128906 L 6.863281 51.78125 C 6.632812 51.550781 6.632812 51.203125 6.863281 50.855469 L 8.023438 49.46875 L 7.675781 48.886719 L 6.519531 50.507812 C 6.402344 50.742188 6.285156 50.855469 6.402344 51.089844 C 6.054688 50.625 5.476562 50.507812 5.011719 50.742188 C 4.085938 51.320312 4.316406 52.128906 4.78125 52.941406 L 5.128906 53.867188 Z M 6.285156 55.835938 L 6.75 56.296875 L 8.835938 54.675781 C 9.53125 54.097656 10.222656 53.984375 10.6875 54.5625 C 11.152344 55.140625 10.917969 55.835938 10.222656 56.414062 L 8.140625 58.035156 L 8.488281 58.613281 L 10.570312 56.878906 C 11.382812 56.414062 11.730469 55.371094 11.152344 54.5625 C 11.035156 54.445312 11.035156 54.332031 10.917969 54.214844 C 10.339844 53.402344 9.296875 53.289062 8.601562 53.867188 C 8.488281 53.984375 8.371094 54.097656 8.253906 54.214844 Z M 10.109375 60.003906 C 10.222656 60.351562 10.457031 60.582031 10.6875 60.929688 C 11.613281 61.855469 13.121094 61.742188 13.929688 60.8125 C 13.929688 60.8125 14.046875 60.699219 14.046875 60.699219 C 14.972656 59.773438 14.859375 58.265625 13.929688 57.457031 C 13.816406 57.339844 13.816406 57.339844 13.699219 57.226562 C 13.46875 56.992188 13.121094 56.761719 12.773438 56.644531 L 12.425781 57.109375 C 12.773438 57.226562 13.121094 57.339844 13.351562 57.574219 C 14.046875 58.152344 14.164062 59.308594 13.582031 60.003906 C 13.003906 60.8125 11.960938 60.929688 11.152344 60.351562 C 11.152344 60.351562 11.035156 60.234375 11.035156 60.234375 C 10.804688 60.003906 10.570312 59.773438 10.457031 59.425781 Z M 16.246094 61.625 C 16.363281 61.507812 16.363281 61.160156 16.132812 61.046875 C 16.015625 60.929688 15.785156 60.929688 15.554688 61.160156 C 15.4375 61.277344 15.4375 61.625 15.667969 61.742188 C 15.898438 61.742188 16.132812 61.742188 16.246094 61.625 M 21.460938 64.636719 C 22.269531 63.710938 22.15625 62.203125 21.230469 61.394531 C 20.300781 60.582031 18.796875 60.699219 17.984375 61.625 C 17.753906 61.972656 17.523438 62.320312 17.40625 62.78125 C 16.59375 63.824219 16.828125 65.214844 17.871094 66.023438 C 18.910156 66.835938 20.300781 66.605469 21.113281 65.5625 C 21.230469 65.332031 21.460938 64.984375 21.460938 64.636719 M 20.882812 64.289062 C 20.648438 65.097656 19.722656 65.5625 18.796875 65.332031 C 18.796875 65.332031 18.796875 65.332031 18.679688 65.332031 C 17.871094 64.75 17.636719 63.59375 18.21875 62.78125 C 18.679688 62.089844 19.492188 61.855469 20.1875 61.972656 C 20.996094 62.320312 21.34375 63.246094 20.996094 64.054688 C 20.996094 64.171875 20.882812 64.289062 20.882812 64.289062 M 25.167969 67.53125 L 24.355469 67.296875 C 23.546875 67.183594 22.964844 66.257812 23.082031 65.445312 C 23.082031 65.332031 23.082031 65.214844 23.199219 65.214844 C 23.3125 64.289062 24.125 63.710938 25.050781 63.824219 C 25.167969 63.824219 25.28125 63.824219 25.398438 63.941406 L 26.09375 64.054688 Z M 26.90625 63.710938 L 25.515625 63.363281 C 24.242188 63.015625 22.964844 63.824219 22.734375 64.984375 C 22.386719 66.257812 23.199219 67.53125 24.355469 67.761719 L 25.746094 68.109375 Z M 32 64.171875 L 31.304688 64.171875 L 31.074219 67.992188 L 29.222656 64.054688 L 28.292969 63.941406 L 28.0625 68.574219 L 28.640625 68.574219 L 28.875 64.75 L 30.726562 68.574219 L 31.652344 68.6875 Z M 35.941406 63.824219 L 33.390625 64.171875 L 33.507812 64.75 L 35.476562 64.519531 L 35.59375 66.023438 L 33.855469 66.257812 L 33.972656 66.835938 L 35.707031 66.605469 L 35.824219 67.992188 L 33.855469 68.226562 L 33.972656 68.804688 L 36.519531 68.457031 Z M 38.371094 67.992188 C 38.71875 67.992188 39.066406 67.992188 39.414062 67.878906 C 40.6875 67.644531 41.617188 66.371094 41.269531 64.984375 C 41.035156 63.710938 39.761719 62.78125 38.371094 63.128906 C 38.257812 63.128906 38.140625 63.246094 38.023438 63.246094 C 37.675781 63.363281 37.328125 63.476562 37.097656 63.710938 L 37.328125 64.402344 C 37.5625 64.171875 37.910156 63.941406 38.257812 63.941406 C 39.183594 63.710938 40.226562 64.289062 40.457031 65.214844 C 40.804688 66.140625 40.339844 67.066406 39.53125 67.414062 C 39.414062 67.414062 39.414062 67.414062 39.300781 67.53125 C 38.953125 67.644531 38.605469 67.644531 38.257812 67.53125 Z M 46.132812 62.78125 C 45.554688 61.742188 44.164062 61.394531 43.007812 61.972656 C 41.847656 62.550781 41.617188 63.941406 42.195312 65.097656 C 42.773438 66.140625 44.046875 66.488281 45.089844 66.023438 C 46.25 65.332031 46.710938 63.941406 46.132812 62.78125 M 45.4375 63.128906 C 45.902344 63.941406 45.671875 64.867188 44.976562 65.445312 C 44.976562 65.445312 44.859375 65.445312 44.859375 65.445312 C 43.933594 65.910156 43.121094 65.332031 42.660156 64.519531 C 42.195312 63.710938 42.3125 62.667969 43.238281 62.203125 C 44.164062 61.625 44.976562 62.203125 45.4375 63.128906 M 50.535156 61.855469 L 49.957031 62.320312 C 49.261719 62.898438 48.21875 62.667969 47.640625 61.972656 C 47.640625 61.972656 47.640625 61.972656 47.640625 61.855469 C 47.058594 61.277344 47.058594 60.234375 47.753906 59.65625 C 47.871094 59.539062 47.988281 59.425781 48.101562 59.425781 L 48.683594 59.078125 Z M 48.796875 58.035156 L 47.640625 58.847656 C 46.597656 59.425781 46.132812 60.699219 46.710938 61.742188 C 46.828125 61.855469 46.945312 62.089844 47.058594 62.203125 C 47.871094 63.246094 49.261719 63.476562 50.304688 62.667969 C 50.304688 62.667969 50.417969 62.550781 50.417969 62.550781 L 51.578125 61.742188 Z M 51.808594 58.035156 C 51.695312 57.917969 51.460938 57.917969 51.230469 58.035156 C 51.113281 58.152344 51.113281 58.382812 51.230469 58.613281 C 51.347656 58.730469 51.578125 58.730469 51.808594 58.613281 C 51.808594 58.382812 51.925781 58.152344 51.808594 58.035156 M 55.863281 53.636719 C 55.054688 52.824219 53.664062 52.824219 52.734375 53.636719 C 52.621094 53.75 52.621094 53.867188 52.503906 53.867188 C 51.695312 54.792969 51.808594 56.066406 52.734375 56.878906 C 52.851562 56.992188 52.96875 56.992188 53.082031 57.109375 C 54.011719 57.917969 55.402344 57.804688 56.210938 56.878906 C 57.023438 55.953125 56.90625 54.5625 55.980469 53.75 C 55.980469 53.75 55.980469 53.636719 55.863281 53.636719 M 55.515625 54.214844 C 56.328125 54.675781 56.558594 55.71875 55.980469 56.53125 C 55.402344 57.226562 54.472656 57.226562 53.777344 56.644531 C 53.777344 56.644531 53.664062 56.53125 53.664062 56.53125 C 52.851562 56.066406 52.621094 55.140625 53.082031 54.332031 C 53.082031 54.332031 53.082031 54.214844 53.199219 54.214844 C 53.777344 53.402344 54.707031 53.636719 55.515625 54.214844 M 59.453125 50.625 L 59.105469 51.320312 C 58.644531 52.128906 57.71875 52.476562 56.90625 52.015625 C 56.90625 52.015625 56.90625 52.015625 56.789062 52.015625 C 55.980469 51.667969 55.632812 50.855469 55.863281 50.046875 C 55.863281 49.929688 55.980469 49.8125 55.980469 49.699219 L 56.328125 49.121094 Z M 56.210938 48.191406 L 55.632812 49.351562 C 54.9375 50.394531 55.167969 51.667969 56.09375 52.476562 C 56.210938 52.59375 56.328125 52.710938 56.558594 52.710938 C 57.601562 53.289062 58.992188 52.941406 59.570312 51.78125 C 59.570312 51.667969 59.6875 51.667969 59.6875 51.550781 L 60.265625 50.394531 Z M 57.71875 43.328125 L 57.601562 43.910156 L 61.308594 45.066406 L 57.023438 45.992188 L 56.789062 46.804688 L 61.308594 48.191406 L 61.425781 47.613281 L 57.832031 46.570312 L 62.003906 45.644531 L 62.234375 44.71875 Z M 58.179688 39.277344 L 57.832031 41.824219 L 58.414062 41.941406 L 58.644531 39.972656 L 60.148438 40.085938 L 60.035156 41.824219 L 60.613281 41.941406 L 60.730469 40.203125 L 62.117188 40.320312 L 62.003906 42.289062 L 62.582031 42.402344 L 62.929688 39.855469 Z M 58.179688 36.84375 L 58.179688 37.425781 L 62.8125 37.308594 L 62.8125 36.613281 Z M 62.699219 34.992188 C 62.8125 34.644531 62.8125 34.183594 62.8125 33.835938 C 62.699219 32.5625 61.65625 31.636719 60.382812 31.75 C 60.265625 31.75 60.265625 31.75 60.148438 31.75 C 58.875 31.867188 57.949219 33.023438 58.066406 34.296875 C 58.066406 34.414062 58.066406 34.414062 58.066406 34.53125 C 58.066406 34.878906 58.179688 35.222656 58.414062 35.570312 L 58.992188 35.457031 C 58.875 35.109375 58.644531 34.878906 58.644531 34.53125 C 58.527344 33.601562 59.105469 32.675781 60.035156 32.5625 C 60.035156 32.5625 60.148438 32.5625 60.148438 32.5625 C 61.078125 32.328125 62.003906 33.023438 62.234375 33.949219 C 62.234375 33.949219 62.234375 34.066406 62.234375 34.066406 C 62.351562 34.414062 62.234375 34.761719 62.117188 35.109375 Z M 61.886719 29.78125 C 61.886719 29.433594 61.886719 29.085938 61.769531 28.738281 C 61.539062 27.929688 60.84375 27.351562 60.148438 27.582031 C 58.757812 27.929688 59.570312 29.898438 58.527344 30.128906 C 57.949219 30.246094 57.601562 29.78125 57.484375 29.550781 C 57.371094 29.203125 57.371094 28.855469 57.371094 28.507812 L 56.789062 28.625 C 56.789062 28.972656 56.789062 29.320312 56.789062 29.667969 C 56.90625 30.476562 57.601562 31.054688 58.414062 30.941406 C 58.414062 30.941406 58.527344 30.941406 58.527344 30.941406 C 60.035156 30.59375 59.222656 28.625 60.148438 28.394531 C 60.613281 28.277344 60.84375 28.625 60.960938 29.085938 C 61.078125 29.320312 61.078125 29.667969 61.078125 29.898438 Z M 57.832031 25.960938 C 57.601562 26.078125 57.484375 26.308594 57.601562 26.539062 C 57.71875 26.773438 57.949219 26.886719 58.179688 26.773438 C 58.414062 26.773438 58.527344 26.539062 58.414062 26.308594 C 58.414062 26.078125 58.179688 25.960938 57.949219 25.960938 C 57.832031 25.960938 57.832031 25.960938 57.832031 25.960938 M 52.621094 21.097656 L 52.96875 21.675781 L 56.328125 19.476562 L 53.777344 22.949219 L 54.125 23.53125 L 58.414062 22.601562 L 55.054688 24.804688 L 55.402344 25.382812 L 59.339844 22.835938 L 58.757812 21.910156 L 54.707031 22.835938 L 57.136719 19.476562 L 56.558594 18.550781 Z M 50.304688 18.667969 L 52.15625 20.519531 L 52.503906 20.171875 L 51.113281 18.78125 L 54.011719 16.003906 L 53.546875 15.539062 Z M 52.042969 13.917969 L 51.460938 13.570312 L 49.722656 15.65625 C 49.144531 16.351562 48.566406 16.699219 47.871094 16.117188 C 47.175781 15.539062 47.292969 14.960938 47.871094 14.265625 L 49.609375 12.183594 L 49.03125 11.835938 L 47.292969 14.035156 C 46.597656 14.730469 46.597656 15.886719 47.292969 16.582031 C 47.988281 17.277344 49.144531 17.277344 49.839844 16.582031 C 49.957031 16.464844 50.070312 16.351562 50.070312 16.234375 Z M 42.542969 13.457031 L 43.121094 13.804688 L 44.859375 10.097656 L 46.132812 10.675781 L 46.367188 10.097656 L 43.121094 8.59375 L 42.890625 9.171875 L 44.28125 9.867188 Z M 40.804688 7.320312 L 41.382812 7.433594 L 41.5 6.855469 L 40.921875 6.738281 Z M 39.648438 6.972656 L 40.226562 7.085938 L 40.339844 6.507812 L 39.878906 6.390625 Z M 40.457031 10.675781 L 38.605469 10.097656 L 40.226562 8.128906 Z M 36.867188 11.488281 L 37.5625 11.71875 L 38.371094 10.675781 L 40.574219 11.371094 L 40.6875 12.644531 L 41.382812 12.875 L 40.804688 7.78125 L 40.109375 7.550781 Z M 34.898438 11.253906 L 35.476562 11.371094 L 36.054688 7.320312 L 37.445312 7.433594 L 37.5625 6.855469 L 33.972656 6.390625 L 33.855469 6.972656 L 35.246094 7.085938 Z M 32 11.023438 L 32.582031 11.023438 L 32.695312 6.390625 L 32.117188 6.390625 Z M 30.148438 6.507812 C 29.800781 6.390625 29.453125 6.390625 29.105469 6.390625 C 28.179688 6.507812 27.714844 6.972656 27.714844 7.78125 C 27.832031 9.171875 29.800781 8.707031 29.917969 9.867188 C 30.03125 10.445312 29.453125 10.675781 28.988281 10.792969 C 28.640625 10.792969 28.292969 10.792969 28.0625 10.675781 L 28.0625 11.371094 C 28.410156 11.488281 28.640625 11.488281 28.988281 11.488281 C 29.917969 11.371094 30.613281 10.910156 30.613281 9.980469 C 30.496094 8.476562 28.527344 8.824219 28.410156 7.898438 C 28.292969 7.433594 28.757812 7.320312 29.222656 7.203125 C 29.453125 7.203125 29.800781 7.203125 30.03125 7.320312 Z M 23.660156 8.011719 L 24.242188 7.898438 C 24.820312 7.78125 25.167969 8.011719 25.398438 8.359375 C 25.515625 8.707031 25.28125 9.171875 24.589844 9.289062 L 24.007812 9.402344 Z M 24.007812 12.066406 L 24.589844 11.949219 L 24.125 9.980469 L 24.472656 9.867188 C 24.820312 9.75 25.050781 9.75 25.398438 10.097656 L 26.558594 11.488281 L 27.253906 11.371094 L 25.976562 9.75 C 25.746094 9.519531 25.628906 9.402344 25.398438 9.402344 C 25.863281 9.171875 26.210938 8.707031 26.09375 8.128906 C 25.863281 6.972656 24.9375 7.085938 24.007812 7.320312 L 22.851562 7.550781 Z M 20.300781 13.570312 L 22.617188 12.53125 L 22.386719 12.066406 L 20.535156 12.875 L 19.953125 11.488281 L 21.578125 10.792969 L 21.34375 10.214844 L 19.722656 10.910156 L 19.144531 9.632812 L 20.996094 8.824219 L 20.765625 8.246094 L 18.449219 9.289062 Z M 16.828125 10.097656 L 16.246094 10.445312 L 17.175781 14.730469 L 13.816406 12.183594 L 13.234375 12.53125 L 17.289062 15.539062 L 17.984375 15.078125 Z M 14.511719 17.507812 L 15.089844 17.160156 L 12.078125 13.457031 L 11.5 13.804688 Z M 10.804688 21.214844 L 11.265625 20.75 L 8.371094 18.203125 L 12.65625 19.246094 L 13.234375 18.667969 L 9.761719 15.539062 L 9.296875 16.003906 L 12.078125 18.550781 L 7.90625 17.507812 L 7.328125 18.203125 Z M 5.9375 20.054688 L 5.589844 20.636719 L 7.90625 22.023438 C 8.71875 22.488281 9.066406 23.066406 8.601562 23.761719 C 8.140625 24.457031 7.445312 24.457031 6.75 23.992188 L 4.433594 22.601562 L 4.085938 23.183594 L 6.402344 24.570312 C 7.097656 25.152344 8.140625 25.152344 8.835938 24.457031 C 8.949219 24.339844 9.066406 24.222656 9.066406 24.109375 C 9.644531 23.296875 9.414062 22.140625 8.488281 21.675781 C 8.371094 21.675781 8.371094 21.5625 8.253906 21.5625 Z M 5.9375 20.054688 \" fill-opacity=\"1\" fill-rule=\"nonzero\"/></svg>\n\\ No newline at end of file"
      },
      {
        "sha": "9f75020f52b3ef159bf18a7c2be60cbdce5861f5",
        "filename": "app/static/img/photos/unsplash-1.jpg",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Fphotos%2Funsplash-1.jpg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Fphotos%2Funsplash-1.jpg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Fphotos%2Funsplash-1.jpg?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "4843e3d07b6f6ed5636063a8b1eecde168026d9f",
        "filename": "app/static/img/photos/unsplash-2.jpg",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Fphotos%2Funsplash-2.jpg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Fphotos%2Funsplash-2.jpg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Fphotos%2Funsplash-2.jpg?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "409a92e2a13af997a1b56ca486194744c095be58",
        "filename": "app/static/img/photos/unsplash-3.jpg",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Fphotos%2Funsplash-3.jpg",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fimg%2Fphotos%2Funsplash-3.jpg",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fimg%2Fphotos%2Funsplash-3.jpg?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "ed6ab95188ed5f0462777d47ac6b0e1f871e1e7c",
        "filename": "app/static/js/app.js",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fjs%2Fapp.js",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fjs%2Fapp.js",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fapp.js?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "db3b55e71ee74633e3f8f583265bd110a4542110",
        "filename": "app/static/js/app.js.map",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fjs%2Fapp.js.map",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Fstatic%2Fjs%2Fapp.js.map",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Fstatic%2Fjs%2Fapp.js.map?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "50dc681273f65ee43e071dd81c9a8fcf1988a86c",
        "filename": "app/templates/400.html",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Ftemplates%2F400.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Ftemplates%2F400.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2F400.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,57 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+\n+<head>\n+    <meta charset=\"utf-8\">\n+    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n+    <meta name=\"description\"\n+          content=\"Repository of feature models in UVL format integrated with Zenodo and FlamaPy\">\n+    <meta name=\"author\" content=\"University of Seville\">\n+    <meta name=\"keywords\"\n+          content=\"diversolab, uvl, feature models, software product line, university of seville,\n+           university of malaga, university of ulm, david romero, david benavides, jose a galindo, jose miguel horcas,\n+chico sundermann\">\n+\n+    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n+    <link rel=\"shortcut icon\" href=\"{{ url_for(\"static\", filename=\"img/icons/icon-250x250.png\") }}\"/>\n+\n+\n+    <link rel=\"canonical\" href=\"https://www.uvlhub.io\"/>\n+\n+\t<title>Bad Request | {{ FLASK_APP_NAME }}</title>\n+\n+\t<link rel=\"stylesheet\" href=\"{{ url_for(\"static\", filename=\"css/app.css\") }}\">\n+\t<link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap\" rel=\"stylesheet\">\n+</head>\n+\n+<body>\n+\t<main class=\"d-flex w-100\">\n+\t\t<div class=\"container d-flex flex-column\">\n+\t\t\t<div class=\"row vh-100\">\n+\t\t\t\t<div class=\"col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100\">\n+\t\t\t\t\t<div class=\"d-table-cell align-middle\">\n+\n+\t\t\t\t\t\t<div class=\"text-center mt-4\">\n+\t\t\t\t\t\t\t<h1 style=\"font-size: 100px\">400</h1>\n+\t\t\t\t\t\t\t<p class=\"lead\">\n+\t\t\t\t\t\t\t\tBad Request\n+\t\t\t\t\t\t\t</p>\n+\n+\t\t\t\t\t\t</div>\n+\n+                        <div class=\"text-center mt-3\">\n+                            <a href=\"{{ url_for('public.index') }}\" class=\"btn btn-lg btn-primary\">Back to home</a>\n+                        </div>\n+\n+\t\t\t\t\t</div>\n+\t\t\t\t</div>\n+\t\t\t</div>\n+\t\t</div>\n+\t</main>\n+\n+\t<script src=\"{{ url_for(\"static\", filename=\"js/app.js\") }}\"></script>\n+\n+</body>\n+\n+</html>\n\\ No newline at end of file"
      },
      {
        "sha": "8b42843822155a933f4256199209f68be7fa1b94",
        "filename": "app/templates/401.html",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Ftemplates%2F401.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Ftemplates%2F401.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2F401.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,57 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+\n+<head>\n+    <meta charset=\"utf-8\">\n+    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n+    <meta name=\"description\"\n+          content=\"Repository of feature models in UVL format integrated with Zenodo and FlamaPy\">\n+    <meta name=\"author\" content=\"University of Seville\">\n+    <meta name=\"keywords\"\n+          content=\"diversolab, uvl, feature models, software product line, university of seville,\n+           university of malaga, university of ulm, david romero, david benavides, jose a galindo, jose miguel horcas,\n+chico sundermann\">\n+\n+    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n+    <link rel=\"shortcut icon\" href=\"{{ url_for(\"static\", filename=\"img/icons/icon-250x250.png\") }}\"/>\n+\n+\n+    <link rel=\"canonical\" href=\"https://www.uvlhub.io\"/>\n+\n+\t<title>Unauthorized | {{ FLASK_APP_NAME }}</title>\n+\n+\t<link rel=\"stylesheet\" href=\"{{ url_for(\"static\", filename=\"css/app.css\") }}\">\n+\t<link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap\" rel=\"stylesheet\">\n+</head>\n+\n+<body>\n+\t<main class=\"d-flex w-100\">\n+\t\t<div class=\"container d-flex flex-column\">\n+\t\t\t<div class=\"row vh-100\">\n+\t\t\t\t<div class=\"col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100\">\n+\t\t\t\t\t<div class=\"d-table-cell align-middle\">\n+\n+\t\t\t\t\t\t<div class=\"text-center mt-4\">\n+\t\t\t\t\t\t\t<h1 style=\"font-size: 100px\">401</h1>\n+\t\t\t\t\t\t\t<p class=\"lead\">\n+\t\t\t\t\t\t\t\tUnauthorized\n+\t\t\t\t\t\t\t</p>\n+\n+\t\t\t\t\t\t</div>\n+\n+                        <div class=\"text-center mt-3\">\n+                            <a href=\"{{ url_for('public.index') }}\" class=\"btn btn-lg btn-primary\">Back to home</a>\n+                        </div>\n+\n+\t\t\t\t\t</div>\n+\t\t\t\t</div>\n+\t\t\t</div>\n+\t\t</div>\n+\t</main>\n+\n+\t<script src=\"{{ url_for(\"static\", filename=\"js/app.js\") }}\"></script>\n+\n+</body>\n+\n+</html>\n\\ No newline at end of file"
      },
      {
        "sha": "da5dce5b53c2e828c75f2767f12b5965ac7db46a",
        "filename": "app/templates/404.html",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Ftemplates%2F404.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Ftemplates%2F404.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2F404.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,57 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+\n+<head>\n+    <meta charset=\"utf-8\">\n+    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n+    <meta name=\"description\"\n+          content=\"Repository of feature models in UVL format integrated with Zenodo and FlamaPy\">\n+    <meta name=\"author\" content=\"University of Seville\">\n+    <meta name=\"keywords\"\n+          content=\"diversolab, uvl, feature models, software product line, university of seville,\n+           university of malaga, university of ulm, david romero, david benavides, jose a galindo, jose miguel horcas,\n+chico sundermann\">\n+\n+    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n+    <link rel=\"shortcut icon\" href=\"{{ url_for(\"static\", filename=\"img/icons/icon-250x250.png\") }}\"/>\n+\n+\n+    <link rel=\"canonical\" href=\"https://www.uvlhub.io\"/>\n+\n+\t<title>Page not found | {{ FLASK_APP_NAME }}</title>\n+\n+\t<link rel=\"stylesheet\" href=\"{{ url_for(\"static\", filename=\"css/app.css\") }}\">\n+\t<link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap\" rel=\"stylesheet\">\n+</head>\n+\n+<body>\n+\t<main class=\"d-flex w-100\">\n+\t\t<div class=\"container d-flex flex-column\">\n+\t\t\t<div class=\"row vh-100\">\n+\t\t\t\t<div class=\"col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100\">\n+\t\t\t\t\t<div class=\"d-table-cell align-middle\">\n+\n+\t\t\t\t\t\t<div class=\"text-center mt-4\">\n+\t\t\t\t\t\t\t<h1 style=\"font-size: 100px\">404</h1>\n+\t\t\t\t\t\t\t<p class=\"lead\">\n+\t\t\t\t\t\t\t\tPage Not Found\n+\t\t\t\t\t\t\t</p>\n+\n+\t\t\t\t\t\t</div>\n+\n+                        <div class=\"text-center mt-3\">\n+                            <a href=\"{{ url_for('public.index') }}\" class=\"btn btn-lg btn-primary\">Back to home</a>\n+                        </div>\n+\n+\t\t\t\t\t</div>\n+\t\t\t\t</div>\n+\t\t\t</div>\n+\t\t</div>\n+\t</main>\n+\n+\t<script src=\"{{ url_for(\"static\", filename=\"js/app.js\") }}\"></script>\n+\n+</body>\n+\n+</html>\n\\ No newline at end of file"
      },
      {
        "sha": "42a9c376f0ede14955a9502ed51f85705bb698a8",
        "filename": "app/templates/500.html",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Ftemplates%2F500.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Ftemplates%2F500.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2F500.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,57 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+\n+<head>\n+    <meta charset=\"utf-8\">\n+    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n+    <meta name=\"description\"\n+          content=\"Repository of feature models in UVL format integrated with Zenodo and FlamaPy\">\n+    <meta name=\"author\" content=\"University of Seville\">\n+    <meta name=\"keywords\"\n+          content=\"diversolab, uvl, feature models, software product line, university of seville,\n+           university of malaga, university of ulm, david romero, david benavides, jose a galindo, jose miguel horcas,\n+chico sundermann\">\n+\n+    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n+    <link rel=\"shortcut icon\" href=\"{{ url_for(\"static\", filename=\"img/icons/icon-250x250.png\") }}\"/>\n+\n+\n+    <link rel=\"canonical\" href=\"https://www.uvlhub.io\"/>\n+\n+\t<title>Internal Server Error | {{ FLASK_APP_NAME }}</title>\n+\n+\t<link rel=\"stylesheet\" href=\"{{ url_for(\"static\", filename=\"css/app.css\") }}\">\n+\t<link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap\" rel=\"stylesheet\">\n+</head>\n+\n+<body>\n+\t<main class=\"d-flex w-100\">\n+\t\t<div class=\"container d-flex flex-column\">\n+\t\t\t<div class=\"row vh-100\">\n+\t\t\t\t<div class=\"col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100\">\n+\t\t\t\t\t<div class=\"d-table-cell align-middle\">\n+\n+\t\t\t\t\t\t<div class=\"text-center mt-4\">\n+\t\t\t\t\t\t\t<h1 style=\"font-size: 100px\">500</h1>\n+\t\t\t\t\t\t\t<p class=\"lead\">\n+\t\t\t\t\t\t\t\tInternal Server Error\n+\t\t\t\t\t\t\t</p>\n+\n+\t\t\t\t\t\t</div>\n+\n+                        <div class=\"text-center mt-3\">\n+                            <a href=\"{{ url_for('public.index') }}\" class=\"btn btn-lg btn-primary\">Back to home</a>\n+                        </div>\n+\n+\t\t\t\t\t</div>\n+\t\t\t\t</div>\n+\t\t\t</div>\n+\t\t</div>\n+\t</main>\n+\n+\t<script src=\"{{ url_for(\"static\", filename=\"js/app.js\") }}\"></script>\n+\n+</body>\n+\n+</html>\n\\ No newline at end of file"
      },
      {
        "sha": "ed4a01627713d433910aa879b21ba668b2519010",
        "filename": "app/templates/base_template.html",
        "status": "added",
        "additions": 308,
        "deletions": 0,
        "changes": 308,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Ftemplates%2Fbase_template.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/app%2Ftemplates%2Fbase_template.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/app%2Ftemplates%2Fbase_template.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,308 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+\n+<head>\n+    <meta charset=\"utf-8\">\n+    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n+    <meta name=\"description\"\n+          content=\"Repository of feature models in UVL format integrated with Zenodo and FlamaPy\">\n+    <meta name=\"author\" content=\"University of Seville\">\n+    <meta name=\"keywords\"\n+          content=\"diversolab, uvl, feature models, software product line, university of seville,\n+           university of malaga, university of ulm, david romero, david benavides, jose a galindo, jose miguel horcas,\n+chico sundermann\">\n+\n+    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n+    <link rel=\"shortcut icon\" href=\"{{ url_for(\"static\", filename=\"img/icons/icon-250x250.png\") }}\"/>\n+    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin=\"anonymous\">\n+  \n+    <link rel=\"canonical\" href=\"https://www.uvlhub.io\"/>\n+\n+    <title>{{ FLASK_APP_NAME }} - Repository of feature models in UVL </title>\n+\n+    <link rel=\"stylesheet\" href=\"{{ url_for(\"static\", filename=\"css/app.css\") }}\">\n+\n+    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap\" rel=\"stylesheet\">\n+\n+    <script src=\"https://unpkg.com/dropzone@5/dist/min/dropzone.min.js\"></script>\n+\n+    <link rel=\"stylesheet\" href=\"https://unpkg.com/dropzone@5/dist/min/dropzone.min.css\" type=\"text/css\"/>\n+\n+    <link rel=\"stylesheet\" href=\"{{ url_for(\"static\", filename=\"css/dropzone.css\") }}\">\n+\n+    <link rel=\"stylesheet\" href=\"{{ url_for(\"static\", filename=\"css/own.css\") }}\">\n+\n+</head>\n+\n+<body>\n+<div class=\"wrapper\">\n+\n+    <nav id=\"sidebar\" class=\"sidebar js-sidebar\">\n+        <div class=\"sidebar-content js-simplebar\">\n+            <a class=\"sidebar-brand\" href=\"{{ url_for('public.index') }}\">\n+                <img src=\"{{ url_for(\"static\", filename=\"img/logos/logo-dark.svg\") }}\" class=\"d-block\"\n+                     style=\"max-width: 100%; height: auto;\">\n+            </a>\n+\n+\n+            <ul class=\"sidebar-nav\">\n+\n+                <li class=\"sidebar-header\">\n+                    Datasets\n+                </li>\n+\n+                <li class=\"sidebar-item {{ 'active' if request.endpoint == 'public.index' else '' }}\">\n+                    <a class=\"sidebar-link\" href=\"{{ url_for('public.index') }}\">\n+                        <i class=\"align-middle\" data-feather=\"home\"></i> <span class=\"align-middle\">Home</span>\n+                    </a>\n+                </li>\n+\n+                <li class=\"sidebar-item {{ 'active' if request.endpoint == 'explore.index' else '' }}\">\n+                    <a class=\"sidebar-link\" href=\"{{ url_for('explore.index') }}\">\n+                        <i class=\"align-middle\" data-feather=\"search\"></i> <span class=\"align-middle\">Explore</span>\n+                    </a>\n+                </li>\n+\n+                <li class=\"sidebar-item {{ 'active' if request.endpoint == 'team.index' else '' }}\">\n+                    <a class=\"sidebar-link\" href=\"{{ url_for('team.index') }}\">\n+                        <i class=\"align-middle\" data-feather=\"users\"></i> <span\n+                            class=\"align-middle\">Team</span>\n+                    </a>\n+                </li>\n+\n+                {% if current_user.is_anonymous %}\n+\n+                    <li class=\"sidebar-header\">\n+                        Let's get started!\n+                    </li>\n+\n+                    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'auth.login' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('auth.login') }}\">\n+                            <i class=\"align-middle\" data-feather=\"log-in\"></i> <span class=\"align-middle\">Login</span>\n+                        </a>\n+                    </li>\n+\n+                    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'auth.show_signup_form' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('auth.show_signup_form') }}\">\n+                            <i class=\"align-middle\" data-feather=\"user-plus\"></i> <span\n+                                class=\"align-middle\">Sign Up</span>\n+                        </a>\n+                    </li>\n+\n+                {% else %}\n+\n+                    <li class=\"sidebar-header\">\n+                        Datasets\n+                    </li>\n+\n+                    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.create_dataset' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.create_dataset') }}\">\n+                            <i class=\"align-middle\" data-feather=\"upload\"></i> <span\n+                                class=\"align-middle\">Upload dataset</span>\n+                        </a>\n+                    </li>\n+\n+                    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'dataset.list_dataset' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('dataset.list_dataset') }}\">\n+                            <i class=\"align-middle\" data-feather=\"list\"></i> <span\n+                                class=\"align-middle\">My datasets</span>\n+                        </a>\n+                    </li>\n+\n+                    <li class=\"sidebar-header\">\n+                        Options\n+                    </li>\n+\n+                    <li class=\"sidebar-item {{ 'active' if request.endpoint == 'profile.edit_profile' else '' }}\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('profile.edit_profile') }}\">\n+                            <i class=\"align-middle\" data-feather=\"user\"></i> <span\n+                                class=\"align-middle\">Edit profile</span>\n+                        </a>\n+                    </li>\n+\n+                    <li class=\"sidebar-item\">\n+                        <a class=\"sidebar-link\" href=\"{{ url_for('auth.logout') }}\">\n+                            <i class=\"align-middle\" data-feather=\"log-out\"></i> <span\n+                                class=\"align-middle\">Log out</span>\n+                        </a>\n+                    </li>\n+\n+                {% endif %}\n+\n+            </ul>\n+\n+            {% if APP_VERSION != 'unknown' and APP_VERSION != '' %}\n+            <div class=\"sidebar-cta text-center\">\n+                <div class=\"sidebar-cta-content\">\n+                    <div class=\"text\">\n+                        Compilation build <a href=\"https://github.com/diverso-lab/uvlhub/releases/tag/{{ APP_VERSION }}\" target=\"_blank\">{{ APP_VERSION }}</a>\n+                    </div>\n+                </div>\n+            </div>\n+            {% endif %}\n+            \n+\n+        </div>\n+    </nav>\n+\n+    <div class=\"main\">\n+        <nav class=\"navbar navbar-expand navbar-light navbar-bg\">\n+            <a class=\"sidebar-toggle js-sidebar-toggle\">\n+                <i class=\"hamburger align-self-center\"></i>\n+            </a>\n+\n+            <form class=\"d-none d-sm-inline-block\" onsubmit=\"submitSearchForm(event)\">\n+                <div class=\"input-group input-group-navbar\">\n+                    <input type=\"text\" id=\"search-query\" class=\"form-control rounded-search\"\n+                           placeholder=\"Search datasets...\" aria-label=\"Search\">\n+                </div>\n+            </form>\n+\n+            <div class=\"navbar-collapse collapse\">\n+                <ul class=\"navbar-nav navbar-align\">\n+                    <li class=\"nav-item dropdown\">\n+\n+                        {% if current_user.is_anonymous %}\n+                            <a class=\"nav-link  d-none d-sm-inline-block\" href=\"{{ url_for('auth.login') }}\">Login</a>\n+                            <a class=\"nav-link  d-none d-sm-inline-block\" href=\"{{ url_for('auth.show_signup_form') }}\">Sign\n+                                up</a>\n+\n+                        {% else %}\n+\n+                        <a class=\"nav-icon dropdown-toggle d-inline-block d-sm-none\" href=\"#\" data-bs-toggle=\"dropdown\">\n+                            <i class=\"align-middle\" data-feather=\"user\"></i> \n+                        </a>\n+\n+                        <a class=\"nav-link dropdown-toggle d-none d-sm-inline-block\" href=\"#\" data-bs-toggle=\"dropdown\">\n+                            <span class=\"text-dark\">{{ current_user.profile.surname }}, {{ current_user.profile.name }}</span>\n+                        </a>\n+                        <div class=\"dropdown-menu dropdown-menu-end\">\n+                            <a class=\"dropdown-item\" href=\"{{ url_for('profile.my_profile') }}\">\n+                                <i class=\"align-middle me-1\" data-feather=\"user\"></i> My profile</a>\n+                            <a class=\"dropdown-item\" href=\"{{ url_for('auth.logout') }}\">\n+                                <i class=\"align-middle me-1\" data-feather=\"log-out\"></i> Log out</a>\n+                        </div>\n+                        \n+                        \n+\n+                        {% endif %}\n+\n+\n+                    </li>\n+                </ul>\n+            </div>\n+        </nav>\n+\n+        <main class=\"content\">\n+            <div class=\"container p-0\">\n+\n+                {% block content %}{% endblock %}\n+\n+            </div>\n+        </main>\n+\n+        <footer class=\"footer\">\n+            <div class=\"container-fluid\">\n+                <div class=\"row text-muted\">\n+                    <div class=\"col-6 text-start\">\n+                        <p class=\"mb-0\">\n+                            <strong>{{ FLASK_APP_NAME }} </strong> University of Seville \u00b7 University of Malaga \u00b7\n+                            University of Ulm\n+                        </p>\n+                    </div>\n+                    <div class=\"col-6 text-end\">\n+                        <ul class=\"list-inline\">\n+                            <li class=\"list-inline-item\">\n+                                <a class=\"text-muted\" href=\"https://github.com/diverso-lab/uvlhub\"\n+                                   target=\"_blank\">\n+                                    <i class=\"align-middle\" data-feather=\"github\"></i>\n+                                    Repository on GitHub</a>\n+                            </li>\n+                        </ul>\n+                    </div>\n+                </div>\n+            </div>\n+        </footer>\n+    </div>\n+</div>\n+\n+<pre id=\"bibtex_cite\" style=\"display: none\">\n+@article{romero2024_uvlhub_open_science,\n+    title = {UVLHub: A feature model data repository using UVL and open science principles},\n+    journal = {Journal of Systems and Software},\n+    pages = {112150},\n+    year = {2024},\n+    issn = {0164-1212},\n+    doi = {https://doi.org/10.1016/j.jss.2024.112150},\n+    url = {https://www.sciencedirect.com/science/article/pii/S016412122400195X},\n+    author = {David Romero-Organvidez and Jos\u00e9 A. Galindo and Chico Sundermann and Jose-Miguel Horcas and David Benavides},\n+    keywords = {Feature models, Software product line, Variability, Dataset, Uvl},\n+    abstract = {Feature models are the de facto standard for modelling variabilities and commonalities in features and relationships in software product lines. They are the base artefacts in many engineering activities, such as product configuration, derivation, or testing. Concrete models in different domains exist; however, many are in private or sparse repositories or belong to discontinued projects. The dispersion of knowledge of feature models hinders the study and reuse of these artefacts in different studies. The Universal Variability Language (UVL) is a community effort textual feature model language that promotes a common way of serialising feature models independently of concrete tools. Open science principles promote transparency, accessibility, and collaboration in scientific research. Although some attempts exist to promote feature model sharing, the existing solutions lack open science principles by design. In addition, existing and public feature models are described using formats not always supported by current tools. This paper presents , a repository of feature models in UVL format. provides a front end that facilitates the search, upload, storage, and management of feature model datasets, improving the capabilities of discontinued proposals. Furthermore, the tool communicates with Zenodo \u2013one of the most well-known open science repositories\u2013 providing a permanent save of datasets and following open science principles. includes existing datasets and is readily available to include new data and functionalities in the future. It is maintained by three active universities in variability modelling.}\n+}\n+</pre>\n+                        \n+<pre id=\"ris_cite\" style=\"display: none\">\n+TY  - JOUR\n+T1  - UVLHub: A feature model data repository using UVL and open science principles\n+AU  - Romero-Organvidez, David\n+AU  - Galindo, Jos\u00e9 A.\n+AU  - Sundermann, Chico\n+AU  - Horcas, Jose-Miguel\n+AU  - Benavides, David\n+JO  - Journal of Systems and Software\n+SP  - 112150\n+PY  - 2024\n+DA  - 2024/07/01/\n+SN  - 0164-1212\n+DO  - https://doi.org/10.1016/j.jss.2024.112150\n+UR  - https://www.sciencedirect.com/science/article/pii/S016412122400195X\n+KW  - Feature models\n+KW  - Software product line\n+KW  - Variability\n+KW  - Dataset\n+KW  - Uvl\n+AB  - Feature models are the de facto standard for modelling variabilities and commonalities in features and relationships in software product lines. They are the base artefacts in many engineering activities, such as product configuration, derivation, or testing. Concrete models in different domains exist; however, many are in private or sparse repositories or belong to discontinued projects. The dispersion of knowledge of feature models hinders the study and reuse of these artefacts in different studies. The Universal Variability Language (UVL) is a community effort textual feature model language that promotes a common way of serialising feature models independently of concrete tools. Open science principles promote transparency, accessibility, and collaboration in scientific research. Although some attempts exist to promote feature model sharing, the existing solutions lack open science principles by design. In addition, existing and public feature models are described using formats not always supported by current tools. This paper presents , a repository of feature models in UVL format. provides a front end that facilitates the search, upload, storage, and management of feature model datasets, improving the capabilities of discontinued proposals. Furthermore, the tool communicates with Zenodo \u2013one of the most well-known open science repositories\u2013 providing a permanent save of datasets and following open science principles. includes existing datasets and is readily available to include new data and functionalities in the future. It is maintained by three active universities in variability modelling.\n+ER  - \n+</pre>\n+\n+<pre id=\"text_cite\" style=\"display: none;\">\n+David Romero-Organvidez, Jos\u00e9 A. Galindo, Chico Sundermann, Jose-Miguel Horcas, David Benavides,\n+UVLHub: A feature model data repository using UVL and open science principles,\n+Journal of Systems and Software,\n+2024,\n+112150,\n+ISSN 0164-1212,\n+https://doi.org/10.1016/j.jss.2024.112150.\n+(https://www.sciencedirect.com/science/article/pii/S016412122400195X)\n+Abstract: Feature models are the de facto standard for modelling variabilities and commonalities in features and relationships in software product lines. They are the base artefacts in many engineering activities, such as product configuration, derivation, or testing. Concrete models in different domains exist; however, many are in private or sparse repositories or belong to discontinued projects. The dispersion of knowledge of feature models hinders the study and reuse of these artefacts in different studies. The Universal Variability Language (UVL) is a community effort textual feature model language that promotes a common way of serialising feature models independently of concrete tools. Open science principles promote transparency, accessibility, and collaboration in scientific research. Although some attempts exist to promote feature model sharing, the existing solutions lack open science principles by design. In addition, existing and public feature models are described using formats not always supported by current tools. This paper presents , a repository of feature models in UVL format. provides a front end that facilitates the search, upload, storage, and management of feature model datasets, improving the capabilities of discontinued proposals. Furthermore, the tool communicates with Zenodo \u2013one of the most well-known open science repositories\u2013 providing a permanent save of datasets and following open science principles. includes existing datasets and is readily available to include new data and functionalities in the future. It is maintained by three active universities in variability modelling.\n+Keywords: Feature models; Software product line; Variability; Dataset; Uvl\n+</pre>\n+\n+<pre id=\"apa_cite\" style=\"display: none;\">\n+Romero-Organvidez, D., Galindo, J. A., Sundermann, C., Horcas, J.-M., & Benavides, D. (2024). UVLHub: A feature model data repository using UVL and open science principles. Journal of Systems and Software, 2024, 112150. https://doi.org/10.1016/j.jss.2024.112150\n+</pre>\n+\n+<script src=\"{{ url_for(\"static\", filename=\"js/app.js\") }}\"></script>\n+\n+<script>\n+\n+    function submitSearchForm(event) {\n+        event.preventDefault();\n+        let query = document.getElementById('search-query').value;\n+        window.location.href = '/explore?query=' + encodeURIComponent(query);\n+    }\n+\n+    function copyText(div_identifier) {\n+        let textToCopy = document.getElementById(div_identifier).textContent;\n+        textToCopy = textToCopy.trim();\n+        navigator.clipboard.writeText(textToCopy);\n+    }\n+\n+</script>\n+\n+{% block scripts %}{% endblock %}\n+\n+</body>\n+\n+</html>\n\\ No newline at end of file"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/blueprints/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fblueprints%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fblueprints%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fblueprints%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "bd594c7de568a7ca443b0261256d39fed3b10108",
        "filename": "core/blueprints/base_blueprint.py",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fblueprints%2Fbase_blueprint.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fblueprints%2Fbase_blueprint.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fblueprints%2Fbase_blueprint.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,31 @@\n+from flask import Blueprint, Response\n+import os\n+\n+\n+class BaseBlueprint(Blueprint):\n+    def __init__(self, name, import_name, static_folder=None, static_url_path=None,\n+                 template_folder=None, url_prefix=None, subdomain=None,\n+                 url_defaults=None, root_path=None):\n+        super().__init__(name, import_name, static_folder=static_folder,\n+                         static_url_path=static_url_path, template_folder=template_folder,\n+                         url_prefix=url_prefix, subdomain=subdomain,\n+                         url_defaults=url_defaults, root_path=root_path)\n+        self.module_path = os.path.join(os.getenv('WORKING_DIR', ''), 'app', 'modules', name)\n+        self.add_script_route()\n+\n+    def add_script_route(self):\n+        script_path = os.path.join(self.module_path, 'assets', 'scripts.js')\n+        if os.path.exists(script_path):\n+            self.add_url_rule(f'/{self.name}/scripts.js', 'scripts', self.send_script)\n+        else:\n+            print(f\"(BaseBlueprint) -> {script_path} does not exist.\")\n+\n+    def send_script(self):\n+        script_path = os.path.join(self.module_path, 'assets', 'scripts.js')\n+\n+        try:\n+            with open(script_path, 'r') as file:\n+                script_content = file.read()\n+            return Response(script_content, mimetype='application/javascript')\n+        except FileNotFoundError:\n+            return Response(f\"File not found: {script_path}\", status=404)"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/bootstraps/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fbootstraps%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fbootstraps%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fbootstraps%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "48b9daee8de505a2bed65ab33e906aa2a5299e8e",
        "filename": "core/bootstraps/locustfile_bootstrap.py",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fbootstraps%2Flocustfile_bootstrap.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fbootstraps%2Flocustfile_bootstrap.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fbootstraps%2Flocustfile_bootstrap.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,44 @@\n+import os\n+import glob\n+import inspect\n+import importlib.util\n+from locust import HttpUser\n+from dotenv import load_dotenv\n+\n+\n+def load_locustfiles():\n+    load_dotenv()\n+    working_dir = os.getenv('WORKING_DIR', '')\n+    print(f\"Working directory: {working_dir}\")\n+\n+    module_dir = os.path.join(working_dir, 'app', 'modules')\n+    print(f\"Module directory: {module_dir}\")\n+\n+    locustfile_paths = glob.glob(os.path.join(module_dir, '*', 'tests', 'locustfile.py'))\n+    print(f\"Found locustfiles: {locustfile_paths}\")\n+\n+    found_user_classes = []\n+\n+    for path in locustfile_paths:\n+        print(f\"Loading locustfile: {path}\")\n+        module_name = os.path.splitext(os.path.basename(path))[0]\n+        spec = importlib.util.spec_from_file_location(module_name, path)\n+        locustfile = importlib.util.module_from_spec(spec)\n+        spec.loader.exec_module(locustfile)\n+\n+        # Collect all classes that inherit from HttpUser\n+        for name, obj in vars(locustfile).items():\n+            if inspect.isclass(obj) and issubclass(obj, HttpUser) and obj is not HttpUser:\n+                unique_name = f\"{name}_{os.path.basename(path).split('.')[0]}\"\n+                globals()[unique_name] = obj  # Add to globals\n+                found_user_classes.append((unique_name, obj))\n+                print(f\"Loaded user class: {unique_name}\")\n+\n+    if not found_user_classes:\n+        raise ValueError(\"No User class found!\")\n+\n+    return found_user_classes\n+\n+\n+found_user_classes = load_locustfiles()\n+print(f\"Total user classes loaded: {len(found_user_classes)}\")"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/configuration/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fconfiguration%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fconfiguration%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fconfiguration%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "50e69f7d7f4494db118a2768232d66ec62eae629",
        "filename": "core/configuration/configuration.py",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fconfiguration%2Fconfiguration.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fconfiguration%2Fconfiguration.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fconfiguration%2Fconfiguration.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,25 @@\n+import os\n+from dotenv import load_dotenv\n+\n+load_dotenv()\n+\n+\n+def uploads_folder_name():\n+    return os.getenv('UPLOADS_DIR', \"uploads\")\n+\n+\n+def get_app_version():\n+    version_file_path = os.path.join(os.getenv('WORKING_DIR', ''), '.version')\n+    try:\n+        with open(version_file_path, 'r') as file:\n+            return file.readline().strip()\n+    except FileNotFoundError:\n+        return 'unknown'\n+\n+\n+def is_develop():\n+    return os.getenv('FLASK_ENV') == 'development'\n+\n+\n+def is_production():\n+    return os.getenv('FLASK_ENV') == 'production'"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/decorators/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fdecorators%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fdecorators%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fdecorators%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "672726198188ace3afd851206c20269fc7fb7e32",
        "filename": "core/decorators/decorators.py",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fdecorators%2Fdecorators.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fdecorators%2Fdecorators.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fdecorators%2Fdecorators.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,17 @@\n+from functools import wraps\n+\n+from flask import abort\n+\n+\n+def pass_or_abort(condition):\n+\n+    def decorator(f):\n+\n+        @wraps(f)\n+        def decorated_function(*args, **kwargs):\n+            if not condition(**kwargs):\n+                abort(404)\n+            return f(*args, **kwargs)\n+        return decorated_function\n+\n+    return decorator"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/environment/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fenvironment%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fenvironment%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fenvironment%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "0b785766b4212da5b84ccd7e812bd852b257e5b7",
        "filename": "core/environment/host.py",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fenvironment%2Fhost.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fenvironment%2Fhost.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fenvironment%2Fhost.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,65 @@\n+import os\n+from dotenv import load_dotenv\n+\n+load_dotenv()\n+\n+\n+def get_host_for_testing(test_type: str) -> str:\n+    \"\"\"\n+    Get the host URL for testing based on the test type and the working directory.\n+\n+    Parameters:\n+    test_type (str): The type of test (either \"locust\" or \"selenium\").\n+\n+    Returns:\n+    str: The host URL corresponding to the test type and working directory.\n+\n+    Raises:\n+    ValueError: If the test type is unknown or the WORKING_DIR value is not mapped.\n+    \"\"\"\n+    # Define host mappings for locust and selenium tests\n+    host_mapping = {\n+        \"locust\": {\n+            \"\": \"http://localhost:5000\",\n+            \"/app/\": \"http://nginx_web_server_container\",\n+            \"/vagrant/\": \"http://localhost:5000\"\n+        },\n+        \"selenium\": {\n+            \"\": \"http://localhost:5000\",\n+            \"/app/\": \"http://localhost\",\n+            \"/vagrant/\": \"http://localhost:5000\"\n+        }\n+    }\n+\n+    # Check if the provided test type is valid\n+    if test_type not in host_mapping:\n+        raise ValueError(f\"Unknown test type: {test_type}\")\n+\n+    # Get the working directory from the environment variable\n+    working_dir = os.getenv('WORKING_DIR', \"\")\n+\n+    # Return the host URL based on the working directory\n+    if working_dir in host_mapping[test_type]:\n+        return host_mapping[test_type][working_dir]\n+    else:\n+        raise ValueError(f\"Unknown WORKING_DIR value: {working_dir}\")\n+\n+\n+def get_host_for_locust_testing() -> str:\n+    \"\"\"\n+    Get the host URL for locust testing.\n+\n+    Returns:\n+    str: The host URL for locust testing.\n+    \"\"\"\n+    return get_host_for_testing(\"locust\")\n+\n+\n+def get_host_for_selenium_testing() -> str:\n+    \"\"\"\n+    Get the host URL for selenium testing.\n+\n+    Returns:\n+    str: The host URL for selenium testing.\n+    \"\"\"\n+    return get_host_for_testing(\"selenium\")"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/locust/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Flocust%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Flocust%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Flocust%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "b558962e9032ae904fe0abf32a65047fdfa242c7",
        "filename": "core/locust/common.py",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Flocust%2Fcommon.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Flocust%2Fcommon.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Flocust%2Fcommon.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,14 @@\n+from faker import Faker\n+from bs4 import BeautifulSoup\n+\n+fake = Faker()\n+\n+\n+def get_csrf_token(response):\n+    soup = BeautifulSoup(response.text, 'html.parser')\n+    token_tag = soup.find('input', {'name': 'csrf_token'})\n+    if token_tag:\n+        return token_tag['value']\n+    else:\n+        print(\"Response HTML:\", response.text)\n+        raise ValueError(\"CSRF token not found in the response\")"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/managers/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fmanagers%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fmanagers%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fmanagers%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "81d7c7c020a3182e8b285d3b0c6f4d3e96508df0",
        "filename": "core/managers/config_manager.py",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fmanagers%2Fconfig_manager.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fmanagers%2Fconfig_manager.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fmanagers%2Fconfig_manager.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,55 @@\n+import os\n+import secrets\n+\n+\n+class ConfigManager:\n+    def __init__(self, app):\n+        self.app = app\n+\n+    def load_config(self, config_name='development'):\n+        # If config_name is not provided, use the environment variable FLASK_ENV\n+        if config_name is None:\n+            config_name = os.getenv('FLASK_ENV', 'development')\n+\n+        # Load configuration\n+        if config_name == 'testing':\n+            self.app.config.from_object(TestingConfig)\n+        elif config_name == 'production':\n+            self.app.config.from_object(ProductionConfig)\n+        else:\n+            self.app.config.from_object(DevelopmentConfig)\n+\n+\n+class Config:\n+    SECRET_KEY = os.getenv('SECRET_KEY', secrets.token_bytes())\n+    SQLALCHEMY_DATABASE_URI = (\n+        f\"mysql+pymysql://{os.getenv('MARIADB_USER', 'default_user')}:\"\n+        f\"{os.getenv('MARIADB_PASSWORD', 'default_password')}@\"\n+        f\"{os.getenv('MARIADB_HOSTNAME', 'localhost')}:\"\n+        f\"{os.getenv('MARIADB_PORT', '3306')}/\"\n+        f\"{os.getenv('MARIADB_DATABASE', 'default_db')}\"\n+    )\n+    SQLALCHEMY_TRACK_MODIFICATIONS = False\n+    TIMEZONE = 'Europe/Madrid'\n+    TEMPLATES_AUTO_RELOAD = True\n+    UPLOAD_FOLDER = 'uploads'\n+\n+\n+class DevelopmentConfig(Config):\n+    DEBUG = True\n+\n+\n+class TestingConfig(Config):\n+    TESTING = True\n+    SQLALCHEMY_DATABASE_URI = (\n+        f\"mysql+pymysql://{os.getenv('MARIADB_USER', 'default_user')}:\"\n+        f\"{os.getenv('MARIADB_PASSWORD', 'default_password')}@\"\n+        f\"{os.getenv('MARIADB_HOSTNAME', 'localhost')}:\"\n+        f\"{os.getenv('MARIADB_PORT', '3306')}/\"\n+        f\"{os.getenv('MARIADB_TEST_DATABASE', 'default_db')}\"\n+    )\n+    WTF_CSRF_ENABLED = False\n+\n+\n+class ProductionConfig(Config):\n+    DEBUG = False"
      },
      {
        "sha": "ecb631ee4661d392bbf991e426978b156605bb30",
        "filename": "core/managers/error_handler_manager.py",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fmanagers%2Ferror_handler_manager.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fmanagers%2Ferror_handler_manager.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fmanagers%2Ferror_handler_manager.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,27 @@\n+from flask import render_template\n+\n+\n+class ErrorHandlerManager:\n+    def __init__(self, app):\n+        self.app = app\n+\n+    def register_error_handlers(self):\n+        @self.app.errorhandler(500)\n+        def internal_error(e):\n+            self.app.logger.error('Internal Server Error: %s', str(e))\n+            return render_template('500.html'), 500\n+\n+        @self.app.errorhandler(404)\n+        def not_found_error(e):\n+            self.app.logger.warning('Page Not Found: %s', str(e))\n+            return render_template('404.html'), 404\n+\n+        @self.app.errorhandler(401)\n+        def unauthorized_error(e):\n+            self.app.logger.warning('Unauthorized Access: %s', str(e))\n+            return render_template('401.html'), 401\n+\n+        @self.app.errorhandler(400)\n+        def bad_request_error(e):\n+            self.app.logger.warning('Bad Request: %s', str(e))\n+            return render_template('400.html'), 400"
      },
      {
        "sha": "85fc8ad470576cf1cc24516121c408ae4586ddc6",
        "filename": "core/managers/logging_manager.py",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fmanagers%2Flogging_manager.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fmanagers%2Flogging_manager.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fmanagers%2Flogging_manager.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,29 @@\n+import logging\n+from logging.handlers import RotatingFileHandler\n+\n+\n+class LoggingManager:\n+    def __init__(self, app):\n+        self.app = app\n+\n+    def setup_logging(self):\n+        # Configure log format\n+        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n+\n+        # Configure the log file with file rotation\n+        file_handler = RotatingFileHandler('app.log', maxBytes=10240, backupCount=10)\n+        file_handler.setLevel(logging.ERROR)\n+        file_handler.setFormatter(formatter)\n+\n+        # Add handler to app logger\n+        self.app.logger.addHandler(file_handler)\n+\n+        # Configure console log if necessary\n+        if self.app.debug:\n+            stream_handler = logging.StreamHandler()\n+            stream_handler.setLevel(logging.INFO)\n+            stream_handler.setFormatter(formatter)\n+            self.app.logger.addHandler(stream_handler)\n+\n+        # Set the overall log level\n+        self.app.logger.setLevel(logging.INFO)"
      },
      {
        "sha": "4aad18eb741103468929052725c0d1875e90830e",
        "filename": "core/managers/module_manager.py",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fmanagers%2Fmodule_manager.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fmanagers%2Fmodule_manager.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fmanagers%2Fmodule_manager.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,87 @@\n+# module_manager.py\n+import os\n+import importlib.util\n+from flask import Blueprint\n+from dotenv import load_dotenv\n+\n+load_dotenv()\n+\n+\n+class ModuleManager:\n+    def __init__(self, app):\n+        self.app = app\n+        self.base_dir = os.path.abspath(os.path.dirname(__file__))\n+        working_dir = os.getenv('WORKING_DIR', '')\n+        self.modules_dir = os.path.join(working_dir, 'app/modules')\n+        self.ignored_modules_file = os.path.join(working_dir, '.moduleignore')\n+        self.ignored_modules = self._load_ignored_modules()\n+\n+    def _load_ignored_modules(self):\n+        ignored_modules = []\n+        if os.path.exists(self.ignored_modules_file):\n+            with open(self.ignored_modules_file, 'r') as f:\n+                ignored_modules = [line.strip() for line in f.readlines()]\n+        return ignored_modules\n+\n+    def register_modules(self):\n+        self.app.modules = {}\n+        self.app.blueprint_url_prefixes = {}\n+\n+        for module_name in os.listdir(self.modules_dir):\n+\n+            if module_name in self.ignored_modules:\n+                continue\n+\n+            module_path = os.path.join(self.modules_dir, module_name)\n+            if (os.path.isdir(module_path) and not module_name.startswith('__') and\n+                    os.path.exists(os.path.join(module_path, '__init__.py')) and\n+                    module_name != '.pytest_cache'):\n+                try:\n+                    routes_module = importlib.import_module(f'app.modules.{module_name}.routes')\n+                    for item in dir(routes_module):\n+                        if isinstance(getattr(routes_module, item), Blueprint):\n+                            blueprint = getattr(routes_module, item)\n+                            self.app.register_blueprint(blueprint)\n+                except ModuleNotFoundError as e:\n+                    print(\n+                        f\"Error registering modules: Could not load the module \"\n+                        f\"for Module '{module_name}': {e}\")\n+\n+    def register_module(self, module_name):\n+        module_path = os.path.join(self.modules_dir, module_name)\n+        if os.path.isdir(module_path) and not module_name.startswith('__'):\n+            try:\n+                routes_module = importlib.import_module(f'app.modules.{module_name}.routes')\n+                for item in dir(routes_module):\n+                    if isinstance(getattr(routes_module, item), Blueprint):\n+                        blueprint = getattr(routes_module, item)\n+                        self.app.register_module(blueprint)\n+                return\n+            except ModuleNotFoundError as e:\n+                print(f\"Could not load the module for Blueprint '{module_name}': {e}\")\n+\n+    def unregister_blueprints(self):\n+        for name, blueprint in list(self.app.modules.items()):\n+            print(f\"Unregistering module: {name}\")\n+            self.app.modules.pop(name)\n+\n+    def reload_blueprints(self):\n+        self.unregister_blueprints()\n+        self.register_modules()\n+\n+    def print_registered_modules(self):\n+        print(\"Registered blueprints\")\n+        for name, blueprint in self.app.modules.items():\n+            url_prefix = self.app.blueprint_url_prefixes.get(name, 'No URL prefix set')\n+            print(f\"Name: {name}, URL prefix: {url_prefix}\")\n+\n+    def get_modules(self):\n+        all_modules = []\n+        for module_name in os.listdir(self.modules_dir):\n+            module_path = os.path.join(self.modules_dir, module_name)\n+            if (os.path.isdir(module_path) and not module_name.startswith('__') and\n+                    os.path.exists(os.path.join(module_path, '__init__.py')) and\n+                    module_name != '.pytest_cache'):\n+                all_modules.append(module_name)\n+        loaded_modules = [m for m in all_modules if m not in self.ignored_modules]\n+        return loaded_modules, self.ignored_modules"
      },
      {
        "sha": "5d354fab8fdb488c8ce90233eba97668491a5995",
        "filename": "core/repositories/BaseRepository.py",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Frepositories%2FBaseRepository.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Frepositories%2FBaseRepository.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Frepositories%2FBaseRepository.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,61 @@\n+from typing import Generic, List, NoReturn, Optional, TypeVar, Union\n+\n+import app\n+\n+T = TypeVar('T')\n+\n+\n+class BaseRepository(Generic[T]):\n+    def __init__(self, model: T):\n+        self.model = model\n+        self.session = app.db.session\n+\n+    def create(self, commit: bool = True, **kwargs) -> T:\n+        instance: T = self.model(**kwargs)\n+        self.session.add(instance)\n+        if commit:\n+            self.session.commit()\n+        else:\n+            self.session.flush()\n+        return instance\n+\n+    def get_by_id(self, id: int) -> Optional[T]:\n+        instance: Optional[T] = self.model.query.get(id)\n+        return instance\n+\n+    def get_by_column(self, column_name: str, value) -> List[T]:\n+        instances: List[T] = self.session.query(self.model).filter(getattr(self.model, column_name) == value).all()\n+        return instances\n+\n+    def get_or_404(self, id: int) -> Union[T, NoReturn]:\n+        return self.model.query.get_or_404(id)\n+\n+    def update(self, id: int, **kwargs) -> Optional[T]:\n+        instance: Optional[T] = self.get_by_id(id)\n+        if instance:\n+            for key, value in kwargs.items():\n+                setattr(instance, key, value)\n+            self.session.commit()\n+            return instance\n+        return None\n+\n+    def delete(self, id: int) -> bool:\n+        instance: Optional[T] = self.get_by_id(id)\n+        if instance:\n+            self.session.delete(instance)\n+            self.session.commit()\n+            return True\n+        return False\n+\n+    def delete_by_column(self, column_name: str, value) -> bool:\n+        instances: List[T] = self.get_by_column(column_name, value)\n+        if not instances:\n+            return False\n+\n+        for instance in instances:\n+            self.session.delete(instance)\n+        self.session.commit()\n+        return True\n+\n+    def count(self) -> int:\n+        return self.model.query.count()"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/repositories/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Frepositories%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Frepositories%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Frepositories%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/resources/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fresources%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fresources%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fresources%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "96f89d2523a687ef8c58a6eff80455755ca3ca56",
        "filename": "core/resources/generic_resource.py",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fresources%2Fgeneric_resource.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fresources%2Fgeneric_resource.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fresources%2Fgeneric_resource.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,69 @@\n+from flask import request\n+from flask_restful import Resource\n+from datetime import datetime\n+\n+from app import db\n+\n+\n+def convert_value(value):\n+    if isinstance(value, datetime):\n+        return value.isoformat()\n+    return value\n+\n+\n+class GenericResource(Resource):\n+    def __init__(self, model, serializer):\n+        self.model = model\n+        self.model_name = model.__name__\n+        self.serializer = serializer\n+\n+    def get(self, id=None):\n+        if id:\n+            item = self.model.query.get(id)\n+            if not item:\n+                return {'message': f'{self.model_name} not found'}, 404\n+            return self.serializer.serialize(item), 200\n+        else:\n+            items = self.model.query.all()\n+            return {'items': [self.serializer.serialize(i) for i in items]}, 200\n+\n+    def post(self):\n+        data = request.get_json()\n+        if not data:\n+            return {'message': 'No input data provided'}, 400\n+\n+        if self.serializer.serialization_fields:\n+            filtered_data = {key: value for key, value in data.items() if key in self.serializer.serialization_fields}\n+            item = self.model(**filtered_data)\n+        else:\n+            item = self.model(**data)\n+\n+        db.session.add(item)\n+        db.session.commit()\n+        return {'message': f'{self.model.__name__} created successfully', 'id': item.id}, 201\n+\n+    def put(self, id):\n+        item = self.model.query.get(id)\n+        if not item:\n+            return {'message': f'{self.model_name} not found'}, 404\n+        data = request.get_json()\n+        for key, value in data.items():\n+            if key in self.serializer.serialization_fields:\n+                setattr(item, key, value)\n+        db.session.commit()\n+        return self.serializer.serialize(item), 200\n+\n+    def delete(self, id):\n+        item = self.model.query.get(id)\n+        if not item:\n+            return {'message': f'{self.model_name} not found'}, 404\n+        db.session.delete(item)\n+        db.session.commit()\n+        return {'message': f'{self.model_name} deleted successfully'}, 204\n+\n+\n+def create_resource(model, serialization_fields=None):\n+    class Resource(GenericResource):\n+        def __init__(self):\n+            super().__init__(model, serialization_fields)\n+    return Resource"
      },
      {
        "sha": "9f8af4ec7e7b9c096756a9991c2b9365d24693db",
        "filename": "core/seeders/BaseSeeder.py",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fseeders%2FBaseSeeder.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fseeders%2FBaseSeeder.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fseeders%2FBaseSeeder.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,37 @@\n+from sqlalchemy.exc import IntegrityError\n+from app import db\n+\n+\n+class BaseSeeder:\n+    priority = 10  # Default priority\n+\n+    def __init__(self):\n+        self.db = db\n+\n+    def run(self):\n+        raise NotImplementedError(\"The 'run' method must be implemented by the child class.\")\n+\n+    def seed(self, data):\n+        \"\"\"\n+        Attempts to insert a list of model objects and returns them with their IDs assigned after insertion.\n+        Throws an exception if data insertion fails.\n+\n+        :param data: List of model objects to insert.\n+        :return: List of model objects with IDs assigned.\n+        \"\"\"\n+        if not data:\n+            return []\n+\n+        model = type(data[0])\n+        if not all(isinstance(obj, model) for obj in data):\n+            raise ValueError(\"All objects must be of the same model.\")\n+\n+        try:\n+            self.db.session.add_all(data)\n+            self.db.session.commit()\n+        except IntegrityError as e:\n+            self.db.session.rollback()\n+            raise Exception(f\"Failed to insert data into `{model.__tablename__}` table. Error: {e}\")\n+\n+        # After committing, the `data` objects should have their IDs assigned.\n+        return data"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/seeders/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fseeders%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fseeders%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fseeders%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/selenium/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fselenium%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fselenium%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fselenium%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "6e11c140749afa6b7befde407e11c53e513eefda",
        "filename": "core/selenium/common.py",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fselenium%2Fcommon.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fselenium%2Fcommon.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fselenium%2Fcommon.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,17 @@\n+from selenium import webdriver\n+from selenium.webdriver.chrome.service import Service\n+from webdriver_manager.chrome import ChromeDriverManager\n+\n+\n+def initialize_driver():\n+    # Initializes the browser options\n+    options = webdriver.ChromeOptions()\n+\n+    # Initialise the browser using WebDriver Manager\n+    service = Service(ChromeDriverManager().install())\n+    driver = webdriver.Chrome(service=service, options=options)\n+    return driver\n+\n+\n+def close_driver(driver):\n+    driver.quit()"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/serialisers/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fserialisers%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fserialisers%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fserialisers%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "b27a08d16ced791e53222be0cda02ea153799f22",
        "filename": "core/serialisers/serializer.py",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fserialisers%2Fserializer.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fserialisers%2Fserializer.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fserialisers%2Fserializer.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,30 @@\n+from datetime import datetime\n+\n+\n+def convert_value(value):\n+    if isinstance(value, datetime):\n+        return value.isoformat()\n+    return value\n+\n+\n+class Serializer:\n+    def __init__(self, serialization_fields, related_serializers=None):\n+        self.serialization_fields = serialization_fields\n+        self.related_serializers = related_serializers or {}\n+\n+    def serialize(self, instance):\n+        serialized_data = {}\n+        for key, attr_name in self.serialization_fields.items():\n+            if key in self.related_serializers:\n+                related_data = getattr(instance, attr_name)()\n+                if isinstance(related_data, list):\n+                    serialized_data[key] = [self.related_serializers[key].serialize(sub_instance)\n+                                            for sub_instance in related_data]\n+                else:\n+                    serialized_data[key] = self.related_serializers[key].serialize(related_data)\n+            else:\n+                attr = getattr(instance, attr_name, None)\n+                if callable(attr):\n+                    attr = attr()\n+                serialized_data[key] = convert_value(attr)\n+        return serialized_data"
      },
      {
        "sha": "942dca6b88e389cd7be7a1e82f34923aa9124e5f",
        "filename": "core/services/BaseService.py",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fservices%2FBaseService.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fservices%2FBaseService.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fservices%2FBaseService.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,34 @@\n+from flask import flash, redirect, url_for, render_template\n+\n+\n+class BaseService:\n+    def __init__(self, repository):\n+        self.repository = repository\n+\n+    def create(self, **kwargs):\n+        return self.repository.create(**kwargs)\n+\n+    def count(self) -> int:\n+        return self.repository.count()\n+\n+    def get_by_id(self, id):\n+        return self.repository.get_by_id(id)\n+\n+    def get_or_404(self, id):\n+        return self.repository.get_or_404(id)\n+\n+    def update(self, id, **kwargs):\n+        return self.repository.update(id, **kwargs)\n+\n+    def delete(self, id):\n+        return self.repository.delete(id)\n+\n+    def handle_service_response(self, result, errors, success_url_redirect, success_msg, error_template, form):\n+        if result:\n+            flash(success_msg, 'success')\n+            return redirect(url_for(success_url_redirect))\n+        else:\n+            for error_field, error_messages in errors.items():\n+                for error_message in error_messages:\n+                    flash(f'{error_field}: {error_message}', 'error')\n+            return render_template(error_template, form=form)"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "core/services/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fservices%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/core%2Fservices%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/core%2Fservices%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "3e77c630e02716d416ed092e3e78d9eec0e20ebc",
        "filename": "docker/docker-compose.dev.yml",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fdocker-compose.dev.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fdocker-compose.dev.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fdocker-compose.dev.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,53 @@\n+services:\n+  web:\n+    container_name: web_app_container\n+    image: drorganvidez/uvlhub:dev\n+    env_file:\n+      - ../.env\n+    expose:\n+      - \"5000\"\n+    depends_on:\n+      - db\n+    build:\n+      context: ../\n+      dockerfile: docker/images/Dockerfile.dev\n+    volumes:\n+      - ../:/app\n+      - /var/run/docker.sock:/var/run/docker.sock\n+    command: [ \"sh\", \"-c\", \"sh /app/docker/entrypoints/development_entrypoint.sh\" ]\n+    networks:\n+      - uvlhub_network\n+\n+  db:\n+    container_name: mariadb_container\n+    env_file:\n+      - ../.env\n+    build:\n+      context: ../\n+      dockerfile: docker/images/Dockerfile.mariadb\n+    restart: always\n+    ports:\n+      - \"3306:3306\"\n+    volumes:\n+      - db_data:/var/lib/mysql\n+    networks:\n+      - uvlhub_network\n+\n+  nginx:\n+    container_name: nginx_web_server_container\n+    image: nginx:latest\n+    volumes:\n+      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf\n+      - ./nginx/html:/usr/share/nginx/html\n+    ports:\n+      - \"80:80\"\n+    depends_on:\n+      - web\n+    networks:\n+      - uvlhub_network\n+\n+volumes:\n+  db_data:\n+\n+networks:\n+  uvlhub_network:"
      },
      {
        "sha": "70dc521a9b11cdff7825c11f0d9930cb53f6e060",
        "filename": "docker/docker-compose.prod.ssl.yml",
        "status": "added",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fdocker-compose.prod.ssl.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fdocker-compose.prod.ssl.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fdocker-compose.prod.ssl.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,64 @@\n+services:\n+\n+  web:\n+    container_name: web_app_container\n+    image: drorganvidez/uvlhub:latest\n+    env_file:\n+      - ../.env\n+    ports:\n+      - \"5000:5000\"\n+    depends_on:\n+      - db\n+    restart: always\n+    volumes:\n+      - ./entrypoints/production_entrypoint.sh:/app/entrypoint.sh\n+      - ../scripts:/app/scripts\n+      - ../migrations:/app/migrations\n+      - ../uploads:/app/uploads\n+      - ../.moduleignore:/app/.moduleignore\n+    command: [ \"sh\", \"-c\", \"sh /app/entrypoint.sh\" ]\n+\n+  db:\n+    container_name: mariadb_container\n+    env_file:\n+      - ../.env\n+    image: mariadb:latest\n+    command: --default-authentication-plugin=mysql_native_password\n+    restart: always\n+    ports:\n+      - \"3306:3306\"\n+    volumes:\n+      - db_data:/var/lib/mysql\n+\n+  nginx:\n+    container_name: nginx_web_server_container\n+    image: nginx:latest\n+    volumes:\n+      - ./nginx/nginx.prod.ssl.conf:/etc/nginx/nginx.conf\n+      - ./nginx/html:/usr/share/nginx/html\n+      - ./letsencrypt:/etc/letsencrypt:ro\n+      - ./public:/var/www:rw\n+    ports:\n+      - \"80:80\"\n+      - \"443:443\"\n+    depends_on:\n+      - web\n+    restart: always\n+\n+  watchtower:\n+    container_name: watchtower_container\n+    image: containrrr/watchtower\n+    volumes:\n+      - /var/run/docker.sock:/var/run/docker.sock\n+    command: --cleanup --interval 120 web_app_container\n+    restart: always\n+\n+  certbot:\n+    image: certbot/certbot\n+    container_name: certbot_container\n+    volumes:\n+      - ./public:/var/www:rw\n+      - ./letsencrypt:/etc/letsencrypt\n+\n+volumes:\n+  db_data:"
      },
      {
        "sha": "2e4c14ef789141ca690519e77bc66c9572eecbbf",
        "filename": "docker/docker-compose.prod.webhook.yml",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fdocker-compose.prod.webhook.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fdocker-compose.prod.webhook.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fdocker-compose.prod.webhook.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,50 @@\n+services:\n+\n+  web:\n+    container_name: web_app_container\n+    image: drorganvidez/uvlhub:latest\n+    env_file:\n+      - ../.env\n+    ports:\n+      - \"5000:5000\"\n+    depends_on:\n+      - db\n+    build:\n+      context: ../\n+      dockerfile: docker/images/Dockerfile.webhook\n+    restart: always\n+    volumes:\n+      - ./entrypoints/production_entrypoint.sh:/app/entrypoint.sh\n+      - ../scripts:/app/scripts\n+      - ../migrations:/app/migrations\n+      - ../uploads:/app/uploads\n+      - ../:/app\n+      - /var/run/docker.sock:/var/run/docker.sock\n+    command: [ \"sh\", \"-c\", \"sh /app/entrypoint.sh\" ]\n+\n+  db:\n+    container_name: mariadb_container\n+    env_file:\n+      - ../.env\n+    image: mariadb:latest\n+    command: --default-authentication-plugin=mysql_native_password\n+    restart: always\n+    ports:\n+      - \"3306:3306\"\n+    volumes:\n+      - db_data:/var/lib/mysql\n+\n+  nginx:\n+    container_name: nginx_web_server_container\n+    image: nginx:latest\n+    volumes:\n+      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf\n+      - ./nginx/html:/usr/share/nginx/html\n+    ports:\n+      - \"80:80\"\n+    depends_on:\n+      - web\n+    restart: always\n+\n+volumes:\n+  db_data:\n\\ No newline at end of file"
      },
      {
        "sha": "86f1ce1c0cdd219fe5e035fe2cb3b2be8c81225b",
        "filename": "docker/docker-compose.prod.yml",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fdocker-compose.prod.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fdocker-compose.prod.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fdocker-compose.prod.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,54 @@\n+services:\n+\n+  web:\n+    container_name: web_app_container\n+    image: drorganvidez/uvlhub:latest\n+    env_file:\n+      - ../.env\n+    ports:\n+      - \"5000:5000\"\n+    depends_on:\n+      - db\n+    restart: always\n+    volumes:\n+      - ./entrypoints/production_entrypoint.sh:/app/entrypoint.sh\n+      - ../scripts:/app/scripts\n+      - ../migrations:/app/migrations\n+      - ../uploads:/app/uploads\n+      - ../.moduleignore:/app/.moduleignore\n+    command: [ \"sh\", \"-c\", \"sh /app/entrypoint.sh\" ]\n+\n+  db:\n+    container_name: mariadb_container\n+    env_file:\n+      - ../.env\n+    image: mariadb:latest\n+    command: --default-authentication-plugin=mysql_native_password\n+    restart: always\n+    ports:\n+      - \"3306:3306\"\n+    volumes:\n+      - db_data:/var/lib/mysql\n+\n+  nginx:\n+    container_name: nginx_web_server_container\n+    image: nginx:latest\n+    volumes:\n+      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf\n+      - ./nginx/html:/usr/share/nginx/html\n+    ports:\n+      - \"80:80\"\n+    depends_on:\n+      - web\n+    restart: always\n+\n+  watchtower:\n+    container_name: watchtower_container\n+    image: containrrr/watchtower\n+    volumes:\n+      - /var/run/docker.sock:/var/run/docker.sock\n+    command: --cleanup --interval 120 web_app_container\n+    restart: always\n+\n+volumes:\n+  db_data:\n\\ No newline at end of file"
      },
      {
        "sha": "90f79c0215b0009feb2ac7d49ce7abc27cf295b3",
        "filename": "docker/entrypoints/development_entrypoint.sh",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fentrypoints%2Fdevelopment_entrypoint.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fentrypoints%2Fdevelopment_entrypoint.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fentrypoints%2Fdevelopment_entrypoint.sh?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,67 @@\n+#!/bin/bash\n+\n+# ---------------------------------------------------------------------------\n+# Creative Commons CC BY 4.0 - David Romero - Diverso Lab\n+# ---------------------------------------------------------------------------\n+# This script is licensed under the Creative Commons Attribution 4.0 \n+# International License. You are free to share and adapt the material \n+# as long as appropriate credit is given, a link to the license is provided, \n+# and you indicate if changes were made.\n+#\n+# For more details, visit:\n+# https://creativecommons.org/licenses/by/4.0/\n+# ---------------------------------------------------------------------------\n+\n+# Exit immediately if a command exits with a non-zero status\n+set -e\n+\n+# Install Rosemary\n+pip install -e ./\n+\n+# Wait for the database to be ready by running a script\n+sh ./scripts/wait-for-db.sh\n+\n+# Create a specific database for testing by running a script\n+sh ./scripts/init-testing-db.sh\n+\n+# Initialize migrations only if the migrations directory doesn't exist\n+if [ ! -d \"migrations/versions\" ]; then\n+    # Initialize the migration repository\n+    flask db init\n+    flask db migrate\n+fi\n+\n+# Check if the database is empty\n+if [ $(mariadb -u $MARIADB_USER -p$MARIADB_PASSWORD -h $MARIADB_HOSTNAME -P $MARIADB_PORT -D $MARIADB_DATABASE -sse \"SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = '$MARIADB_DATABASE';\") -eq 0 ]; then\n+ \n+    echo \"Empty database, migrating...\"\n+\n+    # Get the latest migration revision\n+    LATEST_REVISION=$(ls -1 migrations/versions/*.py | grep -v \"__pycache__\" | sort -r | head -n 1 | sed 's/.*\\/\\(.*\\)\\.py/\\1/')\n+\n+    echo \"Latest revision: $LATEST_REVISION\"\n+\n+    # Run the migration process to apply all database schema changes\n+    flask db upgrade\n+\n+    # Seed the database with initial data\n+    rosemary db:seed -y\n+\n+else\n+\n+    echo \"Database already initialized, updating migrations...\"\n+\n+    # Get the current revision to avoid duplicate stamp\n+    CURRENT_REVISION=$(mariadb -u $MARIADB_USER -p$MARIADB_PASSWORD -h $MARIADB_HOSTNAME -P $MARIADB_PORT -D $MARIADB_DATABASE -sse \"SELECT version_num FROM alembic_version LIMIT 1;\")\n+    \n+    if [ -z \"$CURRENT_REVISION\" ]; then\n+        # If no current revision, stamp with the latest revision\n+        flask db stamp head\n+    fi\n+\n+    # Run the migration process to apply all database schema changes\n+    flask db upgrade\n+fi\n+\n+# Start the Flask application with specified host and port, enabling reload and debug mode\n+exec flask run --host=0.0.0.0 --port=5000 --reload --debug"
      },
      {
        "sha": "4ba50f8b231ff93a0af20cdb93f7145bf63c9c2a",
        "filename": "docker/entrypoints/production_entrypoint.sh",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fentrypoints%2Fproduction_entrypoint.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fentrypoints%2Fproduction_entrypoint.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fentrypoints%2Fproduction_entrypoint.sh?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,59 @@\n+#!/bin/bash\n+\n+# ---------------------------------------------------------------------------\n+# Creative Commons CC BY 4.0 - David Romero - Diverso Lab\n+# ---------------------------------------------------------------------------\n+# This script is licensed under the Creative Commons Attribution 4.0 \n+# International License. You are free to share and adapt the material \n+# as long as appropriate credit is given, a link to the license is provided, \n+# and you indicate if changes were made.\n+#\n+# For more details, visit:\n+# https://creativecommons.org/licenses/by/4.0/\n+# ---------------------------------------------------------------------------\n+\n+# Exit immediately if a command exits with a non-zero status\n+set -e\n+\n+# Wait for the database to be ready by running a script\n+sh ./scripts/wait-for-db.sh\n+\n+# Initialize migrations only if the migrations directory doesn't exist\n+if [ ! -d \"migrations/versions\" ]; then\n+    # Initialize the migration repository\n+    flask db init\n+    flask db migrate\n+fi\n+\n+# Check if the database is empty\n+if [ $(mariadb -u $MARIADB_USER -p$MARIADB_PASSWORD -h $MARIADB_HOSTNAME -P $MARIADB_PORT -D $MARIADB_DATABASE -sse \"SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = '$MARIADB_DATABASE';\") -eq 0 ]; then\n+ \n+    echo \"Empty database, migrating...\"\n+\n+    # Get the latest migration revision\n+    LATEST_REVISION=$(ls -1 migrations/versions/*.py | grep -v \"__pycache__\" | sort -r | head -n 1 | sed 's/.*\\/\\(.*\\)\\.py/\\1/')\n+\n+    echo \"Latest revision: $LATEST_REVISION\"\n+\n+    # Run the migration process to apply all database schema changes\n+    flask db upgrade\n+\n+else\n+\n+    echo \"Database already initialized, updating migrations...\"\n+\n+    # Get the current revision to avoid duplicate stamp\n+    CURRENT_REVISION=$(mariadb -u $MARIADB_USER -p$MARIADB_PASSWORD -h $MARIADB_HOSTNAME -P $MARIADB_PORT -D $MARIADB_DATABASE -sse \"SELECT version_num FROM alembic_version LIMIT 1;\")\n+    \n+    if [ -z \"$CURRENT_REVISION\" ]; then\n+        # If no current revision, stamp with the latest revision\n+        flask db stamp head\n+    fi\n+\n+    # Run the migration process to apply all database schema changes\n+    flask db upgrade\n+fi\n+\n+# Start the application using Gunicorn, binding it to port 5000\n+# Set the logging level to info and the timeout to 3600 seconds\n+exec gunicorn --bind 0.0.0.0:5000 app:app --log-level info --timeout 3600"
      },
      {
        "sha": "aa3145e217c2654a1462714b78e52abf35d6276e",
        "filename": "docker/entrypoints/render_entrypoint.sh",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fentrypoints%2Frender_entrypoint.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fentrypoints%2Frender_entrypoint.sh?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,56 @@\n+#!/bin/bash\n+\n+# ---------------------------------------------------------------------------\n+# Creative Commons CC BY 4.0 - David Romero - Diverso Lab\n+# ---------------------------------------------------------------------------\n+# This script is licensed under the Creative Commons Attribution 4.0 \n+# International License. You are free to share and adapt the material \n+# as long as appropriate credit is given, a link to the license is provided, \n+# and you indicate if changes were made.\n+#\n+# For more details, visit:\n+# https://creativecommons.org/licenses/by/4.0/\n+# ---------------------------------------------------------------------------\n+\n+# Exit immediately if a command exits with a non-zero status\n+set -e\n+\n+# Initialize migrations only if the migrations directory doesn't exist\n+if [ ! -d \"migrations/versions\" ]; then\n+    # Initialize the migration repository\n+    flask db init\n+    flask db migrate\n+fi\n+\n+# Check if the database is empty\n+if [ $(mariadb -u $MARIADB_USER -p$MARIADB_PASSWORD -h $MARIADB_HOSTNAME -P $MARIADB_PORT -D $MARIADB_DATABASE -sse \"SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = '$MARIADB_DATABASE';\") -eq 0 ]; then\n+ \n+    echo \"Empty database, migrating...\"\n+\n+    # Get the latest migration revision\n+    LATEST_REVISION=$(ls -1 migrations/versions/*.py | grep -v \"__pycache__\" | sort -r | head -n 1 | sed 's/.*\\/\\(.*\\)\\.py/\\1/')\n+\n+    echo \"Latest revision: $LATEST_REVISION\"\n+\n+    # Run the migration process to apply all database schema changes\n+    flask db upgrade\n+\n+else\n+\n+    echo \"Database already initialized, updating migrations...\"\n+\n+    # Get the current revision to avoid duplicate stamp\n+    CURRENT_REVISION=$(mariadb -u $MARIADB_USER -p$MARIADB_PASSWORD -h $MARIADB_HOSTNAME -P $MARIADB_PORT -D $MARIADB_DATABASE -sse \"SELECT version_num FROM alembic_version LIMIT 1;\")\n+    \n+    if [ -z \"$CURRENT_REVISION\" ]; then\n+        # If no current revision, stamp with the latest revision\n+        flask db stamp head\n+    fi\n+\n+    # Run the migration process to apply all database schema changes\n+    flask db upgrade\n+fi\n+\n+# Start the application using Gunicorn, binding it to port 80\n+# Set the logging level to info and the timeout to 3600 seconds\n+exec gunicorn --bind 0.0.0.0:80 app:app --log-level info --timeout 3600"
      },
      {
        "sha": "008af35821c79ff7e2699216df9b51ba64a6ed28",
        "filename": "docker/images/.dockerignore",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2F.dockerignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2F.dockerignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2F.dockerignore?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,3 @@\n+__pycache__\n+*.pyc\n+*.pyo"
      },
      {
        "sha": "fa7eb9f973a5a44ac002d7bc193141ef61dee985",
        "filename": "docker/images/Dockerfile.dev",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2FDockerfile.dev",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2FDockerfile.dev",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.dev?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,58 @@\n+# Use an official Python runtime as a parent image\n+FROM python:3.12-slim\n+\n+# Set this environment variable to suppress the \"Running as root\" warning from pip\n+ENV PIP_ROOT_USER_ACTION=ignore\n+\n+# Install necessary packages\n+RUN apt-get update \\\n+    && apt-get install -y --no-install-recommends mariadb-client \\\n+    && apt-get install -y --no-install-recommends gcc libc-dev python3-dev libffi-dev \\\n+    && apt-get install -y --no-install-recommends curl \\\n+    && apt-get install -y --no-install-recommends bash \\\n+    && apt-get install -y --no-install-recommends openrc \\\n+    && apt-get install -y --no-install-recommends build-essential \n+\n+# Install Docker CLI\n+RUN apt-get install -y --no-install-recommends ca-certificates gnupg lsb-release \\\n+    && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \\\n+    && echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" > /etc/apt/sources.list.d/docker.list \\\n+    && apt-get update \\\n+    && apt-get install -y --no-install-recommends docker-ce-cli \n+\n+# Clean up\n+RUN apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+        \n+# Set the working directory in the container to /app\n+WORKDIR /app\n+\n+# Copy requirements.txt to the /app working directory\n+COPY requirements.txt .\n+\n+# Removes cache at the build stage\n+RUN find . -type d -name \"__pycache__\" -exec rm -r {} + && \\\n+    find . -type f -name \"*.pyc\" -exec rm -f {} +\n+\n+# Copy the wait-for-db.sh script and set execution permissions\n+COPY --chmod=0755 scripts/wait-for-db.sh ./scripts/\n+\n+# Copy the init-testing-db.sh script and set execution permissions\n+COPY --chmod=0755 scripts/init-testing-db.sh ./scripts/\n+\n+# Copy files\n+COPY rosemary/ ./rosemary\n+COPY setup.py ./\n+COPY docker/ ./docker\n+\n+# Update pip\n+RUN pip install --no-cache-dir --upgrade pip\n+\n+# Install any needed packages specified in requirements.txt\n+RUN pip install -r requirements.txt\n+\n+# Install Rosemary\n+RUN pip install -e ./\n+\n+# Expose port 5000 for the Flask app\n+EXPOSE 5000\n\\ No newline at end of file"
      },
      {
        "sha": "fe66ceaaef68fd11697e4341b96770cc7b9fac79",
        "filename": "docker/images/Dockerfile.locust",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2FDockerfile.locust",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2FDockerfile.locust",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.locust?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,9 @@\n+FROM locustio/locust\n+\n+WORKDIR /app\n+\n+RUN pip install python-dotenv faker bs4\n+\n+ENV PYTHONPATH=/app\n+\n+CMD [\"-f\", \"/app/core/bootstraps/locustfile_bootstrap.py\"]"
      },
      {
        "sha": "03a58892a516efd1b3893244a0b1d71d37a0f24c",
        "filename": "docker/images/Dockerfile.mariadb",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2FDockerfile.mariadb",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2FDockerfile.mariadb",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.mariadb?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,5 @@\n+FROM mariadb:latest\n+\n+RUN apt-get update && \\\n+    apt-get install -y mariadb-client && \\\n+    rm -rf /var/lib/apt/lists/*"
      },
      {
        "sha": "c4a1b44ee3a9f721e72e6ef6d5584274e6b4d967",
        "filename": "docker/images/Dockerfile.prod",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2FDockerfile.prod",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2FDockerfile.prod",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.prod?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,48 @@\n+# Use an official Python runtime as a parent image, Alpine version for a lighter footprint\n+FROM python:3.12-slim\n+\n+# Install necessary packages\n+RUN apt-get update \\\n+    && apt-get install -y --no-install-recommends mariadb-client \\\n+    && apt-get install -y --no-install-recommends gcc libc-dev python3-dev libffi-dev \\\n+    && apt-get install -y --no-install-recommends curl \\\n+    && apt-get install -y --no-install-recommends bash \\\n+    && apt-get install -y --no-install-recommends openrc \\\n+    && apt-get install -y --no-install-recommends build-essential \n+\n+# Clean up\n+RUN apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+# Set the working directory in the container to /app\n+WORKDIR /app\n+\n+# Copy files\n+COPY app/ ./app\n+COPY core/ ./core\n+COPY migrations/ ./migrations\n+\n+# Copy requirements.txt into the working directory /app\n+COPY requirements.txt .\n+\n+# Removes cache at the build stage\n+RUN find . -type d -name \"__pycache__\" -exec rm -r {} + && \\\n+    find . -type f -name \"*.pyc\" -exec rm -f {} +\n+\n+# Copy the wait-for-db.sh script and set execution permissions\n+COPY --chmod=0755 scripts/wait-for-db.sh ./scripts/\n+\n+# Update pip\n+RUN pip install --no-cache-dir --upgrade pip\n+\n+# Install any needed packages specified in requirements.txt\n+RUN pip install -r requirements.txt\n+\n+# Add an argument for version tag\n+ARG VERSION_TAG\n+\n+# Create the .version file with the content of VERSION_TAG\n+RUN echo $VERSION_TAG > /app/.version\n+\n+# Expose port 5000\n+EXPOSE 5000\n\\ No newline at end of file"
      },
      {
        "sha": "44aa6a2d429b643b0e0d69399410414ec26ac37f",
        "filename": "docker/images/Dockerfile.render",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2FDockerfile.render",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2FDockerfile.render",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.render?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,53 @@\n+# Use an official Python runtime as a parent image, Alpine version for a lighter footprint\n+FROM python:3.12-slim\n+\n+# Install necessary packages\n+RUN apt-get update \\\n+    && apt-get install -y --no-install-recommends mariadb-client \\\n+    && apt-get install -y --no-install-recommends gcc libc-dev python3-dev libffi-dev \\\n+    && apt-get install -y --no-install-recommends curl \\\n+    && apt-get install -y --no-install-recommends bash \\\n+    && apt-get install -y --no-install-recommends openrc \\\n+    && apt-get install -y --no-install-recommends build-essential \n+\n+# Clean up\n+RUN apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+# Set the working directory in the container to /app\n+WORKDIR /app\n+\n+# Copy files\n+COPY app/ ./app\n+COPY core/ ./core\n+COPY migrations/ ./migrations\n+\n+# Copy requirements.txt into the working directory /app\n+COPY requirements.txt .\n+\n+# Removes cache at the build stage\n+RUN find . -type d -name \"__pycache__\" -exec rm -r {} + && \\\n+    find . -type f -name \"*.pyc\" -exec rm -f {} +\n+\n+# Copy entrypoint and set execution permissions\n+COPY docker/entrypoints/render_entrypoint.sh /app/render_entrypoint.sh\n+RUN chmod +x /app/render_entrypoint.sh\n+\n+# Copy the wait-for-db.sh script and set execution permissions\n+COPY scripts/wait-for-db.sh /app/scripts/wait-for-db.sh\n+RUN chmod +x /app/scripts/wait-for-db.sh\n+\n+# Create the .moduleignore file with the module 'webhook' inside\n+RUN echo \"webhook\" > /app/.moduleignore\n+\n+# Update pip\n+RUN pip install --no-cache-dir --upgrade pip\n+\n+# Install any needed packages specified in requirements.txt\n+RUN pip install -r requirements.txt\n+\n+# Expose port 80\n+EXPOSE 80\n+\n+# Command to run the application\n+CMD [\"./render_entrypoint.sh\"]"
      },
      {
        "sha": "aab466ccab4fd4cdea6b1085402c1dc738e11615",
        "filename": "docker/images/Dockerfile.webhook",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2FDockerfile.webhook",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fimages%2FDockerfile.webhook",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fimages%2FDockerfile.webhook?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,53 @@\n+# Use an official Python runtime as a parent image\n+FROM python:3.12-slim\n+\n+# Set this environment variable to suppress the \"Running as root\" warning from pip\n+ENV PIP_ROOT_USER_ACTION=ignore\n+\n+# Install necessary packages\n+RUN apt-get update \\\n+    && apt-get install -y --no-install-recommends mariadb-client \\\n+    && apt-get install -y --no-install-recommends gcc libc-dev python3-dev libffi-dev \\\n+    && apt-get install -y --no-install-recommends curl \\\n+    && apt-get install -y --no-install-recommends bash \\\n+    && apt-get install -y --no-install-recommends openrc \\\n+    && apt-get install -y --no-install-recommends build-essential \\\n+    && apt-get install -y --no-install-recommends git\n+\n+# Install Docker CLI\n+RUN apt-get install -y --no-install-recommends ca-certificates gnupg lsb-release \\\n+    && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \\\n+    && echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" > /etc/apt/sources.list.d/docker.list \\\n+    && apt-get update \\\n+    && apt-get install -y --no-install-recommends docker-ce-cli \n+\n+# Clean up\n+RUN apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+# Set the working directory in the container to /app\n+WORKDIR /app\n+\n+# Copy requirements.txt into the working directory /app\n+COPY requirements.txt .\n+\n+# Copy the wait-for-db.sh script and set execution permissions\n+COPY --chmod=0755 scripts/wait-for-db.sh ./scripts/\n+\n+# Copy the git_update.sh script and set execution permissions\n+COPY --chmod=0755 scripts/git_update.sh ./scripts/\n+\n+# Copy the restart_container.sh script and set execution permissions\n+COPY --chmod=0755 scripts/restart_container.sh ./scripts/\n+\n+# Update pip\n+RUN pip install --no-cache-dir --upgrade pip\n+\n+# Install any needed packages specified in requirements.txt\n+RUN pip install -r requirements.txt\n+\n+# Configure git safe directory\n+RUN git config --global --add safe.directory /app\n+\n+# Expose port 5000\n+EXPOSE 5000"
      },
      {
        "sha": "c96a04f008ee21e260b28f7701595ed59e2839e3",
        "filename": "docker/letsencrypt/.gitignore",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fletsencrypt%2F.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fletsencrypt%2F.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fletsencrypt%2F.gitignore?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,2 @@\n+*\n+!.gitignore\n\\ No newline at end of file"
      },
      {
        "sha": "5a1865591329ffa316b126e58f96b4ee5987809a",
        "filename": "docker/nginx/html/502_dev.html",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fnginx%2Fhtml%2F502_dev.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fnginx%2Fhtml%2F502_dev.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fnginx%2Fhtml%2F502_dev.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,50 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n+    <title>502 Bad Gateway</title>\n+    <!-- Bootstrap CSS -->\n+    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\n+    <style>\n+        body, html {\n+            height: 100%;\n+            margin: 0;\n+            display: flex;\n+            justify-content: center;\n+            align-items: center;\n+            background-color: #f4f4f4;\n+        }\n+        .container {\n+            max-width: 600px;\n+            background: #fff;\n+            padding: 20px;\n+            border-radius: 10px;\n+            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n+            text-align: center;\n+        }\n+        h1 {\n+            color: #d9534f;\n+        }\n+        code {\n+            background: #eee;\n+            padding: 5px 10px;\n+            border-radius: 5px;\n+            display: inline-block;\n+        }\n+    </style>\n+</head>\n+<body>\n+    <div class=\"container\">\n+        <h1 class=\"display-4\">502 Bad Gateway</h1>\n+        <p class=\"lead\">Sorry, the web container is currently unavailable. If you have just started the project, it is probably still booting. Try again after a few seconds.</p>\n+        <p class=\"instructions\">Please check the logs for more details:</p>\n+        <code>docker logs web_app_container</code>\n+        <p class=\"instructions mt-3\">If you have any questions, don't forget to visit our official documentation: <a href=\"https://docs.uvlhub.io/\" target=\"_blank\">docs.uvlhub.io</a></p>\n+    </div>\n+    <!-- Bootstrap JS and dependencies -->\n+    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\n+    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js\"></script>\n+    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n+</body>\n+</html>"
      },
      {
        "sha": "eaed73001faee48392365957ea8f614c1a1175a3",
        "filename": "docker/nginx/html/502_prod.html",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fnginx%2Fhtml%2F502_prod.html",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fnginx%2Fhtml%2F502_prod.html",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fnginx%2Fhtml%2F502_prod.html?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,45 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n+    <title>Maintenance</title>\n+    <!-- Bootstrap CSS -->\n+    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\n+    <style>\n+        body, html {\n+            height: 100%;\n+            margin: 0;\n+            display: flex;\n+            justify-content: center;\n+            align-items: center;\n+            background-color: #f4f4f4;\n+        }\n+        .container {\n+            max-width: 600px;\n+            background: #fff;\n+            padding: 20px;\n+            border-radius: 10px;\n+            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n+            text-align: center;\n+        }\n+        h1 {\n+            color: #01547D\n+        }\n+        p {\n+            font-size: 20px;\n+            color: #555;\n+        }\n+    </style>\n+</head>\n+<body>\n+    <div class=\"container\">\n+        <h1 class=\"display-4\">Under maintenance</h1>\n+        <p>We are sorry for the inconvenience. If you have any questions, please contact us at <a href=\"mailto:support@uvlhub.io\">support@uvlhub.io</a></p>\n+    </div>\n+    <!-- Bootstrap JS and dependencies -->\n+    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\n+    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js\"></script>\n+    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n+</body>\n+</html>"
      },
      {
        "sha": "692a6c07f3cd83b70a64d406758ee1e01328ee5b",
        "filename": "docker/nginx/nginx.dev.conf",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fnginx%2Fnginx.dev.conf",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fnginx%2Fnginx.dev.conf",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fnginx%2Fnginx.dev.conf?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,36 @@\n+events {}\n+\n+http {\n+\n+    upstream web {\n+        server web:5000;\n+    }\n+\n+    server {\n+\n+        listen 80;\n+\n+        client_max_body_size 10000M;\n+\n+        location / {\n+\n+            # Set proxy headers\n+            proxy_pass http://web;\n+            proxy_set_header Host $http_host;\n+            proxy_set_header X-Real-IP $remote_addr;\n+            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n+            proxy_set_header X-Forwarded-Proto $scheme;\n+\n+            # Increase proxy timeout settings\n+            proxy_connect_timeout 3600;\n+            proxy_send_timeout 3600;\n+            proxy_read_timeout 3600;\n+        }\n+\n+        error_page 502 /502_dev.html;\n+        location = /502_dev.html {\n+            root /usr/share/nginx/html;\n+            internal;\n+        }\n+    }\n+}"
      },
      {
        "sha": "a8d1f7fe129b4366ac5746291f41185b453eb88f",
        "filename": "docker/nginx/nginx.prod.conf",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fnginx%2Fnginx.prod.conf",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fnginx%2Fnginx.prod.conf",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fnginx%2Fnginx.prod.conf?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,36 @@\n+events {}\n+\n+http {\n+\n+    upstream web {\n+        server web:5000;\n+    }\n+\n+    server {\n+\n+        listen 80;\n+\n+        client_max_body_size 10000M;\n+\n+        location / {\n+\n+            # Set proxy headers\n+            proxy_pass http://web;\n+            proxy_set_header Host $http_host;\n+            proxy_set_header X-Real-IP $remote_addr;\n+            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n+            proxy_set_header X-Forwarded-Proto $scheme;\n+\n+            # Increase proxy timeout settings\n+            proxy_connect_timeout 3600;\n+            proxy_send_timeout 3600;\n+            proxy_read_timeout 3600;\n+        }\n+\n+        error_page 502 /502_prod.html;\n+        location = /502_prod.html {\n+            root /usr/share/nginx/html;\n+            internal;\n+        }\n+    }\n+}"
      },
      {
        "sha": "b7358b2c13bfab78b602375bf4b9087d05a4e80d",
        "filename": "docker/nginx/nginx.prod.no-ssl.conf.template",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fnginx%2Fnginx.prod.no-ssl.conf.template",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fnginx%2Fnginx.prod.no-ssl.conf.template",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fnginx%2Fnginx.prod.no-ssl.conf.template?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,38 @@\n+events {}\n+\n+http {\n+    upstream web {\n+        server web:5000;\n+    }\n+\n+    server {\n+        listen 80;\n+        server_name {{domain}};\n+\n+        location ~ /.well-known/acme-challenge/ {\n+            root /var/www;\n+            try_files $uri =404;\n+        }\n+\n+        location / {\n+\n+            # Set proxy headers\n+            proxy_pass http://web;\n+            proxy_set_header Host $http_host;\n+            proxy_set_header X-Real-IP $remote_addr;\n+            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n+            proxy_set_header X-Forwarded-Proto $scheme;\n+\n+            # Increase proxy timeout settings\n+            proxy_connect_timeout 3600;\n+            proxy_send_timeout 3600;\n+            proxy_read_timeout 3600;\n+        }\n+\n+        error_page 502 /502_prod.html;\n+        location = /502_prod.html {\n+            root /usr/share/nginx/html;\n+            internal;\n+        }\n+    }\n+}"
      },
      {
        "sha": "ec78d2d7b301c42e71c2220c46856a1c77a6df14",
        "filename": "docker/nginx/nginx.prod.ssl.conf.template",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fnginx%2Fnginx.prod.ssl.conf.template",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fnginx%2Fnginx.prod.ssl.conf.template",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fnginx%2Fnginx.prod.ssl.conf.template?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,53 @@\n+events {}\n+\n+http {\n+    upstream web {\n+        server web:5000;\n+    }\n+\n+    server {\n+        listen 80;\n+        server_name {{domain}};\n+\n+        location ~ /.well-known/acme-challenge/ {\n+            root /var/www;\n+            try_files $uri =404;\n+        }\n+\n+        location / {\n+            return 301 https://{{domain}}$request_uri;\n+        }\n+    }\n+\n+    server {\n+        listen 443 ssl;\n+\n+        client_max_body_size 10000M;\n+\n+        server_name {{domain}};\n+\n+        ssl_certificate /etc/letsencrypt/live/{{domain}}/fullchain.pem;\n+        ssl_certificate_key /etc/letsencrypt/live/{{domain}}/privkey.pem;\n+\n+        location / {\n+\n+            # Set proxy headers\n+            proxy_pass http://web;\n+            proxy_set_header Host $http_host;\n+            proxy_set_header X-Real-IP $remote_addr;\n+            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n+            proxy_set_header X-Forwarded-Proto $scheme;\n+\n+            # Increase proxy timeout settings\n+            proxy_connect_timeout 3600;\n+            proxy_send_timeout 3600;\n+            proxy_read_timeout 3600;\n+        }\n+\n+        error_page 502 /502_prod.html;\n+        location = /502_prod.html {\n+            root /usr/share/nginx/html;\n+            internal;\n+        }\n+    }\n+}"
      },
      {
        "sha": "c96a04f008ee21e260b28f7701595ed59e2839e3",
        "filename": "docker/public/.gitignore",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fpublic%2F.gitignore",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/docker%2Fpublic%2F.gitignore",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/docker%2Fpublic%2F.gitignore?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,2 @@\n+*\n+!.gitignore\n\\ No newline at end of file"
      },
      {
        "sha": "0e048441597444a7e2850d6d7c4ce15550f79bda",
        "filename": "migrations/README",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/migrations%2FREADME",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/migrations%2FREADME",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/migrations%2FREADME?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+Single-database configuration for Flask."
      },
      {
        "sha": "ec9d45c26a6bb54e833fd4e6ce2de29343894f4b",
        "filename": "migrations/alembic.ini",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/migrations%2Falembic.ini",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/migrations%2Falembic.ini",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/migrations%2Falembic.ini?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,50 @@\n+# A generic, single database configuration.\n+\n+[alembic]\n+# template used to generate migration files\n+# file_template = %%(rev)s_%%(slug)s\n+\n+# set to 'true' to run the environment during\n+# the 'revision' command, regardless of autogenerate\n+# revision_environment = false\n+\n+\n+# Logging configuration\n+[loggers]\n+keys = root,sqlalchemy,alembic,flask_migrate\n+\n+[handlers]\n+keys = console\n+\n+[formatters]\n+keys = generic\n+\n+[logger_root]\n+level = WARN\n+handlers = console\n+qualname =\n+\n+[logger_sqlalchemy]\n+level = WARN\n+handlers =\n+qualname = sqlalchemy.engine\n+\n+[logger_alembic]\n+level = INFO\n+handlers =\n+qualname = alembic\n+\n+[logger_flask_migrate]\n+level = INFO\n+handlers =\n+qualname = flask_migrate\n+\n+[handler_console]\n+class = StreamHandler\n+args = (sys.stderr,)\n+level = NOTSET\n+formatter = generic\n+\n+[formatter_generic]\n+format = %(levelname)-5.5s [%(name)s] %(message)s\n+datefmt = %H:%M:%S"
      },
      {
        "sha": "4c9709271b2ff28271b13c29bba5c50b80fea0ac",
        "filename": "migrations/env.py",
        "status": "added",
        "additions": 113,
        "deletions": 0,
        "changes": 113,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/migrations%2Fenv.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/migrations%2Fenv.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/migrations%2Fenv.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,113 @@\n+import logging\n+from logging.config import fileConfig\n+\n+from flask import current_app\n+\n+from alembic import context\n+\n+# this is the Alembic Config object, which provides\n+# access to the values within the .ini file in use.\n+config = context.config\n+\n+# Interpret the config file for Python logging.\n+# This line sets up loggers basically.\n+fileConfig(config.config_file_name)\n+logger = logging.getLogger('alembic.env')\n+\n+\n+def get_engine():\n+    try:\n+        # this works with Flask-SQLAlchemy<3 and Alchemical\n+        return current_app.extensions['migrate'].db.get_engine()\n+    except (TypeError, AttributeError):\n+        # this works with Flask-SQLAlchemy>=3\n+        return current_app.extensions['migrate'].db.engine\n+\n+\n+def get_engine_url():\n+    try:\n+        return get_engine().url.render_as_string(hide_password=False).replace(\n+            '%', '%%')\n+    except AttributeError:\n+        return str(get_engine().url).replace('%', '%%')\n+\n+\n+# add your model's MetaData object here\n+# for 'autogenerate' support\n+# from myapp import mymodel\n+# target_metadata = mymodel.Base.metadata\n+config.set_main_option('sqlalchemy.url', get_engine_url())\n+target_db = current_app.extensions['migrate'].db\n+\n+# other values from the config, defined by the needs of env.py,\n+# can be acquired:\n+# my_important_option = config.get_main_option(\"my_important_option\")\n+# ... etc.\n+\n+\n+def get_metadata():\n+    if hasattr(target_db, 'metadatas'):\n+        return target_db.metadatas[None]\n+    return target_db.metadata\n+\n+\n+def run_migrations_offline():\n+    \"\"\"Run migrations in 'offline' mode.\n+\n+    This configures the context with just a URL\n+    and not an Engine, though an Engine is acceptable\n+    here as well.  By skipping the Engine creation\n+    we don't even need a DBAPI to be available.\n+\n+    Calls to context.execute() here emit the given string to the\n+    script output.\n+\n+    \"\"\"\n+    url = config.get_main_option(\"sqlalchemy.url\")\n+    context.configure(\n+        url=url, target_metadata=get_metadata(), literal_binds=True\n+    )\n+\n+    with context.begin_transaction():\n+        context.run_migrations()\n+\n+\n+def run_migrations_online():\n+    \"\"\"Run migrations in 'online' mode.\n+\n+    In this scenario we need to create an Engine\n+    and associate a connection with the context.\n+\n+    \"\"\"\n+\n+    # this callback is used to prevent an auto-migration from being generated\n+    # when there are no changes to the schema\n+    # reference: http://alembic.zzzcomputing.com/en/latest/cookbook.html\n+    def process_revision_directives(context, revision, directives):\n+        if getattr(config.cmd_opts, 'autogenerate', False):\n+            script = directives[0]\n+            if script.upgrade_ops.is_empty():\n+                directives[:] = []\n+                logger.info('No changes in schema detected.')\n+\n+    conf_args = current_app.extensions['migrate'].configure_args\n+    if conf_args.get(\"process_revision_directives\") is None:\n+        conf_args[\"process_revision_directives\"] = process_revision_directives\n+\n+    connectable = get_engine()\n+\n+    with connectable.connect() as connection:\n+        context.configure(\n+            connection=connection,\n+            target_metadata=get_metadata(),\n+            **conf_args\n+        )\n+\n+        with context.begin_transaction():\n+            context.run_migrations()\n+\n+\n+if context.is_offline_mode():\n+    run_migrations_offline()\n+else:\n+    run_migrations_online()"
      },
      {
        "sha": "2c0156303a8df3ffdc9de87765bf801bf6bea4a5",
        "filename": "migrations/script.py.mako",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/migrations%2Fscript.py.mako",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/migrations%2Fscript.py.mako",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/migrations%2Fscript.py.mako?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,24 @@\n+\"\"\"${message}\n+\n+Revision ID: ${up_revision}\n+Revises: ${down_revision | comma,n}\n+Create Date: ${create_date}\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+${imports if imports else \"\"}\n+\n+# revision identifiers, used by Alembic.\n+revision = ${repr(up_revision)}\n+down_revision = ${repr(down_revision)}\n+branch_labels = ${repr(branch_labels)}\n+depends_on = ${repr(depends_on)}\n+\n+\n+def upgrade():\n+    ${upgrades if upgrades else \"pass\"}\n+\n+\n+def downgrade():\n+    ${downgrades if downgrades else \"pass\"}"
      },
      {
        "sha": "840b763a7289fb875622cf2b7850b8454825714e",
        "filename": "migrations/versions/001.py",
        "status": "added",
        "additions": 191,
        "deletions": 0,
        "changes": 191,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/migrations%2Fversions%2F001.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/migrations%2Fversions%2F001.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/migrations%2Fversions%2F001.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,191 @@\n+\"\"\"first migration\n+\n+Revision ID: 001\n+Revises: \n+Create Date: 2024-09-08 16:50:20.326640\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+\n+\n+# revision identifiers, used by Alembic.\n+revision = '001'\n+down_revision = None\n+branch_labels = None\n+depends_on = None\n+\n+\n+def upgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.create_table('doi_mapping',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('dataset_doi_old', sa.String(length=120), nullable=True),\n+    sa.Column('dataset_doi_new', sa.String(length=120), nullable=True),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('ds_metrics',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('number_of_models', sa.String(length=120), nullable=True),\n+    sa.Column('number_of_features', sa.String(length=120), nullable=True),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('fm_metrics',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('solver', sa.Text(), nullable=True),\n+    sa.Column('not_solver', sa.Text(), nullable=True),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('user',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('email', sa.String(length=256), nullable=False),\n+    sa.Column('password', sa.String(length=256), nullable=False),\n+    sa.Column('created_at', sa.DateTime(), nullable=False),\n+    sa.PrimaryKeyConstraint('id'),\n+    sa.UniqueConstraint('email')\n+    )\n+    op.create_table('webhook',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('zenodo',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('ds_meta_data',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('deposition_id', sa.Integer(), nullable=True),\n+    sa.Column('title', sa.String(length=120), nullable=False),\n+    sa.Column('description', sa.Text(), nullable=False),\n+    sa.Column('publication_type', sa.Enum('NONE', 'ANNOTATION_COLLECTION', 'BOOK', 'BOOK_SECTION', 'CONFERENCE_PAPER', 'DATA_MANAGEMENT_PLAN', 'JOURNAL_ARTICLE', 'PATENT', 'PREPRINT', 'PROJECT_DELIVERABLE', 'PROJECT_MILESTONE', 'PROPOSAL', 'REPORT', 'SOFTWARE_DOCUMENTATION', 'TAXONOMIC_TREATMENT', 'TECHNICAL_NOTE', 'THESIS', 'WORKING_PAPER', 'OTHER', name='publicationtype'), nullable=False),\n+    sa.Column('publication_doi', sa.String(length=120), nullable=True),\n+    sa.Column('dataset_doi', sa.String(length=120), nullable=True),\n+    sa.Column('tags', sa.String(length=120), nullable=True),\n+    sa.Column('ds_metrics_id', sa.Integer(), nullable=True),\n+    sa.ForeignKeyConstraint(['ds_metrics_id'], ['ds_metrics.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('fm_meta_data',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('uvl_filename', sa.String(length=120), nullable=False),\n+    sa.Column('title', sa.String(length=120), nullable=False),\n+    sa.Column('description', sa.Text(), nullable=False),\n+    sa.Column('publication_type', sa.Enum('NONE', 'ANNOTATION_COLLECTION', 'BOOK', 'BOOK_SECTION', 'CONFERENCE_PAPER', 'DATA_MANAGEMENT_PLAN', 'JOURNAL_ARTICLE', 'PATENT', 'PREPRINT', 'PROJECT_DELIVERABLE', 'PROJECT_MILESTONE', 'PROPOSAL', 'REPORT', 'SOFTWARE_DOCUMENTATION', 'TAXONOMIC_TREATMENT', 'TECHNICAL_NOTE', 'THESIS', 'WORKING_PAPER', 'OTHER', name='publicationtype'), nullable=False),\n+    sa.Column('publication_doi', sa.String(length=120), nullable=True),\n+    sa.Column('tags', sa.String(length=120), nullable=True),\n+    sa.Column('uvl_version', sa.String(length=120), nullable=True),\n+    sa.Column('fm_metrics_id', sa.Integer(), nullable=True),\n+    sa.ForeignKeyConstraint(['fm_metrics_id'], ['fm_metrics.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('user_profile',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=False),\n+    sa.Column('orcid', sa.String(length=19), nullable=True),\n+    sa.Column('affiliation', sa.String(length=100), nullable=True),\n+    sa.Column('name', sa.String(length=100), nullable=False),\n+    sa.Column('surname', sa.String(length=100), nullable=False),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id'),\n+    sa.UniqueConstraint('user_id')\n+    )\n+    op.create_table('author',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('name', sa.String(length=120), nullable=False),\n+    sa.Column('affiliation', sa.String(length=120), nullable=True),\n+    sa.Column('orcid', sa.String(length=120), nullable=True),\n+    sa.Column('ds_meta_data_id', sa.Integer(), nullable=True),\n+    sa.Column('fm_meta_data_id', sa.Integer(), nullable=True),\n+    sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+    sa.ForeignKeyConstraint(['fm_meta_data_id'], ['fm_meta_data.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('data_set',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=False),\n+    sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n+    sa.Column('created_at', sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('ds_download_record',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=True),\n+    sa.Column('dataset_id', sa.Integer(), nullable=True),\n+    sa.Column('download_date', sa.DateTime(), nullable=False),\n+    sa.Column('download_cookie', sa.String(length=36), nullable=False),\n+    sa.ForeignKeyConstraint(['dataset_id'], ['data_set.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('ds_view_record',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=True),\n+    sa.Column('dataset_id', sa.Integer(), nullable=True),\n+    sa.Column('view_date', sa.DateTime(), nullable=False),\n+    sa.Column('view_cookie', sa.String(length=36), nullable=False),\n+    sa.ForeignKeyConstraint(['dataset_id'], ['data_set.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('feature_model',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('data_set_id', sa.Integer(), nullable=False),\n+    sa.Column('fm_meta_data_id', sa.Integer(), nullable=True),\n+    sa.ForeignKeyConstraint(['data_set_id'], ['data_set.id'], ),\n+    sa.ForeignKeyConstraint(['fm_meta_data_id'], ['fm_meta_data.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('file',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('name', sa.String(length=120), nullable=False),\n+    sa.Column('checksum', sa.String(length=120), nullable=False),\n+    sa.Column('size', sa.Integer(), nullable=False),\n+    sa.Column('feature_model_id', sa.Integer(), nullable=False),\n+    sa.ForeignKeyConstraint(['feature_model_id'], ['feature_model.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('file_download_record',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=True),\n+    sa.Column('file_id', sa.Integer(), nullable=True),\n+    sa.Column('download_date', sa.DateTime(), nullable=False),\n+    sa.Column('download_cookie', sa.String(length=36), nullable=False),\n+    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('file_view_record',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=True),\n+    sa.Column('file_id', sa.Integer(), nullable=False),\n+    sa.Column('view_date', sa.DateTime(), nullable=True),\n+    sa.Column('view_cookie', sa.String(length=36), nullable=True),\n+    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    # ### end Alembic commands ###\n+\n+\n+def downgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.drop_table('file_view_record')\n+    op.drop_table('file_download_record')\n+    op.drop_table('file')\n+    op.drop_table('feature_model')\n+    op.drop_table('ds_view_record')\n+    op.drop_table('ds_download_record')\n+    op.drop_table('data_set')\n+    op.drop_table('author')\n+    op.drop_table('user_profile')\n+    op.drop_table('fm_meta_data')\n+    op.drop_table('ds_meta_data')\n+    op.drop_table('zenodo')\n+    op.drop_table('webhook')\n+    op.drop_table('user')\n+    op.drop_table('fm_metrics')\n+    op.drop_table('ds_metrics')\n+    op.drop_table('doi_mapping')\n+    # ### end Alembic commands ###"
      },
      {
        "sha": "1285fa18f67657f9c1a32253514d86f155ee29bc",
        "filename": "requirements.txt",
        "status": "added",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/requirements.txt",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/requirements.txt",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/requirements.txt?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,100 @@\n+afmparser==1.0.3\n+alembic==1.13.2\n+aniso8601==9.0.1\n+antlr4-python3-runtime==4.13.1\n+astutils==0.0.6\n+attrs==23.2.0\n+beautifulsoup4==4.12.3\n+blinker==1.8.2\n+Brotli==1.1.0\n+bs4==0.0.2\n+certifi==2024.7.4\n+cffi==1.16.0\n+charset-normalizer==3.3.2\n+click==8.1.7\n+ConfigArgParse==1.7\n+coverage==7.6.0\n+cryptography==42.0.8\n+dd==0.6.0\n+dnspython==2.6.1\n+docker==7.1.0\n+email_validator==2.2.0\n+Faker==26.0.0\n+flake8==7.1.0\n+flamapy==2.0.0.dev1\n+flamapy-bdd==2.0.0.dev1\n+flamapy-fm==2.0.0.dev1\n+flamapy-fw==2.0.0.dev1\n+flamapy-sat==2.0.0.dev1\n+Flask==3.0.3\n+Flask-Cors==4.0.1\n+Flask-Login==0.6.3\n+Flask-Migrate==4.0.7\n+Flask-RESTful==0.3.10\n+Flask-SQLAlchemy==3.1.1\n+Flask-WTF==1.2.1\n+gevent==24.2.1\n+geventhttpclient==2.3.1\n+graphviz==0.20.3\n+greenlet==3.0.3\n+gunicorn==22.0.0\n+h11==0.14.0\n+h2==4.1.0\n+hpack==4.0.0\n+hyperframe==6.0.1\n+idna==3.7\n+iniconfig==2.0.0\n+itsdangerous==2.2.0\n+Jinja2==3.1.4\n+kaitaistruct==0.10\n+locust==2.29.1\n+Mako==1.3.5\n+MarkupSafe==2.1.5\n+mccabe==0.7.0\n+msgpack==1.0.8\n+networkx==3.3\n+outcome==1.3.0.post0\n+packaging==24.1\n+pluggy==1.5.0\n+ply==3.10\n+psutil==6.0.0\n+pyasn1==0.6.0\n+pycodestyle==2.12.0\n+pycparser==2.22\n+pyflakes==3.2.0\n+PyMySQL==1.1.1\n+pyOpenSSL==24.1.0\n+pyparsing==3.1.2\n+PySocks==1.7.1\n+pytest==8.2.2\n+pytest-cov==5.0.0\n+python-dateutil==2.9.0.post0\n+python-dotenv==1.0.1\n+python-sat==1.8.dev13\n+pytz==2024.1\n+pyzmq==26.0.3\n+requests==2.32.3\n+selenium==4.22.0\n+selenium-wire==5.1.0\n+setuptools==70.3.0\n+six==1.16.0\n+sniffio==1.3.1\n+sortedcontainers==2.4.0\n+soupsieve==2.5\n+SQLAlchemy==2.0.31\n+SQLAlchemy-Utils==0.41.2\n+trio==0.26.0\n+trio-websocket==0.11.1\n+typing_extensions==4.12.2\n+Unidecode==1.3.8\n+urllib3==2.2.2\n+uvlparser==2.0.1\n+webdriver-manager==4.0.1\n+websocket-client==1.8.0\n+Werkzeug==3.0.3\n+wheel==0.43.0\n+wsproto==1.2.0\n+WTForms==3.1.2\n+zope.event==5.0\n+zope.interface==6.4.post2\n+zstandard==0.22.0"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "rosemary/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "d603733c3e738944300498662c2505d0622b167b",
        "filename": "rosemary/__main__.py",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2F__main__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2F__main__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2F__main__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,4 @@\n+from rosemary.cli import cli\n+\n+if __name__ == '__main__':\n+    cli()"
      },
      {
        "sha": "56b47b8a74cc80420dfb55a1315e76029cba7f9c",
        "filename": "rosemary/cli.py",
        "status": "added",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcli.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcli.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcli.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,64 @@\n+import click\n+\n+from rosemary.commands.module_list import module_list\n+from rosemary.commands.locust import locust, stop\n+from rosemary.commands.compose_env import compose_env\n+from rosemary.commands.route_list import route_list\n+from rosemary.commands.db_seed import db_seed\n+from rosemary.commands.clear_cache import clear_cache\n+from rosemary.commands.db_console import db_console\n+from rosemary.commands.db_migrate import db_migrate\n+from rosemary.commands.db_reset import db_reset\n+from rosemary.commands.clear_log import clear_log\n+from rosemary.commands.clear_uploads import clear_uploads\n+from rosemary.commands.coverage import coverage\n+from rosemary.commands.linter import linter\n+from rosemary.commands.selenium import selenium\n+from rosemary.commands.update import update\n+from rosemary.commands.info import info, info2\n+from rosemary.commands.make_module import make_module\n+from rosemary.commands.env import env\n+from rosemary.commands.test import test\n+\n+\n+class RosemaryCLI(click.Group):\n+    def get_command(self, ctx, cmd_name):\n+        rv = super().get_command(ctx, cmd_name)\n+        if rv is not None:\n+            return rv\n+        click.echo(f\"No such command '{cmd_name}'.\")\n+        click.echo(\"Try 'rosemary --help' for a list of available commands.\")\n+        return None\n+\n+\n+@click.group(cls=RosemaryCLI)\n+def cli():\n+    \"\"\"A CLI tool to help with project development.\"\"\"\n+    pass\n+\n+\n+cli.add_command(update)\n+cli.add_command(info)\n+cli.add_command(info2)\n+cli.add_command(make_module)\n+cli.add_command(env)\n+cli.add_command(test)\n+cli.add_command(linter)\n+cli.add_command(coverage)\n+cli.add_command(clear_uploads)\n+cli.add_command(clear_log)\n+cli.add_command(clear_cache)\n+cli.add_command(db_reset)\n+cli.add_command(db_migrate)\n+cli.add_command(db_console)\n+cli.add_command(db_seed)\n+cli.add_command(route_list)\n+cli.add_command(compose_env)\n+cli.add_command(locust)\n+cli.add_command(stop)\n+cli.add_command(selenium)\n+cli.add_command(module_list)\n+\n+\n+if __name__ == '__main__':\n+    cli()"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "rosemary/commands/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2F__init__.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2F__init__.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2F__init__.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7"
      },
      {
        "sha": "bda80ced9fd8230704f7ce29844450255049c37a",
        "filename": "rosemary/commands/clear_cache.py",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fclear_cache.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fclear_cache.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fclear_cache.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,53 @@\n+from pathlib import Path\n+\n+import click\n+import shutil\n+import os\n+\n+\n+@click.command('clear:cache', help=\"Clears pytest cache in app/modules and the build directory at the root.\")\n+def clear_cache():\n+\n+    if click.confirm('Are you sure you want to clear the pytest cache and the build directory?'):\n+\n+        project_root = Path(os.getenv('WORKING_DIR', ''))\n+        pytest_cache_dir = os.path.join(os.getenv('WORKING_DIR', ''), 'app/modules/.pytest_cache')\n+        build_dir = os.path.join(os.getenv('WORKING_DIR', ''), 'build')\n+\n+        if os.path.exists(pytest_cache_dir):\n+            try:\n+                shutil.rmtree(pytest_cache_dir)\n+                click.echo(click.style(\"Pytest cache cleared.\", fg='green'))\n+            except Exception as e:\n+                click.echo(click.style(f\"Failed to clear pytest cache: {e}\", fg='red'))\n+        else:\n+            click.echo(click.style(\"No pytest cache found. Nothing to clear.\", fg='yellow'))\n+\n+        if os.path.exists(build_dir):\n+            try:\n+                shutil.rmtree(build_dir)\n+                click.echo(click.style(\"Build directory cleared.\", fg='green'))\n+            except Exception as e:\n+                click.echo(click.style(f\"Failed to clear build directory: {e}\", fg='red'))\n+        else:\n+            click.echo(click.style(\"No cache or build directory found. Nothing to clear.\", fg='yellow'))\n+\n+        pycache_dirs = project_root.rglob('__pycache__')\n+        for dir in pycache_dirs:\n+            try:\n+                shutil.rmtree(dir)\n+            except Exception as e:\n+                click.echo(click.style(f\"Failed to clear __pycache__ directory {dir}: {e}\", fg='red'))\n+        click.echo(click.style(\"All __pycache__ directories cleared.\", fg='green'))\n+\n+        pyc_files = project_root.rglob('*.pyc')\n+        for file in pyc_files:\n+            try:\n+                file.unlink()\n+            except Exception as e:\n+                click.echo(click.style(f\"Failed to clear .pyc file {file}: {e}\", fg='red'))\n+\n+        click.echo(click.style(\"All cache cleared.\", fg='green'))\n+\n+    else:\n+        click.echo(click.style(\"Clear operation cancelled.\", fg='yellow'))"
      },
      {
        "sha": "08456bd47019cd0cd1964f5226b325e15cc18950",
        "filename": "rosemary/commands/clear_log.py",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fclear_log.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fclear_log.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fclear_log.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,18 @@\n+import click\n+import os\n+\n+\n+@click.command('clear:log', help=\"Clears the 'app.log' file.\")\n+def clear_log():\n+    log_file_path = os.path.join(os.getenv('WORKING_DIR', ''), 'app.log')\n+\n+    # Check if the log file exists\n+    if os.path.exists(log_file_path):\n+        try:\n+            # Deletes the log file\n+            os.remove(log_file_path)\n+            click.echo(click.style(\"The 'app.log' file has been successfully cleared.\", fg='green'))\n+        except Exception as e:\n+            click.echo(click.style(f\"Error clearing the 'app.log' file: {e}\", fg='red'))\n+    else:\n+        click.echo(click.style(\"The 'app.log' file does not exist.\", fg='yellow'))"
      },
      {
        "sha": "d9f9fc7ce293f0843715c1446ab7d6ffe2f34fe5",
        "filename": "rosemary/commands/clear_uploads.py",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fclear_uploads.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fclear_uploads.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fclear_uploads.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,21 @@\n+import click\n+import shutil\n+import os\n+\n+from core.configuration.configuration import uploads_folder_name\n+\n+\n+@click.command('clear:uploads', help=\"Clears the 'uploads' directory.\")\n+def clear_uploads():\n+    uploads_dir = os.path.join(os.getenv('WORKING_DIR', ''), uploads_folder_name())\n+\n+    # Verify if the 'uploads' folder exists\n+    if os.path.exists(uploads_dir) and os.path.isdir(uploads_dir):\n+        try:\n+            # Use shutil.rmtree to delete the folder and its contents.\n+            shutil.rmtree(uploads_dir)\n+            click.echo(click.style(\"The 'uploads' directory has been successfully cleared.\", fg='green'))\n+        except Exception as e:\n+            click.echo(click.style(f\"Error clearing the 'uploads' directory: {e}\", fg='red'))\n+    else:\n+        click.echo(click.style(\"The 'uploads' directory does not exist.\", fg='yellow'))"
      },
      {
        "sha": "7b886bd9a7ea2e68e0bf20fb74b3592f4b3f17f1",
        "filename": "rosemary/commands/compose_env.py",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fcompose_env.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fcompose_env.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fcompose_env.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,35 @@\n+import os\n+import click\n+from dotenv import dotenv_values\n+from flask.cli import with_appcontext\n+\n+\n+@click.command('compose:env', help=\"Combines .env files from blueprints with the root .env, checking for conflicts.\")\n+@with_appcontext\n+def compose_env():\n+\n+    base_path = os.path.join(os.getenv('WORKING_DIR', ''), 'app/modules')\n+    root_env_path = os.path.join(os.getenv('WORKING_DIR', ''), '.env')\n+\n+    # Loads the current root .env variables into a dictionary\n+    root_env_vars = dotenv_values(root_env_path)\n+\n+    # Finds and processes all blueprints .env files\n+    module_env_paths = [os.path.join(root, '.env') for root, dirs, files in os.walk(base_path) if '.env' in files]\n+    for env_path in module_env_paths:\n+        blueprint_env_vars = dotenv_values(env_path)\n+        # Add or update the blueprint variables in the root .env dictionary\n+        for key, value in blueprint_env_vars.items():\n+            if key in root_env_vars and root_env_vars[key] != value:\n+                conflict_msg = (f\"Conflict found for variable '{key}' in {env_path}. \"\n+                                \"Keeping the original value.\")\n+                click.echo(click.style(conflict_msg, fg='yellow'))\n+                continue\n+            root_env_vars[key] = value\n+\n+    # Write back to the root .env file\n+    with open(root_env_path, 'w') as root_env_file:\n+        for key, value in root_env_vars.items():\n+            root_env_file.write(f\"{key}={value}\\n\")\n+\n+    click.echo(click.style(\"Successfully merged .env files without conflicts.\", fg='green'))"
      },
      {
        "sha": "9c6bf2360b9e2f3ef477eff95390d1b825244765",
        "filename": "rosemary/commands/coverage.py",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fcoverage.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fcoverage.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fcoverage.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,30 @@\n+import click\n+import subprocess\n+import os\n+\n+\n+@click.command('coverage', help=\"Runs pytest coverage on the blueprints directory or a specific module.\")\n+@click.argument('module_name', required=False)\n+@click.option('--html', is_flag=True, help=\"Generates an HTML coverage report.\")\n+def coverage(module_name, html):\n+    base_path = os.path.join(os.getenv('WORKING_DIR', ''), 'app/modules')\n+    test_path = base_path\n+\n+    if module_name:\n+        test_path = os.path.join(base_path, module_name)\n+        if not os.path.exists(test_path):\n+            click.echo(click.style(f\"Module '{module_name}' does not exist.\", fg='red'))\n+            return\n+        click.echo(f\"Running coverage for the '{module_name}' module...\")\n+    else:\n+        click.echo(\"Running coverage for all modules...\")\n+\n+    coverage_cmd = ['pytest', '--ignore-glob=*selenium*', '--cov=' + test_path, test_path]\n+\n+    if html:\n+        coverage_cmd.extend(['--cov-report', 'html'])\n+\n+    try:\n+        subprocess.run(coverage_cmd, check=True)\n+    except subprocess.CalledProcessError as e:\n+        click.echo(click.style(f\"Error running coverage: {e}\", fg='red'))"
      },
      {
        "sha": "86dffc2dfe834015191a8437689c4f0a1525ef2d",
        "filename": "rosemary/commands/db_console.py",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fdb_console.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fdb_console.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fdb_console.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,23 @@\n+import click\n+import subprocess\n+from dotenv import load_dotenv\n+import os\n+\n+\n+@click.command('db:console', help=\"Opens a MariaDB console with credentials from .env.\")\n+def db_console():\n+    load_dotenv()\n+\n+    mariadb_hostname = os.getenv('MARIADB_HOSTNAME')\n+    mariadb_user = os.getenv('MARIADB_USER')\n+    mariadb_password = os.getenv('MARIADB_PASSWORD')\n+    mariadb_database = os.getenv('MARIADB_DATABASE')\n+\n+    # Build the command to connect to MariaDB\n+    mariadb_connect_cmd = f'mysql -h{mariadb_hostname} -u{mariadb_user} -p{mariadb_password} {mariadb_database}'\n+\n+    # Execute the command\n+    try:\n+        subprocess.run(mariadb_connect_cmd, shell=True, check=True)\n+    except subprocess.CalledProcessError as e:\n+        click.echo(click.style(f\"Error opening MariaDB console: {e}\", fg='red'))"
      },
      {
        "sha": "367d38b5c092d35a67b72b70efb4d0986addff43",
        "filename": "rosemary/commands/db_migrate.py",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fdb_migrate.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fdb_migrate.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fdb_migrate.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,25 @@\n+import subprocess\n+import click\n+from flask.cli import with_appcontext\n+\n+\n+@click.command('db:migrate', help=\"Generates and applies database migrations.\")\n+@with_appcontext\n+def db_migrate():\n+    # Generates migrations\n+    click.echo(\"Generating database migrations...\")\n+    result_migrate = subprocess.run(['flask', 'db', 'migrate'])\n+    if result_migrate.returncode == 0:\n+        click.echo(click.style(\"Migrations generated successfully.\", fg='green'))\n+    else:\n+        click.echo(click.style(\"Note: No new migrations needed or an error occurred \"\n+                               \"while generating migrations.\", fg='yellow'))\n+\n+    # Applies to migrations\n+    click.echo(\"Applying database migrations...\")\n+    result_upgrade = subprocess.run(['flask', 'db', 'upgrade'])\n+    if result_upgrade.returncode == 0:\n+        click.echo(click.style(\"Migrations applied successfully.\", fg='green'))\n+    else:\n+        click.echo(click.style(\"Error applying migrations. This may be due to the database \"\n+                               \"being already up-to-date.\", fg='yellow'))"
      },
      {
        "sha": "2e25ebbf6e9e2a061655570cd408dc2946dc4d16",
        "filename": "rosemary/commands/db_reset.py",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fdb_reset.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fdb_reset.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fdb_reset.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,63 @@\n+import click\n+import shutil\n+import os\n+import subprocess\n+from flask.cli import with_appcontext\n+from app import create_app, db\n+from sqlalchemy import MetaData\n+\n+from rosemary.commands.clear_uploads import clear_uploads\n+\n+\n+@click.command('db:reset', help=\"Resets the database, optionally clears migrations and recreates them.\")\n+@click.option('--clear-migrations', is_flag=True,\n+              help=\"Remove all tables including 'alembic_version', clear migrations folder, and recreate migrations.\")\n+@click.option('-y', '--yes', is_flag=True, help=\"Confirm the operation without prompting.\")\n+@with_appcontext\n+def db_reset(clear_migrations, yes):\n+    app = create_app()\n+    with app.app_context():\n+        if not yes and not click.confirm('WARNING: This will delete all data and clear uploads. Are you sure?',\n+                                         abort=True):\n+            return\n+\n+        # Deletes data from all tables\n+        try:\n+            meta = MetaData()\n+            meta.reflect(bind=db.engine)\n+            with db.engine.connect() as conn:\n+                trans = conn.begin()  # Begin transaction\n+                for table in reversed(meta.sorted_tables):\n+                    if not clear_migrations or table.name != 'alembic_version':\n+                        conn.execute(table.delete())\n+                trans.commit()  # End transaction\n+            click.echo(click.style(\"All table data cleared.\", fg='yellow'))\n+            subprocess.run(['flask', 'db', 'stamp', 'head'], check=True)\n+        except Exception as e:\n+            click.echo(click.style(f\"Error clearing table data: {e}\", fg='red'))\n+            if trans:\n+                trans.rollback()\n+            return\n+\n+        # Delete the uploads folder\n+        ctx = click.get_current_context()\n+        ctx.invoke(clear_uploads)\n+\n+        if clear_migrations:\n+            # Delete the migration folder if it exists.\n+            migrations_dir = os.path.join(os.getenv('WORKING_DIR', ''), 'migrations')\n+            if os.path.isdir(migrations_dir):\n+                shutil.rmtree(migrations_dir)\n+                click.echo(click.style(\"Migrations directory cleared.\", fg='yellow'))\n+\n+            # Run flask db init, migrate and upgrade\n+            try:\n+                subprocess.run(['flask', 'db', 'init'], check=True)\n+                subprocess.run(['flask', 'db', 'migrate'], check=True)\n+                subprocess.run(['flask', 'db', 'upgrade'], check=True)\n+                click.echo(click.style(\"Database recreated from new migrations.\", fg='green'))\n+            except subprocess.CalledProcessError as e:\n+                click.echo(click.style(f\"Error during migrations reset: {e}\", fg='red'))\n+                return\n+\n+        click.echo(click.style(\"Database reset successfully.\", fg='green'))"
      },
      {
        "sha": "4aa47e6ac20400ee0e3d866d131ef1875b7dbf21",
        "filename": "rosemary/commands/db_seed.py",
        "status": "added",
        "additions": 79,
        "deletions": 0,
        "changes": 79,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fdb_seed.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fdb_seed.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fdb_seed.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,79 @@\n+import inspect\n+import os\n+import importlib\n+import click\n+from flask.cli import with_appcontext\n+\n+from core.seeders.BaseSeeder import BaseSeeder\n+from rosemary.commands.db_reset import db_reset\n+\n+\n+def get_module_seeders(module_path, specific_module=None):\n+    seeders = []\n+    for root, dirs, files in os.walk(module_path):\n+        if 'seeders.py' in files:\n+            relative_path = os.path.relpath(root, module_path)\n+            module_name = relative_path.replace(os.path.sep, '.')\n+            full_module_name = f'app.modules.{module_name}.seeders'\n+\n+            # If a module was specified and does not match the current one, continue with the next one\n+            if specific_module and specific_module != module_name.split('.')[0]:\n+                continue\n+\n+            seeder_module = importlib.import_module(full_module_name)\n+            importlib.reload(seeder_module)  # Reload the module\n+\n+            for attr in dir(seeder_module):\n+                potential_seeder_class = getattr(seeder_module, attr)\n+                if (inspect.isclass(potential_seeder_class) and\n+                        issubclass(potential_seeder_class, BaseSeeder) and\n+                        potential_seeder_class is not BaseSeeder):\n+                    seeders.append(potential_seeder_class())\n+\n+    # Sort seeders by priority\n+    seeders.sort(key=lambda seeder: seeder.priority)\n+\n+    return seeders\n+\n+\n+@click.command('db:seed', help=\"Populates the database with the seeders defined in each module.\")\n+@click.option('--reset', is_flag=True, help=\"Reset the database before seeding.\")\n+@click.option('-y', '--yes', is_flag=True, help=\"Confirm the operation without prompting.\")\n+@click.argument('module', required=False)\n+@with_appcontext\n+def db_seed(reset, yes, module):\n+\n+    if reset:\n+        if yes or click.confirm(click.style('This will reset the database, do you want '\n+                                            'to continue?', fg='red'), abort=True):\n+            click.echo(click.style(\"Resetting the database...\", fg='yellow'))\n+            ctx = click.get_current_context()\n+            ctx.invoke(db_reset, clear_migrations=False, yes=True)\n+        else:\n+            click.echo(click.style(\"Database reset cancelled.\", fg='yellow'))\n+            return\n+\n+    blueprints_module_path = os.path.join(os.getenv('WORKING_DIR', ''), 'app/modules')\n+    seeders = get_module_seeders(blueprints_module_path, specific_module=module)\n+    success = True  # Flag to control the successful flow of the operation\n+\n+    if module:\n+        click.echo(click.style(f\"Seeding data for the '{module}' module...\", fg='green'))\n+    else:\n+        click.echo(click.style(\"Seeding data for all modules...\", fg='green'))\n+\n+    for seeder in seeders:\n+        try:\n+            seeder.run()\n+            click.echo(click.style(f'{seeder.__class__.__name__} performed.', fg='blue'))\n+        except Exception as e:\n+            click.echo(click.style(f'Error running seeder {seeder.__class__.__name__}: {e}', fg='red'))\n+            click.echo(click.style(f'Rolled back the transaction of {seeder.__class__.__name__} to keep the session '\n+                                   f'clean.',\n+                                   fg='yellow'))\n+\n+            success = False\n+            break\n+\n+    if success:\n+        click.echo(click.style('Database populated with test data.', fg='green'))"
      },
      {
        "sha": "27eccc5f54de990c55a692bf82ec0d30d3026bad",
        "filename": "rosemary/commands/env.py",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fenv.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fenv.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fenv.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,16 @@\n+# rosemary/commands/env.py\n+\n+import click\n+import os\n+from dotenv import dotenv_values\n+\n+\n+@click.command()\n+def env():\n+    \"\"\"Displays the current .env file values.\"\"\"\n+    # Load the .env file\n+    env_values = dotenv_values(os.path.join(os.getenv('WORKING_DIR', ''), '.env'))\n+\n+    # Display keys and values\n+    for key, value in env_values.items():\n+        click.echo(f\"{key}={value}\")"
      },
      {
        "sha": "601c509eb1b611a46fe24127af1ade638e406339",
        "filename": "rosemary/commands/info.py",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Finfo.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Finfo.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Finfo.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,61 @@\n+import click\n+import base64\n+import pkg_resources\n+\n+\n+def get_metadata_value(metadata_lines, key):\n+    default_value = f\"{key}: Unknown\"\n+    line = next((line for line in metadata_lines if line.startswith(key)), default_value)\n+    return line.split(':', 1)[1].strip() if line != default_value else default_value.split(':', 1)[1].strip()\n+\n+\n+@click.command()\n+def info():\n+    \"\"\"Displays information about the Rosemary CLI.\"\"\"\n+    distribution = pkg_resources.get_distribution(\"rosemary\")\n+\n+    try:\n+        metadata = distribution.get_metadata_lines('METADATA')\n+        author = get_metadata_value(metadata, 'Author')\n+        author_email = get_metadata_value(metadata, 'Author-email')\n+        description = get_metadata_value(metadata, 'Summary')\n+    except FileNotFoundError:\n+        author, author_email, description = \"Unknown\", \"Unknown\", \"Not available\"\n+\n+    name = distribution.project_name\n+    version = distribution.version\n+\n+    click.echo(f\"Name: {name}\")\n+    click.echo(f\"Version: {version}\")\n+    click.echo(f\"Author: {author}\")\n+    click.echo(f\"Author-email: {author_email}\")\n+    click.echo(f\"Description: {description}\")\n+\n+\n+@click.command('love:me', hidden=True)\n+@click.option('--again', is_flag=True)\n+def info2(again):\n+    if not again:\n+        click.echo(click.style(\"Love me --again?\", fg='magenta'))\n+        return\n+\n+    lyrics = \"ICAgIA0KICAgIEtub3cgSSd2ZSBkb25lIHdyb25nLA0KICAgIExlZnQgeW91ciBoZWFydCB0b3JuDQogICAgSXMgdGhhdCB3aGF0IGRldmlscyBkbz8NCiAgICBUb29rIHlvdSBzbyBsb3csDQogICAgV2hlcmUgb25seSBmb29scyBnbw0KICAgIEkgc2hvb2sgdGhlIGFuZ2VsIGluIHlvdSENCiAgICANCiAgICBOb3cgSSdtIHJpc2luZyBmcm9tIHRoZSBncm91bmQNCiAgICBSaXNpbmcgdXAgdG8geW91IQ0KICAgIEZpbGxlZCB3aXRoIGFsbCB0aGUgc3RyZW5ndGggSSd2ZSBmb3VuZCwNCiAgICBUaGVyZSdzIG5vdGhpbmcgSSBjYW4ndCBkbyENCiAgICANCiAgICBJIG5lZWQgdG8ga25vdyBub3csIGtub3cgbm93LCBjYW4geW91IGxvdmUgbWUgYWdhaW4/DQogICAgSSBuZWVkIHRvIGtub3cgbm93LCBrbm93IG5vdywgY2FuIHlvdSBsb3ZlIG1lIGFnYWluPw0KICAgIEkgbmVlZCB0byBrbm93IG5vdywga25vdyBub3csIGNhbiB5b3UgbG92ZSBtZSBhZ2Fpbj8NCiAgICBJIG5lZWQgdG8ga25vdyBub3csIGtub3cgbm93LCBjYW4geW91IGxvdmUgbWUgYWdhaW4/DQogICAgDQogICAgSSdsbCBzcGluIHlvdSBhcm91bmQsIHdvbid0IGxldCB5b3UgZmFsbCBkb3duLA0KICAgIFdvdWxkIHlvdSBsZXQgbWUgZG93bj8gTm8hDQogICAgSSdsbCBzcGluIHlvdSBhcm91bmQsIHdvbid0IGxldCB5b3UgZmFsbCBkb3duLA0KICAgIFdvdWxkIHlvdSBsZXQgbWUgZG93bj8gTm8hDQogICAgDQogICAgTm93IEknbSByaXNpbmcgZnJvbSB0aGUgZ3JvdW5kDQogICAgUmlzaW5nIHVwIHRvIHlvdSENCiAgICBGaWxsZWQgd2l0aCBhbGwgdGhlIHN0cmVuZ3RoIEkndmUgZm91bmQsDQogICAgVGhlcmUncyBub3RoaW5nIEkgY2FuJ3QgZG8hDQogICAgDQogICAgSSBuZWVkIHRvIGtub3cgbm93LCBrbm93IG5vdywgY2FuIHlvdSBsb3ZlIG1lIGFnYWluPw0KICAgIEkgbmVlZCB0byBrbm93IG5vdywga25vdyBub3csIGNhbiB5b3UgbG92ZSBtZSBhZ2Fpbj8NCiAgICBJIG5lZWQgdG8ga25vdyBub3csIGtub3cgbm93LCBjYW4geW91IGxvdmUgbWUgYWdhaW4/DQogICAgSSBuZWVkIHRvIGtub3cgbm93LCBrbm93IG5vdywgY2FuIHlvdSBsb3ZlIG1lIGFnYWluPw0KDQogICAgQ29uZ3JhdHVsYXRpb25zLCB5b3UgZm91bmQgdGhlIGVhc3RlciBlZ2ch\" # noqa\n+\n+    decoded = decode_lyrics(lyrics)\n+    colored_lyrics = colorize_lyrics(decoded)\n+    click.echo(colored_lyrics)\n+\n+\n+def colorize_lyrics(lyrics):\n+    colored_lyrics = \"\"\n+    colors = ['red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'white']\n+\n+    for i, line in enumerate(lyrics.splitlines()):\n+        colored_lyrics += click.style(line, fg=colors[i % len(colors)]) + '\\n'\n+\n+    return colored_lyrics\n+\n+\n+def decode_lyrics(encoded_lyrics):\n+    decoded_lyrics = base64.b64decode(encoded_lyrics.encode('utf-8')).decode('utf-8')\n+    return decoded_lyrics"
      },
      {
        "sha": "fd163a65796f81a3a37bd2c1bdda1a62ba4b6f44",
        "filename": "rosemary/commands/linter.py",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Flinter.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Flinter.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Flinter.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,26 @@\n+import click\n+import os\n+import subprocess\n+\n+\n+@click.command('linter', help=\"Runs flake8 linter on the 'app' and 'rosemary' directories.\")\n+def linter():\n+\n+    # Define the directories to be checked with flake8\n+    working_dir = os.getenv('WORKING_DIR', '')\n+    directories = [\n+        os.path.join(working_dir, 'app'),\n+        os.path.join(working_dir, 'rosemary'),\n+        os.path.join(working_dir, 'core')\n+    ]\n+\n+    # Run flake8 in each directory\n+    for directory in directories:\n+        click.echo(f\"Running flake8 on {directory}...\")\n+        result = subprocess.run(['flake8', directory])\n+\n+        # Check if flake8 encountered problems\n+        if result.returncode != 0:\n+            click.echo(click.style(f\"flake8 found issues in {directory}.\", fg='red'))\n+        else:\n+            click.echo(click.style(f\"No issues found in {directory}. Congratulations!\", fg='green'))"
      },
      {
        "sha": "754a58ec141de71b436245bfa0f192f48a29219e",
        "filename": "rosemary/commands/locust.py",
        "status": "added",
        "additions": 164,
        "deletions": 0,
        "changes": 164,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Flocust.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Flocust.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Flocust.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,164 @@\n+import os\n+import subprocess\n+import click\n+import docker\n+import signal\n+import psutil\n+\n+\n+@click.command('locust', help=\"Launches Locust for load testing based on the environment.\")\n+@click.argument('module', required=False)\n+def locust(module):\n+\n+    # Absolute paths\n+    working_dir = os.getenv('WORKING_DIR', '')\n+    core_dir = os.path.join(working_dir, 'core')\n+    docker_dir = os.path.join(working_dir, 'docker/')\n+    modules_dir = os.path.join(working_dir, 'app/modules')\n+\n+    def validate_module(module):\n+        \"\"\"Check if the module exists.\"\"\"\n+        if module:\n+            module_path = os.path.join(modules_dir, module)\n+            if not os.path.exists(module_path):\n+                raise click.UsageError(f\"module '{module}' does not exist.\")\n+            locustfile_path = os.path.join(module_path, 'tests', 'locustfile.py')\n+            if not os.path.exists(locustfile_path):\n+                raise click.UsageError(\n+                    f\"Locustfile for module '{module}' does not exist at path \"\n+                    f\"'{locustfile_path}'.\"\n+                )\n+\n+    def run_docker_locust(volume_name, module):\n+        \"\"\"Build and run the Locust container with the specified volume.\"\"\"\n+\n+        try:\n+            # Check if the container already exists\n+            client.containers.get('locust_container')\n+            click.echo(\"Locust container is already running.\")\n+            return\n+        except docker.errors.NotFound:\n+            pass  # Container does not exist, proceed to create it\n+\n+        click.echo(f\"Starting Locust in Docker environment on port 8089 with volume: {volume_name}...\")\n+\n+        # Build Locust's image\n+        build_command = [\n+            'docker', 'build', '-f', os.path.join(docker_dir, 'images/Dockerfile.locust'),\n+            '-t', 'locust-image', '.'\n+        ]\n+        click.echo(f\"Build command: {' '.join(build_command)}\")\n+        subprocess.run(build_command, check=True)\n+\n+        # Define the locustfile path\n+        locustfile_path = os.path.join(core_dir, 'bootstraps/locustfile_bootstrap.py')\n+        if module:\n+            locustfile_path = f\"{modules_dir}/{module}/tests/locustfile.py\"\n+\n+        # Run the Locust container\n+        up_command = [\n+            'docker', 'run', '-d', '-p', '8089:8089', '-v', f\"{volume_name}:/app\",\n+            '--name', 'locust_container', '--network', 'docker_uvlhub_network',\n+            'locust-image', '-f', locustfile_path\n+        ]\n+\n+        click.echo(f\"Docker Run command: {' '.join(up_command)}\")\n+        subprocess.run(up_command, check=True)\n+        click.echo(click.style(\"Locust is running at http://localhost:8089\", fg='green'))\n+\n+    def is_locust_running():\n+        \"\"\"Check if Locust is already running.\"\"\"\n+        for proc in psutil.process_iter(['pid', 'name']):\n+            if proc.info['name'] == 'locust':\n+                return True\n+        return False\n+\n+    def run_in_console(module):\n+\n+        if is_locust_running():\n+            click.echo(\"Locust is already running.\")\n+            return\n+\n+        locustfile_path = os.path.join(core_dir, 'bootstraps/locustfile_bootstrap.py')\n+        if module:\n+            locustfile_path = os.path.join(modules_dir, module, 'tests', 'locustfile.py')\n+        locust_command = ['locust', '-f', locustfile_path]\n+        click.echo(f\"Locust command: {' '.join(locust_command)}\")\n+        subprocess.Popen(locust_command, stdin=subprocess.PIPE, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)\n+        click.echo(click.style(\"Locust is running at http://localhost:8089\", fg='green'))\n+\n+    def run_local_locust(module):\n+        \"\"\"Run Locust in the local environment.\"\"\"\n+        click.echo(\"Starting Locust in local environment on port 8089...\")\n+        run_in_console(module)\n+\n+    def run_vagrant_locust(module):\n+        \"\"\"Run Locust in the Vagrant environment.\"\"\"\n+        click.echo(\"Starting Locust in Vagrant environment on port 8089...\")\n+        run_in_console(module)\n+\n+    # Validate module if provided\n+    if module:\n+        validate_module(module)\n+\n+    if working_dir == '/app/':\n+        client = docker.from_env()\n+\n+        try:\n+            web_container = client.containers.get('web_app_container')\n+            volume_name = next(\n+                (mount.get('Name') or mount.get('Source') for mount in web_container.attrs['Mounts']\n+                 if mount['Destination'] == '/app'), None\n+            )\n+\n+            if not volume_name:\n+                raise ValueError(\"No volume or bind mount found mounted on /app\")\n+\n+            run_docker_locust(volume_name, module)\n+\n+        except docker.errors.NotFound:\n+            click.echo(click.style(\"Web container not found.\", fg='red'))\n+        except Exception as e:\n+            click.echo(click.style(f\"An error occurred: {str(e)}\", fg='red'))\n+\n+    elif working_dir == '':\n+        run_local_locust(module)\n+\n+    elif working_dir == '/vagrant/':\n+        run_vagrant_locust(module)\n+\n+    else:\n+        click.echo(click.style(f\"Unrecognized WORKING_DIR: {working_dir}\", fg='red'))\n+\n+\n+@click.command('locust:stop', help=\"Stops the Locust container if it is running.\")\n+def stop():\n+    working_dir = os.getenv('WORKING_DIR', '')\n+\n+    def stop_local_locust():\n+        \"\"\"Stop Locust process in the local environment.\"\"\"\n+        click.echo(\"Stopping Locust in local environment...\")\n+        for proc in psutil.process_iter(['pid', 'name']):\n+            if proc.info['name'] == 'locust':\n+                click.echo(f\"Stopping Locust process with PID {proc.info['pid']}...\")\n+                os.kill(proc.info['pid'], signal.SIGTERM)\n+\n+    def stop_docker_locust():\n+        click.echo(\"Stopping Locust container if it is running...\")\n+        stop_command = ['docker', 'stop', 'locust_container']\n+        rm_command = ['docker', 'rm', 'locust_container']\n+\n+        # Stop the Locust container if it is running\n+        subprocess.run(stop_command)\n+\n+        # Remove the Locust container\n+        subprocess.run(rm_command)\n+\n+    if working_dir == '/app/':\n+        stop_docker_locust()\n+\n+    elif working_dir == '' or working_dir == '/vagrant/':\n+        stop_local_locust()\n+\n+    else:\n+        click.echo(click.style(f\"Unrecognized WORKING_DIR: {working_dir}\", fg='red'))"
      },
      {
        "sha": "5dd163f603f20318214bdcb963c05fd0d403ebe6",
        "filename": "rosemary/commands/make_module.py",
        "status": "added",
        "additions": 103,
        "deletions": 0,
        "changes": 103,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fmake_module.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fmake_module.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fmake_module.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,103 @@\n+import stat\n+import click\n+from jinja2 import Environment, FileSystemLoader, select_autoescape\n+import os\n+\n+\n+def pascalcase(s):\n+    \"\"\"Converts string to PascalCase.\"\"\"\n+    return ''.join(word.capitalize() for word in s.split('_'))\n+\n+\n+def setup_jinja_env():\n+    \"\"\"Configures and returns a Jinja environment.\"\"\"\n+    env = Environment(\n+        loader=FileSystemLoader(searchpath=\"./rosemary/templates\"),\n+        autoescape=select_autoescape(['html', 'xml', 'j2'])\n+    )\n+    env.filters['pascalcase'] = pascalcase\n+    return env\n+\n+\n+def render_and_write_file(env, template_name, filename, context):\n+    \"\"\"Renders a template and writes it to a specified file.\"\"\"\n+    template = env.get_template(template_name)\n+    content = template.render(context) + \"\\n\"\n+    with open(filename, 'w') as f:\n+        f.write(content)\n+\n+\n+@click.command('make:module', help=\"Creates a new module with a given name.\")\n+@click.argument('name')\n+def make_module(name):\n+    modules_root_path = os.path.join(os.getenv('WORKING_DIR', ''), 'app/modules')\n+    module_path = f'{modules_root_path}/{name}'\n+\n+    if os.path.exists(module_path):\n+        click.echo(click.style(f\"The module '{name}' already exists.\", fg='red'))\n+        return\n+\n+    env = setup_jinja_env()\n+\n+    # Defines the directories to create.\n+    directories = {'templates'}\n+\n+    files_and_templates = {\n+        '__init__.py': 'module_init.py.j2',\n+        'routes.py': 'module_routes.py.j2',\n+        'models.py': 'module_models.py.j2',\n+        'repositories.py': 'module_repositories.py.j2',\n+        'services.py': 'module_services.py.j2',\n+        'forms.py': 'module_forms.py.j2',\n+        'seeders.py': 'module_seeders.py.j2',\n+        os.path.join('templates', name, 'index.html'): 'module_templates_index.html.j2',\n+        'assets/scripts.js': 'module_scripts.js.j2',\n+        'tests/test_unit.py': 'module_tests_test_unit.py.j2',\n+        'tests/locustfile.py': 'module_tests_locustfile.py.j2',\n+        'tests/test_selenium.py': 'module_tests_test_selenium.py.j2'\n+    }\n+\n+    # Create the necessary directories, explicitly excluding 'tests' from the creation of subfolders.\n+    for directory in directories:\n+        os.makedirs(os.path.join(module_path, directory, name), exist_ok=True)\n+\n+    # Create 'tests' directory directly under module_path, without additional subfolders.\n+    os.makedirs(os.path.join(module_path, 'tests'), exist_ok=True)\n+\n+    # Create 'assets' directory directly under module_path, without additional subfolders.\n+    os.makedirs(os.path.join(module_path, 'assets'), exist_ok=True)\n+\n+    # Create empty __init__.py file directly in the 'tests' directory.\n+    open(os.path.join(module_path, 'tests', '__init__.py'), 'a').close()\n+\n+    # Render and write files, including 'test_unit.py' directly in 'tests'.\n+    for filename, template_name in files_and_templates.items():\n+        if template_name:  # Check if there is a defined template.\n+            render_and_write_file(env, template_name, os.path.join(module_path, filename), {'module_name': name})\n+        else:\n+            open(os.path.join(module_path, filename), 'a').close()  # Create empty file if there is no template.\n+\n+    click.echo(click.style(f\"Module '{name}' created successfully.\", fg='green'))\n+\n+    # Change the owner of the main folder of the module\n+    os.chown(module_path, 1000, 1000)\n+\n+    # Change permissions to drwxrwxr-x (chmod 775)\n+    os.chmod(module_path, stat.S_IRWXU | stat.S_IRWXG | stat.S_IROTH | stat.S_IXOTH)\n+\n+    # Change the owner of all created files and directories to UID 1000 and GID 1000\n+    uid = 1000\n+    gid = 1000\n+\n+    for root, dirs, files in os.walk(module_path):\n+        for dir_ in dirs:\n+            dir_path = os.path.join(root, dir_)\n+            os.chown(dir_path, uid, gid)\n+            os.chmod(dir_path, stat.S_IRWXU | stat.S_IRWXG | stat.S_IROTH | stat.S_IXOTH)\n+\n+        for file_ in files:\n+            file_path = os.path.join(root, file_)\n+            os.chown(file_path, uid, gid)\n+            os.chmod(file_path, stat.S_IRUSR | stat.S_IWUSR | stat.S_IRGRP | stat.S_IWGRP | stat.S_IROTH)\n+\n+    click.echo(click.style(f\"Module '{name}' permissions changed successfully.\", fg='green'))"
      },
      {
        "sha": "2a7b41aded41928379067df074c22316d0cc9dd2",
        "filename": "rosemary/commands/module_list.py",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fmodule_list.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fmodule_list.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fmodule_list.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,21 @@\n+import click\n+from flask.cli import with_appcontext\n+\n+from core.managers.module_manager import ModuleManager\n+\n+\n+@click.command('module:list', help=\"Lists all modules and those ignored by .moduleignore.\")\n+@with_appcontext\n+def module_list():\n+    app = click.get_current_context().obj\n+    manager = ModuleManager(app)\n+\n+    loaded_modules, ignored_modules = manager.get_modules()\n+\n+    click.echo(click.style(f\"Loaded Modules ({len(loaded_modules)}):\", fg='green'))\n+    for module in loaded_modules:\n+        click.echo(f\"- {module}\")\n+\n+    click.echo(click.style(f\"\\nIgnored Modules ({len(ignored_modules)}):\", fg='bright_yellow'))\n+    for module in ignored_modules:\n+        click.echo(click.style(f\"- {module}\", fg='bright_yellow'))"
      },
      {
        "sha": "59ed8e76d469eda45e0fa5a44cc1a3cd16555717",
        "filename": "rosemary/commands/route_list.py",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Froute_list.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Froute_list.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Froute_list.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,51 @@\n+import os\n+import click\n+from flask import current_app\n+from flask.cli import with_appcontext\n+from collections import defaultdict\n+\n+\n+@click.command('route:list', help=\"Lists all routes of the Flask application.\")\n+@click.argument('module_name', required=False)\n+@click.option('--group', is_flag=True, help=\"Group routes by module when no specific module is provided.\")\n+@with_appcontext\n+def route_list(module_name, group):\n+    base_path = os.path.join(os.getenv('WORKING_DIR', ''), 'app/modules')\n+\n+    # Checks if a module was specified and if it exists\n+    if module_name:\n+        module_path = os.path.join(base_path, module_name)\n+        if not os.path.exists(module_path):\n+            click.echo(click.style(f\"Module '{module_name}' does not exist.\", fg='red'))\n+            return\n+        click.echo(f\"Listing routes for the '{module_name}' module...\")\n+        # Path filtering for a specific module\n+        filtered_rules = [\n+            rule for rule in current_app.url_map.iter_rules()\n+            if rule.endpoint.startswith(f\"{module_name}.\")\n+        ]\n+        print_route_table(filtered_rules)\n+    else:\n+        if group:  # Group routes by module\n+            click.echo(\"Listing routes for all modules, grouped by module...\")\n+            rules = sorted(current_app.url_map.iter_rules(), key=lambda rule: rule.endpoint)\n+            grouped_rules = defaultdict(list)\n+            for rule in rules:\n+                module = rule.endpoint.split('.')[0]\n+                grouped_rules[module].append(rule)\n+\n+            for module, rules in sorted(grouped_rules.items()):\n+                click.echo(click.style(f\"\\nModule: {module}\", fg='yellow'))\n+                print_route_table(rules)\n+        else:  # Lists all routes without grouping\n+            click.echo(\"Listing routes for all modules...\")\n+            rules = sorted(current_app.url_map.iter_rules(), key=lambda rule: rule.endpoint)\n+            print_route_table(rules)\n+\n+\n+def print_route_table(rules):\n+    click.echo(f\"{'Endpoint':<50} {'Methods':<30} {'Route':<100}\")\n+    click.echo('-' * 180)\n+    for rule in rules:\n+        methods = ', '.join(sorted(rule.methods.difference({'HEAD', 'OPTIONS'})))\n+        click.echo(f\"{rule.endpoint:<50} {methods:<30} {rule.rule:<100}\")"
      },
      {
        "sha": "4a96c8998b510d0699370bdfa9edc02e6d0610d4",
        "filename": "rosemary/commands/selenium.py",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fselenium.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fselenium.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fselenium.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,67 @@\n+import os\n+import subprocess\n+import click\n+\n+\n+@click.command('selenium', help=\"Executes Selenium tests based on the environment.\")\n+@click.argument('module', required=False)\n+def selenium(module):\n+    # Absolute paths\n+    working_dir = os.getenv('WORKING_DIR', '')\n+    modules_dir = os.path.join(working_dir, 'app/modules')\n+\n+    def validate_module(module):\n+        \"\"\"Check if the module exists.\"\"\"\n+        if module:\n+            module_path = os.path.join(modules_dir, module)\n+            if not os.path.exists(module_path):\n+                raise click.UsageError(f\"Module '{module}' does not exist.\")\n+            selenium_test_path = os.path.join(module_path, 'tests', 'test_selenium.py')\n+            if not os.path.exists(selenium_test_path):\n+                raise click.UsageError(\n+                    f\"Selenium test for module '{module}' does not exist at path \"\n+                    f\"'{selenium_test_path}'.\"\n+                )\n+\n+    def run_selenium_tests_in_local(module):\n+        \"\"\"Run the Selenium tests.\"\"\"\n+        if module:\n+            selenium_test_path = os.path.join(modules_dir, module, 'tests', 'test_selenium.py')\n+            test_command = ['python', selenium_test_path]\n+        else:\n+            selenium_test_paths = []\n+            for module in os.listdir(modules_dir):\n+                tests_dir = os.path.join(modules_dir, module, 'tests')\n+                selenium_test_path = os.path.join(tests_dir, 'test_selenium.py')\n+                if os.path.exists(selenium_test_path):\n+                    selenium_test_paths.append(selenium_test_path)\n+            test_command = ['python'] + selenium_test_paths\n+\n+        click.echo(f\"Running Selenium tests with command: {' '.join(test_command)}\")\n+        subprocess.run(test_command, check=True)\n+\n+    # Validate module if provided\n+    if module:\n+        validate_module(module)\n+\n+    if working_dir == '/app/':\n+\n+        click.echo(click.style(\n+            \"Currently it is not possible to run this \"\n+            \"command from a Docker environment, do you want to implement it yourself? ^^\",\n+            fg='red'\n+        ))\n+\n+    elif working_dir == '':\n+        run_selenium_tests_in_local(module)\n+\n+    elif working_dir == '/vagrant/':\n+\n+        click.echo(click.style(\n+            \"Currently it is not possible to run this \"\n+            \"command from a Vagrant environment, do you want to implement it yourself? ^^\",\n+            fg='red'\n+        ))\n+\n+    else:\n+        click.echo(click.style(f\"Unrecognized WORKING_DIR: {working_dir}\", fg='red'))"
      },
      {
        "sha": "8edaff3dc1abc037963522e322322cd3864e8517",
        "filename": "rosemary/commands/test.py",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Ftest.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Ftest.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Ftest.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,34 @@\n+import click\n+import subprocess\n+import os\n+\n+\n+@click.command('test', help=\"Runs pytest on the blueprints directory or a specific module.\")\n+@click.argument('module_name', required=False)\n+@click.option('-k', 'keyword', help=\"Only run tests that match the given substring expression.\")\n+def test(module_name, keyword):\n+    base_path = os.path.join(os.getenv('WORKING_DIR', ''), 'app/modules')\n+    test_path = base_path\n+\n+    if module_name:\n+        test_path = os.path.join(base_path, module_name)\n+        if not os.path.exists(test_path):\n+            click.echo(click.style(f\"Module '{module_name}' does not exist.\", fg='red'))\n+            return\n+        click.echo(f\"Running tests for the '{module_name}' module...\")\n+    else:\n+        click.echo(\"Running tests for all modules...\")\n+\n+    pytest_cmd = ['pytest', '-v', '--ignore-glob=*selenium*', test_path]\n+\n+    if keyword:\n+        pytest_cmd.extend(['-k', keyword])\n+\n+    try:\n+        subprocess.run(pytest_cmd, check=True)\n+    except subprocess.CalledProcessError as e:\n+        click.echo(click.style(f\"Error running tests: {e}\", fg='red'))\n+\n+\n+if __name__ == '__main__':\n+    test()"
      },
      {
        "sha": "57de3eb344a8e764edde83f08b2aa983f677c666",
        "filename": "rosemary/commands/update.py",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fupdate.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Fcommands%2Fupdate.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Fcommands%2Fupdate.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,38 @@\n+import click\n+import os\n+import subprocess\n+\n+\n+@click.command()\n+def update():\n+    \"\"\"This command updates all packages based on the requirements.txt, excluding editable installations, and updates\n+    the file with concrete versions.\"\"\"\n+    requirements_path = os.path.join(os.getenv('WORKING_DIR', ''), 'requirements.txt')\n+    try:\n+        # Update pip first\n+        subprocess.check_call(['pip', 'install', '--upgrade', 'pip'])\n+\n+        # Read current requirements, excluding -e packages\n+        with open(requirements_path, 'r') as f:\n+            requirements = [line.strip() for line in f if not line.startswith(\"-e\")]\n+\n+        # Update each package\n+        for requirement in requirements:\n+            package_name = requirement.split('==')[0]\n+            if package_name:  # Ensure it's not an empty package name\n+                subprocess.check_call(['pip', 'install', '--upgrade', package_name])\n+\n+        # Generate a new requirements.txt, excluding editable installations\n+        freeze_output = subprocess.check_output(['pip', 'freeze']).decode('utf-8')\n+        with open(requirements_path, 'w') as f:\n+            for line in freeze_output.split('\\n'):\n+                if not line.startswith(\"-e\"):\n+                    f.write(line + '\\n')\n+\n+        click.echo(click.style('Update completed!', fg='green'))\n+    except subprocess.CalledProcessError as e:\n+        click.echo(click.style(f'Error during the update: {e}', fg='red'))\n+\n+\n+if __name__ == '__main__':\n+    update()"
      },
      {
        "sha": "31a1ee111855f499e5361e873c82b1c25f1e4d18",
        "filename": "rosemary/templates/module_forms.py.j2",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_forms.py.j2",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_forms.py.j2",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Ftemplates%2Fmodule_forms.py.j2?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,6 @@\n+from flask_wtf import FlaskForm\n+from wtforms import SubmitField\n+\n+\n+class {{ module_name | pascalcase }}Form(FlaskForm):\n+    submit = SubmitField('Save {{ module_name }}')"
      },
      {
        "sha": "348f751834339c787dd843954273c732ee005ebf",
        "filename": "rosemary/templates/module_init.py.j2",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_init.py.j2",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_init.py.j2",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Ftemplates%2Fmodule_init.py.j2?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+{{ module_name }}_bp = BaseBlueprint('{{ module_name }}', __name__, template_folder='templates')"
      },
      {
        "sha": "35add88f997ba273f73f905685e2dec5a87ef2bf",
        "filename": "rosemary/templates/module_models.py.j2",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_models.py.j2",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_models.py.j2",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Ftemplates%2Fmodule_models.py.j2?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,8 @@\n+from app import db\n+\n+\n+class {{ module_name | pascalcase }}(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+\n+    def __repr__(self):\n+        return f'{{ module_name | pascalcase }}<{self.id}>'"
      },
      {
        "sha": "8da6902cd6f570be142f0d0dd1c36fe2af30f247",
        "filename": "rosemary/templates/module_repositories.py.j2",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_repositories.py.j2",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_repositories.py.j2",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Ftemplates%2Fmodule_repositories.py.j2?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,7 @@\n+from app.modules.{{ module_name }}.models import {{ module_name | pascalcase }}\n+from core.repositories.BaseRepository import BaseRepository\n+\n+\n+class {{ module_name | pascalcase }}Repository(BaseRepository):\n+    def __init__(self):\n+        super().__init__({{ module_name | pascalcase }})"
      },
      {
        "sha": "13efd435b81154b7a23399026ef96a42dcf14e71",
        "filename": "rosemary/templates/module_routes.py.j2",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_routes.py.j2",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_routes.py.j2",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Ftemplates%2Fmodule_routes.py.j2?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,7 @@\n+from flask import render_template\n+from app.modules.{{ module_name }} import {{ module_name }}_bp\n+\n+\n+@{{ module_name }}_bp.route('/{{ module_name }}', methods=['GET'])\n+def index():\n+    return render_template('{{ module_name }}/index.html')\n\\ No newline at end of file"
      },
      {
        "sha": "bff1d72c41907fcac09b0c18c982dc29966034bf",
        "filename": "rosemary/templates/module_scripts.js.j2",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_scripts.js.j2",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_scripts.js.j2",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Ftemplates%2Fmodule_scripts.js.j2?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1 @@\n+console.log(\"Hi, I am a script loaded from {{ module_name }} module\");\n\\ No newline at end of file"
      },
      {
        "sha": "81cd8adadc4a5ba3fe11d2fe39cc0af0b408664d",
        "filename": "rosemary/templates/module_seeders.py.j2",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_seeders.py.j2",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_seeders.py.j2",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Ftemplates%2Fmodule_seeders.py.j2?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,12 @@\n+from core.seeders.BaseSeeder import BaseSeeder\n+\n+\n+class {{ module_name | pascalcase }}Seeder(BaseSeeder):\n+\n+    def run(self):\n+\n+        data = [\n+            # Create any Model object you want to make seed\n+        ]\n+\n+        self.seed(data)"
      },
      {
        "sha": "0f7ee2e1af2619e7f7a986efa0e68d14aa6edb64",
        "filename": "rosemary/templates/module_services.py.j2",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_services.py.j2",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_services.py.j2",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Ftemplates%2Fmodule_services.py.j2?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,7 @@\n+from app.modules.{{ module_name }}.repositories import {{ module_name | pascalcase }}Repository\n+from core.services.BaseService import BaseService\n+\n+\n+class {{ module_name | pascalcase }}Service(BaseService):\n+    def __init__(self):\n+        super().__init__({{ module_name | pascalcase }}Repository())\n\\ No newline at end of file"
      },
      {
        "sha": "62b58f61400a20ab709954db90a0db31592b22e9",
        "filename": "rosemary/templates/module_templates_index.html.j2",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_templates_index.html.j2",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_templates_index.html.j2",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Ftemplates%2Fmodule_templates_index.html.j2?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,11 @@\n+{% raw %}{%{% endraw %} extends \"base_template.html\" {% raw %}%}{% endraw %}\n+\n+{% raw %}{%{% endraw %} block title {% raw %}%}{% endraw %}View {{ module_name }}{% raw %}{%{% endraw %} endblock {% raw %}%}{% endraw %}\n+\n+{% raw %}{%{% endraw %} block content {% raw %}%}{% endraw %}\n+\n+{% raw %}{%{% endraw %} endblock {% raw %}%}{% endraw %}\n+\n+{% raw %}{%{% endraw %} block scripts {% raw %}%}{% endraw %}\n+    <script src=\"{% raw %}{{ url_for('{% endraw %}{{ module_name }}{% raw %}.scripts') }}{% endraw %}\"></script>\n+{% raw %}{%{% endraw %} endblock {% raw %}%}{% endraw %}\n\\ No newline at end of file"
      },
      {
        "sha": "c1803faf028a1d82076a11c105876fca29d37ee4",
        "filename": "rosemary/templates/module_tests_locustfile.py.j2",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_tests_locustfile.py.j2",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_tests_locustfile.py.j2",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Ftemplates%2Fmodule_tests_locustfile.py.j2?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,21 @@\n+from locust import HttpUser, TaskSet, task\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class {{ module_name | pascalcase }}Behavior(TaskSet):\n+    def on_start(self):\n+        self.index()\n+\n+    @task\n+    def index(self):\n+        response = self.client.get(\"/{{ module_name }}\")\n+\n+        if response.status_code != 200:\n+            print(f\"{{ module_name | pascalcase }} index failed: {response.status_code}\")\n+\n+\n+class {{ module_name | pascalcase }}User(HttpUser):\n+    tasks = [{{ module_name | pascalcase }}Behavior]\n+    min_wait = 5000\n+    max_wait = 9000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "3ff32d85a8e683c338bee9e7462f0cf84f7bfa3d",
        "filename": "rosemary/templates/module_tests_test_selenium.py.j2",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_tests_test_selenium.py.j2",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_tests_test_selenium.py.j2",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Ftemplates%2Fmodule_tests_test_selenium.py.j2?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,35 @@\n+from selenium.common.exceptions import NoSuchElementException\n+import time\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def test_{{ module_name }}_index():\n+\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the index page\n+        driver.get(f'{host}/{{ module_name }}')\n+\n+        # Wait a little while to make sure the page has loaded completely\n+        time.sleep(4)\n+\n+        try:\n+\n+            pass\n+\n+        except NoSuchElementException:\n+            raise AssertionError('Test failed!')\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_{{ module_name }}_index()"
      },
      {
        "sha": "950421eb7b4ee15f00b45f83730c55dd2dda9336",
        "filename": "rosemary/templates/module_tests_test_unit.py.j2",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_tests_test_unit.py.j2",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/rosemary%2Ftemplates%2Fmodule_tests_test_unit.py.j2",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/rosemary%2Ftemplates%2Fmodule_tests_test_unit.py.j2?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,24 @@\n+import pytest\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        # Add HERE new elements to the database that you want to exist in the test context.\n+        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_sample_assertion(test_client):\n+    \"\"\"\n+    Sample test to verify that the test framework and environment are working correctly.\n+    It does not communicate with the Flask application; it only performs a simple assertion to\n+    confirm that the tests in this module can be executed.\n+    \"\"\"\n+    greeting = \"Hello, World!\"\n+    assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\""
      },
      {
        "sha": "4cbcb0993a2c347c8f5afaa87b5b7671205d0e2a",
        "filename": "scripts/clean_docker.sh",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Fclean_docker.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Fclean_docker.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/scripts%2Fclean_docker.sh?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,48 @@\n+#!/bin/bash\n+\n+# ---------------------------------------------------------------------------\n+# Creative Commons CC BY 4.0 - David Romero - Diverso Lab\n+# ---------------------------------------------------------------------------\n+# This script is licensed under the Creative Commons Attribution 4.0 \n+# International License. You are free to share and adapt the material \n+# as long as appropriate credit is given, a link to the license is provided, \n+# and you indicate if changes were made.\n+#\n+# For more details, visit:\n+# https://creativecommons.org/licenses/by/4.0/\n+# ---------------------------------------------------------------------------\n+\n+\n+read -p \"Are you sure you want to stop all containers? (y/n) \" stop_containers\n+if [ \"$stop_containers\" = \"y\" ]; then\n+    echo \"Stopping all containers...\"\n+    docker stop $(docker ps -aq)\n+else\n+    echo \"Skipping stopping containers.\"\n+fi\n+\n+read -p \"Are you sure you want to remove all containers? (y/n) \" remove_containers\n+if [ \"$remove_containers\" = \"y\" ]; then\n+    echo \"Removing all containers...\"\n+    docker rm $(docker ps -aq)\n+else\n+    echo \"Skipping removing containers.\"\n+fi\n+\n+read -p \"Are you sure you want to remove all volumes? (y/n) \" remove_volumes\n+if [ \"$remove_volumes\" = \"y\" ]; then\n+    echo \"Removing all volumes...\"\n+    docker volume rm $(docker volume ls -q)\n+else\n+    echo \"Skipping removing volumes.\"\n+fi\n+\n+read -p \"Are you sure you want to remove all images? (y/n) \" remove_images\n+if [ \"$remove_images\" = \"y\" ]; then\n+    echo \"Removing all images...\"\n+    docker rmi $(docker images -q)\n+else\n+    echo \"Skipping removing images.\"\n+fi\n+\n+echo \"All actions have been completed.\""
      },
      {
        "sha": "2a8b21893ae75e971201db9cf11920b519514d68",
        "filename": "scripts/git_update.sh",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Fgit_update.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Fgit_update.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/scripts%2Fgit_update.sh?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,56 @@\n+#!/bin/bash\n+\n+# ---------------------------------------------------------------------------\n+# Creative Commons CC BY 4.0 - David Romero - Diverso Lab\n+# ---------------------------------------------------------------------------\n+# This script is licensed under the Creative Commons Attribution 4.0 \n+# International License. You are free to share and adapt the material \n+# as long as appropriate credit is given, a link to the license is provided, \n+# and you indicate if changes were made.\n+#\n+# For more details, visit:\n+# https://creativecommons.org/licenses/by/4.0/\n+# ---------------------------------------------------------------------------\n+\n+# Get the current remote URL\n+REMOTE_URL=$(git remote get-url origin) \n+\n+if [ -z \"$REMOTE_URL\" ]; then \n+  echo \"No remote URL found for 'origin'. Please configure the remote repository.\" \n+  exit 1 \n+fi \n+\n+echo \"Original remote URL: $REMOTE_URL\"\n+\n+# Check if the URL is SSH\n+if echo \"$REMOTE_URL\" | grep -q \"git@\"; then\n+\n+  # Convert SSH URL to HTTPS\n+  USER_HOST=$(echo \"$REMOTE_URL\" | cut -d'@' -f2 | cut -d':' -f1)\n+  REPO_PATH=$(echo \"$REMOTE_URL\" | cut -d':' -f2)\n+  HTTPS_URL=\"https://$USER_HOST/$REPO_PATH\"\n+  echo \"Converted SSH URL to HTTPS: $HTTPS_URL\"\n+\n+  # Set the new HTTPS URL\n+  git remote set-url origin \"$HTTPS_URL\"\n+\n+  # Verify the new remote URL\n+  NEW_REMOTE_URL=$(git remote get-url origin) \n+  echo \"New remote URL: $NEW_REMOTE_URL\"\n+\n+  # Pull from the main branch\n+  git pull origin main\n+  echo \"Pulled from main from: $NEW_REMOTE_URL\"\n+\n+  # Restore the original SSH URL\n+  git remote set-url origin \"$REMOTE_URL\"\n+\n+else\n+\n+  echo \"The URL is already HTTPS\"\n+\n+  # Pull from the main branch if the URL is already HTTPS\n+  git pull origin main\n+  echo \"Pulled from main from: $REMOTE_URL\"\n+\n+fi"
      },
      {
        "sha": "8b662eeba651ce8aff5e6fdc89ac03dc6bdbbf13",
        "filename": "scripts/init-testing-db.sh",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Finit-testing-db.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Finit-testing-db.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/scripts%2Finit-testing-db.sh?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,23 @@\n+#!/bin/bash\n+\n+# ---------------------------------------------------------------------------\n+# Creative Commons CC BY 4.0 - David Romero - Diverso Lab\n+# ---------------------------------------------------------------------------\n+# This script is licensed under the Creative Commons Attribution 4.0 \n+# International License. You are free to share and adapt the material \n+# as long as appropriate credit is given, a link to the license is provided, \n+# and you indicate if changes were made.\n+#\n+# For more details, visit:\n+# https://creativecommons.org/licenses/by/4.0/\n+# ---------------------------------------------------------------------------\n+\n+\n+echo \"(testing) Hostname: $MARIADB_HOSTNAME, Port: $MARIADB_PORT, User: $MARIADB_USER, Test DB: $MARIADB_TEST_DATABASE\"\n+\n+echo \"MariaDB is up - creating test database if it doesn't exist\"\n+\n+# Create the test database if it does not exist\n+mariadb -h \"$MARIADB_HOSTNAME\" -P \"$MARIADB_PORT\" -u root -p\"$MARIADB_ROOT_PASSWORD\" -e \"CREATE DATABASE IF NOT EXISTS \\`${MARIADB_TEST_DATABASE}\\` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci; GRANT ALL PRIVILEGES ON \\`${MARIADB_TEST_DATABASE}\\`.* TO '$MARIADB_USER'@'%'; FLUSH PRIVILEGES;\"\n+\n+echo \"Test database created and privileges granted\""
      },
      {
        "sha": "6c2c4d198be24e0249dca12a49fc642450037f65",
        "filename": "scripts/restart_container.sh",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Frestart_container.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Frestart_container.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/scripts%2Frestart_container.sh?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,17 @@\n+#!/bin/bash\n+\n+# ---------------------------------------------------------------------------\n+# Creative Commons CC BY 4.0 - David Romero - Diverso Lab\n+# ---------------------------------------------------------------------------\n+# This script is licensed under the Creative Commons Attribution 4.0 \n+# International License. You are free to share and adapt the material \n+# as long as appropriate credit is given, a link to the license is provided, \n+# and you indicate if changes were made.\n+#\n+# For more details, visit:\n+# https://creativecommons.org/licenses/by/4.0/\n+# ---------------------------------------------------------------------------\n+\n+sleep 5\n+\n+docker restart \"$1\""
      },
      {
        "sha": "d24a7b7c20f27ffc8152b8d4c470ed80179ae256",
        "filename": "scripts/ssl_renew.sh",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Fssl_renew.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Fssl_renew.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/scripts%2Fssl_renew.sh?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,20 @@\n+#!/bin/bash\n+\n+# ---------------------------------------------------------------------------\n+# Creative Commons CC BY 4.0 - David Romero - Diverso Lab\n+# ---------------------------------------------------------------------------\n+# This script is licensed under the Creative Commons Attribution 4.0 \n+# International License. You are free to share and adapt the material \n+# as long as appropriate credit is given, a link to the license is provided, \n+# and you indicate if changes were made.\n+#\n+# For more details, visit:\n+# https://creativecommons.org/licenses/by/4.0/\n+# ---------------------------------------------------------------------------\n+\n+\n+cd .. # go to parent folder\n+\n+cd docker # go to docker folder\n+\n+docker compose -f docker-compose.prod.ssl.yml run certbot renew --webroot --webroot-path=/var/www"
      },
      {
        "sha": "6d39a6aae1aee29e730a322a43e9bd926f1f9100",
        "filename": "scripts/ssl_setup.sh",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Fssl_setup.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Fssl_setup.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/scripts%2Fssl_setup.sh?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,59 @@\n+#!/bin/bash\n+\n+# ---------------------------------------------------------------------------\n+# Creative Commons CC BY 4.0 - David Romero - Diverso Lab\n+# ---------------------------------------------------------------------------\n+# This script is licensed under the Creative Commons Attribution 4.0 \n+# International License. You are free to share and adapt the material \n+# as long as appropriate credit is given, a link to the license is provided, \n+# and you indicate if changes were made.\n+#\n+# For more details, visit:\n+# https://creativecommons.org/licenses/by/4.0/\n+# ---------------------------------------------------------------------------\n+\n+\n+while true; do\n+    echo \"Enter your domain (including 'www' and the extension, e.g., www.exampledomain.com):\"\n+    read domain\n+\n+    echo \"Enter your email: \"\n+    read email\n+\n+    echo \"Configured with the domain $domain\"\n+    echo \"Configured with the email $email\"\n+    echo \"\"\n+    echo \"Are you sure the entered information is correct? [y/n]\"\n+    read confirm\n+\n+    if [ \"$confirm\" = \"y\" ] || [ \"$confirm\" = \"Y\" ]; then\n+        break\n+    else\n+        echo \"Please re-enter the information.\"\n+        echo \"\"\n+    fi\n+done\n+\n+cd .. # go to parent folder\n+\n+cd docker # go to docker folder\n+\n+# Create a new configuration file from the template\n+cp ./nginx/nginx.prod.no-ssl.conf.template ./nginx/nginx.prod.ssl.conf\n+sed -i \"s/{{domain}}/$domain/g\" ./nginx/nginx.prod.ssl.conf\n+\n+# Run Nginx container without SSL to obtain certificates\n+docker compose -f docker-compose.prod.ssl.yml up -d nginx\n+\n+# Generate the certificate with Certbot\n+docker compose -f docker-compose.prod.ssl.yml run certbot certonly --webroot --webroot-path=/var/www -d $domain --email $email --agree-tos --no-eff-email --force-renewal\n+\n+# Create a new configuration file from the SSL template\n+cp ./nginx/nginx.prod.ssl.conf.template ./nginx/nginx.prod.ssl.conf\n+sed -i \"s/{{domain}}/$domain/g\" ./nginx/nginx.prod.ssl.conf\n+\n+# Restart Nginx with SSL configuration\n+docker compose -f docker-compose.prod.ssl.yml down\n+docker compose -f docker-compose.prod.ssl.yml up -d --build\n+\n+cd .. # go to parent folder"
      },
      {
        "sha": "4ac35017ecb7d7c441c66ce594e79d703636fb53",
        "filename": "scripts/wait-for-db.sh",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Fwait-for-db.sh",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/scripts%2Fwait-for-db.sh",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/scripts%2Fwait-for-db.sh?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,24 @@\n+#!/bin/bash\n+\n+# ---------------------------------------------------------------------------\n+# Creative Commons CC BY 4.0 - David Romero - Diverso Lab\n+# ---------------------------------------------------------------------------\n+# This script is licensed under the Creative Commons Attribution 4.0 \n+# International License. You are free to share and adapt the material \n+# as long as appropriate credit is given, a link to the license is provided, \n+# and you indicate if changes were made.\n+#\n+# For more details, visit:\n+# https://creativecommons.org/licenses/by/4.0/\n+# ---------------------------------------------------------------------------\n+\n+echo \"Starting wait-for-db.sh\"\n+echo \"Hostname: $MARIADB_HOSTNAME, Port: $MARIADB_PORT, User: $MARIADB_USER\"\n+\n+while ! mariadb -h \"$MARIADB_HOSTNAME\" -P \"$MARIADB_PORT\" -u\"$MARIADB_USER\" -p\"$MARIADB_PASSWORD\" -e 'SELECT 1'; do\n+  echo \"MariaDB is unavailable - sleeping\"\n+  sleep 1\n+done\n+\n+echo \"MariaDB is up - executing command\"\n+exec \"$@\""
      },
      {
        "sha": "afd5b9c9f14ad2a1342fe47b378a7469ac9d9bf7",
        "filename": "setup.py",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/setup.py",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/setup.py",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/setup.py?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,19 @@\n+from setuptools import setup, find_packages\n+\n+setup(\n+    name='rosemary',\n+    version='0.1.0',\n+    packages=find_packages(),\n+    install_requires=[\n+        'click',\n+        'python-dotenv',\n+    ],\n+    author='David Romero',\n+    author_email='drorganvidez@us.es',\n+    description=\"Rosemary is a CLI to be able to work on UVLHub development more easily.\",\n+    entry_points={\n+        'console_scripts': [\n+            'rosemary=rosemary.cli:cli'\n+        ],\n+    },\n+)"
      },
      {
        "sha": "020930e20355d6690a60a08ce2b3963aba996625",
        "filename": "vagrant/00_main.yml",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F00_main.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F00_main.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/vagrant%2F00_main.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,7 @@\n+---\n+- import_playbook: 01_setup.yml\n+- import_playbook: 02_install_mariadb.yml\n+- import_playbook: 03_mariadb_scripts.yml\n+- import_playbook: 04_install_dependencies.yml\n+- import_playbook: 05_run_app.yml\n+- import_playbook: 06_utilities.yml"
      },
      {
        "sha": "486de68a50623512cc74d4ad74347f1d170b3176",
        "filename": "vagrant/01_setup.yml",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F01_setup.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F01_setup.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/vagrant%2F01_setup.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,8 @@\n+---\n+- hosts: all\n+  become: true\n+\n+  tasks:\n+    - name: Update the system\n+      apt:\n+        update_cache: yes"
      },
      {
        "sha": "0459aaaba479b52676c7dc7d8461877c748ceaa2",
        "filename": "vagrant/02_install_mariadb.yml",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F02_install_mariadb.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F02_install_mariadb.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/vagrant%2F02_install_mariadb.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,48 @@\n+---\n+- hosts: all\n+  become: true\n+\n+  tasks:\n+    - name: Install MariaDB Server\n+      apt:\n+        name:\n+          - mariadb-server\n+          - python3-pymysql\n+        update_cache: yes\n+      become: yes\n+\n+    - name: Start and enable MariaDB service\n+      systemd:\n+        name: mariadb\n+        state: started\n+        enabled: yes\n+\n+    - name: Change default MariaDB password\n+      become: yes\n+      mysql_user:\n+        login_unix_socket: /run/mysqld/mysqld.sock\n+        login_user: 'root'\n+        login_password: ''\n+        name: 'root'\n+        password: '{{ mariadb_root_password }}'\n+        state: present\n+\n+\n+    - name: Create SQL script\n+      copy:\n+        content: |\n+          CREATE DATABASE IF NOT EXISTS {{ mariadb_database }};\n+          CREATE DATABASE IF NOT EXISTS {{ mariadb_test_database }};\n+          CREATE USER IF NOT EXISTS '{{ mariadb_user }}'@'localhost' IDENTIFIED BY '{{ mariadb_password }}';\n+          GRANT ALL PRIVILEGES ON {{ mariadb_database }}.* TO '{{ mariadb_user }}'@'localhost';\n+          GRANT ALL PRIVILEGES ON {{ mariadb_test_database }}.* TO '{{ mariadb_user }}'@'localhost';\n+          FLUSH PRIVILEGES;\n+        dest: /tmp/setup.sql\n+\n+    - name: Import SQL script\n+      command: bash -c \"mysql -u root -p'{{ mariadb_root_password }}' < /tmp/setup.sql\"\n+\n+    - name: Remove temporary SQL script\n+      file:\n+        path: /tmp/setup.sql\n+        state: absent"
      },
      {
        "sha": "a06250ab095dbecb1ff33ac738271480dc2fb9a1",
        "filename": "vagrant/03_mariadb_scripts.yml",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F03_mariadb_scripts.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F03_mariadb_scripts.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/vagrant%2F03_mariadb_scripts.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,46 @@\n+---\n+- hosts: all\n+  become: true\n+\n+  vars:\n+    common_environment:\n+      FLASK_APP_NAME: \"{{ flask_app_name }}\"\n+      FLASK_ENV: \"{{ flask_env }}\"\n+      DOMAIN: \"{{ domain }}\"\n+      MARIADB_HOSTNAME: \"{{ mariadb_hostname }}\"\n+      MARIADB_PORT: \"{{ mariadb_port }}\"\n+      MARIADB_DATABASE: \"{{ mariadb_database }}\"\n+      MARIADB_TEST_DATABASE: \"{{ mariadb_test_database }}\"\n+      MARIADB_USER: \"{{ mariadb_user }}\"\n+      MARIADB_PASSWORD: \"{{ mariadb_password }}\"\n+      MARIADB_ROOT_PASSWORD: \"{{ mariadb_root_password }}\"\n+      WORKING_DIR: \"{{ working_dir }}\"\n+\n+  tasks:\n+    - name: Set permissions for wait-for-db.sh\n+      file:\n+        path: \"{{ working_dir }}scripts/wait-for-db.sh\"\n+        mode: '0755'\n+        state: file\n+      environment: \"{{ common_environment }}\"\n+\n+    - name: Set permissions for init-testing-db.sh\n+      file:\n+        path: \"{{ working_dir }}scripts/init-testing-db.sh\"\n+        mode: '0755'\n+        state: file\n+      environment: \"{{ common_environment }}\"\n+\n+    - name: Wait for MariaDB to be ready\n+      shell: |\n+        {{ working_dir }}scripts/wait-for-db.sh\n+      args:\n+        executable: /bin/bash\n+      environment: \"{{ common_environment }}\"\n+\n+    - name: Initialize the database\n+      shell: |\n+        {{ working_dir }}scripts/init-testing-db.sh\n+      args:\n+        executable: /bin/bash\n+      environment: \"{{ common_environment }}\""
      },
      {
        "sha": "f02068c9cf35006180d2e982b5742487143d45b0",
        "filename": "vagrant/04_install_dependencies.yml",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F04_install_dependencies.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F04_install_dependencies.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/vagrant%2F04_install_dependencies.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,52 @@\n+- hosts: all\n+  become: true\n+\n+  tasks:\n+    - name: Add deadsnakes PPA (for installing Python 3.12)\n+      apt_repository:\n+        repo: ppa:deadsnakes/ppa\n+        state: present\n+        update_cache: yes\n+\n+    - name: Update the system and install Python 3.12 and dependencies\n+      apt:\n+        name:\n+          - python3.12\n+          - python3.12-venv\n+          - python3.12-distutils\n+          - mariadb-client\n+        state: present\n+\n+    - name: Install pip and setuptools for Python 3.12 from source\n+      shell: |\n+        wget https://bootstrap.pypa.io/get-pip.py\n+        python3.12 get-pip.py\n+      args:\n+        executable: /bin/bash\n+\n+    - name: Upgrade pip and setuptools for Python 3.12\n+      shell: |\n+        python3.12 -m pip install --upgrade pip setuptools\n+      args:\n+        executable: /bin/bash\n+\n+    - name: Remove existing virtual environment if it exists\n+      file:\n+        path: \"{{ working_dir }}venv\"\n+        state: absent\n+        force: yes\n+\n+    - name: Set up the Python 3.12 virtual environment\n+      command: python3.12 -m venv {{ working_dir }}venv\n+      args:\n+        creates: \"{{ working_dir }}venv/bin/activate\"\n+\n+    - name: Activate the virtual environment and install dependencies\n+      shell: |\n+        source {{ working_dir }}venv/bin/activate\n+        pip install --upgrade pip\n+        cd {{ working_dir }}\n+        pip install -r requirements.txt\n+        pip install -e ./\n+      args:\n+        executable: /bin/bash"
      },
      {
        "sha": "51346f1ee4bbf57ddba044ecdd91dda4e59ff1da",
        "filename": "vagrant/05_run_app.yml",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F05_run_app.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F05_run_app.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/vagrant%2F05_run_app.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,46 @@\n+---\n+- hosts: all\n+  become: true\n+\n+  vars:\n+    common_environment:\n+      FLASK_APP_NAME: \"{{ flask_app_name }}\"\n+      FLASK_ENV: \"{{ flask_env }}\"\n+      DOMAIN: \"{{ domain }}\"\n+      MARIADB_HOSTNAME: \"{{ mariadb_hostname }}\"\n+      MARIADB_PORT: \"{{ mariadb_port }}\"\n+      MARIADB_DATABASE: \"{{ mariadb_database }}\"\n+      MARIADB_TEST_DATABASE: \"{{ mariadb_test_database }}\"\n+      MARIADB_USER: \"{{ mariadb_user }}\"\n+      MARIADB_PASSWORD: \"{{ mariadb_password }}\"\n+      MARIADB_ROOT_PASSWORD: \"{{ mariadb_root_password }}\"\n+      WORKING_DIR: \"{{ working_dir }}\"\n+\n+  tasks:\n+\n+    - name: Add webhook to .moduleignore\n+      shell: echo \"webhook\" > {{ working_dir }}.moduleignore\n+      args:\n+        executable: /bin/bash\n+      environment: \"{{ common_environment }}\"\n+\n+    - name: Set database with Rosemary\n+      shell: |\n+        source {{ working_dir }}venv/bin/activate\n+        cd {{ working_dir }}\n+        flask db upgrade\n+        rosemary db:seed -y --reset\n+      args:\n+        executable: /bin/bash\n+      environment: \"{{ common_environment }}\"\n+\n+    - name: Run Flask application\n+      shell: |\n+        source {{ working_dir }}venv/bin/activate\n+        cd {{ working_dir }}\n+        nohup flask run --host=0.0.0.0 --port=5000 --reload --debug > app.log 2>&1 &\n+      args:\n+        executable: /bin/bash\n+      environment: \"{{ common_environment }}\"\n+      async: 1\n+      poll: 0"
      },
      {
        "sha": "c5cc9540c91c0a9482e67f10f08031042fe7bcbf",
        "filename": "vagrant/06_utilities.yml",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F06_utilities.yml",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2F06_utilities.yml",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/vagrant%2F06_utilities.yml?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,15 @@\n+---\n+- hosts: all\n+  become: true\n+\n+  tasks:\n+\n+    - name: Add commands to .bashrc\n+      lineinfile:\n+        path: /home/vagrant/.bashrc\n+        line: '{{ item }}'\n+        create: yes\n+      with_items:\n+        - 'source {{ working_dir }}venv/bin/activate'\n+        - 'cd {{ working_dir }}'\n+      when: ansible_user == 'vagrant'"
      },
      {
        "sha": "89e9fafd626a2ca10f414d6d58e51642f7bc0f7e",
        "filename": "vagrant/Vagrantfile",
        "status": "added",
        "additions": 88,
        "deletions": 0,
        "changes": 88,
        "blob_url": "https://github.com/flamenquin-hub-single/uvlhub/blob/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2FVagrantfile",
        "raw_url": "https://github.com/flamenquin-hub-single/uvlhub/raw/f4897d68fac414147687cc5226c0257e501fa0d7/vagrant%2FVagrantfile",
        "contents_url": "https://api.github.com/repos/flamenquin-hub-single/uvlhub/contents/vagrant%2FVagrantfile?ref=f4897d68fac414147687cc5226c0257e501fa0d7",
        "patch": "@@ -0,0 +1,88 @@\n+# -*- mode: ruby -*-\n+# vi: set ft=ruby :\n+\n+require 'pathname'\n+require 'fileutils'\n+\n+# Method to load environment variables from an .env file and return them as a hash\n+def load_env(file)\n+  env_vars = {}\n+  if File.exist?(file)\n+    File.readlines(file).each do |line|\n+      key, value = line.strip.split('=', 2)\n+      if key && value\n+        ENV[key] = value\n+        env_vars[key] = value\n+      end\n+    end\n+  else\n+    raise \"Env file not found: #{file}\"\n+  end\n+  env_vars\n+end\n+\n+# Load .env file from the top level and get the loaded variables\n+env_file_path = File.expand_path(\"../../.env\", __FILE__)\n+puts \"Loading .env file from: #{env_file_path}\"\n+loaded_env_vars = load_env(env_file_path)\n+\n+# Print only the variables that were loaded from the .env file\n+loaded_env_vars.each do |key, value|\n+  puts \"#{key}: #{value}\"\n+end\n+\n+\n+Vagrant.configure(\"2\") do |config|\n+\n+  # Choose a base box\n+  config.vm.box = \"ubuntu/jammy64\"\n+\n+  # Network configuration\n+  config.vm.network \"forwarded_port\", guest: 5000, host: 5000\n+  config.vm.network \"forwarded_port\", guest: 8089, host: 8089\n+\n+  # Synced folders\n+  config.vm.synced_folder \"../\", \"/vagrant\"\n+\n+  # Use Ansible for provisioning\n+  config.vm.provision \"ansible\" do |ansible|\n+    ansible.playbook = \"00_main.yml\"\n+    ansible.extra_vars = {\n+      flask_app_name: ENV['FLASK_APP_NAME'],\n+      flask_env: ENV['FLASK_ENV'],\n+      domain: ENV['DOMAIN'],\n+      mariadb_hostname: ENV['MARIADB_HOSTNAME'],\n+      mariadb_port: ENV['MARIADB_PORT'],\n+      mariadb_database: ENV['MARIADB_DATABASE'],\n+      mariadb_test_database: ENV['MARIADB_TEST_DATABASE'],\n+      mariadb_user: ENV['MARIADB_USER'],\n+      mariadb_password: ENV['MARIADB_PASSWORD'],\n+      mariadb_root_password: ENV['MARIADB_ROOT_PASSWORD'],\n+      working_dir: ENV['WORKING_DIR']\n+    }\n+  end\n+\n+  # Load environment variables on vagrant ssh\n+  config.vm.provision \"shell\", inline: <<-SHELL\n+    ENV_FILE=\"/vagrant/.env\"\n+    if [ -f $ENV_FILE ]; then\n+      export $(cat $ENV_FILE | xargs)\n+      while IFS= read -r line; do\n+        echo \"export $line\" >> /etc/profile.d/vagrant_env.sh\n+      done < $ENV_FILE\n+    else\n+      echo \"Env file not found: $ENV_FILE\"\n+      exit 1\n+    fi\n+  SHELL\n+\n+  config.vm.provision \"shell\", run: \"always\", inline: <<-SHELL\n+    echo 'source /etc/profile.d/vagrant_env.sh' >> /home/vagrant/.bashrc\n+  SHELL\n+\n+  # Provider configuration\n+  config.vm.provider \"virtualbox\" do |vb|\n+    vb.memory = \"2048\"\n+    vb.cpus = 4\n+  end\n+end"
      }
    ]
  }
]