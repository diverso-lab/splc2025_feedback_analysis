[
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/146",
    "id": 2242723616,
    "node_id": "PR_kwDONB39G86FrT8g",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/146",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/146.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/146.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/146",
    "number": 146,
    "state": "closed",
    "locked": false,
    "title": "Develop",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-18T17:04:23Z",
    "updated_at": "2024-12-18T17:05:46Z",
    "closed_at": "2024-12-18T17:05:46Z",
    "merged_at": "2024-12-18T17:05:46Z",
    "merge_commit_sha": "be133424811b384e0d471c6a91ce1774d6da41bf",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/146/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/146/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/146/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/a22b0a54c521314eb74559aed149bf77bc62e49a",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "a22b0a54c521314eb74559aed149bf77bc62e49a",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "b35b238a54fca4e3d41c557b116a9906a73b4097",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/146"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/146"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/146"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/146/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/146/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/146/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/a22b0a54c521314eb74559aed149bf77bc62e49a"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "45eff2c76d5bcb4c5971dd0f8d956bfd087cc8eb",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a22b0a54c521314eb74559aed149bf77bc62e49a/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a22b0a54c521314eb74559aed149bf77bc62e49a/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=a22b0a54c521314eb74559aed149bf77bc62e49a",
        "patch": "@@ -110,7 +110,7 @@ <h3 class=\"h3 mb-3\">\n                             </div>\n                         </div>\n                         \n-                        <p style=\"margin-bottom: 0.2rem;\">Filter number of uvl models:</p>\n+                        <p style=\"margin-bottom: 0.2rem;\">Filter by number of uvl models:</p>\n \n                         <div class=\"col-lg-6\">\n                             <div class=\"mb-3\">\n@@ -126,7 +126,7 @@ <h3 class=\"h3 mb-3\">\n                             </div>\n                         </div>\n \n-                        <p style=\"margin-bottom: 0.2rem;\">Filter number of configurations:</p>\n+                        <p style=\"margin-bottom: 0.2rem;\">Filter by number of configurations:</p>\n \n                         <div class=\"col-lg-6\">\n                             <div class=\"mb-3\">"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/145",
    "id": 2242701895,
    "node_id": "PR_kwDONB39G86FrOpH",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/145",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/145.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/145.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/145",
    "number": 145,
    "state": "closed",
    "locked": false,
    "title": "fix: Change filter tag name",
    "user": {
      "login": "luisgp9",
      "id": 73946660,
      "node_id": "MDQ6VXNlcjczOTQ2NjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/73946660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luisgp9",
      "html_url": "https://github.com/luisgp9",
      "followers_url": "https://api.github.com/users/luisgp9/followers",
      "following_url": "https://api.github.com/users/luisgp9/following{/other_user}",
      "gists_url": "https://api.github.com/users/luisgp9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luisgp9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luisgp9/subscriptions",
      "organizations_url": "https://api.github.com/users/luisgp9/orgs",
      "repos_url": "https://api.github.com/users/luisgp9/repos",
      "events_url": "https://api.github.com/users/luisgp9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luisgp9/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-18T16:52:21Z",
    "updated_at": "2024-12-18T16:56:05Z",
    "closed_at": "2024-12-18T16:56:01Z",
    "merged_at": "2024-12-18T16:56:00Z",
    "merge_commit_sha": "a22b0a54c521314eb74559aed149bf77bc62e49a",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/145/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/145/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/145/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/f313b7f417d2eff9db5b76a6dbf64d59f8653cf1",
    "head": {
      "label": "TostaHub:144-change-name-of-the-field-minimun-uvl-for-explore-module",
      "ref": "144-change-name-of-the-field-minimun-uvl-for-explore-module",
      "sha": "f313b7f417d2eff9db5b76a6dbf64d59f8653cf1",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "a0a46249a89d6ddd38559e7e1397cf5369b537c5",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/145"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/145"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/145"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/145/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/145/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/145/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/f313b7f417d2eff9db5b76a6dbf64d59f8653cf1"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "45eff2c76d5bcb4c5971dd0f8d956bfd087cc8eb",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f313b7f417d2eff9db5b76a6dbf64d59f8653cf1/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f313b7f417d2eff9db5b76a6dbf64d59f8653cf1/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=f313b7f417d2eff9db5b76a6dbf64d59f8653cf1",
        "patch": "@@ -110,7 +110,7 @@ <h3 class=\"h3 mb-3\">\n                             </div>\n                         </div>\n                         \n-                        <p style=\"margin-bottom: 0.2rem;\">Filter number of uvl models:</p>\n+                        <p style=\"margin-bottom: 0.2rem;\">Filter by number of uvl models:</p>\n \n                         <div class=\"col-lg-6\">\n                             <div class=\"mb-3\">\n@@ -126,7 +126,7 @@ <h3 class=\"h3 mb-3\">\n                             </div>\n                         </div>\n \n-                        <p style=\"margin-bottom: 0.2rem;\">Filter number of configurations:</p>\n+                        <p style=\"margin-bottom: 0.2rem;\">Filter by number of configurations:</p>\n \n                         <div class=\"col-lg-6\">\n                             <div class=\"mb-3\">"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/143",
    "id": 2240479608,
    "node_id": "PR_kwDONB39G86FiwF4",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/143",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/143.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/143.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/143",
    "number": 143,
    "state": "closed",
    "locked": false,
    "title": "feat: Add document",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-17T19:26:44Z",
    "updated_at": "2024-12-17T19:34:17Z",
    "closed_at": "2024-12-17T19:34:16Z",
    "merged_at": "2024-12-17T19:34:16Z",
    "merge_commit_sha": "b35b238a54fca4e3d41c557b116a9906a73b4097",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/143/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/143/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/143/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/a0a46249a89d6ddd38559e7e1397cf5369b537c5",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "a0a46249a89d6ddd38559e7e1397cf5369b537c5",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "d98659aa3700c7473bcf5a43341493ab4caf6e56",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/143"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/143"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/143"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/143/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/143/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/143/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/a0a46249a89d6ddd38559e7e1397cf5369b537c5"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "0e934e61953ce5bc648b7e7603710c7c5102c25c",
        "filename": "docs/Documento del proyecto.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a0a46249a89d6ddd38559e7e1397cf5369b537c5/docs%2FDocumento%20del%20proyecto.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a0a46249a89d6ddd38559e7e1397cf5369b537c5/docs%2FDocumento%20del%20proyecto.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FDocumento%20del%20proyecto.pdf?ref=a0a46249a89d6ddd38559e7e1397cf5369b537c5"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/142",
    "id": 2240475879,
    "node_id": "PR_kwDONB39G86FivLn",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/142",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/142.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/142.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/142",
    "number": 142,
    "state": "closed",
    "locked": false,
    "title": "feat: Add document",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-17T19:24:15Z",
    "updated_at": "2024-12-17T19:26:28Z",
    "closed_at": "2024-12-17T19:26:25Z",
    "merged_at": "2024-12-17T19:26:25Z",
    "merge_commit_sha": "a0a46249a89d6ddd38559e7e1397cf5369b537c5",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/142/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/142/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/142/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/397c77f952ad72790eb42f7d0ccff0ca07185b92",
    "head": {
      "label": "TostaHub:Ahydul-patch-1",
      "ref": "Ahydul-patch-1",
      "sha": "397c77f952ad72790eb42f7d0ccff0ca07185b92",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "acbf69a58067f77306b77afc0f924792538626e2",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/142"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/142"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/142"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/142/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/142/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/142/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/397c77f952ad72790eb42f7d0ccff0ca07185b92"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "0e934e61953ce5bc648b7e7603710c7c5102c25c",
        "filename": "docs/Documento del proyecto.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/397c77f952ad72790eb42f7d0ccff0ca07185b92/docs%2FDocumento%20del%20proyecto.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/397c77f952ad72790eb42f7d0ccff0ca07185b92/docs%2FDocumento%20del%20proyecto.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FDocumento%20del%20proyecto.pdf?ref=397c77f952ad72790eb42f7d0ccff0ca07185b92"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/141",
    "id": 2239472213,
    "node_id": "PR_kwDONB39G86Fe6JV",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/141",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/141.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/141.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/141",
    "number": 141,
    "state": "closed",
    "locked": false,
    "title": "Develop",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-17T11:53:58Z",
    "updated_at": "2024-12-17T12:33:52Z",
    "closed_at": "2024-12-17T12:33:52Z",
    "merged_at": "2024-12-17T12:33:52Z",
    "merge_commit_sha": "d98659aa3700c7473bcf5a43341493ab4caf6e56",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/141/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/141/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/141/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/acbf69a58067f77306b77afc0f924792538626e2",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "acbf69a58067f77306b77afc0f924792538626e2",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "2b0e196378904967a595ffe60dfe7df30f437aa1",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/141"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/141"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/141"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/141/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/141/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/141/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/acbf69a58067f77306b77afc0f924792538626e2"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "47ee6073fd61e1755b7188455c6a6f57ef6165ef",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 98,
        "deletions": 268,
        "changes": 366,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/acbf69a58067f77306b77afc0f924792538626e2/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/acbf69a58067f77306b77afc0f924792538626e2/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=acbf69a58067f77306b77afc0f924792538626e2",
        "patch": "@@ -1,282 +1,112 @@\n-import os\n-import time\n-from selenium import webdriver\n+# Generated by Selenium IDE\n from selenium.webdriver.common.by import By\n-from selenium.webdriver.common.action_chains import ActionChains\n-from selenium.webdriver.common.keys import Keys\n from selenium.webdriver.support.ui import WebDriverWait\n from selenium.webdriver.support import expected_conditions as EC\n from core.environment.host import get_host_for_selenium_testing\n-from core.selenium.common import initialize_driver, close_driver\n+from core.selenium.common import initialize_driver\n \n \n-class TestSelenium:\n+class TestTest1():\n     def setup_method(self, method):\n-        self.driver = webdriver.Chrome()\n+        self.driver = initialize_driver()\n         self.vars = {}\n+        self.driver.get(get_host_for_selenium_testing())\n \n     def teardown_method(self, method):\n         self.driver.quit()\n \n-    def test_testselenium(self):\n+    def test_test1(self):\n         self.driver.get(\"http://127.0.0.1:5000/\")\n         self.driver.set_window_size(1850, 1053)\n-        self.driver.find_element(By.CSS_SELECTOR, \".nav-link:nth-child(1)\").click()\n-        self.driver.find_element(By.ID, \"submit\").click()\n-        self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(7) .align-middle:nth-child(2)\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"ffffddccdd\").click()\n-        self.driver.find_element(By.CSS_SELECTOR, \".nav-link:nth-child(1)\").click()\n-        self.driver.find_element(By.ID, \"email\").send_keys(\"user1@example.com\")\n-        self.driver.find_element(By.ID, \"password\").send_keys(\"1234\")\n-        self.driver.find_element(By.ID, \"submit\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"My datasets\").click()\n-        self.driver.find_element(By.CSS_SELECTOR,\n-                                 \".card-body:nth-child(1)>.table tr:nth-child(2)>td:nth-child(1)\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"ffffddccdd\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n-        self.driver.find_element(By.ID, \"title\").click()\n-        self.driver.find_element(By.ID, \"title\").click()\n-        element = self.driver.find_element(By.ID, \"title\")\n-        actions = ActionChains(self.driver)\n-        actions.double_click(element).perform()\n-        self.driver.find_element(By.ID, \"title\").click()\n-        self.driver.find_element(By.ID, \"title\").click()\n-        self.driver.find_element(By.ID, \"title\").send_keys(\"Hola\")\n-        self.driver.find_element(By.CSS_SELECTOR, \"button\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n-        self.driver.find_element(By.ID, \"title\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n-        self.driver.find_element(By.ID, \"description\").click()\n-        self.driver.find_element(By.ID, \"description\").click()\n-        self.driver.find_element(By.ID, \"description\").click()\n-        element = self.driver.find_element(By.ID, \"description\")\n-        actions = ActionChains(self.driver)\n-        actions.double_click(element).perform()\n-        self.driver.find_element(By.ID, \"description\").click()\n-        self.driver.find_element(By.ID, \"description\").send_keys(\"hola\")\n-        self.driver.find_element(By.CSS_SELECTOR, \"button\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n-        dropdown = self.driver.find_element(By.ID, \"publication_type\")\n-        dropdown.find_element(By.XPATH, \"//option[. = 'taxonomictreatment']\").click()\n-        element = self.driver.find_element(By.ID, \"publication_type\")\n-        actions = ActionChains(self.driver)\n-        actions.move_to_element(element).click_and_hold().perform()\n-        element = self.driver.find_element(By.ID, \"publication_type\")\n-        actions = ActionChains(self.driver)\n-        actions.move_to_element(element).perform()\n-        element = self.driver.find_element(By.ID, \"publication_type\")\n-        actions = ActionChains(self.driver)\n-        actions.move_to_element(element).release().perform()\n-        self.driver.find_element(By.CSS_SELECTOR, \"button\").click()\n-        self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(7) .align-middle:nth-child(2)\").click()\n-\n-\n-def wait_for_page_to_load(driver, timeout=4):\n-    WebDriverWait(driver, timeout).until(\n-        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n-    )\n-\n-\n-def count_datasets(driver, host):\n-    driver.get(f\"{host}/dataset/list\")\n-    wait_for_page_to_load(driver)\n-    try:\n-        amount_datasets = len(driver.find_elements(By.XPATH, \"//table//tbody//tr\"))\n-    except Exception:\n-        amount_datasets = 0\n-    return amount_datasets\n-\n-\n-def test_upload_dataset():\n-    driver = initialize_driver()\n-\n-    try:\n-        host = get_host_for_selenium_testing()\n-\n-        # Open the login page\n-        driver.get(f\"{host}/login\")\n-        wait_for_page_to_load(driver)\n-\n-        # Find the username and password field and enter the values\n-        email_field = driver.find_element(By.NAME, \"email\")\n-        password_field = driver.find_element(By.NAME, \"password\")\n-\n-        email_field.send_keys(\"user1@example.com\")\n-        password_field.send_keys(\"1234\")\n-\n-        # Send the form\n-        password_field.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-\n-        # Count initial datasets\n-        initial_datasets = count_datasets(driver, host)\n-\n-        # Open the upload dataset\n-        driver.get(f\"{host}/dataset/upload\")\n-        wait_for_page_to_load(driver)\n-\n-        # Find basic info and UVL model and fill values\n-        title_field = driver.find_element(By.NAME, \"title\")\n-        title_field.send_keys(\"Title\")\n-        desc_field = driver.find_element(By.NAME, \"desc\")\n-        desc_field.send_keys(\"Description\")\n-        tags_field = driver.find_element(By.NAME, \"tags\")\n-        tags_field.send_keys(\"tag1,tag2\")\n-\n-        # Add two authors and fill\n-        add_author_button = driver.find_element(By.ID, \"add_author\")\n-        add_author_button.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-        add_author_button.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-\n-        name_field0 = driver.find_element(By.NAME, \"authors-0-name\")\n-        name_field0.send_keys(\"Author0\")\n-        affiliation_field0 = driver.find_element(By.NAME, \"authors-0-affiliation\")\n-        affiliation_field0.send_keys(\"Club0\")\n-        orcid_field0 = driver.find_element(By.NAME, \"authors-0-orcid\")\n-        orcid_field0.send_keys(\"0000-0000-0000-0000\")\n-\n-        name_field1 = driver.find_element(By.NAME, \"authors-1-name\")\n-        name_field1.send_keys(\"Author1\")\n-        affiliation_field1 = driver.find_element(By.NAME, \"authors-1-affiliation\")\n-        affiliation_field1.send_keys(\"Club1\")\n-\n-        # Obt\u00e9n las rutas absolutas de los archivos\n-        file1_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file1.uvl\")\n-        file2_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file2.uvl\")\n-\n-        # Subir el primer archivo\n-        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n-        dropzone.send_keys(file1_path)\n-        wait_for_page_to_load(driver)\n-\n-        # Subir el segundo archivo\n-        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n-        dropzone.send_keys(file2_path)\n-        wait_for_page_to_load(driver)\n-\n-        # Add authors in UVL models\n-        show_button = driver.find_element(By.ID, \"0_button\")\n-        show_button.send_keys(Keys.RETURN)\n-        add_author_uvl_button = driver.find_element(By.ID, \"0_form_authors_button\")\n-        add_author_uvl_button.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-\n-        name_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-name\")\n-        name_field.send_keys(\"Author3\")\n-        affiliation_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-affiliation\")\n-        affiliation_field.send_keys(\"Club3\")\n-\n-        # Check I agree and send form\n-        check = driver.find_element(By.ID, \"agreeCheckbox\")\n-        check.send_keys(Keys.SPACE)\n-        wait_for_page_to_load(driver)\n-\n-        upload_btn = driver.find_element(By.ID, \"upload_button\")\n-        upload_btn.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-        time.sleep(2)  # Force wait time\n-\n-        assert driver.current_url == f\"{host}/dataset/list\", \"Test failed!\"\n-\n-        # Count final datasets\n-        final_datasets = count_datasets(driver, host)\n-        assert final_datasets == initial_datasets + 1, \"Test failed!\"\n-\n-        print(\"Test 1 passed!\")\n-\n-    finally:\n-        # Close the browser\n-        close_driver(driver)\n-\n-\n-def test_testViewUserProfileSelenium():\n-    driver = initialize_driver()\n-    try:\n-        host = get_host_for_selenium_testing()\n-        # Open the login page\n-        driver.get(f\"{host}\")\n-        wait_for_page_to_load(driver)\n-\n-        # Espera expl\u00edcita para \"Sample dataset 4\"\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 4\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para \"Doe, Jane\"\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, Jane\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para el men\u00fa de hamburguesa\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.CSS_SELECTOR, \".hamburger\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para el elemento de la barra lateral\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.CSS_SELECTOR, \".sidebar-item:nth-child(2) .align-middle:nth-child(2)\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para \"Sample dataset 3\"\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 3\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para \"Doe, John\"\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, John\"))\n-        ).click()\n-\n-        print(\"Test 2 passed!\")\n-\n-    finally:\n-        # Close the browser\n-        close_driver(driver)\n-\n-\n-def test_DownloadUvlDataset():\n-    driver = initialize_driver()\n-\n-    try:\n-        host = get_host_for_selenium_testing()\n-\n-        # Open the login page\n-        driver.get(f\"{host}\")\n-        wait_for_page_to_load(driver)\n-\n-        driver.find_element(By.LINK_TEXT, \"Sample dataset 4\").click()\n-        driver.find_element(By.LINK_TEXT, \"Doe, Jane\").click()\n-        driver.find_element(By.LINK_TEXT, \"Sample dataset 2\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"Glencoe\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"DIMACS\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"SPLOT\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport25\").click()\n-        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport26\").click()\n-        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n-\n-        print(\"Test 3 passed!\")\n-\n-    finally:\n-\n-        # Close the browser\n-        close_driver(driver)\n-\n-\n-# Call the test function\n-\n-\n-test_upload_dataset()\n-\n-\n-test_testViewUserProfileSelenium()\n-test_DownloadUvlDataset()\n+        # Esperar que el enlace de \"Login\" sea clickeable y luego hacer clic\n+        login_link = WebDriverWait(self.driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Login\"))\n+        )\n+        login_link.click()\n+\n+        # Llenar el formulario de login\n+        email_input = WebDriverWait(self.driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"email\"))\n+        )\n+        email_input.click()\n+        email_input.send_keys(\"user1@example.com\")\n+\n+        password_input = self.driver.find_element(By.ID, \"password\")\n+        password_input.click()\n+        password_input.send_keys(\"1234\")\n+\n+        submit_button = self.driver.find_element(By.ID, \"submit\")\n+        submit_button.click()\n+\n+        # Esperar y hacer clic en \"Description for dataset 3\"\n+        dataset_link = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"My datasets\"))\n+        )\n+        dataset_link.click()\n+\n+        # Navegar en la barra lateral\n+        sidebar_item = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \".sidebar-item:nth-child(6) .align-middle:nth-child(2)\"))\n+        )\n+        sidebar_item.click()\n+        # Esperar y hacer clic en \"Description for dataset 3\"\n+        dataset_link = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"My datasets\"))\n+        )\n+        dataset_link.click()\n+        # Rellenar el formulario de edici\u00f3n\n+        dataset_link = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Description for dataset 3\"))\n+        )\n+        dataset_link.click()\n+        # Esperar que el enlace de \"Login\" sea clickeable y luego hacer clic\n+        login_link = WebDriverWait(self.driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Login\"))\n+        )\n+        login_link.click()\n+\n+        # Llenar el formulario de login\n+        email_input = WebDriverWait(self.driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"email\"))\n+        )\n+        email_input.click()\n+        email_input.send_keys(\"user1@example.com\")\n+\n+        password_input = self.driver.find_element(By.ID, \"password\")\n+        password_input.click()\n+        password_input.send_keys(\"1234\")\n+\n+        submit_button = self.driver.find_element(By.ID, \"submit\")\n+        submit_button.click()\n+        # Esperar y hacer clic en \"Description for dataset 3\"\n+        dataset_link = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"My datasets\"))\n+        )\n+        dataset_link.click()\n+        # Rellenar el formulario de edici\u00f3n\n+        dataset_link = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Description for dataset 3\"))\n+        )\n+        dataset_link.click()\n+        edit_link = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Edit Dataset\"))\n+        )\n+        edit_link.click()\n+\n+        publication_type_dropdown = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.ID, \"publication_type\"))\n+        )\n+        publication_type_dropdown.click()\n+\n+        dropdown_option = WebDriverWait(self.driver, 30).until(\n+            EC.presence_of_element_located((By.XPATH, \"//option[. = 'patent']\"))\n+        )\n+        dropdown_option.click()\n+\n+        self.driver.find_element(By.ID, \"tags\").click()\n+        self.driver.find_element(By.ID, \"tags\").send_keys(\"tag3, tag4,tag50,tag25\")\n+\n+        submit_button = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \"button\"))\n+        )\n+        submit_button.click()"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/140",
    "id": 2238397294,
    "node_id": "PR_kwDONB39G86Faztu",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/140",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/140.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/140.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/140",
    "number": 140,
    "state": "closed",
    "locked": false,
    "title": "fixing SeleniumTest",
    "user": {
      "login": "luisgp9",
      "id": 73946660,
      "node_id": "MDQ6VXNlcjczOTQ2NjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/73946660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luisgp9",
      "html_url": "https://github.com/luisgp9",
      "followers_url": "https://api.github.com/users/luisgp9/followers",
      "following_url": "https://api.github.com/users/luisgp9/following{/other_user}",
      "gists_url": "https://api.github.com/users/luisgp9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luisgp9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luisgp9/subscriptions",
      "organizations_url": "https://api.github.com/users/luisgp9/orgs",
      "repos_url": "https://api.github.com/users/luisgp9/repos",
      "events_url": "https://api.github.com/users/luisgp9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luisgp9/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-16T22:35:49Z",
    "updated_at": "2024-12-17T22:42:34Z",
    "closed_at": "2024-12-16T22:43:05Z",
    "merged_at": "2024-12-16T22:43:05Z",
    "merge_commit_sha": "acbf69a58067f77306b77afc0f924792538626e2",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/140/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/140/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/140/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/58c5e5f19d19a27d83d32f2ba7e174fd90ea05c4",
    "head": {
      "label": "TostaHub:fixSeleniumTest",
      "ref": "fixSeleniumTest",
      "sha": "58c5e5f19d19a27d83d32f2ba7e174fd90ea05c4",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "3aff24195abb38b2838c8180fba7a3b7c1266667",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/140"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/140"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/140"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/140/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/140/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/140/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/58c5e5f19d19a27d83d32f2ba7e174fd90ea05c4"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "47ee6073fd61e1755b7188455c6a6f57ef6165ef",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/58c5e5f19d19a27d83d32f2ba7e174fd90ea05c4/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/58c5e5f19d19a27d83d32f2ba7e174fd90ea05c4/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=58c5e5f19d19a27d83d32f2ba7e174fd90ea05c4",
        "patch": "@@ -78,6 +78,16 @@ def test_test1(self):\n \n         submit_button = self.driver.find_element(By.ID, \"submit\")\n         submit_button.click()\n+        # Esperar y hacer clic en \"Description for dataset 3\"\n+        dataset_link = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"My datasets\"))\n+        )\n+        dataset_link.click()\n+        # Rellenar el formulario de edici\u00f3n\n+        dataset_link = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Description for dataset 3\"))\n+        )\n+        dataset_link.click()\n         edit_link = WebDriverWait(self.driver, 30).until(\n             EC.element_to_be_clickable((By.LINK_TEXT, \"Edit Dataset\"))\n         )"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/139",
    "id": 2238385810,
    "node_id": "PR_kwDONB39G86Faw6S",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/139",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/139.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/139.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/139",
    "number": 139,
    "state": "closed",
    "locked": false,
    "title": "fix: fixing selenium test",
    "user": {
      "login": "luisgp9",
      "id": 73946660,
      "node_id": "MDQ6VXNlcjczOTQ2NjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/73946660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luisgp9",
      "html_url": "https://github.com/luisgp9",
      "followers_url": "https://api.github.com/users/luisgp9/followers",
      "following_url": "https://api.github.com/users/luisgp9/following{/other_user}",
      "gists_url": "https://api.github.com/users/luisgp9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luisgp9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luisgp9/subscriptions",
      "organizations_url": "https://api.github.com/users/luisgp9/orgs",
      "repos_url": "https://api.github.com/users/luisgp9/repos",
      "events_url": "https://api.github.com/users/luisgp9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luisgp9/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-16T22:26:24Z",
    "updated_at": "2024-12-16T22:28:57Z",
    "closed_at": "2024-12-16T22:28:57Z",
    "merged_at": "2024-12-16T22:28:57Z",
    "merge_commit_sha": "3aff24195abb38b2838c8180fba7a3b7c1266667",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/139/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/139/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/139/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d1c684391b40e30a4bcaddd74476dbd27b15aa03",
    "head": {
      "label": "TostaHub:fixSeleniumTest",
      "ref": "fixSeleniumTest",
      "sha": "d1c684391b40e30a4bcaddd74476dbd27b15aa03",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "6a79de095b62520878505bf6e6a16cddfeb38858",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/139"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/139"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/139"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/139/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/139/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/139/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d1c684391b40e30a4bcaddd74476dbd27b15aa03"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "fc26834265534af53dc4a210ebf326fe77b32908",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 88,
        "deletions": 268,
        "changes": 356,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d1c684391b40e30a4bcaddd74476dbd27b15aa03/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d1c684391b40e30a4bcaddd74476dbd27b15aa03/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=d1c684391b40e30a4bcaddd74476dbd27b15aa03",
        "patch": "@@ -1,282 +1,102 @@\n-import os\n-import time\n-from selenium import webdriver\n+# Generated by Selenium IDE\n from selenium.webdriver.common.by import By\n-from selenium.webdriver.common.action_chains import ActionChains\n-from selenium.webdriver.common.keys import Keys\n from selenium.webdriver.support.ui import WebDriverWait\n from selenium.webdriver.support import expected_conditions as EC\n from core.environment.host import get_host_for_selenium_testing\n-from core.selenium.common import initialize_driver, close_driver\n+from core.selenium.common import initialize_driver\n \n \n-class TestSelenium:\n+class TestTest1():\n     def setup_method(self, method):\n-        self.driver = webdriver.Chrome()\n+        self.driver = initialize_driver()\n         self.vars = {}\n+        self.driver.get(get_host_for_selenium_testing())\n \n     def teardown_method(self, method):\n         self.driver.quit()\n \n-    def test_testselenium(self):\n+    def test_test1(self):\n         self.driver.get(\"http://127.0.0.1:5000/\")\n         self.driver.set_window_size(1850, 1053)\n-        self.driver.find_element(By.CSS_SELECTOR, \".nav-link:nth-child(1)\").click()\n-        self.driver.find_element(By.ID, \"submit\").click()\n-        self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(7) .align-middle:nth-child(2)\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"ffffddccdd\").click()\n-        self.driver.find_element(By.CSS_SELECTOR, \".nav-link:nth-child(1)\").click()\n-        self.driver.find_element(By.ID, \"email\").send_keys(\"user1@example.com\")\n-        self.driver.find_element(By.ID, \"password\").send_keys(\"1234\")\n-        self.driver.find_element(By.ID, \"submit\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"My datasets\").click()\n-        self.driver.find_element(By.CSS_SELECTOR,\n-                                 \".card-body:nth-child(1)>.table tr:nth-child(2)>td:nth-child(1)\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"ffffddccdd\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n-        self.driver.find_element(By.ID, \"title\").click()\n-        self.driver.find_element(By.ID, \"title\").click()\n-        element = self.driver.find_element(By.ID, \"title\")\n-        actions = ActionChains(self.driver)\n-        actions.double_click(element).perform()\n-        self.driver.find_element(By.ID, \"title\").click()\n-        self.driver.find_element(By.ID, \"title\").click()\n-        self.driver.find_element(By.ID, \"title\").send_keys(\"Hola\")\n-        self.driver.find_element(By.CSS_SELECTOR, \"button\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n-        self.driver.find_element(By.ID, \"title\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n-        self.driver.find_element(By.ID, \"description\").click()\n-        self.driver.find_element(By.ID, \"description\").click()\n-        self.driver.find_element(By.ID, \"description\").click()\n-        element = self.driver.find_element(By.ID, \"description\")\n-        actions = ActionChains(self.driver)\n-        actions.double_click(element).perform()\n-        self.driver.find_element(By.ID, \"description\").click()\n-        self.driver.find_element(By.ID, \"description\").send_keys(\"hola\")\n-        self.driver.find_element(By.CSS_SELECTOR, \"button\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n-        dropdown = self.driver.find_element(By.ID, \"publication_type\")\n-        dropdown.find_element(By.XPATH, \"//option[. = 'taxonomictreatment']\").click()\n-        element = self.driver.find_element(By.ID, \"publication_type\")\n-        actions = ActionChains(self.driver)\n-        actions.move_to_element(element).click_and_hold().perform()\n-        element = self.driver.find_element(By.ID, \"publication_type\")\n-        actions = ActionChains(self.driver)\n-        actions.move_to_element(element).perform()\n-        element = self.driver.find_element(By.ID, \"publication_type\")\n-        actions = ActionChains(self.driver)\n-        actions.move_to_element(element).release().perform()\n-        self.driver.find_element(By.CSS_SELECTOR, \"button\").click()\n-        self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(7) .align-middle:nth-child(2)\").click()\n-\n-\n-def wait_for_page_to_load(driver, timeout=4):\n-    WebDriverWait(driver, timeout).until(\n-        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n-    )\n-\n-\n-def count_datasets(driver, host):\n-    driver.get(f\"{host}/dataset/list\")\n-    wait_for_page_to_load(driver)\n-    try:\n-        amount_datasets = len(driver.find_elements(By.XPATH, \"//table//tbody//tr\"))\n-    except Exception:\n-        amount_datasets = 0\n-    return amount_datasets\n-\n-\n-def test_upload_dataset():\n-    driver = initialize_driver()\n-\n-    try:\n-        host = get_host_for_selenium_testing()\n-\n-        # Open the login page\n-        driver.get(f\"{host}/login\")\n-        wait_for_page_to_load(driver)\n-\n-        # Find the username and password field and enter the values\n-        email_field = driver.find_element(By.NAME, \"email\")\n-        password_field = driver.find_element(By.NAME, \"password\")\n-\n-        email_field.send_keys(\"user1@example.com\")\n-        password_field.send_keys(\"1234\")\n-\n-        # Send the form\n-        password_field.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-\n-        # Count initial datasets\n-        initial_datasets = count_datasets(driver, host)\n-\n-        # Open the upload dataset\n-        driver.get(f\"{host}/dataset/upload\")\n-        wait_for_page_to_load(driver)\n-\n-        # Find basic info and UVL model and fill values\n-        title_field = driver.find_element(By.NAME, \"title\")\n-        title_field.send_keys(\"Title\")\n-        desc_field = driver.find_element(By.NAME, \"desc\")\n-        desc_field.send_keys(\"Description\")\n-        tags_field = driver.find_element(By.NAME, \"tags\")\n-        tags_field.send_keys(\"tag1,tag2\")\n-\n-        # Add two authors and fill\n-        add_author_button = driver.find_element(By.ID, \"add_author\")\n-        add_author_button.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-        add_author_button.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-\n-        name_field0 = driver.find_element(By.NAME, \"authors-0-name\")\n-        name_field0.send_keys(\"Author0\")\n-        affiliation_field0 = driver.find_element(By.NAME, \"authors-0-affiliation\")\n-        affiliation_field0.send_keys(\"Club0\")\n-        orcid_field0 = driver.find_element(By.NAME, \"authors-0-orcid\")\n-        orcid_field0.send_keys(\"0000-0000-0000-0000\")\n-\n-        name_field1 = driver.find_element(By.NAME, \"authors-1-name\")\n-        name_field1.send_keys(\"Author1\")\n-        affiliation_field1 = driver.find_element(By.NAME, \"authors-1-affiliation\")\n-        affiliation_field1.send_keys(\"Club1\")\n-\n-        # Obt\u00e9n las rutas absolutas de los archivos\n-        file1_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file1.uvl\")\n-        file2_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file2.uvl\")\n-\n-        # Subir el primer archivo\n-        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n-        dropzone.send_keys(file1_path)\n-        wait_for_page_to_load(driver)\n-\n-        # Subir el segundo archivo\n-        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n-        dropzone.send_keys(file2_path)\n-        wait_for_page_to_load(driver)\n-\n-        # Add authors in UVL models\n-        show_button = driver.find_element(By.ID, \"0_button\")\n-        show_button.send_keys(Keys.RETURN)\n-        add_author_uvl_button = driver.find_element(By.ID, \"0_form_authors_button\")\n-        add_author_uvl_button.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-\n-        name_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-name\")\n-        name_field.send_keys(\"Author3\")\n-        affiliation_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-affiliation\")\n-        affiliation_field.send_keys(\"Club3\")\n-\n-        # Check I agree and send form\n-        check = driver.find_element(By.ID, \"agreeCheckbox\")\n-        check.send_keys(Keys.SPACE)\n-        wait_for_page_to_load(driver)\n-\n-        upload_btn = driver.find_element(By.ID, \"upload_button\")\n-        upload_btn.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-        time.sleep(2)  # Force wait time\n-\n-        assert driver.current_url == f\"{host}/dataset/list\", \"Test failed!\"\n-\n-        # Count final datasets\n-        final_datasets = count_datasets(driver, host)\n-        assert final_datasets == initial_datasets + 1, \"Test failed!\"\n-\n-        print(\"Test 1 passed!\")\n-\n-    finally:\n-        # Close the browser\n-        close_driver(driver)\n-\n-\n-def test_testViewUserProfileSelenium():\n-    driver = initialize_driver()\n-    try:\n-        host = get_host_for_selenium_testing()\n-        # Open the login page\n-        driver.get(f\"{host}\")\n-        wait_for_page_to_load(driver)\n-\n-        # Espera expl\u00edcita para \"Sample dataset 4\"\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 4\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para \"Doe, Jane\"\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, Jane\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para el men\u00fa de hamburguesa\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.CSS_SELECTOR, \".hamburger\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para el elemento de la barra lateral\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.CSS_SELECTOR, \".sidebar-item:nth-child(2) .align-middle:nth-child(2)\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para \"Sample dataset 3\"\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 3\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para \"Doe, John\"\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, John\"))\n-        ).click()\n-\n-        print(\"Test 2 passed!\")\n-\n-    finally:\n-        # Close the browser\n-        close_driver(driver)\n-\n-\n-def test_DownloadUvlDataset():\n-    driver = initialize_driver()\n-\n-    try:\n-        host = get_host_for_selenium_testing()\n-\n-        # Open the login page\n-        driver.get(f\"{host}\")\n-        wait_for_page_to_load(driver)\n-\n-        driver.find_element(By.LINK_TEXT, \"Sample dataset 4\").click()\n-        driver.find_element(By.LINK_TEXT, \"Doe, Jane\").click()\n-        driver.find_element(By.LINK_TEXT, \"Sample dataset 2\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"Glencoe\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"DIMACS\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"SPLOT\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport25\").click()\n-        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport26\").click()\n-        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n-\n-        print(\"Test 3 passed!\")\n-\n-    finally:\n-\n-        # Close the browser\n-        close_driver(driver)\n-\n-\n-# Call the test function\n-\n-\n-test_upload_dataset()\n-\n-\n-test_testViewUserProfileSelenium()\n-test_DownloadUvlDataset()\n+        # Esperar que el enlace de \"Login\" sea clickeable y luego hacer clic\n+        login_link = WebDriverWait(self.driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Login\"))\n+        )\n+        login_link.click()\n+\n+        # Llenar el formulario de login\n+        email_input = WebDriverWait(self.driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"email\"))\n+        )\n+        email_input.click()\n+        email_input.send_keys(\"user1@example.com\")\n+\n+        password_input = self.driver.find_element(By.ID, \"password\")\n+        password_input.click()\n+        password_input.send_keys(\"1234\")\n+\n+        submit_button = self.driver.find_element(By.ID, \"submit\")\n+        submit_button.click()\n+\n+        # Esperar y hacer clic en \"Description for dataset 3\"\n+        dataset_link = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"My datasets\"))\n+        )\n+        dataset_link.click()\n+\n+        # Navegar en la barra lateral\n+        sidebar_item = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \".sidebar-item:nth-child(6) .align-middle:nth-child(2)\"))\n+        )\n+        sidebar_item.click()\n+        # Esperar y hacer clic en \"Description for dataset 3\"\n+        dataset_link = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"My datasets\"))\n+        )\n+        dataset_link.click()\n+        # Rellenar el formulario de edici\u00f3n\n+        dataset_link = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Description for dataset 3\"))\n+        )\n+        dataset_link.click()\n+        # Esperar que el enlace de \"Login\" sea clickeable y luego hacer clic\n+        login_link = WebDriverWait(self.driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Login\"))\n+        )\n+        login_link.click()\n+\n+        # Llenar el formulario de login\n+        email_input = WebDriverWait(self.driver, 10).until(\n+            EC.presence_of_element_located((By.ID, \"email\"))\n+        )\n+        email_input.click()\n+        email_input.send_keys(\"user1@example.com\")\n+\n+        password_input = self.driver.find_element(By.ID, \"password\")\n+        password_input.click()\n+        password_input.send_keys(\"1234\")\n+\n+        submit_button = self.driver.find_element(By.ID, \"submit\")\n+        submit_button.click()\n+        edit_link = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Edit Dataset\"))\n+        )\n+        edit_link.click()\n+\n+        publication_type_dropdown = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.ID, \"publication_type\"))\n+        )\n+        publication_type_dropdown.click()\n+\n+        dropdown_option = WebDriverWait(self.driver, 30).until(\n+            EC.presence_of_element_located((By.XPATH, \"//option[. = 'patent']\"))\n+        )\n+        dropdown_option.click()\n+\n+        self.driver.find_element(By.ID, \"tags\").click()\n+        self.driver.find_element(By.ID, \"tags\").send_keys(\"tag3, tag4,tag50,tag25\")\n+\n+        submit_button = WebDriverWait(self.driver, 30).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \"button\"))\n+        )\n+        submit_button.click()"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/138",
    "id": 2237986638,
    "node_id": "PR_kwDONB39G86FZPdO",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/138",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/138.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/138.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/138",
    "number": 138,
    "state": "closed",
    "locked": false,
    "title": "Fix locust data set",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-16T18:22:42Z",
    "updated_at": "2024-12-16T18:30:24Z",
    "closed_at": "2024-12-16T18:30:14Z",
    "merged_at": "2024-12-16T18:30:14Z",
    "merge_commit_sha": "6a79de095b62520878505bf6e6a16cddfeb38858",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/138/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/138/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/138/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/11202b38df6ef42911f649cec4fb8e3a1a044c94",
    "head": {
      "label": "TostaHub:fixLocustDataSet",
      "ref": "fixLocustDataSet",
      "sha": "11202b38df6ef42911f649cec4fb8e3a1a044c94",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "40495fdbadc1a339b3e841f4866527964789d11f",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/138"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/138"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/138"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/138/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/138/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/138/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/11202b38df6ef42911f649cec4fb8e3a1a044c94"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "feaa6c955117145a35b472b5c896c02356925fb9",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 33,
        "deletions": 60,
        "changes": 93,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/11202b38df6ef42911f649cec4fb8e3a1a044c94/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/11202b38df6ef42911f649cec4fb8e3a1a044c94/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=11202b38df6ef42911f649cec4fb8e3a1a044c94",
        "patch": "@@ -7,43 +7,34 @@\n \n class DatasetBehavior(TaskSet):\n     def on_start(self):\n-        \"\"\"Realiza el login antes de iniciar las tareas de la prueba.\"\"\"\n-        response = self.client.post('/login', json={\n-            'email': 'user1@example.com',\n-            'password': '1234'\n-        })\n-\n-        self.csrf_token = get_csrf_token(response)\n-        if response.status_code == 200:\n-            print(\"Login exitoso.\")\n-            self.token = response.json().get(\"token\", None)\n-        else:\n-            self.token = None\n-            print(\"Error en el login:\", response.status_code)\n-\n-        self.csrf_token = get_csrf_token(response)\n-        if response.status_code == 200:\n-            print(\"Login exitoso.\")\n-            self.session_cookies = response.cookies\n-        else:\n-            print(\"Error en el login:\", response.status_code, response.text)\n-            self.session_cookies = None\n-\n         self.dataset()\n+        self.login()\n         self.create_dataset()\n         self.view_user_datasets()\n-        self.rate_dataset_invalid_rating()\n-        self.rate_dataset_not_found()\n-        self.rate_dataset_success()\n-        self.rate_dataset_unauthorized()\n \n-    @task(2)\n+    def dataset(self):\n+        response = self.client.get(\"/dataset/upload\")\n+        self.crsf_toker = get_csrf_token(response)\n+\n+    def login(self):\n+        \"\"\"Simula el inicio de sesi\u00f3n del usuario.\"\"\"\n+        response = self.client.post(\n+            \"/login\",\n+            {\n+                \"username\": \"user1@example.com\",\n+                \"password\": \"1234\"\n+            },\n+            name=\"User Login\"\n+        )\n+        self.csrf_token = get_csrf_token(response)\n+\n+    @task\n     def edit_dataset_success(self):\n         \"\"\"Simula un usuario editando un dataset exitosamente.\"\"\"\n         # Agregar un retraso para permitir que los valores se actualicen\n         time.sleep(5)  # Espera 5 segundos\n         headers = {\"Authorization\": f\"Bearer {self.token}\"} if self.token else {}\n-        response = self.client.post('/dataset/1/edit', json={\n+        response = self.client.post('/dataset/10/edit', json={\n             \"description\": \"Updated description from Locust\",\n             \"publication_type\": \"RESEARCH_PAPER\",\n             \"tags\": \"locust, test\"\n@@ -53,10 +44,10 @@ def edit_dataset_success(self):\n         else:\n             print(\"Error al editar el dataset:\", response.status_code, response.text)\n \n-    @task(1)\n+    @task\n     def edit_dataset_unauthorized(self):\n         \"\"\"Simula un usuario no autenticado intentando editar un dataset.\"\"\"\n-        response = self.client.post('/dataset/1/edit', json={\n+        response = self.client.post('/dataset/10/edit', json={\n             \"description\": \"Unauthorized edit attempt\",\n             \"publication_type\": \"RESEARCH_PAPER\",\n             \"tags\": \"unauthorized\"\n@@ -66,16 +57,16 @@ def edit_dataset_unauthorized(self):\n         else:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    @task(1)\n+    @task\n     def view_dataset(self):\n         \"\"\"Simula un usuario viendo un dataset.\"\"\"\n-        response = self.client.get('/dataset/1')\n+        response = self.client.get('/dataset/10')\n         if response.status_code == 200:\n             print(\"Dataset visto exitosamente.\")\n         else:\n             print(\"Error al ver el dataset:\", response.status_code, response.text)\n \n-    @task(1)\n+    @task\n     def view_nonexistent_dataset(self):\n         \"\"\"Simula un usuario intentando ver un dataset inexistente.\"\"\"\n         response = self.client.get('/dataset/9999')\n@@ -85,24 +76,6 @@ def view_nonexistent_dataset(self):\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n     @task\n-    def dataset(self):\n-        response = self.client.get(\"/dataset/upload\")\n-        get_csrf_token(response)\n-\n-    def is_authenticated(self):\n-        \"\"\"Comprueba si el login fue exitoso.\"\"\"\n-        return self.session_cookies is not None\n-\n-    def post_with_auth(self, url, json=None):\n-        \"\"\"Realiza una solicitud POST autenticada.\"\"\"\n-        if not self.is_authenticated():\n-            print(\"Usuario no autenticado. No se puede realizar la solicitud.\")\n-            return None\n-\n-        # A\u00f1ade cookies al realizar solicitudes\n-        return self.client.post(url, json=json, cookies=self.session_cookies)\n-\n-    @task(1)\n     def rate_dataset_success(self):\n         \"\"\"Simula un usuario calificando un dataset exitosamente.\"\"\"\n         response = self.post_with_auth('/datasets/10/rate', json={\"rating\": 4})\n@@ -111,7 +84,7 @@ def rate_dataset_success(self):\n         elif response:\n             print(\"Error al agregar el rating:\", response.status_code, response.text)\n \n-    @task(2)\n+    @task\n     def rate_dataset_invalid_rating(self):\n         \"\"\"Simula un usuario enviando un rating inv\u00e1lido mayor a 5.\"\"\"\n         response = self.post_with_auth('/datasets/10/rate', json={\"rating\": 12})\n@@ -120,7 +93,7 @@ def rate_dataset_invalid_rating(self):\n         elif response:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    @task(3)\n+    @task\n     def rate_dataset_not_found(self):\n         \"\"\"Simula un usuario intentando calificar un dataset que no existe.\"\"\"\n         response = self.post_with_auth(\"/datasets/100/rate\", json={\"rating\": 3})\n@@ -129,16 +102,16 @@ def rate_dataset_not_found(self):\n         elif response:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    @task(4)\n+    @task\n     def rate_dataset_unauthorized(self):\n         \"\"\"Simula un usuario no autenticado intentando calificar un dataset.\"\"\"\n-        response = self.client.post('/datasets/17/rate', json={\"rating\": 4})\n+        response = self.client.post('/datasets/10/rate', json={\"rating\": 4})\n         if response.status_code == 302 or response.status_code == 401:\n             print(\"Error esperado: No autorizado.\")\n         else:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    @task(5)\n+    @task\n     def create_dataset(self):\n         \"\"\"Simula la creaci\u00f3n de un nuevo dataset.\"\"\"\n         dataset_payload = {\n@@ -156,10 +129,10 @@ def create_dataset(self):\n             if response.status_code != 200 or \"error\" in response.text.lower():\n                 response.failure(\"Dataset creation failed\")\n \n-    @task(6)\n+    @task\n     def view_user_datasets(self):\n         \"\"\"Simula la visualizaci\u00f3n de la p\u00e1gina de datasets del usuario.\"\"\"\n-        user_id = 7\n+        user_id = 2\n         with self.client.get(\n             f\"/api/v1/datasets/user/{user_id}\",\n             name=\"View User Datasets\",\n@@ -171,6 +144,6 @@ def view_user_datasets(self):\n \n class DatasetUser(HttpUser):\n     tasks = [DatasetBehavior]\n-    min_wait = 5000  # Tiempo de espera m\u00ednimo en milisegundos (5 segundos)\n-    max_wait = 9000  # Tiempo de espera m\u00e1ximo en milisegundos (9 segundos)\n+    min_wait = 5\n+    max_wait = 9\n     host = get_host_for_locust_testing()"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/137",
    "id": 2237843436,
    "node_id": "PR_kwDONB39G86FYsfs",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/137",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/137.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/137.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/137",
    "number": 137,
    "state": "closed",
    "locked": false,
    "title": "feat: Add script to run selenium tests",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-16T17:02:47Z",
    "updated_at": "2024-12-16T22:08:37Z",
    "closed_at": "2024-12-16T22:08:37Z",
    "merged_at": "2024-12-16T22:08:37Z",
    "merge_commit_sha": "2b0e196378904967a595ffe60dfe7df30f437aa1",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/137/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/137/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/137/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/6a79de095b62520878505bf6e6a16cddfeb38858",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "6a79de095b62520878505bf6e6a16cddfeb38858",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "2d539c71dbfda6d7646518fa12c56b740e919b0c",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/137"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/137"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/137"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/137/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/137/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/137/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/6a79de095b62520878505bf6e6a16cddfeb38858"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "feaa6c955117145a35b472b5c896c02356925fb9",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 33,
        "deletions": 60,
        "changes": 93,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/6a79de095b62520878505bf6e6a16cddfeb38858/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/6a79de095b62520878505bf6e6a16cddfeb38858/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=6a79de095b62520878505bf6e6a16cddfeb38858",
        "patch": "@@ -7,43 +7,34 @@\n \n class DatasetBehavior(TaskSet):\n     def on_start(self):\n-        \"\"\"Realiza el login antes de iniciar las tareas de la prueba.\"\"\"\n-        response = self.client.post('/login', json={\n-            'email': 'user1@example.com',\n-            'password': '1234'\n-        })\n-\n-        self.csrf_token = get_csrf_token(response)\n-        if response.status_code == 200:\n-            print(\"Login exitoso.\")\n-            self.token = response.json().get(\"token\", None)\n-        else:\n-            self.token = None\n-            print(\"Error en el login:\", response.status_code)\n-\n-        self.csrf_token = get_csrf_token(response)\n-        if response.status_code == 200:\n-            print(\"Login exitoso.\")\n-            self.session_cookies = response.cookies\n-        else:\n-            print(\"Error en el login:\", response.status_code, response.text)\n-            self.session_cookies = None\n-\n         self.dataset()\n+        self.login()\n         self.create_dataset()\n         self.view_user_datasets()\n-        self.rate_dataset_invalid_rating()\n-        self.rate_dataset_not_found()\n-        self.rate_dataset_success()\n-        self.rate_dataset_unauthorized()\n \n-    @task(2)\n+    def dataset(self):\n+        response = self.client.get(\"/dataset/upload\")\n+        self.crsf_toker = get_csrf_token(response)\n+\n+    def login(self):\n+        \"\"\"Simula el inicio de sesi\u00f3n del usuario.\"\"\"\n+        response = self.client.post(\n+            \"/login\",\n+            {\n+                \"username\": \"user1@example.com\",\n+                \"password\": \"1234\"\n+            },\n+            name=\"User Login\"\n+        )\n+        self.csrf_token = get_csrf_token(response)\n+\n+    @task\n     def edit_dataset_success(self):\n         \"\"\"Simula un usuario editando un dataset exitosamente.\"\"\"\n         # Agregar un retraso para permitir que los valores se actualicen\n         time.sleep(5)  # Espera 5 segundos\n         headers = {\"Authorization\": f\"Bearer {self.token}\"} if self.token else {}\n-        response = self.client.post('/dataset/1/edit', json={\n+        response = self.client.post('/dataset/10/edit', json={\n             \"description\": \"Updated description from Locust\",\n             \"publication_type\": \"RESEARCH_PAPER\",\n             \"tags\": \"locust, test\"\n@@ -53,10 +44,10 @@ def edit_dataset_success(self):\n         else:\n             print(\"Error al editar el dataset:\", response.status_code, response.text)\n \n-    @task(1)\n+    @task\n     def edit_dataset_unauthorized(self):\n         \"\"\"Simula un usuario no autenticado intentando editar un dataset.\"\"\"\n-        response = self.client.post('/dataset/1/edit', json={\n+        response = self.client.post('/dataset/10/edit', json={\n             \"description\": \"Unauthorized edit attempt\",\n             \"publication_type\": \"RESEARCH_PAPER\",\n             \"tags\": \"unauthorized\"\n@@ -66,16 +57,16 @@ def edit_dataset_unauthorized(self):\n         else:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    @task(1)\n+    @task\n     def view_dataset(self):\n         \"\"\"Simula un usuario viendo un dataset.\"\"\"\n-        response = self.client.get('/dataset/1')\n+        response = self.client.get('/dataset/10')\n         if response.status_code == 200:\n             print(\"Dataset visto exitosamente.\")\n         else:\n             print(\"Error al ver el dataset:\", response.status_code, response.text)\n \n-    @task(1)\n+    @task\n     def view_nonexistent_dataset(self):\n         \"\"\"Simula un usuario intentando ver un dataset inexistente.\"\"\"\n         response = self.client.get('/dataset/9999')\n@@ -85,24 +76,6 @@ def view_nonexistent_dataset(self):\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n     @task\n-    def dataset(self):\n-        response = self.client.get(\"/dataset/upload\")\n-        get_csrf_token(response)\n-\n-    def is_authenticated(self):\n-        \"\"\"Comprueba si el login fue exitoso.\"\"\"\n-        return self.session_cookies is not None\n-\n-    def post_with_auth(self, url, json=None):\n-        \"\"\"Realiza una solicitud POST autenticada.\"\"\"\n-        if not self.is_authenticated():\n-            print(\"Usuario no autenticado. No se puede realizar la solicitud.\")\n-            return None\n-\n-        # A\u00f1ade cookies al realizar solicitudes\n-        return self.client.post(url, json=json, cookies=self.session_cookies)\n-\n-    @task(1)\n     def rate_dataset_success(self):\n         \"\"\"Simula un usuario calificando un dataset exitosamente.\"\"\"\n         response = self.post_with_auth('/datasets/10/rate', json={\"rating\": 4})\n@@ -111,7 +84,7 @@ def rate_dataset_success(self):\n         elif response:\n             print(\"Error al agregar el rating:\", response.status_code, response.text)\n \n-    @task(2)\n+    @task\n     def rate_dataset_invalid_rating(self):\n         \"\"\"Simula un usuario enviando un rating inv\u00e1lido mayor a 5.\"\"\"\n         response = self.post_with_auth('/datasets/10/rate', json={\"rating\": 12})\n@@ -120,7 +93,7 @@ def rate_dataset_invalid_rating(self):\n         elif response:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    @task(3)\n+    @task\n     def rate_dataset_not_found(self):\n         \"\"\"Simula un usuario intentando calificar un dataset que no existe.\"\"\"\n         response = self.post_with_auth(\"/datasets/100/rate\", json={\"rating\": 3})\n@@ -129,16 +102,16 @@ def rate_dataset_not_found(self):\n         elif response:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    @task(4)\n+    @task\n     def rate_dataset_unauthorized(self):\n         \"\"\"Simula un usuario no autenticado intentando calificar un dataset.\"\"\"\n-        response = self.client.post('/datasets/17/rate', json={\"rating\": 4})\n+        response = self.client.post('/datasets/10/rate', json={\"rating\": 4})\n         if response.status_code == 302 or response.status_code == 401:\n             print(\"Error esperado: No autorizado.\")\n         else:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    @task(5)\n+    @task\n     def create_dataset(self):\n         \"\"\"Simula la creaci\u00f3n de un nuevo dataset.\"\"\"\n         dataset_payload = {\n@@ -156,10 +129,10 @@ def create_dataset(self):\n             if response.status_code != 200 or \"error\" in response.text.lower():\n                 response.failure(\"Dataset creation failed\")\n \n-    @task(6)\n+    @task\n     def view_user_datasets(self):\n         \"\"\"Simula la visualizaci\u00f3n de la p\u00e1gina de datasets del usuario.\"\"\"\n-        user_id = 7\n+        user_id = 2\n         with self.client.get(\n             f\"/api/v1/datasets/user/{user_id}\",\n             name=\"View User Datasets\",\n@@ -171,6 +144,6 @@ def view_user_datasets(self):\n \n class DatasetUser(HttpUser):\n     tasks = [DatasetBehavior]\n-    min_wait = 5000  # Tiempo de espera m\u00ednimo en milisegundos (5 segundos)\n-    max_wait = 9000  # Tiempo de espera m\u00e1ximo en milisegundos (9 segundos)\n+    min_wait = 5\n+    max_wait = 9\n     host = get_host_for_locust_testing()"
      },
      {
        "sha": "3795ef6e0f403b902958f1ca1127686ba392de09",
        "filename": "scripts/run-selenium.sh",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/6a79de095b62520878505bf6e6a16cddfeb38858/scripts%2Frun-selenium.sh",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/6a79de095b62520878505bf6e6a16cddfeb38858/scripts%2Frun-selenium.sh",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/scripts%2Frun-selenium.sh?ref=6a79de095b62520878505bf6e6a16cddfeb38858",
        "patch": "@@ -0,0 +1,4 @@\n+#!/bin/bash\n+#Los siguientes modules los ignoramos porque tienen tests vacios: fakenodo webhook featuremodel flamapy hubfile\n+#EL reset de la BD y El orden es importante porque hay algun test que modifica BD \n+rosemary db:reset -y && rosemary db:seed && rosemary selenium auth && rosemary selenium explore && pytest app/modules/dataset/tests/test_selenium3.py && rosemary selenium dataset && pytest app/modules/dataset/tests/test_selenium2.py"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/136",
    "id": 2237809081,
    "node_id": "PR_kwDONB39G86FYkG5",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/136",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/136.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/136.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/136",
    "number": 136,
    "state": "closed",
    "locked": false,
    "title": "Add script",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-16T16:45:22Z",
    "updated_at": "2024-12-16T16:56:18Z",
    "closed_at": "2024-12-16T16:56:14Z",
    "merged_at": "2024-12-16T16:56:14Z",
    "merge_commit_sha": "40495fdbadc1a339b3e841f4866527964789d11f",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/136/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/136/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/136/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/e4cbd1164b7a924811ae8217b7b5033a1177cce1",
    "head": {
      "label": "TostaHub:addScript",
      "ref": "addScript",
      "sha": "e4cbd1164b7a924811ae8217b7b5033a1177cce1",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "d2a349f3a94b3a8d3cb9600d48017859161b513f",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/136"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/136"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/136"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/136/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/136/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/136/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/e4cbd1164b7a924811ae8217b7b5033a1177cce1"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "3795ef6e0f403b902958f1ca1127686ba392de09",
        "filename": "scripts/run-selenium.sh",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e4cbd1164b7a924811ae8217b7b5033a1177cce1/scripts%2Frun-selenium.sh",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e4cbd1164b7a924811ae8217b7b5033a1177cce1/scripts%2Frun-selenium.sh",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/scripts%2Frun-selenium.sh?ref=e4cbd1164b7a924811ae8217b7b5033a1177cce1",
        "patch": "@@ -0,0 +1,4 @@\n+#!/bin/bash\n+#Los siguientes modules los ignoramos porque tienen tests vacios: fakenodo webhook featuremodel flamapy hubfile\n+#EL reset de la BD y El orden es importante porque hay algun test que modifica BD \n+rosemary db:reset -y && rosemary db:seed && rosemary selenium auth && rosemary selenium explore && pytest app/modules/dataset/tests/test_selenium3.py && rosemary selenium dataset && pytest app/modules/dataset/tests/test_selenium2.py"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/135",
    "id": 2235898322,
    "node_id": "PR_kwDONB39G86FRRnS",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/135",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/135.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/135.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/135",
    "number": 135,
    "state": "closed",
    "locked": false,
    "title": "fix : Fixed selenium test",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-15T17:20:54Z",
    "updated_at": "2024-12-16T16:01:10Z",
    "closed_at": "2024-12-15T17:22:38Z",
    "merged_at": "2024-12-15T17:22:38Z",
    "merge_commit_sha": "0dc731d08f2c42ab1d11d26b85c73eecc3898b20",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/135/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/135/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/135/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/dba486bae8ce6453b94fa6967d520b99d779e57d",
    "head": {
      "label": "TostaHub:seleniumTest3",
      "ref": "seleniumTest3",
      "sha": "dba486bae8ce6453b94fa6967d520b99d779e57d",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "ac27d2081ec79b00f8fc75d5ce6c0611d50100f3",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/135"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/135"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/135"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/135/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/135/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/135/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/dba486bae8ce6453b94fa6967d520b99d779e57d"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "a0626850a06be1505386078f8f66884b77e64baa",
        "filename": "app/modules/dataset/tests/test_selenium3.py",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/dba486bae8ce6453b94fa6967d520b99d779e57d/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium3.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/dba486bae8ce6453b94fa6967d520b99d779e57d/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium3.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium3.py?ref=dba486bae8ce6453b94fa6967d520b99d779e57d",
        "patch": "@@ -0,0 +1,30 @@\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver\n+# import pytest\n+from selenium.webdriver.common.by import By  # type: ignore\n+\n+\n+class TestTestrate():\n+    def setup_method(self, method):\n+        self.driver = initialize_driver()\n+        self.vars = {}\n+\n+        self.driver.get(get_host_for_selenium_testing())\n+\n+    def teardown_method(self, method):\n+        self.driver.quit()\n+\n+    def test_testrate(self):\n+        self.driver.get(\"http://localhost:5000/\")\n+        self.driver.set_window_size(1850, 1053)\n+        self.driver.find_element(By.LINK_TEXT, \"Title\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \".nav-link:nth-child(1)\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \".row:nth-child(2) > .col-md-6 > .mb-3\").click()\n+        self.driver.find_element(By.ID, \"email\").click()\n+        self.driver.find_element(By.ID, \"email\").send_keys(\"user1@example.com\")\n+        self.driver.find_element(By.ID, \"password\").send_keys(\"1234\")\n+        self.driver.find_element(By.ID, \"submit\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"Title\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \"span:nth-child(5)\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \"div:nth-child(1) > button\").click()"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/134",
    "id": 2235896795,
    "node_id": "PR_kwDONB39G86FRRPb",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/134",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/134.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/134.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/134",
    "number": 134,
    "state": "closed",
    "locked": false,
    "title": "Fix selenium dataset",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-15T17:16:54Z",
    "updated_at": "2024-12-16T16:01:14Z",
    "closed_at": "2024-12-15T17:17:29Z",
    "merged_at": null,
    "merge_commit_sha": null,
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/134/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/134/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/134/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/47d92435b893cb7b1478a4b18dbf06f323e47a86",
    "head": {
      "label": "TostaHub:fixSeleniumDataset",
      "ref": "fixSeleniumDataset",
      "sha": "47d92435b893cb7b1478a4b18dbf06f323e47a86",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "ac27d2081ec79b00f8fc75d5ce6c0611d50100f3",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/134"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/134"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/134"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/134/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/134/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/134/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/47d92435b893cb7b1478a4b18dbf06f323e47a86"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "9308a538487ba12b7800a84fe46b9834b90fd2a4",
        "filename": "app/modules/dataset/tests/test_selenium3.py",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/47d92435b893cb7b1478a4b18dbf06f323e47a86/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium3.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/47d92435b893cb7b1478a4b18dbf06f323e47a86/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium3.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium3.py?ref=47d92435b893cb7b1478a4b18dbf06f323e47a86",
        "previous_filename": "app/modules/dataset/tests/test_selenium.py"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/133",
    "id": 2235893274,
    "node_id": "PR_kwDONB39G86FRQYa",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/133",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/133.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/133.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/133",
    "number": 133,
    "state": "closed",
    "locked": false,
    "title": "fix: selenium tests",
    "user": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-15T17:07:05Z",
    "updated_at": "2024-12-15T17:15:00Z",
    "closed_at": "2024-12-15T17:14:50Z",
    "merged_at": "2024-12-15T17:14:50Z",
    "merge_commit_sha": "ac27d2081ec79b00f8fc75d5ce6c0611d50100f3",
    "assignee": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pabmatang",
        "id": 73099537,
        "node_id": "MDQ6VXNlcjczMDk5NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pabmatang",
        "html_url": "https://github.com/pabmatang",
        "followers_url": "https://api.github.com/users/pabmatang/followers",
        "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
        "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
        "organizations_url": "https://api.github.com/users/pabmatang/orgs",
        "repos_url": "https://api.github.com/users/pabmatang/repos",
        "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pabmatang/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/133/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/133/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/133/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/eb1ca01d07f1af4968db42f312c767da778726af",
    "head": {
      "label": "TostaHub:fixSeleniumTest",
      "ref": "fixSeleniumTest",
      "sha": "eb1ca01d07f1af4968db42f312c767da778726af",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "84b8aeee769063eafb51e955a64e7977a1e5ad3d",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/133"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/133"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/133"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/133/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/133/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/133/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/eb1ca01d07f1af4968db42f312c767da778726af"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "2d90ca0b17e12bed8ddce1edc6a7e1e20d642eb7",
        "filename": "app/modules/dataset/tests/test_selenium2.py",
        "status": "modified",
        "additions": 0,
        "deletions": 109,
        "changes": 109,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/eb1ca01d07f1af4968db42f312c767da778726af/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium2.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/eb1ca01d07f1af4968db42f312c767da778726af/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium2.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium2.py?ref=eb1ca01d07f1af4968db42f312c767da778726af",
        "patch": "@@ -1,8 +1,5 @@\n-import os\n-import time\n \n from selenium.webdriver.common.by import By\n-from selenium.webdriver.common.keys import Keys\n from selenium.webdriver.support.ui import WebDriverWait\n from selenium.webdriver.support import expected_conditions as EC\n \n@@ -27,111 +24,6 @@ def count_datasets(driver, host):\n     return amount_datasets\n \n \n-def test_upload_dataset():\n-    driver = initialize_driver()\n-\n-    try:\n-        host = get_host_for_selenium_testing()\n-\n-        # Open the login page\n-        driver.get(f\"{host}/login\")\n-        wait_for_page_to_load(driver)\n-\n-        # Find the username and password field and enter the values\n-        email_field = driver.find_element(By.NAME, \"email\")\n-        password_field = driver.find_element(By.NAME, \"password\")\n-\n-        email_field.send_keys(\"user1@example.com\")\n-        password_field.send_keys(\"1234\")\n-\n-        # Send the form\n-        password_field.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-\n-        # Count initial datasets\n-        initial_datasets = count_datasets(driver, host)\n-\n-        # Open the upload dataset\n-        driver.get(f\"{host}/dataset/upload\")\n-        wait_for_page_to_load(driver)\n-\n-        # Find basic info and UVL model and fill values\n-        title_field = driver.find_element(By.NAME, \"title\")\n-        title_field.send_keys(\"Title\")\n-        desc_field = driver.find_element(By.NAME, \"desc\")\n-        desc_field.send_keys(\"Description\")\n-        tags_field = driver.find_element(By.NAME, \"tags\")\n-        tags_field.send_keys(\"tag1,tag2\")\n-\n-        # Add two authors and fill\n-        add_author_button = driver.find_element(By.ID, \"add_author\")\n-        add_author_button.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-        add_author_button.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-\n-        name_field0 = driver.find_element(By.NAME, \"authors-0-name\")\n-        name_field0.send_keys(\"Author0\")\n-        affiliation_field0 = driver.find_element(By.NAME, \"authors-0-affiliation\")\n-        affiliation_field0.send_keys(\"Club0\")\n-        orcid_field0 = driver.find_element(By.NAME, \"authors-0-orcid\")\n-        orcid_field0.send_keys(\"0000-0000-0000-0000\")\n-\n-        name_field1 = driver.find_element(By.NAME, \"authors-1-name\")\n-        name_field1.send_keys(\"Author1\")\n-        affiliation_field1 = driver.find_element(By.NAME, \"authors-1-affiliation\")\n-        affiliation_field1.send_keys(\"Club1\")\n-\n-        # Obt\u00e9n las rutas absolutas de los archivos\n-        file1_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file1.uvl\")\n-        file2_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file2.uvl\")\n-\n-        # Subir el primer archivo\n-        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n-        dropzone.send_keys(file1_path)\n-        wait_for_page_to_load(driver)\n-\n-        # Subir el segundo archivo\n-        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n-        dropzone.send_keys(file2_path)\n-        wait_for_page_to_load(driver)\n-\n-        # Add authors in UVL models\n-        show_button = driver.find_element(By.ID, \"0_button\")\n-        show_button.send_keys(Keys.RETURN)\n-        add_author_uvl_button = driver.find_element(By.ID, \"0_form_authors_button\")\n-        add_author_uvl_button.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-\n-        name_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-name\")\n-        name_field.send_keys(\"Author3\")\n-        affiliation_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-affiliation\")\n-        affiliation_field.send_keys(\"Club3\")\n-\n-        # Check I agree and send form\n-        check = driver.find_element(By.ID, \"agreeCheckbox\")\n-        check.send_keys(Keys.SPACE)\n-        wait_for_page_to_load(driver)\n-\n-        upload_btn = driver.find_element(By.ID, \"upload_button\")\n-        upload_btn.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-        time.sleep(2)  # Force wait time\n-\n-        assert driver.current_url == f\"{host}/dataset/list\", \"Test failed!\"\n-\n-        # Count final datasets\n-        final_datasets = count_datasets(driver, host)\n-        assert final_datasets == initial_datasets + 1, \"Test failed!\"\n-\n-        print(\"Test 1 passed!\")\n-\n-    finally:\n-\n-        # Close the browser\n-        close_driver(driver)\n-\n-\n def test_testViewUserProfileSelenium():\n     driver = initialize_driver()\n \n@@ -216,6 +108,5 @@ def test_DownloadUvlDataset():\n         close_driver(driver)\n \n \n-test_upload_dataset()\n test_testViewUserProfileSelenium()\n test_DownloadUvlDataset()"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/132",
    "id": 2235892436,
    "node_id": "PR_kwDONB39G86FRQLU",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/132",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/132.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/132.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/132",
    "number": 132,
    "state": "closed",
    "locked": false,
    "title": "Develop",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-15T17:04:41Z",
    "updated_at": "2024-12-15T21:26:34Z",
    "closed_at": "2024-12-15T21:26:34Z",
    "merged_at": "2024-12-15T21:26:34Z",
    "merge_commit_sha": "2d539c71dbfda6d7646518fa12c56b740e919b0c",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/132/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/132/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/132/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d2a349f3a94b3a8d3cb9600d48017859161b513f",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "d2a349f3a94b3a8d3cb9600d48017859161b513f",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "2df3408ec843c466272af04ba70507ae69de6166",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/132"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/132"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/132"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/132/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/132/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/132/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d2a349f3a94b3a8d3cb9600d48017859161b513f"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "22615634a83e92b4e215d6c8e28197eb51ca6a96",
        "filename": "app/modules/dataset/forms.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Fforms.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Fforms.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fforms.py?ref=d2a349f3a94b3a8d3cb9600d48017859161b513f",
        "patch": "@@ -7,6 +7,7 @@\n \n \n class EditDatasetForm(FlaskForm):\n+    title = TextAreaField('Title', validators=[DataRequired()])\n     description = TextAreaField('Description', validators=[DataRequired()])\n     publication_type = SelectField(\n         'Publication Type',"
      },
      {
        "sha": "4428b0d3eae3b7d3bfa4b6f32251d5346257a837",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=d2a349f3a94b3a8d3cb9600d48017859161b513f",
        "patch": "@@ -417,26 +417,31 @@ def edit_dataset(dataset_id):\n     # Obtener el dataset a partir de su ID\n     dataset = DataSetService().get_by_id(dataset_id)\n \n+    # Verificar si el dataset existe\n+    if dataset is None:\n+        abort(404)  # Manejo de error si el dataset no existe\n+\n     # Verificar si el usuario logueado es el propietario del dataset\n     if dataset.user_id != current_user.id:\n-        # Si el usuario no es el propietario, mostrar un error 403 (Prohibido)\n-        abort(403)\n+        abort(403)  # Si el usuario no es el propietario, mostrar un error 403 (Prohibido)\n \n     form = EditDatasetForm()\n \n     if form.validate_on_submit():\n         # Asignar valores del formulario al modelo DSMetaData\n+        dataset.ds_meta_data.title = form.title.data\n         dataset.ds_meta_data.description = form.description.data\n         dataset.ds_meta_data.publication_type = PublicationType[form.publication_type.data]\n         dataset.ds_meta_data.tags = form.tags.data\n \n         # Guardar los cambios en la base de datos\n         DataSetService().update(dataset)\n \n-        flash(\"Dataset updated successfully\", \"success\")\n+        flash(\"Dataset updated successfully\", \"success\")  # Mensaje de \u00e9xito\n         return redirect(url_for('dataset.view_dataset', dataset_id=dataset_id))\n \n     # Pre-popular el formulario con los datos existentes del dataset\n+    form.title.data = dataset.ds_meta_data.description\n     form.description.data = dataset.ds_meta_data.description\n     form.publication_type.data = dataset.ds_meta_data.publication_type.name\n     form.tags.data = dataset.ds_meta_data.tags"
      },
      {
        "sha": "c2e837c54141bed31b842d7d2274a11cb155ae7c",
        "filename": "app/modules/dataset/templates/dataset/edit_dataset.html",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fedit_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fedit_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fedit_dataset.html?ref=d2a349f3a94b3a8d3cb9600d48017859161b513f",
        "patch": "@@ -74,6 +74,10 @@\n         <h2>Edit Dataset</h2>\n         <form method=\"POST\" action=\"{{ url_for('dataset.edit_dataset', dataset_id=dataset.id) }}\">\n             {{ form.hidden_tag() }}\n+            <div class=\"form-group\">\n+                <label for=\"title\">Title</label>\n+                {{ form.title(size=60) }}\n+            </div>\n             <div class=\"form-group\">\n                 <label for=\"description\">Description</label>\n                 {{ form.description(size=60) }}"
      },
      {
        "sha": "334d39eebccca8cd6c87261923e3ece07f46aafa",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 56,
        "deletions": 2,
        "changes": 58,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=d2a349f3a94b3a8d3cb9600d48017859161b513f",
        "patch": "@@ -2,20 +2,28 @@\n from core.locust.common import get_csrf_token\n from locust import HttpUser, TaskSet, task\n from core.environment.host import get_host_for_locust_testing\n+import time\n \n \n class DatasetBehavior(TaskSet):\n     def on_start(self):\n-\n         \"\"\"Realiza el login antes de iniciar las tareas de la prueba.\"\"\"\n         response = self.client.post('/login', json={\n             'email': 'user1@example.com',\n             'password': '1234'\n         })\n+\n         self.csrf_token = get_csrf_token(response)\n         if response.status_code == 200:\n             print(\"Login exitoso.\")\n+            self.token = response.json().get(\"token\", None)\n+        else:\n+            self.token = None\n+            print(\"Error en el login:\", response.status_code)\n \n+        self.csrf_token = get_csrf_token(response)\n+        if response.status_code == 200:\n+            print(\"Login exitoso.\")\n             self.session_cookies = response.cookies\n         else:\n             print(\"Error en el login:\", response.status_code, response.text)\n@@ -29,6 +37,53 @@ def on_start(self):\n         self.rate_dataset_success()\n         self.rate_dataset_unauthorized()\n \n+    @task(2)\n+    def edit_dataset_success(self):\n+        \"\"\"Simula un usuario editando un dataset exitosamente.\"\"\"\n+        # Agregar un retraso para permitir que los valores se actualicen\n+        time.sleep(5)  # Espera 5 segundos\n+        headers = {\"Authorization\": f\"Bearer {self.token}\"} if self.token else {}\n+        response = self.client.post('/dataset/1/edit', json={\n+            \"description\": \"Updated description from Locust\",\n+            \"publication_type\": \"RESEARCH_PAPER\",\n+            \"tags\": \"locust, test\"\n+        }, headers=headers)\n+        if response.status_code == 200:\n+            print(\"Dataset editado exitosamente.\")\n+        else:\n+            print(\"Error al editar el dataset:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def edit_dataset_unauthorized(self):\n+        \"\"\"Simula un usuario no autenticado intentando editar un dataset.\"\"\"\n+        response = self.client.post('/dataset/1/edit', json={\n+            \"description\": \"Unauthorized edit attempt\",\n+            \"publication_type\": \"RESEARCH_PAPER\",\n+            \"tags\": \"unauthorized\"\n+        })\n+        if response.status_code == 401 or response.status_code == 403:\n+            print(\"Error esperado: No autorizado.\")\n+        else:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def view_dataset(self):\n+        \"\"\"Simula un usuario viendo un dataset.\"\"\"\n+        response = self.client.get('/dataset/1')\n+        if response.status_code == 200:\n+            print(\"Dataset visto exitosamente.\")\n+        else:\n+            print(\"Error al ver el dataset:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def view_nonexistent_dataset(self):\n+        \"\"\"Simula un usuario intentando ver un dataset inexistente.\"\"\"\n+        response = self.client.get('/dataset/9999')\n+        if response.status_code == 404:\n+            print(\"Error esperado: Dataset no encontrado.\")\n+        else:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n+\n     @task\n     def dataset(self):\n         response = self.client.get(\"/dataset/upload\")\n@@ -91,7 +146,6 @@ def create_dataset(self):\n             \"description\": \"This is a test dataset created during load testing.\",\n             \"publication_type\": \"Open Access\",\n             \"_csrf_token\": self.csrf_token\n-\n         }\n         with self.client.post(\n             \"/dataset/upload\","
      },
      {
        "sha": "8a65703a154f780b0be9dae8463b12139e26f4db",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 67,
        "deletions": 7,
        "changes": 74,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=d2a349f3a94b3a8d3cb9600d48017859161b513f",
        "patch": "@@ -1,15 +1,76 @@\n import os\n import time\n-\n+from selenium import webdriver\n from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.action_chains import ActionChains\n from selenium.webdriver.common.keys import Keys\n from selenium.webdriver.support.ui import WebDriverWait\n from selenium.webdriver.support import expected_conditions as EC\n-\n from core.environment.host import get_host_for_selenium_testing\n from core.selenium.common import initialize_driver, close_driver\n \n \n+class TestSelenium:\n+    def setup_method(self, method):\n+        self.driver = webdriver.Chrome()\n+        self.vars = {}\n+\n+    def teardown_method(self, method):\n+        self.driver.quit()\n+\n+    def test_testselenium(self):\n+        self.driver.get(\"http://127.0.0.1:5000/\")\n+        self.driver.set_window_size(1850, 1053)\n+        self.driver.find_element(By.CSS_SELECTOR, \".nav-link:nth-child(1)\").click()\n+        self.driver.find_element(By.ID, \"submit\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(7) .align-middle:nth-child(2)\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"ffffddccdd\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \".nav-link:nth-child(1)\").click()\n+        self.driver.find_element(By.ID, \"email\").send_keys(\"user1@example.com\")\n+        self.driver.find_element(By.ID, \"password\").send_keys(\"1234\")\n+        self.driver.find_element(By.ID, \"submit\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"My datasets\").click()\n+        self.driver.find_element(By.CSS_SELECTOR,\n+                                 \".card-body:nth-child(1)>.table tr:nth-child(2)>td:nth-child(1)\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"ffffddccdd\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n+        self.driver.find_element(By.ID, \"title\").click()\n+        self.driver.find_element(By.ID, \"title\").click()\n+        element = self.driver.find_element(By.ID, \"title\")\n+        actions = ActionChains(self.driver)\n+        actions.double_click(element).perform()\n+        self.driver.find_element(By.ID, \"title\").click()\n+        self.driver.find_element(By.ID, \"title\").click()\n+        self.driver.find_element(By.ID, \"title\").send_keys(\"Hola\")\n+        self.driver.find_element(By.CSS_SELECTOR, \"button\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n+        self.driver.find_element(By.ID, \"title\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n+        self.driver.find_element(By.ID, \"description\").click()\n+        self.driver.find_element(By.ID, \"description\").click()\n+        self.driver.find_element(By.ID, \"description\").click()\n+        element = self.driver.find_element(By.ID, \"description\")\n+        actions = ActionChains(self.driver)\n+        actions.double_click(element).perform()\n+        self.driver.find_element(By.ID, \"description\").click()\n+        self.driver.find_element(By.ID, \"description\").send_keys(\"hola\")\n+        self.driver.find_element(By.CSS_SELECTOR, \"button\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n+        dropdown = self.driver.find_element(By.ID, \"publication_type\")\n+        dropdown.find_element(By.XPATH, \"//option[. = 'taxonomictreatment']\").click()\n+        element = self.driver.find_element(By.ID, \"publication_type\")\n+        actions = ActionChains(self.driver)\n+        actions.move_to_element(element).click_and_hold().perform()\n+        element = self.driver.find_element(By.ID, \"publication_type\")\n+        actions = ActionChains(self.driver)\n+        actions.move_to_element(element).perform()\n+        element = self.driver.find_element(By.ID, \"publication_type\")\n+        actions = ActionChains(self.driver)\n+        actions.move_to_element(element).release().perform()\n+        self.driver.find_element(By.CSS_SELECTOR, \"button\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(7) .align-middle:nth-child(2)\").click()\n+\n+\n def wait_for_page_to_load(driver, timeout=4):\n     WebDriverWait(driver, timeout).until(\n         lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n@@ -19,7 +80,6 @@ def wait_for_page_to_load(driver, timeout=4):\n def count_datasets(driver, host):\n     driver.get(f\"{host}/dataset/list\")\n     wait_for_page_to_load(driver)\n-\n     try:\n         amount_datasets = len(driver.find_elements(By.XPATH, \"//table//tbody//tr\"))\n     except Exception:\n@@ -127,17 +187,14 @@ def test_upload_dataset():\n         print(\"Test 1 passed!\")\n \n     finally:\n-\n         # Close the browser\n         close_driver(driver)\n \n \n def test_testViewUserProfileSelenium():\n     driver = initialize_driver()\n-\n     try:\n         host = get_host_for_selenium_testing()\n-\n         # Open the login page\n         driver.get(f\"{host}\")\n         wait_for_page_to_load(driver)\n@@ -175,7 +232,6 @@ def test_testViewUserProfileSelenium():\n         print(\"Test 2 passed!\")\n \n     finally:\n-\n         # Close the browser\n         close_driver(driver)\n \n@@ -217,6 +273,10 @@ def test_DownloadUvlDataset():\n \n \n # Call the test function\n+\n+\n test_upload_dataset()\n+\n+\n test_testViewUserProfileSelenium()\n test_DownloadUvlDataset()"
      },
      {
        "sha": "2d90ca0b17e12bed8ddce1edc6a7e1e20d642eb7",
        "filename": "app/modules/dataset/tests/test_selenium2.py",
        "status": "added",
        "additions": 112,
        "deletions": 0,
        "changes": 112,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium2.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium2.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium2.py?ref=d2a349f3a94b3a8d3cb9600d48017859161b513f",
        "patch": "@@ -0,0 +1,112 @@\n+\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def wait_for_page_to_load(driver, timeout=4):\n+    WebDriverWait(driver, timeout).until(\n+        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+    )\n+\n+\n+def count_datasets(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets\n+\n+\n+def test_testViewUserProfileSelenium():\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the login page\n+        driver.get(f\"{host}\")\n+        wait_for_page_to_load(driver)\n+\n+        # Espera expl\u00edcita para \"Sample dataset 4\"\n+        WebDriverWait(driver, 50).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 4\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Doe, Jane\"\n+        WebDriverWait(driver, 50).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, Jane\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para el men\u00fa de hamburguesa\n+        WebDriverWait(driver, 50).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \".hamburger\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para el elemento de la barra lateral\n+        WebDriverWait(driver, 50).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \".sidebar-item:nth-child(2) .align-middle:nth-child(2)\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Sample dataset 3\"\n+        WebDriverWait(driver, 50).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 3\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Doe, John\"\n+        WebDriverWait(driver, 50).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, John\"))\n+        ).click()\n+\n+        print(\"Test 2 passed!\")\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+def test_DownloadUvlDataset():\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the login page\n+        driver.get(f\"{host}\")\n+        wait_for_page_to_load(driver)\n+\n+        driver.find_element(By.LINK_TEXT, \"Sample dataset 4\").click()\n+        driver.find_element(By.LINK_TEXT, \"Doe, Jane\").click()\n+        driver.find_element(By.LINK_TEXT, \"Sample dataset 2\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"Glencoe\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"DIMACS\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"SPLOT\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport25\").click()\n+        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport26\").click()\n+        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n+\n+        print(\"Test 3 passed!\")\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+test_testViewUserProfileSelenium()\n+test_DownloadUvlDataset()"
      },
      {
        "sha": "a0626850a06be1505386078f8f66884b77e64baa",
        "filename": "app/modules/dataset/tests/test_selenium3.py",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium3.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium3.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium3.py?ref=d2a349f3a94b3a8d3cb9600d48017859161b513f",
        "patch": "@@ -0,0 +1,30 @@\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver\n+# import pytest\n+from selenium.webdriver.common.by import By  # type: ignore\n+\n+\n+class TestTestrate():\n+    def setup_method(self, method):\n+        self.driver = initialize_driver()\n+        self.vars = {}\n+\n+        self.driver.get(get_host_for_selenium_testing())\n+\n+    def teardown_method(self, method):\n+        self.driver.quit()\n+\n+    def test_testrate(self):\n+        self.driver.get(\"http://localhost:5000/\")\n+        self.driver.set_window_size(1850, 1053)\n+        self.driver.find_element(By.LINK_TEXT, \"Title\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \".nav-link:nth-child(1)\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \".row:nth-child(2) > .col-md-6 > .mb-3\").click()\n+        self.driver.find_element(By.ID, \"email\").click()\n+        self.driver.find_element(By.ID, \"email\").send_keys(\"user1@example.com\")\n+        self.driver.find_element(By.ID, \"password\").send_keys(\"1234\")\n+        self.driver.find_element(By.ID, \"submit\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"Title\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \"span:nth-child(5)\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \"div:nth-child(1) > button\").click()"
      },
      {
        "sha": "414c5252d421ecb3b59352f146319bb8e40e0ceb",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 116,
        "deletions": 101,
        "changes": 217,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=d2a349f3a94b3a8d3cb9600d48017859161b513f",
        "patch": "@@ -1,101 +1,116 @@\n-import unittest\n-from unittest.mock import patch, MagicMock\n-import os\n-from app import app\n-\n-\n-class TestDownloadAllFormats(unittest.TestCase):\n-\n-    def setUp(self):\n-        # Configura una instancia de la aplicaci\u00f3n para pruebas\n-        self.app = app.test_client()\n-        self.app.testing = True\n-\n-    @patch('app.modules.dataset.routes.generate_uvl_file')\n-    @patch('app.modules.dataset.routes.generate_glencoe_file')\n-    @patch('app.modules.dataset.routes.generate_cnf_file')\n-    @patch('app.modules.dataset.routes.generate_splot_file')\n-    @patch('app.modules.dataset.routes.send_file')\n-    def test_download_all_formats_success(\n-        self,\n-        mock_send_file,\n-        mock_generate_splot,\n-        mock_generate_cnf,\n-        mock_generate_glencoe,\n-        mock_generate_uvl\n-    ):\n-        # Mockear las rutas de los archivos generados\n-        mock_generate_uvl.return_value = '/tmp/file.uvl'\n-        mock_generate_glencoe.return_value = '/tmp/file_glencoe.json'\n-        mock_generate_cnf.return_value = '/tmp/file.cnf'\n-        mock_generate_splot.return_value = '/tmp/file.splx'\n-\n-        # Mockear el comportamiento de send_file\n-        mock_send_file.return_value = MagicMock()\n-\n-        # Simular la existencia de los archivos\n-        for path in [\n-            mock_generate_uvl.return_value,\n-            mock_generate_glencoe.return_value,\n-            mock_generate_cnf.return_value,\n-            mock_generate_splot.return_value\n-        ]:\n-            with open(path, 'w') as f:\n-                f.write('mock content')\n-\n-        # Hacer la solicitud a la ruta\n-        response = self.app.get('/download_all/123')\n-\n-        # Validar que la respuesta sea exitosa\n-        self.assertEqual(response.status_code, 200)\n-        mock_send_file.assert_called_once()\n-\n-        # Verificar que los m\u00e9todos de generaci\u00f3n se llamaron con el ID correcto\n-        mock_generate_uvl.assert_called_once_with(123)\n-        mock_generate_glencoe.assert_called_once_with(123)\n-        mock_generate_cnf.assert_called_once_with(123)\n-        mock_generate_splot.assert_called_once_with(123)\n-\n-        # Limpiar los archivos temporales\n-        for path in [\n-            mock_generate_uvl.return_value,\n-            mock_generate_glencoe.return_value,\n-            mock_generate_cnf.return_value,\n-            mock_generate_splot.return_value\n-        ]:\n-            if os.path.exists(path):\n-                os.remove(path)\n-\n-    @patch('app.modules.dataset.routes.generate_uvl_file')\n-    @patch('app.modules.dataset.routes.generate_glencoe_file')\n-    @patch('app.modules.dataset.routes.generate_cnf_file')\n-    @patch('app.modules.dataset.routes.generate_splot_file')\n-    def test_download_all_formats_file_generation_failure(\n-        self,\n-        mock_generate_splot,\n-        mock_generate_cnf,\n-        mock_generate_glencoe,\n-        mock_generate_uvl\n-    ):\n-        # Simular que una de las funciones de generaci\u00f3n lanza un error\n-        mock_generate_uvl.side_effect = RuntimeError(\"UVL generation failed\")\n-        mock_generate_glencoe.return_value = '/tmp/file_glencoe.json'\n-        mock_generate_cnf.return_value = '/tmp/file.cnf'\n-        mock_generate_splot.return_value = '/tmp/file.splx'\n-\n-        # Hacer la solicitud a la ruta\n-        response = self.app.get('/download_all/123')\n-\n-        # Validar que la respuesta indique un error\n-        self.assertEqual(response.status_code, 500)\n-        self.assertIn(b'\"error\": \"UVL generation failed\"', response.data)\n-\n-        # Verificar que las funciones se llamaron\n-        mock_generate_uvl.assert_called_once_with(123)\n-        mock_generate_glencoe.assert_not_called()\n-        mock_generate_cnf.assert_not_called()\n-        mock_generate_splot.assert_not_called()\n-\n-\n-if __name__ == '__main__':\n-    unittest.main()\n+from datetime import datetime\n+import pytest\n+from flask.testing import FlaskClient\n+from app import create_app, db\n+from app.modules.auth.models import User\n+from app.modules.dataset.models import DataSet, DSMetaData, PublicationType\n+from app.modules.profile.models import UserProfile\n+from app.modules.conftest import login\n+\n+\n+@pytest.fixture\n+def client():\n+    app = create_app('testing')\n+    with app.test_client() as client:\n+        with app.app_context():\n+            # Configuraci\u00f3n de la base de datos en modo de prueba\n+            db.drop_all()\n+            db.create_all()\n+\n+            # Crear usuario principal y perfil asociado\n+            user = User(\n+                id=1,\n+                email=\"user1@example.com\",\n+                password=\"1234\",\n+                created_at=datetime(2022, 3, 13)\n+            )\n+            db.session.add(user)\n+            db.session.commit()\n+\n+            profile = UserProfile(\n+                user_id=user.id,\n+                surname=\"UserSurname\",\n+                name=\"UserName\",\n+                affiliation=\"TestAffiliation\",\n+                orcid=\"0000-0001-2345-6789\"\n+            )\n+            db.session.add(profile)\n+            db.session.commit()\n+\n+            # Crear dataset con metadata\n+            dsmetadata = DSMetaData(\n+                id=1,\n+                title=\"Editable Dataset\",\n+                description=\"Initial description\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name,\n+                tags=\"sample, dataset\"\n+            )\n+            db.session.add(dsmetadata)\n+            dataset = DataSet(\n+                id=1,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata.id\n+            )\n+            db.session.add(dataset)\n+            db.session.commit()\n+\n+            # Crear otro usuario sin acceso al dataset\n+            other_user = User(\n+                id=2,\n+                email=\"user2@example.com\",\n+                password=\"1234\",\n+                created_at=datetime(2022, 3, 13)\n+            )\n+            db.session.add(other_user)\n+            db.session.commit()\n+\n+            yield client\n+\n+            db.session.remove()\n+            db.drop_all()\n+\n+\n+def test_edit_dataset_access_denied(client: FlaskClient):\n+    \"\"\"Prueba para asegurar que un usuario no propietario no pueda editar un dataset.\"\"\"\n+    # Iniciar sesi\u00f3n como otro usuario (no propietario del dataset)\n+    login_response = login(client, \"user2@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+    # Intentar editar el dataset\n+    response = client.post(\n+        '/dataset/1/edit',\n+        data={\n+            \"description\": \"Another description\",\n+            \"publication_type\": \"RESEARCH_PAPER\",\n+            \"tags\": \"unauthorized, edit\"\n+        }\n+    )\n+    assert response.status_code == 403, \"El c\u00f3digo de estado deber\u00eda ser 403 para usuarios no autorizados.\"\n+\n+\n+def test_edit_dataset_invalid_form(client: FlaskClient):\n+    \"\"\"Prueba para un formulario inv\u00e1lido.\"\"\"\n+    # Iniciar sesi\u00f3n como propietario del dataset\n+    login_response = login(client, \"user1@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+\n+    # Intentar enviar un formulario con datos inv\u00e1lidos\n+    response = client.post(\n+        '/dataset/1/edit',\n+        data={\n+            \"description\": \"\",  # Campo requerido vac\u00edo\n+            \"publication_type\": \"INVALID_TYPE\",  # Tipo de publicaci\u00f3n inv\u00e1lido\n+            \"tags\": \"\"\n+        }\n+    )\n+    assert response.status_code == 200, \"El c\u00f3digo de estado deber\u00eda ser 200 al mostrar los errores del formulario.\"\n+\n+\n+def test_edit_dataset_not_found(client: FlaskClient):\n+    \"\"\"Prueba para intentar editar un dataset inexistente.\"\"\"\n+    # Iniciar sesi\u00f3n como usuario v\u00e1lido\n+    login_response = login(client, \"user1@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+\n+    # Intentar acceder a un dataset inexistente\n+    response = client.get('/dataset/999/edit')\n+    assert response.status_code == 404, \"El c\u00f3digo de estado deber\u00eda ser 404 para un dataset inexistente.\""
      },
      {
        "sha": "4e65d903ab1c9206701ad117e2c746eda11ba87a",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d2a349f3a94b3a8d3cb9600d48017859161b513f/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=d2a349f3a94b3a8d3cb9600d48017859161b513f",
        "patch": "@@ -158,9 +158,10 @@ def get_num_configurations(file_id):\n     if status_code != 200:\n         return jsonify({\"error\": \"Internal error\"}), 500\n     hubfile = HubfileService().get_or_404(file_id)\n-    file_name = hubfile.name\n-    directory_path = \"app/modules/dataset/uvl_examples\"\n-    file_path = os.path.join(directory_path, file_name)\n+    # file_name = hubfile.name\n+    # directory_path = \"app/modules/dataset/uvl_examples\"\n+    # file_path = os.path.join(directory_path, file_name)\n+    file_path = hubfile.get_path()\n \n     # Initiallize the dicover metamodel\n     dm = DiscoverMetamodels()"
      },
      {
        "sha": "b6d630f73d6b5f65632f269f36fe264493dba5a8",
        "filename": "docs/Diario de equipoV1.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d2a349f3a94b3a8d3cb9600d48017859161b513f/docs%2FDiario%20de%20equipoV1.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d2a349f3a94b3a8d3cb9600d48017859161b513f/docs%2FDiario%20de%20equipoV1.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FDiario%20de%20equipoV1.pdf?ref=d2a349f3a94b3a8d3cb9600d48017859161b513f"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/131",
    "id": 2235888784,
    "node_id": "PR_kwDONB39G86FRPSQ",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/131",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/131.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/131.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/131",
    "number": 131,
    "state": "closed",
    "locked": false,
    "title": "fix : Fixxed selenium",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-15T16:56:12Z",
    "updated_at": "2024-12-15T17:00:23Z",
    "closed_at": "2024-12-15T17:00:23Z",
    "merged_at": "2024-12-15T17:00:23Z",
    "merge_commit_sha": "8d7aacd1406feaa7e3965898396013310c29311d",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/131/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/131/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/131/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/075bfb76742010ecb91ce4e28e679436206c2c7b",
    "head": {
      "label": "TostaHub:fixSeleniumDataset",
      "ref": "fixSeleniumDataset",
      "sha": "075bfb76742010ecb91ce4e28e679436206c2c7b",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "0521e007d128cb311f74ad7ed3f10753b8838031",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/131"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/131"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/131"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/131/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/131/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/131/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/075bfb76742010ecb91ce4e28e679436206c2c7b"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "706b4e1c2c86733a669dd2127031884c3e7dc6f0",
        "filename": "app/modules/dataset/tests/test_selenium2.py",
        "status": "added",
        "additions": 221,
        "deletions": 0,
        "changes": 221,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/075bfb76742010ecb91ce4e28e679436206c2c7b/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium2.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/075bfb76742010ecb91ce4e28e679436206c2c7b/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium2.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium2.py?ref=075bfb76742010ecb91ce4e28e679436206c2c7b",
        "patch": "@@ -0,0 +1,221 @@\n+import os\n+import time\n+\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.keys import Keys\n+from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def wait_for_page_to_load(driver, timeout=4):\n+    WebDriverWait(driver, timeout).until(\n+        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+    )\n+\n+\n+def count_datasets(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets\n+\n+\n+def test_upload_dataset():\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the login page\n+        driver.get(f\"{host}/login\")\n+        wait_for_page_to_load(driver)\n+\n+        # Find the username and password field and enter the values\n+        email_field = driver.find_element(By.NAME, \"email\")\n+        password_field = driver.find_element(By.NAME, \"password\")\n+\n+        email_field.send_keys(\"user1@example.com\")\n+        password_field.send_keys(\"1234\")\n+\n+        # Send the form\n+        password_field.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        # Count initial datasets\n+        initial_datasets = count_datasets(driver, host)\n+\n+        # Open the upload dataset\n+        driver.get(f\"{host}/dataset/upload\")\n+        wait_for_page_to_load(driver)\n+\n+        # Find basic info and UVL model and fill values\n+        title_field = driver.find_element(By.NAME, \"title\")\n+        title_field.send_keys(\"Title\")\n+        desc_field = driver.find_element(By.NAME, \"desc\")\n+        desc_field.send_keys(\"Description\")\n+        tags_field = driver.find_element(By.NAME, \"tags\")\n+        tags_field.send_keys(\"tag1,tag2\")\n+\n+        # Add two authors and fill\n+        add_author_button = driver.find_element(By.ID, \"add_author\")\n+        add_author_button.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+        add_author_button.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        name_field0 = driver.find_element(By.NAME, \"authors-0-name\")\n+        name_field0.send_keys(\"Author0\")\n+        affiliation_field0 = driver.find_element(By.NAME, \"authors-0-affiliation\")\n+        affiliation_field0.send_keys(\"Club0\")\n+        orcid_field0 = driver.find_element(By.NAME, \"authors-0-orcid\")\n+        orcid_field0.send_keys(\"0000-0000-0000-0000\")\n+\n+        name_field1 = driver.find_element(By.NAME, \"authors-1-name\")\n+        name_field1.send_keys(\"Author1\")\n+        affiliation_field1 = driver.find_element(By.NAME, \"authors-1-affiliation\")\n+        affiliation_field1.send_keys(\"Club1\")\n+\n+        # Obt\u00e9n las rutas absolutas de los archivos\n+        file1_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file1.uvl\")\n+        file2_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file2.uvl\")\n+\n+        # Subir el primer archivo\n+        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+        dropzone.send_keys(file1_path)\n+        wait_for_page_to_load(driver)\n+\n+        # Subir el segundo archivo\n+        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+        dropzone.send_keys(file2_path)\n+        wait_for_page_to_load(driver)\n+\n+        # Add authors in UVL models\n+        show_button = driver.find_element(By.ID, \"0_button\")\n+        show_button.send_keys(Keys.RETURN)\n+        add_author_uvl_button = driver.find_element(By.ID, \"0_form_authors_button\")\n+        add_author_uvl_button.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        name_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-name\")\n+        name_field.send_keys(\"Author3\")\n+        affiliation_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-affiliation\")\n+        affiliation_field.send_keys(\"Club3\")\n+\n+        # Check I agree and send form\n+        check = driver.find_element(By.ID, \"agreeCheckbox\")\n+        check.send_keys(Keys.SPACE)\n+        wait_for_page_to_load(driver)\n+\n+        upload_btn = driver.find_element(By.ID, \"upload_button\")\n+        upload_btn.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+        time.sleep(2)  # Force wait time\n+\n+        assert driver.current_url == f\"{host}/dataset/list\", \"Test failed!\"\n+\n+        # Count final datasets\n+        final_datasets = count_datasets(driver, host)\n+        assert final_datasets == initial_datasets + 1, \"Test failed!\"\n+\n+        print(\"Test 1 passed!\")\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+def test_testViewUserProfileSelenium():\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the login page\n+        driver.get(f\"{host}\")\n+        wait_for_page_to_load(driver)\n+\n+        # Espera expl\u00edcita para \"Sample dataset 4\"\n+        WebDriverWait(driver, 50).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 4\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Doe, Jane\"\n+        WebDriverWait(driver, 50).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, Jane\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para el men\u00fa de hamburguesa\n+        WebDriverWait(driver, 50).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \".hamburger\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para el elemento de la barra lateral\n+        WebDriverWait(driver, 50).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \".sidebar-item:nth-child(2) .align-middle:nth-child(2)\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Sample dataset 3\"\n+        WebDriverWait(driver, 50).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 3\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Doe, John\"\n+        WebDriverWait(driver, 50).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, John\"))\n+        ).click()\n+\n+        print(\"Test 2 passed!\")\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+def test_DownloadUvlDataset():\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the login page\n+        driver.get(f\"{host}\")\n+        wait_for_page_to_load(driver)\n+\n+        driver.find_element(By.LINK_TEXT, \"Sample dataset 4\").click()\n+        driver.find_element(By.LINK_TEXT, \"Doe, Jane\").click()\n+        driver.find_element(By.LINK_TEXT, \"Sample dataset 2\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"Glencoe\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"DIMACS\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"SPLOT\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport25\").click()\n+        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport26\").click()\n+        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n+\n+        print(\"Test 3 passed!\")\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+test_upload_dataset()\n+test_testViewUserProfileSelenium()\n+test_DownloadUvlDataset()"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/130",
    "id": 2235873439,
    "node_id": "PR_kwDONB39G86FRLif",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/130",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/130.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/130.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/130",
    "number": 130,
    "state": "closed",
    "locked": false,
    "title": "fix: Fix not finding file paths in production",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-15T16:21:35Z",
    "updated_at": "2024-12-15T16:32:32Z",
    "closed_at": "2024-12-15T16:32:29Z",
    "merged_at": "2024-12-15T16:32:29Z",
    "merge_commit_sha": "0521e007d128cb311f74ad7ed3f10753b8838031",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/130/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/130/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/130/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d04ad10dd341f20b2f96dd97ebc1b3761c17ef0d",
    "head": {
      "label": "TostaHub:Ahydul-patch-1",
      "ref": "Ahydul-patch-1",
      "sha": "d04ad10dd341f20b2f96dd97ebc1b3761c17ef0d",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "5e60859d833e957cd1f6a58aa54656dcabfd6007",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/130"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/130"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/130"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/130/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/130/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/130/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d04ad10dd341f20b2f96dd97ebc1b3761c17ef0d"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "4e65d903ab1c9206701ad117e2c746eda11ba87a",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d04ad10dd341f20b2f96dd97ebc1b3761c17ef0d/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d04ad10dd341f20b2f96dd97ebc1b3761c17ef0d/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=d04ad10dd341f20b2f96dd97ebc1b3761c17ef0d",
        "patch": "@@ -158,9 +158,10 @@ def get_num_configurations(file_id):\n     if status_code != 200:\n         return jsonify({\"error\": \"Internal error\"}), 500\n     hubfile = HubfileService().get_or_404(file_id)\n-    file_name = hubfile.name\n-    directory_path = \"app/modules/dataset/uvl_examples\"\n-    file_path = os.path.join(directory_path, file_name)\n+    # file_name = hubfile.name\n+    # directory_path = \"app/modules/dataset/uvl_examples\"\n+    # file_path = os.path.join(directory_path, file_name)\n+    file_path = hubfile.get_path()\n \n     # Initiallize the dicover metamodel\n     dm = DiscoverMetamodels()"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/129",
    "id": 2235852502,
    "node_id": "PR_kwDONB39G86FRGbW",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/129",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/129.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/129.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/129",
    "number": 129,
    "state": "closed",
    "locked": false,
    "title": "Integration editMetadata-Develop",
    "user": {
      "login": "luisgp9",
      "id": 73946660,
      "node_id": "MDQ6VXNlcjczOTQ2NjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/73946660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luisgp9",
      "html_url": "https://github.com/luisgp9",
      "followers_url": "https://api.github.com/users/luisgp9/followers",
      "following_url": "https://api.github.com/users/luisgp9/following{/other_user}",
      "gists_url": "https://api.github.com/users/luisgp9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luisgp9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luisgp9/subscriptions",
      "organizations_url": "https://api.github.com/users/luisgp9/orgs",
      "repos_url": "https://api.github.com/users/luisgp9/repos",
      "events_url": "https://api.github.com/users/luisgp9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luisgp9/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-15T15:32:43Z",
    "updated_at": "2024-12-16T16:56:35Z",
    "closed_at": "2024-12-15T17:01:29Z",
    "merged_at": "2024-12-15T17:01:29Z",
    "merge_commit_sha": "84b8aeee769063eafb51e955a64e7977a1e5ad3d",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/129/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/129/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/129/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/19cbe057b85561d4b8167a228cc31a3430fb3636",
    "head": {
      "label": "TostaHub:editMetadata",
      "ref": "editMetadata",
      "sha": "19cbe057b85561d4b8167a228cc31a3430fb3636",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "5e60859d833e957cd1f6a58aa54656dcabfd6007",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/129"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/129"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/129"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/129/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/129/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/129/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/19cbe057b85561d4b8167a228cc31a3430fb3636"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "22615634a83e92b4e215d6c8e28197eb51ca6a96",
        "filename": "app/modules/dataset/forms.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/19cbe057b85561d4b8167a228cc31a3430fb3636/app%2Fmodules%2Fdataset%2Fforms.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/19cbe057b85561d4b8167a228cc31a3430fb3636/app%2Fmodules%2Fdataset%2Fforms.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fforms.py?ref=19cbe057b85561d4b8167a228cc31a3430fb3636",
        "patch": "@@ -7,6 +7,7 @@\n \n \n class EditDatasetForm(FlaskForm):\n+    title = TextAreaField('Title', validators=[DataRequired()])\n     description = TextAreaField('Description', validators=[DataRequired()])\n     publication_type = SelectField(\n         'Publication Type',"
      },
      {
        "sha": "4428b0d3eae3b7d3bfa4b6f32251d5346257a837",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/19cbe057b85561d4b8167a228cc31a3430fb3636/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/19cbe057b85561d4b8167a228cc31a3430fb3636/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=19cbe057b85561d4b8167a228cc31a3430fb3636",
        "patch": "@@ -417,26 +417,31 @@ def edit_dataset(dataset_id):\n     # Obtener el dataset a partir de su ID\n     dataset = DataSetService().get_by_id(dataset_id)\n \n+    # Verificar si el dataset existe\n+    if dataset is None:\n+        abort(404)  # Manejo de error si el dataset no existe\n+\n     # Verificar si el usuario logueado es el propietario del dataset\n     if dataset.user_id != current_user.id:\n-        # Si el usuario no es el propietario, mostrar un error 403 (Prohibido)\n-        abort(403)\n+        abort(403)  # Si el usuario no es el propietario, mostrar un error 403 (Prohibido)\n \n     form = EditDatasetForm()\n \n     if form.validate_on_submit():\n         # Asignar valores del formulario al modelo DSMetaData\n+        dataset.ds_meta_data.title = form.title.data\n         dataset.ds_meta_data.description = form.description.data\n         dataset.ds_meta_data.publication_type = PublicationType[form.publication_type.data]\n         dataset.ds_meta_data.tags = form.tags.data\n \n         # Guardar los cambios en la base de datos\n         DataSetService().update(dataset)\n \n-        flash(\"Dataset updated successfully\", \"success\")\n+        flash(\"Dataset updated successfully\", \"success\")  # Mensaje de \u00e9xito\n         return redirect(url_for('dataset.view_dataset', dataset_id=dataset_id))\n \n     # Pre-popular el formulario con los datos existentes del dataset\n+    form.title.data = dataset.ds_meta_data.description\n     form.description.data = dataset.ds_meta_data.description\n     form.publication_type.data = dataset.ds_meta_data.publication_type.name\n     form.tags.data = dataset.ds_meta_data.tags"
      },
      {
        "sha": "c2e837c54141bed31b842d7d2274a11cb155ae7c",
        "filename": "app/modules/dataset/templates/dataset/edit_dataset.html",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/19cbe057b85561d4b8167a228cc31a3430fb3636/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fedit_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/19cbe057b85561d4b8167a228cc31a3430fb3636/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fedit_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fedit_dataset.html?ref=19cbe057b85561d4b8167a228cc31a3430fb3636",
        "patch": "@@ -74,6 +74,10 @@\n         <h2>Edit Dataset</h2>\n         <form method=\"POST\" action=\"{{ url_for('dataset.edit_dataset', dataset_id=dataset.id) }}\">\n             {{ form.hidden_tag() }}\n+            <div class=\"form-group\">\n+                <label for=\"title\">Title</label>\n+                {{ form.title(size=60) }}\n+            </div>\n             <div class=\"form-group\">\n                 <label for=\"description\">Description</label>\n                 {{ form.description(size=60) }}"
      },
      {
        "sha": "2c2c4011dbd0d4f85a26e77998119c5e5ffbe342",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 55,
        "deletions": 7,
        "changes": 62,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/19cbe057b85561d4b8167a228cc31a3430fb3636/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/19cbe057b85561d4b8167a228cc31a3430fb3636/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=19cbe057b85561d4b8167a228cc31a3430fb3636",
        "patch": "@@ -2,20 +2,27 @@\n from core.locust.common import get_csrf_token\n from locust import HttpUser, TaskSet, task\n from core.environment.host import get_host_for_locust_testing\n+import time\n \n \n class DatasetBehavior(TaskSet):\n     def on_start(self):\n-\n         \"\"\"Realiza el login antes de iniciar las tareas de la prueba.\"\"\"\n         response = self.client.post('/login', json={\n             'email': 'user1@example.com',\n             'password': '1234'\n         })\n-        self.csrf_token = get_csrf_token(response)\n+\n         if response.status_code == 200:\n             print(\"Login exitoso.\")\n+            self.token = response.json().get(\"token\", None)\n+        else:\n+            self.token = None\n+            print(\"Error en el login:\", response.status_code)\n \n+        self.csrf_token = get_csrf_token(response)\n+        if response.status_code == 200:\n+            print(\"Login exitoso.\")\n             self.session_cookies = response.cookies\n         else:\n             print(\"Error en el login:\", response.status_code, response.text)\n@@ -29,10 +36,52 @@ def on_start(self):\n         self.rate_dataset_success()\n         self.rate_dataset_unauthorized()\n \n-    @task\n-    def dataset(self):\n-        response = self.client.get(\"/dataset/upload\")\n-        get_csrf_token(response)\n+    @task(2)\n+    def edit_dataset_success(self):\n+        \"\"\"Simula un usuario editando un dataset exitosamente.\"\"\"\n+        # Agregar un retraso para permitir que los valores se actualicen\n+        time.sleep(5)  # Espera 5 segundos\n+        headers = {\"Authorization\": f\"Bearer {self.token}\"} if self.token else {}\n+        response = self.client.post('/dataset/1/edit', json={\n+            \"description\": \"Updated description from Locust\",\n+            \"publication_type\": \"RESEARCH_PAPER\",\n+            \"tags\": \"locust, test\"\n+        }, headers=headers)\n+        if response.status_code == 200:\n+            print(\"Dataset editado exitosamente.\")\n+        else:\n+            print(\"Error al editar el dataset:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def edit_dataset_unauthorized(self):\n+        \"\"\"Simula un usuario no autenticado intentando editar un dataset.\"\"\"\n+        response = self.client.post('/dataset/1/edit', json={\n+            \"description\": \"Unauthorized edit attempt\",\n+            \"publication_type\": \"RESEARCH_PAPER\",\n+            \"tags\": \"unauthorized\"\n+        })\n+        if response.status_code == 401 or response.status_code == 403:\n+            print(\"Error esperado: No autorizado.\")\n+        else:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def view_dataset(self):\n+        \"\"\"Simula un usuario viendo un dataset.\"\"\"\n+        response = self.client.get('/dataset/1')\n+        if response.status_code == 200:\n+            print(\"Dataset visto exitosamente.\")\n+        else:\n+            print(\"Error al ver el dataset:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def view_nonexistent_dataset(self):\n+        \"\"\"Simula un usuario intentando ver un dataset inexistente.\"\"\"\n+        response = self.client.get('/dataset/9999')\n+        if response.status_code == 404:\n+            print(\"Error esperado: Dataset no encontrado.\")\n+        else:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n \n     def is_authenticated(self):\n         \"\"\"Comprueba si el login fue exitoso.\"\"\"\n@@ -91,7 +140,6 @@ def create_dataset(self):\n             \"description\": \"This is a test dataset created during load testing.\",\n             \"publication_type\": \"Open Access\",\n             \"_csrf_token\": self.csrf_token\n-\n         }\n         with self.client.post(\n             \"/dataset/upload\","
      },
      {
        "sha": "6c5354c9d6d12e91a484c8ca815fdd67ca97b981",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 230,
        "deletions": 16,
        "changes": 246,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/19cbe057b85561d4b8167a228cc31a3430fb3636/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/19cbe057b85561d4b8167a228cc31a3430fb3636/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=19cbe057b85561d4b8167a228cc31a3430fb3636",
        "patch": "@@ -1,30 +1,244 @@\n-# Generated by Selenium IDE\n+import os\n+import time\n+from selenium import webdriver\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.common.action_chains import ActionChains\n+from selenium.webdriver.common.keys import Keys\n+from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n from core.environment.host import get_host_for_selenium_testing\n-from core.selenium.common import initialize_driver\n-# import pytest\n-from selenium.webdriver.common.by import By  # type: ignore\n+from core.selenium.common import initialize_driver, close_driver\n \n \n-class TestTestrate():\n+class TestSelenium:\n     def setup_method(self, method):\n-        self.driver = initialize_driver()\n+        self.driver = webdriver.Chrome()\n         self.vars = {}\n \n-        self.driver.get(get_host_for_selenium_testing())\n-\n     def teardown_method(self, method):\n         self.driver.quit()\n \n-    def test_testrate(self):\n-        self.driver.get(\"http://localhost:5000/\")\n+    def test_testselenium(self):\n+        self.driver.get(\"http://127.0.0.1:5000/\")\n         self.driver.set_window_size(1850, 1053)\n-        self.driver.find_element(By.LINK_TEXT, \"Title\").click()\n         self.driver.find_element(By.CSS_SELECTOR, \".nav-link:nth-child(1)\").click()\n-        self.driver.find_element(By.CSS_SELECTOR, \".row:nth-child(2) > .col-md-6 > .mb-3\").click()\n-        self.driver.find_element(By.ID, \"email\").click()\n+        self.driver.find_element(By.ID, \"submit\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(7) .align-middle:nth-child(2)\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"ffffddccdd\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \".nav-link:nth-child(1)\").click()\n         self.driver.find_element(By.ID, \"email\").send_keys(\"user1@example.com\")\n         self.driver.find_element(By.ID, \"password\").send_keys(\"1234\")\n         self.driver.find_element(By.ID, \"submit\").click()\n-        self.driver.find_element(By.LINK_TEXT, \"Title\").click()\n-        self.driver.find_element(By.CSS_SELECTOR, \"span:nth-child(5)\").click()\n-        self.driver.find_element(By.CSS_SELECTOR, \"div:nth-child(1) > button\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"My datasets\").click()\n+        self.driver.find_element(By.CSS_SELECTOR,\n+                                 \".card-body:nth-child(1)>.table tr:nth-child(2)>td:nth-child(1)\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"ffffddccdd\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n+        self.driver.find_element(By.ID, \"title\").click()\n+        self.driver.find_element(By.ID, \"title\").click()\n+        element = self.driver.find_element(By.ID, \"title\")\n+        actions = ActionChains(self.driver)\n+        actions.double_click(element).perform()\n+        self.driver.find_element(By.ID, \"title\").click()\n+        self.driver.find_element(By.ID, \"title\").click()\n+        self.driver.find_element(By.ID, \"title\").send_keys(\"Hola\")\n+        self.driver.find_element(By.CSS_SELECTOR, \"button\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n+        self.driver.find_element(By.ID, \"title\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n+        self.driver.find_element(By.ID, \"description\").click()\n+        self.driver.find_element(By.ID, \"description\").click()\n+        self.driver.find_element(By.ID, \"description\").click()\n+        element = self.driver.find_element(By.ID, \"description\")\n+        actions = ActionChains(self.driver)\n+        actions.double_click(element).perform()\n+        self.driver.find_element(By.ID, \"description\").click()\n+        self.driver.find_element(By.ID, \"description\").send_keys(\"hola\")\n+        self.driver.find_element(By.CSS_SELECTOR, \"button\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"Edit Dataset\").click()\n+        dropdown = self.driver.find_element(By.ID, \"publication_type\")\n+        dropdown.find_element(By.XPATH, \"//option[. = 'taxonomictreatment']\").click()\n+        element = self.driver.find_element(By.ID, \"publication_type\")\n+        actions = ActionChains(self.driver)\n+        actions.move_to_element(element).click_and_hold().perform()\n+        element = self.driver.find_element(By.ID, \"publication_type\")\n+        actions = ActionChains(self.driver)\n+        actions.move_to_element(element).perform()\n+        element = self.driver.find_element(By.ID, \"publication_type\")\n+        actions = ActionChains(self.driver)\n+        actions.move_to_element(element).release().perform()\n+        self.driver.find_element(By.CSS_SELECTOR, \"button\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \".sidebar-item:nth-child(7) .align-middle:nth-child(2)\").click()\n+\n+\n+def wait_for_page_to_load(driver, timeout=4):\n+    WebDriverWait(driver, timeout).until(\n+        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+    )\n+\n+\n+def count_datasets(driver, host):\n+    driver.get(f\"{host}/dataset/list\")\n+    wait_for_page_to_load(driver)\n+    try:\n+        amount_datasets = len(driver.find_elements(By.XPATH, \"//table//tbody//tr\"))\n+    except Exception:\n+        amount_datasets = 0\n+    return amount_datasets\n+\n+\n+def test_upload_dataset():\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the login page\n+        driver.get(f\"{host}/login\")\n+        wait_for_page_to_load(driver)\n+\n+        # Find the username and password field and enter the values\n+        email_field = driver.find_element(By.NAME, \"email\")\n+        password_field = driver.find_element(By.NAME, \"password\")\n+\n+        email_field.send_keys(\"user1@example.com\")\n+        password_field.send_keys(\"1234\")\n+\n+        # Send the form\n+        password_field.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        # Count initial datasets\n+        initial_datasets = count_datasets(driver, host)\n+\n+        # Open the upload dataset\n+        driver.get(f\"{host}/dataset/upload\")\n+        wait_for_page_to_load(driver)\n+\n+        # Find basic info and UVL model and fill values\n+        title_field = driver.find_element(By.NAME, \"title\")\n+        title_field.send_keys(\"Title\")\n+        desc_field = driver.find_element(By.NAME, \"desc\")\n+        desc_field.send_keys(\"Description\")\n+        tags_field = driver.find_element(By.NAME, \"tags\")\n+        tags_field.send_keys(\"tag1,tag2\")\n+\n+        # Add two authors and fill\n+        add_author_button = driver.find_element(By.ID, \"add_author\")\n+        add_author_button.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+        add_author_button.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        name_field0 = driver.find_element(By.NAME, \"authors-0-name\")\n+        name_field0.send_keys(\"Author0\")\n+        affiliation_field0 = driver.find_element(By.NAME, \"authors-0-affiliation\")\n+        affiliation_field0.send_keys(\"Club0\")\n+        orcid_field0 = driver.find_element(By.NAME, \"authors-0-orcid\")\n+        orcid_field0.send_keys(\"0000-0000-0000-0000\")\n+\n+        name_field1 = driver.find_element(By.NAME, \"authors-1-name\")\n+        name_field1.send_keys(\"Author1\")\n+        affiliation_field1 = driver.find_element(By.NAME, \"authors-1-affiliation\")\n+        affiliation_field1.send_keys(\"Club1\")\n+\n+        # Obt\u00e9n las rutas absolutas de los archivos\n+        file1_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file1.uvl\")\n+        file2_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file2.uvl\")\n+\n+        # Subir el primer archivo\n+        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+        dropzone.send_keys(file1_path)\n+        wait_for_page_to_load(driver)\n+\n+        # Subir el segundo archivo\n+        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n+        dropzone.send_keys(file2_path)\n+        wait_for_page_to_load(driver)\n+\n+        # Add authors in UVL models\n+        show_button = driver.find_element(By.ID, \"0_button\")\n+        show_button.send_keys(Keys.RETURN)\n+        add_author_uvl_button = driver.find_element(By.ID, \"0_form_authors_button\")\n+        add_author_uvl_button.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+\n+        name_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-name\")\n+        name_field.send_keys(\"Author3\")\n+        affiliation_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-affiliation\")\n+        affiliation_field.send_keys(\"Club3\")\n+\n+        # Check I agree and send form\n+        check = driver.find_element(By.ID, \"agreeCheckbox\")\n+        check.send_keys(Keys.SPACE)\n+        wait_for_page_to_load(driver)\n+\n+        upload_btn = driver.find_element(By.ID, \"upload_button\")\n+        upload_btn.send_keys(Keys.RETURN)\n+        wait_for_page_to_load(driver)\n+        time.sleep(2)  # Force wait time\n+\n+        assert driver.current_url == f\"{host}/dataset/list\", \"Test failed!\"\n+\n+        # Count final datasets\n+        final_datasets = count_datasets(driver, host)\n+        assert final_datasets == initial_datasets + 1, \"Test failed!\"\n+\n+        print(\"Test 1 passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+def test_testViewUserProfileSelenium():\n+    driver = initialize_driver()\n+    try:\n+        host = get_host_for_selenium_testing()\n+        # Open the login page\n+        driver.get(f\"{host}\")\n+        wait_for_page_to_load(driver)\n+\n+        # Espera expl\u00edcita para \"Sample dataset 4\"\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 4\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Doe, Jane\"\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, Jane\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para el men\u00fa de hamburguesa\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \".hamburger\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para el elemento de la barra lateral\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \".sidebar-item:nth-child(2) .align-middle:nth-child(2)\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Sample dataset 3\"\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 3\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Doe, John\"\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, John\"))\n+        ).click()\n+\n+        print(\"Test 2 passed!\")\n+\n+    finally:\n+        # Close the browser\n+        close_driver(driver)\n+\n+# Call the test function\n+\n+\n+test_upload_dataset()\n+\n+\n+test_testViewUserProfileSelenium()"
      },
      {
        "sha": "414c5252d421ecb3b59352f146319bb8e40e0ceb",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "modified",
        "additions": 116,
        "deletions": 101,
        "changes": 217,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/19cbe057b85561d4b8167a228cc31a3430fb3636/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/19cbe057b85561d4b8167a228cc31a3430fb3636/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=19cbe057b85561d4b8167a228cc31a3430fb3636",
        "patch": "@@ -1,101 +1,116 @@\n-import unittest\n-from unittest.mock import patch, MagicMock\n-import os\n-from app import app\n-\n-\n-class TestDownloadAllFormats(unittest.TestCase):\n-\n-    def setUp(self):\n-        # Configura una instancia de la aplicaci\u00f3n para pruebas\n-        self.app = app.test_client()\n-        self.app.testing = True\n-\n-    @patch('app.modules.dataset.routes.generate_uvl_file')\n-    @patch('app.modules.dataset.routes.generate_glencoe_file')\n-    @patch('app.modules.dataset.routes.generate_cnf_file')\n-    @patch('app.modules.dataset.routes.generate_splot_file')\n-    @patch('app.modules.dataset.routes.send_file')\n-    def test_download_all_formats_success(\n-        self,\n-        mock_send_file,\n-        mock_generate_splot,\n-        mock_generate_cnf,\n-        mock_generate_glencoe,\n-        mock_generate_uvl\n-    ):\n-        # Mockear las rutas de los archivos generados\n-        mock_generate_uvl.return_value = '/tmp/file.uvl'\n-        mock_generate_glencoe.return_value = '/tmp/file_glencoe.json'\n-        mock_generate_cnf.return_value = '/tmp/file.cnf'\n-        mock_generate_splot.return_value = '/tmp/file.splx'\n-\n-        # Mockear el comportamiento de send_file\n-        mock_send_file.return_value = MagicMock()\n-\n-        # Simular la existencia de los archivos\n-        for path in [\n-            mock_generate_uvl.return_value,\n-            mock_generate_glencoe.return_value,\n-            mock_generate_cnf.return_value,\n-            mock_generate_splot.return_value\n-        ]:\n-            with open(path, 'w') as f:\n-                f.write('mock content')\n-\n-        # Hacer la solicitud a la ruta\n-        response = self.app.get('/download_all/123')\n-\n-        # Validar que la respuesta sea exitosa\n-        self.assertEqual(response.status_code, 200)\n-        mock_send_file.assert_called_once()\n-\n-        # Verificar que los m\u00e9todos de generaci\u00f3n se llamaron con el ID correcto\n-        mock_generate_uvl.assert_called_once_with(123)\n-        mock_generate_glencoe.assert_called_once_with(123)\n-        mock_generate_cnf.assert_called_once_with(123)\n-        mock_generate_splot.assert_called_once_with(123)\n-\n-        # Limpiar los archivos temporales\n-        for path in [\n-            mock_generate_uvl.return_value,\n-            mock_generate_glencoe.return_value,\n-            mock_generate_cnf.return_value,\n-            mock_generate_splot.return_value\n-        ]:\n-            if os.path.exists(path):\n-                os.remove(path)\n-\n-    @patch('app.modules.dataset.routes.generate_uvl_file')\n-    @patch('app.modules.dataset.routes.generate_glencoe_file')\n-    @patch('app.modules.dataset.routes.generate_cnf_file')\n-    @patch('app.modules.dataset.routes.generate_splot_file')\n-    def test_download_all_formats_file_generation_failure(\n-        self,\n-        mock_generate_splot,\n-        mock_generate_cnf,\n-        mock_generate_glencoe,\n-        mock_generate_uvl\n-    ):\n-        # Simular que una de las funciones de generaci\u00f3n lanza un error\n-        mock_generate_uvl.side_effect = RuntimeError(\"UVL generation failed\")\n-        mock_generate_glencoe.return_value = '/tmp/file_glencoe.json'\n-        mock_generate_cnf.return_value = '/tmp/file.cnf'\n-        mock_generate_splot.return_value = '/tmp/file.splx'\n-\n-        # Hacer la solicitud a la ruta\n-        response = self.app.get('/download_all/123')\n-\n-        # Validar que la respuesta indique un error\n-        self.assertEqual(response.status_code, 500)\n-        self.assertIn(b'\"error\": \"UVL generation failed\"', response.data)\n-\n-        # Verificar que las funciones se llamaron\n-        mock_generate_uvl.assert_called_once_with(123)\n-        mock_generate_glencoe.assert_not_called()\n-        mock_generate_cnf.assert_not_called()\n-        mock_generate_splot.assert_not_called()\n-\n-\n-if __name__ == '__main__':\n-    unittest.main()\n+from datetime import datetime\n+import pytest\n+from flask.testing import FlaskClient\n+from app import create_app, db\n+from app.modules.auth.models import User\n+from app.modules.dataset.models import DataSet, DSMetaData, PublicationType\n+from app.modules.profile.models import UserProfile\n+from app.modules.conftest import login\n+\n+\n+@pytest.fixture\n+def client():\n+    app = create_app('testing')\n+    with app.test_client() as client:\n+        with app.app_context():\n+            # Configuraci\u00f3n de la base de datos en modo de prueba\n+            db.drop_all()\n+            db.create_all()\n+\n+            # Crear usuario principal y perfil asociado\n+            user = User(\n+                id=1,\n+                email=\"user1@example.com\",\n+                password=\"1234\",\n+                created_at=datetime(2022, 3, 13)\n+            )\n+            db.session.add(user)\n+            db.session.commit()\n+\n+            profile = UserProfile(\n+                user_id=user.id,\n+                surname=\"UserSurname\",\n+                name=\"UserName\",\n+                affiliation=\"TestAffiliation\",\n+                orcid=\"0000-0001-2345-6789\"\n+            )\n+            db.session.add(profile)\n+            db.session.commit()\n+\n+            # Crear dataset con metadata\n+            dsmetadata = DSMetaData(\n+                id=1,\n+                title=\"Editable Dataset\",\n+                description=\"Initial description\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name,\n+                tags=\"sample, dataset\"\n+            )\n+            db.session.add(dsmetadata)\n+            dataset = DataSet(\n+                id=1,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata.id\n+            )\n+            db.session.add(dataset)\n+            db.session.commit()\n+\n+            # Crear otro usuario sin acceso al dataset\n+            other_user = User(\n+                id=2,\n+                email=\"user2@example.com\",\n+                password=\"1234\",\n+                created_at=datetime(2022, 3, 13)\n+            )\n+            db.session.add(other_user)\n+            db.session.commit()\n+\n+            yield client\n+\n+            db.session.remove()\n+            db.drop_all()\n+\n+\n+def test_edit_dataset_access_denied(client: FlaskClient):\n+    \"\"\"Prueba para asegurar que un usuario no propietario no pueda editar un dataset.\"\"\"\n+    # Iniciar sesi\u00f3n como otro usuario (no propietario del dataset)\n+    login_response = login(client, \"user2@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+    # Intentar editar el dataset\n+    response = client.post(\n+        '/dataset/1/edit',\n+        data={\n+            \"description\": \"Another description\",\n+            \"publication_type\": \"RESEARCH_PAPER\",\n+            \"tags\": \"unauthorized, edit\"\n+        }\n+    )\n+    assert response.status_code == 403, \"El c\u00f3digo de estado deber\u00eda ser 403 para usuarios no autorizados.\"\n+\n+\n+def test_edit_dataset_invalid_form(client: FlaskClient):\n+    \"\"\"Prueba para un formulario inv\u00e1lido.\"\"\"\n+    # Iniciar sesi\u00f3n como propietario del dataset\n+    login_response = login(client, \"user1@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+\n+    # Intentar enviar un formulario con datos inv\u00e1lidos\n+    response = client.post(\n+        '/dataset/1/edit',\n+        data={\n+            \"description\": \"\",  # Campo requerido vac\u00edo\n+            \"publication_type\": \"INVALID_TYPE\",  # Tipo de publicaci\u00f3n inv\u00e1lido\n+            \"tags\": \"\"\n+        }\n+    )\n+    assert response.status_code == 200, \"El c\u00f3digo de estado deber\u00eda ser 200 al mostrar los errores del formulario.\"\n+\n+\n+def test_edit_dataset_not_found(client: FlaskClient):\n+    \"\"\"Prueba para intentar editar un dataset inexistente.\"\"\"\n+    # Iniciar sesi\u00f3n como usuario v\u00e1lido\n+    login_response = login(client, \"user1@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+\n+    # Intentar acceder a un dataset inexistente\n+    response = client.get('/dataset/999/edit')\n+    assert response.status_code == 404, \"El c\u00f3digo de estado deber\u00eda ser 404 para un dataset inexistente.\""
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/127",
    "id": 2235840499,
    "node_id": "PR_kwDONB39G86FRDfz",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/127",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/127.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/127.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/127",
    "number": 127,
    "state": "closed",
    "locked": false,
    "title": "Test selenium rate dataset",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-15T15:09:47Z",
    "updated_at": "2024-12-15T15:19:13Z",
    "closed_at": "2024-12-15T15:17:22Z",
    "merged_at": "2024-12-15T15:17:22Z",
    "merge_commit_sha": "5e60859d833e957cd1f6a58aa54656dcabfd6007",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/127/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/127/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/127/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/1bc24d5fac390d2e7754473b4b08726122a18194",
    "head": {
      "label": "TostaHub:testSeleniumRateDataset",
      "ref": "testSeleniumRateDataset",
      "sha": "1bc24d5fac390d2e7754473b4b08726122a18194",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "a86851f850a62814cd120559b337d22407c4c23e",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/127"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/127"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/127"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/127/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/127/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/127/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/1bc24d5fac390d2e7754473b4b08726122a18194"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "9308a538487ba12b7800a84fe46b9834b90fd2a4",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 29,
        "deletions": 221,
        "changes": 250,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/1bc24d5fac390d2e7754473b4b08726122a18194/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/1bc24d5fac390d2e7754473b4b08726122a18194/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=1bc24d5fac390d2e7754473b4b08726122a18194",
        "patch": "@@ -1,222 +1,30 @@\n-import os\n-import time\n-\n-from selenium.webdriver.common.by import By\n-from selenium.webdriver.common.keys import Keys\n-from selenium.webdriver.support.ui import WebDriverWait\n-from selenium.webdriver.support import expected_conditions as EC\n-\n+# Generated by Selenium IDE\n from core.environment.host import get_host_for_selenium_testing\n-from core.selenium.common import initialize_driver, close_driver\n-\n-\n-def wait_for_page_to_load(driver, timeout=4):\n-    WebDriverWait(driver, timeout).until(\n-        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n-    )\n-\n-\n-def count_datasets(driver, host):\n-    driver.get(f\"{host}/dataset/list\")\n-    wait_for_page_to_load(driver)\n-\n-    try:\n-        amount_datasets = len(driver.find_elements(By.XPATH, \"//table//tbody//tr\"))\n-    except Exception:\n-        amount_datasets = 0\n-    return amount_datasets\n-\n-\n-def test_upload_dataset():\n-    driver = initialize_driver()\n-\n-    try:\n-        host = get_host_for_selenium_testing()\n-\n-        # Open the login page\n-        driver.get(f\"{host}/login\")\n-        wait_for_page_to_load(driver)\n-\n-        # Find the username and password field and enter the values\n-        email_field = driver.find_element(By.NAME, \"email\")\n-        password_field = driver.find_element(By.NAME, \"password\")\n-\n-        email_field.send_keys(\"user1@example.com\")\n-        password_field.send_keys(\"1234\")\n-\n-        # Send the form\n-        password_field.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-\n-        # Count initial datasets\n-        initial_datasets = count_datasets(driver, host)\n-\n-        # Open the upload dataset\n-        driver.get(f\"{host}/dataset/upload\")\n-        wait_for_page_to_load(driver)\n-\n-        # Find basic info and UVL model and fill values\n-        title_field = driver.find_element(By.NAME, \"title\")\n-        title_field.send_keys(\"Title\")\n-        desc_field = driver.find_element(By.NAME, \"desc\")\n-        desc_field.send_keys(\"Description\")\n-        tags_field = driver.find_element(By.NAME, \"tags\")\n-        tags_field.send_keys(\"tag1,tag2\")\n-\n-        # Add two authors and fill\n-        add_author_button = driver.find_element(By.ID, \"add_author\")\n-        add_author_button.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-        add_author_button.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-\n-        name_field0 = driver.find_element(By.NAME, \"authors-0-name\")\n-        name_field0.send_keys(\"Author0\")\n-        affiliation_field0 = driver.find_element(By.NAME, \"authors-0-affiliation\")\n-        affiliation_field0.send_keys(\"Club0\")\n-        orcid_field0 = driver.find_element(By.NAME, \"authors-0-orcid\")\n-        orcid_field0.send_keys(\"0000-0000-0000-0000\")\n-\n-        name_field1 = driver.find_element(By.NAME, \"authors-1-name\")\n-        name_field1.send_keys(\"Author1\")\n-        affiliation_field1 = driver.find_element(By.NAME, \"authors-1-affiliation\")\n-        affiliation_field1.send_keys(\"Club1\")\n-\n-        # Obt\u00e9n las rutas absolutas de los archivos\n-        file1_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file1.uvl\")\n-        file2_path = os.path.abspath(\"app/modules/dataset/uvl_examples/file2.uvl\")\n-\n-        # Subir el primer archivo\n-        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n-        dropzone.send_keys(file1_path)\n-        wait_for_page_to_load(driver)\n-\n-        # Subir el segundo archivo\n-        dropzone = driver.find_element(By.CLASS_NAME, \"dz-hidden-input\")\n-        dropzone.send_keys(file2_path)\n-        wait_for_page_to_load(driver)\n-\n-        # Add authors in UVL models\n-        show_button = driver.find_element(By.ID, \"0_button\")\n-        show_button.send_keys(Keys.RETURN)\n-        add_author_uvl_button = driver.find_element(By.ID, \"0_form_authors_button\")\n-        add_author_uvl_button.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-\n-        name_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-name\")\n-        name_field.send_keys(\"Author3\")\n-        affiliation_field = driver.find_element(By.NAME, \"feature_models-0-authors-2-affiliation\")\n-        affiliation_field.send_keys(\"Club3\")\n-\n-        # Check I agree and send form\n-        check = driver.find_element(By.ID, \"agreeCheckbox\")\n-        check.send_keys(Keys.SPACE)\n-        wait_for_page_to_load(driver)\n-\n-        upload_btn = driver.find_element(By.ID, \"upload_button\")\n-        upload_btn.send_keys(Keys.RETURN)\n-        wait_for_page_to_load(driver)\n-        time.sleep(2)  # Force wait time\n-\n-        assert driver.current_url == f\"{host}/dataset/list\", \"Test failed!\"\n-\n-        # Count final datasets\n-        final_datasets = count_datasets(driver, host)\n-        assert final_datasets == initial_datasets + 1, \"Test failed!\"\n-\n-        print(\"Test 1 passed!\")\n-\n-    finally:\n-\n-        # Close the browser\n-        close_driver(driver)\n-\n-\n-def test_testViewUserProfileSelenium():\n-    driver = initialize_driver()\n-\n-    try:\n-        host = get_host_for_selenium_testing()\n-\n-        # Open the login page\n-        driver.get(f\"{host}\")\n-        wait_for_page_to_load(driver)\n-\n-        # Espera expl\u00edcita para \"Sample dataset 4\"\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 4\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para \"Doe, Jane\"\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, Jane\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para el men\u00fa de hamburguesa\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.CSS_SELECTOR, \".hamburger\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para el elemento de la barra lateral\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.CSS_SELECTOR, \".sidebar-item:nth-child(2) .align-middle:nth-child(2)\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para \"Sample dataset 3\"\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 3\"))\n-        ).click()\n-\n-        # Espera expl\u00edcita para \"Doe, John\"\n-        WebDriverWait(driver, 10).until(\n-            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, John\"))\n-        ).click()\n-\n-        print(\"Test 2 passed!\")\n-\n-    finally:\n-\n-        # Close the browser\n-        close_driver(driver)\n-\n-\n-def test_DownloadUvlDataset():\n-    driver = initialize_driver()\n-\n-    try:\n-        host = get_host_for_selenium_testing()\n-\n-        # Open the login page\n-        driver.get(f\"{host}\")\n-        wait_for_page_to_load(driver)\n-\n-        driver.find_element(By.LINK_TEXT, \"Sample dataset 4\").click()\n-        driver.find_element(By.LINK_TEXT, \"Doe, Jane\").click()\n-        driver.find_element(By.LINK_TEXT, \"Sample dataset 2\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"Glencoe\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"DIMACS\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"SPLOT\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n-        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport25\").click()\n-        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n-        driver.find_element(By.ID, \"btnGroupDropExport26\").click()\n-        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n-\n-        print(\"Test 3 passed!\")\n-\n-    finally:\n-\n-        # Close the browser\n-        close_driver(driver)\n-\n-\n-# Call the test function\n-test_upload_dataset()\n-test_testViewUserProfileSelenium()\n-test_DownloadUvlDataset()\n+from core.selenium.common import initialize_driver\n+# import pytest\n+from selenium.webdriver.common.by import By  # type: ignore\n+\n+\n+class TestTestrate():\n+    def setup_method(self, method):\n+        self.driver = initialize_driver()\n+        self.vars = {}\n+\n+        self.driver.get(get_host_for_selenium_testing())\n+\n+    def teardown_method(self, method):\n+        self.driver.quit()\n+\n+    def test_testrate(self):\n+        self.driver.get(\"http://localhost:5000/\")\n+        self.driver.set_window_size(1850, 1053)\n+        self.driver.find_element(By.LINK_TEXT, \"Title\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \".nav-link:nth-child(1)\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \".row:nth-child(2) > .col-md-6 > .mb-3\").click()\n+        self.driver.find_element(By.ID, \"email\").click()\n+        self.driver.find_element(By.ID, \"email\").send_keys(\"user1@example.com\")\n+        self.driver.find_element(By.ID, \"password\").send_keys(\"1234\")\n+        self.driver.find_element(By.ID, \"submit\").click()\n+        self.driver.find_element(By.LINK_TEXT, \"Title\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \"span:nth-child(5)\").click()\n+        self.driver.find_element(By.CSS_SELECTOR, \"div:nth-child(1) > button\").click()"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/124",
    "id": 2235712224,
    "node_id": "PR_kwDONB39G86FQkLg",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/124",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/124.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/124.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/124",
    "number": 124,
    "state": "closed",
    "locked": false,
    "title": "doc: Add diario de equipo",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-15T10:50:15Z",
    "updated_at": "2024-12-15T15:19:15Z",
    "closed_at": "2024-12-15T12:34:22Z",
    "merged_at": "2024-12-15T12:34:22Z",
    "merge_commit_sha": "a86851f850a62814cd120559b337d22407c4c23e",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/124/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/124/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/124/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/387fc64e77fda1b22d45ebcc95495c980f3ebfd9",
    "head": {
      "label": "TostaHub:addLastDoc",
      "ref": "addLastDoc",
      "sha": "387fc64e77fda1b22d45ebcc95495c980f3ebfd9",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "801e98d42687d0ceb1e158bdaf548727a108732b",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/124"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/124"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/124"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/124/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/124/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/124/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/387fc64e77fda1b22d45ebcc95495c980f3ebfd9"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "b6d630f73d6b5f65632f269f36fe264493dba5a8",
        "filename": "docs/Diario de equipoV1.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/387fc64e77fda1b22d45ebcc95495c980f3ebfd9/docs%2FDiario%20de%20equipoV1.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/387fc64e77fda1b22d45ebcc95495c980f3ebfd9/docs%2FDiario%20de%20equipoV1.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FDiario%20de%20equipoV1.pdf?ref=387fc64e77fda1b22d45ebcc95495c980f3ebfd9"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/123",
    "id": 2235202987,
    "node_id": "PR_kwDONB39G86FOn2r",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/123",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/123.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/123.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/123",
    "number": 123,
    "state": "closed",
    "locked": false,
    "title": "Develop",
    "user": {
      "login": "Leonidas6000",
      "id": 73244549,
      "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leonidas6000",
      "html_url": "https://github.com/Leonidas6000",
      "followers_url": "https://api.github.com/users/Leonidas6000/followers",
      "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
      "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
      "repos_url": "https://api.github.com/users/Leonidas6000/repos",
      "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-14T15:43:58Z",
    "updated_at": "2024-12-15T12:11:43Z",
    "closed_at": "2024-12-15T12:11:43Z",
    "merged_at": "2024-12-15T12:11:43Z",
    "merge_commit_sha": "2df3408ec843c466272af04ba70507ae69de6166",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/123/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/123/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/123/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/801e98d42687d0ceb1e158bdaf548727a108732b",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "801e98d42687d0ceb1e158bdaf548727a108732b",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "d9538dc94d8378fa88966f5de37ff6bc4554e638",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/123"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/123"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/123"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/123/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/123/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/123/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/801e98d42687d0ceb1e158bdaf548727a108732b"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "6f42344cff16f16572baab7b2046b189ecaf89e0",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 15,
        "deletions": 18,
        "changes": 33,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/801e98d42687d0ceb1e158bdaf548727a108732b/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/801e98d42687d0ceb1e158bdaf548727a108732b/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=801e98d42687d0ceb1e158bdaf548727a108732b",
        "patch": "@@ -12,6 +12,7 @@ def on_start(self):\n             'email': 'user1@example.com',\n             'password': '1234'\n         })\n+        self.csrf_token = get_csrf_token(response)\n         if response.status_code == 200:\n             print(\"Login exitoso.\")\n \n@@ -21,9 +22,17 @@ def on_start(self):\n             self.session_cookies = None\n \n         self.dataset()\n-        self.login()\n         self.create_dataset()\n         self.view_user_datasets()\n+        self.rate_dataset_invalid_rating()\n+        self.rate_dataset_not_found()\n+        self.rate_dataset_success()\n+        self.rate_dataset_unauthorized()\n+\n+    @task\n+    def dataset(self):\n+        response = self.client.get(\"/dataset/upload\")\n+        get_csrf_token(response)\n \n     def is_authenticated(self):\n         \"\"\"Comprueba si el login fue exitoso.\"\"\"\n@@ -56,7 +65,7 @@ def rate_dataset_invalid_rating(self):\n         elif response:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    @task(1)\n+    @task(3)\n     def rate_dataset_not_found(self):\n         \"\"\"Simula un usuario intentando calificar un dataset que no existe.\"\"\"\n         response = self.post_with_auth(\"/datasets/100/rate\", json={\"rating\": 3})\n@@ -65,7 +74,7 @@ def rate_dataset_not_found(self):\n         elif response:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    @task(1)\n+    @task(4)\n     def rate_dataset_unauthorized(self):\n         \"\"\"Simula un usuario no autenticado intentando calificar un dataset.\"\"\"\n         response = self.client.post('/datasets/17/rate', json={\"rating\": 4})\n@@ -74,19 +83,7 @@ def rate_dataset_unauthorized(self):\n         else:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    def login(self):\n-        \"\"\"Simula el inicio de sesi\u00f3n del usuario.\"\"\"\n-        response = self.client.post(\n-            \"/login\",\n-            {\n-                \"username\": \"test_user\",\n-                \"password\": \"test_password\"\n-            },\n-            name=\"User Login\"\n-        )\n-        self.csrf_token = get_csrf_token(response)\n-\n-    @task\n+    @task(5)\n     def create_dataset(self):\n         \"\"\"Simula la creaci\u00f3n de un nuevo dataset.\"\"\"\n         dataset_payload = {\n@@ -105,10 +102,10 @@ def create_dataset(self):\n             if response.status_code != 200 or \"error\" in response.text.lower():\n                 response.failure(\"Dataset creation failed\")\n \n-    @task\n+    @task(6)\n     def view_user_datasets(self):\n         \"\"\"Simula la visualizaci\u00f3n de la p\u00e1gina de datasets del usuario.\"\"\"\n-        user_id = 7  # Cambiar seg\u00fan el ID del usuario deseado\n+        user_id = 7\n         with self.client.get(\n             f\"/api/v1/datasets/user/{user_id}\",\n             name=\"View User Datasets\","
      },
      {
        "sha": "e210b170348c724345f91e2ffd8dbae9b047961d",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/801e98d42687d0ceb1e158bdaf548727a108732b/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/801e98d42687d0ceb1e158bdaf548727a108732b/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=801e98d42687d0ceb1e158bdaf548727a108732b",
        "patch": "@@ -180,6 +180,43 @@ def test_testViewUserProfileSelenium():\n         close_driver(driver)\n \n \n+def test_DownloadUvlDataset():\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the login page\n+        driver.get(f\"{host}\")\n+        wait_for_page_to_load(driver)\n+\n+        driver.find_element(By.LINK_TEXT, \"Sample dataset 4\").click()\n+        driver.find_element(By.LINK_TEXT, \"Doe, Jane\").click()\n+        driver.find_element(By.LINK_TEXT, \"Sample dataset 2\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"Glencoe\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"DIMACS\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"SPLOT\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport25\").click()\n+        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport26\").click()\n+        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n+\n+        print(\"Test 3 passed!\")\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n # Call the test function\n test_upload_dataset()\n test_testViewUserProfileSelenium()\n+test_DownloadUvlDataset()"
      },
      {
        "sha": "332565dff24a3c20105943eefb0c2ae6d71af9d5",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 12,
        "deletions": 15,
        "changes": 27,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/801e98d42687d0ceb1e158bdaf548727a108732b/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/801e98d42687d0ceb1e158bdaf548727a108732b/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=801e98d42687d0ceb1e158bdaf548727a108732b",
        "patch": "@@ -210,44 +210,41 @@ <h3 class=\"h3 mb-3\">\n     <script src=\"{{ url_for('explore.scripts') }}\"></script>\n     \n     <style>\n-        /* Estilo del icono dentro del texto */\n         .info-icon {\n             font-weight: bold;\n-            font-size: 14px; /* Tama\u00f1o de la letra m\u00e1s peque\u00f1o */\n-            color: white; /* Color de la letra dentro del c\u00edrculo */\n-            background-color: #4caf50; /* Color de fondo verde */\n-            border-radius: 50%; /* Hacer el fondo circular */\n-            width: 22px; /* Tama\u00f1o m\u00e1s peque\u00f1o del c\u00edrculo */\n-            height: 22px; /* Tama\u00f1o m\u00e1s peque\u00f1o del c\u00edrculo */\n+            font-size: 14px;\n+            color: white;\n+            background-color: #4caf50;\n+            border-radius: 50%;\n+            width: 22px;\n+            height: 22px;\n             display: inline-flex;\n             align-items: center;\n             justify-content: center;\n             cursor: pointer;\n-            margin-left: 5px; /* Espacio entre el texto y el icono */\n+            margin-left: 5px;\n             position: relative;\n         }\n \n-        /* Estilo para el texto del tooltip */\n         .info-icon::after {\n             content: attr(data-tooltip);\n             position: absolute;\n             top: 25px;\n             left: 50%;\n             transform: translateX(-50%);\n-            padding: 10px 20px;  /* Aumenta el padding para hacerlo m\u00e1s grande */\n-            background-color: #add8e6; /* Fondo azul claro */\n-            color: #333; /* Texto oscuro */\n+            padding: 10px 20px;\n+            background-color: #add8e6;\n+            color: #333;\n             font-size: 12px;\n             border-radius: 5px;\n-            white-space: pre-wrap; /* Usar pre-wrap para los saltos de l\u00ednea */\n+            white-space: pre-wrap;\n             opacity: 0;\n             visibility: hidden;\n             z-index: 10;\n             transition: opacity 0.3s;\n-            width: 200px; /* Ajusta el ancho a un valor mayor */\n+            width: 200px;\n         }\n \n-        /* Mostrar el tooltip al pasar el rat\u00f3n */\n         .info-icon:hover::after {\n             opacity: 1;\n             visibility: visible;"
      },
      {
        "sha": "343957b4c0291ef443ad57dc4380874f8d0c90e6",
        "filename": "app/modules/explore/tests/locustfile.py",
        "status": "modified",
        "additions": 27,
        "deletions": 4,
        "changes": 31,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/801e98d42687d0ceb1e158bdaf548727a108732b/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/801e98d42687d0ceb1e158bdaf548727a108732b/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py?ref=801e98d42687d0ceb1e158bdaf548727a108732b",
        "patch": "@@ -4,14 +4,37 @@\n \n class ExploreBehavior(TaskSet):\n     def on_start(self):\n+        \"\"\"Se ejecuta una vez al inicio de cada usuario.\"\"\"\n         self.index()\n \n-    @task\n+    @task(1)\n     def index(self):\n-        response = self.client.get(\"/explore\")\n+        \"\"\"Tarea principal para acceder a /explore.\"\"\"\n+        with self.client.get(\"/explore\", catch_response=True) as response:\n+            if response.status_code != 200:\n+                response.failure(f\"Explore index failed: {response.status_code}\")\n+            else:\n+                response.success()\n \n-        if response.status_code != 200:\n-            print(f\"Explore index failed: {response.status_code}\")\n+    @task(2)\n+    def explore_with_query(self):\n+        \"\"\"Accede a /explore con par\u00e1metros de consulta.\"\"\"\n+        params = {\"query\": \"author:1;min_size:500;tags:tag2\"}\n+        with self.client.get(\"/explore\", params=params, catch_response=True) as response:\n+            if response.status_code != 200:\n+                response.failure(f\"Explore with query failed: {response.status_code}\")\n+            else:\n+                response.success()\n+\n+    @task(1)\n+    def explore_with_sorting(self):\n+        \"\"\"Accede a /explore con par\u00e1metro de ordenaci\u00f3n.\"\"\"\n+        params = {\"sorting\": \"oldest\"}\n+        with self.client.get(\"/explore\", params=params, catch_response=True) as response:\n+            if response.status_code != 200:\n+                response.failure(f\"Explore with sorting failed: {response.status_code}\")\n+            else:\n+                response.success()\n \n \n class ExploreUser(HttpUser):"
      },
      {
        "sha": "9ab90d4afa57447e51b888c8f528d20e865a009a",
        "filename": "app/modules/explore/tests/test_selenium.py",
        "status": "modified",
        "additions": 110,
        "deletions": 0,
        "changes": 110,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/801e98d42687d0ceb1e158bdaf548727a108732b/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/801e98d42687d0ceb1e158bdaf548727a108732b/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py?ref=801e98d42687d0ceb1e158bdaf548727a108732b",
        "patch": "@@ -67,6 +67,101 @@ def test_query():\n     close_driver(driver)\n \n \n+def test_author_filter():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"author:Author 4\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"author:Author\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"author:Nonexistent Author\")\n+    check_num_datasets(driver, 0)\n+\n+    close_driver(driver)\n+\n+\n+def test_size_filters():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"min_size:1000\")\n+    check_num_datasets(driver, 3)\n+\n+    set_input(driver, \"query\", \"max_size:2000\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"min_size:500;max_size:1000\")\n+    check_num_datasets(driver, 1)\n+\n+    close_driver(driver)\n+\n+\n+def test_tags_filter():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"tags:tag1\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"query\", \"tags:nonexistent-tag\")\n+    check_num_datasets(driver, 0)\n+\n+    close_driver(driver)\n+\n+\n+def test_models_filter():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"max_models:5\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"min_models:5\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"query\", \"min_models:2;max_models:5\")\n+    check_num_datasets(driver, 4)\n+\n+    close_driver(driver)\n+\n+\n+def test_configuration_filter():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"min_configs:10\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"min_configs:30\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"query\", \"max_configs:50\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"min_configs:5;max_configs:30\")\n+    check_num_datasets(driver, 4)\n+\n+    close_driver(driver)\n+\n+\n def test_filters():\n     driver = initialize_driver()\n     host = get_host_for_selenium_testing()\n@@ -137,6 +232,21 @@ def test_publication_type():\n test_query()\n \n \n+test_author_filter()\n+\n+\n+test_size_filters()\n+\n+\n+test_tags_filter()\n+\n+\n+test_models_filter()\n+\n+\n+test_configuration_filter()\n+\n+\n test_filters()\n \n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/122",
    "id": 2235196277,
    "node_id": "PR_kwDONB39G86FOmN1",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/122",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/122.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/122.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/122",
    "number": 122,
    "state": "closed",
    "locked": false,
    "title": "121 locust test for advanced search querys",
    "user": {
      "login": "Leonidas6000",
      "id": 73244549,
      "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leonidas6000",
      "html_url": "https://github.com/Leonidas6000",
      "followers_url": "https://api.github.com/users/Leonidas6000/followers",
      "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
      "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
      "repos_url": "https://api.github.com/users/Leonidas6000/repos",
      "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-14T15:29:28Z",
    "updated_at": "2024-12-14T15:43:18Z",
    "closed_at": "2024-12-14T15:42:51Z",
    "merged_at": "2024-12-14T15:42:51Z",
    "merge_commit_sha": "801e98d42687d0ceb1e158bdaf548727a108732b",
    "assignee": {
      "login": "Leonidas6000",
      "id": 73244549,
      "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leonidas6000",
      "html_url": "https://github.com/Leonidas6000",
      "followers_url": "https://api.github.com/users/Leonidas6000/followers",
      "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
      "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
      "repos_url": "https://api.github.com/users/Leonidas6000/repos",
      "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "Leonidas6000",
        "id": 73244549,
        "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
        "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Leonidas6000",
        "html_url": "https://github.com/Leonidas6000",
        "followers_url": "https://api.github.com/users/Leonidas6000/followers",
        "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
        "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
        "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
        "repos_url": "https://api.github.com/users/Leonidas6000/repos",
        "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/122/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/122/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/122/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/de0c6975f18c83c133ae928439c130e7fd7cfa39",
    "head": {
      "label": "TostaHub:121-locust-test-for-advanced-search-querys",
      "ref": "121-locust-test-for-advanced-search-querys",
      "sha": "de0c6975f18c83c133ae928439c130e7fd7cfa39",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "3b43702a8db4faa737a18007a3b7c2207eaba717",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/122"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/122"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/122"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/122/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/122/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/122/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/de0c6975f18c83c133ae928439c130e7fd7cfa39"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "332565dff24a3c20105943eefb0c2ae6d71af9d5",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 12,
        "deletions": 15,
        "changes": 27,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/de0c6975f18c83c133ae928439c130e7fd7cfa39/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/de0c6975f18c83c133ae928439c130e7fd7cfa39/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=de0c6975f18c83c133ae928439c130e7fd7cfa39",
        "patch": "@@ -210,44 +210,41 @@ <h3 class=\"h3 mb-3\">\n     <script src=\"{{ url_for('explore.scripts') }}\"></script>\n     \n     <style>\n-        /* Estilo del icono dentro del texto */\n         .info-icon {\n             font-weight: bold;\n-            font-size: 14px; /* Tama\u00f1o de la letra m\u00e1s peque\u00f1o */\n-            color: white; /* Color de la letra dentro del c\u00edrculo */\n-            background-color: #4caf50; /* Color de fondo verde */\n-            border-radius: 50%; /* Hacer el fondo circular */\n-            width: 22px; /* Tama\u00f1o m\u00e1s peque\u00f1o del c\u00edrculo */\n-            height: 22px; /* Tama\u00f1o m\u00e1s peque\u00f1o del c\u00edrculo */\n+            font-size: 14px;\n+            color: white;\n+            background-color: #4caf50;\n+            border-radius: 50%;\n+            width: 22px;\n+            height: 22px;\n             display: inline-flex;\n             align-items: center;\n             justify-content: center;\n             cursor: pointer;\n-            margin-left: 5px; /* Espacio entre el texto y el icono */\n+            margin-left: 5px;\n             position: relative;\n         }\n \n-        /* Estilo para el texto del tooltip */\n         .info-icon::after {\n             content: attr(data-tooltip);\n             position: absolute;\n             top: 25px;\n             left: 50%;\n             transform: translateX(-50%);\n-            padding: 10px 20px;  /* Aumenta el padding para hacerlo m\u00e1s grande */\n-            background-color: #add8e6; /* Fondo azul claro */\n-            color: #333; /* Texto oscuro */\n+            padding: 10px 20px;\n+            background-color: #add8e6;\n+            color: #333;\n             font-size: 12px;\n             border-radius: 5px;\n-            white-space: pre-wrap; /* Usar pre-wrap para los saltos de l\u00ednea */\n+            white-space: pre-wrap;\n             opacity: 0;\n             visibility: hidden;\n             z-index: 10;\n             transition: opacity 0.3s;\n-            width: 200px; /* Ajusta el ancho a un valor mayor */\n+            width: 200px;\n         }\n \n-        /* Mostrar el tooltip al pasar el rat\u00f3n */\n         .info-icon:hover::after {\n             opacity: 1;\n             visibility: visible;"
      },
      {
        "sha": "343957b4c0291ef443ad57dc4380874f8d0c90e6",
        "filename": "app/modules/explore/tests/locustfile.py",
        "status": "modified",
        "additions": 27,
        "deletions": 4,
        "changes": 31,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/de0c6975f18c83c133ae928439c130e7fd7cfa39/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/de0c6975f18c83c133ae928439c130e7fd7cfa39/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py?ref=de0c6975f18c83c133ae928439c130e7fd7cfa39",
        "patch": "@@ -4,14 +4,37 @@\n \n class ExploreBehavior(TaskSet):\n     def on_start(self):\n+        \"\"\"Se ejecuta una vez al inicio de cada usuario.\"\"\"\n         self.index()\n \n-    @task\n+    @task(1)\n     def index(self):\n-        response = self.client.get(\"/explore\")\n+        \"\"\"Tarea principal para acceder a /explore.\"\"\"\n+        with self.client.get(\"/explore\", catch_response=True) as response:\n+            if response.status_code != 200:\n+                response.failure(f\"Explore index failed: {response.status_code}\")\n+            else:\n+                response.success()\n \n-        if response.status_code != 200:\n-            print(f\"Explore index failed: {response.status_code}\")\n+    @task(2)\n+    def explore_with_query(self):\n+        \"\"\"Accede a /explore con par\u00e1metros de consulta.\"\"\"\n+        params = {\"query\": \"author:1;min_size:500;tags:tag2\"}\n+        with self.client.get(\"/explore\", params=params, catch_response=True) as response:\n+            if response.status_code != 200:\n+                response.failure(f\"Explore with query failed: {response.status_code}\")\n+            else:\n+                response.success()\n+\n+    @task(1)\n+    def explore_with_sorting(self):\n+        \"\"\"Accede a /explore con par\u00e1metro de ordenaci\u00f3n.\"\"\"\n+        params = {\"sorting\": \"oldest\"}\n+        with self.client.get(\"/explore\", params=params, catch_response=True) as response:\n+            if response.status_code != 200:\n+                response.failure(f\"Explore with sorting failed: {response.status_code}\")\n+            else:\n+                response.success()\n \n \n class ExploreUser(HttpUser):"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/120",
    "id": 2234267514,
    "node_id": "PR_kwDONB39G86FLDd6",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/120",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/120.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/120.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/120",
    "number": 120,
    "state": "closed",
    "locked": false,
    "title": "doc : Add diario de equipo",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-13T17:38:54Z",
    "updated_at": "2024-12-15T10:45:58Z",
    "closed_at": "2024-12-13T18:00:43Z",
    "merged_at": null,
    "merge_commit_sha": "de09874f2b76d5812dc041167c8e964ca1d3aae6",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/120/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/120/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/120/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/0b86665afffdc00c8d8b4d6190602cda924baecd",
    "head": {
      "label": "TostaHub:addDocs",
      "ref": "addDocs",
      "sha": "0b86665afffdc00c8d8b4d6190602cda924baecd",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "3b43702a8db4faa737a18007a3b7c2207eaba717",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/120"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/120"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/120"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/120/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/120/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/120/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/0b86665afffdc00c8d8b4d6190602cda924baecd"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "b6d630f73d6b5f65632f269f36fe264493dba5a8",
        "filename": "docs/Diario de equipo.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0b86665afffdc00c8d8b4d6190602cda924baecd/docs%2FDiario%20de%20equipo.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0b86665afffdc00c8d8b4d6190602cda924baecd/docs%2FDiario%20de%20equipo.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FDiario%20de%20equipo.pdf?ref=0b86665afffdc00c8d8b4d6190602cda924baecd"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/119",
    "id": 2234054093,
    "node_id": "PR_kwDONB39G86FKPXN",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/119",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/119.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/119.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/119",
    "number": 119,
    "state": "closed",
    "locked": false,
    "title": "Fix locust tests",
    "user": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-13T15:27:28Z",
    "updated_at": "2024-12-16T16:56:37Z",
    "closed_at": "2024-12-13T15:31:19Z",
    "merged_at": "2024-12-13T15:31:19Z",
    "merge_commit_sha": "3b43702a8db4faa737a18007a3b7c2207eaba717",
    "assignee": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pabmatang",
        "id": 73099537,
        "node_id": "MDQ6VXNlcjczMDk5NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pabmatang",
        "html_url": "https://github.com/pabmatang",
        "followers_url": "https://api.github.com/users/pabmatang/followers",
        "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
        "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
        "organizations_url": "https://api.github.com/users/pabmatang/orgs",
        "repos_url": "https://api.github.com/users/pabmatang/repos",
        "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pabmatang/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/119/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/119/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/119/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/ba7ea4495b12b39d1a7f723135933b7d716f560b",
    "head": {
      "label": "TostaHub:fixLocustTests",
      "ref": "fixLocustTests",
      "sha": "ba7ea4495b12b39d1a7f723135933b7d716f560b",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "05f2cb132ef7186346932fe91eaf59e86d1678f6",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/119"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/119"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/119"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/119/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/119/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/119/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/ba7ea4495b12b39d1a7f723135933b7d716f560b"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "6f42344cff16f16572baab7b2046b189ecaf89e0",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 15,
        "deletions": 18,
        "changes": 33,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/ba7ea4495b12b39d1a7f723135933b7d716f560b/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/ba7ea4495b12b39d1a7f723135933b7d716f560b/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=ba7ea4495b12b39d1a7f723135933b7d716f560b",
        "patch": "@@ -12,6 +12,7 @@ def on_start(self):\n             'email': 'user1@example.com',\n             'password': '1234'\n         })\n+        self.csrf_token = get_csrf_token(response)\n         if response.status_code == 200:\n             print(\"Login exitoso.\")\n \n@@ -21,9 +22,17 @@ def on_start(self):\n             self.session_cookies = None\n \n         self.dataset()\n-        self.login()\n         self.create_dataset()\n         self.view_user_datasets()\n+        self.rate_dataset_invalid_rating()\n+        self.rate_dataset_not_found()\n+        self.rate_dataset_success()\n+        self.rate_dataset_unauthorized()\n+\n+    @task\n+    def dataset(self):\n+        response = self.client.get(\"/dataset/upload\")\n+        get_csrf_token(response)\n \n     def is_authenticated(self):\n         \"\"\"Comprueba si el login fue exitoso.\"\"\"\n@@ -56,7 +65,7 @@ def rate_dataset_invalid_rating(self):\n         elif response:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    @task(1)\n+    @task(3)\n     def rate_dataset_not_found(self):\n         \"\"\"Simula un usuario intentando calificar un dataset que no existe.\"\"\"\n         response = self.post_with_auth(\"/datasets/100/rate\", json={\"rating\": 3})\n@@ -65,7 +74,7 @@ def rate_dataset_not_found(self):\n         elif response:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    @task(1)\n+    @task(4)\n     def rate_dataset_unauthorized(self):\n         \"\"\"Simula un usuario no autenticado intentando calificar un dataset.\"\"\"\n         response = self.client.post('/datasets/17/rate', json={\"rating\": 4})\n@@ -74,19 +83,7 @@ def rate_dataset_unauthorized(self):\n         else:\n             print(\"Error inesperado:\", response.status_code, response.text)\n \n-    def login(self):\n-        \"\"\"Simula el inicio de sesi\u00f3n del usuario.\"\"\"\n-        response = self.client.post(\n-            \"/login\",\n-            {\n-                \"username\": \"test_user\",\n-                \"password\": \"test_password\"\n-            },\n-            name=\"User Login\"\n-        )\n-        self.csrf_token = get_csrf_token(response)\n-\n-    @task\n+    @task(5)\n     def create_dataset(self):\n         \"\"\"Simula la creaci\u00f3n de un nuevo dataset.\"\"\"\n         dataset_payload = {\n@@ -105,10 +102,10 @@ def create_dataset(self):\n             if response.status_code != 200 or \"error\" in response.text.lower():\n                 response.failure(\"Dataset creation failed\")\n \n-    @task\n+    @task(6)\n     def view_user_datasets(self):\n         \"\"\"Simula la visualizaci\u00f3n de la p\u00e1gina de datasets del usuario.\"\"\"\n-        user_id = 7  # Cambiar seg\u00fan el ID del usuario deseado\n+        user_id = 7\n         with self.client.get(\n             f\"/api/v1/datasets/user/{user_id}\",\n             name=\"View User Datasets\","
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/118",
    "id": 2233989705,
    "node_id": "PR_kwDONB39G86FJ_pJ",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/118",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/118.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/118.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/118",
    "number": 118,
    "state": "closed",
    "locked": false,
    "title": "test: Add selenium tests",
    "user": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-13T14:52:15Z",
    "updated_at": "2024-12-15T16:10:20Z",
    "closed_at": "2024-12-13T15:00:52Z",
    "merged_at": "2024-12-13T15:00:52Z",
    "merge_commit_sha": "05f2cb132ef7186346932fe91eaf59e86d1678f6",
    "assignee": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pabmatang",
        "id": 73099537,
        "node_id": "MDQ6VXNlcjczMDk5NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pabmatang",
        "html_url": "https://github.com/pabmatang",
        "followers_url": "https://api.github.com/users/pabmatang/followers",
        "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
        "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
        "organizations_url": "https://api.github.com/users/pabmatang/orgs",
        "repos_url": "https://api.github.com/users/pabmatang/repos",
        "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pabmatang/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/118/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/118/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/118/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/23e3d3fe7275cea79350eb59c9edb6f971169a26",
    "head": {
      "label": "TostaHub:viewUserProfile",
      "ref": "viewUserProfile",
      "sha": "23e3d3fe7275cea79350eb59c9edb6f971169a26",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "c5b688c0dedb432a779e1ca3ddea782c72597dd8",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/118"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/118"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/118"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/118/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/118/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/118/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/23e3d3fe7275cea79350eb59c9edb6f971169a26"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "e210b170348c724345f91e2ffd8dbae9b047961d",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/23e3d3fe7275cea79350eb59c9edb6f971169a26/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/23e3d3fe7275cea79350eb59c9edb6f971169a26/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=23e3d3fe7275cea79350eb59c9edb6f971169a26",
        "patch": "@@ -180,6 +180,43 @@ def test_testViewUserProfileSelenium():\n         close_driver(driver)\n \n \n+def test_DownloadUvlDataset():\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the login page\n+        driver.get(f\"{host}\")\n+        wait_for_page_to_load(driver)\n+\n+        driver.find_element(By.LINK_TEXT, \"Sample dataset 4\").click()\n+        driver.find_element(By.LINK_TEXT, \"Doe, Jane\").click()\n+        driver.find_element(By.LINK_TEXT, \"Sample dataset 2\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"Glencoe\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"DIMACS\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"SPLOT\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport24\").click()\n+        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport25\").click()\n+        driver.find_element(By.LINK_TEXT, \"UVL\").click()\n+        driver.find_element(By.ID, \"btnGroupDropExport26\").click()\n+        driver.find_element(By.LINK_TEXT, \"Descargar todos (ZIP)\").click()\n+\n+        print(\"Test 3 passed!\")\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n # Call the test function\n test_upload_dataset()\n test_testViewUserProfileSelenium()\n+test_DownloadUvlDataset()"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/117",
    "id": 2233608787,
    "node_id": "PR_kwDONB39G86FIipT",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/117",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/117.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/117.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/117",
    "number": 117,
    "state": "closed",
    "locked": false,
    "title": "test: selenium test for explore repository",
    "user": {
      "login": "Leonidas6000",
      "id": 73244549,
      "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leonidas6000",
      "html_url": "https://github.com/Leonidas6000",
      "followers_url": "https://api.github.com/users/Leonidas6000/followers",
      "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
      "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
      "repos_url": "https://api.github.com/users/Leonidas6000/repos",
      "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-13T11:14:33Z",
    "updated_at": "2024-12-13T11:19:53Z",
    "closed_at": "2024-12-13T11:19:53Z",
    "merged_at": "2024-12-13T11:19:53Z",
    "merge_commit_sha": "d9538dc94d8378fa88966f5de37ff6bc4554e638",
    "assignee": {
      "login": "Leonidas6000",
      "id": 73244549,
      "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leonidas6000",
      "html_url": "https://github.com/Leonidas6000",
      "followers_url": "https://api.github.com/users/Leonidas6000/followers",
      "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
      "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
      "repos_url": "https://api.github.com/users/Leonidas6000/repos",
      "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "Leonidas6000",
        "id": 73244549,
        "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
        "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Leonidas6000",
        "html_url": "https://github.com/Leonidas6000",
        "followers_url": "https://api.github.com/users/Leonidas6000/followers",
        "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
        "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
        "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
        "repos_url": "https://api.github.com/users/Leonidas6000/repos",
        "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/117/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/117/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/117/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/c5b688c0dedb432a779e1ca3ddea782c72597dd8",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "c5b688c0dedb432a779e1ca3ddea782c72597dd8",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "74e6f2f64a81abf6175c00a934fdf134cfe2b248",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/117"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/117"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/117"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/117/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/117/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/117/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/c5b688c0dedb432a779e1ca3ddea782c72597dd8"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "9ab90d4afa57447e51b888c8f528d20e865a009a",
        "filename": "app/modules/explore/tests/test_selenium.py",
        "status": "modified",
        "additions": 110,
        "deletions": 0,
        "changes": 110,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/c5b688c0dedb432a779e1ca3ddea782c72597dd8/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/c5b688c0dedb432a779e1ca3ddea782c72597dd8/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py?ref=c5b688c0dedb432a779e1ca3ddea782c72597dd8",
        "patch": "@@ -67,6 +67,101 @@ def test_query():\n     close_driver(driver)\n \n \n+def test_author_filter():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"author:Author 4\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"author:Author\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"author:Nonexistent Author\")\n+    check_num_datasets(driver, 0)\n+\n+    close_driver(driver)\n+\n+\n+def test_size_filters():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"min_size:1000\")\n+    check_num_datasets(driver, 3)\n+\n+    set_input(driver, \"query\", \"max_size:2000\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"min_size:500;max_size:1000\")\n+    check_num_datasets(driver, 1)\n+\n+    close_driver(driver)\n+\n+\n+def test_tags_filter():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"tags:tag1\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"query\", \"tags:nonexistent-tag\")\n+    check_num_datasets(driver, 0)\n+\n+    close_driver(driver)\n+\n+\n+def test_models_filter():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"max_models:5\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"min_models:5\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"query\", \"min_models:2;max_models:5\")\n+    check_num_datasets(driver, 4)\n+\n+    close_driver(driver)\n+\n+\n+def test_configuration_filter():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"min_configs:10\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"min_configs:30\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"query\", \"max_configs:50\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"min_configs:5;max_configs:30\")\n+    check_num_datasets(driver, 4)\n+\n+    close_driver(driver)\n+\n+\n def test_filters():\n     driver = initialize_driver()\n     host = get_host_for_selenium_testing()\n@@ -137,6 +232,21 @@ def test_publication_type():\n test_query()\n \n \n+test_author_filter()\n+\n+\n+test_size_filters()\n+\n+\n+test_tags_filter()\n+\n+\n+test_models_filter()\n+\n+\n+test_configuration_filter()\n+\n+\n test_filters()\n \n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/116",
    "id": 2233585876,
    "node_id": "PR_kwDONB39G86FIdDU",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/116",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/116.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/116.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/116",
    "number": 116,
    "state": "closed",
    "locked": false,
    "title": "test: selenium test for explore repository",
    "user": {
      "login": "Leonidas6000",
      "id": 73244549,
      "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leonidas6000",
      "html_url": "https://github.com/Leonidas6000",
      "followers_url": "https://api.github.com/users/Leonidas6000/followers",
      "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
      "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
      "repos_url": "https://api.github.com/users/Leonidas6000/repos",
      "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-13T11:00:56Z",
    "updated_at": "2024-12-13T11:10:09Z",
    "closed_at": "2024-12-13T11:10:01Z",
    "merged_at": "2024-12-13T11:10:01Z",
    "merge_commit_sha": "c5b688c0dedb432a779e1ca3ddea782c72597dd8",
    "assignee": {
      "login": "Leonidas6000",
      "id": 73244549,
      "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leonidas6000",
      "html_url": "https://github.com/Leonidas6000",
      "followers_url": "https://api.github.com/users/Leonidas6000/followers",
      "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
      "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
      "repos_url": "https://api.github.com/users/Leonidas6000/repos",
      "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "Leonidas6000",
        "id": 73244549,
        "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
        "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Leonidas6000",
        "html_url": "https://github.com/Leonidas6000",
        "followers_url": "https://api.github.com/users/Leonidas6000/followers",
        "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
        "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
        "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
        "repos_url": "https://api.github.com/users/Leonidas6000/repos",
        "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/116/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/116/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/116/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/6e2c8bce549b3d0fb00710e45b6f07f9fa2352c7",
    "head": {
      "label": "TostaHub:108-selenium-test-for-advanced-search-querys",
      "ref": "108-selenium-test-for-advanced-search-querys",
      "sha": "6e2c8bce549b3d0fb00710e45b6f07f9fa2352c7",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "bf18fd0058d9b3b64a9e6636108a5d0638754264",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/116"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/116"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/116"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/116/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/116/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/116/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/6e2c8bce549b3d0fb00710e45b6f07f9fa2352c7"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "9ab90d4afa57447e51b888c8f528d20e865a009a",
        "filename": "app/modules/explore/tests/test_selenium.py",
        "status": "modified",
        "additions": 110,
        "deletions": 0,
        "changes": 110,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/6e2c8bce549b3d0fb00710e45b6f07f9fa2352c7/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/6e2c8bce549b3d0fb00710e45b6f07f9fa2352c7/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py?ref=6e2c8bce549b3d0fb00710e45b6f07f9fa2352c7",
        "patch": "@@ -67,6 +67,101 @@ def test_query():\n     close_driver(driver)\n \n \n+def test_author_filter():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"author:Author 4\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"author:Author\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"author:Nonexistent Author\")\n+    check_num_datasets(driver, 0)\n+\n+    close_driver(driver)\n+\n+\n+def test_size_filters():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"min_size:1000\")\n+    check_num_datasets(driver, 3)\n+\n+    set_input(driver, \"query\", \"max_size:2000\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"min_size:500;max_size:1000\")\n+    check_num_datasets(driver, 1)\n+\n+    close_driver(driver)\n+\n+\n+def test_tags_filter():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"tags:tag1\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"query\", \"tags:nonexistent-tag\")\n+    check_num_datasets(driver, 0)\n+\n+    close_driver(driver)\n+\n+\n+def test_models_filter():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"max_models:5\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"min_models:5\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"query\", \"min_models:2;max_models:5\")\n+    check_num_datasets(driver, 4)\n+\n+    close_driver(driver)\n+\n+\n+def test_configuration_filter():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"min_configs:10\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"min_configs:30\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"query\", \"max_configs:50\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"query\", \"min_configs:5;max_configs:30\")\n+    check_num_datasets(driver, 4)\n+\n+    close_driver(driver)\n+\n+\n def test_filters():\n     driver = initialize_driver()\n     host = get_host_for_selenium_testing()\n@@ -137,6 +232,21 @@ def test_publication_type():\n test_query()\n \n \n+test_author_filter()\n+\n+\n+test_size_filters()\n+\n+\n+test_tags_filter()\n+\n+\n+test_models_filter()\n+\n+\n+test_configuration_filter()\n+\n+\n test_filters()\n \n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/115",
    "id": 2232309586,
    "node_id": "PR_kwDONB39G86FDldS",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/115",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/115.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/115.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/115",
    "number": 115,
    "state": "closed",
    "locked": false,
    "title": "fix: Fix migration 002",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-12T18:21:15Z",
    "updated_at": "2024-12-12T18:33:15Z",
    "closed_at": "2024-12-12T18:33:15Z",
    "merged_at": "2024-12-12T18:33:15Z",
    "merge_commit_sha": "74e6f2f64a81abf6175c00a934fdf134cfe2b248",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/115/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/115/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/115/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/bf18fd0058d9b3b64a9e6636108a5d0638754264",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "bf18fd0058d9b3b64a9e6636108a5d0638754264",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "58514605cf068475e1417a084b5c15f3ec0a186a",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/115"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/115"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/115"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/115/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/115/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/115/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/bf18fd0058d9b3b64a9e6636108a5d0638754264"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "983053117d668aaa403d31f3b76c345f3cf0e23f",
        "filename": "migrations/versions/002.py",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/bf18fd0058d9b3b64a9e6636108a5d0638754264/migrations%2Fversions%2F002.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/bf18fd0058d9b3b64a9e6636108a5d0638754264/migrations%2Fversions%2F002.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F002.py?ref=bf18fd0058d9b3b64a9e6636108a5d0638754264",
        "patch": "@@ -22,7 +22,6 @@ def upgrade():\n     tables = inspector.get_table_names()\n \n     # ### commands auto generated by Alembic - please adjust! ###\n-    # op.drop_table('ds_rating', if_exists=True)\n     if 'ds_rating' not in tables:\n         op.create_table('ds_rating',\n             sa.Column('id', sa.Integer(), nullable=False),\n@@ -34,10 +33,16 @@ def upgrade():\n             sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n             sa.PrimaryKeyConstraint('id')\n         )\n-    # with op.batch_alter_table('deposition', schema=None) as batch_op:\n-    # batch_op.drop_index('doi')\n \n-    # op.drop_table('deposition')\n+    if 'deposition' not in tables:\n+        op.create_table('deposition',\n+            sa.Column('id', sa.Integer(), nullable=False),\n+            sa.Column('dep_metadata', sa.JSON(), nullable=False),\n+            sa.Column('status', sa.String(length=50), nullable=False, default=\"draft\"),\n+            sa.Column('doi', sa.String(length=250), nullable=True),\n+            sa.PrimaryKeyConstraint('id')\n+        )\n+\n     with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n         batch_op.add_column(sa.Column('rating', sa.Float(), nullable=True))\n \n@@ -63,4 +68,5 @@ def downgrade():\n     # batch_op.create_index('doi', ['doi'], unique=True)\n \n     op.drop_table('ds_rating')\n+    op.drop_table('deposition')\n     # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/114",
    "id": 2232300235,
    "node_id": "PR_kwDONB39G86FDjLL",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/114",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/114.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/114.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/114",
    "number": 114,
    "state": "closed",
    "locked": false,
    "title": "Fix migration",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-12T18:14:51Z",
    "updated_at": "2024-12-12T18:20:53Z",
    "closed_at": "2024-12-12T18:20:48Z",
    "merged_at": "2024-12-12T18:20:48Z",
    "merge_commit_sha": "bf18fd0058d9b3b64a9e6636108a5d0638754264",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/114/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/114/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/114/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/3e549721189e062ee49989f1d6e3deb8c1cf023b",
    "head": {
      "label": "TostaHub:fixFakenodo",
      "ref": "fixFakenodo",
      "sha": "3e549721189e062ee49989f1d6e3deb8c1cf023b",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/114"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/114"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/114"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/114/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/114/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/114/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/3e549721189e062ee49989f1d6e3deb8c1cf023b"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "878b309be392787f337eca4b31b27e1e97f5a735",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/3e549721189e062ee49989f1d6e3deb8c1cf023b/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/3e549721189e062ee49989f1d6e3deb8c1cf023b/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=3e549721189e062ee49989f1d6e3deb8c1cf023b",
        "patch": "@@ -68,18 +68,20 @@ def create_dataset():\n \n         # send dataset as deposition to Zenodo/Fakenodo\n         data = {}\n-        nodo = \"Fakenodo\" if USE_FAKENODE else \"Zenodo\"\n+        actualNode = \"Fakenodo\" if USE_FAKENODE else \"Zenodo\"\n         try:\n-            nodo_response_json = nodo_service.create_new_deposition(dataset)\n+            nodo_response_json = nodo_service.create_new_deposition(dataset.ds_meta_data)\n             response_data = json.dumps(nodo_response_json)\n             data = json.loads(response_data)\n         except Exception as exc:\n             data = {}\n             nodo_response_json = {}\n-            logger.exception(f\"Exception while create dataset data in {nodo} {exc}\")\n+            logger.exception(f\"Exception while create dataset data in {actualNode} {exc}\")\n \n-        if data.get(\"conceptrecid\"):\n-            deposition_id = data.get(\"id\")\n+        deposition_id = data.get(\"id\")\n+        if deposition_id:\n+            print(\"DEPOSITION\")\n+            print(deposition_id)\n \n             # update dataset with deposition id in Zenodo/Fakenodo\n             dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n@@ -96,7 +98,7 @@ def create_dataset():\n                 deposition_doi = nodo_service.get_doi(deposition_id)\n                 dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n             except Exception as e:\n-                msg = f\"it has not been possible upload feature models in {nodo} and update the DOI: {e}\"\n+                msg = f\"it has not been possible upload feature models in {actualNode} and update the DOI: {e}\"\n                 return jsonify({\"message\": msg}), 200\n \n         # Delete temp folder"
      },
      {
        "sha": "2e6c88c5f812e784393bd835b8b3c6960ee75c9e",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 21,
        "deletions": 9,
        "changes": 30,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/3e549721189e062ee49989f1d6e3deb8c1cf023b/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/3e549721189e062ee49989f1d6e3deb8c1cf023b/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=3e549721189e062ee49989f1d6e3deb8c1cf023b",
        "patch": "@@ -32,7 +32,8 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         max_size_filter = None\n \n         # Inicia la consulta, usando el alias en la uni\u00f3n\n-        query = db.session.query(DataSet).join(ds_meta_data_alias, DataSet.ds_meta_data)\n+        query = db.session.query(DataSet).join(ds_meta_data_alias, DataSet.ds_meta_data)\\\n+            .filter(DSMetaData.dataset_doi.isnot(None))\n \n         # Filtrar por tipo de publicaci\u00f3n\n         if publication_type != \"any\":\n@@ -75,12 +76,12 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n             # Filtrar por numero maximo de modelos\n             elif filter_item.startswith('max_models:'):\n                 max_model_filter = filter_item[11:].strip()\n-                query = query.group_by(DataSet.id).having(func.count(Hubfile.id) <= int(max_model_filter))\n+                max_uvl = max_model_filter\n \n             # Filtrar por numero minimo de modelos\n             elif filter_item.startswith('min_models:'):\n                 min_model_filter = filter_item[11:].strip()\n-                query = query.group_by(DataSet.id).having(func.count(Hubfile.id) >= int(min_model_filter))\n+                min_uvl = min_model_filter\n \n             # Filtrar por numero maximo de configuraciones\n             elif filter_item.startswith('max_configs:'):\n@@ -116,12 +117,6 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         query = query.join(FeatureModel, FeatureModel.data_set_id == DataSet.id)  # Uni\u00f3n con FeatureModel\n         query = query.join(Hubfile, Hubfile.feature_model_id == FeatureModel.id)  # Uni\u00f3n con Hubfile\n \n-        if min_uvl.isdigit():\n-            query = query.group_by(DataSet.id).having(func.count(Hubfile.id) >= int(min_uvl))\n-\n-        if max_uvl.isdigit():\n-            query = query.group_by(DataSet.id).having(func.count(Hubfile.id) <= int(max_uvl))\n-\n         # Ordenar resultados\n         if sorting == \"oldest\":\n             query = query.order_by(DataSet.created_at.asc())\n@@ -151,6 +146,12 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n                 )\n             ]\n \n+        if min_uvl.isdigit() or max_uvl.isdigit():\n+            results = [\n+                ds for ds in results\n+                if num_uvls_between(ds, min_uvl, max_uvl)\n+            ]\n+\n         if min_num_configurations.isdigit() or max_num_configurations.isdigit():\n             results = [\n                 ds for ds in results\n@@ -166,6 +167,17 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         return results\n \n \n+def num_uvls_between(dataset, min_num, max_num):\n+    num = dataset.get_files_count()\n+    valid_min = min_num.isdigit()\n+    valid_max = max_num.isdigit()\n+    if valid_min and valid_max:\n+        return num >= int(min_num) and num <= int(max_num)\n+    else:\n+        return (valid_min and num >= int(min_num)\n+                or valid_max and num <= int(max_num))\n+\n+\n def num_configurations_between(file_id, min_num_configurations, max_num_configurations):\n     result, status_code = get_num_configurations(file_id)\n "
      },
      {
        "sha": "be4afc13af443641c4aeb0ba3b8c92b28f6268e4",
        "filename": "app/modules/fakenodo/repositories.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/3e549721189e062ee49989f1d6e3deb8c1cf023b/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/3e549721189e062ee49989f1d6e3deb8c1cf023b/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Frepositories.py?ref=3e549721189e062ee49989f1d6e3deb8c1cf023b",
        "patch": "@@ -7,5 +7,5 @@ class DepositionRepo(BaseRepository):\n     def __init__(self):\n         super().__init__(Deposition)\n \n-    def create_new_deposition(self, metadata):\n-        return self.create(metadata=metadata)\n+    def create_new_deposition(self, dep_metadata):\n+        return self.create(dep_metadata=dep_metadata)"
      },
      {
        "sha": "648fe235ec9e967b2566bec818aaa98aedc4f107",
        "filename": "app/modules/fakenodo/services.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/3e549721189e062ee49989f1d6e3deb8c1cf023b/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/3e549721189e062ee49989f1d6e3deb8c1cf023b/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fservices.py?ref=3e549721189e062ee49989f1d6e3deb8c1cf023b",
        "patch": "@@ -25,7 +25,7 @@ def create_new_deposition(self, ds_meta_data: DSMetaData) -> dict:\n         \"\"\"\n         Create a new deposition in Fakenodo\n         Args:\n-            dataset (Dataset): The dataset contain ing the necessary metadata\n+            dataset (Dataset): The dataset containing the necessary metadata\n         Returns:\n             dict: JSON format with the details of the deposition\n         \"\"\"\n@@ -56,6 +56,8 @@ def create_new_deposition(self, ds_meta_data: DSMetaData) -> dict:\n         }\n         try:\n             deposition = self.deposition_repository.create_new_deposition(dep_metadata=metadataJSON)\n+            print(\"DEPOSIIITION\")\n+            print(deposition)\n             return {\n                 \"id\": deposition.id,\n                 \"metadata\": metadataJSON,"
      },
      {
        "sha": "983053117d668aaa403d31f3b76c345f3cf0e23f",
        "filename": "migrations/versions/002.py",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/3e549721189e062ee49989f1d6e3deb8c1cf023b/migrations%2Fversions%2F002.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/3e549721189e062ee49989f1d6e3deb8c1cf023b/migrations%2Fversions%2F002.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F002.py?ref=3e549721189e062ee49989f1d6e3deb8c1cf023b",
        "patch": "@@ -22,7 +22,6 @@ def upgrade():\n     tables = inspector.get_table_names()\n \n     # ### commands auto generated by Alembic - please adjust! ###\n-    # op.drop_table('ds_rating', if_exists=True)\n     if 'ds_rating' not in tables:\n         op.create_table('ds_rating',\n             sa.Column('id', sa.Integer(), nullable=False),\n@@ -34,10 +33,16 @@ def upgrade():\n             sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n             sa.PrimaryKeyConstraint('id')\n         )\n-    # with op.batch_alter_table('deposition', schema=None) as batch_op:\n-    # batch_op.drop_index('doi')\n \n-    # op.drop_table('deposition')\n+    if 'deposition' not in tables:\n+        op.create_table('deposition',\n+            sa.Column('id', sa.Integer(), nullable=False),\n+            sa.Column('dep_metadata', sa.JSON(), nullable=False),\n+            sa.Column('status', sa.String(length=50), nullable=False, default=\"draft\"),\n+            sa.Column('doi', sa.String(length=250), nullable=True),\n+            sa.PrimaryKeyConstraint('id')\n+        )\n+\n     with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n         batch_op.add_column(sa.Column('rating', sa.Float(), nullable=True))\n \n@@ -63,4 +68,5 @@ def downgrade():\n     # batch_op.create_index('doi', ['doi'], unique=True)\n \n     op.drop_table('ds_rating')\n+    op.drop_table('deposition')\n     # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/113",
    "id": 2232143272,
    "node_id": "PR_kwDONB39G86FC82o",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/113",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/113.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/113.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/113",
    "number": 113,
    "state": "closed",
    "locked": false,
    "title": "Develop",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-12T16:50:35Z",
    "updated_at": "2024-12-12T17:03:31Z",
    "closed_at": "2024-12-12T17:03:31Z",
    "merged_at": "2024-12-12T17:03:31Z",
    "merge_commit_sha": "58514605cf068475e1417a084b5c15f3ec0a186a",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/113/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/113/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/113/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "5173b6a57e80242073168941cc2b0ce4c4b6de22",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/113"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/113"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/113"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/113/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/113/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/113/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "0853db8b106f43511d32756ee1231fa3b14f1ae5",
        "filename": ".github/workflows/Flujos de trabajo.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/.github%2Fworkflows%2FFlujos%20de%20trabajo.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/.github%2Fworkflows%2FFlujos%20de%20trabajo.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2FFlujos%20de%20trabajo.pdf?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8"
      },
      {
        "sha": "b6b0cb7138064565fc3b62da44ba6a80e32d2d96",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -68,8 +68,12 @@ jobs:\n           deploy_url: ${{ secrets.SERVER_DEPLOY_HOOK_URL }}\n           token: ${{ secrets.SERVER_DEPLOY_TOKEN }}\n         run: |\n-          curl -X POST \"$deploy_url\" -H \"Authorization: ${token}\"\n-  \n+          output=$(curl -X POST \"$deploy_url\" -H \"Authorization: ${token}\")\n+          if echo \"$output\" | grep -q \"Error occurred while executing the hook's command\"; then\n+            echo \"Deployment failed due to hook error. Exiting.\"\n+            exit 1\n+          fi\n+\n       - name: Monitor Develop Deployment Status\n         if: github.ref_name == 'develop'\n         env:"
      },
      {
        "sha": "57c20159d20707de998f985904b5d5391fceb8c6",
        "filename": ".moduleignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/.moduleignore",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/.moduleignore",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.moduleignore?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -1 +1 @@\n-webhook\n\\ No newline at end of file\n+webhook"
      },
      {
        "sha": "cc5860748ac1e44152289e863e79d9bd0b3bb1fb",
        "filename": "app/modules/common/dbutils.py",
        "status": "modified",
        "additions": 35,
        "deletions": 2,
        "changes": 37,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fcommon%2Fdbutils.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -3,6 +3,7 @@\n from app import db\n from app.modules.auth.models import User\n from app.modules.dataset.models import (\n+    Author,\n     DataSet,\n     DSMetaData,\n     PublicationType,\n@@ -14,7 +15,11 @@\n \n \n def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN, tags=\"\",\n-                      date=\"\", valid=True, should_file_exist=True):\n+                      date=\"\", valid=True, should_file_exist=True, authors=None, total_file_size=None, num_files=None):\n+    # Si no se proporcionan autores, usa un autor por defecto\n+    if authors is None:\n+        authors = [{\"name\": f\"Author {id}\", \"affiliation\": \"Affiliation\", \"orcid\": f\"orcid{id}\"}]\n+\n     user_test = User(email=f'user{id}@example.com', password='test1234')\n     db.session.add(user_test)\n     db.session.commit()\n@@ -30,12 +35,19 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n             publication_type=publication_type,\n             publication_doi=f'10.1234/dataset{id}',\n             dataset_doi=f'10.1234/dataset{id}',\n-            tags='tag1, tag2',\n+            tags=tags,\n             ds_metrics_id=ds_metrics.id\n         )\n     db.session.add(ds_meta_data)\n     db.session.commit()\n \n+    # Agregar autores al dataset\n+    for author in authors:\n+        author_obj = Author(name=author['name'], affiliation=author.get('affiliation', ''),\n+                            orcid=author.get('orcid', ''), ds_meta_data_id=ds_meta_data.id)\n+        db.session.add(author_obj)\n+    db.session.commit()\n+\n     created_at = datetime.now(timezone.utc) if date == \"\" else datetime.strptime(date, '%Y-%m-%d')\n     dataset = DataSet(\n             user_id=user_test.id,\n@@ -64,6 +76,7 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n     db.session.add(feature_model)\n     db.session.commit()\n \n+    # Asignar archivos\n     if should_file_exist:\n         load_dotenv()\n         working_dir = os.getenv('WORKING_DIR', '')\n@@ -84,3 +97,23 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n         )\n         db.session.add(uvl_file)\n         db.session.commit()\n+\n+        # Si se especifica un tama\u00f1o total de archivos, ajustamos la l\u00f3gica\n+        if total_file_size is not None:\n+            uvl_file.size = total_file_size\n+            db.session.commit()\n+\n+        # Si se especifica el n\u00famero de archivos, lo usamos\n+        if num_files is not None:\n+            for i in range(1, num_files):\n+                additional_file_name = f'file{id % 12 + i}.uvl'\n+                shutil.copy(os.path.join(src_folder, additional_file_name), dest_folder)\n+\n+                additional_uvl_file = Hubfile(\n+                    name=additional_file_name,\n+                    checksum=f'checksum{id + i}',\n+                    size=os.path.getsize(file_path),\n+                    feature_model_id=feature_model.id\n+                )\n+                db.session.add(additional_uvl_file)\n+            db.session.commit()"
      },
      {
        "sha": "c846ebf6ff610f6d3cb977f2e560270723db5aee",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 221,
        "deletions": 216,
        "changes": 437,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -1,239 +1,244 @@\n var currentId = 0;\n-        var amount_authors = 0;\n-\n-        function show_upload_dataset() {\n-            document.getElementById(\"upload_dataset\").style.display = \"block\";\n-        }\n-\n-        function generateIncrementalId() {\n-            return currentId++;\n-        }\n-\n-        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n-            let fieldWrapper = document.createElement('div');\n-            fieldWrapper.className = className;\n-\n-            let label = document.createElement('label');\n-            label.className = 'form-label';\n-            label.for = name;\n-            label.textContent = text;\n-\n-            let field = document.createElement('input');\n-            field.name = name;\n-            field.className = 'form-control';\n-\n-            fieldWrapper.appendChild(label);\n-            fieldWrapper.appendChild(field);\n-            newAuthor.appendChild(fieldWrapper);\n-        }\n-\n-        function addRemoveButton(newAuthor) {\n-            let buttonWrapper = document.createElement('div');\n-            buttonWrapper.className = 'col-12 mb-2';\n-\n-            let button = document.createElement('button');\n-            button.textContent = 'Remove author';\n-            button.className = 'btn btn-danger btn-sm';\n-            button.type = 'button';\n-            button.addEventListener('click', function (event) {\n-                event.preventDefault();\n-                newAuthor.remove();\n+var amount_authors = 0;\n+/* global use_fakenodo */\n+\n+function show_upload_dataset() {\n+    document.getElementById(\"upload_dataset\").style.display = \"block\";\n+}\n+\n+function generateIncrementalId() {\n+    return currentId++;\n+}\n+\n+function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n+    let fieldWrapper = document.createElement('div');\n+    fieldWrapper.className = className;\n+\n+    let label = document.createElement('label');\n+    label.className = 'form-label';\n+    label.for = name;\n+    label.textContent = text;\n+\n+    let field = document.createElement('input');\n+    field.name = name;\n+    field.className = 'form-control';\n+\n+    fieldWrapper.appendChild(label);\n+    fieldWrapper.appendChild(field);\n+    newAuthor.appendChild(fieldWrapper);\n+}\n+\n+function addRemoveButton(newAuthor) {\n+    let buttonWrapper = document.createElement('div');\n+    buttonWrapper.className = 'col-12 mb-2';\n+\n+    let button = document.createElement('button');\n+    button.textContent = 'Remove author';\n+    button.className = 'btn btn-danger btn-sm';\n+    button.type = 'button';\n+    button.addEventListener('click', function (event) {\n+        event.preventDefault();\n+        newAuthor.remove();\n+    });\n+\n+    buttonWrapper.appendChild(button);\n+    newAuthor.appendChild(buttonWrapper);\n+}\n+\n+function createAuthorBlock(idx, suffix) {\n+    let newAuthor = document.createElement('div');\n+    newAuthor.className = 'author row';\n+    newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n+\n+    addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n+    addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n+    addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n+    addRemoveButton(newAuthor);\n+\n+    return newAuthor;\n+}\n+\n+function check_title_and_description() {\n+    let titleInput = document.querySelector('input[name=\"title\"]');\n+    let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n+\n+    titleInput.classList.remove(\"error\");\n+    descriptionTextarea.classList.remove(\"error\");\n+    clean_upload_errors();\n+\n+    let titleLength = titleInput.value.trim().length;\n+    let descriptionLength = descriptionTextarea.value.trim().length;\n+\n+    if (titleLength < 3) {\n+        write_upload_error(\"title must be of minimum length 3\");\n+        titleInput.classList.add(\"error\");\n+    }\n+\n+    if (descriptionLength < 3) {\n+        write_upload_error(\"description must be of minimum length 3\");\n+        descriptionTextarea.classList.add(\"error\");\n+    }\n+\n+    return (titleLength >= 3 && descriptionLength >= 3);\n+}\n+\n+\n+document.getElementById('add_author').addEventListener('click', function () {\n+    let authors = document.getElementById('authors');\n+    let newAuthor = createAuthorBlock(amount_authors++, \"\");\n+    authors.appendChild(newAuthor);\n+});\n+\n+\n+document.addEventListener('click', function (event) {\n+    if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n+\n+        let authorsButtonId = event.target.id;\n+        let authorsId = authorsButtonId.replace(\"_button\", \"\");\n+        let authors = document.getElementById(authorsId);\n+        let id = authorsId.replace(\"_form_authors\", \"\")\n+        let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n+        authors.appendChild(newAuthor);\n+\n+    }\n+});\n+\n+function show_loading() {\n+    document.getElementById(\"upload_button\").style.display = \"none\";\n+    document.getElementById(\"loading\").style.display = \"block\";\n+}\n+\n+function hide_loading() {\n+    document.getElementById(\"upload_button\").style.display = \"block\";\n+    document.getElementById(\"loading\").style.display = \"none\";\n+}\n+\n+function clean_upload_errors() {\n+    let upload_error = document.getElementById(\"upload_error\");\n+    upload_error.innerHTML = \"\";\n+    upload_error.style.display = 'none';\n+}\n+\n+function write_upload_error(error_message) {\n+    let upload_error = document.getElementById(\"upload_error\");\n+    let alert = document.createElement('p');\n+    alert.style.margin = '0';\n+    alert.style.padding = '0';\n+    alert.textContent = 'Upload error: ' + error_message;\n+    upload_error.appendChild(alert);\n+    upload_error.style.display = 'block';\n+}\n+\n+window.onload = function () {\n+\n+    if (use_fakenodo) {\n+        document.getElementById(\"use_fakenodo\").style.display = \"block\";\n+    } else {\n+        test_zenodo_connection();\n+    }\n+\n+    document.getElementById('upload_button').addEventListener('click', function () {\n+\n+        clean_upload_errors();\n+        show_loading();\n+\n+        // check title and description\n+        let check = check_title_and_description();\n+\n+        if (check) {\n+            // process data form\n+            const formData = {};\n+\n+            [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                const form = document.getElementById(formId);\n+                const inputs = form.querySelectorAll('input, select, textarea');\n+                inputs.forEach(input => {\n+                    if (input.name) {\n+                        formData[input.name] = formData[input.name] || [];\n+                        formData[input.name].push(input.value);\n+                    }\n+                });\n             });\n \n-            buttonWrapper.appendChild(button);\n-            newAuthor.appendChild(buttonWrapper);\n-        }\n-\n-        function createAuthorBlock(idx, suffix) {\n-            let newAuthor = document.createElement('div');\n-            newAuthor.className = 'author row';\n-            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n-\n-            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n-            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n-            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n-            addRemoveButton(newAuthor);\n-\n-            return newAuthor;\n-        }\n-\n-        function check_title_and_description() {\n-            let titleInput = document.querySelector('input[name=\"title\"]');\n-            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n-\n-            titleInput.classList.remove(\"error\");\n-            descriptionTextarea.classList.remove(\"error\");\n-            clean_upload_errors();\n+            let formDataJson = JSON.stringify(formData);\n+            console.log(formDataJson);\n \n-            let titleLength = titleInput.value.trim().length;\n-            let descriptionLength = descriptionTextarea.value.trim().length;\n-\n-            if (titleLength < 3) {\n-                write_upload_error(\"title must be of minimum length 3\");\n-                titleInput.classList.add(\"error\");\n-            }\n+            const csrfToken = document.getElementById('csrf_token').value;\n+            const formUploadData = new FormData();\n+            formUploadData.append('csrf_token', csrfToken);\n \n-            if (descriptionLength < 3) {\n-                write_upload_error(\"description must be of minimum length 3\");\n-                descriptionTextarea.classList.add(\"error\");\n+            for (let key in formData) {\n+                if (formData.hasOwnProperty(key)) {\n+                    formUploadData.set(key, formData[key]);\n+                }\n             }\n \n-            return (titleLength >= 3 && descriptionLength >= 3);\n-        }\n-\n-\n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n-\n-        document.addEventListener('click', function (event) {\n-            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n-\n-                let authorsButtonId = event.target.id;\n-                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n-                let authors = document.getElementById(authorsId);\n-                let id = authorsId.replace(\"_form_authors\", \"\")\n-                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n-                authors.appendChild(newAuthor);\n-\n+            let checked_orcid = true;\n+            if (Array.isArray(formData.author_orcid)) {\n+                for (let orcid of formData.author_orcid) {\n+                    orcid = orcid.trim();\n+                    if (orcid !== '' && !isValidOrcid(orcid)) {\n+                        hide_loading();\n+                        write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                        checked_orcid = false;\n+                        break;\n+                    }\n+                }\n             }\n-        });\n-\n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n \n-        function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n-            document.getElementById(\"loading\").style.display = \"none\";\n-        }\n-\n-        function clean_upload_errors() {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            upload_error.innerHTML = \"\";\n-            upload_error.style.display = 'none';\n-        }\n-\n-        function write_upload_error(error_message) {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            let alert = document.createElement('p');\n-            alert.style.margin = '0';\n-            alert.style.padding = '0';\n-            alert.textContent = 'Upload error: ' + error_message;\n-            upload_error.appendChild(alert);\n-            upload_error.style.display = 'block';\n-        }\n-\n-        window.onload = function () {\n-\n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n \n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n+            let checked_name = true;\n+            if (Array.isArray(formData.author_name)) {\n+                for (let name of formData.author_name) {\n+                    name = name.trim();\n+                    if (name === '') {\n+                        hide_loading();\n+                        write_upload_error(\"The author's name cannot be empty\");\n+                        checked_name = false;\n+                        break;\n                     }\n+                }\n+            }\n \n \n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n+            if (checked_orcid && checked_name) {\n+                fetch('/dataset/upload', {\n+                    method: 'POST',\n+                    body: formUploadData\n+                })\n+                    .then(response => {\n+                        if (response.ok) {\n+                            console.log('Dataset sent successfully');\n+                            response.json().then(data => {\n+                                console.log(data.message);\n+                                window.location.href = \"/dataset/list\";\n+                            });\n+                        } else {\n+                            response.json().then(data => {\n+                                console.error('Error: ' + data.message);\n                                 hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n \n+                                write_upload_error(data.message);\n \n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n                             });\n-                    }\n+                        }\n+                    })\n+                    .catch(error => {\n+                        console.error('Error in POST request:', error);\n+                    });\n+            }\n \n \n-                } else {\n-                    hide_loading();\n-                }\n+        } else {\n+            hide_loading();\n+        }\n \n \n-            });\n-        };\n+    });\n+};\n \n \n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n\\ No newline at end of file\n+function isValidOrcid(orcid) {\n+    let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+    return orcidRegex.test(orcid);\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "cc1a9b2156e1a3d5f8c836965222417dd148017b",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 51,
        "deletions": 44,
        "changes": 95,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -1,39 +1,21 @@\n+import json\n import logging\n import os\n-import json\n import shutil\n import tempfile\n import uuid\n import io\n import zipfile\n-from flask import send_file\n from datetime import datetime, timezone\n from zipfile import ZipFile\n-from app.modules.dataset.forms import EditDatasetForm\n-from flask import abort\n-from flask_login import current_user\n-from werkzeug.exceptions import NotFound\n-from app.modules.hubfile.services import HubfileService\n-from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter, UVLWriter\n-from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n-from flask import (\n-    flash,\n-    redirect,\n-    render_template,\n-    request,\n-    jsonify,\n-    send_from_directory,\n-    make_response,\n-    url_for\n-)\n-from flask_login import login_required\n \n-from app.modules.dataset.forms import DataSetForm\n-from app.modules.dataset.models import (\n-    DSDownloadRecord,\n-    PublicationType\n-)\n+\n+from flask import (abort, jsonify, make_response, render_template, send_file,\n+                   request, send_from_directory, url_for, flash, redirect)\n+from flask_login import current_user, login_required\n from app.modules.dataset import dataset_bp\n+from app.modules.dataset.forms import DataSetForm\n+from app.modules.dataset.models import DSDownloadRecord, PublicationType\n from app.modules.dataset.services import (\n     AuthorService,\n     DSDownloadRecordService,\n@@ -43,15 +25,22 @@\n     DOIMappingService,\n     DSRatingService\n )\n+from app.modules.fakenodo.services import FakenodoService\n+from app.modules.dataset.forms import EditDatasetForm\n+from werkzeug.exceptions import NotFound\n+from app.modules.hubfile.services import HubfileService\n+from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter, UVLWriter\n+from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n from app.modules.zenodo.services import ZenodoService\n+from core.configuration.configuration import USE_FAKENODE\n \n logger = logging.getLogger(__name__)\n \n \n dataset_service = DataSetService()\n author_service = AuthorService()\n dsmetadata_service = DSMetaDataService()\n-zenodo_service = ZenodoService()\n+nodo_service = FakenodoService() if USE_FAKENODE else ZenodoService()\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n ds_rating_service = DSRatingService()\n@@ -77,36 +66,39 @@ def create_dataset():\n             logger.exception(f\"Exception while create dataset data in local {exc}\")\n             return jsonify({\"Exception while create dataset data in local: \": str(exc)}), 400\n \n-        # send dataset as deposition to Zenodo\n+        # send dataset as deposition to Zenodo/Fakenodo\n         data = {}\n+        actualNode = \"Fakenodo\" if USE_FAKENODE else \"Zenodo\"\n         try:\n-            zenodo_response_json = zenodo_service.create_new_deposition(dataset)\n-            response_data = json.dumps(zenodo_response_json)\n+            nodo_response_json = nodo_service.create_new_deposition(dataset.ds_meta_data)\n+            response_data = json.dumps(nodo_response_json)\n             data = json.loads(response_data)\n         except Exception as exc:\n             data = {}\n-            zenodo_response_json = {}\n-            logger.exception(f\"Exception while create dataset data in Zenodo {exc}\")\n+            nodo_response_json = {}\n+            logger.exception(f\"Exception while create dataset data in {actualNode} {exc}\")\n \n-        if data.get(\"conceptrecid\"):\n-            deposition_id = data.get(\"id\")\n+        deposition_id = data.get(\"id\")\n+        if deposition_id:\n+            print(\"DEPOSITION\")\n+            print(deposition_id)\n \n-            # update dataset with deposition id in Zenodo\n+            # update dataset with deposition id in Zenodo/Fakenodo\n             dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n \n             try:\n-                # iterate for each feature model (one feature model = one request to Zenodo)\n+                # iterate for each feature model (one feature model = one request to Zenodo/Fakenodo)\n                 for feature_model in dataset.feature_models:\n-                    zenodo_service.upload_file(dataset, deposition_id, feature_model)\n+                    nodo_service.upload_file(dataset, deposition_id, feature_model)\n \n                 # publish deposition\n-                zenodo_service.publish_deposition(deposition_id)\n+                nodo_service.publish_deposition(deposition_id)\n \n                 # update DOI\n-                deposition_doi = zenodo_service.get_doi(deposition_id)\n+                deposition_doi = nodo_service.get_doi(deposition_id)\n                 dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n             except Exception as e:\n-                msg = f\"it has not been possible upload feature models in Zenodo and update the DOI: {e}\"\n+                msg = f\"it has not been possible upload feature models in {actualNode} and update the DOI: {e}\"\n                 return jsonify({\"message\": msg}), 200\n \n         # Delete temp folder\n@@ -117,7 +109,7 @@ def create_dataset():\n         msg = \"Everything works!\"\n         return jsonify({\"message\": msg}), 200\n \n-    return render_template(\"dataset/upload_dataset.html\", form=form)\n+    return render_template(\"dataset/upload_dataset.html\", form=form, use_fakenodo=USE_FAKENODE)\n \n \n @dataset_bp.route(\"/dataset/list\", methods=[\"GET\", \"POST\"])\n@@ -455,10 +447,25 @@ def edit_dataset(dataset_id):\n @dataset_bp.route(\"/datasets/<int:dataset_id>/rate\", methods=[\"POST\"])\n @login_required\n def rate_dataset(dataset_id):\n-    user_id = current_user.id\n-    rating_value = request.json.get('rating')\n-    rating = ds_rating_service.add_or_update_rating(dataset_id, user_id, rating_value)\n-    return jsonify({'message': 'Rating added', 'rating': rating.to_dict()}), 200\n+    try:\n+        user_id = current_user.id\n+        rating_value = request.json.get('rating')\n+\n+        # Validar que el rating est\u00e9 presente\n+        if rating_value is None:\n+            return jsonify({'error': 'Rating is required.'}), 400\n+\n+        # Intentar a\u00f1adir o actualizar el rating\n+        rating = ds_rating_service.add_or_update_rating(dataset_id, user_id, rating_value)\n+        return jsonify({'message': 'Rating added', 'rating': rating.to_dict()}), 200\n+\n+    except ValueError as e:\n+        # Manejar valores inv\u00e1lidos de rating\n+        return jsonify({'error': str(e)}), 400\n+\n+    except Exception:\n+        # Manejar errores inesperados\n+        return jsonify({'error': 'Rating must be between 1 and 5.'}), 500\n \n \n @dataset_bp.route('/datasets/<int:dataset_id>/average-rating', methods=['GET'])"
      },
      {
        "sha": "67b43f733ad70adef4a0c0b5cc50181a3ff0e157",
        "filename": "app/modules/dataset/services.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fservices.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -215,6 +215,14 @@ def __init__(self):\n         super().__init__(DSRatingRepository())\n \n     def add_or_update_rating(self, dsmetadata_id: int, user_id: int, rating_value: int) -> DSRating:\n+        try:\n+            rating_value = int(rating_value)\n+        except ValueError:\n+            raise ValueError(\"El rating debe ser un n\u00famero entero.\")\n+\n+    # Validar que el rating est\u00e9 entre 1 y 5\n+        if rating_value < 1 or rating_value > 5:\n+            raise ValueError(\"El rating debe estar entre 1 y 5.\")\n         rating = self.repository.get_user_rating(dsmetadata_id, user_id)\n         if rating:\n             print(\"Actualizando rating a {rating_value}\")"
      },
      {
        "sha": "0579aaf67c7fedeb258b116ece8b8ad1d45aa933",
        "filename": "app/modules/dataset/templates/dataset/upload_dataset.html",
        "status": "modified",
        "additions": 341,
        "deletions": 346,
        "changes": 687,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -4,355 +4,350 @@\n \n {% block content %}\n \n-    <h1 class=\"h2 mb-3\"><b>Upload</b> dataset</h1>\n-\n-    <div class=\"row\">\n-        <div class=\"col-12 mb-3\">\n-            <div class=\"alert alert-warning\" role=\"alert\" id=\"test_zenodo_connection_error\" style=\"display: none\">\n-                <div class=\"alert-message\">\n-\n-                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n-                        connection to the Zenodo API</h4>\n-                    <p class=\"p-0 m-0\">\n-                        There seems to be some kind of problem with the Zenodo API and synchronization of your dataset\n-                        files may not be possible. We will save your files locally to eventually synchronize them with\n-                        Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n-                        anything about it.\n-                    </p>\n-                </div>\n+<h1 class=\"h2 mb-3\"><b>Upload</b> dataset</h1>\n+\n+<div class=\"row\">\n+    <div class=\"col-12 mb-3\">\n+        <div class=\"alert alert-warning\" role=\"alert\" id=\"use_fakenodo\" style=\"display: none\">\n+            <div class=\"alert-message\">\n+\n+                <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i>\n+                    Fakenodo Module is active</h4>\n+                <p class=\"p-0 m-0\">\n+                    The uploaded files will not be stored in Zenodo, but in the local server.\n+                </p>\n             </div>\n         </div>\n-\n     </div>\n+</div>\n \n-    {% if messages %}\n-        <ul>\n-            {% for message in messages %}\n-                <li>{{ message }}</li>\n-            {% endfor %}\n-        </ul>\n-    {% endif %}\n+{% if messages %}\n+<ul>\n+    {% for message in messages %}\n+    <li>{{ message }}</li>\n+    {% endfor %}\n+</ul>\n+{% endif %}\n \n-    <div class=\"row\">\n+<div class=\"row\">\n \n-        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n-            <div id=\"basic_info_form\">\n+    <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+        <div id=\"basic_info_form\">\n \n-                {{ form.hidden_tag() }}\n+            {{ form.hidden_tag() }}\n \n-                <div class=\"row\">\n+            <div class=\"row\">\n \n-                    <div class=\"col-12\">\n+                <div class=\"col-12\">\n \n-                        <h1 class=\"h3 mb-3\">Basic info</h1>\n+                    <h1 class=\"h3 mb-3\">Basic info</h1>\n \n-                        <div class=\"row\" style=\"padding-left: 2rem\">\n+                    <div class=\"row\" style=\"padding-left: 2rem\">\n \n-                            <div class=\"col-lg-6 col-xs-12 col-md-12\">\n-                                <div class=\"mb-3\">\n-                                    {{ form.title.label(class=\"form-label\") }} *\n-                                    {{ form.title(class=\"form-control\") }}\n-                                    {% for error in form.title.errors %}\n-                                        <span style=\"color: red;\">{{ error }}</span>\n-                                    {% endfor %}\n-                                </div>\n+                        <div class=\"col-lg-6 col-xs-12 col-md-12\">\n+                            <div class=\"mb-3\">\n+                                {{ form.title.label(class=\"form-label\") }} *\n+                                {{ form.title(class=\"form-control\") }}\n+                                {% for error in form.title.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                                {% endfor %}\n                             </div>\n+                        </div>\n \n-                            <div class=\"col-12\">\n-                                <div class=\"mb-3\">\n-                                    {{ form.desc.label(class=\"form-label\") }} *\n-                                    {{ form.desc(rows=4, class=\"form-control\") }}\n-                                    {% for error in form.desc.errors %}\n-                                        <span style=\"color: red;\">{{ error }}</span>\n-                                    {% endfor %}\n-                                </div>\n+                        <div class=\"col-12\">\n+                            <div class=\"mb-3\">\n+                                {{ form.desc.label(class=\"form-label\") }} *\n+                                {{ form.desc(rows=4, class=\"form-control\") }}\n+                                {% for error in form.desc.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                                {% endfor %}\n                             </div>\n+                        </div>\n \n-                            <div class=\"col-lg-6 col-6\">\n-                                <div class=\"mb-3\">\n-                                    {{ form.publication_type.label(class=\"form-label\") }}\n-                                    {{ form.publication_type(class=\"form-control\") }}\n-                                </div>\n-\n+                        <div class=\"col-lg-6 col-6\">\n+                            <div class=\"mb-3\">\n+                                {{ form.publication_type.label(class=\"form-label\") }}\n+                                {{ form.publication_type(class=\"form-control\") }}\n                             </div>\n \n-                            <div class=\"col-lg-6 col-6\">\n-                                <div class=\"mb-3\">\n-                                    {{ form.publication_doi.label(class=\"form-label\") }}\n-                                    {{ form.publication_doi(class=\"form-control\") }}\n-                                    {% for error in form.publication_doi.errors %}\n-                                        <span style=\"color: red;\">{{ error }}</span>\n-                                    {% endfor %}\n-                                </div>\n-                            </div>\n+                        </div>\n \n-                            <div class=\"col-6\">\n-                                <div class=\"mb-3\">\n-                                    {{ form.tags.label(class=\"form-label\") }}\n-                                    {{ form.tags(class=\"form-control\") }}\n-                                    {% for error in form.tags.errors %}\n-                                        <span style=\"color: red;\">{{ error }}</span>\n-                                    {% endfor %}\n-                                </div>\n+                        <div class=\"col-lg-6 col-6\">\n+                            <div class=\"mb-3\">\n+                                {{ form.publication_doi.label(class=\"form-label\") }}\n+                                {{ form.publication_doi(class=\"form-control\") }}\n+                                {% for error in form.publication_doi.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                                {% endfor %}\n                             </div>\n+                        </div>\n \n+                        <div class=\"col-6\">\n+                            <div class=\"mb-3\">\n+                                {{ form.tags.label(class=\"form-label\") }}\n+                                {{ form.tags(class=\"form-control\") }}\n+                                {% for error in form.tags.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                                {% endfor %}\n+                            </div>\n                         </div>\n \n-                        <h1 class=\"h3 mb-3 mt-4\">\n-                          Authors\n-                          <a href=\"#\" data-toggle=\"modal\" data-target=\"#infoModal\">\n-                            <i data-feather=\"info\"></i> <!-- Usamos \"info\" porque Feather no tiene un \u00edcono espec\u00edfico llamado \"feather\" para m\u00e1s info -->\n-                          </a>\n-                        </h1>\n+                    </div>\n \n-                        <!-- Modal -->\n-                        <div class=\"modal fade\" id=\"infoModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"infoModalLabel\" aria-hidden=\"true\" style=\"display: none\">\n-                          <div class=\"modal-dialog\" role=\"document\">\n+                    <h1 class=\"h3 mb-3 mt-4\">\n+                        Authors\n+                        <a href=\"#\" data-toggle=\"modal\" data-target=\"#infoModal\">\n+                            <i data-feather=\"info\"></i>\n+                            <!-- Usamos \"info\" porque Feather no tiene un \u00edcono espec\u00edfico llamado \"feather\" para m\u00e1s info -->\n+                        </a>\n+                    </h1>\n+\n+                    <!-- Modal -->\n+                    <div class=\"modal fade\" id=\"infoModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"infoModalLabel\"\n+                        aria-hidden=\"true\" style=\"display: none\">\n+                        <div class=\"modal-dialog\" role=\"document\">\n                             <div class=\"modal-content\">\n-                              <div class=\"modal-header\">\n-                                <h5 class=\"modal-title\" id=\"infoModalLabel\">Informaci\u00f3n Importante</h5>\n-                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n-                                  <span aria-hidden=\"true\">&times;</span>\n-                                </button>\n-                              </div>\n-                              <div class=\"modal-body\">\n-                                \u00a1Cuidado! Los autores no se pueden editar una vez que el dataset se haya subido a UVLHub. Esta funcionalidad estar\u00e1 disponible para futuras versiones.\n-                              </div>\n-                              <div class=\"modal-footer\">\n-                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\n-                              </div>\n+                                <div class=\"modal-header\">\n+                                    <h5 class=\"modal-title\" id=\"infoModalLabel\">Informaci\u00f3n Importante</h5>\n+                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n+                                        <span aria-hidden=\"true\">&times;</span>\n+                                    </button>\n+                                </div>\n+                                <div class=\"modal-body\">\n+                                    \u00a1Cuidado! Los autores no se pueden editar una vez que el dataset se haya subido a\n+                                    UVLHub. Esta funcionalidad estar\u00e1 disponible para futuras versiones.\n+                                </div>\n+                                <div class=\"modal-footer\">\n+                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\n+                                </div>\n                             </div>\n-                          </div>\n                         </div>\n+                    </div>\n \n-                        <div class=\"row\" style=\"padding-left: 2rem\">\n+                    <div class=\"row\" style=\"padding-left: 2rem\">\n \n-                            <div class=\"col-lg-6 col-12 mb-3\">\n-                                <label class=\"form-label\">Author name</label>\n-                                <input class=\"form-control\"\n-                                       disabled\n-                                       value=\"{{ current_user.profile.surname }}, {{ current_user.profile.name }}\">\n-                            </div>\n+                        <div class=\"col-lg-6 col-12 mb-3\">\n+                            <label class=\"form-label\">Author name</label>\n+                            <input class=\"form-control\" disabled\n+                                value=\"{{ current_user.profile.surname }}, {{ current_user.profile.name }}\">\n+                        </div>\n \n-                            <div class=\"col-lg-6 col-12 mb-3\">\n-                                <label class=\"form-label\">Author affiliation</label>\n-                                <input class=\"form-control\"\n-                                       disabled value=\"{{ current_user.profile.affiliation }}\">\n-                            </div>\n+                        <div class=\"col-lg-6 col-12 mb-3\">\n+                            <label class=\"form-label\">Author affiliation</label>\n+                            <input class=\"form-control\" disabled value=\"{{ current_user.profile.affiliation }}\">\n+                        </div>\n \n-                            <div class=\"col-lg-6 col-12 mb-3\">\n-                                <label class=\"form-label\">Author ORCID</label>\n-                                <input class=\"form-control\"\n-                                       disabled value=\"{{ current_user.profile.orcid }}\">\n-                            </div>\n+                        <div class=\"col-lg-6 col-12 mb-3\">\n+                            <label class=\"form-label\">Author ORCID</label>\n+                            <input class=\"form-control\" disabled value=\"{{ current_user.profile.orcid }}\">\n+                        </div>\n \n-                            <div class=\"col-12\">\n-\n-                                <div class=\"mb-3\">\n-\n-                                    <div id=\"authors\">\n-                                        {% for subform in form.authors %}\n-                                        <div class=\"row author\" {% if not loop.first %}\n-                                            style=\"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\"\n-                                            {% endif %}\n-                                        >\n-                                            <div class=\"col-lg-6 col-12 mb-3\">\n-                                                {{ subform.form.name.label(class=\"form-label\") }}\n-                                                {{ subform.form.name(class=\"form-control\", disabled=loop.first) }}\n-                                                {% for error in subform.name.errors %}\n-                                                    <span style=\"color: red;\">{{ error }}</span>\n-                                                {% endfor %}\n-                                            </div>\n+                        <div class=\"col-12\">\n+\n+                            <div class=\"mb-3\">\n+\n+                                <div id=\"authors\">\n+                                    {% for subform in form.authors %}\n+                                    <div class=\"row author\" {% if not loop.first %}\n+                                        style=\"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\"\n+                                        {% endif %}>\n+                                        <div class=\"col-lg-6 col-12 mb-3\">\n+                                            {{ subform.form.name.label(class=\"form-label\") }}\n+                                            {{ subform.form.name(class=\"form-control\", disabled=loop.first) }}\n+                                            {% for error in subform.name.errors %}\n+                                            <span style=\"color: red;\">{{ error }}</span>\n+                                            {% endfor %}\n+                                        </div>\n \n-                                            <div class=\"col-lg-6 col-12 mb-3\">\n-                                                {{ subform.form.affiliation.label(class=\"form-label\") }}\n-                                                {{ subform.form.affiliation(class=\"form-control\", disabled=loop.first) }}\n-                                                {% for error in subform.name.errors %}\n-                                                    <span style=\"color: red;\">{{ error }}</span>\n-                                                {% endfor %}\n-                                            </div>\n+                                        <div class=\"col-lg-6 col-12 mb-3\">\n+                                            {{ subform.form.affiliation.label(class=\"form-label\") }}\n+                                            {{ subform.form.affiliation(class=\"form-control\", disabled=loop.first) }}\n+                                            {% for error in subform.name.errors %}\n+                                            <span style=\"color: red;\">{{ error }}</span>\n+                                            {% endfor %}\n+                                        </div>\n \n-                                            <div class=\"col-lg-6 col-12 mb-3\">\n-                                                {{ subform.orcid.label(class=\"form-label\") }}\n-                                                {{ subform.orcid(class=\"form-control\", disabled=loop.first) }}\n-                                                {% for error in subform.orcid.errors %}\n-                                                    <span style=\"color: red;\">{{ error }}</span>\n-                                                {% endfor %}\n-                                            </div>\n+                                        <div class=\"col-lg-6 col-12 mb-3\">\n+                                            {{ subform.orcid.label(class=\"form-label\") }}\n+                                            {{ subform.orcid(class=\"form-control\", disabled=loop.first) }}\n+                                            {% for error in subform.orcid.errors %}\n+                                            <span style=\"color: red;\">{{ error }}</span>\n+                                            {% endfor %}\n                                         </div>\n-                                        {% endfor %}\n                                     </div>\n-                                    <button type=\"button\" class=\"btn btn-secondary\" id=\"add_author\">Add author\n-                                    </button>\n-\n+                                    {% endfor %}\n                                 </div>\n+                                <button type=\"button\" class=\"btn btn-secondary\" id=\"add_author\">Add author\n+                                </button>\n \n                             </div>\n \n-\n                         </div>\n \n+\n                     </div>\n \n                 </div>\n \n-                <div class=\"row\">\n-\n-                    {% if error %}\n+            </div>\n \n-                        <div class=\"mt-3 col-lg-6 col-12\">\n-                            <span style=\"color: red;\">{{ error }}</span>\n-                        </div>\n+            <div class=\"row\">\n \n-                    {% endif %}\n+                {% if error %}\n \n+                <div class=\"mt-3 col-lg-6 col-12\">\n+                    <span style=\"color: red;\">{{ error }}</span>\n                 </div>\n \n+                {% endif %}\n \n             </div>\n+\n+\n         </div>\n+    </div>\n \n-        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+    <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n \n-            <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n+        <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n \n-            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n+        <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n \n-                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n-                    <div id=\"dropzone-text\"></div>\n-                </form>\n+            <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n+                <div id=\"dropzone-text\"></div>\n+            </form>\n \n-                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n-                    </span>\n+            <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n+            </span>\n \n-                <ul class=\"mt-2\" id=\"file-list\"></ul>\n+            <ul class=\"mt-2\" id=\"file-list\"></ul>\n \n-                <script>\n-                    let dropzone = Dropzone.options.myDropzone = {\n-                        url: \"/dataset/file/upload\",\n-                        paramName: 'file',\n-                        maxFilesize: 10,\n-                        acceptedFiles: '.uvl',\n-                        init: function () {\n+            <script>\n+                let dropzone = Dropzone.options.myDropzone = {\n+                    url: \"/dataset/file/upload\",\n+                    paramName: 'file',\n+                    maxFilesize: 10,\n+                    acceptedFiles: '.uvl',\n+                    init: function () {\n \n-                            let fileList = document.getElementById('file-list');\n-                            let dropzoneText = document.getElementById('dropzone-text');\n-                            let alerts = document.getElementById('alerts');\n+                        let fileList = document.getElementById('file-list');\n+                        let dropzoneText = document.getElementById('dropzone-text');\n+                        let alerts = document.getElementById('alerts');\n \n-                            this.on('addedfile', function (file) {\n+                        this.on('addedfile', function (file) {\n \n-                                let ext = file.name.split('.').pop();\n-                                if (ext !== 'uvl') {\n-                                    this.removeFile(file);\n+                            let ext = file.name.split('.').pop();\n+                            if (ext !== 'uvl') {\n+                                this.removeFile(file);\n \n-                                    let alert = document.createElement('p');\n-                                    alert.textContent = 'Invalid file extension: ' + file.name;\n-                                    alerts.appendChild(alert);\n-                                    alerts.style.display = 'block';\n+                                let alert = document.createElement('p');\n+                                alert.textContent = 'Invalid file extension: ' + file.name;\n+                                alerts.appendChild(alert);\n+                                alerts.style.display = 'block';\n+                            }\n+\n+                        });\n+\n+                        this.on('success', function (file, response) {\n+\n+                            let dropzone = this;\n+\n+                            show_upload_dataset();\n+\n+                            console.log(\"File uploaded: \", response);\n+                            // actions when UVL model is uploaded\n+                            let listItem = document.createElement('li');\n+                            let h4Element = document.createElement('h4');\n+                            h4Element.textContent = response.filename;\n+                            listItem.appendChild(h4Element);\n+\n+                            // generate incremental id for form\n+                            let formUniqueId = generateIncrementalId();\n+\n+                            /*\n+                                ##########################################\n+                                FORM BUTTON\n+                                ##########################################\n+                            */\n+                            let formButton = document.createElement('button');\n+                            formButton.innerHTML = 'Show info';\n+                            formButton.classList.add('info-button', 'btn', 'btn-outline-secondary', \"btn-sm\");\n+                            formButton.style.borderRadius = '5px';\n+                            formButton.id = formUniqueId + \"_button\";\n+\n+                            formButton.addEventListener('click', function () {\n+                                if (formContainer.style.display === \"none\") {\n+                                    formContainer.style.display = \"block\";\n+                                    formButton.innerHTML = 'Hide info';\n+                                } else {\n+                                    formContainer.style.display = \"none\";\n+                                    formButton.innerHTML = 'Add info';\n                                 }\n-\n                             });\n \n-                            this.on('success', function (file, response) {\n-\n-                                let dropzone = this;\n-\n-                                show_upload_dataset();\n-\n-                                console.log(\"File uploaded: \", response);\n-                                // actions when UVL model is uploaded\n-                                let listItem = document.createElement('li');\n-                                let h4Element = document.createElement('h4');\n-                                h4Element.textContent = response.filename;\n-                                listItem.appendChild(h4Element);\n-\n-                                // generate incremental id for form\n-                                let formUniqueId = generateIncrementalId();\n-\n-                                /*\n-                                    ##########################################\n-                                    FORM BUTTON\n-                                    ##########################################\n-                                */\n-                                let formButton = document.createElement('button');\n-                                formButton.innerHTML = 'Show info';\n-                                formButton.classList.add('info-button', 'btn', 'btn-outline-secondary', \"btn-sm\");\n-                                formButton.style.borderRadius = '5px';\n-                                formButton.id = formUniqueId + \"_button\";\n-\n-                                formButton.addEventListener('click', function () {\n-                                    if (formContainer.style.display === \"none\") {\n-                                        formContainer.style.display = \"block\";\n-                                        formButton.innerHTML = 'Hide info';\n-                                    } else {\n-                                        formContainer.style.display = \"none\";\n-                                        formButton.innerHTML = 'Add info';\n-                                    }\n-                                });\n-\n-                                // append space\n-                                let space = document.createTextNode(\" \");\n-                                listItem.appendChild(space);\n-\n-                                /*\n-                                    ##########################################\n-                                    REMOVE BUTTON\n-                                    ##########################################\n-                                */\n-\n-                                // remove button\n-                                let removeButton = document.createElement('button');\n-                                removeButton.innerHTML = 'Delete model';\n-                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n-                                removeButton.style.borderRadius = '5px';\n-\n-                                // append space\n-                                space = document.createTextNode(\" \");\n-                                listItem.appendChild(space);\n-\n-                                removeButton.addEventListener('click', function () {\n-                                    fileList.removeChild(listItem);\n-                                    this.removeFile(file);\n-\n-                                    // Ajax request\n-                                    let xhr = new XMLHttpRequest();\n-                                    xhr.open('POST', '/dataset/file/delete', true);\n-                                    xhr.setRequestHeader('Content-Type', 'application/json');\n-                                    xhr.onload = function () {\n-                                        if (xhr.status === 200) {\n-                                            console.log('Deleted file from server');\n-\n-                                            if (dropzone.files.length === 0) {\n-                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n-                                                clean_upload_errors();\n-                                            }\n-\n+                            // append space\n+                            let space = document.createTextNode(\" \");\n+                            listItem.appendChild(space);\n+\n+                            /*\n+                                ##########################################\n+                                REMOVE BUTTON\n+                                ##########################################\n+                            */\n+\n+                            // remove button\n+                            let removeButton = document.createElement('button');\n+                            removeButton.innerHTML = 'Delete model';\n+                            removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n+                            removeButton.style.borderRadius = '5px';\n+\n+                            // append space\n+                            space = document.createTextNode(\" \");\n+                            listItem.appendChild(space);\n+\n+                            removeButton.addEventListener('click', function () {\n+                                fileList.removeChild(listItem);\n+                                this.removeFile(file);\n+\n+                                // Ajax request\n+                                let xhr = new XMLHttpRequest();\n+                                xhr.open('POST', '/dataset/file/delete', true);\n+                                xhr.setRequestHeader('Content-Type', 'application/json');\n+                                xhr.onload = function () {\n+                                    if (xhr.status === 200) {\n+                                        console.log('Deleted file from server');\n+\n+                                        if (dropzone.files.length === 0) {\n+                                            document.getElementById(\"upload_dataset\").style.display = \"none\";\n+                                            clean_upload_errors();\n                                         }\n-                                    };\n-                                    xhr.send(JSON.stringify({file: file.name}));\n-                                }.bind(this));\n-\n-                                /*\n-                                    ##########################################\n-                                    APPEND BUTTONS\n-                                    ##########################################\n-                                */\n-                                listItem.appendChild(formButton);\n-                                listItem.appendChild(removeButton);\n-\n-                                /*\n-                                    ##########################################\n-                                    UVL FORM\n-                                    ##########################################\n-                                */\n-\n-                                // create specific form for UVL\n-                                let formContainer = document.createElement('div');\n-                                formContainer.id = formUniqueId + \"_form\";\n-                                formContainer.classList.add('uvl_form', \"mt-3\");\n-                                formContainer.style.display = \"none\";\n-\n-                                formContainer.innerHTML = `\n+\n+                                    }\n+                                };\n+                                xhr.send(JSON.stringify({ file: file.name }));\n+                            }.bind(this));\n+\n+                            /*\n+                                ##########################################\n+                                APPEND BUTTONS\n+                                ##########################################\n+                            */\n+                            listItem.appendChild(formButton);\n+                            listItem.appendChild(removeButton);\n+\n+                            /*\n+                                ##########################################\n+                                UVL FORM\n+                                ##########################################\n+                            */\n+\n+                            // create specific form for UVL\n+                            let formContainer = document.createElement('div');\n+                            formContainer.id = formUniqueId + \"_form\";\n+                            formContainer.classList.add('uvl_form', \"mt-3\");\n+                            formContainer.style.display = \"none\";\n+\n+                            formContainer.innerHTML = `\n                                     <div class=\"row\">\n                                         <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n                                         <div class=\"col-12\">\n@@ -426,107 +421,107 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n                                     </div>\n                                     `;\n \n-                                listItem.appendChild(formContainer);\n-                                fileList.appendChild(listItem);\n+                            listItem.appendChild(formContainer);\n+                            fileList.appendChild(listItem);\n \n-                            });\n+                        });\n \n-                            this.on('error', function (file, response) {\n-                                console.error(\"Error uploading file: \", response);\n-                                let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n-                                alerts.appendChild(alert);\n-                                alerts.style.display = 'block';\n-                            });\n+                        this.on('error', function (file, response) {\n+                            console.error(\"Error uploading file: \", response);\n+                            let alert = document.createElement('p');\n+                            alert.textContent = 'UVL not valid: ' + file.name;\n+                            alerts.appendChild(alert);\n+                            alerts.style.display = 'block';\n+                        });\n \n-                        }\n-                    };\n+                    }\n+                };\n \n \n-                </script>\n+            </script>\n \n-            </div>\n         </div>\n-\n     </div>\n \n-    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n+</div>\n \n-        <div class=\"col-12\">\n+<div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n \n-            <hr>\n+    <div class=\"col-12\">\n \n-            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n+        <hr>\n \n-            <div style=\"padding-left: 2rem\">\n+        <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n \n-                <label class=\"form-check\">\n-                    <input id=\"agreeCheckbox\" class=\"form-check-input\" type=\"checkbox\" value=\"\">\n-                    <span class=\"form-check-label\" style=\"font-size: 15px\">\n-                                I agree to have my feature models automatically uploaded to Zenodo and made available to the public according to the <a\n-                            href=\"https://en.wikipedia.org/wiki/Open_science\" target=\"_blank\">Open Science</a> manifesto\n-                            </span>\n-                </label>\n+        <div style=\"padding-left: 2rem\">\n \n-                <button id=\"upload_button\" class=\"btn btn-primary mt-2\" disabled>\n-                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n-                    Upload dataset</button>\n+            <label class=\"form-check\">\n+                <input id=\"agreeCheckbox\" class=\"form-check-input\" type=\"checkbox\" value=\"\">\n+                <span class=\"form-check-label\" style=\"font-size: 15px\">\n+                    I agree to have my feature models automatically uploaded to Zenodo and made available to the public\n+                    according to the <a href=\"https://en.wikipedia.org/wiki/Open_science\" target=\"_blank\">Open\n+                        Science</a> manifesto\n+                </span>\n+            </label>\n \n-                <div id=\"loading\" style=\"display: none\">\n-                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n-                    Uploading dataset, please wait...\n-                </div>\n+            <button id=\"upload_button\" class=\"btn btn-primary mt-2\" disabled>\n+                <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n+                Upload dataset</button>\n \n-                <div class=\"row\">\n-                    <div class=\"col-12 mb-3\">\n+            <div id=\"loading\" style=\"display: none\">\n+                <img width=\"40px\" src=\"{{ url_for('static', filename='gifs/loading.svg') }}\" />\n+                Uploading dataset, please wait...\n+            </div>\n \n-                    </div>\n-                </div>\n+            <div class=\"row\">\n+                <div class=\"col-12 mb-3\">\n \n-                <div class=\"alert alert-error\" role=\"alert\" id=\"upload_error\"\n-                     style=\"display: none\">\n-                    <div class=\"alert-message\">\n-\n-                        <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n-                            connection to the Zenodo API</h4>\n-                        <p class=\"p-0 m-0\">\n-                            There seems to be some kind of problem with the Zenodo API and synchronization of your\n-                            dataset\n-                            files may not be possible. We will save your files locally to eventually synchronize\n-                            them with\n-                            Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n-                            anything about it.\n-                        </p>\n-                    </div>\n                 </div>\n+            </div>\n \n+            <div class=\"alert alert-error\" role=\"alert\" id=\"upload_error\" style=\"display: none\">\n+                <div class=\"alert-message\">\n \n-                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n+                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n+                        connection to the Zenodo API</h4>\n+                    <p class=\"p-0 m-0\">\n+                        There seems to be some kind of problem with the Zenodo API and synchronization of your\n+                        dataset\n+                        files may not be possible. We will save your files locally to eventually synchronize\n+                        them with\n+                        Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n+                        anything about it.\n+                    </p>\n+                </div>\n+            </div>\n \n-                    </span>\n \n-                <script>\n-                    const checkbox = document.getElementById('agreeCheckbox');\n-                    const upload_button = document.getElementById('upload_button');\n+            <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n \n-                    checkbox.addEventListener('change', function () {\n-                        upload_button.disabled = !checkbox.checked;\n-                    });\n-                </script>\n+            </span>\n \n-            </div>\n+            <script>\n+                const checkbox = document.getElementById('agreeCheckbox');\n+                const upload_button = document.getElementById('upload_button');\n \n+                checkbox.addEventListener('change', function () {\n+                    upload_button.disabled = !checkbox.checked;\n+                });\n+            </script>\n+\n+        </div>\n \n \n \n-        </div>\n \n     </div>\n \n+</div>\n+\n \n {% endblock %}\n \n {% block scripts %}\n-    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n-    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n+<script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+<script src=\"{{ url_for('dataset.scripts') }}\"></script>\n {% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "bca91a32f43b72ba7d977881056bbeaafe78beac",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 111,
        "deletions": 6,
        "changes": 117,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -1,20 +1,125 @@\n-from locust import HttpUser, TaskSet, task\n+import random\n from core.locust.common import get_csrf_token\n+from locust import HttpUser, TaskSet, task\n from core.environment.host import get_host_for_locust_testing\n \n \n class DatasetBehavior(TaskSet):\n     def on_start(self):\n+\n+        \"\"\"Realiza el login antes de iniciar las tareas de la prueba.\"\"\"\n+        response = self.client.post('/login', json={\n+            'email': 'user1@example.com',\n+            'password': '1234'\n+        })\n+        if response.status_code == 200:\n+            print(\"Login exitoso.\")\n+\n+            self.session_cookies = response.cookies\n+        else:\n+            print(\"Error en el login:\", response.status_code, response.text)\n+            self.session_cookies = None\n+\n         self.dataset()\n+        self.login()\n+        self.create_dataset()\n+        self.view_user_datasets()\n+\n+    def is_authenticated(self):\n+        \"\"\"Comprueba si el login fue exitoso.\"\"\"\n+        return self.session_cookies is not None\n+\n+    def post_with_auth(self, url, json=None):\n+        \"\"\"Realiza una solicitud POST autenticada.\"\"\"\n+        if not self.is_authenticated():\n+            print(\"Usuario no autenticado. No se puede realizar la solicitud.\")\n+            return None\n+\n+        # A\u00f1ade cookies al realizar solicitudes\n+        return self.client.post(url, json=json, cookies=self.session_cookies)\n+\n+    @task(1)\n+    def rate_dataset_success(self):\n+        \"\"\"Simula un usuario calificando un dataset exitosamente.\"\"\"\n+        response = self.post_with_auth('/datasets/10/rate', json={\"rating\": 4})\n+        if response and response.status_code == 200:\n+            print(\"Rating agregado exitosamente.\")\n+        elif response:\n+            print(\"Error al agregar el rating:\", response.status_code, response.text)\n+\n+    @task(2)\n+    def rate_dataset_invalid_rating(self):\n+        \"\"\"Simula un usuario enviando un rating inv\u00e1lido mayor a 5.\"\"\"\n+        response = self.post_with_auth('/datasets/10/rate', json={\"rating\": 12})\n+        if response and response.status_code == 400:\n+            print(\"Error esperado: Rating inv\u00e1lido.\")\n+        elif response:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def rate_dataset_not_found(self):\n+        \"\"\"Simula un usuario intentando calificar un dataset que no existe.\"\"\"\n+        response = self.post_with_auth(\"/datasets/100/rate\", json={\"rating\": 3})\n+        if response and response.status_code == 404:\n+            print(\"Error esperado: Dataset no encontrado.\")\n+        elif response:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def rate_dataset_unauthorized(self):\n+        \"\"\"Simula un usuario no autenticado intentando calificar un dataset.\"\"\"\n+        response = self.client.post('/datasets/17/rate', json={\"rating\": 4})\n+        if response.status_code == 302 or response.status_code == 401:\n+            print(\"Error esperado: No autorizado.\")\n+        else:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n+\n+    def login(self):\n+        \"\"\"Simula el inicio de sesi\u00f3n del usuario.\"\"\"\n+        response = self.client.post(\n+            \"/login\",\n+            {\n+                \"username\": \"test_user\",\n+                \"password\": \"test_password\"\n+            },\n+            name=\"User Login\"\n+        )\n+        self.csrf_token = get_csrf_token(response)\n+\n+    @task\n+    def create_dataset(self):\n+        \"\"\"Simula la creaci\u00f3n de un nuevo dataset.\"\"\"\n+        dataset_payload = {\n+            \"title\": f\"Test Dataset {random.randint(1, 10000)}\",\n+            \"description\": \"This is a test dataset created during load testing.\",\n+            \"publication_type\": \"Open Access\",\n+            \"_csrf_token\": self.csrf_token\n+\n+        }\n+        with self.client.post(\n+            \"/dataset/upload\",\n+            data=dataset_payload,\n+            name=\"Create Dataset\",\n+            catch_response=True\n+        ) as response:\n+            if response.status_code != 200 or \"error\" in response.text.lower():\n+                response.failure(\"Dataset creation failed\")\n \n     @task\n-    def dataset(self):\n-        response = self.client.get(\"/dataset/upload\")\n-        get_csrf_token(response)\n+    def view_user_datasets(self):\n+        \"\"\"Simula la visualizaci\u00f3n de la p\u00e1gina de datasets del usuario.\"\"\"\n+        user_id = 7  # Cambiar seg\u00fan el ID del usuario deseado\n+        with self.client.get(\n+            f\"/api/v1/datasets/user/{user_id}\",\n+            name=\"View User Datasets\",\n+            catch_response=True\n+        ) as response:\n+            if response.status_code != 200 or \"No datasets found\" in response.text:\n+                response.failure(\"Failed to load datasets page\")\n \n \n class DatasetUser(HttpUser):\n     tasks = [DatasetBehavior]\n-    min_wait = 5000\n-    max_wait = 9000\n+    min_wait = 5000  # Tiempo de espera m\u00ednimo en milisegundos (5 segundos)\n+    max_wait = 9000  # Tiempo de espera m\u00e1ximo en milisegundos (9 segundos)\n     host = get_host_for_locust_testing()"
      },
      {
        "sha": "9cc96644c93986d6391787f7925afc4d0732148d",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 51,
        "deletions": 1,
        "changes": 52,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -4,6 +4,7 @@\n from selenium.webdriver.common.by import By\n from selenium.webdriver.common.keys import Keys\n from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n \n from core.environment.host import get_host_for_selenium_testing\n from core.selenium.common import initialize_driver, close_driver\n@@ -123,7 +124,55 @@ def test_upload_dataset():\n         final_datasets = count_datasets(driver, host)\n         assert final_datasets == initial_datasets + 1, \"Test failed!\"\n \n-        print(\"Test passed!\")\n+        print(\"Test 1 passed!\")\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+def test_testViewUserProfileSelenium():\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the login page\n+        driver.get(f\"{host}\")\n+        wait_for_page_to_load(driver)\n+\n+        # Espera expl\u00edcita para \"Sample dataset 4\"\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 4\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Doe, Jane\"\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, Jane\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para el men\u00fa de hamburguesa\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \".hamburger\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para el elemento de la barra lateral\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \".sidebar-item:nth-child(2) .align-middle:nth-child(2)\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Sample dataset 3\"\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 3\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Doe, John\"\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, John\"))\n+        ).click()\n+\n+        print(\"Test 2 passed!\")\n \n     finally:\n \n@@ -133,3 +182,4 @@ def test_upload_dataset():\n \n # Call the test function\n test_upload_dataset()\n+test_testViewUserProfileSelenium()"
      },
      {
        "sha": "26dab43c853a2651dc319a41152f1cbbc8f2fa8e",
        "filename": "app/modules/dataset/tests/unit.py",
        "status": "added",
        "additions": 155,
        "deletions": 0,
        "changes": 155,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Ftests%2Funit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fdataset%2Ftests%2Funit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Funit.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -0,0 +1,155 @@\n+from datetime import datetime\n+import os\n+import pytest\n+from flask.testing import FlaskClient\n+from app import create_app, db\n+from app.modules.auth.models import User\n+from app.modules.conftest import login\n+from app.modules.dataset.models import DSMetaData, DSRating, DataSet, PublicationType\n+from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from app.modules.profile.models import UserProfile\n+\n+\n+@pytest.fixture\n+def client():\n+    app = create_app('testing')\n+    with app.test_client() as client:\n+        with app.app_context():\n+            # Configuraci\u00f3n de la base de datos en modo de prueba\n+            db.drop_all()\n+            db.create_all()\n+\n+            user = User(\n+                id=5,\n+                email=\"user5@example.com\",\n+                password=\"1234\",\n+                created_at=datetime(2022, 3, 13)\n+            )\n+            db.session.add(user)\n+            db.session.commit()\n+\n+            profile = UserProfile(\n+                user_id=user.id,\n+                surname=\"TestSurname\",\n+                name=\"TestName\",\n+                affiliation=\"TestAffiliation\",\n+                orcid=\"0000-0001-2345-6789\"\n+            )\n+            db.session.add(profile)\n+            db.session.commit()\n+\n+            dsmetadata = DSMetaData(\n+                id=10,\n+                title=\"Sample Dataset 17\",\n+                rating=0,\n+                description=\"Description for dataset 17\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name\n+            )\n+            db.session.add(dsmetadata)\n+            dataset = DataSet(\n+                id=10,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata.id\n+            )\n+            db.session.add(dataset)\n+            db.session.commit()\n+\n+            dsrating = DSRating(\n+                id=10,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata.id,\n+                rating=dsmetadata.rating,\n+                rated_date=datetime(2022, 5, 17)\n+            )\n+            db.session.add(dsrating)\n+            db.session.commit()\n+\n+            # Crear un dataset en el staging area\n+            dsmetadata_sa = DSMetaData(\n+                id=11,\n+                title=\"Staging area Dataset\",\n+                description=\"Description for unique dataset\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name\n+            )\n+            db.session.add(dsmetadata_sa)\n+            dataset_staging_area = DataSet(\n+                id=11,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata_sa.id\n+            )\n+            db.session.add(dataset_staging_area)\n+            db.session.commit()\n+\n+            user1 = User(\n+                id=6,\n+                email=\"user6@example.com\",\n+                password=\"1234\",\n+                created_at=datetime(2022, 3, 13)\n+            )\n+            db.session.add(user1)\n+            db.session.commit()\n+\n+            fm_metadata = FMMetaData(\n+                uvl_filename=\"test_model.uvl\",\n+                title=\"Test Feature Model\",\n+                description=\"A feature model for testing purposes\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name,\n+                publication_doi=\"\",\n+                tags=\"test,feature,model\",\n+                uvl_version=\"1.0\"\n+            )\n+            db.session.add(fm_metadata)\n+            db.session.commit()\n+\n+            # Crear un FeatureModel relacionado con un DataSet\n+            feature_model = FeatureModel(\n+                data_set_id=dataset.id,\n+                fm_meta_data_id=fm_metadata.id\n+            )\n+            db.session.add(feature_model)\n+            db.session.commit()\n+            # Crear el archivo temporal en la ruta esperada\n+            temp_folder = os.path.join('uploads', 'temp', str(user.id))\n+            os.makedirs(temp_folder, exist_ok=True)\n+            with open(os.path.join(temp_folder, 'file9.uvl'), 'w') as f:\n+                f.write('Temporary file content')\n+            yield client\n+\n+            # Limpiar el archivo temporal despu\u00e9s de la prueba\n+            if os.path.exists(os.path.join(temp_folder, 'file9.uvl')):\n+                os.remove(os.path.join(temp_folder, 'file9.uvl'))\n+            if os.path.exists(temp_folder):\n+                os.rmdir(temp_folder)\n+\n+            db.session.remove()\n+            db.drop_all()\n+\n+\n+def test_rate_dataset_success(client: FlaskClient):\n+    login_response = login(client, \"user5@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+    print(\"Login Response:\", login_response.data)  # Para ver el contenido de la respuesta\n+    response = client.post('/datasets/10/rate', json={\"rating\": 4})\n+    assert response.status_code == 200\n+\n+\n+def test_rate_dataset_unauthorized(client):\n+    \"\"\"Prueba para enviar un rating sin estar autenticado.\"\"\"\n+    rating_data = {'rating': 4}\n+    response = client.post('/datasets/17/rate', json=rating_data)\n+\n+    assert response.status_code == 302, \"El c\u00f3digo de estado deber\u00eda ser 401 para usuarios no autenticados.\"\n+\n+\n+def test_rate_dataset_invalid_rating_above_5(client: FlaskClient):\n+    \"\"\"Prueba para enviar un rating inv\u00e1lido mayor a 5.\"\"\"\n+    # Iniciar sesi\u00f3n con un usuario v\u00e1lido\n+    login_response = login(client, \"user5@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+\n+    # Enviar un rating inv\u00e1lido\n+    response = client.post('/datasets/10/rate', json={\"rating\": 6})\n+\n+    # Verificar que la respuesta sea un error\n+    assert response.status_code == 400, \"El c\u00f3digo de estado deber\u00eda ser 400 para calificaci\u00f3n inv\u00e1lida.\"\n+    assert response.json[\"error\"] == \"El rating debe estar entre 1 y 5.\", \"El mensaje de error no coincide.\""
      },
      {
        "sha": "2e6c88c5f812e784393bd835b8b3c6960ee75c9e",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 71,
        "deletions": 38,
        "changes": 109,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -32,7 +32,8 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         max_size_filter = None\n \n         # Inicia la consulta, usando el alias en la uni\u00f3n\n-        query = db.session.query(DataSet).join(ds_meta_data_alias, DataSet.ds_meta_data)\n+        query = db.session.query(DataSet).join(ds_meta_data_alias, DataSet.ds_meta_data)\\\n+            .filter(DSMetaData.dataset_doi.isnot(None))\n \n         # Filtrar por tipo de publicaci\u00f3n\n         if publication_type != \"any\":\n@@ -47,38 +48,59 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         # Procesar el filtro de `query_string`\n         query_filter = query_string.strip()\n \n-        # Filtrar por autor\n-        if query_filter.startswith('author:'):\n-            author_filter = query_filter[7:].strip()\n-            query = query.join(author_meta_data_alias).join(Author).filter(Author.name.ilike(f'%{author_filter}%'))\n-\n-        # Filtrar por tama\u00f1o m\u00ednimo\n-        elif query_filter.startswith('min_size:'):\n-            try:\n-                min_size_filter = int(query_filter[9:].strip())\n-            except ValueError:\n-                min_size_filter = None\n-\n-        # Filtrar por tama\u00f1o m\u00e1ximo\n-        elif query_filter.startswith('max_size:'):\n-            try:\n-                max_size_filter = int(query_filter[9:].strip())\n-            except ValueError:\n-                max_size_filter = None\n-\n-        # Filtrar por etiquetas\n-        elif query_filter.startswith('tags:'):\n-            tags_filter = query_filter[5:].strip()\n-            query = query.filter(ds_meta_data_alias.tags.ilike(f'%{tags_filter}%'))\n-\n-        # Filtrar por t\u00edtulo o tag(consulta general)\n-        else:\n-            query = query.filter(\n-                or_(\n-                    ds_meta_data_alias.title.ilike(f\"%{query_filter}%\"),\n-                    ds_meta_data_alias.tags.ilike(f\"%{query_filter}%\")\n+        for filter_item in query_filter.split(';'):\n+            # Filtrar por autor\n+            if filter_item.startswith('author:'):\n+                author_filter = filter_item[7:].strip()\n+                query = query.join(author_meta_data_alias).join(Author).filter(Author.name.ilike(f'%{author_filter}%'))\n+\n+            # Filtrar por tama\u00f1o m\u00ednimo\n+            elif filter_item.startswith('min_size:'):\n+                try:\n+                    min_size_filter = int(filter_item[9:].strip())\n+                except ValueError:\n+                    min_size_filter = None\n+\n+            # Filtrar por tama\u00f1o m\u00e1ximo\n+            elif filter_item.startswith('max_size:'):\n+                try:\n+                    max_size_filter = int(filter_item[9:].strip())\n+                except ValueError:\n+                    max_size_filter = None\n+\n+            # Filtrar por etiquetas\n+            elif filter_item.startswith('tags:'):\n+                tags_filter = filter_item[5:].strip()\n+                query = query.filter(ds_meta_data_alias.tags.ilike(f'%{tags_filter}%'))\n+\n+            # Filtrar por numero maximo de modelos\n+            elif filter_item.startswith('max_models:'):\n+                max_model_filter = filter_item[11:].strip()\n+                max_uvl = max_model_filter\n+\n+            # Filtrar por numero minimo de modelos\n+            elif filter_item.startswith('min_models:'):\n+                min_model_filter = filter_item[11:].strip()\n+                min_uvl = min_model_filter\n+\n+            # Filtrar por numero maximo de configuraciones\n+            elif filter_item.startswith('max_configs:'):\n+                max_config_filter = filter_item[12:].strip()\n+                max_num_configurations = max_config_filter\n+\n+            # Filtrar por numero minimo de configuraciones\n+            elif filter_item.startswith('min_configs:'):\n+                min_config_filter = filter_item[12:].strip()\n+                min_num_configurations = min_config_filter\n+\n+            # Filtrar por t\u00edtulo o tag(consulta general)\n+            else:\n+                query = query.filter(\n+                    or_(\n+                        ds_meta_data_alias.title.ilike(f\"%{filter_item}%\"),\n+                        ds_meta_data_alias.tags.ilike(f\"%{filter_item}%\")\n+                    )\n                 )\n-            )\n \n         date_format = '%Y-%m-%d'\n         if start_date:\n@@ -95,12 +117,6 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         query = query.join(FeatureModel, FeatureModel.data_set_id == DataSet.id)  # Uni\u00f3n con FeatureModel\n         query = query.join(Hubfile, Hubfile.feature_model_id == FeatureModel.id)  # Uni\u00f3n con Hubfile\n \n-        if min_uvl.isdigit():\n-            query = query.group_by(DataSet.id).having(func.count(Hubfile.id) >= int(min_uvl))\n-\n-        if max_uvl.isdigit():\n-            query = query.group_by(DataSet.id).having(func.count(Hubfile.id) <= int(max_uvl))\n-\n         # Ordenar resultados\n         if sorting == \"oldest\":\n             query = query.order_by(DataSet.created_at.asc())\n@@ -130,6 +146,12 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n                 )\n             ]\n \n+        if min_uvl.isdigit() or max_uvl.isdigit():\n+            results = [\n+                ds for ds in results\n+                if num_uvls_between(ds, min_uvl, max_uvl)\n+            ]\n+\n         if min_num_configurations.isdigit() or max_num_configurations.isdigit():\n             results = [\n                 ds for ds in results\n@@ -145,6 +167,17 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         return results\n \n \n+def num_uvls_between(dataset, min_num, max_num):\n+    num = dataset.get_files_count()\n+    valid_min = min_num.isdigit()\n+    valid_max = max_num.isdigit()\n+    if valid_min and valid_max:\n+        return num >= int(min_num) and num <= int(max_num)\n+    else:\n+        return (valid_min and num >= int(min_num)\n+                or valid_max and num <= int(max_num))\n+\n+\n def num_configurations_between(file_id, min_num_configurations, max_num_configurations):\n     result, status_code = get_num_configurations(file_id)\n "
      },
      {
        "sha": "152712416b1ba878caba6c085d0d6687b0c04abc",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 49,
        "deletions": 3,
        "changes": 52,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -47,9 +47,10 @@ <h3 class=\"h3 mb-3\">\n \n                         <div class=\"col-12\">\n                             <div class=\"mb-3\">\n-                                <label class=\"form-label\" for=\"query\">\n-                                    Search for datasets by title, description, authors, tags, UVL files...\n-                                </label>\n+                                    <label class=\"form-label\" for=\"query\">\n+                                        Search for datasets by title and tags or use advanced search querys\n+                                        <span class=\"info-icon\" data-tooltip=\"Types of queries allowed:&#10;author:&#10;min_size:&#10;max_size:&#10;tags:&#10;max_models:&#10;min_models:&#10;max_configs:&#10;min_configs:&#10;For multiple querys use ; Example: author:2;min_size:5\">i</span>\n+                                    </label>\n                                 <input class=\"form-control\" id=\"query\" name=\"query\" required=\"\" type=\"text\"\n                                        value=\"\" autofocus>\n                             </div>\n@@ -207,4 +208,49 @@ <h3 class=\"h3 mb-3\">\n \n {% block scripts %}\n     <script src=\"{{ url_for('explore.scripts') }}\"></script>\n+    \n+    <style>\n+        /* Estilo del icono dentro del texto */\n+        .info-icon {\n+            font-weight: bold;\n+            font-size: 14px; /* Tama\u00f1o de la letra m\u00e1s peque\u00f1o */\n+            color: white; /* Color de la letra dentro del c\u00edrculo */\n+            background-color: #4caf50; /* Color de fondo verde */\n+            border-radius: 50%; /* Hacer el fondo circular */\n+            width: 22px; /* Tama\u00f1o m\u00e1s peque\u00f1o del c\u00edrculo */\n+            height: 22px; /* Tama\u00f1o m\u00e1s peque\u00f1o del c\u00edrculo */\n+            display: inline-flex;\n+            align-items: center;\n+            justify-content: center;\n+            cursor: pointer;\n+            margin-left: 5px; /* Espacio entre el texto y el icono */\n+            position: relative;\n+        }\n+\n+        /* Estilo para el texto del tooltip */\n+        .info-icon::after {\n+            content: attr(data-tooltip);\n+            position: absolute;\n+            top: 25px;\n+            left: 50%;\n+            transform: translateX(-50%);\n+            padding: 10px 20px;  /* Aumenta el padding para hacerlo m\u00e1s grande */\n+            background-color: #add8e6; /* Fondo azul claro */\n+            color: #333; /* Texto oscuro */\n+            font-size: 12px;\n+            border-radius: 5px;\n+            white-space: pre-wrap; /* Usar pre-wrap para los saltos de l\u00ednea */\n+            opacity: 0;\n+            visibility: hidden;\n+            z-index: 10;\n+            transition: opacity 0.3s;\n+            width: 200px; /* Ajusta el ancho a un valor mayor */\n+        }\n+\n+        /* Mostrar el tooltip al pasar el rat\u00f3n */\n+        .info-icon:hover::after {\n+            opacity: 1;\n+            visibility: visible;\n+        }\n+    </style>\n {% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "bbc40df24ea32bca7adafcfd0d532043e1265ac5",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "modified",
        "additions": 125,
        "deletions": 11,
        "changes": 136,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -9,11 +9,13 @@ def test_client(test_client):\n     Extends the test_client fixture to add additional specific data for module testing.\n     \"\"\"\n     with test_client.application.app_context():\n+        authors = [{\"name\": \"John Doe\", \"affiliation\": \"University of Testing\", \"orcid\": \"1234-5678\"}]\n         create_dataset_db(1, PublicationType.BOOK, \"tag1,tag2\")\n         create_dataset_db(2, PublicationType.ANNOTATION_COLLECTION, \"tag2\")\n         create_dataset_db(3, PublicationType.BOOK, date=\"2020-1-1\")\n         create_dataset_db(4, valid=False)\n-\n+        create_dataset_db(5, authors=authors, total_file_size=5000, num_files=5)\n+        create_dataset_db(6, authors=authors, total_file_size=10000, num_files=1, tags=\"tag1\")\n         pass\n \n     yield test_client\n@@ -37,15 +39,15 @@ def test_explore_post(test_client):\n \n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n-    assert len(response.get_json()) == 4, \"Wrong number of datasets\"\n+    assert len(response.get_json()) == 6, \"Wrong number of datasets\"\n \n \n def test_explore_filter_num_uvls_post(test_client):\n     search_criteria = get_search_criteria(min_uvl=\"1\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_ds = len(response.get_json())\n-    assert num_ds == 4, f\"Wrong number of datasets: {num_ds}\"\n+    assert num_ds == 6, f\"Wrong number of datasets: {num_ds}\"\n \n     search_criteria = get_search_criteria(max_uvl=\"0\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n@@ -64,7 +66,7 @@ def test_explore_filter_num_configurations_post(test_client):\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_conf = len(response.get_json())\n-    assert num_conf == 4, f\"Wrong number of datasets: {num_conf}\"\n+    assert num_conf == 6, f\"Wrong number of datasets: {num_conf}\"\n \n     search_criteria = get_search_criteria(max_num_configurations=\"0\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n@@ -76,7 +78,7 @@ def test_explore_filter_num_configurations_post(test_client):\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_conf = len(response.get_json())\n-    assert num_conf == 4, f\"Wrong number of datasets: {num_conf}\"\n+    assert num_conf == 6, f\"Wrong number of datasets: {num_conf}\"\n \n     wrong_num = \"notanumber\"\n     search_criteria = get_search_criteria(min_num_configurations=wrong_num, max_num_configurations=wrong_num)\n@@ -90,7 +92,7 @@ def test_explore_filter_date_post(test_client):\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num = len(response.get_json())\n-    assert num == 3, f\"Wrong number of datasets: {num}\"\n+    assert num == 5, f\"Wrong number of datasets: {num}\"\n \n     search_criteria = get_search_criteria(start_date=\"2025-1-1\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n@@ -121,14 +123,14 @@ def test_explore_filter_publication_type_post(test_client):\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num = len(response.get_json())\n-    assert num == 4, f\"Wrong number of datasets: {num}\"\n+    assert num == 6, f\"Wrong number of datasets: {num}\"\n \n     wrong_publication_type = \"ERROR\"\n     search_criteria = get_search_criteria(publication_type=wrong_publication_type)\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num = len(response.get_json())\n-    assert num == 4, f\"Wrong number of datasets: {num}\"\n+    assert num == 6, f\"Wrong number of datasets: {num}\"\n \n \n def test_explore_filter_query_post(test_client):\n@@ -165,21 +167,133 @@ def test_explore_filter_by_valid_uvl_post(test_client):\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num = len(response.get_json())\n-    assert num == 3, f\"Wrong number of datasets: {num}\"\n+    assert num == 5, f\"Wrong number of datasets: {num}\"\n \n     search_criteria = get_search_criteria(by_valid_uvls=\"off\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num = len(response.get_json())\n-    assert num == 4, f\"Wrong number of datasets: {num}\"\n+    assert num == 6, f\"Wrong number of datasets: {num}\"\n \n \n def test_explore_soring_post(test_client):\n     search_criteria = get_search_criteria(sorting=\"oldest\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num = len(response.get_json())\n-    assert num == 4, f\"Wrong number of datasets: {num}\"\n+    assert num == 6, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_filter_min_size_post(test_client):\n+    search_criteria = get_search_criteria(query=\"min_size:100\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 5, f\"Wrong number of datasets for min_size filter: {num}\"\n+\n+\n+def test_explore_filter_min_size_invalid(test_client):\n+    search_criteria = get_search_criteria(query=\"min_size:abc\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 6, f\"Wrong number of datasets for min_size filter with invalid value: {num}\"\n+\n+    search_criteria = get_search_criteria(query=\"min_size:\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 6, f\"Wrong number of datasets for min_size filter with empty value: {num}\"\n+\n+\n+def test_explore_filter_max_size_invalid(test_client):\n+    search_criteria = get_search_criteria(query=\"max_size:xyz\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 6, f\"Wrong number of datasets for max_size filter with invalid value: {num}\"\n+\n+    search_criteria = get_search_criteria(query=\"max_size:\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 6, f\"Wrong number of datasets for max_size filter with empty value: {num}\"\n+\n+\n+def test_explore_filter_max_size_post(test_client):\n+    search_criteria = get_search_criteria(query=\"max_size:500\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets for max_size filter: {num}\"\n+\n+    search_criteria = get_search_criteria(query=\"max_size:50000\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 6, f\"Wrong number of datasets for max_size filter: {num}\"\n+\n+\n+def test_explore_filter_min_models_post(test_client):\n+    search_criteria = get_search_criteria(query=\"min_models:2\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets for min_models filter: {num}\"\n+\n+\n+def test_explore_filter_max_models_post(test_client):\n+    search_criteria = get_search_criteria(query=\"max_models:1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 5, f\"Wrong number of datasets for max_models filter: {num}\"\n+\n+\n+def test_explore_filter_tags_post(test_client):\n+    search_criteria = get_search_criteria(query=\"tags:tag2\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 2, f\"Wrong number of datasets for tags filter: {num}\"\n+\n+\n+def test_explore_filter_author_post(test_client):\n+    search_criteria = get_search_criteria(query=\"author:john_doe\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 2, f\"Wrong number of datasets for author filter: {num}\"\n+\n+\n+def test_explore_filter_max_configs_post(test_client):\n+    search_criteria = get_search_criteria(query=\"max_configs:3\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets for max_configs filter: {num}\"\n+\n+\n+def test_explore_filter_min_configs_post(test_client):\n+    search_criteria = get_search_criteria(query=\"min_configs:2\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 6, f\"Wrong number of datasets for min_configs filter: {num}\"\n+\n+    search_criteria = get_search_criteria(query=\"min_configs:30\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets for min_configs filter: {num}\"\n+\n+\n+def test_explore_combined_query_filters_post(test_client):\n+    search_criteria = get_search_criteria(query=\"min_size:100;max_models:2;tags:tag1;author:john_doe\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets for combined query filters: {num}\"\n \n \n def get_search_criteria(query=\"\", sorting=\"newest\", publication_type=\"any\","
      },
      {
        "sha": "86bbe7ec8029b0e04375a49daec6e0e34ced9ab6",
        "filename": "app/modules/fakenodo/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2F__init__.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2F__init__.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2F__init__.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+fakenodo_bp = BaseBlueprint('fakenodo', __name__, template_folder='templates')"
      },
      {
        "sha": "a4c92c22cb2c9f76af6996279339554c222750f0",
        "filename": "app/modules/fakenodo/assets/scripts.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -0,0 +1,19 @@\n+function test_fakenodo_connection() {\n+    var xhr = new XMLHttpRequest();\n+    xhr.open('GET', '/fakenodo/test', true);\n+    xhr.setRequestHeader('Content-Type', 'application/json');\n+    xhr.onreadystatechange = function () {\n+        if (xhr.readyState === 4 && xhr.status === 200) {\n+            var response = JSON.parse(xhr.responseText);\n+            if (!response.success) {\n+                document.getElementById(\"test_fakenodo_connection_error\").style.display = \"block\";\n+                console.log(response);\n+                console.log(response.success);\n+                console.log(response.messages);\n+            }\n+        } else if (xhr.readyState === 4 && xhr.status !== 200) {\n+            console.error('Error:', xhr.status);\n+        }\n+    };\n+    xhr.send();\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "59e8f8f73974717b24a8fe9500b84ebdf9e65d77",
        "filename": "app/modules/fakenodo/forms.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Fforms.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Fforms.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fforms.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -0,0 +1,6 @@\n+from flask_wtf import FlaskForm\n+from wtforms import SubmitField\n+\n+\n+class FakenodoForm(FlaskForm):\n+    submit = SubmitField('Save fakenodo')"
      },
      {
        "sha": "b6aa2cb423bff7966f0c1dafb86aac91b1d7e9f5",
        "filename": "app/modules/fakenodo/models.py",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Fmodels.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fmodels.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -0,0 +1,11 @@\n+from app import db\n+\n+\n+class Deposition(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    dep_metadata = db.Column(db.JSON, nullable=False)\n+    status = db.Column(db.String(50), nullable=False, default=\"draft\")\n+    doi = db.Column(db.String(250), unique=True, nullable=True)\n+\n+    def __repr__(self):\n+        return f'Deposition<{self.id}>'"
      },
      {
        "sha": "be4afc13af443641c4aeb0ba3b8c92b28f6268e4",
        "filename": "app/modules/fakenodo/repositories.py",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Frepositories.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -0,0 +1,11 @@\n+from app.modules.fakenodo.models import Deposition\n+from core.repositories.BaseRepository import BaseRepository\n+\n+\n+class DepositionRepo(BaseRepository):\n+\n+    def __init__(self):\n+        super().__init__(Deposition)\n+\n+    def create_new_deposition(self, dep_metadata):\n+        return self.create(dep_metadata=dep_metadata)"
      },
      {
        "sha": "6c2f0d4204af0920cc31e546937366f9a0dfc6b0",
        "filename": "app/modules/fakenodo/routes.py",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Froutes.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -0,0 +1,49 @@\n+import os\n+import tempfile\n+from flask import jsonify, request, send_file\n+from . import fakenodo_bp\n+datasets = {}\n+# Upload all files from dataset\n+\n+\n+@fakenodo_bp.route('/fakenodo/upload', methods=['POST'])\n+def upload_dataset():\n+    global dataset_counter\n+    file = request.files['file']\n+    if file:\n+        dataset_id = dataset_counter\n+        dataset_counter += 1\n+        temp_dir = tempfile.mkdtemp()\n+        file_path = os.path.join(temp_dir, file.filename)\n+        file.save(file_path)\n+        datasets[dataset_id] = {\n+            'id': dataset_id,\n+            'filename': file.filename,\n+            'file_path': file_path\n+        }\n+        return jsonify({'id': dataset_id, 'filename': file.filename}), 201\n+    return jsonify({'error': 'No file uploaded'}), 400\n+# Get dataset info\n+\n+\n+@fakenodo_bp.route('/fakenodo/info/<dataset_id>', methods=['GET'])\n+def get_Dataset(dataset_id):\n+    dataset = datasets.get(dataset_id)\n+    if dataset:\n+        return send_file(dataset['file_path'], as_attachment=True, attachment_filename=dataset['filename'])\n+    return jsonify({'error': 'Dataset not found'}), 404\n+\n+\n+@fakenodo_bp.route('/fakenodo/datasets', methods=['GET'])\n+def list_datasets():\n+    return jsonify(list(datasets.values()))\n+# Delete a deposition\n+\n+\n+@fakenodo_bp.route('/fakenodo/dataset/<int:dataset_id>', methods=['DELETE'])\n+def delete_dataset(dataset_id):\n+    dataset = datasets.pop(dataset_id, None)\n+    if dataset:\n+        os.remove(dataset['file_path'])\n+        return jsonify({'message': 'Dataset deleted'}), 200\n+    return jsonify({'error': 'Dataset not found'}), 404"
      },
      {
        "sha": "9efa7214b2ea1789a7a935da09f36bc4e7ed5816",
        "filename": "app/modules/fakenodo/seeders.py",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Fseeders.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fseeders.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -0,0 +1,30 @@\n+from app import db\n+from app.modules.fakenodo.models import Deposition\n+\n+\n+def seed_depositions():\n+    \"\"\"Seeds the Deposition table with sample data.\"\"\"\n+    if Deposition.query.count() == 0:\n+        print(\"Seeding the Deposition table...\")\n+        depositions = [\n+            Deposition(\n+                dep_metadata={\"title\": \"Sample Dataset 1\", \"description\": \"Description for dataset 1\"},\n+                status=\"draft\",\n+                doi=None\n+            ),\n+            Deposition(\n+                dep_metadata={\"title\": \"Sample Dataset 2\", \"description\": \"Description for dataset 2\"},\n+                status=\"published\",\n+                doi=\"fakenodo.doi.2\"\n+            ),\n+            Deposition(\n+                dep_metadata={\"title\": \"Sample Dataset 3\", \"description\": \"Description for dataset 3\"},\n+                status=\"draft\",\n+                doi=\"fakenodo.doi.3\"\n+            ),\n+        ]\n+        db.session.bulk_save_objects(depositions)\n+        db.session.commit()\n+        print(\"Deposition table seeded successfully.\")\n+    else:\n+        print(\"Deposition table already contains data. Skipping seeding.\")"
      },
      {
        "sha": "648fe235ec9e967b2566bec818aaa98aedc4f107",
        "filename": "app/modules/fakenodo/services.py",
        "status": "added",
        "additions": 156,
        "deletions": 0,
        "changes": 156,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fservices.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -0,0 +1,156 @@\n+import hashlib\n+import logging\n+import os\n+\n+\n+from dotenv import load_dotenv\n+from flask_login import current_user\n+from app.modules.dataset.models import DataSet, DSMetaData\n+from app.modules.fakenodo.models import Deposition\n+from app.modules.fakenodo.repositories import DepositionRepo\n+from app.modules.featuremodel.models import FeatureModel\n+from core.configuration.configuration import uploads_folder_name\n+from core.services.BaseService import BaseService\n+\n+\n+logger = logging.getLogger(__name__)\n+load_dotenv()\n+\n+\n+class FakenodoService(BaseService):\n+    def __init__(self):\n+        self.deposition_repository = DepositionRepo()\n+\n+    def create_new_deposition(self, ds_meta_data: DSMetaData) -> dict:\n+        \"\"\"\n+        Create a new deposition in Fakenodo\n+        Args:\n+            dataset (Dataset): The dataset containing the necessary metadata\n+        Returns:\n+            dict: JSON format with the details of the deposition\n+        \"\"\"\n+        logger.info(\"Dataset sending to Fakenodo\")\n+        logger.info(f\"Publication type: {ds_meta_data.publication_type.value}\")\n+        metadataJSON = {\n+            \"title\": ds_meta_data.title,\n+            \"upload_type\": \"dataset\" if ds_meta_data.publication_type.value == \"none\" else \"publication\",\n+            \"publication_type\": (\n+                ds_meta_data.publication_type.value\n+                if ds_meta_data.publication_type.value != \"none\"\n+                else None\n+            ),\n+            \"description\": ds_meta_data.description,\n+            \"creators\": [\n+                {\n+                    \"name\": author.name,\n+                    **({\"affiliation\": author.affiliation} if author.affiliation else {}),\n+                    **({\"orcid\": author.orcid} if author.orcid else {}),\n+                }\n+                for author in ds_meta_data.authors\n+            ],\n+            \"keywords\": (\n+                [\"uvlhub\"] if not ds_meta_data.tags else ds_meta_data.tags.split(\", \") + [\"uvlhub\"]\n+            ),\n+            \"access_right\": \"open\",\n+            \"license\": \"CC-BY-4.0\",\n+        }\n+        try:\n+            deposition = self.deposition_repository.create_new_deposition(dep_metadata=metadataJSON)\n+            print(\"DEPOSIIITION\")\n+            print(deposition)\n+            return {\n+                \"id\": deposition.id,\n+                \"metadata\": metadataJSON,\n+                \"message\": \"Deposition succesfully created in Fakenodo\"\n+            }\n+        except Exception as error400:\n+            raise Exception(f\"Failed to create deposition in Fakenodo with error: {str(error400)}\")\n+\n+    def upload_file(self, dataset: DataSet, deposition_id: int, feature_model: FeatureModel, user=None):\n+        \"\"\"\n+        Upload a file to a deposition in Fakenodo.\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+            feature_model (FeatureModel): The FeatureModel object representing the feature model.\n+            user (FeatureModel): The User object representing the file owner.\n+        Returns:\n+            dict: The response in JSON format with the details of the uploaded file.\n+        \"\"\"\n+        uvl_filename = feature_model.fm_meta_data.uvl_filename\n+        user_id = current_user.id if user is None else user.id\n+        file_path = os.path.join(uploads_folder_name(), f\"user_{str(user_id)}\", f\"dataset_{dataset.id}/\", uvl_filename)\n+        request = {\n+            \"id\": deposition_id,\n+            \"file\": uvl_filename,\n+            \"fileSize\": os.path.getsize(file_path),\n+            \"checksum\": checksum(file_path),\n+            \"message\": f\"File Uploaded to deposition with id {deposition_id}\"\n+        }\n+        return request\n+\n+    def publish_deposition(self, deposition_id: int) -> dict:\n+        \"\"\"\n+        Publish a deposition in Fakenodo.\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+        Returns:\n+            dict: The response in JSON format with the details of the published deposition.\n+        \"\"\"\n+        deposition = Deposition.query.get(deposition_id)\n+        if not deposition:\n+            raise Exception(\"Error 404: Deposition not found\")\n+        try:\n+            deposition.doi = f\"fakenodo.doi.{deposition_id}\"\n+            deposition.status = \"published\"\n+            self.deposition_repository.update(deposition)\n+            response = {\n+                \"id\": deposition_id,\n+                \"status\": \"published\",\n+                \"conceptdoi\": f\"fakenodo.doi.{deposition_id}\",\n+                \"message\": \"Deposition published successfully in fakenodo.\"\n+            }\n+            return response\n+        except Exception as error:\n+            raise Exception(f\"Failed to publish deposition with errors: {str(error)}\")\n+\n+    def get_deposition(self, deposition_id: int) -> dict:\n+        \"\"\"\n+        Get a deposition from Fakenodo.\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+        Returns:\n+            dict: The response in JSON format with the details of the deposition.\n+        \"\"\"\n+        deposition = Deposition.query.get(deposition_id)\n+        if not deposition:\n+            raise Exception(\"Deposition not found\")\n+        response = {\n+            \"id\": deposition.id,\n+            \"doi\": deposition.doi,\n+            \"metadata\": deposition.dep_metadata,\n+            \"status\": deposition.status,\n+            \"message\": \"Deposition succesfully get from Fakenodo.\"\n+        }\n+        return response\n+\n+    def get_doi(self, deposition_id: int) -> str:\n+        \"\"\"\n+        Get the DOI of a deposition from Fakenodo.\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+        Returns:\n+            str: The DOI of the deposition.\n+        \"\"\"\n+        return self.get_deposition(deposition_id).get(\"doi\")\n+\n+\n+def checksum(fileName):\n+    try:\n+        with open(fileName, \"rb\") as file:\n+            file_content = file.read()\n+            res = hashlib.md5(file_content).hexdigest()\n+        return res\n+    except FileNotFoundError:\n+        raise Exception(f\"File {fileName} not found for checksum calculation\")\n+    except Exception as e:\n+        raise Exception(f\"Error calculating checksum for file {fileName}: {str(e)}\")"
      },
      {
        "sha": "bb533486c0a1f1149ee71ba5057cae880bf34e1c",
        "filename": "app/modules/fakenodo/templates/fakenodo/index.html",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -0,0 +1,11 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}View fakenodo{% endblock %}\n+\n+{% block content %}\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('fakenodo.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/fakenodo/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8"
      },
      {
        "sha": "355e5809e151db3a7660d151233fffaae8fc6986",
        "filename": "app/modules/fakenodo/tests/locustfile.py",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -0,0 +1,21 @@\n+from locust import HttpUser, TaskSet, task\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class FakenodoBehavior(TaskSet):\n+    def on_start(self):\n+        self.index()\n+\n+    @task\n+    def index(self):\n+        response = self.client.get(\"/fakenodo\")\n+\n+        if response.status_code != 200:\n+            print(f\"Fakenodo index failed: {response.status_code}\")\n+\n+\n+class FakenodoUser(HttpUser):\n+    tasks = [FakenodoBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "a33f0bb967501891fd46ff885dc25d13d985454f",
        "filename": "app/modules/fakenodo/tests/test_selenium.py",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -0,0 +1,35 @@\n+from selenium.common.exceptions import NoSuchElementException\n+import time\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def test_fakenodo_index():\n+\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the index page\n+        driver.get(f'{host}/fakenodo')\n+\n+        # Wait a little while to make sure the page has loaded completely\n+        time.sleep(4)\n+\n+        try:\n+\n+            pass\n+\n+        except NoSuchElementException:\n+            raise AssertionError('Test failed!')\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_fakenodo_index()"
      },
      {
        "sha": "950421eb7b4ee15f00b45f83730c55dd2dda9336",
        "filename": "app/modules/fakenodo/tests/test_unit.py",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -0,0 +1,24 @@\n+import pytest\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        # Add HERE new elements to the database that you want to exist in the test context.\n+        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_sample_assertion(test_client):\n+    \"\"\"\n+    Sample test to verify that the test framework and environment are working correctly.\n+    It does not communicate with the Flask application; it only performs a simple assertion to\n+    confirm that the tests in this module can be executed.\n+    \"\"\"\n+    greeting = \"Hello, World!\"\n+    assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\""
      },
      {
        "sha": "147aa0d31fd9026b79737cf3ac30b34a2dbfffd7",
        "filename": "core/configuration/configuration.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/core%2Fconfiguration%2Fconfiguration.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/core%2Fconfiguration%2Fconfiguration.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/core%2Fconfiguration%2Fconfiguration.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -4,6 +4,9 @@\n load_dotenv()\n \n \n+USE_FAKENODE = True\n+\n+\n def uploads_folder_name():\n     return os.getenv('UPLOADS_DIR', \"uploads\")\n "
      },
      {
        "sha": "cac7aaf23f0da2a6d5dbc602ae8e89cde0e02783",
        "filename": "migrations/versions/002.py",
        "status": "modified",
        "additions": 17,
        "deletions": 12,
        "changes": 29,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/migrations%2Fversions%2F002.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e940e0a278ce6e061ceabafd6fed7feb0c72b3b8/migrations%2Fversions%2F002.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F002.py?ref=e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
        "patch": "@@ -7,7 +7,7 @@\n \"\"\"\n from alembic import op\n import sqlalchemy as sa\n-from sqlalchemy.dialects import mysql\n+from sqlalchemy.engine.reflection import Inspector\n \n # revision identifiers, used by Alembic.\n revision = '002'\n@@ -17,18 +17,23 @@\n \n \n def upgrade():\n+    conn = op.get_bind()\n+    inspector = Inspector.from_engine(conn)\n+    tables = inspector.get_table_names()\n+\n     # ### commands auto generated by Alembic - please adjust! ###\n-    op.drop_table('ds_rating', if_exists=True) \n-    op.create_table('ds_rating',\n-        sa.Column('id', sa.Integer(), nullable=False),\n-        sa.Column('user_id', sa.Integer(), nullable=False),\n-        sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n-        sa.Column('rating', sa.Float(), nullable=False),\n-        sa.Column('rated_date', sa.DateTime(), nullable=False),\n-        sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n-        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n-        sa.PrimaryKeyConstraint('id')\n-    )\n+    # op.drop_table('ds_rating', if_exists=True)\n+    if 'ds_rating' not in tables:\n+        op.create_table('ds_rating',\n+            sa.Column('id', sa.Integer(), nullable=False),\n+            sa.Column('user_id', sa.Integer(), nullable=False),\n+            sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n+            sa.Column('rating', sa.Float(), nullable=False),\n+            sa.Column('rated_date', sa.DateTime(), nullable=False),\n+            sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+            sa.PrimaryKeyConstraint('id')\n+        )\n     # with op.batch_alter_table('deposition', schema=None) as batch_op:\n     # batch_op.drop_index('doi')\n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/112",
    "id": 2232007691,
    "node_id": "PR_kwDONB39G86FCbwL",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/112",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/112.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/112.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/112",
    "number": 112,
    "state": "closed",
    "locked": false,
    "title": "fix: Fix fakenodo",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-12T15:44:35Z",
    "updated_at": "2024-12-12T16:50:16Z",
    "closed_at": "2024-12-12T16:50:13Z",
    "merged_at": "2024-12-12T16:50:13Z",
    "merge_commit_sha": "e940e0a278ce6e061ceabafd6fed7feb0c72b3b8",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/112/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/112/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/112/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/fcbde3f4e4409cc4a7c2b5118f56030794b02d30",
    "head": {
      "label": "TostaHub:fixFakenodo",
      "ref": "fixFakenodo",
      "sha": "fcbde3f4e4409cc4a7c2b5118f56030794b02d30",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "580d84cebf8cffd6bc1d2f2d9a45bb0106c01405",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/112"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/112"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/112"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/112/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/112/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/112/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/fcbde3f4e4409cc4a7c2b5118f56030794b02d30"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "878b309be392787f337eca4b31b27e1e97f5a735",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/fcbde3f4e4409cc4a7c2b5118f56030794b02d30/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/fcbde3f4e4409cc4a7c2b5118f56030794b02d30/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=fcbde3f4e4409cc4a7c2b5118f56030794b02d30",
        "patch": "@@ -68,18 +68,20 @@ def create_dataset():\n \n         # send dataset as deposition to Zenodo/Fakenodo\n         data = {}\n-        nodo = \"Fakenodo\" if USE_FAKENODE else \"Zenodo\"\n+        actualNode = \"Fakenodo\" if USE_FAKENODE else \"Zenodo\"\n         try:\n-            nodo_response_json = nodo_service.create_new_deposition(dataset)\n+            nodo_response_json = nodo_service.create_new_deposition(dataset.ds_meta_data)\n             response_data = json.dumps(nodo_response_json)\n             data = json.loads(response_data)\n         except Exception as exc:\n             data = {}\n             nodo_response_json = {}\n-            logger.exception(f\"Exception while create dataset data in {nodo} {exc}\")\n+            logger.exception(f\"Exception while create dataset data in {actualNode} {exc}\")\n \n-        if data.get(\"conceptrecid\"):\n-            deposition_id = data.get(\"id\")\n+        deposition_id = data.get(\"id\")\n+        if deposition_id:\n+            print(\"DEPOSITION\")\n+            print(deposition_id)\n \n             # update dataset with deposition id in Zenodo/Fakenodo\n             dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n@@ -96,7 +98,7 @@ def create_dataset():\n                 deposition_doi = nodo_service.get_doi(deposition_id)\n                 dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n             except Exception as e:\n-                msg = f\"it has not been possible upload feature models in {nodo} and update the DOI: {e}\"\n+                msg = f\"it has not been possible upload feature models in {actualNode} and update the DOI: {e}\"\n                 return jsonify({\"message\": msg}), 200\n \n         # Delete temp folder"
      },
      {
        "sha": "2e6c88c5f812e784393bd835b8b3c6960ee75c9e",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 21,
        "deletions": 9,
        "changes": 30,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/fcbde3f4e4409cc4a7c2b5118f56030794b02d30/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/fcbde3f4e4409cc4a7c2b5118f56030794b02d30/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=fcbde3f4e4409cc4a7c2b5118f56030794b02d30",
        "patch": "@@ -32,7 +32,8 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         max_size_filter = None\n \n         # Inicia la consulta, usando el alias en la uni\u00f3n\n-        query = db.session.query(DataSet).join(ds_meta_data_alias, DataSet.ds_meta_data)\n+        query = db.session.query(DataSet).join(ds_meta_data_alias, DataSet.ds_meta_data)\\\n+            .filter(DSMetaData.dataset_doi.isnot(None))\n \n         # Filtrar por tipo de publicaci\u00f3n\n         if publication_type != \"any\":\n@@ -75,12 +76,12 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n             # Filtrar por numero maximo de modelos\n             elif filter_item.startswith('max_models:'):\n                 max_model_filter = filter_item[11:].strip()\n-                query = query.group_by(DataSet.id).having(func.count(Hubfile.id) <= int(max_model_filter))\n+                max_uvl = max_model_filter\n \n             # Filtrar por numero minimo de modelos\n             elif filter_item.startswith('min_models:'):\n                 min_model_filter = filter_item[11:].strip()\n-                query = query.group_by(DataSet.id).having(func.count(Hubfile.id) >= int(min_model_filter))\n+                min_uvl = min_model_filter\n \n             # Filtrar por numero maximo de configuraciones\n             elif filter_item.startswith('max_configs:'):\n@@ -116,12 +117,6 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         query = query.join(FeatureModel, FeatureModel.data_set_id == DataSet.id)  # Uni\u00f3n con FeatureModel\n         query = query.join(Hubfile, Hubfile.feature_model_id == FeatureModel.id)  # Uni\u00f3n con Hubfile\n \n-        if min_uvl.isdigit():\n-            query = query.group_by(DataSet.id).having(func.count(Hubfile.id) >= int(min_uvl))\n-\n-        if max_uvl.isdigit():\n-            query = query.group_by(DataSet.id).having(func.count(Hubfile.id) <= int(max_uvl))\n-\n         # Ordenar resultados\n         if sorting == \"oldest\":\n             query = query.order_by(DataSet.created_at.asc())\n@@ -151,6 +146,12 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n                 )\n             ]\n \n+        if min_uvl.isdigit() or max_uvl.isdigit():\n+            results = [\n+                ds for ds in results\n+                if num_uvls_between(ds, min_uvl, max_uvl)\n+            ]\n+\n         if min_num_configurations.isdigit() or max_num_configurations.isdigit():\n             results = [\n                 ds for ds in results\n@@ -166,6 +167,17 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         return results\n \n \n+def num_uvls_between(dataset, min_num, max_num):\n+    num = dataset.get_files_count()\n+    valid_min = min_num.isdigit()\n+    valid_max = max_num.isdigit()\n+    if valid_min and valid_max:\n+        return num >= int(min_num) and num <= int(max_num)\n+    else:\n+        return (valid_min and num >= int(min_num)\n+                or valid_max and num <= int(max_num))\n+\n+\n def num_configurations_between(file_id, min_num_configurations, max_num_configurations):\n     result, status_code = get_num_configurations(file_id)\n "
      },
      {
        "sha": "be4afc13af443641c4aeb0ba3b8c92b28f6268e4",
        "filename": "app/modules/fakenodo/repositories.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/fcbde3f4e4409cc4a7c2b5118f56030794b02d30/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/fcbde3f4e4409cc4a7c2b5118f56030794b02d30/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Frepositories.py?ref=fcbde3f4e4409cc4a7c2b5118f56030794b02d30",
        "patch": "@@ -7,5 +7,5 @@ class DepositionRepo(BaseRepository):\n     def __init__(self):\n         super().__init__(Deposition)\n \n-    def create_new_deposition(self, metadata):\n-        return self.create(metadata=metadata)\n+    def create_new_deposition(self, dep_metadata):\n+        return self.create(dep_metadata=dep_metadata)"
      },
      {
        "sha": "648fe235ec9e967b2566bec818aaa98aedc4f107",
        "filename": "app/modules/fakenodo/services.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/fcbde3f4e4409cc4a7c2b5118f56030794b02d30/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/fcbde3f4e4409cc4a7c2b5118f56030794b02d30/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fservices.py?ref=fcbde3f4e4409cc4a7c2b5118f56030794b02d30",
        "patch": "@@ -25,7 +25,7 @@ def create_new_deposition(self, ds_meta_data: DSMetaData) -> dict:\n         \"\"\"\n         Create a new deposition in Fakenodo\n         Args:\n-            dataset (Dataset): The dataset contain ing the necessary metadata\n+            dataset (Dataset): The dataset containing the necessary metadata\n         Returns:\n             dict: JSON format with the details of the deposition\n         \"\"\"\n@@ -56,6 +56,8 @@ def create_new_deposition(self, ds_meta_data: DSMetaData) -> dict:\n         }\n         try:\n             deposition = self.deposition_repository.create_new_deposition(dep_metadata=metadataJSON)\n+            print(\"DEPOSIIITION\")\n+            print(deposition)\n             return {\n                 \"id\": deposition.id,\n                 \"metadata\": metadataJSON,"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/111",
    "id": 2231841061,
    "node_id": "PR_kwDONB39G86FBzEl",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/111",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/111.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/111.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/111",
    "number": 111,
    "state": "closed",
    "locked": false,
    "title": "Rate datasets",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-12T14:31:48Z",
    "updated_at": "2024-12-12T15:57:25Z",
    "closed_at": "2024-12-12T15:15:34Z",
    "merged_at": "2024-12-12T15:15:34Z",
    "merge_commit_sha": "580d84cebf8cffd6bc1d2f2d9a45bb0106c01405",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/111/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/111/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/111/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e",
    "head": {
      "label": "TostaHub:rateDatasets",
      "ref": "rateDatasets",
      "sha": "5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "6ae3377ba298712862bc443c1c3967bf633fa694",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/111"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/111"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/111"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/111/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/111/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/111/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "9f26074ef7e3e18e0f96d25f3075b8167a2ca616",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 19,
        "deletions": 4,
        "changes": 23,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e",
        "patch": "@@ -445,10 +445,25 @@ def edit_dataset(dataset_id):\n @dataset_bp.route(\"/datasets/<int:dataset_id>/rate\", methods=[\"POST\"])\n @login_required\n def rate_dataset(dataset_id):\n-    user_id = current_user.id\n-    rating_value = request.json.get('rating')\n-    rating = ds_rating_service.add_or_update_rating(dataset_id, user_id, rating_value)\n-    return jsonify({'message': 'Rating added', 'rating': rating.to_dict()}), 200\n+    try:\n+        user_id = current_user.id\n+        rating_value = request.json.get('rating')\n+\n+        # Validar que el rating est\u00e9 presente\n+        if rating_value is None:\n+            return jsonify({'error': 'Rating is required.'}), 400\n+\n+        # Intentar a\u00f1adir o actualizar el rating\n+        rating = ds_rating_service.add_or_update_rating(dataset_id, user_id, rating_value)\n+        return jsonify({'message': 'Rating added', 'rating': rating.to_dict()}), 200\n+\n+    except ValueError as e:\n+        # Manejar valores inv\u00e1lidos de rating\n+        return jsonify({'error': str(e)}), 400\n+\n+    except Exception:\n+        # Manejar errores inesperados\n+        return jsonify({'error': 'Rating must be between 1 and 5.'}), 500\n \n \n @dataset_bp.route('/datasets/<int:dataset_id>/average-rating', methods=['GET'])"
      },
      {
        "sha": "67b43f733ad70adef4a0c0b5cc50181a3ff0e157",
        "filename": "app/modules/dataset/services.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fservices.py?ref=5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e",
        "patch": "@@ -215,6 +215,14 @@ def __init__(self):\n         super().__init__(DSRatingRepository())\n \n     def add_or_update_rating(self, dsmetadata_id: int, user_id: int, rating_value: int) -> DSRating:\n+        try:\n+            rating_value = int(rating_value)\n+        except ValueError:\n+            raise ValueError(\"El rating debe ser un n\u00famero entero.\")\n+\n+    # Validar que el rating est\u00e9 entre 1 y 5\n+        if rating_value < 1 or rating_value > 5:\n+            raise ValueError(\"El rating debe estar entre 1 y 5.\")\n         rating = self.repository.get_user_rating(dsmetadata_id, user_id)\n         if rating:\n             print(\"Actualizando rating a {rating_value}\")"
      },
      {
        "sha": "bca91a32f43b72ba7d977881056bbeaafe78beac",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 65,
        "deletions": 7,
        "changes": 72,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e",
        "patch": "@@ -1,20 +1,78 @@\n import random\n-from locust import HttpUser, TaskSet, task\n from core.locust.common import get_csrf_token\n+from locust import HttpUser, TaskSet, task\n from core.environment.host import get_host_for_locust_testing\n \n \n class DatasetBehavior(TaskSet):\n     def on_start(self):\n+\n+        \"\"\"Realiza el login antes de iniciar las tareas de la prueba.\"\"\"\n+        response = self.client.post('/login', json={\n+            'email': 'user1@example.com',\n+            'password': '1234'\n+        })\n+        if response.status_code == 200:\n+            print(\"Login exitoso.\")\n+\n+            self.session_cookies = response.cookies\n+        else:\n+            print(\"Error en el login:\", response.status_code, response.text)\n+            self.session_cookies = None\n+\n         self.dataset()\n         self.login()\n         self.create_dataset()\n         self.view_user_datasets()\n \n-    @task\n-    def dataset(self):\n-        response = self.client.get(\"/dataset/upload\")\n-        get_csrf_token(response)\n+    def is_authenticated(self):\n+        \"\"\"Comprueba si el login fue exitoso.\"\"\"\n+        return self.session_cookies is not None\n+\n+    def post_with_auth(self, url, json=None):\n+        \"\"\"Realiza una solicitud POST autenticada.\"\"\"\n+        if not self.is_authenticated():\n+            print(\"Usuario no autenticado. No se puede realizar la solicitud.\")\n+            return None\n+\n+        # A\u00f1ade cookies al realizar solicitudes\n+        return self.client.post(url, json=json, cookies=self.session_cookies)\n+\n+    @task(1)\n+    def rate_dataset_success(self):\n+        \"\"\"Simula un usuario calificando un dataset exitosamente.\"\"\"\n+        response = self.post_with_auth('/datasets/10/rate', json={\"rating\": 4})\n+        if response and response.status_code == 200:\n+            print(\"Rating agregado exitosamente.\")\n+        elif response:\n+            print(\"Error al agregar el rating:\", response.status_code, response.text)\n+\n+    @task(2)\n+    def rate_dataset_invalid_rating(self):\n+        \"\"\"Simula un usuario enviando un rating inv\u00e1lido mayor a 5.\"\"\"\n+        response = self.post_with_auth('/datasets/10/rate', json={\"rating\": 12})\n+        if response and response.status_code == 400:\n+            print(\"Error esperado: Rating inv\u00e1lido.\")\n+        elif response:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def rate_dataset_not_found(self):\n+        \"\"\"Simula un usuario intentando calificar un dataset que no existe.\"\"\"\n+        response = self.post_with_auth(\"/datasets/100/rate\", json={\"rating\": 3})\n+        if response and response.status_code == 404:\n+            print(\"Error esperado: Dataset no encontrado.\")\n+        elif response:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def rate_dataset_unauthorized(self):\n+        \"\"\"Simula un usuario no autenticado intentando calificar un dataset.\"\"\"\n+        response = self.client.post('/datasets/17/rate', json={\"rating\": 4})\n+        if response.status_code == 302 or response.status_code == 401:\n+            print(\"Error esperado: No autorizado.\")\n+        else:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n \n     def login(self):\n         \"\"\"Simula el inicio de sesi\u00f3n del usuario.\"\"\"\n@@ -62,6 +120,6 @@ def view_user_datasets(self):\n \n class DatasetUser(HttpUser):\n     tasks = [DatasetBehavior]\n-    min_wait = 5000\n-    max_wait = 9000\n+    min_wait = 5000  # Tiempo de espera m\u00ednimo en milisegundos (5 segundos)\n+    max_wait = 9000  # Tiempo de espera m\u00e1ximo en milisegundos (9 segundos)\n     host = get_host_for_locust_testing()"
      },
      {
        "sha": "26dab43c853a2651dc319a41152f1cbbc8f2fa8e",
        "filename": "app/modules/dataset/tests/unit.py",
        "status": "added",
        "additions": 155,
        "deletions": 0,
        "changes": 155,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Ftests%2Funit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Ftests%2Funit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Funit.py?ref=5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e",
        "patch": "@@ -0,0 +1,155 @@\n+from datetime import datetime\n+import os\n+import pytest\n+from flask.testing import FlaskClient\n+from app import create_app, db\n+from app.modules.auth.models import User\n+from app.modules.conftest import login\n+from app.modules.dataset.models import DSMetaData, DSRating, DataSet, PublicationType\n+from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from app.modules.profile.models import UserProfile\n+\n+\n+@pytest.fixture\n+def client():\n+    app = create_app('testing')\n+    with app.test_client() as client:\n+        with app.app_context():\n+            # Configuraci\u00f3n de la base de datos en modo de prueba\n+            db.drop_all()\n+            db.create_all()\n+\n+            user = User(\n+                id=5,\n+                email=\"user5@example.com\",\n+                password=\"1234\",\n+                created_at=datetime(2022, 3, 13)\n+            )\n+            db.session.add(user)\n+            db.session.commit()\n+\n+            profile = UserProfile(\n+                user_id=user.id,\n+                surname=\"TestSurname\",\n+                name=\"TestName\",\n+                affiliation=\"TestAffiliation\",\n+                orcid=\"0000-0001-2345-6789\"\n+            )\n+            db.session.add(profile)\n+            db.session.commit()\n+\n+            dsmetadata = DSMetaData(\n+                id=10,\n+                title=\"Sample Dataset 17\",\n+                rating=0,\n+                description=\"Description for dataset 17\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name\n+            )\n+            db.session.add(dsmetadata)\n+            dataset = DataSet(\n+                id=10,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata.id\n+            )\n+            db.session.add(dataset)\n+            db.session.commit()\n+\n+            dsrating = DSRating(\n+                id=10,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata.id,\n+                rating=dsmetadata.rating,\n+                rated_date=datetime(2022, 5, 17)\n+            )\n+            db.session.add(dsrating)\n+            db.session.commit()\n+\n+            # Crear un dataset en el staging area\n+            dsmetadata_sa = DSMetaData(\n+                id=11,\n+                title=\"Staging area Dataset\",\n+                description=\"Description for unique dataset\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name\n+            )\n+            db.session.add(dsmetadata_sa)\n+            dataset_staging_area = DataSet(\n+                id=11,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata_sa.id\n+            )\n+            db.session.add(dataset_staging_area)\n+            db.session.commit()\n+\n+            user1 = User(\n+                id=6,\n+                email=\"user6@example.com\",\n+                password=\"1234\",\n+                created_at=datetime(2022, 3, 13)\n+            )\n+            db.session.add(user1)\n+            db.session.commit()\n+\n+            fm_metadata = FMMetaData(\n+                uvl_filename=\"test_model.uvl\",\n+                title=\"Test Feature Model\",\n+                description=\"A feature model for testing purposes\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name,\n+                publication_doi=\"\",\n+                tags=\"test,feature,model\",\n+                uvl_version=\"1.0\"\n+            )\n+            db.session.add(fm_metadata)\n+            db.session.commit()\n+\n+            # Crear un FeatureModel relacionado con un DataSet\n+            feature_model = FeatureModel(\n+                data_set_id=dataset.id,\n+                fm_meta_data_id=fm_metadata.id\n+            )\n+            db.session.add(feature_model)\n+            db.session.commit()\n+            # Crear el archivo temporal en la ruta esperada\n+            temp_folder = os.path.join('uploads', 'temp', str(user.id))\n+            os.makedirs(temp_folder, exist_ok=True)\n+            with open(os.path.join(temp_folder, 'file9.uvl'), 'w') as f:\n+                f.write('Temporary file content')\n+            yield client\n+\n+            # Limpiar el archivo temporal despu\u00e9s de la prueba\n+            if os.path.exists(os.path.join(temp_folder, 'file9.uvl')):\n+                os.remove(os.path.join(temp_folder, 'file9.uvl'))\n+            if os.path.exists(temp_folder):\n+                os.rmdir(temp_folder)\n+\n+            db.session.remove()\n+            db.drop_all()\n+\n+\n+def test_rate_dataset_success(client: FlaskClient):\n+    login_response = login(client, \"user5@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+    print(\"Login Response:\", login_response.data)  # Para ver el contenido de la respuesta\n+    response = client.post('/datasets/10/rate', json={\"rating\": 4})\n+    assert response.status_code == 200\n+\n+\n+def test_rate_dataset_unauthorized(client):\n+    \"\"\"Prueba para enviar un rating sin estar autenticado.\"\"\"\n+    rating_data = {'rating': 4}\n+    response = client.post('/datasets/17/rate', json=rating_data)\n+\n+    assert response.status_code == 302, \"El c\u00f3digo de estado deber\u00eda ser 401 para usuarios no autenticados.\"\n+\n+\n+def test_rate_dataset_invalid_rating_above_5(client: FlaskClient):\n+    \"\"\"Prueba para enviar un rating inv\u00e1lido mayor a 5.\"\"\"\n+    # Iniciar sesi\u00f3n con un usuario v\u00e1lido\n+    login_response = login(client, \"user5@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+\n+    # Enviar un rating inv\u00e1lido\n+    response = client.post('/datasets/10/rate', json={\"rating\": 6})\n+\n+    # Verificar que la respuesta sea un error\n+    assert response.status_code == 400, \"El c\u00f3digo de estado deber\u00eda ser 400 para calificaci\u00f3n inv\u00e1lida.\"\n+    assert response.json[\"error\"] == \"El rating debe estar entre 1 y 5.\", \"El mensaje de error no coincide.\""
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/110",
    "id": 2231835074,
    "node_id": "PR_kwDONB39G86FBxnC",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/110",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/110.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/110.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/110",
    "number": 110,
    "state": "closed",
    "locked": false,
    "title": "Rate datasets",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-12T14:29:31Z",
    "updated_at": "2024-12-12T15:57:25Z",
    "closed_at": "2024-12-12T14:31:12Z",
    "merged_at": null,
    "merge_commit_sha": "e936a85c155f33b38abd5276fd6bab5780517666",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/110/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/110/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/110/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e",
    "head": {
      "label": "TostaHub:rateDatasets",
      "ref": "rateDatasets",
      "sha": "5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "6ae3377ba298712862bc443c1c3967bf633fa694",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/110"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/110"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/110"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/110/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/110/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/110/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "9f26074ef7e3e18e0f96d25f3075b8167a2ca616",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 19,
        "deletions": 4,
        "changes": 23,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e",
        "patch": "@@ -445,10 +445,25 @@ def edit_dataset(dataset_id):\n @dataset_bp.route(\"/datasets/<int:dataset_id>/rate\", methods=[\"POST\"])\n @login_required\n def rate_dataset(dataset_id):\n-    user_id = current_user.id\n-    rating_value = request.json.get('rating')\n-    rating = ds_rating_service.add_or_update_rating(dataset_id, user_id, rating_value)\n-    return jsonify({'message': 'Rating added', 'rating': rating.to_dict()}), 200\n+    try:\n+        user_id = current_user.id\n+        rating_value = request.json.get('rating')\n+\n+        # Validar que el rating est\u00e9 presente\n+        if rating_value is None:\n+            return jsonify({'error': 'Rating is required.'}), 400\n+\n+        # Intentar a\u00f1adir o actualizar el rating\n+        rating = ds_rating_service.add_or_update_rating(dataset_id, user_id, rating_value)\n+        return jsonify({'message': 'Rating added', 'rating': rating.to_dict()}), 200\n+\n+    except ValueError as e:\n+        # Manejar valores inv\u00e1lidos de rating\n+        return jsonify({'error': str(e)}), 400\n+\n+    except Exception:\n+        # Manejar errores inesperados\n+        return jsonify({'error': 'Rating must be between 1 and 5.'}), 500\n \n \n @dataset_bp.route('/datasets/<int:dataset_id>/average-rating', methods=['GET'])"
      },
      {
        "sha": "67b43f733ad70adef4a0c0b5cc50181a3ff0e157",
        "filename": "app/modules/dataset/services.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fservices.py?ref=5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e",
        "patch": "@@ -215,6 +215,14 @@ def __init__(self):\n         super().__init__(DSRatingRepository())\n \n     def add_or_update_rating(self, dsmetadata_id: int, user_id: int, rating_value: int) -> DSRating:\n+        try:\n+            rating_value = int(rating_value)\n+        except ValueError:\n+            raise ValueError(\"El rating debe ser un n\u00famero entero.\")\n+\n+    # Validar que el rating est\u00e9 entre 1 y 5\n+        if rating_value < 1 or rating_value > 5:\n+            raise ValueError(\"El rating debe estar entre 1 y 5.\")\n         rating = self.repository.get_user_rating(dsmetadata_id, user_id)\n         if rating:\n             print(\"Actualizando rating a {rating_value}\")"
      },
      {
        "sha": "bca91a32f43b72ba7d977881056bbeaafe78beac",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 65,
        "deletions": 7,
        "changes": 72,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e",
        "patch": "@@ -1,20 +1,78 @@\n import random\n-from locust import HttpUser, TaskSet, task\n from core.locust.common import get_csrf_token\n+from locust import HttpUser, TaskSet, task\n from core.environment.host import get_host_for_locust_testing\n \n \n class DatasetBehavior(TaskSet):\n     def on_start(self):\n+\n+        \"\"\"Realiza el login antes de iniciar las tareas de la prueba.\"\"\"\n+        response = self.client.post('/login', json={\n+            'email': 'user1@example.com',\n+            'password': '1234'\n+        })\n+        if response.status_code == 200:\n+            print(\"Login exitoso.\")\n+\n+            self.session_cookies = response.cookies\n+        else:\n+            print(\"Error en el login:\", response.status_code, response.text)\n+            self.session_cookies = None\n+\n         self.dataset()\n         self.login()\n         self.create_dataset()\n         self.view_user_datasets()\n \n-    @task\n-    def dataset(self):\n-        response = self.client.get(\"/dataset/upload\")\n-        get_csrf_token(response)\n+    def is_authenticated(self):\n+        \"\"\"Comprueba si el login fue exitoso.\"\"\"\n+        return self.session_cookies is not None\n+\n+    def post_with_auth(self, url, json=None):\n+        \"\"\"Realiza una solicitud POST autenticada.\"\"\"\n+        if not self.is_authenticated():\n+            print(\"Usuario no autenticado. No se puede realizar la solicitud.\")\n+            return None\n+\n+        # A\u00f1ade cookies al realizar solicitudes\n+        return self.client.post(url, json=json, cookies=self.session_cookies)\n+\n+    @task(1)\n+    def rate_dataset_success(self):\n+        \"\"\"Simula un usuario calificando un dataset exitosamente.\"\"\"\n+        response = self.post_with_auth('/datasets/10/rate', json={\"rating\": 4})\n+        if response and response.status_code == 200:\n+            print(\"Rating agregado exitosamente.\")\n+        elif response:\n+            print(\"Error al agregar el rating:\", response.status_code, response.text)\n+\n+    @task(2)\n+    def rate_dataset_invalid_rating(self):\n+        \"\"\"Simula un usuario enviando un rating inv\u00e1lido mayor a 5.\"\"\"\n+        response = self.post_with_auth('/datasets/10/rate', json={\"rating\": 12})\n+        if response and response.status_code == 400:\n+            print(\"Error esperado: Rating inv\u00e1lido.\")\n+        elif response:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def rate_dataset_not_found(self):\n+        \"\"\"Simula un usuario intentando calificar un dataset que no existe.\"\"\"\n+        response = self.post_with_auth(\"/datasets/100/rate\", json={\"rating\": 3})\n+        if response and response.status_code == 404:\n+            print(\"Error esperado: Dataset no encontrado.\")\n+        elif response:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def rate_dataset_unauthorized(self):\n+        \"\"\"Simula un usuario no autenticado intentando calificar un dataset.\"\"\"\n+        response = self.client.post('/datasets/17/rate', json={\"rating\": 4})\n+        if response.status_code == 302 or response.status_code == 401:\n+            print(\"Error esperado: No autorizado.\")\n+        else:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n \n     def login(self):\n         \"\"\"Simula el inicio de sesi\u00f3n del usuario.\"\"\"\n@@ -62,6 +120,6 @@ def view_user_datasets(self):\n \n class DatasetUser(HttpUser):\n     tasks = [DatasetBehavior]\n-    min_wait = 5000\n-    max_wait = 9000\n+    min_wait = 5000  # Tiempo de espera m\u00ednimo en milisegundos (5 segundos)\n+    max_wait = 9000  # Tiempo de espera m\u00e1ximo en milisegundos (9 segundos)\n     host = get_host_for_locust_testing()"
      },
      {
        "sha": "26dab43c853a2651dc319a41152f1cbbc8f2fa8e",
        "filename": "app/modules/dataset/tests/unit.py",
        "status": "added",
        "additions": 155,
        "deletions": 0,
        "changes": 155,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Ftests%2Funit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e/app%2Fmodules%2Fdataset%2Ftests%2Funit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Funit.py?ref=5ac8cb7a3761fc0bd2c7db2633caac5b63ea265e",
        "patch": "@@ -0,0 +1,155 @@\n+from datetime import datetime\n+import os\n+import pytest\n+from flask.testing import FlaskClient\n+from app import create_app, db\n+from app.modules.auth.models import User\n+from app.modules.conftest import login\n+from app.modules.dataset.models import DSMetaData, DSRating, DataSet, PublicationType\n+from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from app.modules.profile.models import UserProfile\n+\n+\n+@pytest.fixture\n+def client():\n+    app = create_app('testing')\n+    with app.test_client() as client:\n+        with app.app_context():\n+            # Configuraci\u00f3n de la base de datos en modo de prueba\n+            db.drop_all()\n+            db.create_all()\n+\n+            user = User(\n+                id=5,\n+                email=\"user5@example.com\",\n+                password=\"1234\",\n+                created_at=datetime(2022, 3, 13)\n+            )\n+            db.session.add(user)\n+            db.session.commit()\n+\n+            profile = UserProfile(\n+                user_id=user.id,\n+                surname=\"TestSurname\",\n+                name=\"TestName\",\n+                affiliation=\"TestAffiliation\",\n+                orcid=\"0000-0001-2345-6789\"\n+            )\n+            db.session.add(profile)\n+            db.session.commit()\n+\n+            dsmetadata = DSMetaData(\n+                id=10,\n+                title=\"Sample Dataset 17\",\n+                rating=0,\n+                description=\"Description for dataset 17\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name\n+            )\n+            db.session.add(dsmetadata)\n+            dataset = DataSet(\n+                id=10,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata.id\n+            )\n+            db.session.add(dataset)\n+            db.session.commit()\n+\n+            dsrating = DSRating(\n+                id=10,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata.id,\n+                rating=dsmetadata.rating,\n+                rated_date=datetime(2022, 5, 17)\n+            )\n+            db.session.add(dsrating)\n+            db.session.commit()\n+\n+            # Crear un dataset en el staging area\n+            dsmetadata_sa = DSMetaData(\n+                id=11,\n+                title=\"Staging area Dataset\",\n+                description=\"Description for unique dataset\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name\n+            )\n+            db.session.add(dsmetadata_sa)\n+            dataset_staging_area = DataSet(\n+                id=11,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata_sa.id\n+            )\n+            db.session.add(dataset_staging_area)\n+            db.session.commit()\n+\n+            user1 = User(\n+                id=6,\n+                email=\"user6@example.com\",\n+                password=\"1234\",\n+                created_at=datetime(2022, 3, 13)\n+            )\n+            db.session.add(user1)\n+            db.session.commit()\n+\n+            fm_metadata = FMMetaData(\n+                uvl_filename=\"test_model.uvl\",\n+                title=\"Test Feature Model\",\n+                description=\"A feature model for testing purposes\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name,\n+                publication_doi=\"\",\n+                tags=\"test,feature,model\",\n+                uvl_version=\"1.0\"\n+            )\n+            db.session.add(fm_metadata)\n+            db.session.commit()\n+\n+            # Crear un FeatureModel relacionado con un DataSet\n+            feature_model = FeatureModel(\n+                data_set_id=dataset.id,\n+                fm_meta_data_id=fm_metadata.id\n+            )\n+            db.session.add(feature_model)\n+            db.session.commit()\n+            # Crear el archivo temporal en la ruta esperada\n+            temp_folder = os.path.join('uploads', 'temp', str(user.id))\n+            os.makedirs(temp_folder, exist_ok=True)\n+            with open(os.path.join(temp_folder, 'file9.uvl'), 'w') as f:\n+                f.write('Temporary file content')\n+            yield client\n+\n+            # Limpiar el archivo temporal despu\u00e9s de la prueba\n+            if os.path.exists(os.path.join(temp_folder, 'file9.uvl')):\n+                os.remove(os.path.join(temp_folder, 'file9.uvl'))\n+            if os.path.exists(temp_folder):\n+                os.rmdir(temp_folder)\n+\n+            db.session.remove()\n+            db.drop_all()\n+\n+\n+def test_rate_dataset_success(client: FlaskClient):\n+    login_response = login(client, \"user5@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+    print(\"Login Response:\", login_response.data)  # Para ver el contenido de la respuesta\n+    response = client.post('/datasets/10/rate', json={\"rating\": 4})\n+    assert response.status_code == 200\n+\n+\n+def test_rate_dataset_unauthorized(client):\n+    \"\"\"Prueba para enviar un rating sin estar autenticado.\"\"\"\n+    rating_data = {'rating': 4}\n+    response = client.post('/datasets/17/rate', json=rating_data)\n+\n+    assert response.status_code == 302, \"El c\u00f3digo de estado deber\u00eda ser 401 para usuarios no autenticados.\"\n+\n+\n+def test_rate_dataset_invalid_rating_above_5(client: FlaskClient):\n+    \"\"\"Prueba para enviar un rating inv\u00e1lido mayor a 5.\"\"\"\n+    # Iniciar sesi\u00f3n con un usuario v\u00e1lido\n+    login_response = login(client, \"user5@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+\n+    # Enviar un rating inv\u00e1lido\n+    response = client.post('/datasets/10/rate', json={\"rating\": 6})\n+\n+    # Verificar que la respuesta sea un error\n+    assert response.status_code == 400, \"El c\u00f3digo de estado deber\u00eda ser 400 para calificaci\u00f3n inv\u00e1lida.\"\n+    assert response.json[\"error\"] == \"El rating debe estar entre 1 y 5.\", \"El mensaje de error no coincide.\""
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/109",
    "id": 2231823321,
    "node_id": "PR_kwDONB39G86FBuvZ",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/109",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/109.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/109.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/109",
    "number": 109,
    "state": "closed",
    "locked": false,
    "title": "Rate datasets",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-12T14:24:00Z",
    "updated_at": "2024-12-12T14:28:54Z",
    "closed_at": "2024-12-12T14:28:54Z",
    "merged_at": null,
    "merge_commit_sha": "1cbf89784e38b74faa6571a77d7ca202346ef54f",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/109/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/109/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/109/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/1fc6ab7dffd319923a4078640b4e1bb28ceb7439",
    "head": {
      "label": "TostaHub:rateDatasets",
      "ref": "rateDatasets",
      "sha": "1fc6ab7dffd319923a4078640b4e1bb28ceb7439",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "6ae3377ba298712862bc443c1c3967bf633fa694",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/109"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/109"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/109"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/109/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/109/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/109/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/1fc6ab7dffd319923a4078640b4e1bb28ceb7439"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "9f26074ef7e3e18e0f96d25f3075b8167a2ca616",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 19,
        "deletions": 4,
        "changes": 23,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/1fc6ab7dffd319923a4078640b4e1bb28ceb7439/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/1fc6ab7dffd319923a4078640b4e1bb28ceb7439/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=1fc6ab7dffd319923a4078640b4e1bb28ceb7439",
        "patch": "@@ -445,10 +445,25 @@ def edit_dataset(dataset_id):\n @dataset_bp.route(\"/datasets/<int:dataset_id>/rate\", methods=[\"POST\"])\n @login_required\n def rate_dataset(dataset_id):\n-    user_id = current_user.id\n-    rating_value = request.json.get('rating')\n-    rating = ds_rating_service.add_or_update_rating(dataset_id, user_id, rating_value)\n-    return jsonify({'message': 'Rating added', 'rating': rating.to_dict()}), 200\n+    try:\n+        user_id = current_user.id\n+        rating_value = request.json.get('rating')\n+\n+        # Validar que el rating est\u00e9 presente\n+        if rating_value is None:\n+            return jsonify({'error': 'Rating is required.'}), 400\n+\n+        # Intentar a\u00f1adir o actualizar el rating\n+        rating = ds_rating_service.add_or_update_rating(dataset_id, user_id, rating_value)\n+        return jsonify({'message': 'Rating added', 'rating': rating.to_dict()}), 200\n+\n+    except ValueError as e:\n+        # Manejar valores inv\u00e1lidos de rating\n+        return jsonify({'error': str(e)}), 400\n+\n+    except Exception:\n+        # Manejar errores inesperados\n+        return jsonify({'error': 'Rating must be between 1 and 5.'}), 500\n \n \n @dataset_bp.route('/datasets/<int:dataset_id>/average-rating', methods=['GET'])"
      },
      {
        "sha": "67b43f733ad70adef4a0c0b5cc50181a3ff0e157",
        "filename": "app/modules/dataset/services.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/1fc6ab7dffd319923a4078640b4e1bb28ceb7439/app%2Fmodules%2Fdataset%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/1fc6ab7dffd319923a4078640b4e1bb28ceb7439/app%2Fmodules%2Fdataset%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fservices.py?ref=1fc6ab7dffd319923a4078640b4e1bb28ceb7439",
        "patch": "@@ -215,6 +215,14 @@ def __init__(self):\n         super().__init__(DSRatingRepository())\n \n     def add_or_update_rating(self, dsmetadata_id: int, user_id: int, rating_value: int) -> DSRating:\n+        try:\n+            rating_value = int(rating_value)\n+        except ValueError:\n+            raise ValueError(\"El rating debe ser un n\u00famero entero.\")\n+\n+    # Validar que el rating est\u00e9 entre 1 y 5\n+        if rating_value < 1 or rating_value > 5:\n+            raise ValueError(\"El rating debe estar entre 1 y 5.\")\n         rating = self.repository.get_user_rating(dsmetadata_id, user_id)\n         if rating:\n             print(\"Actualizando rating a {rating_value}\")"
      },
      {
        "sha": "9c186b52c3e13742b80f25a68bfd1a4ec89c613c",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 65,
        "deletions": 7,
        "changes": 72,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/1fc6ab7dffd319923a4078640b4e1bb28ceb7439/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/1fc6ab7dffd319923a4078640b4e1bb28ceb7439/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=1fc6ab7dffd319923a4078640b4e1bb28ceb7439",
        "patch": "@@ -1,20 +1,78 @@\n import random\n from locust import HttpUser, TaskSet, task\n-from core.locust.common import get_csrf_token\n from core.environment.host import get_host_for_locust_testing\n \n \n class DatasetBehavior(TaskSet):\n     def on_start(self):\n+\n+        \"\"\"Realiza el login antes de iniciar las tareas de la prueba.\"\"\"\n+        response = self.client.post('/login', json={\n+            'email': 'user1@example.com',\n+            'password': '1234'\n+        })\n+        if response.status_code == 200:\n+            print(\"Login exitoso.\")\n+\n+            self.session_cookies = response.cookies\n+        else:\n+            print(\"Error en el login:\", response.status_code, response.text)\n+            self.session_cookies = None\n+\n         self.dataset()\n         self.login()\n         self.create_dataset()\n         self.view_user_datasets()\n \n-    @task\n-    def dataset(self):\n-        response = self.client.get(\"/dataset/upload\")\n-        get_csrf_token(response)\n+\n+    def is_authenticated(self):\n+        \"\"\"Comprueba si el login fue exitoso.\"\"\"\n+        return self.session_cookies is not None\n+\n+    def post_with_auth(self, url, json=None):\n+        \"\"\"Realiza una solicitud POST autenticada.\"\"\"\n+        if not self.is_authenticated():\n+            print(\"Usuario no autenticado. No se puede realizar la solicitud.\")\n+            return None\n+\n+        # A\u00f1ade cookies al realizar solicitudes\n+        return self.client.post(url, json=json, cookies=self.session_cookies)\n+\n+    @task(1)\n+    def rate_dataset_success(self):\n+        \"\"\"Simula un usuario calificando un dataset exitosamente.\"\"\"\n+        response = self.post_with_auth('/datasets/10/rate', json={\"rating\": 4})\n+        if response and response.status_code == 200:\n+            print(\"Rating agregado exitosamente.\")\n+        elif response:\n+            print(\"Error al agregar el rating:\", response.status_code, response.text)\n+\n+    @task(2)\n+    def rate_dataset_invalid_rating(self):\n+        \"\"\"Simula un usuario enviando un rating inv\u00e1lido mayor a 5.\"\"\"\n+        response = self.post_with_auth('/datasets/10/rate', json={\"rating\": 12})\n+        if response and response.status_code == 400:\n+            print(\"Error esperado: Rating inv\u00e1lido.\")\n+        elif response:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def rate_dataset_not_found(self):\n+        \"\"\"Simula un usuario intentando calificar un dataset que no existe.\"\"\"\n+        response = self.post_with_auth(\"/datasets/100/rate\", json={\"rating\": 3})\n+        if response and response.status_code == 404:\n+            print(\"Error esperado: Dataset no encontrado.\")\n+        elif response:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n+\n+    @task(1)\n+    def rate_dataset_unauthorized(self):\n+        \"\"\"Simula un usuario no autenticado intentando calificar un dataset.\"\"\"\n+        response = self.client.post('/datasets/17/rate', json={\"rating\": 4})\n+        if response.status_code == 302 or response.status_code == 401:\n+            print(\"Error esperado: No autorizado.\")\n+        else:\n+            print(\"Error inesperado:\", response.status_code, response.text)\n \n     def login(self):\n         \"\"\"Simula el inicio de sesi\u00f3n del usuario.\"\"\"\n@@ -62,6 +120,6 @@ def view_user_datasets(self):\n \n class DatasetUser(HttpUser):\n     tasks = [DatasetBehavior]\n-    min_wait = 5000\n-    max_wait = 9000\n+    min_wait = 5000  # Tiempo de espera m\u00ednimo en milisegundos (5 segundos)\n+    max_wait = 9000  # Tiempo de espera m\u00e1ximo en milisegundos (9 segundos)\n     host = get_host_for_locust_testing()"
      },
      {
        "sha": "26dab43c853a2651dc319a41152f1cbbc8f2fa8e",
        "filename": "app/modules/dataset/tests/unit.py",
        "status": "added",
        "additions": 155,
        "deletions": 0,
        "changes": 155,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/1fc6ab7dffd319923a4078640b4e1bb28ceb7439/app%2Fmodules%2Fdataset%2Ftests%2Funit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/1fc6ab7dffd319923a4078640b4e1bb28ceb7439/app%2Fmodules%2Fdataset%2Ftests%2Funit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Funit.py?ref=1fc6ab7dffd319923a4078640b4e1bb28ceb7439",
        "patch": "@@ -0,0 +1,155 @@\n+from datetime import datetime\n+import os\n+import pytest\n+from flask.testing import FlaskClient\n+from app import create_app, db\n+from app.modules.auth.models import User\n+from app.modules.conftest import login\n+from app.modules.dataset.models import DSMetaData, DSRating, DataSet, PublicationType\n+from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from app.modules.profile.models import UserProfile\n+\n+\n+@pytest.fixture\n+def client():\n+    app = create_app('testing')\n+    with app.test_client() as client:\n+        with app.app_context():\n+            # Configuraci\u00f3n de la base de datos en modo de prueba\n+            db.drop_all()\n+            db.create_all()\n+\n+            user = User(\n+                id=5,\n+                email=\"user5@example.com\",\n+                password=\"1234\",\n+                created_at=datetime(2022, 3, 13)\n+            )\n+            db.session.add(user)\n+            db.session.commit()\n+\n+            profile = UserProfile(\n+                user_id=user.id,\n+                surname=\"TestSurname\",\n+                name=\"TestName\",\n+                affiliation=\"TestAffiliation\",\n+                orcid=\"0000-0001-2345-6789\"\n+            )\n+            db.session.add(profile)\n+            db.session.commit()\n+\n+            dsmetadata = DSMetaData(\n+                id=10,\n+                title=\"Sample Dataset 17\",\n+                rating=0,\n+                description=\"Description for dataset 17\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name\n+            )\n+            db.session.add(dsmetadata)\n+            dataset = DataSet(\n+                id=10,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata.id\n+            )\n+            db.session.add(dataset)\n+            db.session.commit()\n+\n+            dsrating = DSRating(\n+                id=10,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata.id,\n+                rating=dsmetadata.rating,\n+                rated_date=datetime(2022, 5, 17)\n+            )\n+            db.session.add(dsrating)\n+            db.session.commit()\n+\n+            # Crear un dataset en el staging area\n+            dsmetadata_sa = DSMetaData(\n+                id=11,\n+                title=\"Staging area Dataset\",\n+                description=\"Description for unique dataset\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name\n+            )\n+            db.session.add(dsmetadata_sa)\n+            dataset_staging_area = DataSet(\n+                id=11,\n+                user_id=user.id,\n+                ds_meta_data_id=dsmetadata_sa.id\n+            )\n+            db.session.add(dataset_staging_area)\n+            db.session.commit()\n+\n+            user1 = User(\n+                id=6,\n+                email=\"user6@example.com\",\n+                password=\"1234\",\n+                created_at=datetime(2022, 3, 13)\n+            )\n+            db.session.add(user1)\n+            db.session.commit()\n+\n+            fm_metadata = FMMetaData(\n+                uvl_filename=\"test_model.uvl\",\n+                title=\"Test Feature Model\",\n+                description=\"A feature model for testing purposes\",\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN.name,\n+                publication_doi=\"\",\n+                tags=\"test,feature,model\",\n+                uvl_version=\"1.0\"\n+            )\n+            db.session.add(fm_metadata)\n+            db.session.commit()\n+\n+            # Crear un FeatureModel relacionado con un DataSet\n+            feature_model = FeatureModel(\n+                data_set_id=dataset.id,\n+                fm_meta_data_id=fm_metadata.id\n+            )\n+            db.session.add(feature_model)\n+            db.session.commit()\n+            # Crear el archivo temporal en la ruta esperada\n+            temp_folder = os.path.join('uploads', 'temp', str(user.id))\n+            os.makedirs(temp_folder, exist_ok=True)\n+            with open(os.path.join(temp_folder, 'file9.uvl'), 'w') as f:\n+                f.write('Temporary file content')\n+            yield client\n+\n+            # Limpiar el archivo temporal despu\u00e9s de la prueba\n+            if os.path.exists(os.path.join(temp_folder, 'file9.uvl')):\n+                os.remove(os.path.join(temp_folder, 'file9.uvl'))\n+            if os.path.exists(temp_folder):\n+                os.rmdir(temp_folder)\n+\n+            db.session.remove()\n+            db.drop_all()\n+\n+\n+def test_rate_dataset_success(client: FlaskClient):\n+    login_response = login(client, \"user5@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+    print(\"Login Response:\", login_response.data)  # Para ver el contenido de la respuesta\n+    response = client.post('/datasets/10/rate', json={\"rating\": 4})\n+    assert response.status_code == 200\n+\n+\n+def test_rate_dataset_unauthorized(client):\n+    \"\"\"Prueba para enviar un rating sin estar autenticado.\"\"\"\n+    rating_data = {'rating': 4}\n+    response = client.post('/datasets/17/rate', json=rating_data)\n+\n+    assert response.status_code == 302, \"El c\u00f3digo de estado deber\u00eda ser 401 para usuarios no autenticados.\"\n+\n+\n+def test_rate_dataset_invalid_rating_above_5(client: FlaskClient):\n+    \"\"\"Prueba para enviar un rating inv\u00e1lido mayor a 5.\"\"\"\n+    # Iniciar sesi\u00f3n con un usuario v\u00e1lido\n+    login_response = login(client, \"user5@example.com\", \"1234\")\n+    assert login_response.status_code == 200, \"Login was unsuccessful.\"\n+\n+    # Enviar un rating inv\u00e1lido\n+    response = client.post('/datasets/10/rate', json={\"rating\": 6})\n+\n+    # Verificar que la respuesta sea un error\n+    assert response.status_code == 400, \"El c\u00f3digo de estado deber\u00eda ser 400 para calificaci\u00f3n inv\u00e1lida.\"\n+    assert response.json[\"error\"] == \"El rating debe estar entre 1 y 5.\", \"El mensaje de error no coincide.\""
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/107",
    "id": 2229695058,
    "node_id": "PR_kwDONB39G86E5nJS",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/107",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/107.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/107.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/107",
    "number": 107,
    "state": "closed",
    "locked": false,
    "title": "test: Unit test added for explore repository",
    "user": {
      "login": "Leonidas6000",
      "id": 73244549,
      "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leonidas6000",
      "html_url": "https://github.com/Leonidas6000",
      "followers_url": "https://api.github.com/users/Leonidas6000/followers",
      "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
      "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
      "repos_url": "https://api.github.com/users/Leonidas6000/repos",
      "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-11T18:47:24Z",
    "updated_at": "2024-12-12T14:48:12Z",
    "closed_at": "2024-12-12T14:48:06Z",
    "merged_at": "2024-12-12T14:48:06Z",
    "merge_commit_sha": "30972763153c2773af4785341c01eb7c6b61630e",
    "assignee": {
      "login": "Leonidas6000",
      "id": 73244549,
      "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leonidas6000",
      "html_url": "https://github.com/Leonidas6000",
      "followers_url": "https://api.github.com/users/Leonidas6000/followers",
      "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
      "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
      "repos_url": "https://api.github.com/users/Leonidas6000/repos",
      "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "Leonidas6000",
        "id": 73244549,
        "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
        "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Leonidas6000",
        "html_url": "https://github.com/Leonidas6000",
        "followers_url": "https://api.github.com/users/Leonidas6000/followers",
        "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
        "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
        "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
        "repos_url": "https://api.github.com/users/Leonidas6000/repos",
        "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [
      {
        "id": 7817000833,
        "node_id": "LA_kwDONB39G88AAAAB0e33gQ",
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels/test",
        "name": "test",
        "color": "BAEA63",
        "default": false,
        "description": ""
      }
    ],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/107/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/107/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/107/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/7c4bc64ef7896ab4a837d35fa6b902416391229a",
    "head": {
      "label": "TostaHub:105-pytest-for-advanced-search-querys",
      "ref": "105-pytest-for-advanced-search-querys",
      "sha": "7c4bc64ef7896ab4a837d35fa6b902416391229a",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "6ae3377ba298712862bc443c1c3967bf633fa694",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/107"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/107"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/107"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/107/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/107/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/107/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/7c4bc64ef7896ab4a837d35fa6b902416391229a"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "cc5860748ac1e44152289e863e79d9bd0b3bb1fb",
        "filename": "app/modules/common/dbutils.py",
        "status": "modified",
        "additions": 35,
        "deletions": 2,
        "changes": 37,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7c4bc64ef7896ab4a837d35fa6b902416391229a/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7c4bc64ef7896ab4a837d35fa6b902416391229a/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fcommon%2Fdbutils.py?ref=7c4bc64ef7896ab4a837d35fa6b902416391229a",
        "patch": "@@ -3,6 +3,7 @@\n from app import db\n from app.modules.auth.models import User\n from app.modules.dataset.models import (\n+    Author,\n     DataSet,\n     DSMetaData,\n     PublicationType,\n@@ -14,7 +15,11 @@\n \n \n def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN, tags=\"\",\n-                      date=\"\", valid=True, should_file_exist=True):\n+                      date=\"\", valid=True, should_file_exist=True, authors=None, total_file_size=None, num_files=None):\n+    # Si no se proporcionan autores, usa un autor por defecto\n+    if authors is None:\n+        authors = [{\"name\": f\"Author {id}\", \"affiliation\": \"Affiliation\", \"orcid\": f\"orcid{id}\"}]\n+\n     user_test = User(email=f'user{id}@example.com', password='test1234')\n     db.session.add(user_test)\n     db.session.commit()\n@@ -30,12 +35,19 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n             publication_type=publication_type,\n             publication_doi=f'10.1234/dataset{id}',\n             dataset_doi=f'10.1234/dataset{id}',\n-            tags='tag1, tag2',\n+            tags=tags,\n             ds_metrics_id=ds_metrics.id\n         )\n     db.session.add(ds_meta_data)\n     db.session.commit()\n \n+    # Agregar autores al dataset\n+    for author in authors:\n+        author_obj = Author(name=author['name'], affiliation=author.get('affiliation', ''),\n+                            orcid=author.get('orcid', ''), ds_meta_data_id=ds_meta_data.id)\n+        db.session.add(author_obj)\n+    db.session.commit()\n+\n     created_at = datetime.now(timezone.utc) if date == \"\" else datetime.strptime(date, '%Y-%m-%d')\n     dataset = DataSet(\n             user_id=user_test.id,\n@@ -64,6 +76,7 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n     db.session.add(feature_model)\n     db.session.commit()\n \n+    # Asignar archivos\n     if should_file_exist:\n         load_dotenv()\n         working_dir = os.getenv('WORKING_DIR', '')\n@@ -84,3 +97,23 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n         )\n         db.session.add(uvl_file)\n         db.session.commit()\n+\n+        # Si se especifica un tama\u00f1o total de archivos, ajustamos la l\u00f3gica\n+        if total_file_size is not None:\n+            uvl_file.size = total_file_size\n+            db.session.commit()\n+\n+        # Si se especifica el n\u00famero de archivos, lo usamos\n+        if num_files is not None:\n+            for i in range(1, num_files):\n+                additional_file_name = f'file{id % 12 + i}.uvl'\n+                shutil.copy(os.path.join(src_folder, additional_file_name), dest_folder)\n+\n+                additional_uvl_file = Hubfile(\n+                    name=additional_file_name,\n+                    checksum=f'checksum{id + i}',\n+                    size=os.path.getsize(file_path),\n+                    feature_model_id=feature_model.id\n+                )\n+                db.session.add(additional_uvl_file)\n+            db.session.commit()"
      },
      {
        "sha": "bbc40df24ea32bca7adafcfd0d532043e1265ac5",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "modified",
        "additions": 125,
        "deletions": 11,
        "changes": 136,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7c4bc64ef7896ab4a837d35fa6b902416391229a/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7c4bc64ef7896ab4a837d35fa6b902416391229a/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=7c4bc64ef7896ab4a837d35fa6b902416391229a",
        "patch": "@@ -9,11 +9,13 @@ def test_client(test_client):\n     Extends the test_client fixture to add additional specific data for module testing.\n     \"\"\"\n     with test_client.application.app_context():\n+        authors = [{\"name\": \"John Doe\", \"affiliation\": \"University of Testing\", \"orcid\": \"1234-5678\"}]\n         create_dataset_db(1, PublicationType.BOOK, \"tag1,tag2\")\n         create_dataset_db(2, PublicationType.ANNOTATION_COLLECTION, \"tag2\")\n         create_dataset_db(3, PublicationType.BOOK, date=\"2020-1-1\")\n         create_dataset_db(4, valid=False)\n-\n+        create_dataset_db(5, authors=authors, total_file_size=5000, num_files=5)\n+        create_dataset_db(6, authors=authors, total_file_size=10000, num_files=1, tags=\"tag1\")\n         pass\n \n     yield test_client\n@@ -37,15 +39,15 @@ def test_explore_post(test_client):\n \n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n-    assert len(response.get_json()) == 4, \"Wrong number of datasets\"\n+    assert len(response.get_json()) == 6, \"Wrong number of datasets\"\n \n \n def test_explore_filter_num_uvls_post(test_client):\n     search_criteria = get_search_criteria(min_uvl=\"1\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_ds = len(response.get_json())\n-    assert num_ds == 4, f\"Wrong number of datasets: {num_ds}\"\n+    assert num_ds == 6, f\"Wrong number of datasets: {num_ds}\"\n \n     search_criteria = get_search_criteria(max_uvl=\"0\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n@@ -64,7 +66,7 @@ def test_explore_filter_num_configurations_post(test_client):\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_conf = len(response.get_json())\n-    assert num_conf == 4, f\"Wrong number of datasets: {num_conf}\"\n+    assert num_conf == 6, f\"Wrong number of datasets: {num_conf}\"\n \n     search_criteria = get_search_criteria(max_num_configurations=\"0\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n@@ -76,7 +78,7 @@ def test_explore_filter_num_configurations_post(test_client):\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_conf = len(response.get_json())\n-    assert num_conf == 4, f\"Wrong number of datasets: {num_conf}\"\n+    assert num_conf == 6, f\"Wrong number of datasets: {num_conf}\"\n \n     wrong_num = \"notanumber\"\n     search_criteria = get_search_criteria(min_num_configurations=wrong_num, max_num_configurations=wrong_num)\n@@ -90,7 +92,7 @@ def test_explore_filter_date_post(test_client):\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num = len(response.get_json())\n-    assert num == 3, f\"Wrong number of datasets: {num}\"\n+    assert num == 5, f\"Wrong number of datasets: {num}\"\n \n     search_criteria = get_search_criteria(start_date=\"2025-1-1\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n@@ -121,14 +123,14 @@ def test_explore_filter_publication_type_post(test_client):\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num = len(response.get_json())\n-    assert num == 4, f\"Wrong number of datasets: {num}\"\n+    assert num == 6, f\"Wrong number of datasets: {num}\"\n \n     wrong_publication_type = \"ERROR\"\n     search_criteria = get_search_criteria(publication_type=wrong_publication_type)\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num = len(response.get_json())\n-    assert num == 4, f\"Wrong number of datasets: {num}\"\n+    assert num == 6, f\"Wrong number of datasets: {num}\"\n \n \n def test_explore_filter_query_post(test_client):\n@@ -165,21 +167,133 @@ def test_explore_filter_by_valid_uvl_post(test_client):\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num = len(response.get_json())\n-    assert num == 3, f\"Wrong number of datasets: {num}\"\n+    assert num == 5, f\"Wrong number of datasets: {num}\"\n \n     search_criteria = get_search_criteria(by_valid_uvls=\"off\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num = len(response.get_json())\n-    assert num == 4, f\"Wrong number of datasets: {num}\"\n+    assert num == 6, f\"Wrong number of datasets: {num}\"\n \n \n def test_explore_soring_post(test_client):\n     search_criteria = get_search_criteria(sorting=\"oldest\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num = len(response.get_json())\n-    assert num == 4, f\"Wrong number of datasets: {num}\"\n+    assert num == 6, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_filter_min_size_post(test_client):\n+    search_criteria = get_search_criteria(query=\"min_size:100\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 5, f\"Wrong number of datasets for min_size filter: {num}\"\n+\n+\n+def test_explore_filter_min_size_invalid(test_client):\n+    search_criteria = get_search_criteria(query=\"min_size:abc\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 6, f\"Wrong number of datasets for min_size filter with invalid value: {num}\"\n+\n+    search_criteria = get_search_criteria(query=\"min_size:\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 6, f\"Wrong number of datasets for min_size filter with empty value: {num}\"\n+\n+\n+def test_explore_filter_max_size_invalid(test_client):\n+    search_criteria = get_search_criteria(query=\"max_size:xyz\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 6, f\"Wrong number of datasets for max_size filter with invalid value: {num}\"\n+\n+    search_criteria = get_search_criteria(query=\"max_size:\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 6, f\"Wrong number of datasets for max_size filter with empty value: {num}\"\n+\n+\n+def test_explore_filter_max_size_post(test_client):\n+    search_criteria = get_search_criteria(query=\"max_size:500\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets for max_size filter: {num}\"\n+\n+    search_criteria = get_search_criteria(query=\"max_size:50000\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 6, f\"Wrong number of datasets for max_size filter: {num}\"\n+\n+\n+def test_explore_filter_min_models_post(test_client):\n+    search_criteria = get_search_criteria(query=\"min_models:2\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets for min_models filter: {num}\"\n+\n+\n+def test_explore_filter_max_models_post(test_client):\n+    search_criteria = get_search_criteria(query=\"max_models:1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 5, f\"Wrong number of datasets for max_models filter: {num}\"\n+\n+\n+def test_explore_filter_tags_post(test_client):\n+    search_criteria = get_search_criteria(query=\"tags:tag2\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 2, f\"Wrong number of datasets for tags filter: {num}\"\n+\n+\n+def test_explore_filter_author_post(test_client):\n+    search_criteria = get_search_criteria(query=\"author:john_doe\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 2, f\"Wrong number of datasets for author filter: {num}\"\n+\n+\n+def test_explore_filter_max_configs_post(test_client):\n+    search_criteria = get_search_criteria(query=\"max_configs:3\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets for max_configs filter: {num}\"\n+\n+\n+def test_explore_filter_min_configs_post(test_client):\n+    search_criteria = get_search_criteria(query=\"min_configs:2\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 6, f\"Wrong number of datasets for min_configs filter: {num}\"\n+\n+    search_criteria = get_search_criteria(query=\"min_configs:30\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets for min_configs filter: {num}\"\n+\n+\n+def test_explore_combined_query_filters_post(test_client):\n+    search_criteria = get_search_criteria(query=\"min_size:100;max_models:2;tags:tag1;author:john_doe\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets for combined query filters: {num}\"\n \n \n def get_search_criteria(query=\"\", sorting=\"newest\", publication_type=\"any\","
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/104",
    "id": 2227171257,
    "node_id": "PR_kwDONB39G86Ev--5",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/104",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/104.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/104.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/104",
    "number": 104,
    "state": "closed",
    "locked": false,
    "title": "feat: updates functionality",
    "user": {
      "login": "Leonidas6000",
      "id": 73244549,
      "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leonidas6000",
      "html_url": "https://github.com/Leonidas6000",
      "followers_url": "https://api.github.com/users/Leonidas6000/followers",
      "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
      "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
      "repos_url": "https://api.github.com/users/Leonidas6000/repos",
      "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-10T18:50:40Z",
    "updated_at": "2024-12-11T15:40:35Z",
    "closed_at": "2024-12-11T15:40:24Z",
    "merged_at": "2024-12-11T15:40:24Z",
    "merge_commit_sha": "6ae3377ba298712862bc443c1c3967bf633fa694",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/104/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/104/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/104/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/0336eb4a8d2ae100bd4009e68b20020e154eb9c2",
    "head": {
      "label": "TostaHub:6-advanced-search-querys",
      "ref": "6-advanced-search-querys",
      "sha": "0336eb4a8d2ae100bd4009e68b20020e154eb9c2",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "c9dc34da1809d20695ffc892decb50e4bf77b743",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/104"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/104"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/104"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/104/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/104/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/104/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/0336eb4a8d2ae100bd4009e68b20020e154eb9c2"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "a4d93cb046233ab76ebeb4c1079937b4cddf7381",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 52,
        "deletions": 31,
        "changes": 83,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0336eb4a8d2ae100bd4009e68b20020e154eb9c2/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0336eb4a8d2ae100bd4009e68b20020e154eb9c2/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=0336eb4a8d2ae100bd4009e68b20020e154eb9c2",
        "patch": "@@ -47,38 +47,59 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         # Procesar el filtro de `query_string`\n         query_filter = query_string.strip()\n \n-        # Filtrar por autor\n-        if query_filter.startswith('author:'):\n-            author_filter = query_filter[7:].strip()\n-            query = query.join(author_meta_data_alias).join(Author).filter(Author.name.ilike(f'%{author_filter}%'))\n-\n-        # Filtrar por tama\u00f1o m\u00ednimo\n-        elif query_filter.startswith('min_size:'):\n-            try:\n-                min_size_filter = int(query_filter[9:].strip())\n-            except ValueError:\n-                min_size_filter = None\n-\n-        # Filtrar por tama\u00f1o m\u00e1ximo\n-        elif query_filter.startswith('max_size:'):\n-            try:\n-                max_size_filter = int(query_filter[9:].strip())\n-            except ValueError:\n-                max_size_filter = None\n-\n-        # Filtrar por etiquetas\n-        elif query_filter.startswith('tags:'):\n-            tags_filter = query_filter[5:].strip()\n-            query = query.filter(ds_meta_data_alias.tags.ilike(f'%{tags_filter}%'))\n-\n-        # Filtrar por t\u00edtulo o tag(consulta general)\n-        else:\n-            query = query.filter(\n-                or_(\n-                    ds_meta_data_alias.title.ilike(f\"%{query_filter}%\"),\n-                    ds_meta_data_alias.tags.ilike(f\"%{query_filter}%\")\n+        for filter_item in query_filter.split(';'):\n+            # Filtrar por autor\n+            if filter_item.startswith('author:'):\n+                author_filter = filter_item[7:].strip()\n+                query = query.join(author_meta_data_alias).join(Author).filter(Author.name.ilike(f'%{author_filter}%'))\n+\n+            # Filtrar por tama\u00f1o m\u00ednimo\n+            elif filter_item.startswith('min_size:'):\n+                try:\n+                    min_size_filter = int(filter_item[9:].strip())\n+                except ValueError:\n+                    min_size_filter = None\n+\n+            # Filtrar por tama\u00f1o m\u00e1ximo\n+            elif filter_item.startswith('max_size:'):\n+                try:\n+                    max_size_filter = int(filter_item[9:].strip())\n+                except ValueError:\n+                    max_size_filter = None\n+\n+            # Filtrar por etiquetas\n+            elif filter_item.startswith('tags:'):\n+                tags_filter = filter_item[5:].strip()\n+                query = query.filter(ds_meta_data_alias.tags.ilike(f'%{tags_filter}%'))\n+\n+            # Filtrar por numero maximo de modelos\n+            elif filter_item.startswith('max_models:'):\n+                max_model_filter = filter_item[11:].strip()\n+                query = query.group_by(DataSet.id).having(func.count(Hubfile.id) <= int(max_model_filter))\n+\n+            # Filtrar por numero minimo de modelos\n+            elif filter_item.startswith('min_models:'):\n+                min_model_filter = filter_item[11:].strip()\n+                query = query.group_by(DataSet.id).having(func.count(Hubfile.id) >= int(min_model_filter))\n+\n+            # Filtrar por numero maximo de configuraciones\n+            elif filter_item.startswith('max_configs:'):\n+                max_config_filter = filter_item[12:].strip()\n+                max_num_configurations = max_config_filter\n+\n+            # Filtrar por numero minimo de configuraciones\n+            elif filter_item.startswith('min_configs:'):\n+                min_config_filter = filter_item[12:].strip()\n+                min_num_configurations = min_config_filter\n+\n+            # Filtrar por t\u00edtulo o tag(consulta general)\n+            else:\n+                query = query.filter(\n+                    or_(\n+                        ds_meta_data_alias.title.ilike(f\"%{filter_item}%\"),\n+                        ds_meta_data_alias.tags.ilike(f\"%{filter_item}%\")\n+                    )\n                 )\n-            )\n \n         date_format = '%Y-%m-%d'\n         if start_date:"
      },
      {
        "sha": "152712416b1ba878caba6c085d0d6687b0c04abc",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 49,
        "deletions": 3,
        "changes": 52,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0336eb4a8d2ae100bd4009e68b20020e154eb9c2/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0336eb4a8d2ae100bd4009e68b20020e154eb9c2/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=0336eb4a8d2ae100bd4009e68b20020e154eb9c2",
        "patch": "@@ -47,9 +47,10 @@ <h3 class=\"h3 mb-3\">\n \n                         <div class=\"col-12\">\n                             <div class=\"mb-3\">\n-                                <label class=\"form-label\" for=\"query\">\n-                                    Search for datasets by title, description, authors, tags, UVL files...\n-                                </label>\n+                                    <label class=\"form-label\" for=\"query\">\n+                                        Search for datasets by title and tags or use advanced search querys\n+                                        <span class=\"info-icon\" data-tooltip=\"Types of queries allowed:&#10;author:&#10;min_size:&#10;max_size:&#10;tags:&#10;max_models:&#10;min_models:&#10;max_configs:&#10;min_configs:&#10;For multiple querys use ; Example: author:2;min_size:5\">i</span>\n+                                    </label>\n                                 <input class=\"form-control\" id=\"query\" name=\"query\" required=\"\" type=\"text\"\n                                        value=\"\" autofocus>\n                             </div>\n@@ -207,4 +208,49 @@ <h3 class=\"h3 mb-3\">\n \n {% block scripts %}\n     <script src=\"{{ url_for('explore.scripts') }}\"></script>\n+    \n+    <style>\n+        /* Estilo del icono dentro del texto */\n+        .info-icon {\n+            font-weight: bold;\n+            font-size: 14px; /* Tama\u00f1o de la letra m\u00e1s peque\u00f1o */\n+            color: white; /* Color de la letra dentro del c\u00edrculo */\n+            background-color: #4caf50; /* Color de fondo verde */\n+            border-radius: 50%; /* Hacer el fondo circular */\n+            width: 22px; /* Tama\u00f1o m\u00e1s peque\u00f1o del c\u00edrculo */\n+            height: 22px; /* Tama\u00f1o m\u00e1s peque\u00f1o del c\u00edrculo */\n+            display: inline-flex;\n+            align-items: center;\n+            justify-content: center;\n+            cursor: pointer;\n+            margin-left: 5px; /* Espacio entre el texto y el icono */\n+            position: relative;\n+        }\n+\n+        /* Estilo para el texto del tooltip */\n+        .info-icon::after {\n+            content: attr(data-tooltip);\n+            position: absolute;\n+            top: 25px;\n+            left: 50%;\n+            transform: translateX(-50%);\n+            padding: 10px 20px;  /* Aumenta el padding para hacerlo m\u00e1s grande */\n+            background-color: #add8e6; /* Fondo azul claro */\n+            color: #333; /* Texto oscuro */\n+            font-size: 12px;\n+            border-radius: 5px;\n+            white-space: pre-wrap; /* Usar pre-wrap para los saltos de l\u00ednea */\n+            opacity: 0;\n+            visibility: hidden;\n+            z-index: 10;\n+            transition: opacity 0.3s;\n+            width: 200px; /* Ajusta el ancho a un valor mayor */\n+        }\n+\n+        /* Mostrar el tooltip al pasar el rat\u00f3n */\n+        .info-icon:hover::after {\n+            opacity: 1;\n+            visibility: visible;\n+        }\n+    </style>\n {% endblock %}\n\\ No newline at end of file"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/101",
    "id": 2225847612,
    "node_id": "PR_kwDONB39G86Eq708",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/101",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/101.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/101.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/101",
    "number": 101,
    "state": "closed",
    "locked": false,
    "title": "feat: Add exit when deploy failed in production deployment",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-10T09:07:26Z",
    "updated_at": "2024-12-10T09:18:34Z",
    "closed_at": "2024-12-10T09:18:29Z",
    "merged_at": "2024-12-10T09:18:29Z",
    "merge_commit_sha": "d2330a58d7020b8d5fc06638fdf7f08b95e7fe19",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/101/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/101/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/101/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/9e073ad0012587d9625ef8f45390e558eb835844",
    "head": {
      "label": "TostaHub:Ahydul-patch-1",
      "ref": "Ahydul-patch-1",
      "sha": "9e073ad0012587d9625ef8f45390e558eb835844",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "1c6c7fd47856e27cf68869e2bdeac6b510d33e37",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/101"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/101"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/101"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/101/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/101/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/101/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/9e073ad0012587d9625ef8f45390e558eb835844"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "b6b0cb7138064565fc3b62da44ba6a80e32d2d96",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/9e073ad0012587d9625ef8f45390e558eb835844/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/9e073ad0012587d9625ef8f45390e558eb835844/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=9e073ad0012587d9625ef8f45390e558eb835844",
        "patch": "@@ -68,8 +68,12 @@ jobs:\n           deploy_url: ${{ secrets.SERVER_DEPLOY_HOOK_URL }}\n           token: ${{ secrets.SERVER_DEPLOY_TOKEN }}\n         run: |\n-          curl -X POST \"$deploy_url\" -H \"Authorization: ${token}\"\n-  \n+          output=$(curl -X POST \"$deploy_url\" -H \"Authorization: ${token}\")\n+          if echo \"$output\" | grep -q \"Error occurred while executing the hook's command\"; then\n+            echo \"Deployment failed due to hook error. Exiting.\"\n+            exit 1\n+          fi\n+\n       - name: Monitor Develop Deployment Status\n         if: github.ref_name == 'develop'\n         env:"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/100",
    "id": 2224995848,
    "node_id": "PR_kwDONB39G86Enr4I",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/100",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/100.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/100.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/100",
    "number": 100,
    "state": "closed",
    "locked": false,
    "title": "test: Add locust and selenium tests",
    "user": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Add locust and selenium tests for de feature of view datasets uploads by users",
    "created_at": "2024-12-09T23:35:36Z",
    "updated_at": "2024-12-10T14:58:07Z",
    "closed_at": "2024-12-10T14:58:07Z",
    "merged_at": "2024-12-10T14:58:07Z",
    "merge_commit_sha": "c9dc34da1809d20695ffc892decb50e4bf77b743",
    "assignee": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pabmatang",
        "id": 73099537,
        "node_id": "MDQ6VXNlcjczMDk5NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pabmatang",
        "html_url": "https://github.com/pabmatang",
        "followers_url": "https://api.github.com/users/pabmatang/followers",
        "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
        "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
        "organizations_url": "https://api.github.com/users/pabmatang/orgs",
        "repos_url": "https://api.github.com/users/pabmatang/repos",
        "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pabmatang/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/100/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/100/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/100/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/731d7e2a226a3abd75733df7ec5bfe34012c9c00",
    "head": {
      "label": "TostaHub:viewUserProfile",
      "ref": "viewUserProfile",
      "sha": "731d7e2a226a3abd75733df7ec5bfe34012c9c00",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "35bc8b346e0e8483d5f8610e06cc28d911b4f0af",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/100"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/100"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/100"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/100/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/100/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/100/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/731d7e2a226a3abd75733df7ec5bfe34012c9c00"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "08eb14141a916dff3311b6f24d6528af329948aa",
        "filename": "app/modules/dataset/tests/locustfile.py",
        "status": "modified",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/731d7e2a226a3abd75733df7ec5bfe34012c9c00/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/731d7e2a226a3abd75733df7ec5bfe34012c9c00/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Flocustfile.py?ref=731d7e2a226a3abd75733df7ec5bfe34012c9c00",
        "patch": "@@ -1,3 +1,4 @@\n+import random\n from locust import HttpUser, TaskSet, task\n from core.locust.common import get_csrf_token\n from core.environment.host import get_host_for_locust_testing\n@@ -6,12 +7,58 @@\n class DatasetBehavior(TaskSet):\n     def on_start(self):\n         self.dataset()\n+        self.login()\n+        self.create_dataset()\n+        self.view_user_datasets()\n \n     @task\n     def dataset(self):\n         response = self.client.get(\"/dataset/upload\")\n         get_csrf_token(response)\n \n+    def login(self):\n+        \"\"\"Simula el inicio de sesi\u00f3n del usuario.\"\"\"\n+        response = self.client.post(\n+            \"/login\",\n+            {\n+                \"username\": \"test_user\",\n+                \"password\": \"test_password\"\n+            },\n+            name=\"User Login\"\n+        )\n+        self.csrf_token = get_csrf_token(response)\n+\n+    @task\n+    def create_dataset(self):\n+        \"\"\"Simula la creaci\u00f3n de un nuevo dataset.\"\"\"\n+        dataset_payload = {\n+            \"title\": f\"Test Dataset {random.randint(1, 10000)}\",\n+            \"description\": \"This is a test dataset created during load testing.\",\n+            \"publication_type\": \"Open Access\",\n+            \"_csrf_token\": self.csrf_token\n+\n+        }\n+        with self.client.post(\n+            \"/dataset/upload\",\n+            data=dataset_payload,\n+            name=\"Create Dataset\",\n+            catch_response=True\n+        ) as response:\n+            if response.status_code != 200 or \"error\" in response.text.lower():\n+                response.failure(\"Dataset creation failed\")\n+\n+    @task\n+    def view_user_datasets(self):\n+        \"\"\"Simula la visualizaci\u00f3n de la p\u00e1gina de datasets del usuario.\"\"\"\n+        user_id = 7  # Cambiar seg\u00fan el ID del usuario deseado\n+        with self.client.get(\n+            f\"/api/v1/datasets/user/{user_id}\",\n+            name=\"View User Datasets\",\n+            catch_response=True\n+        ) as response:\n+            if response.status_code != 200 or \"No datasets found\" in response.text:\n+                response.failure(\"Failed to load datasets page\")\n+\n \n class DatasetUser(HttpUser):\n     tasks = [DatasetBehavior]"
      },
      {
        "sha": "9cc96644c93986d6391787f7925afc4d0732148d",
        "filename": "app/modules/dataset/tests/test_selenium.py",
        "status": "modified",
        "additions": 51,
        "deletions": 1,
        "changes": 52,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/731d7e2a226a3abd75733df7ec5bfe34012c9c00/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/731d7e2a226a3abd75733df7ec5bfe34012c9c00/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_selenium.py?ref=731d7e2a226a3abd75733df7ec5bfe34012c9c00",
        "patch": "@@ -4,6 +4,7 @@\n from selenium.webdriver.common.by import By\n from selenium.webdriver.common.keys import Keys\n from selenium.webdriver.support.ui import WebDriverWait\n+from selenium.webdriver.support import expected_conditions as EC\n \n from core.environment.host import get_host_for_selenium_testing\n from core.selenium.common import initialize_driver, close_driver\n@@ -123,7 +124,55 @@ def test_upload_dataset():\n         final_datasets = count_datasets(driver, host)\n         assert final_datasets == initial_datasets + 1, \"Test failed!\"\n \n-        print(\"Test passed!\")\n+        print(\"Test 1 passed!\")\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+def test_testViewUserProfileSelenium():\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the login page\n+        driver.get(f\"{host}\")\n+        wait_for_page_to_load(driver)\n+\n+        # Espera expl\u00edcita para \"Sample dataset 4\"\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 4\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Doe, Jane\"\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, Jane\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para el men\u00fa de hamburguesa\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \".hamburger\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para el elemento de la barra lateral\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.CSS_SELECTOR, \".sidebar-item:nth-child(2) .align-middle:nth-child(2)\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Sample dataset 3\"\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Sample dataset 3\"))\n+        ).click()\n+\n+        # Espera expl\u00edcita para \"Doe, John\"\n+        WebDriverWait(driver, 10).until(\n+            EC.element_to_be_clickable((By.LINK_TEXT, \"Doe, John\"))\n+        ).click()\n+\n+        print(\"Test 2 passed!\")\n \n     finally:\n \n@@ -133,3 +182,4 @@ def test_upload_dataset():\n \n # Call the test function\n test_upload_dataset()\n+test_testViewUserProfileSelenium()"
      },
      {
        "sha": "cac7aaf23f0da2a6d5dbc602ae8e89cde0e02783",
        "filename": "migrations/versions/002.py",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/731d7e2a226a3abd75733df7ec5bfe34012c9c00/migrations%2Fversions%2F002.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/731d7e2a226a3abd75733df7ec5bfe34012c9c00/migrations%2Fversions%2F002.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F002.py?ref=731d7e2a226a3abd75733df7ec5bfe34012c9c00",
        "patch": "@@ -0,0 +1,66 @@\n+\"\"\"empty message\n+\n+Revision ID: 002\n+Revises: 001\n+Create Date: 2024-12-07 12:40:06.180427\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+from sqlalchemy.engine.reflection import Inspector\n+\n+# revision identifiers, used by Alembic.\n+revision = '002'\n+down_revision = '001'\n+branch_labels = None\n+depends_on = None\n+\n+\n+def upgrade():\n+    conn = op.get_bind()\n+    inspector = Inspector.from_engine(conn)\n+    tables = inspector.get_table_names()\n+\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    # op.drop_table('ds_rating', if_exists=True)\n+    if 'ds_rating' not in tables:\n+        op.create_table('ds_rating',\n+            sa.Column('id', sa.Integer(), nullable=False),\n+            sa.Column('user_id', sa.Integer(), nullable=False),\n+            sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n+            sa.Column('rating', sa.Float(), nullable=False),\n+            sa.Column('rated_date', sa.DateTime(), nullable=False),\n+            sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+            sa.PrimaryKeyConstraint('id')\n+        )\n+    # with op.batch_alter_table('deposition', schema=None) as batch_op:\n+    # batch_op.drop_index('doi')\n+\n+    # op.drop_table('deposition')\n+    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n+        batch_op.add_column(sa.Column('rating', sa.Float(), nullable=True))\n+\n+    # ### end Alembic commands ###\n+\n+\n+def downgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n+        batch_op.drop_column('rating')\n+\n+    # op.create_table('deposition',\n+    # sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),\n+    # sa.Column('dep_metadata', mysql.LONGTEXT(charset='utf8mb4', collation='utf8mb4_bin'), nullable=False),\n+    # sa.Column('status', mysql.VARCHAR(length=50), nullable=False),\n+    # sa.Column('doi', mysql.VARCHAR(length=250), nullable=True),\n+    # sa.PrimaryKeyConstraint('id'),\n+    # mysql_collate='utf8mb4_general_ci',\n+    # mysql_default_charset='utf8mb4',\n+    # mysql_engine='InnoDB'\n+    # )\n+    # with op.batch_alter_table('deposition', schema=None) as batch_op:\n+    # batch_op.create_index('doi', ['doi'], unique=True)\n+\n+    op.drop_table('ds_rating')\n+    # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/99",
    "id": 2224357211,
    "node_id": "PR_kwDONB39G86ElP9b",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/99",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/99.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/99.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/99",
    "number": 99,
    "state": "closed",
    "locked": false,
    "title": "feat: Add new document",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-09T17:52:06Z",
    "updated_at": "2024-12-10T14:57:40Z",
    "closed_at": "2024-12-10T09:02:17Z",
    "merged_at": "2024-12-10T09:02:17Z",
    "merge_commit_sha": "1c6c7fd47856e27cf68869e2bdeac6b510d33e37",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/99/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/99/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/99/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/deac0e8aba4917bbe86656e96b65fd8da78af12f",
    "head": {
      "label": "TostaHub:Ahydul-patch-1",
      "ref": "Ahydul-patch-1",
      "sha": "deac0e8aba4917bbe86656e96b65fd8da78af12f",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "35bc8b346e0e8483d5f8610e06cc28d911b4f0af",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/99"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/99"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/99"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/99/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/99/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/99/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/deac0e8aba4917bbe86656e96b65fd8da78af12f"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "0853db8b106f43511d32756ee1231fa3b14f1ae5",
        "filename": ".github/workflows/Flujos de trabajo.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/deac0e8aba4917bbe86656e96b65fd8da78af12f/.github%2Fworkflows%2FFlujos%20de%20trabajo.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/deac0e8aba4917bbe86656e96b65fd8da78af12f/.github%2Fworkflows%2FFlujos%20de%20trabajo.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2FFlujos%20de%20trabajo.pdf?ref=deac0e8aba4917bbe86656e96b65fd8da78af12f"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/98",
    "id": 2224248092,
    "node_id": "PR_kwDONB39G86Ek1Uc",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/98",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/98.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/98.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/98",
    "number": 98,
    "state": "closed",
    "locked": false,
    "title": "Fake nodo",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-09T17:04:42Z",
    "updated_at": "2024-12-09T17:25:30Z",
    "closed_at": "2024-12-09T17:25:06Z",
    "merged_at": "2024-12-09T17:25:06Z",
    "merge_commit_sha": "35bc8b346e0e8483d5f8610e06cc28d911b4f0af",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/98/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/98/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/98/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/a8698f0ae40d350272849667e680c7633a27bc03",
    "head": {
      "label": "TostaHub:fakeNodo",
      "ref": "fakeNodo",
      "sha": "a8698f0ae40d350272849667e680c7633a27bc03",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "bed3fc2671f14862aca141271881713321d5448f",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/98"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/98"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/98"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/98/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/98/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/98/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/a8698f0ae40d350272849667e680c7633a27bc03"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "57c20159d20707de998f985904b5d5391fceb8c6",
        "filename": ".moduleignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/.moduleignore",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/.moduleignore",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.moduleignore?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -1 +1 @@\n-webhook\n\\ No newline at end of file\n+webhook"
      },
      {
        "sha": "c846ebf6ff610f6d3cb977f2e560270723db5aee",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 221,
        "deletions": 216,
        "changes": 437,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -1,239 +1,244 @@\n var currentId = 0;\n-        var amount_authors = 0;\n-\n-        function show_upload_dataset() {\n-            document.getElementById(\"upload_dataset\").style.display = \"block\";\n-        }\n-\n-        function generateIncrementalId() {\n-            return currentId++;\n-        }\n-\n-        function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n-            let fieldWrapper = document.createElement('div');\n-            fieldWrapper.className = className;\n-\n-            let label = document.createElement('label');\n-            label.className = 'form-label';\n-            label.for = name;\n-            label.textContent = text;\n-\n-            let field = document.createElement('input');\n-            field.name = name;\n-            field.className = 'form-control';\n-\n-            fieldWrapper.appendChild(label);\n-            fieldWrapper.appendChild(field);\n-            newAuthor.appendChild(fieldWrapper);\n-        }\n-\n-        function addRemoveButton(newAuthor) {\n-            let buttonWrapper = document.createElement('div');\n-            buttonWrapper.className = 'col-12 mb-2';\n-\n-            let button = document.createElement('button');\n-            button.textContent = 'Remove author';\n-            button.className = 'btn btn-danger btn-sm';\n-            button.type = 'button';\n-            button.addEventListener('click', function (event) {\n-                event.preventDefault();\n-                newAuthor.remove();\n+var amount_authors = 0;\n+/* global use_fakenodo */\n+\n+function show_upload_dataset() {\n+    document.getElementById(\"upload_dataset\").style.display = \"block\";\n+}\n+\n+function generateIncrementalId() {\n+    return currentId++;\n+}\n+\n+function addField(newAuthor, name, text, className = 'col-lg-6 col-12 mb-3') {\n+    let fieldWrapper = document.createElement('div');\n+    fieldWrapper.className = className;\n+\n+    let label = document.createElement('label');\n+    label.className = 'form-label';\n+    label.for = name;\n+    label.textContent = text;\n+\n+    let field = document.createElement('input');\n+    field.name = name;\n+    field.className = 'form-control';\n+\n+    fieldWrapper.appendChild(label);\n+    fieldWrapper.appendChild(field);\n+    newAuthor.appendChild(fieldWrapper);\n+}\n+\n+function addRemoveButton(newAuthor) {\n+    let buttonWrapper = document.createElement('div');\n+    buttonWrapper.className = 'col-12 mb-2';\n+\n+    let button = document.createElement('button');\n+    button.textContent = 'Remove author';\n+    button.className = 'btn btn-danger btn-sm';\n+    button.type = 'button';\n+    button.addEventListener('click', function (event) {\n+        event.preventDefault();\n+        newAuthor.remove();\n+    });\n+\n+    buttonWrapper.appendChild(button);\n+    newAuthor.appendChild(buttonWrapper);\n+}\n+\n+function createAuthorBlock(idx, suffix) {\n+    let newAuthor = document.createElement('div');\n+    newAuthor.className = 'author row';\n+    newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n+\n+    addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n+    addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n+    addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n+    addRemoveButton(newAuthor);\n+\n+    return newAuthor;\n+}\n+\n+function check_title_and_description() {\n+    let titleInput = document.querySelector('input[name=\"title\"]');\n+    let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n+\n+    titleInput.classList.remove(\"error\");\n+    descriptionTextarea.classList.remove(\"error\");\n+    clean_upload_errors();\n+\n+    let titleLength = titleInput.value.trim().length;\n+    let descriptionLength = descriptionTextarea.value.trim().length;\n+\n+    if (titleLength < 3) {\n+        write_upload_error(\"title must be of minimum length 3\");\n+        titleInput.classList.add(\"error\");\n+    }\n+\n+    if (descriptionLength < 3) {\n+        write_upload_error(\"description must be of minimum length 3\");\n+        descriptionTextarea.classList.add(\"error\");\n+    }\n+\n+    return (titleLength >= 3 && descriptionLength >= 3);\n+}\n+\n+\n+document.getElementById('add_author').addEventListener('click', function () {\n+    let authors = document.getElementById('authors');\n+    let newAuthor = createAuthorBlock(amount_authors++, \"\");\n+    authors.appendChild(newAuthor);\n+});\n+\n+\n+document.addEventListener('click', function (event) {\n+    if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n+\n+        let authorsButtonId = event.target.id;\n+        let authorsId = authorsButtonId.replace(\"_button\", \"\");\n+        let authors = document.getElementById(authorsId);\n+        let id = authorsId.replace(\"_form_authors\", \"\")\n+        let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n+        authors.appendChild(newAuthor);\n+\n+    }\n+});\n+\n+function show_loading() {\n+    document.getElementById(\"upload_button\").style.display = \"none\";\n+    document.getElementById(\"loading\").style.display = \"block\";\n+}\n+\n+function hide_loading() {\n+    document.getElementById(\"upload_button\").style.display = \"block\";\n+    document.getElementById(\"loading\").style.display = \"none\";\n+}\n+\n+function clean_upload_errors() {\n+    let upload_error = document.getElementById(\"upload_error\");\n+    upload_error.innerHTML = \"\";\n+    upload_error.style.display = 'none';\n+}\n+\n+function write_upload_error(error_message) {\n+    let upload_error = document.getElementById(\"upload_error\");\n+    let alert = document.createElement('p');\n+    alert.style.margin = '0';\n+    alert.style.padding = '0';\n+    alert.textContent = 'Upload error: ' + error_message;\n+    upload_error.appendChild(alert);\n+    upload_error.style.display = 'block';\n+}\n+\n+window.onload = function () {\n+\n+    if (use_fakenodo) {\n+        document.getElementById(\"use_fakenodo\").style.display = \"block\";\n+    } else {\n+        test_zenodo_connection();\n+    }\n+\n+    document.getElementById('upload_button').addEventListener('click', function () {\n+\n+        clean_upload_errors();\n+        show_loading();\n+\n+        // check title and description\n+        let check = check_title_and_description();\n+\n+        if (check) {\n+            // process data form\n+            const formData = {};\n+\n+            [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n+                const form = document.getElementById(formId);\n+                const inputs = form.querySelectorAll('input, select, textarea');\n+                inputs.forEach(input => {\n+                    if (input.name) {\n+                        formData[input.name] = formData[input.name] || [];\n+                        formData[input.name].push(input.value);\n+                    }\n+                });\n             });\n \n-            buttonWrapper.appendChild(button);\n-            newAuthor.appendChild(buttonWrapper);\n-        }\n-\n-        function createAuthorBlock(idx, suffix) {\n-            let newAuthor = document.createElement('div');\n-            newAuthor.className = 'author row';\n-            newAuthor.style.cssText = \"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\";\n-\n-            addField(newAuthor, `${suffix}authors-${idx}-name`, 'Name *');\n-            addField(newAuthor, `${suffix}authors-${idx}-affiliation`, 'Affiliation');\n-            addField(newAuthor, `${suffix}authors-${idx}-orcid`, 'ORCID');\n-            addRemoveButton(newAuthor);\n-\n-            return newAuthor;\n-        }\n-\n-        function check_title_and_description() {\n-            let titleInput = document.querySelector('input[name=\"title\"]');\n-            let descriptionTextarea = document.querySelector('textarea[name=\"desc\"]');\n-\n-            titleInput.classList.remove(\"error\");\n-            descriptionTextarea.classList.remove(\"error\");\n-            clean_upload_errors();\n+            let formDataJson = JSON.stringify(formData);\n+            console.log(formDataJson);\n \n-            let titleLength = titleInput.value.trim().length;\n-            let descriptionLength = descriptionTextarea.value.trim().length;\n-\n-            if (titleLength < 3) {\n-                write_upload_error(\"title must be of minimum length 3\");\n-                titleInput.classList.add(\"error\");\n-            }\n+            const csrfToken = document.getElementById('csrf_token').value;\n+            const formUploadData = new FormData();\n+            formUploadData.append('csrf_token', csrfToken);\n \n-            if (descriptionLength < 3) {\n-                write_upload_error(\"description must be of minimum length 3\");\n-                descriptionTextarea.classList.add(\"error\");\n+            for (let key in formData) {\n+                if (formData.hasOwnProperty(key)) {\n+                    formUploadData.set(key, formData[key]);\n+                }\n             }\n \n-            return (titleLength >= 3 && descriptionLength >= 3);\n-        }\n-\n-\n-        document.getElementById('add_author').addEventListener('click', function () {\n-            let authors = document.getElementById('authors');\n-            let newAuthor = createAuthorBlock(amount_authors++, \"\");\n-            authors.appendChild(newAuthor);\n-        });\n-\n-\n-        document.addEventListener('click', function (event) {\n-            if (event.target && event.target.classList.contains('add_author_to_uvl')) {\n-\n-                let authorsButtonId = event.target.id;\n-                let authorsId = authorsButtonId.replace(\"_button\", \"\");\n-                let authors = document.getElementById(authorsId);\n-                let id = authorsId.replace(\"_form_authors\", \"\")\n-                let newAuthor = createAuthorBlock(amount_authors, `feature_models-${id}-`);\n-                authors.appendChild(newAuthor);\n-\n+            let checked_orcid = true;\n+            if (Array.isArray(formData.author_orcid)) {\n+                for (let orcid of formData.author_orcid) {\n+                    orcid = orcid.trim();\n+                    if (orcid !== '' && !isValidOrcid(orcid)) {\n+                        hide_loading();\n+                        write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n+                        checked_orcid = false;\n+                        break;\n+                    }\n+                }\n             }\n-        });\n-\n-        function show_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"none\";\n-            document.getElementById(\"loading\").style.display = \"block\";\n-        }\n \n-        function hide_loading() {\n-            document.getElementById(\"upload_button\").style.display = \"block\";\n-            document.getElementById(\"loading\").style.display = \"none\";\n-        }\n-\n-        function clean_upload_errors() {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            upload_error.innerHTML = \"\";\n-            upload_error.style.display = 'none';\n-        }\n-\n-        function write_upload_error(error_message) {\n-            let upload_error = document.getElementById(\"upload_error\");\n-            let alert = document.createElement('p');\n-            alert.style.margin = '0';\n-            alert.style.padding = '0';\n-            alert.textContent = 'Upload error: ' + error_message;\n-            upload_error.appendChild(alert);\n-            upload_error.style.display = 'block';\n-        }\n-\n-        window.onload = function () {\n-\n-            test_zenodo_connection();\n-\n-            document.getElementById('upload_button').addEventListener('click', function () {\n-\n-                clean_upload_errors();\n-                show_loading();\n-\n-                // check title and description\n-                let check = check_title_and_description();\n-\n-                if (check) {\n-                    // process data form\n-                    const formData = {};\n-\n-                    [\"basic_info_form\", \"uploaded_models_form\"].forEach((formId) => {\n-                        const form = document.getElementById(formId);\n-                        const inputs = form.querySelectorAll('input, select, textarea');\n-                        inputs.forEach(input => {\n-                            if (input.name) {\n-                                formData[input.name] = formData[input.name] || [];\n-                                formData[input.name].push(input.value);\n-                            }\n-                        });\n-                    });\n-\n-                    let formDataJson = JSON.stringify(formData);\n-                    console.log(formDataJson);\n-\n-                    const csrfToken = document.getElementById('csrf_token').value;\n-                    const formUploadData = new FormData();\n-                    formUploadData.append('csrf_token', csrfToken);\n-\n-                    for (let key in formData) {\n-                        if (formData.hasOwnProperty(key)) {\n-                            formUploadData.set(key, formData[key]);\n-                        }\n-                    }\n \n-                    let checked_orcid = true;\n-                    if (Array.isArray(formData.author_orcid)) {\n-                        for (let orcid of formData.author_orcid) {\n-                            orcid = orcid.trim();\n-                            if (orcid !== '' && !isValidOrcid(orcid)) {\n-                                hide_loading();\n-                                write_upload_error(\"ORCID value does not conform to valid format: \" + orcid);\n-                                checked_orcid = false;\n-                                break;\n-                            }\n-                        }\n+            let checked_name = true;\n+            if (Array.isArray(formData.author_name)) {\n+                for (let name of formData.author_name) {\n+                    name = name.trim();\n+                    if (name === '') {\n+                        hide_loading();\n+                        write_upload_error(\"The author's name cannot be empty\");\n+                        checked_name = false;\n+                        break;\n                     }\n+                }\n+            }\n \n \n-                    let checked_name = true;\n-                    if (Array.isArray(formData.author_name)) {\n-                        for (let name of formData.author_name) {\n-                            name = name.trim();\n-                            if (name === '') {\n+            if (checked_orcid && checked_name) {\n+                fetch('/dataset/upload', {\n+                    method: 'POST',\n+                    body: formUploadData\n+                })\n+                    .then(response => {\n+                        if (response.ok) {\n+                            console.log('Dataset sent successfully');\n+                            response.json().then(data => {\n+                                console.log(data.message);\n+                                window.location.href = \"/dataset/list\";\n+                            });\n+                        } else {\n+                            response.json().then(data => {\n+                                console.error('Error: ' + data.message);\n                                 hide_loading();\n-                                write_upload_error(\"The author's name cannot be empty\");\n-                                checked_name = false;\n-                                break;\n-                            }\n-                        }\n-                    }\n \n+                                write_upload_error(data.message);\n \n-                    if (checked_orcid && checked_name) {\n-                        fetch('/dataset/upload', {\n-                            method: 'POST',\n-                            body: formUploadData\n-                        })\n-                            .then(response => {\n-                                if (response.ok) {\n-                                    console.log('Dataset sent successfully');\n-                                    response.json().then(data => {\n-                                        console.log(data.message);\n-                                        window.location.href = \"/dataset/list\";\n-                                    });\n-                                } else {\n-                                    response.json().then(data => {\n-                                        console.error('Error: ' + data.message);\n-                                        hide_loading();\n-\n-                                        write_upload_error(data.message);\n-\n-                                    });\n-                                }\n-                            })\n-                            .catch(error => {\n-                                console.error('Error in POST request:', error);\n                             });\n-                    }\n+                        }\n+                    })\n+                    .catch(error => {\n+                        console.error('Error in POST request:', error);\n+                    });\n+            }\n \n \n-                } else {\n-                    hide_loading();\n-                }\n+        } else {\n+            hide_loading();\n+        }\n \n \n-            });\n-        };\n+    });\n+};\n \n \n-        function isValidOrcid(orcid) {\n-            let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n-            return orcidRegex.test(orcid);\n-        }\n\\ No newline at end of file\n+function isValidOrcid(orcid) {\n+    let orcidRegex = /^\\d{4}-\\d{4}-\\d{4}-\\d{4}$/;\n+    return orcidRegex.test(orcid);\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "0858bb3c576eb9e662d6d3532ea78c062dfa4879",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 28,
        "deletions": 38,
        "changes": 66,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -1,39 +1,21 @@\n+import json\n import logging\n import os\n-import json\n import shutil\n import tempfile\n import uuid\n import io\n import zipfile\n-from flask import send_file\n from datetime import datetime, timezone\n from zipfile import ZipFile\n-from app.modules.dataset.forms import EditDatasetForm\n-from flask import abort\n-from flask_login import current_user\n-from werkzeug.exceptions import NotFound\n-from app.modules.hubfile.services import HubfileService\n-from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter, UVLWriter\n-from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n-from flask import (\n-    flash,\n-    redirect,\n-    render_template,\n-    request,\n-    jsonify,\n-    send_from_directory,\n-    make_response,\n-    url_for\n-)\n-from flask_login import login_required\n \n-from app.modules.dataset.forms import DataSetForm\n-from app.modules.dataset.models import (\n-    DSDownloadRecord,\n-    PublicationType\n-)\n+\n+from flask import (abort, jsonify, make_response, render_template, send_file,\n+                   request, send_from_directory, url_for, flash, redirect)\n+from flask_login import current_user, login_required\n from app.modules.dataset import dataset_bp\n+from app.modules.dataset.forms import DataSetForm\n+from app.modules.dataset.models import DSDownloadRecord, PublicationType\n from app.modules.dataset.services import (\n     AuthorService,\n     DSDownloadRecordService,\n@@ -43,15 +25,22 @@\n     DOIMappingService,\n     DSRatingService\n )\n+from app.modules.fakenodo.services import FakenodoService\n+from app.modules.dataset.forms import EditDatasetForm\n+from werkzeug.exceptions import NotFound\n+from app.modules.hubfile.services import HubfileService\n+from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter, UVLWriter\n+from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n from app.modules.zenodo.services import ZenodoService\n+from core.configuration.configuration import USE_FAKENODE\n \n logger = logging.getLogger(__name__)\n \n \n dataset_service = DataSetService()\n author_service = AuthorService()\n dsmetadata_service = DSMetaDataService()\n-zenodo_service = ZenodoService()\n+nodo_service = FakenodoService() if USE_FAKENODE else ZenodoService()\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n ds_rating_service = DSRatingService()\n@@ -77,36 +66,37 @@ def create_dataset():\n             logger.exception(f\"Exception while create dataset data in local {exc}\")\n             return jsonify({\"Exception while create dataset data in local: \": str(exc)}), 400\n \n-        # send dataset as deposition to Zenodo\n+        # send dataset as deposition to Zenodo/Fakenodo\n         data = {}\n+        nodo = \"Fakenodo\" if USE_FAKENODE else \"Zenodo\"\n         try:\n-            zenodo_response_json = zenodo_service.create_new_deposition(dataset)\n-            response_data = json.dumps(zenodo_response_json)\n+            nodo_response_json = nodo_service.create_new_deposition(dataset)\n+            response_data = json.dumps(nodo_response_json)\n             data = json.loads(response_data)\n         except Exception as exc:\n             data = {}\n-            zenodo_response_json = {}\n-            logger.exception(f\"Exception while create dataset data in Zenodo {exc}\")\n+            nodo_response_json = {}\n+            logger.exception(f\"Exception while create dataset data in {nodo} {exc}\")\n \n         if data.get(\"conceptrecid\"):\n             deposition_id = data.get(\"id\")\n \n-            # update dataset with deposition id in Zenodo\n+            # update dataset with deposition id in Zenodo/Fakenodo\n             dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n \n             try:\n-                # iterate for each feature model (one feature model = one request to Zenodo)\n+                # iterate for each feature model (one feature model = one request to Zenodo/Fakenodo)\n                 for feature_model in dataset.feature_models:\n-                    zenodo_service.upload_file(dataset, deposition_id, feature_model)\n+                    nodo_service.upload_file(dataset, deposition_id, feature_model)\n \n                 # publish deposition\n-                zenodo_service.publish_deposition(deposition_id)\n+                nodo_service.publish_deposition(deposition_id)\n \n                 # update DOI\n-                deposition_doi = zenodo_service.get_doi(deposition_id)\n+                deposition_doi = nodo_service.get_doi(deposition_id)\n                 dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n             except Exception as e:\n-                msg = f\"it has not been possible upload feature models in Zenodo and update the DOI: {e}\"\n+                msg = f\"it has not been possible upload feature models in {nodo} and update the DOI: {e}\"\n                 return jsonify({\"message\": msg}), 200\n \n         # Delete temp folder\n@@ -117,7 +107,7 @@ def create_dataset():\n         msg = \"Everything works!\"\n         return jsonify({\"message\": msg}), 200\n \n-    return render_template(\"dataset/upload_dataset.html\", form=form)\n+    return render_template(\"dataset/upload_dataset.html\", form=form, use_fakenodo=USE_FAKENODE)\n \n \n @dataset_bp.route(\"/dataset/list\", methods=[\"GET\", \"POST\"])"
      },
      {
        "sha": "0579aaf67c7fedeb258b116ece8b8ad1d45aa933",
        "filename": "app/modules/dataset/templates/dataset/upload_dataset.html",
        "status": "modified",
        "additions": 341,
        "deletions": 346,
        "changes": 687,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -4,355 +4,350 @@\n \n {% block content %}\n \n-    <h1 class=\"h2 mb-3\"><b>Upload</b> dataset</h1>\n-\n-    <div class=\"row\">\n-        <div class=\"col-12 mb-3\">\n-            <div class=\"alert alert-warning\" role=\"alert\" id=\"test_zenodo_connection_error\" style=\"display: none\">\n-                <div class=\"alert-message\">\n-\n-                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n-                        connection to the Zenodo API</h4>\n-                    <p class=\"p-0 m-0\">\n-                        There seems to be some kind of problem with the Zenodo API and synchronization of your dataset\n-                        files may not be possible. We will save your files locally to eventually synchronize them with\n-                        Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n-                        anything about it.\n-                    </p>\n-                </div>\n+<h1 class=\"h2 mb-3\"><b>Upload</b> dataset</h1>\n+\n+<div class=\"row\">\n+    <div class=\"col-12 mb-3\">\n+        <div class=\"alert alert-warning\" role=\"alert\" id=\"use_fakenodo\" style=\"display: none\">\n+            <div class=\"alert-message\">\n+\n+                <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i>\n+                    Fakenodo Module is active</h4>\n+                <p class=\"p-0 m-0\">\n+                    The uploaded files will not be stored in Zenodo, but in the local server.\n+                </p>\n             </div>\n         </div>\n-\n     </div>\n+</div>\n \n-    {% if messages %}\n-        <ul>\n-            {% for message in messages %}\n-                <li>{{ message }}</li>\n-            {% endfor %}\n-        </ul>\n-    {% endif %}\n+{% if messages %}\n+<ul>\n+    {% for message in messages %}\n+    <li>{{ message }}</li>\n+    {% endfor %}\n+</ul>\n+{% endif %}\n \n-    <div class=\"row\">\n+<div class=\"row\">\n \n-        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n-            <div id=\"basic_info_form\">\n+    <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+        <div id=\"basic_info_form\">\n \n-                {{ form.hidden_tag() }}\n+            {{ form.hidden_tag() }}\n \n-                <div class=\"row\">\n+            <div class=\"row\">\n \n-                    <div class=\"col-12\">\n+                <div class=\"col-12\">\n \n-                        <h1 class=\"h3 mb-3\">Basic info</h1>\n+                    <h1 class=\"h3 mb-3\">Basic info</h1>\n \n-                        <div class=\"row\" style=\"padding-left: 2rem\">\n+                    <div class=\"row\" style=\"padding-left: 2rem\">\n \n-                            <div class=\"col-lg-6 col-xs-12 col-md-12\">\n-                                <div class=\"mb-3\">\n-                                    {{ form.title.label(class=\"form-label\") }} *\n-                                    {{ form.title(class=\"form-control\") }}\n-                                    {% for error in form.title.errors %}\n-                                        <span style=\"color: red;\">{{ error }}</span>\n-                                    {% endfor %}\n-                                </div>\n+                        <div class=\"col-lg-6 col-xs-12 col-md-12\">\n+                            <div class=\"mb-3\">\n+                                {{ form.title.label(class=\"form-label\") }} *\n+                                {{ form.title(class=\"form-control\") }}\n+                                {% for error in form.title.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                                {% endfor %}\n                             </div>\n+                        </div>\n \n-                            <div class=\"col-12\">\n-                                <div class=\"mb-3\">\n-                                    {{ form.desc.label(class=\"form-label\") }} *\n-                                    {{ form.desc(rows=4, class=\"form-control\") }}\n-                                    {% for error in form.desc.errors %}\n-                                        <span style=\"color: red;\">{{ error }}</span>\n-                                    {% endfor %}\n-                                </div>\n+                        <div class=\"col-12\">\n+                            <div class=\"mb-3\">\n+                                {{ form.desc.label(class=\"form-label\") }} *\n+                                {{ form.desc(rows=4, class=\"form-control\") }}\n+                                {% for error in form.desc.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                                {% endfor %}\n                             </div>\n+                        </div>\n \n-                            <div class=\"col-lg-6 col-6\">\n-                                <div class=\"mb-3\">\n-                                    {{ form.publication_type.label(class=\"form-label\") }}\n-                                    {{ form.publication_type(class=\"form-control\") }}\n-                                </div>\n-\n+                        <div class=\"col-lg-6 col-6\">\n+                            <div class=\"mb-3\">\n+                                {{ form.publication_type.label(class=\"form-label\") }}\n+                                {{ form.publication_type(class=\"form-control\") }}\n                             </div>\n \n-                            <div class=\"col-lg-6 col-6\">\n-                                <div class=\"mb-3\">\n-                                    {{ form.publication_doi.label(class=\"form-label\") }}\n-                                    {{ form.publication_doi(class=\"form-control\") }}\n-                                    {% for error in form.publication_doi.errors %}\n-                                        <span style=\"color: red;\">{{ error }}</span>\n-                                    {% endfor %}\n-                                </div>\n-                            </div>\n+                        </div>\n \n-                            <div class=\"col-6\">\n-                                <div class=\"mb-3\">\n-                                    {{ form.tags.label(class=\"form-label\") }}\n-                                    {{ form.tags(class=\"form-control\") }}\n-                                    {% for error in form.tags.errors %}\n-                                        <span style=\"color: red;\">{{ error }}</span>\n-                                    {% endfor %}\n-                                </div>\n+                        <div class=\"col-lg-6 col-6\">\n+                            <div class=\"mb-3\">\n+                                {{ form.publication_doi.label(class=\"form-label\") }}\n+                                {{ form.publication_doi(class=\"form-control\") }}\n+                                {% for error in form.publication_doi.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                                {% endfor %}\n                             </div>\n+                        </div>\n \n+                        <div class=\"col-6\">\n+                            <div class=\"mb-3\">\n+                                {{ form.tags.label(class=\"form-label\") }}\n+                                {{ form.tags(class=\"form-control\") }}\n+                                {% for error in form.tags.errors %}\n+                                <span style=\"color: red;\">{{ error }}</span>\n+                                {% endfor %}\n+                            </div>\n                         </div>\n \n-                        <h1 class=\"h3 mb-3 mt-4\">\n-                          Authors\n-                          <a href=\"#\" data-toggle=\"modal\" data-target=\"#infoModal\">\n-                            <i data-feather=\"info\"></i> <!-- Usamos \"info\" porque Feather no tiene un \u00edcono espec\u00edfico llamado \"feather\" para m\u00e1s info -->\n-                          </a>\n-                        </h1>\n+                    </div>\n \n-                        <!-- Modal -->\n-                        <div class=\"modal fade\" id=\"infoModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"infoModalLabel\" aria-hidden=\"true\" style=\"display: none\">\n-                          <div class=\"modal-dialog\" role=\"document\">\n+                    <h1 class=\"h3 mb-3 mt-4\">\n+                        Authors\n+                        <a href=\"#\" data-toggle=\"modal\" data-target=\"#infoModal\">\n+                            <i data-feather=\"info\"></i>\n+                            <!-- Usamos \"info\" porque Feather no tiene un \u00edcono espec\u00edfico llamado \"feather\" para m\u00e1s info -->\n+                        </a>\n+                    </h1>\n+\n+                    <!-- Modal -->\n+                    <div class=\"modal fade\" id=\"infoModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"infoModalLabel\"\n+                        aria-hidden=\"true\" style=\"display: none\">\n+                        <div class=\"modal-dialog\" role=\"document\">\n                             <div class=\"modal-content\">\n-                              <div class=\"modal-header\">\n-                                <h5 class=\"modal-title\" id=\"infoModalLabel\">Informaci\u00f3n Importante</h5>\n-                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n-                                  <span aria-hidden=\"true\">&times;</span>\n-                                </button>\n-                              </div>\n-                              <div class=\"modal-body\">\n-                                \u00a1Cuidado! Los autores no se pueden editar una vez que el dataset se haya subido a UVLHub. Esta funcionalidad estar\u00e1 disponible para futuras versiones.\n-                              </div>\n-                              <div class=\"modal-footer\">\n-                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\n-                              </div>\n+                                <div class=\"modal-header\">\n+                                    <h5 class=\"modal-title\" id=\"infoModalLabel\">Informaci\u00f3n Importante</h5>\n+                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n+                                        <span aria-hidden=\"true\">&times;</span>\n+                                    </button>\n+                                </div>\n+                                <div class=\"modal-body\">\n+                                    \u00a1Cuidado! Los autores no se pueden editar una vez que el dataset se haya subido a\n+                                    UVLHub. Esta funcionalidad estar\u00e1 disponible para futuras versiones.\n+                                </div>\n+                                <div class=\"modal-footer\">\n+                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\n+                                </div>\n                             </div>\n-                          </div>\n                         </div>\n+                    </div>\n \n-                        <div class=\"row\" style=\"padding-left: 2rem\">\n+                    <div class=\"row\" style=\"padding-left: 2rem\">\n \n-                            <div class=\"col-lg-6 col-12 mb-3\">\n-                                <label class=\"form-label\">Author name</label>\n-                                <input class=\"form-control\"\n-                                       disabled\n-                                       value=\"{{ current_user.profile.surname }}, {{ current_user.profile.name }}\">\n-                            </div>\n+                        <div class=\"col-lg-6 col-12 mb-3\">\n+                            <label class=\"form-label\">Author name</label>\n+                            <input class=\"form-control\" disabled\n+                                value=\"{{ current_user.profile.surname }}, {{ current_user.profile.name }}\">\n+                        </div>\n \n-                            <div class=\"col-lg-6 col-12 mb-3\">\n-                                <label class=\"form-label\">Author affiliation</label>\n-                                <input class=\"form-control\"\n-                                       disabled value=\"{{ current_user.profile.affiliation }}\">\n-                            </div>\n+                        <div class=\"col-lg-6 col-12 mb-3\">\n+                            <label class=\"form-label\">Author affiliation</label>\n+                            <input class=\"form-control\" disabled value=\"{{ current_user.profile.affiliation }}\">\n+                        </div>\n \n-                            <div class=\"col-lg-6 col-12 mb-3\">\n-                                <label class=\"form-label\">Author ORCID</label>\n-                                <input class=\"form-control\"\n-                                       disabled value=\"{{ current_user.profile.orcid }}\">\n-                            </div>\n+                        <div class=\"col-lg-6 col-12 mb-3\">\n+                            <label class=\"form-label\">Author ORCID</label>\n+                            <input class=\"form-control\" disabled value=\"{{ current_user.profile.orcid }}\">\n+                        </div>\n \n-                            <div class=\"col-12\">\n-\n-                                <div class=\"mb-3\">\n-\n-                                    <div id=\"authors\">\n-                                        {% for subform in form.authors %}\n-                                        <div class=\"row author\" {% if not loop.first %}\n-                                            style=\"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\"\n-                                            {% endif %}\n-                                        >\n-                                            <div class=\"col-lg-6 col-12 mb-3\">\n-                                                {{ subform.form.name.label(class=\"form-label\") }}\n-                                                {{ subform.form.name(class=\"form-control\", disabled=loop.first) }}\n-                                                {% for error in subform.name.errors %}\n-                                                    <span style=\"color: red;\">{{ error }}</span>\n-                                                {% endfor %}\n-                                            </div>\n+                        <div class=\"col-12\">\n+\n+                            <div class=\"mb-3\">\n+\n+                                <div id=\"authors\">\n+                                    {% for subform in form.authors %}\n+                                    <div class=\"row author\" {% if not loop.first %}\n+                                        style=\"border:2px dotted #ccc;border-radius:10px;padding:10px;margin:10px 0; background-color: white\"\n+                                        {% endif %}>\n+                                        <div class=\"col-lg-6 col-12 mb-3\">\n+                                            {{ subform.form.name.label(class=\"form-label\") }}\n+                                            {{ subform.form.name(class=\"form-control\", disabled=loop.first) }}\n+                                            {% for error in subform.name.errors %}\n+                                            <span style=\"color: red;\">{{ error }}</span>\n+                                            {% endfor %}\n+                                        </div>\n \n-                                            <div class=\"col-lg-6 col-12 mb-3\">\n-                                                {{ subform.form.affiliation.label(class=\"form-label\") }}\n-                                                {{ subform.form.affiliation(class=\"form-control\", disabled=loop.first) }}\n-                                                {% for error in subform.name.errors %}\n-                                                    <span style=\"color: red;\">{{ error }}</span>\n-                                                {% endfor %}\n-                                            </div>\n+                                        <div class=\"col-lg-6 col-12 mb-3\">\n+                                            {{ subform.form.affiliation.label(class=\"form-label\") }}\n+                                            {{ subform.form.affiliation(class=\"form-control\", disabled=loop.first) }}\n+                                            {% for error in subform.name.errors %}\n+                                            <span style=\"color: red;\">{{ error }}</span>\n+                                            {% endfor %}\n+                                        </div>\n \n-                                            <div class=\"col-lg-6 col-12 mb-3\">\n-                                                {{ subform.orcid.label(class=\"form-label\") }}\n-                                                {{ subform.orcid(class=\"form-control\", disabled=loop.first) }}\n-                                                {% for error in subform.orcid.errors %}\n-                                                    <span style=\"color: red;\">{{ error }}</span>\n-                                                {% endfor %}\n-                                            </div>\n+                                        <div class=\"col-lg-6 col-12 mb-3\">\n+                                            {{ subform.orcid.label(class=\"form-label\") }}\n+                                            {{ subform.orcid(class=\"form-control\", disabled=loop.first) }}\n+                                            {% for error in subform.orcid.errors %}\n+                                            <span style=\"color: red;\">{{ error }}</span>\n+                                            {% endfor %}\n                                         </div>\n-                                        {% endfor %}\n                                     </div>\n-                                    <button type=\"button\" class=\"btn btn-secondary\" id=\"add_author\">Add author\n-                                    </button>\n-\n+                                    {% endfor %}\n                                 </div>\n+                                <button type=\"button\" class=\"btn btn-secondary\" id=\"add_author\">Add author\n+                                </button>\n \n                             </div>\n \n-\n                         </div>\n \n+\n                     </div>\n \n                 </div>\n \n-                <div class=\"row\">\n-\n-                    {% if error %}\n+            </div>\n \n-                        <div class=\"mt-3 col-lg-6 col-12\">\n-                            <span style=\"color: red;\">{{ error }}</span>\n-                        </div>\n+            <div class=\"row\">\n \n-                    {% endif %}\n+                {% if error %}\n \n+                <div class=\"mt-3 col-lg-6 col-12\">\n+                    <span style=\"color: red;\">{{ error }}</span>\n                 </div>\n \n+                {% endif %}\n \n             </div>\n+\n+\n         </div>\n+    </div>\n \n-        <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n+    <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12\">\n \n-            <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n+        <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n \n-            <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n+        <div id=\"uploaded_models_form\" style=\"padding-left: 2rem\">\n \n-                <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n-                    <div id=\"dropzone-text\"></div>\n-                </form>\n+            <form action=\"{{ url_for('dataset.upload') }}\" class=\"dropzone\" id=\"myDropzone\">\n+                <div id=\"dropzone-text\"></div>\n+            </form>\n \n-                <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n-                    </span>\n+            <span class=\"text-danger\" id=\"alerts\" style=\"display: none\">\n+            </span>\n \n-                <ul class=\"mt-2\" id=\"file-list\"></ul>\n+            <ul class=\"mt-2\" id=\"file-list\"></ul>\n \n-                <script>\n-                    let dropzone = Dropzone.options.myDropzone = {\n-                        url: \"/dataset/file/upload\",\n-                        paramName: 'file',\n-                        maxFilesize: 10,\n-                        acceptedFiles: '.uvl',\n-                        init: function () {\n+            <script>\n+                let dropzone = Dropzone.options.myDropzone = {\n+                    url: \"/dataset/file/upload\",\n+                    paramName: 'file',\n+                    maxFilesize: 10,\n+                    acceptedFiles: '.uvl',\n+                    init: function () {\n \n-                            let fileList = document.getElementById('file-list');\n-                            let dropzoneText = document.getElementById('dropzone-text');\n-                            let alerts = document.getElementById('alerts');\n+                        let fileList = document.getElementById('file-list');\n+                        let dropzoneText = document.getElementById('dropzone-text');\n+                        let alerts = document.getElementById('alerts');\n \n-                            this.on('addedfile', function (file) {\n+                        this.on('addedfile', function (file) {\n \n-                                let ext = file.name.split('.').pop();\n-                                if (ext !== 'uvl') {\n-                                    this.removeFile(file);\n+                            let ext = file.name.split('.').pop();\n+                            if (ext !== 'uvl') {\n+                                this.removeFile(file);\n \n-                                    let alert = document.createElement('p');\n-                                    alert.textContent = 'Invalid file extension: ' + file.name;\n-                                    alerts.appendChild(alert);\n-                                    alerts.style.display = 'block';\n+                                let alert = document.createElement('p');\n+                                alert.textContent = 'Invalid file extension: ' + file.name;\n+                                alerts.appendChild(alert);\n+                                alerts.style.display = 'block';\n+                            }\n+\n+                        });\n+\n+                        this.on('success', function (file, response) {\n+\n+                            let dropzone = this;\n+\n+                            show_upload_dataset();\n+\n+                            console.log(\"File uploaded: \", response);\n+                            // actions when UVL model is uploaded\n+                            let listItem = document.createElement('li');\n+                            let h4Element = document.createElement('h4');\n+                            h4Element.textContent = response.filename;\n+                            listItem.appendChild(h4Element);\n+\n+                            // generate incremental id for form\n+                            let formUniqueId = generateIncrementalId();\n+\n+                            /*\n+                                ##########################################\n+                                FORM BUTTON\n+                                ##########################################\n+                            */\n+                            let formButton = document.createElement('button');\n+                            formButton.innerHTML = 'Show info';\n+                            formButton.classList.add('info-button', 'btn', 'btn-outline-secondary', \"btn-sm\");\n+                            formButton.style.borderRadius = '5px';\n+                            formButton.id = formUniqueId + \"_button\";\n+\n+                            formButton.addEventListener('click', function () {\n+                                if (formContainer.style.display === \"none\") {\n+                                    formContainer.style.display = \"block\";\n+                                    formButton.innerHTML = 'Hide info';\n+                                } else {\n+                                    formContainer.style.display = \"none\";\n+                                    formButton.innerHTML = 'Add info';\n                                 }\n-\n                             });\n \n-                            this.on('success', function (file, response) {\n-\n-                                let dropzone = this;\n-\n-                                show_upload_dataset();\n-\n-                                console.log(\"File uploaded: \", response);\n-                                // actions when UVL model is uploaded\n-                                let listItem = document.createElement('li');\n-                                let h4Element = document.createElement('h4');\n-                                h4Element.textContent = response.filename;\n-                                listItem.appendChild(h4Element);\n-\n-                                // generate incremental id for form\n-                                let formUniqueId = generateIncrementalId();\n-\n-                                /*\n-                                    ##########################################\n-                                    FORM BUTTON\n-                                    ##########################################\n-                                */\n-                                let formButton = document.createElement('button');\n-                                formButton.innerHTML = 'Show info';\n-                                formButton.classList.add('info-button', 'btn', 'btn-outline-secondary', \"btn-sm\");\n-                                formButton.style.borderRadius = '5px';\n-                                formButton.id = formUniqueId + \"_button\";\n-\n-                                formButton.addEventListener('click', function () {\n-                                    if (formContainer.style.display === \"none\") {\n-                                        formContainer.style.display = \"block\";\n-                                        formButton.innerHTML = 'Hide info';\n-                                    } else {\n-                                        formContainer.style.display = \"none\";\n-                                        formButton.innerHTML = 'Add info';\n-                                    }\n-                                });\n-\n-                                // append space\n-                                let space = document.createTextNode(\" \");\n-                                listItem.appendChild(space);\n-\n-                                /*\n-                                    ##########################################\n-                                    REMOVE BUTTON\n-                                    ##########################################\n-                                */\n-\n-                                // remove button\n-                                let removeButton = document.createElement('button');\n-                                removeButton.innerHTML = 'Delete model';\n-                                removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n-                                removeButton.style.borderRadius = '5px';\n-\n-                                // append space\n-                                space = document.createTextNode(\" \");\n-                                listItem.appendChild(space);\n-\n-                                removeButton.addEventListener('click', function () {\n-                                    fileList.removeChild(listItem);\n-                                    this.removeFile(file);\n-\n-                                    // Ajax request\n-                                    let xhr = new XMLHttpRequest();\n-                                    xhr.open('POST', '/dataset/file/delete', true);\n-                                    xhr.setRequestHeader('Content-Type', 'application/json');\n-                                    xhr.onload = function () {\n-                                        if (xhr.status === 200) {\n-                                            console.log('Deleted file from server');\n-\n-                                            if (dropzone.files.length === 0) {\n-                                                document.getElementById(\"upload_dataset\").style.display = \"none\";\n-                                                clean_upload_errors();\n-                                            }\n-\n+                            // append space\n+                            let space = document.createTextNode(\" \");\n+                            listItem.appendChild(space);\n+\n+                            /*\n+                                ##########################################\n+                                REMOVE BUTTON\n+                                ##########################################\n+                            */\n+\n+                            // remove button\n+                            let removeButton = document.createElement('button');\n+                            removeButton.innerHTML = 'Delete model';\n+                            removeButton.classList.add(\"remove-button\", \"btn\", \"btn-outline-danger\", \"btn-sm\", \"remove-button\");\n+                            removeButton.style.borderRadius = '5px';\n+\n+                            // append space\n+                            space = document.createTextNode(\" \");\n+                            listItem.appendChild(space);\n+\n+                            removeButton.addEventListener('click', function () {\n+                                fileList.removeChild(listItem);\n+                                this.removeFile(file);\n+\n+                                // Ajax request\n+                                let xhr = new XMLHttpRequest();\n+                                xhr.open('POST', '/dataset/file/delete', true);\n+                                xhr.setRequestHeader('Content-Type', 'application/json');\n+                                xhr.onload = function () {\n+                                    if (xhr.status === 200) {\n+                                        console.log('Deleted file from server');\n+\n+                                        if (dropzone.files.length === 0) {\n+                                            document.getElementById(\"upload_dataset\").style.display = \"none\";\n+                                            clean_upload_errors();\n                                         }\n-                                    };\n-                                    xhr.send(JSON.stringify({file: file.name}));\n-                                }.bind(this));\n-\n-                                /*\n-                                    ##########################################\n-                                    APPEND BUTTONS\n-                                    ##########################################\n-                                */\n-                                listItem.appendChild(formButton);\n-                                listItem.appendChild(removeButton);\n-\n-                                /*\n-                                    ##########################################\n-                                    UVL FORM\n-                                    ##########################################\n-                                */\n-\n-                                // create specific form for UVL\n-                                let formContainer = document.createElement('div');\n-                                formContainer.id = formUniqueId + \"_form\";\n-                                formContainer.classList.add('uvl_form', \"mt-3\");\n-                                formContainer.style.display = \"none\";\n-\n-                                formContainer.innerHTML = `\n+\n+                                    }\n+                                };\n+                                xhr.send(JSON.stringify({ file: file.name }));\n+                            }.bind(this));\n+\n+                            /*\n+                                ##########################################\n+                                APPEND BUTTONS\n+                                ##########################################\n+                            */\n+                            listItem.appendChild(formButton);\n+                            listItem.appendChild(removeButton);\n+\n+                            /*\n+                                ##########################################\n+                                UVL FORM\n+                                ##########################################\n+                            */\n+\n+                            // create specific form for UVL\n+                            let formContainer = document.createElement('div');\n+                            formContainer.id = formUniqueId + \"_form\";\n+                            formContainer.classList.add('uvl_form', \"mt-3\");\n+                            formContainer.style.display = \"none\";\n+\n+                            formContainer.innerHTML = `\n                                     <div class=\"row\">\n                                         <input type=\"hidden\" value=\"${response.filename}\" name=\"feature_models-${formUniqueId}-uvl_filename\">\n                                         <div class=\"col-12\">\n@@ -426,107 +421,107 @@ <h1 class=\"h3 mb-3 mt-2\">UVL models</h1>\n                                     </div>\n                                     `;\n \n-                                listItem.appendChild(formContainer);\n-                                fileList.appendChild(listItem);\n+                            listItem.appendChild(formContainer);\n+                            fileList.appendChild(listItem);\n \n-                            });\n+                        });\n \n-                            this.on('error', function (file, response) {\n-                                console.error(\"Error uploading file: \", response);\n-                                let alert = document.createElement('p');\n-                                alert.textContent = 'UVL not valid: ' + file.name;\n-                                alerts.appendChild(alert);\n-                                alerts.style.display = 'block';\n-                            });\n+                        this.on('error', function (file, response) {\n+                            console.error(\"Error uploading file: \", response);\n+                            let alert = document.createElement('p');\n+                            alert.textContent = 'UVL not valid: ' + file.name;\n+                            alerts.appendChild(alert);\n+                            alerts.style.display = 'block';\n+                        });\n \n-                        }\n-                    };\n+                    }\n+                };\n \n \n-                </script>\n+            </script>\n \n-            </div>\n         </div>\n-\n     </div>\n \n-    <div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n+</div>\n \n-        <div class=\"col-12\">\n+<div class=\"row\" id=\"upload_dataset\" style=\"display: none\">\n \n-            <hr>\n+    <div class=\"col-12\">\n \n-            <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n+        <hr>\n \n-            <div style=\"padding-left: 2rem\">\n+        <h1 class=\"h3 mb-3 mt-2\">Upload dataset</h1>\n \n-                <label class=\"form-check\">\n-                    <input id=\"agreeCheckbox\" class=\"form-check-input\" type=\"checkbox\" value=\"\">\n-                    <span class=\"form-check-label\" style=\"font-size: 15px\">\n-                                I agree to have my feature models automatically uploaded to Zenodo and made available to the public according to the <a\n-                            href=\"https://en.wikipedia.org/wiki/Open_science\" target=\"_blank\">Open Science</a> manifesto\n-                            </span>\n-                </label>\n+        <div style=\"padding-left: 2rem\">\n \n-                <button id=\"upload_button\" class=\"btn btn-primary mt-2\" disabled>\n-                    <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n-                    Upload dataset</button>\n+            <label class=\"form-check\">\n+                <input id=\"agreeCheckbox\" class=\"form-check-input\" type=\"checkbox\" value=\"\">\n+                <span class=\"form-check-label\" style=\"font-size: 15px\">\n+                    I agree to have my feature models automatically uploaded to Zenodo and made available to the public\n+                    according to the <a href=\"https://en.wikipedia.org/wiki/Open_science\" target=\"_blank\">Open\n+                        Science</a> manifesto\n+                </span>\n+            </label>\n \n-                <div id=\"loading\" style=\"display: none\">\n-                    <img width=\"40px\" src=\"{{ url_for(\"static\", filename=\"gifs/loading.svg\") }}\"/>\n-                    Uploading dataset, please wait...\n-                </div>\n+            <button id=\"upload_button\" class=\"btn btn-primary mt-2\" disabled>\n+                <i data-feather=\"upload\" class=\"center-button-icon\"></i>\n+                Upload dataset</button>\n \n-                <div class=\"row\">\n-                    <div class=\"col-12 mb-3\">\n+            <div id=\"loading\" style=\"display: none\">\n+                <img width=\"40px\" src=\"{{ url_for('static', filename='gifs/loading.svg') }}\" />\n+                Uploading dataset, please wait...\n+            </div>\n \n-                    </div>\n-                </div>\n+            <div class=\"row\">\n+                <div class=\"col-12 mb-3\">\n \n-                <div class=\"alert alert-error\" role=\"alert\" id=\"upload_error\"\n-                     style=\"display: none\">\n-                    <div class=\"alert-message\">\n-\n-                        <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n-                            connection to the Zenodo API</h4>\n-                        <p class=\"p-0 m-0\">\n-                            There seems to be some kind of problem with the Zenodo API and synchronization of your\n-                            dataset\n-                            files may not be possible. We will save your files locally to eventually synchronize\n-                            them with\n-                            Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n-                            anything about it.\n-                        </p>\n-                    </div>\n                 </div>\n+            </div>\n \n+            <div class=\"alert alert-error\" role=\"alert\" id=\"upload_error\" style=\"display: none\">\n+                <div class=\"alert-message\">\n \n-                <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n+                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> Limited\n+                        connection to the Zenodo API</h4>\n+                    <p class=\"p-0 m-0\">\n+                        There seems to be some kind of problem with the Zenodo API and synchronization of your\n+                        dataset\n+                        files may not be possible. We will save your files locally to eventually synchronize\n+                        them with\n+                        Zenodo. Sorry for the inconvenience, Zenodo is an external service and we can't do\n+                        anything about it.\n+                    </p>\n+                </div>\n+            </div>\n \n-                    </span>\n \n-                <script>\n-                    const checkbox = document.getElementById('agreeCheckbox');\n-                    const upload_button = document.getElementById('upload_button');\n+            <span class=\"text-danger mt-2\" id=\"upload_error\" style=\"display: none\">\n \n-                    checkbox.addEventListener('change', function () {\n-                        upload_button.disabled = !checkbox.checked;\n-                    });\n-                </script>\n+            </span>\n \n-            </div>\n+            <script>\n+                const checkbox = document.getElementById('agreeCheckbox');\n+                const upload_button = document.getElementById('upload_button');\n \n+                checkbox.addEventListener('change', function () {\n+                    upload_button.disabled = !checkbox.checked;\n+                });\n+            </script>\n+\n+        </div>\n \n \n \n-        </div>\n \n     </div>\n \n+</div>\n+\n \n {% endblock %}\n \n {% block scripts %}\n-    <script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n-    <script src=\"{{ url_for('dataset.scripts') }}\"></script>\n+<script src=\"{{ url_for('zenodo.scripts') }}\"></script>\n+<script src=\"{{ url_for('dataset.scripts') }}\"></script>\n {% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "86bbe7ec8029b0e04375a49daec6e0e34ced9ab6",
        "filename": "app/modules/fakenodo/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2F__init__.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2F__init__.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2F__init__.py?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+fakenodo_bp = BaseBlueprint('fakenodo', __name__, template_folder='templates')"
      },
      {
        "sha": "a4c92c22cb2c9f76af6996279339554c222750f0",
        "filename": "app/modules/fakenodo/assets/scripts.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -0,0 +1,19 @@\n+function test_fakenodo_connection() {\n+    var xhr = new XMLHttpRequest();\n+    xhr.open('GET', '/fakenodo/test', true);\n+    xhr.setRequestHeader('Content-Type', 'application/json');\n+    xhr.onreadystatechange = function () {\n+        if (xhr.readyState === 4 && xhr.status === 200) {\n+            var response = JSON.parse(xhr.responseText);\n+            if (!response.success) {\n+                document.getElementById(\"test_fakenodo_connection_error\").style.display = \"block\";\n+                console.log(response);\n+                console.log(response.success);\n+                console.log(response.messages);\n+            }\n+        } else if (xhr.readyState === 4 && xhr.status !== 200) {\n+            console.error('Error:', xhr.status);\n+        }\n+    };\n+    xhr.send();\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "59e8f8f73974717b24a8fe9500b84ebdf9e65d77",
        "filename": "app/modules/fakenodo/forms.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Fforms.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Fforms.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fforms.py?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -0,0 +1,6 @@\n+from flask_wtf import FlaskForm\n+from wtforms import SubmitField\n+\n+\n+class FakenodoForm(FlaskForm):\n+    submit = SubmitField('Save fakenodo')"
      },
      {
        "sha": "b6aa2cb423bff7966f0c1dafb86aac91b1d7e9f5",
        "filename": "app/modules/fakenodo/models.py",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Fmodels.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fmodels.py?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -0,0 +1,11 @@\n+from app import db\n+\n+\n+class Deposition(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    dep_metadata = db.Column(db.JSON, nullable=False)\n+    status = db.Column(db.String(50), nullable=False, default=\"draft\")\n+    doi = db.Column(db.String(250), unique=True, nullable=True)\n+\n+    def __repr__(self):\n+        return f'Deposition<{self.id}>'"
      },
      {
        "sha": "08515ac1bf7e5563568b83b89fdffeb9eefd2bbe",
        "filename": "app/modules/fakenodo/repositories.py",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Frepositories.py?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -0,0 +1,11 @@\n+from app.modules.fakenodo.models import Deposition\n+from core.repositories.BaseRepository import BaseRepository\n+\n+\n+class DepositionRepo(BaseRepository):\n+\n+    def __init__(self):\n+        super().__init__(Deposition)\n+\n+    def create_new_deposition(self, metadata):\n+        return self.create(metadata=metadata)"
      },
      {
        "sha": "6c2f0d4204af0920cc31e546937366f9a0dfc6b0",
        "filename": "app/modules/fakenodo/routes.py",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Froutes.py?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -0,0 +1,49 @@\n+import os\n+import tempfile\n+from flask import jsonify, request, send_file\n+from . import fakenodo_bp\n+datasets = {}\n+# Upload all files from dataset\n+\n+\n+@fakenodo_bp.route('/fakenodo/upload', methods=['POST'])\n+def upload_dataset():\n+    global dataset_counter\n+    file = request.files['file']\n+    if file:\n+        dataset_id = dataset_counter\n+        dataset_counter += 1\n+        temp_dir = tempfile.mkdtemp()\n+        file_path = os.path.join(temp_dir, file.filename)\n+        file.save(file_path)\n+        datasets[dataset_id] = {\n+            'id': dataset_id,\n+            'filename': file.filename,\n+            'file_path': file_path\n+        }\n+        return jsonify({'id': dataset_id, 'filename': file.filename}), 201\n+    return jsonify({'error': 'No file uploaded'}), 400\n+# Get dataset info\n+\n+\n+@fakenodo_bp.route('/fakenodo/info/<dataset_id>', methods=['GET'])\n+def get_Dataset(dataset_id):\n+    dataset = datasets.get(dataset_id)\n+    if dataset:\n+        return send_file(dataset['file_path'], as_attachment=True, attachment_filename=dataset['filename'])\n+    return jsonify({'error': 'Dataset not found'}), 404\n+\n+\n+@fakenodo_bp.route('/fakenodo/datasets', methods=['GET'])\n+def list_datasets():\n+    return jsonify(list(datasets.values()))\n+# Delete a deposition\n+\n+\n+@fakenodo_bp.route('/fakenodo/dataset/<int:dataset_id>', methods=['DELETE'])\n+def delete_dataset(dataset_id):\n+    dataset = datasets.pop(dataset_id, None)\n+    if dataset:\n+        os.remove(dataset['file_path'])\n+        return jsonify({'message': 'Dataset deleted'}), 200\n+    return jsonify({'error': 'Dataset not found'}), 404"
      },
      {
        "sha": "9efa7214b2ea1789a7a935da09f36bc4e7ed5816",
        "filename": "app/modules/fakenodo/seeders.py",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Fseeders.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fseeders.py?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -0,0 +1,30 @@\n+from app import db\n+from app.modules.fakenodo.models import Deposition\n+\n+\n+def seed_depositions():\n+    \"\"\"Seeds the Deposition table with sample data.\"\"\"\n+    if Deposition.query.count() == 0:\n+        print(\"Seeding the Deposition table...\")\n+        depositions = [\n+            Deposition(\n+                dep_metadata={\"title\": \"Sample Dataset 1\", \"description\": \"Description for dataset 1\"},\n+                status=\"draft\",\n+                doi=None\n+            ),\n+            Deposition(\n+                dep_metadata={\"title\": \"Sample Dataset 2\", \"description\": \"Description for dataset 2\"},\n+                status=\"published\",\n+                doi=\"fakenodo.doi.2\"\n+            ),\n+            Deposition(\n+                dep_metadata={\"title\": \"Sample Dataset 3\", \"description\": \"Description for dataset 3\"},\n+                status=\"draft\",\n+                doi=\"fakenodo.doi.3\"\n+            ),\n+        ]\n+        db.session.bulk_save_objects(depositions)\n+        db.session.commit()\n+        print(\"Deposition table seeded successfully.\")\n+    else:\n+        print(\"Deposition table already contains data. Skipping seeding.\")"
      },
      {
        "sha": "d5de42cf40f3aedd835996e809465094b87c04f5",
        "filename": "app/modules/fakenodo/services.py",
        "status": "added",
        "additions": 154,
        "deletions": 0,
        "changes": 154,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fservices.py?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -0,0 +1,154 @@\n+import hashlib\n+import logging\n+import os\n+\n+\n+from dotenv import load_dotenv\n+from flask_login import current_user\n+from app.modules.dataset.models import DataSet, DSMetaData\n+from app.modules.fakenodo.models import Deposition\n+from app.modules.fakenodo.repositories import DepositionRepo\n+from app.modules.featuremodel.models import FeatureModel\n+from core.configuration.configuration import uploads_folder_name\n+from core.services.BaseService import BaseService\n+\n+\n+logger = logging.getLogger(__name__)\n+load_dotenv()\n+\n+\n+class FakenodoService(BaseService):\n+    def __init__(self):\n+        self.deposition_repository = DepositionRepo()\n+\n+    def create_new_deposition(self, ds_meta_data: DSMetaData) -> dict:\n+        \"\"\"\n+        Create a new deposition in Fakenodo\n+        Args:\n+            dataset (Dataset): The dataset contain ing the necessary metadata\n+        Returns:\n+            dict: JSON format with the details of the deposition\n+        \"\"\"\n+        logger.info(\"Dataset sending to Fakenodo\")\n+        logger.info(f\"Publication type: {ds_meta_data.publication_type.value}\")\n+        metadataJSON = {\n+            \"title\": ds_meta_data.title,\n+            \"upload_type\": \"dataset\" if ds_meta_data.publication_type.value == \"none\" else \"publication\",\n+            \"publication_type\": (\n+                ds_meta_data.publication_type.value\n+                if ds_meta_data.publication_type.value != \"none\"\n+                else None\n+            ),\n+            \"description\": ds_meta_data.description,\n+            \"creators\": [\n+                {\n+                    \"name\": author.name,\n+                    **({\"affiliation\": author.affiliation} if author.affiliation else {}),\n+                    **({\"orcid\": author.orcid} if author.orcid else {}),\n+                }\n+                for author in ds_meta_data.authors\n+            ],\n+            \"keywords\": (\n+                [\"uvlhub\"] if not ds_meta_data.tags else ds_meta_data.tags.split(\", \") + [\"uvlhub\"]\n+            ),\n+            \"access_right\": \"open\",\n+            \"license\": \"CC-BY-4.0\",\n+        }\n+        try:\n+            deposition = self.deposition_repository.create_new_deposition(dep_metadata=metadataJSON)\n+            return {\n+                \"id\": deposition.id,\n+                \"metadata\": metadataJSON,\n+                \"message\": \"Deposition succesfully created in Fakenodo\"\n+            }\n+        except Exception as error400:\n+            raise Exception(f\"Failed to create deposition in Fakenodo with error: {str(error400)}\")\n+\n+    def upload_file(self, dataset: DataSet, deposition_id: int, feature_model: FeatureModel, user=None):\n+        \"\"\"\n+        Upload a file to a deposition in Fakenodo.\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+            feature_model (FeatureModel): The FeatureModel object representing the feature model.\n+            user (FeatureModel): The User object representing the file owner.\n+        Returns:\n+            dict: The response in JSON format with the details of the uploaded file.\n+        \"\"\"\n+        uvl_filename = feature_model.fm_meta_data.uvl_filename\n+        user_id = current_user.id if user is None else user.id\n+        file_path = os.path.join(uploads_folder_name(), f\"user_{str(user_id)}\", f\"dataset_{dataset.id}/\", uvl_filename)\n+        request = {\n+            \"id\": deposition_id,\n+            \"file\": uvl_filename,\n+            \"fileSize\": os.path.getsize(file_path),\n+            \"checksum\": checksum(file_path),\n+            \"message\": f\"File Uploaded to deposition with id {deposition_id}\"\n+        }\n+        return request\n+\n+    def publish_deposition(self, deposition_id: int) -> dict:\n+        \"\"\"\n+        Publish a deposition in Fakenodo.\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+        Returns:\n+            dict: The response in JSON format with the details of the published deposition.\n+        \"\"\"\n+        deposition = Deposition.query.get(deposition_id)\n+        if not deposition:\n+            raise Exception(\"Error 404: Deposition not found\")\n+        try:\n+            deposition.doi = f\"fakenodo.doi.{deposition_id}\"\n+            deposition.status = \"published\"\n+            self.deposition_repository.update(deposition)\n+            response = {\n+                \"id\": deposition_id,\n+                \"status\": \"published\",\n+                \"conceptdoi\": f\"fakenodo.doi.{deposition_id}\",\n+                \"message\": \"Deposition published successfully in fakenodo.\"\n+            }\n+            return response\n+        except Exception as error:\n+            raise Exception(f\"Failed to publish deposition with errors: {str(error)}\")\n+\n+    def get_deposition(self, deposition_id: int) -> dict:\n+        \"\"\"\n+        Get a deposition from Fakenodo.\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+        Returns:\n+            dict: The response in JSON format with the details of the deposition.\n+        \"\"\"\n+        deposition = Deposition.query.get(deposition_id)\n+        if not deposition:\n+            raise Exception(\"Deposition not found\")\n+        response = {\n+            \"id\": deposition.id,\n+            \"doi\": deposition.doi,\n+            \"metadata\": deposition.dep_metadata,\n+            \"status\": deposition.status,\n+            \"message\": \"Deposition succesfully get from Fakenodo.\"\n+        }\n+        return response\n+\n+    def get_doi(self, deposition_id: int) -> str:\n+        \"\"\"\n+        Get the DOI of a deposition from Fakenodo.\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+        Returns:\n+            str: The DOI of the deposition.\n+        \"\"\"\n+        return self.get_deposition(deposition_id).get(\"doi\")\n+\n+\n+def checksum(fileName):\n+    try:\n+        with open(fileName, \"rb\") as file:\n+            file_content = file.read()\n+            res = hashlib.md5(file_content).hexdigest()\n+        return res\n+    except FileNotFoundError:\n+        raise Exception(f\"File {fileName} not found for checksum calculation\")\n+    except Exception as e:\n+        raise Exception(f\"Error calculating checksum for file {fileName}: {str(e)}\")"
      },
      {
        "sha": "bb533486c0a1f1149ee71ba5057cae880bf34e1c",
        "filename": "app/modules/fakenodo/templates/fakenodo/index.html",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -0,0 +1,11 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}View fakenodo{% endblock %}\n+\n+{% block content %}\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('fakenodo.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/fakenodo/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py?ref=a8698f0ae40d350272849667e680c7633a27bc03"
      },
      {
        "sha": "355e5809e151db3a7660d151233fffaae8fc6986",
        "filename": "app/modules/fakenodo/tests/locustfile.py",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -0,0 +1,21 @@\n+from locust import HttpUser, TaskSet, task\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class FakenodoBehavior(TaskSet):\n+    def on_start(self):\n+        self.index()\n+\n+    @task\n+    def index(self):\n+        response = self.client.get(\"/fakenodo\")\n+\n+        if response.status_code != 200:\n+            print(f\"Fakenodo index failed: {response.status_code}\")\n+\n+\n+class FakenodoUser(HttpUser):\n+    tasks = [FakenodoBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "a33f0bb967501891fd46ff885dc25d13d985454f",
        "filename": "app/modules/fakenodo/tests/test_selenium.py",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -0,0 +1,35 @@\n+from selenium.common.exceptions import NoSuchElementException\n+import time\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def test_fakenodo_index():\n+\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the index page\n+        driver.get(f'{host}/fakenodo')\n+\n+        # Wait a little while to make sure the page has loaded completely\n+        time.sleep(4)\n+\n+        try:\n+\n+            pass\n+\n+        except NoSuchElementException:\n+            raise AssertionError('Test failed!')\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_fakenodo_index()"
      },
      {
        "sha": "950421eb7b4ee15f00b45f83730c55dd2dda9336",
        "filename": "app/modules/fakenodo/tests/test_unit.py",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -0,0 +1,24 @@\n+import pytest\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        # Add HERE new elements to the database that you want to exist in the test context.\n+        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_sample_assertion(test_client):\n+    \"\"\"\n+    Sample test to verify that the test framework and environment are working correctly.\n+    It does not communicate with the Flask application; it only performs a simple assertion to\n+    confirm that the tests in this module can be executed.\n+    \"\"\"\n+    greeting = \"Hello, World!\"\n+    assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\""
      },
      {
        "sha": "147aa0d31fd9026b79737cf3ac30b34a2dbfffd7",
        "filename": "core/configuration/configuration.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a8698f0ae40d350272849667e680c7633a27bc03/core%2Fconfiguration%2Fconfiguration.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a8698f0ae40d350272849667e680c7633a27bc03/core%2Fconfiguration%2Fconfiguration.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/core%2Fconfiguration%2Fconfiguration.py?ref=a8698f0ae40d350272849667e680c7633a27bc03",
        "patch": "@@ -4,6 +4,9 @@\n load_dotenv()\n \n \n+USE_FAKENODE = True\n+\n+\n def uploads_folder_name():\n     return os.getenv('UPLOADS_DIR', \"uploads\")\n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/97",
    "id": 2224010651,
    "node_id": "PR_kwDONB39G86Ej7Wb",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/97",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/97.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/97.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/97",
    "number": 97,
    "state": "closed",
    "locked": false,
    "title": "fix: Finally fix migrations hopefully",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-09T15:37:39Z",
    "updated_at": "2024-12-09T15:41:13Z",
    "closed_at": "2024-12-09T15:41:13Z",
    "merged_at": null,
    "merge_commit_sha": "23beca4d7aede42a11c4e8bdd1e55833efa0e5a0",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/97/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/97/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/97/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/bed3fc2671f14862aca141271881713321d5448f",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "bed3fc2671f14862aca141271881713321d5448f",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "5173b6a57e80242073168941cc2b0ce4c4b6de22",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/97"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/97"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/97"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/97/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/97/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/97/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/bed3fc2671f14862aca141271881713321d5448f"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "cac7aaf23f0da2a6d5dbc602ae8e89cde0e02783",
        "filename": "migrations/versions/002.py",
        "status": "modified",
        "additions": 17,
        "deletions": 12,
        "changes": 29,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/bed3fc2671f14862aca141271881713321d5448f/migrations%2Fversions%2F002.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/bed3fc2671f14862aca141271881713321d5448f/migrations%2Fversions%2F002.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F002.py?ref=bed3fc2671f14862aca141271881713321d5448f",
        "patch": "@@ -7,7 +7,7 @@\n \"\"\"\n from alembic import op\n import sqlalchemy as sa\n-from sqlalchemy.dialects import mysql\n+from sqlalchemy.engine.reflection import Inspector\n \n # revision identifiers, used by Alembic.\n revision = '002'\n@@ -17,18 +17,23 @@\n \n \n def upgrade():\n+    conn = op.get_bind()\n+    inspector = Inspector.from_engine(conn)\n+    tables = inspector.get_table_names()\n+\n     # ### commands auto generated by Alembic - please adjust! ###\n-    op.drop_table('ds_rating', if_exists=True) \n-    op.create_table('ds_rating',\n-        sa.Column('id', sa.Integer(), nullable=False),\n-        sa.Column('user_id', sa.Integer(), nullable=False),\n-        sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n-        sa.Column('rating', sa.Float(), nullable=False),\n-        sa.Column('rated_date', sa.DateTime(), nullable=False),\n-        sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n-        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n-        sa.PrimaryKeyConstraint('id')\n-    )\n+    # op.drop_table('ds_rating', if_exists=True)\n+    if 'ds_rating' not in tables:\n+        op.create_table('ds_rating',\n+            sa.Column('id', sa.Integer(), nullable=False),\n+            sa.Column('user_id', sa.Integer(), nullable=False),\n+            sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n+            sa.Column('rating', sa.Float(), nullable=False),\n+            sa.Column('rated_date', sa.DateTime(), nullable=False),\n+            sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+            sa.PrimaryKeyConstraint('id')\n+        )\n     # with op.batch_alter_table('deposition', schema=None) as batch_op:\n     # batch_op.drop_index('doi')\n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/96",
    "id": 2224002257,
    "node_id": "PR_kwDONB39G86Ej5TR",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/96",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/96.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/96.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/96",
    "number": 96,
    "state": "closed",
    "locked": false,
    "title": "fix: Finally fix migrations hopefully",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-09T15:34:51Z",
    "updated_at": "2024-12-09T15:37:07Z",
    "closed_at": "2024-12-09T15:37:02Z",
    "merged_at": "2024-12-09T15:37:02Z",
    "merge_commit_sha": "bed3fc2671f14862aca141271881713321d5448f",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/96/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/96/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/96/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/05ca8db7302951bbd34307ec78d66ed18d7fc07c",
    "head": {
      "label": "TostaHub:fixes",
      "ref": "fixes",
      "sha": "05ca8db7302951bbd34307ec78d66ed18d7fc07c",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/96"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/96"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/96"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/96/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/96/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/96/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/05ca8db7302951bbd34307ec78d66ed18d7fc07c"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "cac7aaf23f0da2a6d5dbc602ae8e89cde0e02783",
        "filename": "migrations/versions/002.py",
        "status": "modified",
        "additions": 17,
        "deletions": 12,
        "changes": 29,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/05ca8db7302951bbd34307ec78d66ed18d7fc07c/migrations%2Fversions%2F002.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/05ca8db7302951bbd34307ec78d66ed18d7fc07c/migrations%2Fversions%2F002.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F002.py?ref=05ca8db7302951bbd34307ec78d66ed18d7fc07c",
        "patch": "@@ -7,7 +7,7 @@\n \"\"\"\n from alembic import op\n import sqlalchemy as sa\n-from sqlalchemy.dialects import mysql\n+from sqlalchemy.engine.reflection import Inspector\n \n # revision identifiers, used by Alembic.\n revision = '002'\n@@ -17,18 +17,23 @@\n \n \n def upgrade():\n+    conn = op.get_bind()\n+    inspector = Inspector.from_engine(conn)\n+    tables = inspector.get_table_names()\n+\n     # ### commands auto generated by Alembic - please adjust! ###\n-    op.drop_table('ds_rating', if_exists=True) \n-    op.create_table('ds_rating',\n-        sa.Column('id', sa.Integer(), nullable=False),\n-        sa.Column('user_id', sa.Integer(), nullable=False),\n-        sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n-        sa.Column('rating', sa.Float(), nullable=False),\n-        sa.Column('rated_date', sa.DateTime(), nullable=False),\n-        sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n-        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n-        sa.PrimaryKeyConstraint('id')\n-    )\n+    # op.drop_table('ds_rating', if_exists=True)\n+    if 'ds_rating' not in tables:\n+        op.create_table('ds_rating',\n+            sa.Column('id', sa.Integer(), nullable=False),\n+            sa.Column('user_id', sa.Integer(), nullable=False),\n+            sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n+            sa.Column('rating', sa.Float(), nullable=False),\n+            sa.Column('rated_date', sa.DateTime(), nullable=False),\n+            sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+            sa.PrimaryKeyConstraint('id')\n+        )\n     # with op.batch_alter_table('deposition', schema=None) as batch_op:\n     # batch_op.drop_index('doi')\n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/95",
    "id": 2223917473,
    "node_id": "PR_kwDONB39G86Ejkmh",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/95",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/95.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/95.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/95",
    "number": 95,
    "state": "closed",
    "locked": false,
    "title": "feat: Integrate changes to main",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-09T15:10:10Z",
    "updated_at": "2024-12-09T15:21:48Z",
    "closed_at": "2024-12-09T15:21:48Z",
    "merged_at": "2024-12-09T15:21:47Z",
    "merge_commit_sha": "5173b6a57e80242073168941cc2b0ce4c4b6de22",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/95/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/95/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/95/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "332ebb77afaffb1e2704324ec023bac826cf64cd",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/95"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/95"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/95"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/95/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/95/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/95/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/f788a0dc4461b4d62ad9a26aba3a3c2790157df7"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "f19ddf913f032e738fc9beb43c9d2dfb74fa7eec",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 26,
        "changes": 30,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
        "patch": "@@ -62,12 +62,13 @@ jobs:\n         run: |\n           curl \"$deploy_url\"\n   \n-      - name: Deploy to Render (Main)\n+      - name: Deploy to Server (Main)\n         if: github.ref_name == 'main'\n         env:\n-          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+          deploy_url: ${{ secrets.SERVER_DEPLOY_HOOK_URL }}\n+          token: ${{ secrets.SERVER_DEPLOY_TOKEN }}\n         run: |\n-          curl \"$deploy_url\"\n+          curl -X POST \"$deploy_url\" -H \"Authorization: ${token}\"\n   \n       - name: Monitor Develop Deployment Status\n         if: github.ref_name == 'develop'\n@@ -93,26 +94,3 @@ jobs:\n   \n           echo \"Deployment is live!\"\n   \n-      - name: Monitor Main Deployment Status\n-        if: github.ref_name == 'main'\n-        env:\n-          API_KEY: ${{ secrets.RENDER_MAIN_API_KEY }}\n-          SERVICE_ID: ${{ secrets.RENDER_MAIN_SERVICE_ID }}\n-        run: |\n-          STATUS=\"\"\n-          while [ \"$STATUS\" != \"live\" ]; do\n-            DEPLOY_DATA=$(curl -s -H \"Authorization: Bearer $API_KEY\" \\\n-              \"https://api.render.com/v1/services/$SERVICE_ID/deploys\" | jq '.[0]')\n-  \n-            STATUS=$(echo \"$DEPLOY_DATA\" | jq -r '.deploy.status')\n-  \n-            if [[ \"$STATUS\" == \"build_failed\" || \"$STATUS\" == \"update_failed\" || \"$STATUS\" == \"canceled\" || \"$STATUS\" == \"pre_deploy_failed\" ]]; then\n-              echo \"Deployment failed with status: $STATUS\"\n-              exit 1\n-            fi\n-  \n-            echo \"Current status: $STATUS\"\n-            sleep 10\n-          done\n-  \n-          echo \"Deployment is live!\""
      },
      {
        "sha": "5196defbb616ba9850c8423e77abd0b013257ff4",
        "filename": "app/modules/common/dbutils.py",
        "status": "modified",
        "additions": 23,
        "deletions": 20,
        "changes": 43,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fcommon%2Fdbutils.py?ref=f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
        "patch": "@@ -13,7 +13,8 @@\n from dotenv import load_dotenv\n \n \n-def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN, tags=\"\"):\n+def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN, tags=\"\",\n+                      date=\"\", valid=True, should_file_exist=True):\n     user_test = User(email=f'user{id}@example.com', password='test1234')\n     db.session.add(user_test)\n     db.session.commit()\n@@ -26,7 +27,7 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n             deposition_id=id,\n             title=f'Sample dataset {id}',\n             description=f'Description for dataset {id}',\n-            publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n+            publication_type=publication_type,\n             publication_doi=f'10.1234/dataset{id}',\n             dataset_doi=f'10.1234/dataset{id}',\n             tags='tag1, tag2',\n@@ -35,10 +36,11 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n     db.session.add(ds_meta_data)\n     db.session.commit()\n \n+    created_at = datetime.now(timezone.utc) if date == \"\" else datetime.strptime(date, '%Y-%m-%d')\n     dataset = DataSet(\n             user_id=user_test.id,\n             ds_meta_data_id=ds_meta_data.id,\n-            created_at=datetime.now(timezone.utc)\n+            created_at=created_at\n         )\n     db.session.add(dataset)\n     db.session.commit()\n@@ -47,7 +49,7 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n             uvl_filename=f'file{id}.uvl',\n             title=f'Feature Model {id}',\n             description=f'Description for feature model {id}',\n-            publication_type=PublicationType.SOFTWARE_DOCUMENTATION,\n+            publication_type=publication_type,\n             publication_doi='10.1234/fm1',\n             tags=tags,\n             uvl_version='1.0'\n@@ -62,22 +64,23 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n     db.session.add(feature_model)\n     db.session.commit()\n \n-    load_dotenv()\n-    working_dir = os.getenv('WORKING_DIR', '')\n-    file_name = f'file{id}.uvl'\n-    src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n+    if should_file_exist:\n+        load_dotenv()\n+        working_dir = os.getenv('WORKING_DIR', '')\n+        file_name = f'file{id % 12}.uvl' if valid else 'invalidfile.uvl'\n+        src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n \n-    dest_folder = os.path.join(working_dir, 'uploads', f'user_{user_test.id}', f'dataset_{dataset.id}')\n-    os.makedirs(dest_folder, exist_ok=True)\n-    shutil.copy(os.path.join(src_folder, file_name), dest_folder)\n+        dest_folder = os.path.join(working_dir, 'uploads', f'user_{user_test.id}', f'dataset_{dataset.id}')\n+        os.makedirs(dest_folder, exist_ok=True)\n+        shutil.copy(os.path.join(src_folder, file_name), dest_folder)\n \n-    file_path = os.path.join(dest_folder, file_name)\n+        file_path = os.path.join(dest_folder, file_name)\n \n-    uvl_file = Hubfile(\n-        name=file_name,\n-        checksum=f'checksum{id}',\n-        size=os.path.getsize(file_path),\n-        feature_model_id=feature_model.id\n-    )\n-    db.session.add(uvl_file)\n-    db.session.commit()\n+        uvl_file = Hubfile(\n+            name=file_name,\n+            checksum=f'checksum{id}',\n+            size=os.path.getsize(file_path),\n+            feature_model_id=feature_model.id\n+        )\n+        db.session.add(uvl_file)\n+        db.session.commit()"
      },
      {
        "sha": "38d38ef4760f8d902f38176cf3492f36613a88e4",
        "filename": "app/modules/dataset/seeders.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fdataset%2Fseeders.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fdataset%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fseeders.py?ref=f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
        "patch": "@@ -10,7 +10,7 @@\n     PublicationType,\n     DSMetrics,\n     Author)\n-from datetime import datetime, timezone\n+from datetime import datetime\n from dotenv import load_dotenv\n \n \n@@ -36,10 +36,10 @@ def run(self):\n                 deposition_id=1 + i,\n                 title=f'Sample dataset {i+1}',\n                 description=f'Description for dataset {i+1}',\n-                publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN if i % 2 == 0 else PublicationType.BOOK,\n                 publication_doi=f'10.1234/dataset{i+1}',\n                 dataset_doi=f'10.1234/dataset{i+1}',\n-                tags='tag1, tag2',\n+                tags='tag1, tag2' if i < 2 else \"tag3, tag4\",\n                 ds_metrics_id=seeded_ds_metrics.id\n             ) for i in range(4)\n         ]\n@@ -61,7 +61,7 @@ def run(self):\n             DataSet(\n                 user_id=user1.id if i % 2 == 0 else user2.id,\n                 ds_meta_data_id=seeded_ds_meta_data[i].id,\n-                created_at=datetime.now(timezone.utc)\n+                created_at=datetime.strptime(f'202{i}-1-1', '%Y-%m-%d')\n             ) for i in range(4)\n         ]\n         seeded_datasets = self.seed(datasets)\n@@ -74,7 +74,7 @@ def run(self):\n                 description=f'Description for feature model {i+1}',\n                 publication_type=PublicationType.SOFTWARE_DOCUMENTATION,\n                 publication_doi=f'10.1234/fm{i+1}',\n-                tags='tag1, tag2',\n+                tags='tag1, tag2' if i < 6 else \"tag3, tag4\",\n                 uvl_version='1.0'\n             ) for i in range(12)\n         ]\n@@ -104,7 +104,7 @@ def run(self):\n         working_dir = os.getenv('WORKING_DIR', '')\n         src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n         for i in range(12):\n-            file_name = f'file{i+1}.uvl'\n+            file_name = 'invalidfile.uvl' if i == 11 else f'file{i+1}.uvl'\n             feature_model = seeded_feature_models[i]\n             dataset = next(ds for ds in seeded_datasets if ds.id == feature_model.data_set_id)\n             user_id = dataset.user_id"
      },
      {
        "sha": "82359912275afd2d400f85b55b13e522fbee111c",
        "filename": "app/modules/dataset/uvl_examples/invalidfile.uvl",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Finvalidfile.uvl",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fdataset%2Fuvl_examples%2Finvalidfile.uvl",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Finvalidfile.uvl?ref=f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
        "patch": "@@ -0,0 +1,2 @@\n+asdsd\n+asdsd\n\\ No newline at end of file"
      },
      {
        "sha": "594c9cd97bc5b0b5f213233ada554d759096f6ab",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
        "patch": "@@ -318,16 +318,24 @@ function clearFilters() {\n     // Reset the number of uvl models filters\n     let minUvlInput = document.querySelector('#min_uvl');\n     minUvlInput.value = \"\";\n+    minUvlInput.min = \"\"\n+    minUvlInput.max = \"\"\n \n     let maxUvlInput = document.querySelector('#max_uvl');\n     maxUvlInput.value = \"\";\n-    \n+    maxUvlInput.min = \"\"\n+    maxUvlInput.max = \"\"\n+\n     // Reset the number of configurations filters\n     let maxConfigurationsInput = document.querySelector('#max_num_configurations');\n     maxConfigurationsInput.value = \"\";\n-\n+    maxConfigurationsInput.min = \"\"\n+    maxConfigurationsInput.max = \"\"\n+    \n     let minConfigurationsInput = document.querySelector('#min_num_configurations');\n     minConfigurationsInput.value = \"\";\n+    minConfigurationsInput.min = \"\"\n+    minConfigurationsInput.max = \"\"\n \n     // Reset the sorting option\n     let sortingOptions = document.querySelectorAll('[name=\"sorting\"]');"
      },
      {
        "sha": "1b88d8e17d4fa9a210de538fd2b77a258a7cac69",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
        "patch": "@@ -13,6 +13,7 @@ def safe_parse_date(date, date_format, default_date=None):\n     try:\n         return datetime.strptime(date, date_format)\n     except ValueError:\n+        print(\"error\")\n         return default_date\n \n \n@@ -82,11 +83,13 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         date_format = '%Y-%m-%d'\n         if start_date:\n             date_obj = safe_parse_date(start_date, date_format)\n-            query = query.filter(func.date(DataSet.created_at) >= date_obj)\n+            if date_obj is not None:\n+                query = query.filter(func.date(DataSet.created_at) >= date_obj)\n \n         if end_date:\n             date_obj = safe_parse_date(end_date, date_format)\n-            query = query.filter(func.date(DataSet.created_at) <= date_obj)\n+            if date_obj is not None:\n+                query = query.filter(func.date(DataSet.created_at) <= date_obj)\n \n         # Realizamos la uni\u00f3n con Hubfile a trav\u00e9s de FeatureModel\n         query = query.join(FeatureModel, FeatureModel.data_set_id == DataSet.id)  # Uni\u00f3n con FeatureModel"
      },
      {
        "sha": "cadcc2e70e012d4e88f950bd432f2292e41e9238",
        "filename": "app/modules/explore/tests/test_selenium.py",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py?ref=f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
        "patch": "@@ -0,0 +1,143 @@\n+# Generated by Selenium IDE\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.support.ui import WebDriverWait\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+import time\n+\n+\n+def wait_for_page_to_load(driver, timeout=4):\n+    WebDriverWait(driver, timeout).until(\n+        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+    )\n+\n+\n+def wait_datasets_to_change():\n+    # There is no real alternative to this\n+    time.sleep(0.5)\n+\n+\n+def set_input(driver, input, value):\n+    query_field = driver.find_element(By.ID, input)\n+\n+    driver.execute_script(\"\"\"\n+        arguments[0].value = arguments[1];\n+        arguments[0].dispatchEvent(new Event('input', { bubbles: true }));\n+    \"\"\", query_field, value)\n+\n+\n+def set_checkbox(driver, input, value):\n+    query_field = driver.find_element(By.ID, input)\n+\n+    driver.execute_script(\"\"\"\n+        arguments[0].checked = arguments[1];\n+        arguments[0].dispatchEvent(new Event('input', { bubbles: true }));\n+    \"\"\", query_field, value)\n+\n+\n+def check_num_datasets(driver, expected):\n+    wait_datasets_to_change()\n+    datasets = driver.find_element(By.ID, \"results\").find_elements(By.XPATH, \"./*\")\n+    assert len(datasets) == expected, f\"Expected {expected} datasets but found {len(datasets)}\"\n+\n+\n+def test_query():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"sample dataset 1\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"sample dataset 2\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"sample dataset 3\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"sample dataset 4\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"tag1\")\n+    check_num_datasets(driver, 2)\n+\n+    close_driver(driver)\n+\n+\n+def test_filters():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+\n+    set_checkbox(driver, \"by_valid_uvls\", True)\n+    check_num_datasets(driver, 3)\n+    set_checkbox(driver, \"by_valid_uvls\", False)\n+\n+    set_input(driver, \"start_date\", \"2020-01-01\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"start_date\", \"2020-02-02\")\n+    check_num_datasets(driver, 3)\n+\n+    set_input(driver, \"start_date\", \"2021-02-02\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"start_date\", \"2022-02-02\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"start_date\", \"2023-02-02\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"start_date\", \"2020-02-02\")\n+    set_input(driver, \"end_date\", \"2022-01-01\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"start_date\", \"\")\n+    set_input(driver, \"end_date\", \"\")\n+\n+    set_input(driver, \"min_uvl\", \"3\")\n+    set_input(driver, \"max_uvl\", \"3\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"min_num_configurations\", \"25\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"min_num_configurations\", \"24\")\n+    set_input(driver, \"max_num_configurations\", \"25\")\n+    check_num_datasets(driver, 4)\n+\n+    close_driver(driver)\n+\n+\n+def test_publication_type():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+\n+    set_input(driver, \"publication_type\", \"asd\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"publication_type\", \"none\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"publication_type\", \"book\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"publication_type\", \"datamanagementplan\")\n+    check_num_datasets(driver, 2)\n+\n+    close_driver(driver)\n+\n+\n+test_query()\n+\n+\n+test_filters()\n+\n+\n+test_publication_type()"
      },
      {
        "sha": "d397fa017477804224020220138763650260d162",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "modified",
        "additions": 121,
        "deletions": 14,
        "changes": 135,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
        "patch": "@@ -11,7 +11,8 @@ def test_client(test_client):\n     with test_client.application.app_context():\n         create_dataset_db(1, PublicationType.BOOK, \"tag1,tag2\")\n         create_dataset_db(2, PublicationType.ANNOTATION_COLLECTION, \"tag2\")\n-        create_dataset_db(3, PublicationType.BOOK)\n+        create_dataset_db(3, PublicationType.BOOK, date=\"2020-1-1\")\n+        create_dataset_db(4, valid=False)\n \n         pass\n \n@@ -36,43 +37,149 @@ def test_explore_post(test_client):\n \n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n-    assert len(response.get_json()) == 3, \"Wrong number of datasets\"\n+    assert len(response.get_json()) == 4, \"Wrong number of datasets\"\n \n \n def test_explore_filter_num_uvls_post(test_client):\n-    \"\"\"\n-    Tests access to explore POST request with a filter.\n-    \"\"\"\n-\n-    search_criteria = get_search_criteria(max_uvl=\"1\")\n+    search_criteria = get_search_criteria(min_uvl=\"1\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_ds = len(response.get_json())\n-    assert num_ds == 3, f\"Wrong number of datasets: {num_ds}\"\n+    assert num_ds == 4, f\"Wrong number of datasets: {num_ds}\"\n \n     search_criteria = get_search_criteria(max_uvl=\"0\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_ds = len(response.get_json())\n     assert num_ds == 0, f\"Wrong number of datasets: {num_ds}\"\n \n+    wrong_num = \"notanumber\"\n+    search_criteria = get_search_criteria(max_uvl=wrong_num, min_uvl=wrong_num)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n \n-def test_explore_filter_num_configurations_post(test_client):\n-    \"\"\"\n-    Tests access to explore POST request with a filter.\n-    \"\"\"\n \n+def test_explore_filter_num_configurations_post(test_client):\n     search_criteria = get_search_criteria(min_num_configurations=\"1\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_conf = len(response.get_json())\n-    assert num_conf == 3, f\"Wrong number of datasets: {num_conf}\"\n+    assert num_conf == 4, f\"Wrong number of datasets: {num_conf}\"\n \n     search_criteria = get_search_criteria(max_num_configurations=\"0\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_conf = len(response.get_json())\n-    assert num_conf == 0, f\"Wrong number of datasets: {num_conf}\"\n+    assert num_conf == 1, f\"Wrong number of datasets: {num_conf}\"\n+\n+    search_criteria = get_search_criteria(min_num_configurations=\"1\", max_num_configurations=\"30\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_conf = len(response.get_json())\n+    assert num_conf == 4, f\"Wrong number of datasets: {num_conf}\"\n+\n+    wrong_num = \"notanumber\"\n+    search_criteria = get_search_criteria(min_num_configurations=wrong_num, max_num_configurations=wrong_num)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+\n+\n+def test_explore_filter_date_post(test_client):\n+    # Date formate: %Y-%m-%d\n+    search_criteria = get_search_criteria(start_date=\"2020-2-2\", end_date=\"2025-1-1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 3, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(start_date=\"2025-1-1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 0, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(end_date=\"2020-2-2\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets: {num}\"\n+\n+    wrong_date = \"notadate\"\n+    search_criteria = get_search_criteria(start_date=wrong_date, end_date=wrong_date)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+\n+\n+def test_explore_filter_publication_type_post(test_client):\n+    search_criteria = get_search_criteria(publication_type=\"book\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 2, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(publication_type=\"any\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n+\n+    wrong_publication_type = \"ERROR\"\n+    search_criteria = get_search_criteria(publication_type=wrong_publication_type)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_filter_query_post(test_client):\n+    search_criteria = get_search_criteria(query=\"Sample dataset 1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets: {num}\"\n+\n+    dataset_not_exists = \"Sample dataset wrong\"\n+    search_criteria = get_search_criteria(query=dataset_not_exists)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 0, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_mixed_filter_post(test_client):\n+    search_criteria = get_search_criteria(query=\"Sample dataset 3\", end_date=\"2020-2-2\", publication_type=\"book\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(query=\"Sample dataset 3\", end_date=\"2020-2-2\", publication_type=\"none\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 0, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_filter_by_valid_uvl_post(test_client):\n+    search_criteria = get_search_criteria(by_valid_uvls=\"on\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 3, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(by_valid_uvls=\"off\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_soring_post(test_client):\n+    search_criteria = get_search_criteria(sorting=\"oldest\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n \n \n def get_search_criteria(query=\"\", sorting=\"newest\", publication_type=\"any\","
      },
      {
        "sha": "91664d1bd11a24be5e74caeaefa56ecfb5c3c542",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 15,
        "deletions": 27,
        "changes": 42,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
        "patch": "@@ -5,7 +5,6 @@\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n from flamapy.core.discover import DiscoverMetamodels\n-from flamapy.core.exceptions import OperationNotFound, ConfigurationNotFound\n import tempfile\n import os\n \n@@ -56,13 +55,13 @@ def syntaxError(self, recognizer, offendingSymbol, line, column, msg, e):\n         parser.removeErrorListeners()\n         parser.addErrorListener(error_listener)\n \n-        # tree = parser.featureModel()\n+        tree = parser.featureModel()\n \n         if error_listener.errors:\n             return jsonify({\"errors\": error_listener.errors}), 400\n \n         # Optional: Print the parse tree\n-        # print(tree.toStringTree(recog=parser))\n+        print(tree.toStringTree(recog=parser))\n \n         return jsonify({\"message\": \"Valid Model\"}), 200\n \n@@ -134,7 +133,6 @@ def to_cnf(file_id):\n         file_name = hubfile.name\n         directory_path = \"app/modules/dataset/uvl_examples\"\n         file_path = os.path.join(directory_path, file_name)\n-\n         if not os.path.isfile(file_path):\n             raise NotFound(f\"File {file_name} not found\")\n \n@@ -156,26 +154,16 @@ def to_cnf(file_id):\n \n @flamapy_bp.route('/flamapy/num_configurations/<int:file_id>', methods=['GET'])\n def get_num_configurations(file_id):\n-    try:\n-        hubfile = HubfileService().get_or_404(file_id)\n-        file_name = hubfile.name\n-        directory_path = \"app/modules/dataset/uvl_examples\"\n-        file_path = os.path.join(directory_path, file_name)\n-        # Agrega un mensaje de depuraci\u00f3n\n-        if not os.path.isfile(file_path):\n-            raise NotFound(f\"File {file_name} not found\")\n-\n-        # Initiallize the dicover metamodel\n-        dm = DiscoverMetamodels()\n-        result = dm.use_operation_from_file(\"PySATConfigurationsNumber\", file_path)\n-\n-        return jsonify({\"result\": result}), 200\n-\n-    except NotFound as e:\n-        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n-    except OperationNotFound as e:\n-        return jsonify({\"error\": str(e).replace(\"Operation not found: \", \"\")}), 500\n-    except ConfigurationNotFound as e:\n-        return jsonify({\"error\": str(e).replace(\"Configuration not found: \", \"\")}), 500\n-    except Exception as e:\n-        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n+    (_, status_code) = check_uvl(file_id)\n+    if status_code != 200:\n+        return jsonify({\"error\": \"Internal error\"}), 500\n+    hubfile = HubfileService().get_or_404(file_id)\n+    file_name = hubfile.name\n+    directory_path = \"app/modules/dataset/uvl_examples\"\n+    file_path = os.path.join(directory_path, file_name)\n+\n+    # Initiallize the dicover metamodel\n+    dm = DiscoverMetamodels()\n+    result = dm.use_operation_from_file(\"PySATConfigurationsNumber\", file_path)\n+\n+    return jsonify({\"result\": result}), 200"
      },
      {
        "sha": "ced65fb82262d85f183343fc6ebe3637e1569816",
        "filename": "app/modules/flamapy/tests/test_unit.py",
        "status": "modified",
        "additions": 30,
        "deletions": 4,
        "changes": 34,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py?ref=f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
        "patch": "@@ -12,6 +12,8 @@ def test_client(test_client):\n     \"\"\"\n     with test_client.application.app_context():\n         create_dataset_db(1)\n+        create_dataset_db(2, valid=False)\n+        create_dataset_db(3, should_file_exist=False)\n         pass\n \n     yield test_client\n@@ -27,6 +29,25 @@ def test_sample_assertion(test_client):\n     assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\"\n \n \n+def test_valid_uvl_get(test_client):\n+    valid_uvl_file_id = 1\n+    valid_uvl_test(test_client, valid_uvl_file_id, 200)\n+    file_id_not_exists = 10\n+    valid_uvl_test(test_client, file_id_not_exists, 500)\n+    invalid_uvl_file_id = 2\n+    valid_uvl_test(test_client, invalid_uvl_file_id, 400)\n+    file_doesnt_exist = 3\n+    valid_uvl_test(test_client, file_doesnt_exist, 500)\n+\n+\n+def valid_uvl_test(client, file_id, expected_code):\n+    response = client.get(\"/flamapy/check_uvl/\" + str(file_id))\n+    msg = \"Get valid uvl of file \" + str(file_id) + \" responded \" \\\n+        + str(response.status_code) + \" but expected \" + str(expected_code)\n+    print(response.get_json())\n+    assert response.status_code == expected_code, msg\n+\n+\n # TEST DE GLENCOE\n @pytest.fixture\n def client():\n@@ -209,12 +230,17 @@ def test_num_configurations_get(test_client):\n     \"\"\"\n     Tests GET request of num of configurations of given file ids.\n     \"\"\"\n-\n-    num_configurations(test_client, 1, 200)\n-    num_configurations(test_client, 2, 404)\n+    file_id_exists = 1\n+    num_configurations_test(test_client, file_id_exists, 200)\n+    file_id_not_exists = 10\n+    num_configurations_test(test_client, file_id_not_exists, 500)\n+    invalid_uvl_file_id = 2\n+    num_configurations_test(test_client, invalid_uvl_file_id, 500)\n+    file_doesnt_exist = 3\n+    num_configurations_test(test_client, file_doesnt_exist, 500)\n \n \n-def num_configurations(client, file_id, expected_code):\n+def num_configurations_test(client, file_id, expected_code):\n     response = client.get(\"/flamapy/num_configurations/\" + str(file_id))\n     msg = \"Get num configurations of file \" + str(file_id) + \" responded \" \\\n         + str(response.status_code) + \" but expected \" + str(expected_code)"
      },
      {
        "sha": "48baa2232827d10d5af1a6dd8c25f05e567094bb",
        "filename": "app/modules/hubfile/services.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fhubfile%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/app%2Fmodules%2Fhubfile%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fhubfile%2Fservices.py?ref=f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
        "patch": "@@ -28,7 +28,7 @@ def get_path_by_hubfile(self, hubfile: Hubfile) -> str:\n         hubfile_dataset = self.get_dataset_by_hubfile(hubfile)\n         working_dir = os.getenv('WORKING_DIR')\n \n-        path = os.path.join(working_dir,\n+        path = os.path.join(\"\" if working_dir is None else working_dir,\n                             'uploads',\n                             f'user_{hubfile_user.id}',\n                             f'dataset_{hubfile_dataset.id}',"
      },
      {
        "sha": "0efb0332b422f1fa8291155f8e1aba4b1e000113",
        "filename": "docker/docker-compose.custom.yml",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/docker%2Fdocker-compose.custom.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/docker%2Fdocker-compose.custom.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docker%2Fdocker-compose.custom.yml?ref=f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
        "patch": "@@ -0,0 +1,44 @@\n+services:\n+\n+  web:\n+    container_name: web_app_container\n+    image: drorganvidez/uvlhub:latest\n+    env_file:\n+      - ../.env\n+    ports:\n+      - \"5000:5000\"\n+    depends_on:\n+      - db\n+    build:\n+      context: ../\n+      dockerfile: docker/images/Dockerfile.webhook\n+    restart: always\n+    volumes:\n+      - ./entrypoints/production_entrypoint.sh:/app/entrypoint.sh\n+      - ../scripts:/app/scripts\n+      - ../migrations:/app/migrations\n+      - ../uploads:/app/uploads\n+      - ../:/app\n+      - /var/run/docker.sock:/var/run/docker.sock\n+    command: [ \"sh\", \"-c\", \"sh /app/entrypoint.sh\" ]\n+\n+  db:\n+    container_name: mariadb_container\n+    env_file:\n+      - ../.env\n+    image: mariadb:latest\n+    command: --default-authentication-plugin=mysql_native_password\n+    restart: always\n+    ports:\n+      - \"3306:3306\"\n+    volumes:\n+      - db_data:/var/lib/mysql\n+\n+networks:\n+  default:\n+    name: caddy_net\n+    external: true\n+\n+\n+volumes:\n+  db_data:"
      },
      {
        "sha": "3804f81d0ae5eacc1399c350d2d1c71d6bd0f391",
        "filename": "migrations/versions/002.py",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/migrations%2Fversions%2F002.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f788a0dc4461b4d62ad9a26aba3a3c2790157df7/migrations%2Fversions%2F002.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F002.py?ref=f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
        "patch": "@@ -0,0 +1,61 @@\n+\"\"\"empty message\n+\n+Revision ID: 002\n+Revises: 001\n+Create Date: 2024-12-07 12:40:06.180427\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+from sqlalchemy.dialects import mysql\n+\n+# revision identifiers, used by Alembic.\n+revision = '002'\n+down_revision = '001'\n+branch_labels = None\n+depends_on = None\n+\n+\n+def upgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.drop_table('ds_rating', if_exists=True) \n+    op.create_table('ds_rating',\n+        sa.Column('id', sa.Integer(), nullable=False),\n+        sa.Column('user_id', sa.Integer(), nullable=False),\n+        sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n+        sa.Column('rating', sa.Float(), nullable=False),\n+        sa.Column('rated_date', sa.DateTime(), nullable=False),\n+        sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+        sa.PrimaryKeyConstraint('id')\n+    )\n+    # with op.batch_alter_table('deposition', schema=None) as batch_op:\n+    # batch_op.drop_index('doi')\n+\n+    # op.drop_table('deposition')\n+    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n+        batch_op.add_column(sa.Column('rating', sa.Float(), nullable=True))\n+\n+    # ### end Alembic commands ###\n+\n+\n+def downgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n+        batch_op.drop_column('rating')\n+\n+    # op.create_table('deposition',\n+    # sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),\n+    # sa.Column('dep_metadata', mysql.LONGTEXT(charset='utf8mb4', collation='utf8mb4_bin'), nullable=False),\n+    # sa.Column('status', mysql.VARCHAR(length=50), nullable=False),\n+    # sa.Column('doi', mysql.VARCHAR(length=250), nullable=True),\n+    # sa.PrimaryKeyConstraint('id'),\n+    # mysql_collate='utf8mb4_general_ci',\n+    # mysql_default_charset='utf8mb4',\n+    # mysql_engine='InnoDB'\n+    # )\n+    # with op.batch_alter_table('deposition', schema=None) as batch_op:\n+    # batch_op.create_index('doi', ['doi'], unique=True)\n+\n+    op.drop_table('ds_rating')\n+    # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/94",
    "id": 2223879889,
    "node_id": "PR_kwDONB39G86EjbbR",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/94",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/94.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/94.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/94",
    "number": 94,
    "state": "closed",
    "locked": false,
    "title": "feat: Modify render.yml to deploy to personal server in main instead \u2026",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "\u2026of render",
    "created_at": "2024-12-09T14:59:39Z",
    "updated_at": "2024-12-09T15:09:31Z",
    "closed_at": "2024-12-09T15:09:28Z",
    "merged_at": "2024-12-09T15:09:28Z",
    "merge_commit_sha": "f788a0dc4461b4d62ad9a26aba3a3c2790157df7",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/94/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/94/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/94/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/4218eabd9a962184673b8e34a88ddf5edfa67f0e",
    "head": {
      "label": "TostaHub:Ahydul-patch-1",
      "ref": "Ahydul-patch-1",
      "sha": "4218eabd9a962184673b8e34a88ddf5edfa67f0e",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "2a91d1d469cf0608566db942ccf5b458aaafc4d8",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/94"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/94"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/94"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/94/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/94/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/94/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/4218eabd9a962184673b8e34a88ddf5edfa67f0e"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "f19ddf913f032e738fc9beb43c9d2dfb74fa7eec",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 26,
        "changes": 30,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4218eabd9a962184673b8e34a88ddf5edfa67f0e/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4218eabd9a962184673b8e34a88ddf5edfa67f0e/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=4218eabd9a962184673b8e34a88ddf5edfa67f0e",
        "patch": "@@ -62,12 +62,13 @@ jobs:\n         run: |\n           curl \"$deploy_url\"\n   \n-      - name: Deploy to Render (Main)\n+      - name: Deploy to Server (Main)\n         if: github.ref_name == 'main'\n         env:\n-          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+          deploy_url: ${{ secrets.SERVER_DEPLOY_HOOK_URL }}\n+          token: ${{ secrets.SERVER_DEPLOY_TOKEN }}\n         run: |\n-          curl \"$deploy_url\"\n+          curl -X POST \"$deploy_url\" -H \"Authorization: ${token}\"\n   \n       - name: Monitor Develop Deployment Status\n         if: github.ref_name == 'develop'\n@@ -93,26 +94,3 @@ jobs:\n   \n           echo \"Deployment is live!\"\n   \n-      - name: Monitor Main Deployment Status\n-        if: github.ref_name == 'main'\n-        env:\n-          API_KEY: ${{ secrets.RENDER_MAIN_API_KEY }}\n-          SERVICE_ID: ${{ secrets.RENDER_MAIN_SERVICE_ID }}\n-        run: |\n-          STATUS=\"\"\n-          while [ \"$STATUS\" != \"live\" ]; do\n-            DEPLOY_DATA=$(curl -s -H \"Authorization: Bearer $API_KEY\" \\\n-              \"https://api.render.com/v1/services/$SERVICE_ID/deploys\" | jq '.[0]')\n-  \n-            STATUS=$(echo \"$DEPLOY_DATA\" | jq -r '.deploy.status')\n-  \n-            if [[ \"$STATUS\" == \"build_failed\" || \"$STATUS\" == \"update_failed\" || \"$STATUS\" == \"canceled\" || \"$STATUS\" == \"pre_deploy_failed\" ]]; then\n-              echo \"Deployment failed with status: $STATUS\"\n-              exit 1\n-            fi\n-  \n-            echo \"Current status: $STATUS\"\n-            sleep 10\n-          done\n-  \n-          echo \"Deployment is live!\""
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/93",
    "id": 2222225156,
    "node_id": "PR_kwDONB39G86EdHcE",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/93",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/93.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/93.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/93",
    "number": 93,
    "state": "closed",
    "locked": false,
    "title": "fix: Fix migration 002.py",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-08T20:21:31Z",
    "updated_at": "2024-12-09T14:20:08Z",
    "closed_at": "2024-12-09T14:20:06Z",
    "merged_at": "2024-12-09T14:20:05Z",
    "merge_commit_sha": "2a91d1d469cf0608566db942ccf5b458aaafc4d8",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/93/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/93/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/93/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/399646051926ca3b04f0f4dac819dee724830b66",
    "head": {
      "label": "TostaHub:Ahydul-patch-1",
      "ref": "Ahydul-patch-1",
      "sha": "399646051926ca3b04f0f4dac819dee724830b66",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "c4ad90edc4a860004ea30dde73614eedfdafeaca",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/93"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/93"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/93"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/93/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/93/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/93/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/399646051926ca3b04f0f4dac819dee724830b66"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "3804f81d0ae5eacc1399c350d2d1c71d6bd0f391",
        "filename": "migrations/versions/002.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/399646051926ca3b04f0f4dac819dee724830b66/migrations%2Fversions%2F002.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/399646051926ca3b04f0f4dac819dee724830b66/migrations%2Fversions%2F002.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F002.py?ref=399646051926ca3b04f0f4dac819dee724830b66",
        "patch": "@@ -18,7 +18,7 @@\n \n def upgrade():\n     # ### commands auto generated by Alembic - please adjust! ###\n-    op.drop_table('ds_rating')\n+    op.drop_table('ds_rating', if_exists=True) \n     op.create_table('ds_rating',\n         sa.Column('id', sa.Integer(), nullable=False),\n         sa.Column('user_id', sa.Integer(), nullable=False),"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/92",
    "id": 2221459924,
    "node_id": "PR_kwDONB39G86EaMnU",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/92",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/92.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/92.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/92",
    "number": 92,
    "state": "closed",
    "locked": false,
    "title": "Ahydul patch 1",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-07T13:44:38Z",
    "updated_at": "2024-12-07T13:48:04Z",
    "closed_at": "2024-12-07T13:48:01Z",
    "merged_at": "2024-12-07T13:48:01Z",
    "merge_commit_sha": "c4ad90edc4a860004ea30dde73614eedfdafeaca",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/92/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/92/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/92/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/2f62c580a6156ec012bf24d8b64526e7f2a95544",
    "head": {
      "label": "TostaHub:Ahydul-patch-1",
      "ref": "Ahydul-patch-1",
      "sha": "2f62c580a6156ec012bf24d8b64526e7f2a95544",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "8cdbb354f40086953752745417d8f5dde942f8de",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/92"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/92"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/92"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/92/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/92/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/92/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/2f62c580a6156ec012bf24d8b64526e7f2a95544"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "0efb0332b422f1fa8291155f8e1aba4b1e000113",
        "filename": "docker/docker-compose.custom.yml",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/2f62c580a6156ec012bf24d8b64526e7f2a95544/docker%2Fdocker-compose.custom.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/2f62c580a6156ec012bf24d8b64526e7f2a95544/docker%2Fdocker-compose.custom.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docker%2Fdocker-compose.custom.yml?ref=2f62c580a6156ec012bf24d8b64526e7f2a95544",
        "patch": "@@ -0,0 +1,44 @@\n+services:\n+\n+  web:\n+    container_name: web_app_container\n+    image: drorganvidez/uvlhub:latest\n+    env_file:\n+      - ../.env\n+    ports:\n+      - \"5000:5000\"\n+    depends_on:\n+      - db\n+    build:\n+      context: ../\n+      dockerfile: docker/images/Dockerfile.webhook\n+    restart: always\n+    volumes:\n+      - ./entrypoints/production_entrypoint.sh:/app/entrypoint.sh\n+      - ../scripts:/app/scripts\n+      - ../migrations:/app/migrations\n+      - ../uploads:/app/uploads\n+      - ../:/app\n+      - /var/run/docker.sock:/var/run/docker.sock\n+    command: [ \"sh\", \"-c\", \"sh /app/entrypoint.sh\" ]\n+\n+  db:\n+    container_name: mariadb_container\n+    env_file:\n+      - ../.env\n+    image: mariadb:latest\n+    command: --default-authentication-plugin=mysql_native_password\n+    restart: always\n+    ports:\n+      - \"3306:3306\"\n+    volumes:\n+      - db_data:/var/lib/mysql\n+\n+networks:\n+  default:\n+    name: caddy_net\n+    external: true\n+\n+\n+volumes:\n+  db_data:"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/90",
    "id": 2221432674,
    "node_id": "PR_kwDONB39G86EaF9i",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/90",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/90.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/90.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/90",
    "number": 90,
    "state": "closed",
    "locked": false,
    "title": "fix: Fix migrations",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-07T12:57:38Z",
    "updated_at": "2024-12-07T13:47:20Z",
    "closed_at": "2024-12-07T13:47:16Z",
    "merged_at": "2024-12-07T13:47:16Z",
    "merge_commit_sha": "97dbcbfadc46384613f68ebfe3d358fcd540de95",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/90/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/90/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/90/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/29427cd8754102574bb85a9f2b853663dff58d24",
    "head": {
      "label": "TostaHub:fixMigrations",
      "ref": "fixMigrations",
      "sha": "29427cd8754102574bb85a9f2b853663dff58d24",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "8cdbb354f40086953752745417d8f5dde942f8de",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/90"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/90"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/90"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/90/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/90/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/90/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/29427cd8754102574bb85a9f2b853663dff58d24"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "ecf8749ad83d9ec67c4cf301496cd4c92c34027f",
        "filename": "migrations/versions/002.py",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/29427cd8754102574bb85a9f2b853663dff58d24/migrations%2Fversions%2F002.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/29427cd8754102574bb85a9f2b853663dff58d24/migrations%2Fversions%2F002.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F002.py?ref=29427cd8754102574bb85a9f2b853663dff58d24",
        "patch": "@@ -0,0 +1,61 @@\n+\"\"\"empty message\n+\n+Revision ID: 002\n+Revises: 001\n+Create Date: 2024-12-07 12:40:06.180427\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+from sqlalchemy.dialects import mysql\n+\n+# revision identifiers, used by Alembic.\n+revision = '002'\n+down_revision = '001'\n+branch_labels = None\n+depends_on = None\n+\n+\n+def upgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.drop_table('ds_rating')\n+    op.create_table('ds_rating',\n+        sa.Column('id', sa.Integer(), nullable=False),\n+        sa.Column('user_id', sa.Integer(), nullable=False),\n+        sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n+        sa.Column('rating', sa.Float(), nullable=False),\n+        sa.Column('rated_date', sa.DateTime(), nullable=False),\n+        sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+        sa.PrimaryKeyConstraint('id')\n+    )\n+    # with op.batch_alter_table('deposition', schema=None) as batch_op:\n+    # batch_op.drop_index('doi')\n+\n+    # op.drop_table('deposition')\n+    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n+        batch_op.add_column(sa.Column('rating', sa.Float(), nullable=True))\n+\n+    # ### end Alembic commands ###\n+\n+\n+def downgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n+        batch_op.drop_column('rating')\n+\n+    # op.create_table('deposition',\n+    # sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),\n+    # sa.Column('dep_metadata', mysql.LONGTEXT(charset='utf8mb4', collation='utf8mb4_bin'), nullable=False),\n+    # sa.Column('status', mysql.VARCHAR(length=50), nullable=False),\n+    # sa.Column('doi', mysql.VARCHAR(length=250), nullable=True),\n+    # sa.PrimaryKeyConstraint('id'),\n+    # mysql_collate='utf8mb4_general_ci',\n+    # mysql_default_charset='utf8mb4',\n+    # mysql_engine='InnoDB'\n+    # )\n+    # with op.batch_alter_table('deposition', schema=None) as batch_op:\n+    # batch_op.create_index('doi', ['doi'], unique=True)\n+\n+    op.drop_table('ds_rating')\n+    # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/89",
    "id": 2221391041,
    "node_id": "PR_kwDONB39G86EZ7zB",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/89",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/89.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/89.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/89",
    "number": 89,
    "state": "closed",
    "locked": false,
    "title": "Test",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-07T10:42:55Z",
    "updated_at": "2024-12-07T11:12:45Z",
    "closed_at": "2024-12-07T11:12:32Z",
    "merged_at": null,
    "merge_commit_sha": "11b120705931b359285f982da63145eb32511d29",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/89/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/89/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/89/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d",
    "head": {
      "label": "TostaHub:test",
      "ref": "test",
      "sha": "b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "305af88a63a00c104f36c5c90c53c4f5414978ec",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/89"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/89"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/89"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/89/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/89/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/89/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "5196defbb616ba9850c8423e77abd0b013257ff4",
        "filename": "app/modules/common/dbutils.py",
        "status": "modified",
        "additions": 23,
        "deletions": 20,
        "changes": 43,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fcommon%2Fdbutils.py?ref=b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d",
        "patch": "@@ -13,7 +13,8 @@\n from dotenv import load_dotenv\n \n \n-def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN, tags=\"\"):\n+def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN, tags=\"\",\n+                      date=\"\", valid=True, should_file_exist=True):\n     user_test = User(email=f'user{id}@example.com', password='test1234')\n     db.session.add(user_test)\n     db.session.commit()\n@@ -26,7 +27,7 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n             deposition_id=id,\n             title=f'Sample dataset {id}',\n             description=f'Description for dataset {id}',\n-            publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n+            publication_type=publication_type,\n             publication_doi=f'10.1234/dataset{id}',\n             dataset_doi=f'10.1234/dataset{id}',\n             tags='tag1, tag2',\n@@ -35,10 +36,11 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n     db.session.add(ds_meta_data)\n     db.session.commit()\n \n+    created_at = datetime.now(timezone.utc) if date == \"\" else datetime.strptime(date, '%Y-%m-%d')\n     dataset = DataSet(\n             user_id=user_test.id,\n             ds_meta_data_id=ds_meta_data.id,\n-            created_at=datetime.now(timezone.utc)\n+            created_at=created_at\n         )\n     db.session.add(dataset)\n     db.session.commit()\n@@ -47,7 +49,7 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n             uvl_filename=f'file{id}.uvl',\n             title=f'Feature Model {id}',\n             description=f'Description for feature model {id}',\n-            publication_type=PublicationType.SOFTWARE_DOCUMENTATION,\n+            publication_type=publication_type,\n             publication_doi='10.1234/fm1',\n             tags=tags,\n             uvl_version='1.0'\n@@ -62,22 +64,23 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n     db.session.add(feature_model)\n     db.session.commit()\n \n-    load_dotenv()\n-    working_dir = os.getenv('WORKING_DIR', '')\n-    file_name = f'file{id}.uvl'\n-    src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n+    if should_file_exist:\n+        load_dotenv()\n+        working_dir = os.getenv('WORKING_DIR', '')\n+        file_name = f'file{id % 12}.uvl' if valid else 'invalidfile.uvl'\n+        src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n \n-    dest_folder = os.path.join(working_dir, 'uploads', f'user_{user_test.id}', f'dataset_{dataset.id}')\n-    os.makedirs(dest_folder, exist_ok=True)\n-    shutil.copy(os.path.join(src_folder, file_name), dest_folder)\n+        dest_folder = os.path.join(working_dir, 'uploads', f'user_{user_test.id}', f'dataset_{dataset.id}')\n+        os.makedirs(dest_folder, exist_ok=True)\n+        shutil.copy(os.path.join(src_folder, file_name), dest_folder)\n \n-    file_path = os.path.join(dest_folder, file_name)\n+        file_path = os.path.join(dest_folder, file_name)\n \n-    uvl_file = Hubfile(\n-        name=file_name,\n-        checksum=f'checksum{id}',\n-        size=os.path.getsize(file_path),\n-        feature_model_id=feature_model.id\n-    )\n-    db.session.add(uvl_file)\n-    db.session.commit()\n+        uvl_file = Hubfile(\n+            name=file_name,\n+            checksum=f'checksum{id}',\n+            size=os.path.getsize(file_path),\n+            feature_model_id=feature_model.id\n+        )\n+        db.session.add(uvl_file)\n+        db.session.commit()"
      },
      {
        "sha": "38d38ef4760f8d902f38176cf3492f36613a88e4",
        "filename": "app/modules/dataset/seeders.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fdataset%2Fseeders.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fdataset%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fseeders.py?ref=b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d",
        "patch": "@@ -10,7 +10,7 @@\n     PublicationType,\n     DSMetrics,\n     Author)\n-from datetime import datetime, timezone\n+from datetime import datetime\n from dotenv import load_dotenv\n \n \n@@ -36,10 +36,10 @@ def run(self):\n                 deposition_id=1 + i,\n                 title=f'Sample dataset {i+1}',\n                 description=f'Description for dataset {i+1}',\n-                publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN if i % 2 == 0 else PublicationType.BOOK,\n                 publication_doi=f'10.1234/dataset{i+1}',\n                 dataset_doi=f'10.1234/dataset{i+1}',\n-                tags='tag1, tag2',\n+                tags='tag1, tag2' if i < 2 else \"tag3, tag4\",\n                 ds_metrics_id=seeded_ds_metrics.id\n             ) for i in range(4)\n         ]\n@@ -61,7 +61,7 @@ def run(self):\n             DataSet(\n                 user_id=user1.id if i % 2 == 0 else user2.id,\n                 ds_meta_data_id=seeded_ds_meta_data[i].id,\n-                created_at=datetime.now(timezone.utc)\n+                created_at=datetime.strptime(f'202{i}-1-1', '%Y-%m-%d')\n             ) for i in range(4)\n         ]\n         seeded_datasets = self.seed(datasets)\n@@ -74,7 +74,7 @@ def run(self):\n                 description=f'Description for feature model {i+1}',\n                 publication_type=PublicationType.SOFTWARE_DOCUMENTATION,\n                 publication_doi=f'10.1234/fm{i+1}',\n-                tags='tag1, tag2',\n+                tags='tag1, tag2' if i < 6 else \"tag3, tag4\",\n                 uvl_version='1.0'\n             ) for i in range(12)\n         ]\n@@ -104,7 +104,7 @@ def run(self):\n         working_dir = os.getenv('WORKING_DIR', '')\n         src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n         for i in range(12):\n-            file_name = f'file{i+1}.uvl'\n+            file_name = 'invalidfile.uvl' if i == 11 else f'file{i+1}.uvl'\n             feature_model = seeded_feature_models[i]\n             dataset = next(ds for ds in seeded_datasets if ds.id == feature_model.data_set_id)\n             user_id = dataset.user_id"
      },
      {
        "sha": "82359912275afd2d400f85b55b13e522fbee111c",
        "filename": "app/modules/dataset/uvl_examples/invalidfile.uvl",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fdataset%2Fuvl_examples%2Finvalidfile.uvl",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fdataset%2Fuvl_examples%2Finvalidfile.uvl",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Finvalidfile.uvl?ref=b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d",
        "patch": "@@ -0,0 +1,2 @@\n+asdsd\n+asdsd\n\\ No newline at end of file"
      },
      {
        "sha": "594c9cd97bc5b0b5f213233ada554d759096f6ab",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d",
        "patch": "@@ -318,16 +318,24 @@ function clearFilters() {\n     // Reset the number of uvl models filters\n     let minUvlInput = document.querySelector('#min_uvl');\n     minUvlInput.value = \"\";\n+    minUvlInput.min = \"\"\n+    minUvlInput.max = \"\"\n \n     let maxUvlInput = document.querySelector('#max_uvl');\n     maxUvlInput.value = \"\";\n-    \n+    maxUvlInput.min = \"\"\n+    maxUvlInput.max = \"\"\n+\n     // Reset the number of configurations filters\n     let maxConfigurationsInput = document.querySelector('#max_num_configurations');\n     maxConfigurationsInput.value = \"\";\n-\n+    maxConfigurationsInput.min = \"\"\n+    maxConfigurationsInput.max = \"\"\n+    \n     let minConfigurationsInput = document.querySelector('#min_num_configurations');\n     minConfigurationsInput.value = \"\";\n+    minConfigurationsInput.min = \"\"\n+    minConfigurationsInput.max = \"\"\n \n     // Reset the sorting option\n     let sortingOptions = document.querySelectorAll('[name=\"sorting\"]');"
      },
      {
        "sha": "1b88d8e17d4fa9a210de538fd2b77a258a7cac69",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d",
        "patch": "@@ -13,6 +13,7 @@ def safe_parse_date(date, date_format, default_date=None):\n     try:\n         return datetime.strptime(date, date_format)\n     except ValueError:\n+        print(\"error\")\n         return default_date\n \n \n@@ -82,11 +83,13 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         date_format = '%Y-%m-%d'\n         if start_date:\n             date_obj = safe_parse_date(start_date, date_format)\n-            query = query.filter(func.date(DataSet.created_at) >= date_obj)\n+            if date_obj is not None:\n+                query = query.filter(func.date(DataSet.created_at) >= date_obj)\n \n         if end_date:\n             date_obj = safe_parse_date(end_date, date_format)\n-            query = query.filter(func.date(DataSet.created_at) <= date_obj)\n+            if date_obj is not None:\n+                query = query.filter(func.date(DataSet.created_at) <= date_obj)\n \n         # Realizamos la uni\u00f3n con Hubfile a trav\u00e9s de FeatureModel\n         query = query.join(FeatureModel, FeatureModel.data_set_id == DataSet.id)  # Uni\u00f3n con FeatureModel"
      },
      {
        "sha": "cadcc2e70e012d4e88f950bd432f2292e41e9238",
        "filename": "app/modules/explore/tests/test_selenium.py",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py?ref=b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d",
        "patch": "@@ -0,0 +1,143 @@\n+# Generated by Selenium IDE\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.support.ui import WebDriverWait\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+import time\n+\n+\n+def wait_for_page_to_load(driver, timeout=4):\n+    WebDriverWait(driver, timeout).until(\n+        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+    )\n+\n+\n+def wait_datasets_to_change():\n+    # There is no real alternative to this\n+    time.sleep(0.5)\n+\n+\n+def set_input(driver, input, value):\n+    query_field = driver.find_element(By.ID, input)\n+\n+    driver.execute_script(\"\"\"\n+        arguments[0].value = arguments[1];\n+        arguments[0].dispatchEvent(new Event('input', { bubbles: true }));\n+    \"\"\", query_field, value)\n+\n+\n+def set_checkbox(driver, input, value):\n+    query_field = driver.find_element(By.ID, input)\n+\n+    driver.execute_script(\"\"\"\n+        arguments[0].checked = arguments[1];\n+        arguments[0].dispatchEvent(new Event('input', { bubbles: true }));\n+    \"\"\", query_field, value)\n+\n+\n+def check_num_datasets(driver, expected):\n+    wait_datasets_to_change()\n+    datasets = driver.find_element(By.ID, \"results\").find_elements(By.XPATH, \"./*\")\n+    assert len(datasets) == expected, f\"Expected {expected} datasets but found {len(datasets)}\"\n+\n+\n+def test_query():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"sample dataset 1\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"sample dataset 2\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"sample dataset 3\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"sample dataset 4\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"tag1\")\n+    check_num_datasets(driver, 2)\n+\n+    close_driver(driver)\n+\n+\n+def test_filters():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+\n+    set_checkbox(driver, \"by_valid_uvls\", True)\n+    check_num_datasets(driver, 3)\n+    set_checkbox(driver, \"by_valid_uvls\", False)\n+\n+    set_input(driver, \"start_date\", \"2020-01-01\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"start_date\", \"2020-02-02\")\n+    check_num_datasets(driver, 3)\n+\n+    set_input(driver, \"start_date\", \"2021-02-02\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"start_date\", \"2022-02-02\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"start_date\", \"2023-02-02\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"start_date\", \"2020-02-02\")\n+    set_input(driver, \"end_date\", \"2022-01-01\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"start_date\", \"\")\n+    set_input(driver, \"end_date\", \"\")\n+\n+    set_input(driver, \"min_uvl\", \"3\")\n+    set_input(driver, \"max_uvl\", \"3\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"min_num_configurations\", \"25\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"min_num_configurations\", \"24\")\n+    set_input(driver, \"max_num_configurations\", \"25\")\n+    check_num_datasets(driver, 4)\n+\n+    close_driver(driver)\n+\n+\n+def test_publication_type():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+\n+    set_input(driver, \"publication_type\", \"asd\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"publication_type\", \"none\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"publication_type\", \"book\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"publication_type\", \"datamanagementplan\")\n+    check_num_datasets(driver, 2)\n+\n+    close_driver(driver)\n+\n+\n+test_query()\n+\n+\n+test_filters()\n+\n+\n+test_publication_type()"
      },
      {
        "sha": "d397fa017477804224020220138763650260d162",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "modified",
        "additions": 121,
        "deletions": 14,
        "changes": 135,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d",
        "patch": "@@ -11,7 +11,8 @@ def test_client(test_client):\n     with test_client.application.app_context():\n         create_dataset_db(1, PublicationType.BOOK, \"tag1,tag2\")\n         create_dataset_db(2, PublicationType.ANNOTATION_COLLECTION, \"tag2\")\n-        create_dataset_db(3, PublicationType.BOOK)\n+        create_dataset_db(3, PublicationType.BOOK, date=\"2020-1-1\")\n+        create_dataset_db(4, valid=False)\n \n         pass\n \n@@ -36,43 +37,149 @@ def test_explore_post(test_client):\n \n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n-    assert len(response.get_json()) == 3, \"Wrong number of datasets\"\n+    assert len(response.get_json()) == 4, \"Wrong number of datasets\"\n \n \n def test_explore_filter_num_uvls_post(test_client):\n-    \"\"\"\n-    Tests access to explore POST request with a filter.\n-    \"\"\"\n-\n-    search_criteria = get_search_criteria(max_uvl=\"1\")\n+    search_criteria = get_search_criteria(min_uvl=\"1\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_ds = len(response.get_json())\n-    assert num_ds == 3, f\"Wrong number of datasets: {num_ds}\"\n+    assert num_ds == 4, f\"Wrong number of datasets: {num_ds}\"\n \n     search_criteria = get_search_criteria(max_uvl=\"0\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_ds = len(response.get_json())\n     assert num_ds == 0, f\"Wrong number of datasets: {num_ds}\"\n \n+    wrong_num = \"notanumber\"\n+    search_criteria = get_search_criteria(max_uvl=wrong_num, min_uvl=wrong_num)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n \n-def test_explore_filter_num_configurations_post(test_client):\n-    \"\"\"\n-    Tests access to explore POST request with a filter.\n-    \"\"\"\n \n+def test_explore_filter_num_configurations_post(test_client):\n     search_criteria = get_search_criteria(min_num_configurations=\"1\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_conf = len(response.get_json())\n-    assert num_conf == 3, f\"Wrong number of datasets: {num_conf}\"\n+    assert num_conf == 4, f\"Wrong number of datasets: {num_conf}\"\n \n     search_criteria = get_search_criteria(max_num_configurations=\"0\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_conf = len(response.get_json())\n-    assert num_conf == 0, f\"Wrong number of datasets: {num_conf}\"\n+    assert num_conf == 1, f\"Wrong number of datasets: {num_conf}\"\n+\n+    search_criteria = get_search_criteria(min_num_configurations=\"1\", max_num_configurations=\"30\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_conf = len(response.get_json())\n+    assert num_conf == 4, f\"Wrong number of datasets: {num_conf}\"\n+\n+    wrong_num = \"notanumber\"\n+    search_criteria = get_search_criteria(min_num_configurations=wrong_num, max_num_configurations=wrong_num)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+\n+\n+def test_explore_filter_date_post(test_client):\n+    # Date formate: %Y-%m-%d\n+    search_criteria = get_search_criteria(start_date=\"2020-2-2\", end_date=\"2025-1-1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 3, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(start_date=\"2025-1-1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 0, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(end_date=\"2020-2-2\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets: {num}\"\n+\n+    wrong_date = \"notadate\"\n+    search_criteria = get_search_criteria(start_date=wrong_date, end_date=wrong_date)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+\n+\n+def test_explore_filter_publication_type_post(test_client):\n+    search_criteria = get_search_criteria(publication_type=\"book\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 2, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(publication_type=\"any\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n+\n+    wrong_publication_type = \"ERROR\"\n+    search_criteria = get_search_criteria(publication_type=wrong_publication_type)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_filter_query_post(test_client):\n+    search_criteria = get_search_criteria(query=\"Sample dataset 1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets: {num}\"\n+\n+    dataset_not_exists = \"Sample dataset wrong\"\n+    search_criteria = get_search_criteria(query=dataset_not_exists)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 0, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_mixed_filter_post(test_client):\n+    search_criteria = get_search_criteria(query=\"Sample dataset 3\", end_date=\"2020-2-2\", publication_type=\"book\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(query=\"Sample dataset 3\", end_date=\"2020-2-2\", publication_type=\"none\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 0, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_filter_by_valid_uvl_post(test_client):\n+    search_criteria = get_search_criteria(by_valid_uvls=\"on\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 3, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(by_valid_uvls=\"off\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_soring_post(test_client):\n+    search_criteria = get_search_criteria(sorting=\"oldest\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n \n \n def get_search_criteria(query=\"\", sorting=\"newest\", publication_type=\"any\","
      },
      {
        "sha": "9d8b6798313ec2cf760fa26da6648582449ae34a",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 14,
        "deletions": 25,
        "changes": 39,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d",
        "patch": "@@ -5,7 +5,6 @@\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n from flamapy.core.discover import DiscoverMetamodels\n-from flamapy.core.exceptions import OperationNotFound, ConfigurationNotFound\n import tempfile\n import os\n \n@@ -57,6 +56,7 @@ def syntaxError(self, recognizer, offendingSymbol, line, column, msg, e):\n         parser.addErrorListener(error_listener)\n \n         # tree = parser.featureModel()\n+        parser.featureModel()\n \n         if error_listener.errors:\n             return jsonify({\"errors\": error_listener.errors}), 400\n@@ -134,7 +134,6 @@ def to_cnf(file_id):\n         file_name = hubfile.name\n         directory_path = \"app/modules/dataset/uvl_examples\"\n         file_path = os.path.join(directory_path, file_name)\n-\n         if not os.path.isfile(file_path):\n             raise NotFound(f\"File {file_name} not found\")\n \n@@ -156,26 +155,16 @@ def to_cnf(file_id):\n \n @flamapy_bp.route('/flamapy/num_configurations/<int:file_id>', methods=['GET'])\n def get_num_configurations(file_id):\n-    try:\n-        hubfile = HubfileService().get_or_404(file_id)\n-        file_name = hubfile.name\n-        directory_path = \"app/modules/dataset/uvl_examples\"\n-        file_path = os.path.join(directory_path, file_name)\n-        # Agrega un mensaje de depuraci\u00f3n\n-        if not os.path.isfile(file_path):\n-            raise NotFound(f\"File {file_name} not found\")\n-\n-        # Initiallize the dicover metamodel\n-        dm = DiscoverMetamodels()\n-        result = dm.use_operation_from_file(\"PySATConfigurationsNumber\", file_path)\n-\n-        return jsonify({\"result\": result}), 200\n-\n-    except NotFound as e:\n-        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n-    except OperationNotFound as e:\n-        return jsonify({\"error\": str(e).replace(\"Operation not found: \", \"\")}), 500\n-    except ConfigurationNotFound as e:\n-        return jsonify({\"error\": str(e).replace(\"Configuration not found: \", \"\")}), 500\n-    except Exception as e:\n-        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n+    (_, status_code) = check_uvl(file_id)\n+    if status_code != 200:\n+        return jsonify({\"error\": \"Internal error\"}), 500\n+    hubfile = HubfileService().get_or_404(file_id)\n+    file_name = hubfile.name\n+    directory_path = \"app/modules/dataset/uvl_examples\"\n+    file_path = os.path.join(directory_path, file_name)\n+\n+    # Initiallize the dicover metamodel\n+    dm = DiscoverMetamodels()\n+    result = dm.use_operation_from_file(\"PySATConfigurationsNumber\", file_path)\n+\n+    return jsonify({\"result\": result}), 200"
      },
      {
        "sha": "ced65fb82262d85f183343fc6ebe3637e1569816",
        "filename": "app/modules/flamapy/tests/test_unit.py",
        "status": "modified",
        "additions": 30,
        "deletions": 4,
        "changes": 34,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py?ref=b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d",
        "patch": "@@ -12,6 +12,8 @@ def test_client(test_client):\n     \"\"\"\n     with test_client.application.app_context():\n         create_dataset_db(1)\n+        create_dataset_db(2, valid=False)\n+        create_dataset_db(3, should_file_exist=False)\n         pass\n \n     yield test_client\n@@ -27,6 +29,25 @@ def test_sample_assertion(test_client):\n     assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\"\n \n \n+def test_valid_uvl_get(test_client):\n+    valid_uvl_file_id = 1\n+    valid_uvl_test(test_client, valid_uvl_file_id, 200)\n+    file_id_not_exists = 10\n+    valid_uvl_test(test_client, file_id_not_exists, 500)\n+    invalid_uvl_file_id = 2\n+    valid_uvl_test(test_client, invalid_uvl_file_id, 400)\n+    file_doesnt_exist = 3\n+    valid_uvl_test(test_client, file_doesnt_exist, 500)\n+\n+\n+def valid_uvl_test(client, file_id, expected_code):\n+    response = client.get(\"/flamapy/check_uvl/\" + str(file_id))\n+    msg = \"Get valid uvl of file \" + str(file_id) + \" responded \" \\\n+        + str(response.status_code) + \" but expected \" + str(expected_code)\n+    print(response.get_json())\n+    assert response.status_code == expected_code, msg\n+\n+\n # TEST DE GLENCOE\n @pytest.fixture\n def client():\n@@ -209,12 +230,17 @@ def test_num_configurations_get(test_client):\n     \"\"\"\n     Tests GET request of num of configurations of given file ids.\n     \"\"\"\n-\n-    num_configurations(test_client, 1, 200)\n-    num_configurations(test_client, 2, 404)\n+    file_id_exists = 1\n+    num_configurations_test(test_client, file_id_exists, 200)\n+    file_id_not_exists = 10\n+    num_configurations_test(test_client, file_id_not_exists, 500)\n+    invalid_uvl_file_id = 2\n+    num_configurations_test(test_client, invalid_uvl_file_id, 500)\n+    file_doesnt_exist = 3\n+    num_configurations_test(test_client, file_doesnt_exist, 500)\n \n \n-def num_configurations(client, file_id, expected_code):\n+def num_configurations_test(client, file_id, expected_code):\n     response = client.get(\"/flamapy/num_configurations/\" + str(file_id))\n     msg = \"Get num configurations of file \" + str(file_id) + \" responded \" \\\n         + str(response.status_code) + \" but expected \" + str(expected_code)"
      },
      {
        "sha": "48baa2232827d10d5af1a6dd8c25f05e567094bb",
        "filename": "app/modules/hubfile/services.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fhubfile%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d/app%2Fmodules%2Fhubfile%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fhubfile%2Fservices.py?ref=b6f3103f0a120ecb5ab90a9a6c49bfa5baf77d3d",
        "patch": "@@ -28,7 +28,7 @@ def get_path_by_hubfile(self, hubfile: Hubfile) -> str:\n         hubfile_dataset = self.get_dataset_by_hubfile(hubfile)\n         working_dir = os.getenv('WORKING_DIR')\n \n-        path = os.path.join(working_dir,\n+        path = os.path.join(\"\" if working_dir is None else working_dir,\n                             'uploads',\n                             f'user_{hubfile_user.id}',\n                             f'dataset_{hubfile_dataset.id}',"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/86",
    "id": 2220589633,
    "node_id": "PR_kwDONB39G86EW4JB",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/86",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/86.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/86.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/86",
    "number": 86,
    "state": "closed",
    "locked": false,
    "title": "Test pr",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-06T17:50:50Z",
    "updated_at": "2024-12-06T18:12:04Z",
    "closed_at": "2024-12-06T18:11:52Z",
    "merged_at": null,
    "merge_commit_sha": "3451f5e3a7a0cf0bd5102c9242c8fe01aab46c35",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/86/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/86/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/86/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/349282ed90f82e85c0a043a63d8037f8537f4adc",
    "head": {
      "label": "TostaHub:test",
      "ref": "test",
      "sha": "349282ed90f82e85c0a043a63d8037f8537f4adc",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "305af88a63a00c104f36c5c90c53c4f5414978ec",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/86"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/86"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/86"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/86/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/86/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/86/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/349282ed90f82e85c0a043a63d8037f8537f4adc"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "5196defbb616ba9850c8423e77abd0b013257ff4",
        "filename": "app/modules/common/dbutils.py",
        "status": "modified",
        "additions": 23,
        "deletions": 20,
        "changes": 43,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fcommon%2Fdbutils.py?ref=349282ed90f82e85c0a043a63d8037f8537f4adc",
        "patch": "@@ -13,7 +13,8 @@\n from dotenv import load_dotenv\n \n \n-def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN, tags=\"\"):\n+def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN, tags=\"\",\n+                      date=\"\", valid=True, should_file_exist=True):\n     user_test = User(email=f'user{id}@example.com', password='test1234')\n     db.session.add(user_test)\n     db.session.commit()\n@@ -26,7 +27,7 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n             deposition_id=id,\n             title=f'Sample dataset {id}',\n             description=f'Description for dataset {id}',\n-            publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n+            publication_type=publication_type,\n             publication_doi=f'10.1234/dataset{id}',\n             dataset_doi=f'10.1234/dataset{id}',\n             tags='tag1, tag2',\n@@ -35,10 +36,11 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n     db.session.add(ds_meta_data)\n     db.session.commit()\n \n+    created_at = datetime.now(timezone.utc) if date == \"\" else datetime.strptime(date, '%Y-%m-%d')\n     dataset = DataSet(\n             user_id=user_test.id,\n             ds_meta_data_id=ds_meta_data.id,\n-            created_at=datetime.now(timezone.utc)\n+            created_at=created_at\n         )\n     db.session.add(dataset)\n     db.session.commit()\n@@ -47,7 +49,7 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n             uvl_filename=f'file{id}.uvl',\n             title=f'Feature Model {id}',\n             description=f'Description for feature model {id}',\n-            publication_type=PublicationType.SOFTWARE_DOCUMENTATION,\n+            publication_type=publication_type,\n             publication_doi='10.1234/fm1',\n             tags=tags,\n             uvl_version='1.0'\n@@ -62,22 +64,23 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n     db.session.add(feature_model)\n     db.session.commit()\n \n-    load_dotenv()\n-    working_dir = os.getenv('WORKING_DIR', '')\n-    file_name = f'file{id}.uvl'\n-    src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n+    if should_file_exist:\n+        load_dotenv()\n+        working_dir = os.getenv('WORKING_DIR', '')\n+        file_name = f'file{id % 12}.uvl' if valid else 'invalidfile.uvl'\n+        src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n \n-    dest_folder = os.path.join(working_dir, 'uploads', f'user_{user_test.id}', f'dataset_{dataset.id}')\n-    os.makedirs(dest_folder, exist_ok=True)\n-    shutil.copy(os.path.join(src_folder, file_name), dest_folder)\n+        dest_folder = os.path.join(working_dir, 'uploads', f'user_{user_test.id}', f'dataset_{dataset.id}')\n+        os.makedirs(dest_folder, exist_ok=True)\n+        shutil.copy(os.path.join(src_folder, file_name), dest_folder)\n \n-    file_path = os.path.join(dest_folder, file_name)\n+        file_path = os.path.join(dest_folder, file_name)\n \n-    uvl_file = Hubfile(\n-        name=file_name,\n-        checksum=f'checksum{id}',\n-        size=os.path.getsize(file_path),\n-        feature_model_id=feature_model.id\n-    )\n-    db.session.add(uvl_file)\n-    db.session.commit()\n+        uvl_file = Hubfile(\n+            name=file_name,\n+            checksum=f'checksum{id}',\n+            size=os.path.getsize(file_path),\n+            feature_model_id=feature_model.id\n+        )\n+        db.session.add(uvl_file)\n+        db.session.commit()"
      },
      {
        "sha": "38d38ef4760f8d902f38176cf3492f36613a88e4",
        "filename": "app/modules/dataset/seeders.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fdataset%2Fseeders.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fdataset%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fseeders.py?ref=349282ed90f82e85c0a043a63d8037f8537f4adc",
        "patch": "@@ -10,7 +10,7 @@\n     PublicationType,\n     DSMetrics,\n     Author)\n-from datetime import datetime, timezone\n+from datetime import datetime\n from dotenv import load_dotenv\n \n \n@@ -36,10 +36,10 @@ def run(self):\n                 deposition_id=1 + i,\n                 title=f'Sample dataset {i+1}',\n                 description=f'Description for dataset {i+1}',\n-                publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN if i % 2 == 0 else PublicationType.BOOK,\n                 publication_doi=f'10.1234/dataset{i+1}',\n                 dataset_doi=f'10.1234/dataset{i+1}',\n-                tags='tag1, tag2',\n+                tags='tag1, tag2' if i < 2 else \"tag3, tag4\",\n                 ds_metrics_id=seeded_ds_metrics.id\n             ) for i in range(4)\n         ]\n@@ -61,7 +61,7 @@ def run(self):\n             DataSet(\n                 user_id=user1.id if i % 2 == 0 else user2.id,\n                 ds_meta_data_id=seeded_ds_meta_data[i].id,\n-                created_at=datetime.now(timezone.utc)\n+                created_at=datetime.strptime(f'202{i}-1-1', '%Y-%m-%d')\n             ) for i in range(4)\n         ]\n         seeded_datasets = self.seed(datasets)\n@@ -74,7 +74,7 @@ def run(self):\n                 description=f'Description for feature model {i+1}',\n                 publication_type=PublicationType.SOFTWARE_DOCUMENTATION,\n                 publication_doi=f'10.1234/fm{i+1}',\n-                tags='tag1, tag2',\n+                tags='tag1, tag2' if i < 6 else \"tag3, tag4\",\n                 uvl_version='1.0'\n             ) for i in range(12)\n         ]\n@@ -104,7 +104,7 @@ def run(self):\n         working_dir = os.getenv('WORKING_DIR', '')\n         src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n         for i in range(12):\n-            file_name = f'file{i+1}.uvl'\n+            file_name = 'invalidfile.uvl' if i == 11 else f'file{i+1}.uvl'\n             feature_model = seeded_feature_models[i]\n             dataset = next(ds for ds in seeded_datasets if ds.id == feature_model.data_set_id)\n             user_id = dataset.user_id"
      },
      {
        "sha": "82359912275afd2d400f85b55b13e522fbee111c",
        "filename": "app/modules/dataset/uvl_examples/invalidfile.uvl",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fdataset%2Fuvl_examples%2Finvalidfile.uvl",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fdataset%2Fuvl_examples%2Finvalidfile.uvl",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Finvalidfile.uvl?ref=349282ed90f82e85c0a043a63d8037f8537f4adc",
        "patch": "@@ -0,0 +1,2 @@\n+asdsd\n+asdsd\n\\ No newline at end of file"
      },
      {
        "sha": "594c9cd97bc5b0b5f213233ada554d759096f6ab",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=349282ed90f82e85c0a043a63d8037f8537f4adc",
        "patch": "@@ -318,16 +318,24 @@ function clearFilters() {\n     // Reset the number of uvl models filters\n     let minUvlInput = document.querySelector('#min_uvl');\n     minUvlInput.value = \"\";\n+    minUvlInput.min = \"\"\n+    minUvlInput.max = \"\"\n \n     let maxUvlInput = document.querySelector('#max_uvl');\n     maxUvlInput.value = \"\";\n-    \n+    maxUvlInput.min = \"\"\n+    maxUvlInput.max = \"\"\n+\n     // Reset the number of configurations filters\n     let maxConfigurationsInput = document.querySelector('#max_num_configurations');\n     maxConfigurationsInput.value = \"\";\n-\n+    maxConfigurationsInput.min = \"\"\n+    maxConfigurationsInput.max = \"\"\n+    \n     let minConfigurationsInput = document.querySelector('#min_num_configurations');\n     minConfigurationsInput.value = \"\";\n+    minConfigurationsInput.min = \"\"\n+    minConfigurationsInput.max = \"\"\n \n     // Reset the sorting option\n     let sortingOptions = document.querySelectorAll('[name=\"sorting\"]');"
      },
      {
        "sha": "1b88d8e17d4fa9a210de538fd2b77a258a7cac69",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=349282ed90f82e85c0a043a63d8037f8537f4adc",
        "patch": "@@ -13,6 +13,7 @@ def safe_parse_date(date, date_format, default_date=None):\n     try:\n         return datetime.strptime(date, date_format)\n     except ValueError:\n+        print(\"error\")\n         return default_date\n \n \n@@ -82,11 +83,13 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         date_format = '%Y-%m-%d'\n         if start_date:\n             date_obj = safe_parse_date(start_date, date_format)\n-            query = query.filter(func.date(DataSet.created_at) >= date_obj)\n+            if date_obj is not None:\n+                query = query.filter(func.date(DataSet.created_at) >= date_obj)\n \n         if end_date:\n             date_obj = safe_parse_date(end_date, date_format)\n-            query = query.filter(func.date(DataSet.created_at) <= date_obj)\n+            if date_obj is not None:\n+                query = query.filter(func.date(DataSet.created_at) <= date_obj)\n \n         # Realizamos la uni\u00f3n con Hubfile a trav\u00e9s de FeatureModel\n         query = query.join(FeatureModel, FeatureModel.data_set_id == DataSet.id)  # Uni\u00f3n con FeatureModel"
      },
      {
        "sha": "cadcc2e70e012d4e88f950bd432f2292e41e9238",
        "filename": "app/modules/explore/tests/test_selenium.py",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py?ref=349282ed90f82e85c0a043a63d8037f8537f4adc",
        "patch": "@@ -0,0 +1,143 @@\n+# Generated by Selenium IDE\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.support.ui import WebDriverWait\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+import time\n+\n+\n+def wait_for_page_to_load(driver, timeout=4):\n+    WebDriverWait(driver, timeout).until(\n+        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+    )\n+\n+\n+def wait_datasets_to_change():\n+    # There is no real alternative to this\n+    time.sleep(0.5)\n+\n+\n+def set_input(driver, input, value):\n+    query_field = driver.find_element(By.ID, input)\n+\n+    driver.execute_script(\"\"\"\n+        arguments[0].value = arguments[1];\n+        arguments[0].dispatchEvent(new Event('input', { bubbles: true }));\n+    \"\"\", query_field, value)\n+\n+\n+def set_checkbox(driver, input, value):\n+    query_field = driver.find_element(By.ID, input)\n+\n+    driver.execute_script(\"\"\"\n+        arguments[0].checked = arguments[1];\n+        arguments[0].dispatchEvent(new Event('input', { bubbles: true }));\n+    \"\"\", query_field, value)\n+\n+\n+def check_num_datasets(driver, expected):\n+    wait_datasets_to_change()\n+    datasets = driver.find_element(By.ID, \"results\").find_elements(By.XPATH, \"./*\")\n+    assert len(datasets) == expected, f\"Expected {expected} datasets but found {len(datasets)}\"\n+\n+\n+def test_query():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"sample dataset 1\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"sample dataset 2\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"sample dataset 3\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"sample dataset 4\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"tag1\")\n+    check_num_datasets(driver, 2)\n+\n+    close_driver(driver)\n+\n+\n+def test_filters():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+\n+    set_checkbox(driver, \"by_valid_uvls\", True)\n+    check_num_datasets(driver, 3)\n+    set_checkbox(driver, \"by_valid_uvls\", False)\n+\n+    set_input(driver, \"start_date\", \"2020-01-01\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"start_date\", \"2020-02-02\")\n+    check_num_datasets(driver, 3)\n+\n+    set_input(driver, \"start_date\", \"2021-02-02\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"start_date\", \"2022-02-02\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"start_date\", \"2023-02-02\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"start_date\", \"2020-02-02\")\n+    set_input(driver, \"end_date\", \"2022-01-01\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"start_date\", \"\")\n+    set_input(driver, \"end_date\", \"\")\n+\n+    set_input(driver, \"min_uvl\", \"3\")\n+    set_input(driver, \"max_uvl\", \"3\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"min_num_configurations\", \"25\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"min_num_configurations\", \"24\")\n+    set_input(driver, \"max_num_configurations\", \"25\")\n+    check_num_datasets(driver, 4)\n+\n+    close_driver(driver)\n+\n+\n+def test_publication_type():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+\n+    set_input(driver, \"publication_type\", \"asd\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"publication_type\", \"none\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"publication_type\", \"book\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"publication_type\", \"datamanagementplan\")\n+    check_num_datasets(driver, 2)\n+\n+    close_driver(driver)\n+\n+\n+test_query()\n+\n+\n+test_filters()\n+\n+\n+test_publication_type()"
      },
      {
        "sha": "c40b1d455d9e1047e6abdb311418f23a1837300c",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "modified",
        "additions": 121,
        "deletions": 14,
        "changes": 135,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=349282ed90f82e85c0a043a63d8037f8537f4adc",
        "patch": "@@ -11,7 +11,8 @@ def test_client(test_client):\n     with test_client.application.app_context():\n         create_dataset_db(1, PublicationType.BOOK, \"tag1,tag2\")\n         create_dataset_db(2, PublicationType.ANNOTATION_COLLECTION, \"tag2\")\n-        create_dataset_db(3, PublicationType.BOOK)\n+        create_dataset_db(3, PublicationType.BOOK, date=\"2020-1-1\")\n+        create_dataset_db(4, valid=False)\n \n         pass\n \n@@ -36,43 +37,149 @@ def test_explore_post(test_client):\n \n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n-    assert len(response.get_json()) == 3, \"Wrong number of datasets\"\n+    assert len(response.get_json()) == 4, \"Wrong number of datasets\"\n \n \n def test_explore_filter_num_uvls_post(test_client):\n-    \"\"\"\n-    Tests access to explore POST request with a filter.\n-    \"\"\"\n-\n-    search_criteria = get_search_criteria(max_uvl=\"1\")\n+    search_criteria = get_search_criteria(min_uvl=\"1\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_ds = len(response.get_json())\n-    assert num_ds == 3, f\"Wrong number of datasets: {num_ds}\"\n+    assert num_ds == 4, f\"Wrong number of datasets: {num_ds}\"\n \n     search_criteria = get_search_criteria(max_uvl=\"0\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_ds = len(response.get_json())\n     assert num_ds == 0, f\"Wrong number of datasets: {num_ds}\"\n \n+    wrong_num = \"notanumber\"\n+    search_criteria = get_search_criteria(max_uvl=wrong_num, min_uvl=wrong_num)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n \n-def test_explore_filter_num_configurations_post(test_client):\n-    \"\"\"\n-    Tests access to explore POST request with a filter.\n-    \"\"\"\n \n+def test_explore_filter_num_configurations_post(test_client):\n     search_criteria = get_search_criteria(min_num_configurations=\"1\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_conf = len(response.get_json())\n-    assert num_conf == 3, f\"Wrong number of datasets: {num_conf}\"\n+    assert num_conf == 4, f\"Wrong number of datasets: {num_conf}\"\n \n     search_criteria = get_search_criteria(max_num_configurations=\"0\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_conf = len(response.get_json())\n-    assert num_conf == 0, f\"Wrong number of datasets: {num_conf}\"\n+    assert num_conf == 1, f\"Wrong number of datasets: {num_conf}\"\n+\n+    search_criteria = get_search_criteria(min_num_configurations=\"1\", max_num_configurations=\"30\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_conf = len(response.get_json())\n+    assert num_conf == 4, f\"Wrong number of datasets: {num_conf}\"\n+\n+    wrong_num = \"notanumber\"\n+    search_criteria = get_search_criteria(min_num_configurations=wrong_num, max_num_configurations=wrong_num)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+\n+\n+def test_explore_filter_date_post(test_client):\n+    # Date formate: %Y-%m-%d\n+    search_criteria = get_search_criteria(start_date=\"2020-2-2\", end_date=\"2025-1-1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 3, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(start_date=\"2025-1-1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 0, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(end_date=\"2020-2-2\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets: {num}\"\n+\n+    wrong_date = \"notadate\"\n+    search_criteria = get_search_criteria(start_date=wrong_date, end_date=wrong_date)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+\n+\n+def test_explore_filter_publication_type_post(test_client):\n+    search_criteria = get_search_criteria(publication_type=\"book\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 2, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(publication_type=\"any\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n+\n+    wrong_publication_type = \"ERROR\"\n+    search_criteria = get_search_criteria(publication_type=wrong_publication_type)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_filter_query_post(test_client):\n+    search_criteria = get_search_criteria(query=\"Sample dataset 1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets: {num}\"\n+\n+    dataset_not_exists = \"Sample dataset wrong\"\n+    search_criteria = get_search_criteria(query=dataset_not_exists)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 0, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_mixed_filter_post(test_client):\n+    search_criteria = get_search_criteria(query=\"Sample dataset 3\", end_date=\"2020-2-2\", publication_type=\"book\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(query=\"Sample dataset 3\", end_date=\"2020-2-2\", publication_type=\"none\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 0, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_filter_by_valid_uvl_post(test_client):\n+    search_criteria = get_search_criteria(by_valid_uvls=\"on\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 0, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(by_valid_uvls=\"off\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_soring_post(test_client):\n+    search_criteria = get_search_criteria(sorting=\"oldest\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n \n \n def get_search_criteria(query=\"\", sorting=\"newest\", publication_type=\"any\","
      },
      {
        "sha": "5c76b3a166e3a47646a0d0bb8d10cdf9079c74c5",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 15,
        "deletions": 27,
        "changes": 42,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=349282ed90f82e85c0a043a63d8037f8537f4adc",
        "patch": "@@ -5,7 +5,6 @@\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n from flamapy.core.discover import DiscoverMetamodels\n-from flamapy.core.exceptions import OperationNotFound, ConfigurationNotFound\n import tempfile\n import os\n \n@@ -56,13 +55,13 @@ def syntaxError(self, recognizer, offendingSymbol, line, column, msg, e):\n         parser.removeErrorListeners()\n         parser.addErrorListener(error_listener)\n \n-        # tree = parser.featureModel()\n+        tree = parser.featureModel()\n \n         if error_listener.errors:\n             return jsonify({\"errors\": error_listener.errors}), 400\n \n         # Optional: Print the parse tree\n-        # print(tree.toStringTree(recog=parser))\n+        print(tree.toStringTree(recog=parser))\n \n         return jsonify({\"message\": \"Valid Model\"}), 200\n \n@@ -134,7 +133,6 @@ def to_cnf(file_id):\n         file_name = hubfile.name\n         directory_path = \"app/modules/dataset/uvl_examples\"\n         file_path = os.path.join(directory_path, file_name)\n-\n         if not os.path.isfile(file_path):\n             raise NotFound(f\"File {file_name} not found\")\n \n@@ -156,26 +154,16 @@ def to_cnf(file_id):\n \n @flamapy_bp.route('/flamapy/num_configurations/<int:file_id>', methods=['GET'])\n def get_num_configurations(file_id):\n-    try:\n-        hubfile = HubfileService().get_or_404(file_id)\n-        file_name = hubfile.name\n-        directory_path = \"app/modules/dataset/uvl_examples\"\n-        file_path = os.path.join(directory_path, file_name)\n-        # Agrega un mensaje de depuraci\u00f3n\n-        if not os.path.isfile(file_path):\n-            raise NotFound(f\"File {file_name} not found\")\n-\n-        # Initiallize the dicover metamodel\n-        dm = DiscoverMetamodels()\n-        result = dm.use_operation_from_file(\"PySATConfigurationsNumber\", file_path)\n-\n-        return jsonify({\"result\": result}), 200\n-\n-    except NotFound as e:\n-        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n-    except OperationNotFound as e:\n-        return jsonify({\"error\": str(e).replace(\"Operation not found: \", \"\")}), 500\n-    except ConfigurationNotFound as e:\n-        return jsonify({\"error\": str(e).replace(\"Configuration not found: \", \"\")}), 500\n-    except Exception as e:\n-        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n+    (_, status_code) = check_uvl(file_id)\n+    if status_code != 200:\n+        return jsonify({\"error\": \"Internal error\"}), 500\n+    hubfile = HubfileService().get_by_id(file_id)\n+    file_name = hubfile.name\n+    directory_path = \"app/modules/dataset/uvl_examples\"\n+    file_path = os.path.join(directory_path, file_name)\n+\n+    # Initiallize the dicover metamodel\n+    dm = DiscoverMetamodels()\n+    result = dm.use_operation_from_file(\"PySATConfigurationsNumber\", file_path)\n+\n+    return jsonify({\"result\": result}), 200"
      },
      {
        "sha": "ced65fb82262d85f183343fc6ebe3637e1569816",
        "filename": "app/modules/flamapy/tests/test_unit.py",
        "status": "modified",
        "additions": 30,
        "deletions": 4,
        "changes": 34,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/349282ed90f82e85c0a043a63d8037f8537f4adc/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py?ref=349282ed90f82e85c0a043a63d8037f8537f4adc",
        "patch": "@@ -12,6 +12,8 @@ def test_client(test_client):\n     \"\"\"\n     with test_client.application.app_context():\n         create_dataset_db(1)\n+        create_dataset_db(2, valid=False)\n+        create_dataset_db(3, should_file_exist=False)\n         pass\n \n     yield test_client\n@@ -27,6 +29,25 @@ def test_sample_assertion(test_client):\n     assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\"\n \n \n+def test_valid_uvl_get(test_client):\n+    valid_uvl_file_id = 1\n+    valid_uvl_test(test_client, valid_uvl_file_id, 200)\n+    file_id_not_exists = 10\n+    valid_uvl_test(test_client, file_id_not_exists, 500)\n+    invalid_uvl_file_id = 2\n+    valid_uvl_test(test_client, invalid_uvl_file_id, 400)\n+    file_doesnt_exist = 3\n+    valid_uvl_test(test_client, file_doesnt_exist, 500)\n+\n+\n+def valid_uvl_test(client, file_id, expected_code):\n+    response = client.get(\"/flamapy/check_uvl/\" + str(file_id))\n+    msg = \"Get valid uvl of file \" + str(file_id) + \" responded \" \\\n+        + str(response.status_code) + \" but expected \" + str(expected_code)\n+    print(response.get_json())\n+    assert response.status_code == expected_code, msg\n+\n+\n # TEST DE GLENCOE\n @pytest.fixture\n def client():\n@@ -209,12 +230,17 @@ def test_num_configurations_get(test_client):\n     \"\"\"\n     Tests GET request of num of configurations of given file ids.\n     \"\"\"\n-\n-    num_configurations(test_client, 1, 200)\n-    num_configurations(test_client, 2, 404)\n+    file_id_exists = 1\n+    num_configurations_test(test_client, file_id_exists, 200)\n+    file_id_not_exists = 10\n+    num_configurations_test(test_client, file_id_not_exists, 500)\n+    invalid_uvl_file_id = 2\n+    num_configurations_test(test_client, invalid_uvl_file_id, 500)\n+    file_doesnt_exist = 3\n+    num_configurations_test(test_client, file_doesnt_exist, 500)\n \n \n-def num_configurations(client, file_id, expected_code):\n+def num_configurations_test(client, file_id, expected_code):\n     response = client.get(\"/flamapy/num_configurations/\" + str(file_id))\n     msg = \"Get num configurations of file \" + str(file_id) + \" responded \" \\\n         + str(response.status_code) + \" but expected \" + str(expected_code)"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/85",
    "id": 2220522914,
    "node_id": "PR_kwDONB39G86EWn2i",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/85",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/85.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/85.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/85",
    "number": 85,
    "state": "closed",
    "locked": false,
    "title": "Explore selenium tests",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-06T17:12:39Z",
    "updated_at": "2024-12-07T11:21:22Z",
    "closed_at": "2024-12-07T11:21:17Z",
    "merged_at": "2024-12-07T11:21:17Z",
    "merge_commit_sha": "8cdbb354f40086953752745417d8f5dde942f8de",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/85/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/85/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/85/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/f3ce29505ea540778dbe1f4a642f2b401f5b67d5",
    "head": {
      "label": "TostaHub:exploreSeleniumText",
      "ref": "exploreSeleniumText",
      "sha": "f3ce29505ea540778dbe1f4a642f2b401f5b67d5",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "305af88a63a00c104f36c5c90c53c4f5414978ec",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/85"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/85"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/85"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/85/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/85/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/85/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/f3ce29505ea540778dbe1f4a642f2b401f5b67d5"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "5196defbb616ba9850c8423e77abd0b013257ff4",
        "filename": "app/modules/common/dbutils.py",
        "status": "modified",
        "additions": 23,
        "deletions": 20,
        "changes": 43,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fcommon%2Fdbutils.py?ref=f3ce29505ea540778dbe1f4a642f2b401f5b67d5",
        "patch": "@@ -13,7 +13,8 @@\n from dotenv import load_dotenv\n \n \n-def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN, tags=\"\"):\n+def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN, tags=\"\",\n+                      date=\"\", valid=True, should_file_exist=True):\n     user_test = User(email=f'user{id}@example.com', password='test1234')\n     db.session.add(user_test)\n     db.session.commit()\n@@ -26,7 +27,7 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n             deposition_id=id,\n             title=f'Sample dataset {id}',\n             description=f'Description for dataset {id}',\n-            publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n+            publication_type=publication_type,\n             publication_doi=f'10.1234/dataset{id}',\n             dataset_doi=f'10.1234/dataset{id}',\n             tags='tag1, tag2',\n@@ -35,10 +36,11 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n     db.session.add(ds_meta_data)\n     db.session.commit()\n \n+    created_at = datetime.now(timezone.utc) if date == \"\" else datetime.strptime(date, '%Y-%m-%d')\n     dataset = DataSet(\n             user_id=user_test.id,\n             ds_meta_data_id=ds_meta_data.id,\n-            created_at=datetime.now(timezone.utc)\n+            created_at=created_at\n         )\n     db.session.add(dataset)\n     db.session.commit()\n@@ -47,7 +49,7 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n             uvl_filename=f'file{id}.uvl',\n             title=f'Feature Model {id}',\n             description=f'Description for feature model {id}',\n-            publication_type=PublicationType.SOFTWARE_DOCUMENTATION,\n+            publication_type=publication_type,\n             publication_doi='10.1234/fm1',\n             tags=tags,\n             uvl_version='1.0'\n@@ -62,22 +64,23 @@ def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n     db.session.add(feature_model)\n     db.session.commit()\n \n-    load_dotenv()\n-    working_dir = os.getenv('WORKING_DIR', '')\n-    file_name = f'file{id}.uvl'\n-    src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n+    if should_file_exist:\n+        load_dotenv()\n+        working_dir = os.getenv('WORKING_DIR', '')\n+        file_name = f'file{id % 12}.uvl' if valid else 'invalidfile.uvl'\n+        src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n \n-    dest_folder = os.path.join(working_dir, 'uploads', f'user_{user_test.id}', f'dataset_{dataset.id}')\n-    os.makedirs(dest_folder, exist_ok=True)\n-    shutil.copy(os.path.join(src_folder, file_name), dest_folder)\n+        dest_folder = os.path.join(working_dir, 'uploads', f'user_{user_test.id}', f'dataset_{dataset.id}')\n+        os.makedirs(dest_folder, exist_ok=True)\n+        shutil.copy(os.path.join(src_folder, file_name), dest_folder)\n \n-    file_path = os.path.join(dest_folder, file_name)\n+        file_path = os.path.join(dest_folder, file_name)\n \n-    uvl_file = Hubfile(\n-        name=file_name,\n-        checksum=f'checksum{id}',\n-        size=os.path.getsize(file_path),\n-        feature_model_id=feature_model.id\n-    )\n-    db.session.add(uvl_file)\n-    db.session.commit()\n+        uvl_file = Hubfile(\n+            name=file_name,\n+            checksum=f'checksum{id}',\n+            size=os.path.getsize(file_path),\n+            feature_model_id=feature_model.id\n+        )\n+        db.session.add(uvl_file)\n+        db.session.commit()"
      },
      {
        "sha": "38d38ef4760f8d902f38176cf3492f36613a88e4",
        "filename": "app/modules/dataset/seeders.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fdataset%2Fseeders.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fdataset%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fseeders.py?ref=f3ce29505ea540778dbe1f4a642f2b401f5b67d5",
        "patch": "@@ -10,7 +10,7 @@\n     PublicationType,\n     DSMetrics,\n     Author)\n-from datetime import datetime, timezone\n+from datetime import datetime\n from dotenv import load_dotenv\n \n \n@@ -36,10 +36,10 @@ def run(self):\n                 deposition_id=1 + i,\n                 title=f'Sample dataset {i+1}',\n                 description=f'Description for dataset {i+1}',\n-                publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n+                publication_type=PublicationType.DATA_MANAGEMENT_PLAN if i % 2 == 0 else PublicationType.BOOK,\n                 publication_doi=f'10.1234/dataset{i+1}',\n                 dataset_doi=f'10.1234/dataset{i+1}',\n-                tags='tag1, tag2',\n+                tags='tag1, tag2' if i < 2 else \"tag3, tag4\",\n                 ds_metrics_id=seeded_ds_metrics.id\n             ) for i in range(4)\n         ]\n@@ -61,7 +61,7 @@ def run(self):\n             DataSet(\n                 user_id=user1.id if i % 2 == 0 else user2.id,\n                 ds_meta_data_id=seeded_ds_meta_data[i].id,\n-                created_at=datetime.now(timezone.utc)\n+                created_at=datetime.strptime(f'202{i}-1-1', '%Y-%m-%d')\n             ) for i in range(4)\n         ]\n         seeded_datasets = self.seed(datasets)\n@@ -74,7 +74,7 @@ def run(self):\n                 description=f'Description for feature model {i+1}',\n                 publication_type=PublicationType.SOFTWARE_DOCUMENTATION,\n                 publication_doi=f'10.1234/fm{i+1}',\n-                tags='tag1, tag2',\n+                tags='tag1, tag2' if i < 6 else \"tag3, tag4\",\n                 uvl_version='1.0'\n             ) for i in range(12)\n         ]\n@@ -104,7 +104,7 @@ def run(self):\n         working_dir = os.getenv('WORKING_DIR', '')\n         src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n         for i in range(12):\n-            file_name = f'file{i+1}.uvl'\n+            file_name = 'invalidfile.uvl' if i == 11 else f'file{i+1}.uvl'\n             feature_model = seeded_feature_models[i]\n             dataset = next(ds for ds in seeded_datasets if ds.id == feature_model.data_set_id)\n             user_id = dataset.user_id"
      },
      {
        "sha": "82359912275afd2d400f85b55b13e522fbee111c",
        "filename": "app/modules/dataset/uvl_examples/invalidfile.uvl",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fdataset%2Fuvl_examples%2Finvalidfile.uvl",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fdataset%2Fuvl_examples%2Finvalidfile.uvl",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fuvl_examples%2Finvalidfile.uvl?ref=f3ce29505ea540778dbe1f4a642f2b401f5b67d5",
        "patch": "@@ -0,0 +1,2 @@\n+asdsd\n+asdsd\n\\ No newline at end of file"
      },
      {
        "sha": "594c9cd97bc5b0b5f213233ada554d759096f6ab",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=f3ce29505ea540778dbe1f4a642f2b401f5b67d5",
        "patch": "@@ -318,16 +318,24 @@ function clearFilters() {\n     // Reset the number of uvl models filters\n     let minUvlInput = document.querySelector('#min_uvl');\n     minUvlInput.value = \"\";\n+    minUvlInput.min = \"\"\n+    minUvlInput.max = \"\"\n \n     let maxUvlInput = document.querySelector('#max_uvl');\n     maxUvlInput.value = \"\";\n-    \n+    maxUvlInput.min = \"\"\n+    maxUvlInput.max = \"\"\n+\n     // Reset the number of configurations filters\n     let maxConfigurationsInput = document.querySelector('#max_num_configurations');\n     maxConfigurationsInput.value = \"\";\n-\n+    maxConfigurationsInput.min = \"\"\n+    maxConfigurationsInput.max = \"\"\n+    \n     let minConfigurationsInput = document.querySelector('#min_num_configurations');\n     minConfigurationsInput.value = \"\";\n+    minConfigurationsInput.min = \"\"\n+    minConfigurationsInput.max = \"\"\n \n     // Reset the sorting option\n     let sortingOptions = document.querySelectorAll('[name=\"sorting\"]');"
      },
      {
        "sha": "1b88d8e17d4fa9a210de538fd2b77a258a7cac69",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=f3ce29505ea540778dbe1f4a642f2b401f5b67d5",
        "patch": "@@ -13,6 +13,7 @@ def safe_parse_date(date, date_format, default_date=None):\n     try:\n         return datetime.strptime(date, date_format)\n     except ValueError:\n+        print(\"error\")\n         return default_date\n \n \n@@ -82,11 +83,13 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         date_format = '%Y-%m-%d'\n         if start_date:\n             date_obj = safe_parse_date(start_date, date_format)\n-            query = query.filter(func.date(DataSet.created_at) >= date_obj)\n+            if date_obj is not None:\n+                query = query.filter(func.date(DataSet.created_at) >= date_obj)\n \n         if end_date:\n             date_obj = safe_parse_date(end_date, date_format)\n-            query = query.filter(func.date(DataSet.created_at) <= date_obj)\n+            if date_obj is not None:\n+                query = query.filter(func.date(DataSet.created_at) <= date_obj)\n \n         # Realizamos la uni\u00f3n con Hubfile a trav\u00e9s de FeatureModel\n         query = query.join(FeatureModel, FeatureModel.data_set_id == DataSet.id)  # Uni\u00f3n con FeatureModel"
      },
      {
        "sha": "cadcc2e70e012d4e88f950bd432f2292e41e9238",
        "filename": "app/modules/explore/tests/test_selenium.py",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_selenium.py?ref=f3ce29505ea540778dbe1f4a642f2b401f5b67d5",
        "patch": "@@ -0,0 +1,143 @@\n+# Generated by Selenium IDE\n+from selenium.webdriver.common.by import By\n+from selenium.webdriver.support.ui import WebDriverWait\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+import time\n+\n+\n+def wait_for_page_to_load(driver, timeout=4):\n+    WebDriverWait(driver, timeout).until(\n+        lambda driver: driver.execute_script(\"return document.readyState\") == \"complete\"\n+    )\n+\n+\n+def wait_datasets_to_change():\n+    # There is no real alternative to this\n+    time.sleep(0.5)\n+\n+\n+def set_input(driver, input, value):\n+    query_field = driver.find_element(By.ID, input)\n+\n+    driver.execute_script(\"\"\"\n+        arguments[0].value = arguments[1];\n+        arguments[0].dispatchEvent(new Event('input', { bubbles: true }));\n+    \"\"\", query_field, value)\n+\n+\n+def set_checkbox(driver, input, value):\n+    query_field = driver.find_element(By.ID, input)\n+\n+    driver.execute_script(\"\"\"\n+        arguments[0].checked = arguments[1];\n+        arguments[0].dispatchEvent(new Event('input', { bubbles: true }));\n+    \"\"\", query_field, value)\n+\n+\n+def check_num_datasets(driver, expected):\n+    wait_datasets_to_change()\n+    datasets = driver.find_element(By.ID, \"results\").find_elements(By.XPATH, \"./*\")\n+    assert len(datasets) == expected, f\"Expected {expected} datasets but found {len(datasets)}\"\n+\n+\n+def test_query():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+    wait_for_page_to_load(driver)\n+\n+    set_input(driver, \"query\", \"sample dataset 1\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"sample dataset 2\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"sample dataset 3\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"sample dataset 4\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"query\", \"tag1\")\n+    check_num_datasets(driver, 2)\n+\n+    close_driver(driver)\n+\n+\n+def test_filters():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+\n+    set_checkbox(driver, \"by_valid_uvls\", True)\n+    check_num_datasets(driver, 3)\n+    set_checkbox(driver, \"by_valid_uvls\", False)\n+\n+    set_input(driver, \"start_date\", \"2020-01-01\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"start_date\", \"2020-02-02\")\n+    check_num_datasets(driver, 3)\n+\n+    set_input(driver, \"start_date\", \"2021-02-02\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"start_date\", \"2022-02-02\")\n+    check_num_datasets(driver, 1)\n+\n+    set_input(driver, \"start_date\", \"2023-02-02\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"start_date\", \"2020-02-02\")\n+    set_input(driver, \"end_date\", \"2022-01-01\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"start_date\", \"\")\n+    set_input(driver, \"end_date\", \"\")\n+\n+    set_input(driver, \"min_uvl\", \"3\")\n+    set_input(driver, \"max_uvl\", \"3\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"min_num_configurations\", \"25\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"min_num_configurations\", \"24\")\n+    set_input(driver, \"max_num_configurations\", \"25\")\n+    check_num_datasets(driver, 4)\n+\n+    close_driver(driver)\n+\n+\n+def test_publication_type():\n+    driver = initialize_driver()\n+    host = get_host_for_selenium_testing()\n+\n+    driver.get(f'{host}/explore')\n+\n+    set_input(driver, \"publication_type\", \"asd\")\n+    check_num_datasets(driver, 4)\n+\n+    set_input(driver, \"publication_type\", \"none\")\n+    check_num_datasets(driver, 0)\n+\n+    set_input(driver, \"publication_type\", \"book\")\n+    check_num_datasets(driver, 2)\n+\n+    set_input(driver, \"publication_type\", \"datamanagementplan\")\n+    check_num_datasets(driver, 2)\n+\n+    close_driver(driver)\n+\n+\n+test_query()\n+\n+\n+test_filters()\n+\n+\n+test_publication_type()"
      },
      {
        "sha": "d397fa017477804224020220138763650260d162",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "modified",
        "additions": 121,
        "deletions": 14,
        "changes": 135,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=f3ce29505ea540778dbe1f4a642f2b401f5b67d5",
        "patch": "@@ -11,7 +11,8 @@ def test_client(test_client):\n     with test_client.application.app_context():\n         create_dataset_db(1, PublicationType.BOOK, \"tag1,tag2\")\n         create_dataset_db(2, PublicationType.ANNOTATION_COLLECTION, \"tag2\")\n-        create_dataset_db(3, PublicationType.BOOK)\n+        create_dataset_db(3, PublicationType.BOOK, date=\"2020-1-1\")\n+        create_dataset_db(4, valid=False)\n \n         pass\n \n@@ -36,43 +37,149 @@ def test_explore_post(test_client):\n \n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n-    assert len(response.get_json()) == 3, \"Wrong number of datasets\"\n+    assert len(response.get_json()) == 4, \"Wrong number of datasets\"\n \n \n def test_explore_filter_num_uvls_post(test_client):\n-    \"\"\"\n-    Tests access to explore POST request with a filter.\n-    \"\"\"\n-\n-    search_criteria = get_search_criteria(max_uvl=\"1\")\n+    search_criteria = get_search_criteria(min_uvl=\"1\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_ds = len(response.get_json())\n-    assert num_ds == 3, f\"Wrong number of datasets: {num_ds}\"\n+    assert num_ds == 4, f\"Wrong number of datasets: {num_ds}\"\n \n     search_criteria = get_search_criteria(max_uvl=\"0\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_ds = len(response.get_json())\n     assert num_ds == 0, f\"Wrong number of datasets: {num_ds}\"\n \n+    wrong_num = \"notanumber\"\n+    search_criteria = get_search_criteria(max_uvl=wrong_num, min_uvl=wrong_num)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n \n-def test_explore_filter_num_configurations_post(test_client):\n-    \"\"\"\n-    Tests access to explore POST request with a filter.\n-    \"\"\"\n \n+def test_explore_filter_num_configurations_post(test_client):\n     search_criteria = get_search_criteria(min_num_configurations=\"1\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_conf = len(response.get_json())\n-    assert num_conf == 3, f\"Wrong number of datasets: {num_conf}\"\n+    assert num_conf == 4, f\"Wrong number of datasets: {num_conf}\"\n \n     search_criteria = get_search_criteria(max_num_configurations=\"0\")\n     response = test_client.post(\"/explore\", json=search_criteria)\n     assert response.status_code == 200, \"The explore page could not be accessed.\"\n     num_conf = len(response.get_json())\n-    assert num_conf == 0, f\"Wrong number of datasets: {num_conf}\"\n+    assert num_conf == 1, f\"Wrong number of datasets: {num_conf}\"\n+\n+    search_criteria = get_search_criteria(min_num_configurations=\"1\", max_num_configurations=\"30\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_conf = len(response.get_json())\n+    assert num_conf == 4, f\"Wrong number of datasets: {num_conf}\"\n+\n+    wrong_num = \"notanumber\"\n+    search_criteria = get_search_criteria(min_num_configurations=wrong_num, max_num_configurations=wrong_num)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+\n+\n+def test_explore_filter_date_post(test_client):\n+    # Date formate: %Y-%m-%d\n+    search_criteria = get_search_criteria(start_date=\"2020-2-2\", end_date=\"2025-1-1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 3, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(start_date=\"2025-1-1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 0, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(end_date=\"2020-2-2\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets: {num}\"\n+\n+    wrong_date = \"notadate\"\n+    search_criteria = get_search_criteria(start_date=wrong_date, end_date=wrong_date)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+\n+\n+def test_explore_filter_publication_type_post(test_client):\n+    search_criteria = get_search_criteria(publication_type=\"book\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 2, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(publication_type=\"any\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n+\n+    wrong_publication_type = \"ERROR\"\n+    search_criteria = get_search_criteria(publication_type=wrong_publication_type)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_filter_query_post(test_client):\n+    search_criteria = get_search_criteria(query=\"Sample dataset 1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets: {num}\"\n+\n+    dataset_not_exists = \"Sample dataset wrong\"\n+    search_criteria = get_search_criteria(query=dataset_not_exists)\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 0, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_mixed_filter_post(test_client):\n+    search_criteria = get_search_criteria(query=\"Sample dataset 3\", end_date=\"2020-2-2\", publication_type=\"book\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 1, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(query=\"Sample dataset 3\", end_date=\"2020-2-2\", publication_type=\"none\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 0, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_filter_by_valid_uvl_post(test_client):\n+    search_criteria = get_search_criteria(by_valid_uvls=\"on\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 3, f\"Wrong number of datasets: {num}\"\n+\n+    search_criteria = get_search_criteria(by_valid_uvls=\"off\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n+\n+\n+def test_explore_soring_post(test_client):\n+    search_criteria = get_search_criteria(sorting=\"oldest\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num = len(response.get_json())\n+    assert num == 4, f\"Wrong number of datasets: {num}\"\n \n \n def get_search_criteria(query=\"\", sorting=\"newest\", publication_type=\"any\","
      },
      {
        "sha": "91664d1bd11a24be5e74caeaefa56ecfb5c3c542",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 15,
        "deletions": 27,
        "changes": 42,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=f3ce29505ea540778dbe1f4a642f2b401f5b67d5",
        "patch": "@@ -5,7 +5,6 @@\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n from flamapy.core.discover import DiscoverMetamodels\n-from flamapy.core.exceptions import OperationNotFound, ConfigurationNotFound\n import tempfile\n import os\n \n@@ -56,13 +55,13 @@ def syntaxError(self, recognizer, offendingSymbol, line, column, msg, e):\n         parser.removeErrorListeners()\n         parser.addErrorListener(error_listener)\n \n-        # tree = parser.featureModel()\n+        tree = parser.featureModel()\n \n         if error_listener.errors:\n             return jsonify({\"errors\": error_listener.errors}), 400\n \n         # Optional: Print the parse tree\n-        # print(tree.toStringTree(recog=parser))\n+        print(tree.toStringTree(recog=parser))\n \n         return jsonify({\"message\": \"Valid Model\"}), 200\n \n@@ -134,7 +133,6 @@ def to_cnf(file_id):\n         file_name = hubfile.name\n         directory_path = \"app/modules/dataset/uvl_examples\"\n         file_path = os.path.join(directory_path, file_name)\n-\n         if not os.path.isfile(file_path):\n             raise NotFound(f\"File {file_name} not found\")\n \n@@ -156,26 +154,16 @@ def to_cnf(file_id):\n \n @flamapy_bp.route('/flamapy/num_configurations/<int:file_id>', methods=['GET'])\n def get_num_configurations(file_id):\n-    try:\n-        hubfile = HubfileService().get_or_404(file_id)\n-        file_name = hubfile.name\n-        directory_path = \"app/modules/dataset/uvl_examples\"\n-        file_path = os.path.join(directory_path, file_name)\n-        # Agrega un mensaje de depuraci\u00f3n\n-        if not os.path.isfile(file_path):\n-            raise NotFound(f\"File {file_name} not found\")\n-\n-        # Initiallize the dicover metamodel\n-        dm = DiscoverMetamodels()\n-        result = dm.use_operation_from_file(\"PySATConfigurationsNumber\", file_path)\n-\n-        return jsonify({\"result\": result}), 200\n-\n-    except NotFound as e:\n-        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n-    except OperationNotFound as e:\n-        return jsonify({\"error\": str(e).replace(\"Operation not found: \", \"\")}), 500\n-    except ConfigurationNotFound as e:\n-        return jsonify({\"error\": str(e).replace(\"Configuration not found: \", \"\")}), 500\n-    except Exception as e:\n-        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n+    (_, status_code) = check_uvl(file_id)\n+    if status_code != 200:\n+        return jsonify({\"error\": \"Internal error\"}), 500\n+    hubfile = HubfileService().get_or_404(file_id)\n+    file_name = hubfile.name\n+    directory_path = \"app/modules/dataset/uvl_examples\"\n+    file_path = os.path.join(directory_path, file_name)\n+\n+    # Initiallize the dicover metamodel\n+    dm = DiscoverMetamodels()\n+    result = dm.use_operation_from_file(\"PySATConfigurationsNumber\", file_path)\n+\n+    return jsonify({\"result\": result}), 200"
      },
      {
        "sha": "ced65fb82262d85f183343fc6ebe3637e1569816",
        "filename": "app/modules/flamapy/tests/test_unit.py",
        "status": "modified",
        "additions": 30,
        "deletions": 4,
        "changes": 34,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py?ref=f3ce29505ea540778dbe1f4a642f2b401f5b67d5",
        "patch": "@@ -12,6 +12,8 @@ def test_client(test_client):\n     \"\"\"\n     with test_client.application.app_context():\n         create_dataset_db(1)\n+        create_dataset_db(2, valid=False)\n+        create_dataset_db(3, should_file_exist=False)\n         pass\n \n     yield test_client\n@@ -27,6 +29,25 @@ def test_sample_assertion(test_client):\n     assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\"\n \n \n+def test_valid_uvl_get(test_client):\n+    valid_uvl_file_id = 1\n+    valid_uvl_test(test_client, valid_uvl_file_id, 200)\n+    file_id_not_exists = 10\n+    valid_uvl_test(test_client, file_id_not_exists, 500)\n+    invalid_uvl_file_id = 2\n+    valid_uvl_test(test_client, invalid_uvl_file_id, 400)\n+    file_doesnt_exist = 3\n+    valid_uvl_test(test_client, file_doesnt_exist, 500)\n+\n+\n+def valid_uvl_test(client, file_id, expected_code):\n+    response = client.get(\"/flamapy/check_uvl/\" + str(file_id))\n+    msg = \"Get valid uvl of file \" + str(file_id) + \" responded \" \\\n+        + str(response.status_code) + \" but expected \" + str(expected_code)\n+    print(response.get_json())\n+    assert response.status_code == expected_code, msg\n+\n+\n # TEST DE GLENCOE\n @pytest.fixture\n def client():\n@@ -209,12 +230,17 @@ def test_num_configurations_get(test_client):\n     \"\"\"\n     Tests GET request of num of configurations of given file ids.\n     \"\"\"\n-\n-    num_configurations(test_client, 1, 200)\n-    num_configurations(test_client, 2, 404)\n+    file_id_exists = 1\n+    num_configurations_test(test_client, file_id_exists, 200)\n+    file_id_not_exists = 10\n+    num_configurations_test(test_client, file_id_not_exists, 500)\n+    invalid_uvl_file_id = 2\n+    num_configurations_test(test_client, invalid_uvl_file_id, 500)\n+    file_doesnt_exist = 3\n+    num_configurations_test(test_client, file_doesnt_exist, 500)\n \n \n-def num_configurations(client, file_id, expected_code):\n+def num_configurations_test(client, file_id, expected_code):\n     response = client.get(\"/flamapy/num_configurations/\" + str(file_id))\n     msg = \"Get num configurations of file \" + str(file_id) + \" responded \" \\\n         + str(response.status_code) + \" but expected \" + str(expected_code)"
      },
      {
        "sha": "48baa2232827d10d5af1a6dd8c25f05e567094bb",
        "filename": "app/modules/hubfile/services.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fhubfile%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f3ce29505ea540778dbe1f4a642f2b401f5b67d5/app%2Fmodules%2Fhubfile%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fhubfile%2Fservices.py?ref=f3ce29505ea540778dbe1f4a642f2b401f5b67d5",
        "patch": "@@ -28,7 +28,7 @@ def get_path_by_hubfile(self, hubfile: Hubfile) -> str:\n         hubfile_dataset = self.get_dataset_by_hubfile(hubfile)\n         working_dir = os.getenv('WORKING_DIR')\n \n-        path = os.path.join(working_dir,\n+        path = os.path.join(\"\" if working_dir is None else working_dir,\n                             'uploads',\n                             f'user_{hubfile_user.id}',\n                             f'dataset_{hubfile_dataset.id}',"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/84",
    "id": 2220396868,
    "node_id": "PR_kwDONB39G86EWJFE",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/84",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/84.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/84.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/84",
    "number": 84,
    "state": "closed",
    "locked": false,
    "title": "merge develop to main",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-06T16:04:59Z",
    "updated_at": "2024-12-06T16:47:52Z",
    "closed_at": "2024-12-06T16:47:52Z",
    "merged_at": "2024-12-06T16:47:52Z",
    "merge_commit_sha": "332ebb77afaffb1e2704324ec023bac826cf64cd",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/84/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/84/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/84/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/305af88a63a00c104f36c5c90c53c4f5414978ec",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "305af88a63a00c104f36c5c90c53c4f5414978ec",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "2c0264bc2742a5b0b8e6b5aa8c2cf5ff605273f0",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/84"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/84"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/84"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/84/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/84/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/84/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/305af88a63a00c104f36c5c90c53c4f5414978ec"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "c61a648ba22700cf40b98b4b7ff765d7ca3b0e23",
        "filename": "app/modules/dataset/forms.py",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fdataset%2Fforms.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fdataset%2Fforms.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fforms.py?ref=305af88a63a00c104f36c5c90c53c4f5414978ec",
        "patch": "@@ -2,9 +2,20 @@\n from wtforms import StringField, SelectField, FieldList, FormField, SubmitField, TextAreaField\n from wtforms.validators import DataRequired, URL, Optional\n \n+\n from app.modules.dataset.models import PublicationType\n \n \n+class EditDatasetForm(FlaskForm):\n+    description = TextAreaField('Description', validators=[DataRequired()])\n+    publication_type = SelectField(\n+        'Publication Type',\n+        choices=[(choice.name, choice.value) for choice in PublicationType],  # Cargamos las opciones del Enum\n+        validators=[DataRequired()]\n+    )\n+    tags = StringField('Tags')  # Agregamos el campo 'tags' para poder editarlo\n+\n+\n class AuthorForm(FlaskForm):\n     name = StringField(\"Name\", validators=[DataRequired()])\n     affiliation = StringField(\"Affiliation\")"
      },
      {
        "sha": "8e9afc2423aa1ecb6cc12e5f0567850dc771b5aa",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 167,
        "deletions": 6,
        "changes": 173,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=305af88a63a00c104f36c5c90c53c4f5414978ec",
        "patch": "@@ -4,24 +4,34 @@\n import shutil\n import tempfile\n import uuid\n+import io\n+import zipfile\n+from flask import send_file\n from datetime import datetime, timezone\n from zipfile import ZipFile\n-\n+from app.modules.dataset.forms import EditDatasetForm\n+from flask import abort\n+from flask_login import current_user\n+from werkzeug.exceptions import NotFound\n+from app.modules.hubfile.services import HubfileService\n+from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter, UVLWriter\n+from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n from flask import (\n+    flash,\n     redirect,\n     render_template,\n     request,\n     jsonify,\n     send_from_directory,\n     make_response,\n-    abort,\n-    url_for,\n+    url_for\n )\n-from flask_login import login_required, current_user\n+from flask_login import login_required\n \n from app.modules.dataset.forms import DataSetForm\n from app.modules.dataset.models import (\n-    DSDownloadRecord\n+    DSDownloadRecord,\n+    PublicationType\n )\n from app.modules.dataset import dataset_bp\n from app.modules.dataset.services import (\n@@ -120,7 +130,7 @@ def list_dataset():\n     )\n \n \n-@dataset_bp.route(\"/dataset/user_id/<int:user_id>\", methods=[\"GET\"])\n+@dataset_bp.route(\"/api/v1/datasets/user/<int:user_id>\", methods=[\"GET\"])\n def user_dataset(user_id):\n     return render_template(\n         \"dataset/user_datasets.html\",\n@@ -252,6 +262,115 @@ def download_dataset(dataset_id):\n     return resp\n \n \n+def generate_glencoe_file(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.json', delete=False)\n+    try:\n+        hubfile = HubfileService().get_or_404(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm1 = UVLReader(file_path).transform()\n+        GlencoeWriter(temp_file.name, fm1).transform()\n+        return temp_file.name  # Retorna la ruta del archivo generado\n+    except Exception as e:\n+        raise RuntimeError(f\"Error generating Glencoe file: {e}\")\n+\n+\n+def generate_splot_file(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.splx', delete=False)\n+    try:\n+        hubfile = HubfileService().get_by_id(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n+        SPLOTWriter(temp_file.name, fm).transform()\n+        return temp_file.name  # Retorna la ruta del archivo generado\n+    except Exception as e:\n+        raise RuntimeError(f\"Error generating SPLOT file: {e}\")\n+\n+\n+def generate_cnf_file(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.cnf', delete=False)\n+    try:\n+        hubfile = HubfileService().get_by_id(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n+        sat = FmToPysat(fm).transform()\n+        DimacsWriter(temp_file.name, sat).transform()\n+        return temp_file.name  # Retorna la ruta del archivo generado\n+    except Exception as e:\n+        raise RuntimeError(f\"Error generating DIMACS file: {e}\")\n+\n+\n+def generate_uvl_file(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.uvl', delete=False)\n+    try:\n+        hubfile = HubfileService().get_by_id(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n+        UVLWriter(temp_file.name, fm).transform()\n+        return temp_file.name  # Retorna la ruta del archivo generado\n+    except Exception as e:\n+        raise RuntimeError(f\"Error generating UVL file: {e}\")\n+\n+\n+@dataset_bp.route('/download_all/<int:file_id>')\n+def download_all_formats(file_id):\n+    try:\n+        # Generar los archivos\n+        uvl_path = generate_uvl_file(file_id)\n+        glencoe_path = generate_glencoe_file(file_id)\n+        dimacs_path = generate_cnf_file(file_id)\n+        splot_path = generate_splot_file(file_id)\n+\n+        # Crear un archivo ZIP en memoria\n+        memory_file = io.BytesIO()\n+        with zipfile.ZipFile(memory_file, 'w') as zf:\n+            zf.write(uvl_path, os.path.basename(uvl_path))\n+            zf.write(glencoe_path, os.path.basename(glencoe_path))\n+            zf.write(dimacs_path, os.path.basename(dimacs_path))\n+            zf.write(splot_path, os.path.basename(splot_path))\n+\n+        memory_file.seek(0)\n+\n+        # Eliminar archivos temporales\n+        os.remove(uvl_path)\n+        os.remove(glencoe_path)\n+        os.remove(dimacs_path)\n+        os.remove(splot_path)\n+\n+        # Devolver archivo ZIP como respuesta\n+        return send_file(\n+            memory_file,\n+            mimetype='application/zip',\n+            as_attachment=True,\n+            download_name=f\"files_{file_id}.zip\"\n+        )\n+    except Exception as e:\n+        return jsonify({'error': str(e)}), 500\n+\n+\n @dataset_bp.route(\"/doi/<path:doi>/\", methods=[\"GET\"])\n def subdomain_index(doi):\n \n@@ -291,6 +410,48 @@ def get_unsynchronized_dataset(dataset_id):\n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n \n+@dataset_bp.route(\"/dataset/<int:dataset_id>/\", methods=[\"GET\"])\n+def view_dataset(dataset_id):\n+    # Obt\u00e9n el dataset por su ID\n+    dataset = dataset_service.get_or_404(dataset_id)\n+\n+    # Renderiza la plantilla con los datos del dataset\n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+\n+\n+@dataset_bp.route('/dataset/<int:dataset_id>/edit', methods=['GET', 'POST'])\n+@login_required\n+def edit_dataset(dataset_id):\n+    # Obtener el dataset a partir de su ID\n+    dataset = DataSetService().get_by_id(dataset_id)\n+\n+    # Verificar si el usuario logueado es el propietario del dataset\n+    if dataset.user_id != current_user.id:\n+        # Si el usuario no es el propietario, mostrar un error 403 (Prohibido)\n+        abort(403)\n+\n+    form = EditDatasetForm()\n+\n+    if form.validate_on_submit():\n+        # Asignar valores del formulario al modelo DSMetaData\n+        dataset.ds_meta_data.description = form.description.data\n+        dataset.ds_meta_data.publication_type = PublicationType[form.publication_type.data]\n+        dataset.ds_meta_data.tags = form.tags.data\n+\n+        # Guardar los cambios en la base de datos\n+        DataSetService().update(dataset)\n+\n+        flash(\"Dataset updated successfully\", \"success\")\n+        return redirect(url_for('dataset.view_dataset', dataset_id=dataset_id))\n+\n+    # Pre-popular el formulario con los datos existentes del dataset\n+    form.description.data = dataset.ds_meta_data.description\n+    form.publication_type.data = dataset.ds_meta_data.publication_type.name\n+    form.tags.data = dataset.ds_meta_data.tags\n+\n+    return render_template('dataset/edit_dataset.html', form=form, dataset=dataset)\n+\n+\n @dataset_bp.route(\"/datasets/<int:dataset_id>/rate\", methods=[\"POST\"])\n @login_required\n def rate_dataset(dataset_id):"
      },
      {
        "sha": "c897e7e09526e30807c0d7db81c800b98f519a42",
        "filename": "app/modules/dataset/services.py",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fdataset%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fdataset%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fservices.py?ref=305af88a63a00c104f36c5c90c53c4f5414978ec",
        "patch": "@@ -4,6 +4,7 @@\n import shutil\n from typing import Optional\n import uuid\n+from app import db\n \n from flask import request\n \n@@ -51,6 +52,15 @@ def __init__(self):\n         self.dsrating_repository = DSRatingRepository()\n         self.hubfileviewrecord_repository = HubfileViewRecordRepository()\n \n+    # M\u00e9todo de actualizaci\u00f3n para el dataset\n+    def update(self, dataset):\n+        try:\n+            # Aqu\u00ed modificamos los valores de los metadatos del dataset\n+            db.session.commit()  # Guardamos los cambios en la base de datos\n+        except Exception as e:\n+            db.session.rollback()\n+            raise e\n+\n     def move_feature_models(self, dataset: DataSet):\n         current_user = AuthenticationService().get_authenticated_user()\n         source_dir = current_user.temp_folder()"
      },
      {
        "sha": "2955d35d4edda5cb854b5f107c762693d48e585a",
        "filename": "app/modules/dataset/templates/dataset/edit_dataset.html",
        "status": "added",
        "additions": 93,
        "deletions": 0,
        "changes": 93,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fedit_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fedit_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fedit_dataset.html?ref=305af88a63a00c104f36c5c90c53c4f5414978ec",
        "patch": "@@ -0,0 +1,93 @@\n+<!-- app/templates/dataset/edit_dataset.html -->\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n+    <title>Edit Dataset</title>\n+    <style>\n+        body {\n+            font-family: Arial, sans-serif;\n+            background-color: #f8f9fa;\n+            margin: 0;\n+            padding: 0;\n+            display: flex;\n+            justify-content: center;\n+            align-items: center;\n+            height: 100vh;\n+        }\n+\n+        .form-container {\n+            background: #fff;\n+            padding: 20px 30px;\n+            border-radius: 8px;\n+            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n+            max-width: 400px;\n+            width: 100%;\n+        }\n+\n+        .form-container h2 {\n+            margin-bottom: 20px;\n+            color: #333;\n+            text-align: center;\n+        }\n+\n+        .form-container label {\n+            display: block;\n+            margin-bottom: 8px;\n+            font-weight: bold;\n+            color: #555;\n+        }\n+\n+        .form-container input[type=\"text\"],\n+        .form-container select {\n+            width: 100%;\n+            padding: 10px;\n+            margin-bottom: 15px;\n+            border: 1px solid #ddd;\n+            border-radius: 4px;\n+            font-size: 14px;\n+        }\n+\n+        .form-container button {\n+            width: 100%;\n+            padding: 10px 15px;\n+            background: #007bff;\n+            color: #fff;\n+            border: none;\n+            border-radius: 4px;\n+            font-size: 16px;\n+            cursor: pointer;\n+        }\n+\n+        .form-container button:hover {\n+            background: #0056b3;\n+        }\n+\n+        .form-container .form-group {\n+            margin-bottom: 15px;\n+        }\n+    </style>\n+</head>\n+<body>\n+    <div class=\"form-container\">\n+        <h2>Edit Dataset</h2>\n+        <form method=\"POST\" action=\"{{ url_for('dataset.edit_dataset', dataset_id=dataset.id) }}\">\n+            {{ form.hidden_tag() }}\n+            <div class=\"form-group\">\n+                <label for=\"description\">Description</label>\n+                {{ form.description(size=60) }}\n+            </div>\n+            <div class=\"form-group\">\n+                <label for=\"publication_type\">Publication Type</label>\n+                {{ form.publication_type() }}\n+            </div>\n+            <div class=\"form-group\">\n+                <label for=\"tags\">Tags</label>\n+                {{ form.tags(size=60) }}\n+            </div>\n+            <button type=\"submit\">Save Changes</button>\n+        </form>\n+    </div>\n+</body>\n+</html>"
      },
      {
        "sha": "f9e002b3c7e5c8b91ab49bcc7af7994cac5321e9",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=305af88a63a00c104f36c5c90c53c4f5414978ec",
        "patch": "@@ -25,6 +25,11 @@\n             <i data-feather=\"search\" class=\"center-button-icon\"></i>\n             Explore more datasets\n         </a>\n+        {% if dataset.user_id == current_user.id %}\n+             <a href=\"{{ url_for('dataset.edit_dataset', dataset_id=dataset.id) }}\" class=\"btn btn-primary\">Edit Dataset</a>\n+        {% endif %}\n+\n+\n     </div>\n \n </div>\n@@ -64,7 +69,8 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         </span>\n                     </div>\n                     <div class=\"col-md-8 col-12\">\n-                        <a href=\"#\">{{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}</a>\n+                        <a href=\"{{ url_for('dataset.user_dataset', user_id=dataset.user.id, _external=True) }}\">\n+                            {{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}</a>\n                     </div>\n \n                 </div>\n@@ -326,11 +332,13 @@ <h4 style=\"margin-bottom: 0px;\"><span class=\"badge bg-dark\">{{ dataset.get_files\n                                                 SPLOT\n                                             </a>\n                                         </li>\n+                                        <li>\n+                                            <a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_all_formats', file_id=file.id) }}\">\n+                                                Descargar todos (ZIP)\n+                                            </a>\n+                                        </li>\n                                     </ul>\n                                 </div>\n-                                \n-                                \n-\n                             </div>\n                         </div>\n                     </div>"
      },
      {
        "sha": "b7b732b7c7cee1349fc3885dc7b31a3ccad92e5d",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "added",
        "additions": 101,
        "deletions": 0,
        "changes": 101,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=305af88a63a00c104f36c5c90c53c4f5414978ec",
        "patch": "@@ -0,0 +1,101 @@\n+import unittest\n+from unittest.mock import patch, MagicMock\n+import os\n+from app import app\n+\n+\n+class TestDownloadAllFormats(unittest.TestCase):\n+\n+    def setUp(self):\n+        # Configura una instancia de la aplicaci\u00f3n para pruebas\n+        self.app = app.test_client()\n+        self.app.testing = True\n+\n+    @patch('app.modules.dataset.routes.generate_uvl_file')\n+    @patch('app.modules.dataset.routes.generate_glencoe_file')\n+    @patch('app.modules.dataset.routes.generate_cnf_file')\n+    @patch('app.modules.dataset.routes.generate_splot_file')\n+    @patch('app.modules.dataset.routes.send_file')\n+    def test_download_all_formats_success(\n+        self,\n+        mock_send_file,\n+        mock_generate_splot,\n+        mock_generate_cnf,\n+        mock_generate_glencoe,\n+        mock_generate_uvl\n+    ):\n+        # Mockear las rutas de los archivos generados\n+        mock_generate_uvl.return_value = '/tmp/file.uvl'\n+        mock_generate_glencoe.return_value = '/tmp/file_glencoe.json'\n+        mock_generate_cnf.return_value = '/tmp/file.cnf'\n+        mock_generate_splot.return_value = '/tmp/file.splx'\n+\n+        # Mockear el comportamiento de send_file\n+        mock_send_file.return_value = MagicMock()\n+\n+        # Simular la existencia de los archivos\n+        for path in [\n+            mock_generate_uvl.return_value,\n+            mock_generate_glencoe.return_value,\n+            mock_generate_cnf.return_value,\n+            mock_generate_splot.return_value\n+        ]:\n+            with open(path, 'w') as f:\n+                f.write('mock content')\n+\n+        # Hacer la solicitud a la ruta\n+        response = self.app.get('/download_all/123')\n+\n+        # Validar que la respuesta sea exitosa\n+        self.assertEqual(response.status_code, 200)\n+        mock_send_file.assert_called_once()\n+\n+        # Verificar que los m\u00e9todos de generaci\u00f3n se llamaron con el ID correcto\n+        mock_generate_uvl.assert_called_once_with(123)\n+        mock_generate_glencoe.assert_called_once_with(123)\n+        mock_generate_cnf.assert_called_once_with(123)\n+        mock_generate_splot.assert_called_once_with(123)\n+\n+        # Limpiar los archivos temporales\n+        for path in [\n+            mock_generate_uvl.return_value,\n+            mock_generate_glencoe.return_value,\n+            mock_generate_cnf.return_value,\n+            mock_generate_splot.return_value\n+        ]:\n+            if os.path.exists(path):\n+                os.remove(path)\n+\n+    @patch('app.modules.dataset.routes.generate_uvl_file')\n+    @patch('app.modules.dataset.routes.generate_glencoe_file')\n+    @patch('app.modules.dataset.routes.generate_cnf_file')\n+    @patch('app.modules.dataset.routes.generate_splot_file')\n+    def test_download_all_formats_file_generation_failure(\n+        self,\n+        mock_generate_splot,\n+        mock_generate_cnf,\n+        mock_generate_glencoe,\n+        mock_generate_uvl\n+    ):\n+        # Simular que una de las funciones de generaci\u00f3n lanza un error\n+        mock_generate_uvl.side_effect = RuntimeError(\"UVL generation failed\")\n+        mock_generate_glencoe.return_value = '/tmp/file_glencoe.json'\n+        mock_generate_cnf.return_value = '/tmp/file.cnf'\n+        mock_generate_splot.return_value = '/tmp/file.splx'\n+\n+        # Hacer la solicitud a la ruta\n+        response = self.app.get('/download_all/123')\n+\n+        # Validar que la respuesta indique un error\n+        self.assertEqual(response.status_code, 500)\n+        self.assertIn(b'\"error\": \"UVL generation failed\"', response.data)\n+\n+        # Verificar que las funciones se llamaron\n+        mock_generate_uvl.assert_called_once_with(123)\n+        mock_generate_glencoe.assert_not_called()\n+        mock_generate_cnf.assert_not_called()\n+        mock_generate_splot.assert_not_called()\n+\n+\n+if __name__ == '__main__':\n+    unittest.main()"
      },
      {
        "sha": "b8e01c2a7367cb51cd63aead610905c19ddad9bf",
        "filename": "app/modules/explore/tests/locustfile.py",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py?ref=305af88a63a00c104f36c5c90c53c4f5414978ec",
        "patch": "@@ -0,0 +1,21 @@\n+from locust import HttpUser, TaskSet, task\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class ExploreBehavior(TaskSet):\n+    def on_start(self):\n+        self.index()\n+\n+    @task\n+    def index(self):\n+        response = self.client.get(\"/explore\")\n+\n+        if response.status_code != 200:\n+            print(f\"Explore index failed: {response.status_code}\")\n+\n+\n+class ExploreUser(HttpUser):\n+    tasks = [ExploreBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "1c6558ae112630b71753d03c3078bb9a986159a7",
        "filename": "app/modules/flamapy/tests/test_unit.py",
        "status": "modified",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py?ref=305af88a63a00c104f36c5c90c53c4f5414978ec",
        "patch": "@@ -1,4 +1,7 @@\n import pytest\n+from flask import Flask\n+from unittest.mock import patch, MagicMock\n+from app.modules.flamapy.routes import flamapy_bp\n from app.modules.common.dbutils import create_dataset_db\n \n \n@@ -24,6 +27,184 @@ def test_sample_assertion(test_client):\n     assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\"\n \n \n+# TEST DE GLENCOE\n+@pytest.fixture\n+def client():\n+    app = Flask(__name__)\n+    app.register_blueprint(flamapy_bp)  # Registra el blueprint con las rutas\n+    with app.test_client() as client:\n+        yield client\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.isfile')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.UVLReader')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.GlencoeWriter')\n+def test_to_glencoe_success(mock_glencoe_writer, mock_uvl_reader, mock_isfile, mock_get_or_404, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_or_404.return_value = mock_hubfile\n+    # Mock de UVLReader y GlencoeWriter\n+    mock_uvl_reader.return_value.transform.return_value = \"mocked_feature_model\"\n+    mock_glencoe_writer.return_value.transform.return_value = None\n+\n+    response = client.get('/flamapy/to_glencoe/10')\n+    assert response.status_code == 200\n+    assert response.headers[\"Content-Disposition\"] == \"attachment; filename=file10.uvl_glencoe.txt\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.isfile')\n+def test_to_glencoe_file_not_found(mock_isfile, mock_get_or_404, client):\n+    # Simula que el archivo no existe en el sistema de archivos\n+    mock_isfile.return_value = False\n+    # Mock de HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_or_404.return_value = mock_hubfile\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_glencoe/10')\n+    # Verifica que el c\u00f3digo de estado es 404\n+    assert response.status_code == 404\n+    assert response.json[\"error\"] == \"File file10.uvl not found\"\n+# Error inesperado dentro de la l\u00f3gica del c\u00f3digo de servicio\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.isfile')\n+def test_to_glencoe_unexpected(mock_isfile, mock_get_or_404, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = False  # No existe en el sistema de archivos\n+    # Mock de HubfileService para lanzar un error inesperado\n+    mock_get_or_404.side_effect = ValueError(\"Unexpected error\")  # Simula un error inesperado\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_glencoe/5')\n+    # Verifica que el c\u00f3digo de estado es 500\n+    assert response.status_code == 500\n+    assert response.json[\"error\"] == \"Internal Server Error\"\n+    assert response.json[\"details\"] == \"Unexpected error\"\n+\n+\n+# TEST DE SPLOT\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.UVLReader')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.SPLOTWriter')\n+def test_to_splot_success(mock_splot_writer, mock_uvl_reader, mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Mock de UVLReader y SPLOTWriter\n+    mock_uvl_reader.return_value.transform.return_value = \"mocked_feature_model\"\n+    mock_splot_writer.return_value.transform.return_value = None\n+\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_splot/10')\n+    # Verifica que el c\u00f3digo de estado es 200\n+    assert response.status_code == 200\n+    # Verifica que el archivo se est\u00e1 devolviendo como attachment\n+    assert response.headers[\"Content-Disposition\"] == \"attachment; filename=file10.uvl_splot.txt\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+def test_to_splot_file_not_found(mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo no existe en el sistema de archivos\n+    mock_isfile.return_value = False\n+    # Mock de HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_splot/10')\n+    # Verifica que el c\u00f3digo de estado es 404\n+    assert response.status_code == 404\n+    assert response.json[\"error\"] == \"File file10.uvl not found\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+def test_to_splot_unexpected(mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True  # El archivo existe en el sistema\n+    # Mock de HubfileService para lanzar un error inesperado\n+    mock_get_by_id.side_effect = ValueError(\"Unexpected error\")  # Simula un error inesperado\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_splot/5')\n+    # Verifica que el c\u00f3digo de estado es 500\n+    assert response.status_code == 500\n+    assert response.json[\"error\"] == \"Internal Server Error\"\n+    assert response.json[\"details\"] == \"Unexpected error\"\n+\n+\n+# TEST DE CNF\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.UVLReader')\n+@patch('flamapy.metamodels.pysat_metamodel.transformations.FmToPysat')\n+@patch('flamapy.metamodels.pysat_metamodel.transformations.DimacsWriter')\n+def test_to_cnf_success(mock_dimacs_writer, mock_fm_to_pysat, mock_uvl_reader, mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Mock de UVLReader, FmToPysat y DimacsWriter\n+    mock_uvl_reader.return_value.transform.return_value = \"mocked_feature_model\"\n+    mock_fm_to_pysat.return_value.transform.return_value = \"mocked_sat\"\n+    mock_dimacs_writer.return_value.transform.return_value = None\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_cnf/10')\n+    # Verifica que el c\u00f3digo de estado es 200\n+    assert response.status_code == 200\n+    # Verifica que el archivo se est\u00e1 devolviendo como attachment con el nombre correcto\n+    assert response.headers[\"Content-Disposition\"] == \"attachment; filename=file10.uvl_cnf.txt\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+def test_to_cnf_file_not_found(mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo no existe\n+    mock_isfile.return_value = False\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_cnf/10')\n+    # Verifica que el c\u00f3digo de estado es 404\n+    assert response.status_code == 404\n+    # Verifica el mensaje de error\n+    assert response.json[\"error\"] == \"File file10.uvl not found\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+def test_to_cnf_unexpected(mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True  # El archivo \"existe\"\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Simula un error inesperado al llamar al servicio\n+    mock_get_by_id.side_effect = ValueError(\"Unexpected error\")\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_cnf/10')\n+    # Verifica que el c\u00f3digo de estado es 500\n+    assert response.status_code == 500\n+    # Verifica el mensaje de error y los detalles\n+    assert response.json[\"error\"] == \"Internal Server Error\"\n+    assert response.json[\"details\"] == \"Unexpected error\"\n+\n+\n def test_num_configurations_get(test_client):\n     \"\"\"\n     Tests GET request of num of configurations of given file ids."
      },
      {
        "sha": "42b7e98ff5e111604385042f0b07667ac7d1a143",
        "filename": "app/modules/hubfile/tests/test_unit.py",
        "status": "modified",
        "additions": 76,
        "deletions": 0,
        "changes": 76,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/305af88a63a00c104f36c5c90c53c4f5414978ec/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_unit.py?ref=305af88a63a00c104f36c5c90c53c4f5414978ec",
        "patch": "@@ -1,4 +1,32 @@\n import pytest\n+from unittest.mock import patch, MagicMock\n+from app.modules.hubfile.services import HubfileService\n+from flask import Flask\n+from flask_login import UserMixin\n+from flask import abort\n+import os\n+\n+\n+# Crear un usuario simulado para las pruebas\n+class MockUser(UserMixin):\n+    def __init__(self, id):\n+        self.id = id\n+\n+\n+@pytest.fixture\n+def mock_user():\n+    user = MockUser(id=1)\n+    return user\n+\n+\n+@pytest.fixture\n+def test_client_with_user(mock_user, test_client):\n+    \"\"\"\n+    Configura el cliente de prueba con un usuario autenticado.\n+    \"\"\"\n+    with test_client.session_transaction() as session:\n+        session['_user_id'] = mock_user.id\n+    yield test_client\n \n \n @pytest.fixture(scope='module')\n@@ -22,3 +50,51 @@ def test_sample_assertion(test_client):\n     \"\"\"\n     greeting = \"Hello, World!\"\n     assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.exists')\n+@patch('flask.send_from_directory')\n+def test_download_file_success(mock_send_from_directory, mock_exists, mock_get_or_404, client):\n+    mock_exists.return_value = True\n+\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_or_404.return_value = mock_hubfile\n+\n+    mock_send_from_directory.return_value = MagicMock(status_code=200, data=b\"file content\")\n+\n+    response = client.get('/file/download/10')\n+    assert response.status_code == 200\n+\n+\n+@pytest.fixture\n+def client():\n+    app = Flask(__name__)\n+    app.testing = True\n+\n+    @app.route('/file/download/<int:file_id>')\n+    def download_file(file_id):\n+        # Simula la l\u00f3gica con abort para pruebas\n+        hubfile = HubfileService.get_or_404(file_id)\n+        if not os.path.exists(hubfile.name):\n+            abort(404)\n+        return \"file content\", 200\n+    return app.test_client()\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.exists')\n+def test_download_file_not_found(mock_exists, mock_get_or_404, client):\n+    # Simula que el archivo no existe\n+    mock_exists.return_value = False\n+\n+    # Simula el objeto de archivo\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_or_404.return_value = mock_hubfile\n+\n+    # Ejecuta el cliente de prueba en la ruta\n+    response = client.get('/file/download/10')\n+    # Valida el resultado esperado 404\n+    assert response.status_code == 404"
      },
      {
        "sha": "001b7f1fa80d142ceb3d2c79d0a5aa663f681039",
        "filename": "docs/Pol\u00edticas de Issues.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/305af88a63a00c104f36c5c90c53c4f5414978ec/docs%2FPol%C3%ADticas%20de%20Issues.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/305af88a63a00c104f36c5c90c53c4f5414978ec/docs%2FPol%C3%ADticas%20de%20Issues.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FPol%C3%ADticas%20de%20Issues.pdf?ref=305af88a63a00c104f36c5c90c53c4f5414978ec"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/83",
    "id": 2220387501,
    "node_id": "PR_kwDONB39G86EWGyt",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/83",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/83.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/83.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/83",
    "number": 83,
    "state": "closed",
    "locked": false,
    "title": "Merge to main",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-06T16:01:00Z",
    "updated_at": "2024-12-06T16:04:27Z",
    "closed_at": "2024-12-06T16:04:27Z",
    "merged_at": null,
    "merge_commit_sha": "ae47638a1b8ca1d82a7717ca9e2ad8ea000377c1",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/83/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/83/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/83/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/2c0264bc2742a5b0b8e6b5aa8c2cf5ff605273f0",
    "head": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "2c0264bc2742a5b0b8e6b5aa8c2cf5ff605273f0",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "af11999728dd6510af66d3788bd275dae02ba87c",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/83"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/83"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/83"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/83/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/83/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/83/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/2c0264bc2742a5b0b8e6b5aa8c2cf5ff605273f0"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": []
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/81",
    "id": 2219070780,
    "node_id": "PR_kwDONB39G86ERFU8",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/81",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/81.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/81.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/81",
    "number": 81,
    "state": "closed",
    "locked": false,
    "title": "feat: View user profile",
    "user": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-06T03:16:53Z",
    "updated_at": "2024-12-06T16:10:23Z",
    "closed_at": "2024-12-06T16:10:23Z",
    "merged_at": "2024-12-06T16:10:23Z",
    "merge_commit_sha": "305af88a63a00c104f36c5c90c53c4f5414978ec",
    "assignee": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pabmatang",
        "id": 73099537,
        "node_id": "MDQ6VXNlcjczMDk5NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pabmatang",
        "html_url": "https://github.com/pabmatang",
        "followers_url": "https://api.github.com/users/pabmatang/followers",
        "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
        "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
        "organizations_url": "https://api.github.com/users/pabmatang/orgs",
        "repos_url": "https://api.github.com/users/pabmatang/repos",
        "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pabmatang/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/81/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/81/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/81/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/39413a83b64512b048468e0a88e193f5a5dca2ba",
    "head": {
      "label": "TostaHub:viewUserProfile",
      "ref": "viewUserProfile",
      "sha": "39413a83b64512b048468e0a88e193f5a5dca2ba",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "af11999728dd6510af66d3788bd275dae02ba87c",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/81"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/81"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/81"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/81/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/81/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/81/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/39413a83b64512b048468e0a88e193f5a5dca2ba"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "8e9afc2423aa1ecb6cc12e5f0567850dc771b5aa",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/39413a83b64512b048468e0a88e193f5a5dca2ba/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/39413a83b64512b048468e0a88e193f5a5dca2ba/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=39413a83b64512b048468e0a88e193f5a5dca2ba",
        "patch": "@@ -130,7 +130,7 @@ def list_dataset():\n     )\n \n \n-@dataset_bp.route(\"/dataset/user_id/<int:user_id>\", methods=[\"GET\"])\n+@dataset_bp.route(\"/api/v1/datasets/user/<int:user_id>\", methods=[\"GET\"])\n def user_dataset(user_id):\n     return render_template(\n         \"dataset/user_datasets.html\","
      },
      {
        "sha": "f9e002b3c7e5c8b91ab49bcc7af7994cac5321e9",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/39413a83b64512b048468e0a88e193f5a5dca2ba/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/39413a83b64512b048468e0a88e193f5a5dca2ba/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=39413a83b64512b048468e0a88e193f5a5dca2ba",
        "patch": "@@ -69,7 +69,8 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                         </span>\n                     </div>\n                     <div class=\"col-md-8 col-12\">\n-                        <a href=\"#\">{{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}</a>\n+                        <a href=\"{{ url_for('dataset.user_dataset', user_id=dataset.user.id, _external=True) }}\">\n+                            {{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}</a>\n                     </div>\n \n                 </div>"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/80",
    "id": 2216970502,
    "node_id": "PR_kwDONB39G86EJEkG",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/80",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/80.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/80.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/80",
    "number": 80,
    "state": "closed",
    "locked": false,
    "title": "Fake nodo",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-05T07:43:36Z",
    "updated_at": "2024-12-06T15:48:22Z",
    "closed_at": "2024-12-06T15:48:22Z",
    "merged_at": null,
    "merge_commit_sha": null,
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/80/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/80/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/80/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/0e68d08f919b053c367af500ab85c2eed0eefedb",
    "head": {
      "label": "TostaHub:fakeNodo",
      "ref": "fakeNodo",
      "sha": "0e68d08f919b053c367af500ab85c2eed0eefedb",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "af11999728dd6510af66d3788bd275dae02ba87c",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/80"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/80"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/80"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/80/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/80/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/80/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/0e68d08f919b053c367af500ab85c2eed0eefedb"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "57c20159d20707de998f985904b5d5391fceb8c6",
        "filename": ".moduleignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/.moduleignore",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/.moduleignore",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.moduleignore?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -1 +1 @@\n-webhook\n\\ No newline at end of file\n+webhook"
      },
      {
        "sha": "ec33e3fcc40a5c7fc4f13f0508d738ffdb1f0ac3",
        "filename": "app/modules/dataset/assets/scripts.js",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fassets%2Fscripts.js?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -130,7 +130,12 @@ var currentId = 0;\n \n         window.onload = function () {\n \n-            test_zenodo_connection();\n+            if(use_fakenodo === false) {\n+                test_zenodo_connection();\n+            } else {\n+                document.getElementById(\"use:_fakenoo\").style.display = \"block\";\n+            }\n+            \n \n             document.getElementById('upload_button').addEventListener('click', function () {\n "
      },
      {
        "sha": "469ebee5ee119525cf96bda22e5a31867feacfac",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 58,
        "deletions": 30,
        "changes": 88,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -33,6 +33,8 @@\n     DOIMappingService\n )\n from app.modules.zenodo.services import ZenodoService\n+from app.modules.fakenodo.services import FakenodoService\n+from core.configuration.configuration import USE_FAKENODE\n \n logger = logging.getLogger(__name__)\n \n@@ -43,6 +45,7 @@\n zenodo_service = ZenodoService()\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n+fakenodo_service = FakenodoService()\n \n \n @dataset_bp.route(\"/dataset/upload\", methods=[\"GET\", \"POST\"])\n@@ -63,39 +66,64 @@ def create_dataset():\n             dataset_service.move_feature_models(dataset)\n         except Exception as exc:\n             logger.exception(f\"Exception while create dataset data in local {exc}\")\n-            return jsonify({\"Exception while create dataset data in local: \": str(exc)}), 400\n+            return jsonify({\"Exception while create dataset data in local\": str(exc)}), 400\n \n         # send dataset as deposition to Zenodo\n-        data = {}\n-        try:\n-            zenodo_response_json = zenodo_service.create_new_deposition(dataset)\n-            response_data = json.dumps(zenodo_response_json)\n-            data = json.loads(response_data)\n-        except Exception as exc:\n-            data = {}\n-            zenodo_response_json = {}\n-            logger.exception(f\"Exception while create dataset data in Zenodo {exc}\")\n-\n-        if data.get(\"conceptrecid\"):\n-            deposition_id = data.get(\"id\")\n-\n-            # update dataset with deposition id in Zenodo\n-            dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n-\n+        # Aqu\u00ed cambiamos para fakeNodo\n+        if USE_FAKENODE:\n+            try:\n+                data = {}\n+                fakenodo_response_json = fakenodo_service.create_new_deposition(dataset)\n+                response_data = json.dumps(fakenodo_response_json)\n+                data = json.loads(response_data)\n+            except Exception as exc:\n+                data = {}\n+                fakenodo_response_json = {}\n+                logger.exception(f\"Exception creating dataset fakenodo {exc}\")\n+\n+            if data.get(\"conceptrecid\"):\n+                deposition_id = data.get(\"id\")\n+                # update dataset with deposition id in Fakenodo\n+                dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n+                try:\n+                    # iterate for each feature model (one feature model = one request to Fakenodo)\n+                    for feature_model in dataset.feature_models:\n+                        fakenodo_service.upload_file(dataset, deposition_id, feature_model)\n+                    # publish deposition\n+                    fakenodo_service.publish_deposition(deposition_id)\n+                    # update DOI\n+                    deposition_doi = fakenodo_service.get_doi(deposition_id)\n+                    dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n+                except Exception as e:\n+                    msg = f\"It has not been possible to upload feature models in Fakenodo and update the DOI: {e}\"\n+                    return jsonify({\"message\": msg}), 200\n+        else:\n             try:\n-                # iterate for each feature model (one feature model = one request to Zenodo)\n-                for feature_model in dataset.feature_models:\n-                    zenodo_service.upload_file(dataset, deposition_id, feature_model)\n-\n-                # publish deposition\n-                zenodo_service.publish_deposition(deposition_id)\n-\n-                # update DOI\n-                deposition_doi = zenodo_service.get_doi(deposition_id)\n-                dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n-            except Exception as e:\n-                msg = f\"it has not been possible upload feature models in Zenodo and update the DOI: {e}\"\n-                return jsonify({\"message\": msg}), 200\n+                data = {}\n+                zenodo_response_json = zenodo_service.create_new_deposition(dataset)\n+                response_data = json.dumps(zenodo_response_json)\n+                data = json.loads(response_data)\n+            except Exception as exc:\n+                data = {}\n+                zenodo_response_json = {}\n+                logger.exception(f\"Exception while creating dataset data in Zenodo {exc}\")\n+\n+            if data.get(\"conceptrecid\"):\n+                deposition_id = data.get(\"id\")\n+                # update dataset with deposition id in Zenodo\n+                dataset_service.update_dsmetadata(dataset.ds_meta_data_id, deposition_id=deposition_id)\n+                try:\n+                    # iterate for each feature model (one feature model = one request to Zenodo)\n+                    for feature_model in dataset.feature_models:\n+                        zenodo_service.upload_file(dataset, deposition_id, feature_model)\n+                    # publish deposition\n+                    zenodo_service.publish_deposition(deposition_id)\n+                    # update DOI\n+                    deposition_doi = zenodo_service.get_doi(deposition_id)\n+                    dataset_service.update_dsmetadata(dataset.ds_meta_data_id, dataset_doi=deposition_doi)\n+                except Exception as e:\n+                    msg = f\"It has not been possible to upload feature models in Zenodo and update the DOI: {e}\"\n+                    return jsonify({\"message\": msg}), 200\n \n         # Delete temp folder\n         file_path = current_user.temp_folder()"
      },
      {
        "sha": "f634ca03296b53ab4e09656323924e5bb85cf28c",
        "filename": "app/modules/dataset/templates/dataset/upload_dataset.html",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fupload_dataset.html?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -24,6 +24,19 @@ <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\">\n         </div>\n \n     </div>\n+    <div class=\"row\">\n+        <div class=\"col-12 mb-3\">\n+            <div class=\"alert alert-warning\" role=\"alert\" id=\"use_fakenodo\" style=\"display: none\">\n+                <div class=\"alert-message\">\n+\n+                    <h4 class=\"alert-heading\"><i class=\"align-middle\" data-feather=\"alert-triangle\"></i> \n+                        Fakenodo  is active</h4>\n+                    <p class=\"p-0 m-0\">\n+                        The uploaded files will will be stored in Local.\n+                    </p>\n+                </div>\n+            </div>\n+        </div>\n \n     {% if messages %}\n         <ul>"
      },
      {
        "sha": "86bbe7ec8029b0e04375a49daec6e0e34ced9ab6",
        "filename": "app/modules/fakenodo/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2F__init__.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2F__init__.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2F__init__.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+fakenodo_bp = BaseBlueprint('fakenodo', __name__, template_folder='templates')"
      },
      {
        "sha": "058465c87591a39d9baa9011257b0aa8cc160495",
        "filename": "app/modules/fakenodo/assets/scripts.js",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -0,0 +1 @@\n+console.log(\"Hi, I am a script loaded from fakenodo module\");"
      },
      {
        "sha": "59e8f8f73974717b24a8fe9500b84ebdf9e65d77",
        "filename": "app/modules/fakenodo/forms.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Fforms.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Fforms.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fforms.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -0,0 +1,6 @@\n+from flask_wtf import FlaskForm\n+from wtforms import SubmitField\n+\n+\n+class FakenodoForm(FlaskForm):\n+    submit = SubmitField('Save fakenodo')"
      },
      {
        "sha": "6befb85289af6207887fc23ef461525fe213244f",
        "filename": "app/modules/fakenodo/models.py",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Fmodels.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fmodels.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -0,0 +1,11 @@\n+from app import db\n+\n+\n+class Deposition(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    dep_metadata = db.Column(db.JSON, nullable=False)\n+    status = db.Column(db.String(50), nullable=False, default=\"draft\")\n+    doi = db.Column(db.String(250), unique=True, nullable=True)\n+\n+    def __repr__(self):\n+        return f'Fakenodo<{self.id}>'"
      },
      {
        "sha": "20b80dcc83e55b382bd0e359decf74c718054a12",
        "filename": "app/modules/fakenodo/repositories.py",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Frepositories.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -0,0 +1,10 @@\n+from app.modules.fakenodo.models import Deposition\n+from core.repositories.BaseRepository import BaseRepository\n+\n+\n+class DepositionRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(Deposition)\n+\n+    def create_new_deposition(self, dep_metadata):\n+        return self.create(dep_metadata=dep_metadata)"
      },
      {
        "sha": "df6f23366760828a684d49ddc9255af484681748",
        "filename": "app/modules/fakenodo/routes.py",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Froutes.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -0,0 +1,49 @@\n+from flask import request, jsonify, send_file\n+from . import fakenodo_bp\n+import os\n+import tempfile\n+\n+\n+datasets = {}\n+dataset_counter = 1\n+\n+\n+@fakenodo_bp.route('/fakenodo/upload', methods=['POST'])\n+def upload_dataset():\n+    global dataset_counter\n+    file = request.files['file']\n+    if file:\n+        dataset_id = dataset_counter\n+        dataset_counter += 1\n+        temp_dir = tempfile.mkdtemp()\n+        file_path = os.path.join(temp_dir, file.filename)\n+        file.save(file_path)\n+        datasets[dataset_id] = {\n+            'id': dataset_id,\n+            'filename': file.filename,\n+            'file_path': file_path\n+        }\n+        return jsonify({'id': dataset_id, 'filename': file.filename}), 201\n+    return jsonify({'error': 'No file uploaded'}), 400\n+\n+\n+@fakenodo_bp.route('/fakenodo/download/<int:dataset_id>', methods=['GET'])\n+def download_dataset(dataset_id):\n+    dataset = datasets.get(dataset_id)\n+    if dataset:\n+        return send_file(dataset['file_path'], as_attachment=True, attachment_filename=dataset['filename'])\n+    return jsonify({'error': 'Dataset not found'}), 404\n+\n+\n+@fakenodo_bp.route('/fakenodo/datasets', methods=['GET'])\n+def list_datasets():\n+    return jsonify(list(datasets.values()))\n+\n+\n+@fakenodo_bp.route('/fakenodo/dataset/<int:dataset_id>', methods=['DELETE'])\n+def delete_dataset(dataset_id):\n+    dataset = datasets.pop(dataset_id, None)\n+    if dataset:\n+        os.remove(dataset['file_path'])\n+        return jsonify({'message': 'Dataset deleted'}), 200\n+    return jsonify({'error': 'Dataset not found'}), 404"
      },
      {
        "sha": "efce96ba7d7ce4bf7645ed5e77762c4a6648c077",
        "filename": "app/modules/fakenodo/seeders.py",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Fseeders.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fseeders.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -0,0 +1,13 @@\n+# app/modules/fakenodo/seeders/fakenodo_seeder.py\n+\n+from core.seeders.BaseSeeder import BaseSeeder\n+\n+\n+class FakenodoSeeder(BaseSeeder):\n+\n+    def run(self):\n+        # Datos a insertar en la base de datos\n+        data = [\n+\n+        ]\n+        self.seed(data)"
      },
      {
        "sha": "6d3cf2df3986f1af527ae9459136a498b1284afe",
        "filename": "app/modules/fakenodo/services.py",
        "status": "added",
        "additions": 131,
        "deletions": 0,
        "changes": 131,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fservices.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -0,0 +1,131 @@\n+import logging\n+import os\n+\n+from app.modules.dataset.models import DataSet\n+from app.modules.fakenodo.models import Deposition\n+from app.modules.fakenodo.repositories import DepositionRepository\n+from app.modules.featuremodel.models import FeatureModel\n+\n+from core.configuration.configuration import uploads_folder_name\n+from dotenv import load_dotenv\n+from flask_login import current_user\n+\n+\n+from core.services.BaseService import BaseService\n+\n+logger = logging.getLogger(__name__)\n+\n+load_dotenv()\n+\n+\n+class FakenodoService(BaseService):\n+\n+    def __init__(self):\n+        self.deposition_repository = DepositionRepository()\n+\n+    def create_new_deposition(self, dataset: DataSet) -> dict:\n+\n+        logger.info(\"Dataset sending to Fakenodo...\")\n+        logger.info(f\"Publication type...{dataset.ds_meta_data.publication_type.value}\")\n+\n+        metadata = {\n+            \"title\": dataset.ds_meta_data.title,\n+            \"upload_type\": \"dataset\" if dataset.ds_meta_data.publication_type.value == \"none\" else \"publication\",\n+            \"publication_type\": (\n+                dataset.ds_meta_data.publication_type.value\n+                if dataset.ds_meta_data.publication_type.value != \"none\"\n+                else None\n+            ),\n+            \"description\": dataset.ds_meta_data.description,\n+            \"creators\": [\n+                {\n+                    \"name\": author.name,\n+                    **({\"affiliation\": author.affiliation} if author.affiliation else {}),\n+                    **({\"orcid\": author.orcid} if author.orcid else {}),\n+                }\n+                for author in dataset.ds_meta_data.authors\n+            ],\n+            \"keywords\": (\n+                [\"uvlhub\"] if not dataset.ds_meta_data.tags else dataset.ds_meta_data.tags.split(\", \") + [\"uvlhub\"]\n+            ),\n+            \"access_right\": \"open\",\n+            \"license\": \"CC-BY-4.0\",\n+        }\n+\n+        try:\n+            new_deposition = self.deposition_repository.create_new_deposition(dep_metadata=metadata)\n+\n+            return {\n+                \"conceptrecid\": f\"fakenodo-{new_deposition.id}\",\n+                \"id\": new_deposition.id,\n+                \"metadata\": metadata,\n+                \"message\": \"Dataset created successfully in fakenodo.\"\n+            }\n+        except Exception as e:\n+            raise Exception(f\"Failed to create local deposition: {str(e)}\")\n+\n+    def upload_file(self, dataset: DataSet, deposition_id: int, feature_model: FeatureModel, user=None) -> dict:\n+\n+        uvl_filename = feature_model.fm_meta_data.uvl_filename\n+        user_id = current_user.id if user is None else user.id\n+        file_path = os.path.join(uploads_folder_name(), f\"user_{str(user_id)}\", f\"dataset_{dataset.id}/\", uvl_filename)\n+\n+        response = {\n+            \"id\": deposition_id,\n+            \"filename\": uvl_filename,\n+            \"filesize\": os.path.getsize(file_path),\n+            \"checksum\": calculate_checksum(file_path),\n+            \"message\": \"File uploaded successfully to fakenodo.\"\n+        }\n+\n+        return response\n+\n+    def publish_deposition(self, deposition_id: int) -> dict:\n+\n+        deposition = Deposition.query.get(deposition_id)\n+        if not deposition:\n+            raise Exception(\"Deposition not found\")\n+\n+        try:\n+            deposition.doi = f\"10.5281/fakenodo.{deposition_id}\"\n+            deposition.status = \"published\"\n+            self.deposition_repository.update(deposition)\n+\n+            response = {\n+                \"id\": deposition_id,\n+                \"status\": \"published\",\n+                \"conceptdoi\": f\"10.5281/fakenodo.{deposition_id}\",\n+                \"message\": \"Deposition published successfully in fakenodo.\"\n+            }\n+            return response\n+\n+        except Exception as e:\n+            raise Exception(f\"Failed to publish deposition: {str(e)}\")\n+\n+    def get_deposition(self, deposition_id: int) -> dict:\n+\n+        deposition = Deposition.query.get(deposition_id)\n+        if not deposition:\n+            raise Exception(\"Deposition not found\")\n+\n+        response = {\n+            \"id\": deposition.id,\n+            \"doi\": deposition.doi,\n+            \"metadata\": deposition.dep_metadata,\n+            \"status\": deposition.status,\n+            \"message\": \"Deposition retrieved successfully from fakenodo.\"\n+        }\n+        return response\n+\n+    def get_doi(self, deposition_id: int) -> str:\n+\n+        return self.get_deposition(deposition_id).get(\"doi\")\n+\n+\n+def calculate_checksum(file_path):\n+    import hashlib\n+    hash_md5 = hashlib.md5()\n+    with open(file_path, \"rb\") as f:\n+        for chunk in iter(lambda: f.read(4096), b\"\"):\n+            hash_md5.update(chunk)\n+    return hash_md5.hexdigest()"
      },
      {
        "sha": "bb533486c0a1f1149ee71ba5057cae880bf34e1c",
        "filename": "app/modules/fakenodo/templates/fakenodo/index.html",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -0,0 +1,11 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}View fakenodo{% endblock %}\n+\n+{% block content %}\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('fakenodo.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/fakenodo/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb"
      },
      {
        "sha": "355e5809e151db3a7660d151233fffaae8fc6986",
        "filename": "app/modules/fakenodo/tests/locustfile.py",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -0,0 +1,21 @@\n+from locust import HttpUser, TaskSet, task\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class FakenodoBehavior(TaskSet):\n+    def on_start(self):\n+        self.index()\n+\n+    @task\n+    def index(self):\n+        response = self.client.get(\"/fakenodo\")\n+\n+        if response.status_code != 200:\n+            print(f\"Fakenodo index failed: {response.status_code}\")\n+\n+\n+class FakenodoUser(HttpUser):\n+    tasks = [FakenodoBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "a33f0bb967501891fd46ff885dc25d13d985454f",
        "filename": "app/modules/fakenodo/tests/test_selenium.py",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -0,0 +1,35 @@\n+from selenium.common.exceptions import NoSuchElementException\n+import time\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def test_fakenodo_index():\n+\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the index page\n+        driver.get(f'{host}/fakenodo')\n+\n+        # Wait a little while to make sure the page has loaded completely\n+        time.sleep(4)\n+\n+        try:\n+\n+            pass\n+\n+        except NoSuchElementException:\n+            raise AssertionError('Test failed!')\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_fakenodo_index()"
      },
      {
        "sha": "950421eb7b4ee15f00b45f83730c55dd2dda9336",
        "filename": "app/modules/fakenodo/tests/test_unit.py",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -0,0 +1,24 @@\n+import pytest\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        # Add HERE new elements to the database that you want to exist in the test context.\n+        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_sample_assertion(test_client):\n+    \"\"\"\n+    Sample test to verify that the test framework and environment are working correctly.\n+    It does not communicate with the Flask application; it only performs a simple assertion to\n+    confirm that the tests in this module can be executed.\n+    \"\"\"\n+    greeting = \"Hello, World!\"\n+    assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\""
      },
      {
        "sha": "147aa0d31fd9026b79737cf3ac30b34a2dbfffd7",
        "filename": "core/configuration/configuration.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/core%2Fconfiguration%2Fconfiguration.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/core%2Fconfiguration%2Fconfiguration.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/core%2Fconfiguration%2Fconfiguration.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -4,6 +4,9 @@\n load_dotenv()\n \n \n+USE_FAKENODE = True\n+\n+\n def uploads_folder_name():\n     return os.getenv('UPLOADS_DIR', \"uploads\")\n "
      },
      {
        "sha": "7212978273bc566c7eecb0794bdfcfd478058ad5",
        "filename": "migrations/versions/24dbfd49dec3_create_fakenodo_table.py",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0e68d08f919b053c367af500ab85c2eed0eefedb/migrations%2Fversions%2F24dbfd49dec3_create_fakenodo_table.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0e68d08f919b053c367af500ab85c2eed0eefedb/migrations%2Fversions%2F24dbfd49dec3_create_fakenodo_table.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F24dbfd49dec3_create_fakenodo_table.py?ref=0e68d08f919b053c367af500ab85c2eed0eefedb",
        "patch": "@@ -0,0 +1,37 @@\n+\"\"\"Create fakenodo table\n+\n+Revision ID: 24dbfd49dec3\n+Revises: 001\n+Create Date: 2024-11-13 12:25:27.583555\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+\n+\n+# revision identifiers, used by Alembic.\n+revision = '24dbfd49dec3'\n+down_revision = '001'\n+branch_labels = None\n+depends_on = None\n+\n+\n+def upgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.create_table(\n+        'deposition',\n+        sa.Column('id', sa.Integer(), nullable=False),\n+        sa.Column('dep_metadata', sa.JSON(), nullable=False),\n+        sa.Column('status', sa.String(length=50), nullable=False),\n+        sa.Column('doi', sa.String(length=250), nullable=True),\n+        sa.PrimaryKeyConstraint('id'),\n+        sa.UniqueConstraint('doi')\n+    )\n+\n+    # ### end Alembic commands ###\n+\n+\n+def downgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.drop_table('depositions')\n+    # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/79",
    "id": 2215870982,
    "node_id": "PR_kwDONB39G86EE4IG",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/79",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/79.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/79.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/79",
    "number": 79,
    "state": "closed",
    "locked": false,
    "title": "Fake nodo",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-04T17:43:56Z",
    "updated_at": "2024-12-04T17:45:12Z",
    "closed_at": "2024-12-04T17:45:12Z",
    "merged_at": null,
    "merge_commit_sha": "fd929ca15a49161b32376861f0c7ce912c4d7b8b",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/79/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/79/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/79/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/8199b37d144acaa95fd81c2a9f0bbd154231e899",
    "head": {
      "label": "TostaHub:fakeNodo",
      "ref": "fakeNodo",
      "sha": "8199b37d144acaa95fd81c2a9f0bbd154231e899",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "845870c4adfdb83141a5174a5ec6630871e4f078",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/79"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/79"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/79"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/79/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/79/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/79/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/8199b37d144acaa95fd81c2a9f0bbd154231e899"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "57c20159d20707de998f985904b5d5391fceb8c6",
        "filename": ".moduleignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/.moduleignore",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/.moduleignore",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.moduleignore?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -1 +1 @@\n-webhook\n\\ No newline at end of file\n+webhook"
      },
      {
        "sha": "86bbe7ec8029b0e04375a49daec6e0e34ced9ab6",
        "filename": "app/modules/fakenodo/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2F__init__.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2F__init__.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2F__init__.py?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+fakenodo_bp = BaseBlueprint('fakenodo', __name__, template_folder='templates')"
      },
      {
        "sha": "058465c87591a39d9baa9011257b0aa8cc160495",
        "filename": "app/modules/fakenodo/assets/scripts.js",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -0,0 +1 @@\n+console.log(\"Hi, I am a script loaded from fakenodo module\");"
      },
      {
        "sha": "59e8f8f73974717b24a8fe9500b84ebdf9e65d77",
        "filename": "app/modules/fakenodo/forms.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Fforms.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Fforms.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fforms.py?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -0,0 +1,6 @@\n+from flask_wtf import FlaskForm\n+from wtforms import SubmitField\n+\n+\n+class FakenodoForm(FlaskForm):\n+    submit = SubmitField('Save fakenodo')"
      },
      {
        "sha": "57b5d9166efeef47b3b5fae46af27cbc0538756e",
        "filename": "app/modules/fakenodo/models.py",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Fmodels.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fmodels.py?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -0,0 +1,11 @@\n+from app import db\n+\n+\n+class Fakenodo(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    dep_metadata = db.Column(db.JSON, nullable=False)\n+    status = db.Column(db.String(50), nullable=False, default=\"draft\")\n+    doi = db.Column(db.String(250), unique=True, nullable=True)\n+\n+    def __repr__(self):\n+        return f'Fakenodo<{self.id}>'"
      },
      {
        "sha": "0fc897bcc2cf8ad296d3f9388ce209bd287ae356",
        "filename": "app/modules/fakenodo/repositories.py",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Frepositories.py?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -0,0 +1,10 @@\n+from app.modules.fakenodo.models import Fakenodo\n+from core.repositories.BaseRepository import BaseRepository\n+\n+\n+class FakenodoRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(Fakenodo)\n+\n+    def create_new_deposition(self, dep_metadata):\n+        return self.create(dep_metadata=dep_metadata)"
      },
      {
        "sha": "df6f23366760828a684d49ddc9255af484681748",
        "filename": "app/modules/fakenodo/routes.py",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Froutes.py?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -0,0 +1,49 @@\n+from flask import request, jsonify, send_file\n+from . import fakenodo_bp\n+import os\n+import tempfile\n+\n+\n+datasets = {}\n+dataset_counter = 1\n+\n+\n+@fakenodo_bp.route('/fakenodo/upload', methods=['POST'])\n+def upload_dataset():\n+    global dataset_counter\n+    file = request.files['file']\n+    if file:\n+        dataset_id = dataset_counter\n+        dataset_counter += 1\n+        temp_dir = tempfile.mkdtemp()\n+        file_path = os.path.join(temp_dir, file.filename)\n+        file.save(file_path)\n+        datasets[dataset_id] = {\n+            'id': dataset_id,\n+            'filename': file.filename,\n+            'file_path': file_path\n+        }\n+        return jsonify({'id': dataset_id, 'filename': file.filename}), 201\n+    return jsonify({'error': 'No file uploaded'}), 400\n+\n+\n+@fakenodo_bp.route('/fakenodo/download/<int:dataset_id>', methods=['GET'])\n+def download_dataset(dataset_id):\n+    dataset = datasets.get(dataset_id)\n+    if dataset:\n+        return send_file(dataset['file_path'], as_attachment=True, attachment_filename=dataset['filename'])\n+    return jsonify({'error': 'Dataset not found'}), 404\n+\n+\n+@fakenodo_bp.route('/fakenodo/datasets', methods=['GET'])\n+def list_datasets():\n+    return jsonify(list(datasets.values()))\n+\n+\n+@fakenodo_bp.route('/fakenodo/dataset/<int:dataset_id>', methods=['DELETE'])\n+def delete_dataset(dataset_id):\n+    dataset = datasets.pop(dataset_id, None)\n+    if dataset:\n+        os.remove(dataset['file_path'])\n+        return jsonify({'message': 'Dataset deleted'}), 200\n+    return jsonify({'error': 'Dataset not found'}), 404"
      },
      {
        "sha": "efce96ba7d7ce4bf7645ed5e77762c4a6648c077",
        "filename": "app/modules/fakenodo/seeders.py",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Fseeders.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fseeders.py?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -0,0 +1,13 @@\n+# app/modules/fakenodo/seeders/fakenodo_seeder.py\n+\n+from core.seeders.BaseSeeder import BaseSeeder\n+\n+\n+class FakenodoSeeder(BaseSeeder):\n+\n+    def run(self):\n+        # Datos a insertar en la base de datos\n+        data = [\n+\n+        ]\n+        self.seed(data)"
      },
      {
        "sha": "6fbc4bc7cb96df8addbf01d5aa60ba258acef920",
        "filename": "app/modules/fakenodo/services.py",
        "status": "added",
        "additions": 174,
        "deletions": 0,
        "changes": 174,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fservices.py?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -0,0 +1,174 @@\n+import logging\n+import os\n+\n+from app.modules.dataset.models import DataSet\n+from app.modules.fakenodo.models import Deposition\n+from app.modules.fakenodo.repositories import DepositionRepository\n+from app.modules.featuremodel.models import FeatureModel\n+\n+from core.configuration.configuration import uploads_folder_name\n+from dotenv import load_dotenv\n+from flask_login import current_user\n+\n+\n+from core.services.BaseService import BaseService\n+\n+logger = logging.getLogger(__name__)\n+\n+load_dotenv()\n+\n+\n+class FakenodoService(BaseService):\n+\n+    def __init__(self):\n+        self.deposition_repository = DepositionRepository()\n+\n+    def create_new_deposition(self, dataset: DataSet) -> dict:\n+        \"\"\"\n+        Create a new deposition in Fakenodo.\n+\n+        Args:\n+            dataset (DataSet): The DataSet object containing the metadata of the deposition.\n+\n+        Returns:\n+            dict: The response in JSON format with the details of the created deposition.\n+        \"\"\"\n+\n+        logger.info(\"Dataset sending to Fakenodo...\")\n+        logger.info(f\"Publication type...{dataset.ds_meta_data.publication_type.value}\")\n+\n+        metadata = {\n+            \"title\": dataset.ds_meta_data.title,\n+            \"upload_type\": \"dataset\" if dataset.ds_meta_data.publication_type.value == \"none\" else \"publication\",\n+            \"publication_type\": (\n+                dataset.ds_meta_data.publication_type.value\n+                if dataset.ds_meta_data.publication_type.value != \"none\"\n+                else None\n+            ),\n+            \"description\": dataset.ds_meta_data.description,\n+            \"creators\": [\n+                {\n+                    \"name\": author.name,\n+                    **({\"affiliation\": author.affiliation} if author.affiliation else {}),\n+                    **({\"orcid\": author.orcid} if author.orcid else {}),\n+                }\n+                for author in dataset.ds_meta_data.authors\n+            ],\n+            \"keywords\": (\n+                [\"uvlhub\"] if not dataset.ds_meta_data.tags else dataset.ds_meta_data.tags.split(\", \") + [\"uvlhub\"]\n+            ),\n+            \"access_right\": \"open\",\n+            \"license\": \"CC-BY-4.0\",\n+        }\n+\n+        try:\n+            new_deposition = self.deposition_repository.create_new_deposition(dep_metadata=metadata)\n+\n+            return {\n+                \"conceptrecid\": f\"fakenodo-{new_deposition.id}\",\n+                \"id\": new_deposition.id,\n+                \"metadata\": metadata,\n+                \"message\": \"Dataset created successfully in fakenodo.\"\n+            }\n+        except Exception as e:\n+            raise Exception(f\"Failed to create local deposition: {str(e)}\")\n+\n+    def upload_file(self, dataset: DataSet, deposition_id: int, feature_model: FeatureModel, user=None) -> dict:\n+        \"\"\"\n+        Save a file to a deposition in Fakenodo.\n+\n+        Args:\n+            deposition_id (int): The ID of the deposition.\n+            feature_model (FeatureModel): The FeatureModel object representing the feature model.\n+            user (FeatureModel): The User object representing the file owner.\n+\n+        Returns:\n+            dict: The response in JSON format with the details of the uploaded file.\n+        \"\"\"\n+        uvl_filename = feature_model.fm_meta_data.uvl_filename\n+        user_id = current_user.id if user is None else user.id\n+        file_path = os.path.join(uploads_folder_name(), f\"user_{str(user_id)}\", f\"dataset_{dataset.id}/\", uvl_filename)\n+\n+        response = {\n+            \"id\": deposition_id,\n+            \"filename\": uvl_filename,\n+            \"filesize\": os.path.getsize(file_path),\n+            \"checksum\": calculate_checksum(file_path),\n+            \"message\": \"File uploaded successfully to fakenodo.\"\n+        }\n+\n+        return response\n+\n+    def publish_deposition(self, deposition_id: int) -> dict:\n+        \"\"\"\n+        Publish a deposition in Fakenodo.\n+\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+\n+        Returns:\n+            dict: The response in JSON format with the details of the published deposition.\n+        \"\"\"\n+        deposition = Deposition.query.get(deposition_id)\n+        if not deposition:\n+            raise Exception(\"Deposition not found\")\n+\n+        try:\n+            deposition.doi = f\"10.5281/fakenodo.{deposition_id}\"\n+            deposition.status = \"published\"\n+            self.deposition_repository.update(deposition)\n+\n+            response = {\n+                \"id\": deposition_id,\n+                \"status\": \"published\",\n+                \"conceptdoi\": f\"10.5281/fakenodo.{deposition_id}\",\n+                \"message\": \"Deposition published successfully in fakenodo.\"\n+            }\n+            return response\n+\n+        except Exception as e:\n+            raise Exception(f\"Failed to publish deposition: {str(e)}\")\n+\n+    def get_deposition(self, deposition_id: int) -> dict:\n+        \"\"\"\n+        Get a deposition from Fakenodo.\n+\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+\n+        Returns:\n+            dict: The response in JSON format with the details of the deposition.\n+        \"\"\"\n+        deposition = Deposition.query.get(deposition_id)\n+        if not deposition:\n+            raise Exception(\"Deposition not found\")\n+\n+        response = {\n+            \"id\": deposition.id,\n+            \"doi\": deposition.doi,\n+            \"metadata\": deposition.dep_metadata,\n+            \"status\": deposition.status,\n+            \"message\": \"Deposition retrieved successfully from fakenodo.\"\n+        }\n+        return response\n+\n+    def get_doi(self, deposition_id: int) -> str:\n+        \"\"\"\n+        Get the DOI of a deposition from Fakenodo.\n+\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+\n+        Returns:\n+            str: The DOI of the deposition.\n+        \"\"\"\n+        return self.get_deposition(deposition_id).get(\"doi\")\n+\n+\n+def calculate_checksum(file_path):\n+    import hashlib\n+    hash_md5 = hashlib.md5()\n+    with open(file_path, \"rb\") as f:\n+        for chunk in iter(lambda: f.read(4096), b\"\"):\n+            hash_md5.update(chunk)\n+    return hash_md5.hexdigest()"
      },
      {
        "sha": "bb533486c0a1f1149ee71ba5057cae880bf34e1c",
        "filename": "app/modules/fakenodo/templates/fakenodo/index.html",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -0,0 +1,11 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}View fakenodo{% endblock %}\n+\n+{% block content %}\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('fakenodo.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/fakenodo/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899"
      },
      {
        "sha": "355e5809e151db3a7660d151233fffaae8fc6986",
        "filename": "app/modules/fakenodo/tests/locustfile.py",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -0,0 +1,21 @@\n+from locust import HttpUser, TaskSet, task\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class FakenodoBehavior(TaskSet):\n+    def on_start(self):\n+        self.index()\n+\n+    @task\n+    def index(self):\n+        response = self.client.get(\"/fakenodo\")\n+\n+        if response.status_code != 200:\n+            print(f\"Fakenodo index failed: {response.status_code}\")\n+\n+\n+class FakenodoUser(HttpUser):\n+    tasks = [FakenodoBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "a33f0bb967501891fd46ff885dc25d13d985454f",
        "filename": "app/modules/fakenodo/tests/test_selenium.py",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -0,0 +1,35 @@\n+from selenium.common.exceptions import NoSuchElementException\n+import time\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def test_fakenodo_index():\n+\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the index page\n+        driver.get(f'{host}/fakenodo')\n+\n+        # Wait a little while to make sure the page has loaded completely\n+        time.sleep(4)\n+\n+        try:\n+\n+            pass\n+\n+        except NoSuchElementException:\n+            raise AssertionError('Test failed!')\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_fakenodo_index()"
      },
      {
        "sha": "950421eb7b4ee15f00b45f83730c55dd2dda9336",
        "filename": "app/modules/fakenodo/tests/test_unit.py",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -0,0 +1,24 @@\n+import pytest\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        # Add HERE new elements to the database that you want to exist in the test context.\n+        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_sample_assertion(test_client):\n+    \"\"\"\n+    Sample test to verify that the test framework and environment are working correctly.\n+    It does not communicate with the Flask application; it only performs a simple assertion to\n+    confirm that the tests in this module can be executed.\n+    \"\"\"\n+    greeting = \"Hello, World!\"\n+    assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\""
      },
      {
        "sha": "147aa0d31fd9026b79737cf3ac30b34a2dbfffd7",
        "filename": "core/configuration/configuration.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/core%2Fconfiguration%2Fconfiguration.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/core%2Fconfiguration%2Fconfiguration.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/core%2Fconfiguration%2Fconfiguration.py?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -4,6 +4,9 @@\n load_dotenv()\n \n \n+USE_FAKENODE = True\n+\n+\n def uploads_folder_name():\n     return os.getenv('UPLOADS_DIR', \"uploads\")\n "
      },
      {
        "sha": "7212978273bc566c7eecb0794bdfcfd478058ad5",
        "filename": "migrations/versions/24dbfd49dec3_create_fakenodo_table.py",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8199b37d144acaa95fd81c2a9f0bbd154231e899/migrations%2Fversions%2F24dbfd49dec3_create_fakenodo_table.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8199b37d144acaa95fd81c2a9f0bbd154231e899/migrations%2Fversions%2F24dbfd49dec3_create_fakenodo_table.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F24dbfd49dec3_create_fakenodo_table.py?ref=8199b37d144acaa95fd81c2a9f0bbd154231e899",
        "patch": "@@ -0,0 +1,37 @@\n+\"\"\"Create fakenodo table\n+\n+Revision ID: 24dbfd49dec3\n+Revises: 001\n+Create Date: 2024-11-13 12:25:27.583555\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+\n+\n+# revision identifiers, used by Alembic.\n+revision = '24dbfd49dec3'\n+down_revision = '001'\n+branch_labels = None\n+depends_on = None\n+\n+\n+def upgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.create_table(\n+        'deposition',\n+        sa.Column('id', sa.Integer(), nullable=False),\n+        sa.Column('dep_metadata', sa.JSON(), nullable=False),\n+        sa.Column('status', sa.String(length=50), nullable=False),\n+        sa.Column('doi', sa.String(length=250), nullable=True),\n+        sa.PrimaryKeyConstraint('id'),\n+        sa.UniqueConstraint('doi')\n+    )\n+\n+    # ### end Alembic commands ###\n+\n+\n+def downgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.drop_table('depositions')\n+    # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/78",
    "id": 2215863962,
    "node_id": "PR_kwDONB39G86EE2aa",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/78",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/78.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/78.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/78",
    "number": 78,
    "state": "closed",
    "locked": false,
    "title": "Edit metadata",
    "user": {
      "login": "luisgp9",
      "id": 73946660,
      "node_id": "MDQ6VXNlcjczOTQ2NjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/73946660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luisgp9",
      "html_url": "https://github.com/luisgp9",
      "followers_url": "https://api.github.com/users/luisgp9/followers",
      "following_url": "https://api.github.com/users/luisgp9/following{/other_user}",
      "gists_url": "https://api.github.com/users/luisgp9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luisgp9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luisgp9/subscriptions",
      "organizations_url": "https://api.github.com/users/luisgp9/orgs",
      "repos_url": "https://api.github.com/users/luisgp9/repos",
      "events_url": "https://api.github.com/users/luisgp9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luisgp9/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-04T17:39:46Z",
    "updated_at": "2024-12-04T17:54:45Z",
    "closed_at": "2024-12-04T17:52:43Z",
    "merged_at": "2024-12-04T17:52:43Z",
    "merge_commit_sha": "af11999728dd6510af66d3788bd275dae02ba87c",
    "assignee": {
      "login": "luisgp9",
      "id": 73946660,
      "node_id": "MDQ6VXNlcjczOTQ2NjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/73946660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luisgp9",
      "html_url": "https://github.com/luisgp9",
      "followers_url": "https://api.github.com/users/luisgp9/followers",
      "following_url": "https://api.github.com/users/luisgp9/following{/other_user}",
      "gists_url": "https://api.github.com/users/luisgp9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luisgp9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luisgp9/subscriptions",
      "organizations_url": "https://api.github.com/users/luisgp9/orgs",
      "repos_url": "https://api.github.com/users/luisgp9/repos",
      "events_url": "https://api.github.com/users/luisgp9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luisgp9/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "luisgp9",
        "id": 73946660,
        "node_id": "MDQ6VXNlcjczOTQ2NjYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73946660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luisgp9",
        "html_url": "https://github.com/luisgp9",
        "followers_url": "https://api.github.com/users/luisgp9/followers",
        "following_url": "https://api.github.com/users/luisgp9/following{/other_user}",
        "gists_url": "https://api.github.com/users/luisgp9/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/luisgp9/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/luisgp9/subscriptions",
        "organizations_url": "https://api.github.com/users/luisgp9/orgs",
        "repos_url": "https://api.github.com/users/luisgp9/repos",
        "events_url": "https://api.github.com/users/luisgp9/events{/privacy}",
        "received_events_url": "https://api.github.com/users/luisgp9/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/78/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/78/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/78/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/ce155e405ca2b66c1eaf6e929a0bd6953c408690",
    "head": {
      "label": "TostaHub:editMetadata",
      "ref": "editMetadata",
      "sha": "ce155e405ca2b66c1eaf6e929a0bd6953c408690",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "845870c4adfdb83141a5174a5ec6630871e4f078",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/78"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/78"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/78"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/78/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/78/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/78/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/ce155e405ca2b66c1eaf6e929a0bd6953c408690"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "c61a648ba22700cf40b98b4b7ff765d7ca3b0e23",
        "filename": "app/modules/dataset/forms.py",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/ce155e405ca2b66c1eaf6e929a0bd6953c408690/app%2Fmodules%2Fdataset%2Fforms.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/ce155e405ca2b66c1eaf6e929a0bd6953c408690/app%2Fmodules%2Fdataset%2Fforms.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fforms.py?ref=ce155e405ca2b66c1eaf6e929a0bd6953c408690",
        "patch": "@@ -2,9 +2,20 @@\n from wtforms import StringField, SelectField, FieldList, FormField, SubmitField, TextAreaField\n from wtforms.validators import DataRequired, URL, Optional\n \n+\n from app.modules.dataset.models import PublicationType\n \n \n+class EditDatasetForm(FlaskForm):\n+    description = TextAreaField('Description', validators=[DataRequired()])\n+    publication_type = SelectField(\n+        'Publication Type',\n+        choices=[(choice.name, choice.value) for choice in PublicationType],  # Cargamos las opciones del Enum\n+        validators=[DataRequired()]\n+    )\n+    tags = StringField('Tags')  # Agregamos el campo 'tags' para poder editarlo\n+\n+\n class AuthorForm(FlaskForm):\n     name = StringField(\"Name\", validators=[DataRequired()])\n     affiliation = StringField(\"Affiliation\")"
      },
      {
        "sha": "f8c9d7f95132421a603d98e0d3c2a58f24e48263",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 50,
        "deletions": 4,
        "changes": 54,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/ce155e405ca2b66c1eaf6e929a0bd6953c408690/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/ce155e405ca2b66c1eaf6e929a0bd6953c408690/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=ce155e405ca2b66c1eaf6e929a0bd6953c408690",
        "patch": "@@ -9,25 +9,29 @@\n from flask import send_file\n from datetime import datetime, timezone\n from zipfile import ZipFile\n+from app.modules.dataset.forms import EditDatasetForm\n+from flask import abort\n+from flask_login import current_user\n from werkzeug.exceptions import NotFound\n from app.modules.hubfile.services import HubfileService\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter, UVLWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n from flask import (\n+    flash,\n     redirect,\n     render_template,\n     request,\n     jsonify,\n     send_from_directory,\n     make_response,\n-    abort,\n-    url_for,\n+    url_for\n )\n-from flask_login import login_required, current_user\n+from flask_login import login_required\n \n from app.modules.dataset.forms import DataSetForm\n from app.modules.dataset.models import (\n-    DSDownloadRecord\n+    DSDownloadRecord,\n+    PublicationType\n )\n from app.modules.dataset import dataset_bp\n from app.modules.dataset.services import (\n@@ -406,6 +410,48 @@ def get_unsynchronized_dataset(dataset_id):\n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n \n \n+@dataset_bp.route(\"/dataset/<int:dataset_id>/\", methods=[\"GET\"])\n+def view_dataset(dataset_id):\n+    # Obt\u00e9n el dataset por su ID\n+    dataset = dataset_service.get_or_404(dataset_id)\n+\n+    # Renderiza la plantilla con los datos del dataset\n+    return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+\n+\n+@dataset_bp.route('/dataset/<int:dataset_id>/edit', methods=['GET', 'POST'])\n+@login_required\n+def edit_dataset(dataset_id):\n+    # Obtener el dataset a partir de su ID\n+    dataset = DataSetService().get_by_id(dataset_id)\n+\n+    # Verificar si el usuario logueado es el propietario del dataset\n+    if dataset.user_id != current_user.id:\n+        # Si el usuario no es el propietario, mostrar un error 403 (Prohibido)\n+        abort(403)\n+\n+    form = EditDatasetForm()\n+\n+    if form.validate_on_submit():\n+        # Asignar valores del formulario al modelo DSMetaData\n+        dataset.ds_meta_data.description = form.description.data\n+        dataset.ds_meta_data.publication_type = PublicationType[form.publication_type.data]\n+        dataset.ds_meta_data.tags = form.tags.data\n+\n+        # Guardar los cambios en la base de datos\n+        DataSetService().update(dataset)\n+\n+        flash(\"Dataset updated successfully\", \"success\")\n+        return redirect(url_for('dataset.view_dataset', dataset_id=dataset_id))\n+\n+    # Pre-popular el formulario con los datos existentes del dataset\n+    form.description.data = dataset.ds_meta_data.description\n+    form.publication_type.data = dataset.ds_meta_data.publication_type.name\n+    form.tags.data = dataset.ds_meta_data.tags\n+\n+    return render_template('dataset/edit_dataset.html', form=form, dataset=dataset)\n+\n+\n @dataset_bp.route(\"/datasets/<int:dataset_id>/rate\", methods=[\"POST\"])\n @login_required\n def rate_dataset(dataset_id):"
      },
      {
        "sha": "c897e7e09526e30807c0d7db81c800b98f519a42",
        "filename": "app/modules/dataset/services.py",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/ce155e405ca2b66c1eaf6e929a0bd6953c408690/app%2Fmodules%2Fdataset%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/ce155e405ca2b66c1eaf6e929a0bd6953c408690/app%2Fmodules%2Fdataset%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fservices.py?ref=ce155e405ca2b66c1eaf6e929a0bd6953c408690",
        "patch": "@@ -4,6 +4,7 @@\n import shutil\n from typing import Optional\n import uuid\n+from app import db\n \n from flask import request\n \n@@ -51,6 +52,15 @@ def __init__(self):\n         self.dsrating_repository = DSRatingRepository()\n         self.hubfileviewrecord_repository = HubfileViewRecordRepository()\n \n+    # M\u00e9todo de actualizaci\u00f3n para el dataset\n+    def update(self, dataset):\n+        try:\n+            # Aqu\u00ed modificamos los valores de los metadatos del dataset\n+            db.session.commit()  # Guardamos los cambios en la base de datos\n+        except Exception as e:\n+            db.session.rollback()\n+            raise e\n+\n     def move_feature_models(self, dataset: DataSet):\n         current_user = AuthenticationService().get_authenticated_user()\n         source_dir = current_user.temp_folder()"
      },
      {
        "sha": "2955d35d4edda5cb854b5f107c762693d48e585a",
        "filename": "app/modules/dataset/templates/dataset/edit_dataset.html",
        "status": "added",
        "additions": 93,
        "deletions": 0,
        "changes": 93,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/ce155e405ca2b66c1eaf6e929a0bd6953c408690/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fedit_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/ce155e405ca2b66c1eaf6e929a0bd6953c408690/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fedit_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fedit_dataset.html?ref=ce155e405ca2b66c1eaf6e929a0bd6953c408690",
        "patch": "@@ -0,0 +1,93 @@\n+<!-- app/templates/dataset/edit_dataset.html -->\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n+    <title>Edit Dataset</title>\n+    <style>\n+        body {\n+            font-family: Arial, sans-serif;\n+            background-color: #f8f9fa;\n+            margin: 0;\n+            padding: 0;\n+            display: flex;\n+            justify-content: center;\n+            align-items: center;\n+            height: 100vh;\n+        }\n+\n+        .form-container {\n+            background: #fff;\n+            padding: 20px 30px;\n+            border-radius: 8px;\n+            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n+            max-width: 400px;\n+            width: 100%;\n+        }\n+\n+        .form-container h2 {\n+            margin-bottom: 20px;\n+            color: #333;\n+            text-align: center;\n+        }\n+\n+        .form-container label {\n+            display: block;\n+            margin-bottom: 8px;\n+            font-weight: bold;\n+            color: #555;\n+        }\n+\n+        .form-container input[type=\"text\"],\n+        .form-container select {\n+            width: 100%;\n+            padding: 10px;\n+            margin-bottom: 15px;\n+            border: 1px solid #ddd;\n+            border-radius: 4px;\n+            font-size: 14px;\n+        }\n+\n+        .form-container button {\n+            width: 100%;\n+            padding: 10px 15px;\n+            background: #007bff;\n+            color: #fff;\n+            border: none;\n+            border-radius: 4px;\n+            font-size: 16px;\n+            cursor: pointer;\n+        }\n+\n+        .form-container button:hover {\n+            background: #0056b3;\n+        }\n+\n+        .form-container .form-group {\n+            margin-bottom: 15px;\n+        }\n+    </style>\n+</head>\n+<body>\n+    <div class=\"form-container\">\n+        <h2>Edit Dataset</h2>\n+        <form method=\"POST\" action=\"{{ url_for('dataset.edit_dataset', dataset_id=dataset.id) }}\">\n+            {{ form.hidden_tag() }}\n+            <div class=\"form-group\">\n+                <label for=\"description\">Description</label>\n+                {{ form.description(size=60) }}\n+            </div>\n+            <div class=\"form-group\">\n+                <label for=\"publication_type\">Publication Type</label>\n+                {{ form.publication_type() }}\n+            </div>\n+            <div class=\"form-group\">\n+                <label for=\"tags\">Tags</label>\n+                {{ form.tags(size=60) }}\n+            </div>\n+            <button type=\"submit\">Save Changes</button>\n+        </form>\n+    </div>\n+</body>\n+</html>"
      },
      {
        "sha": "6bba9cab3fb16250153b842d8388977e2d47d85c",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/ce155e405ca2b66c1eaf6e929a0bd6953c408690/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/ce155e405ca2b66c1eaf6e929a0bd6953c408690/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=ce155e405ca2b66c1eaf6e929a0bd6953c408690",
        "patch": "@@ -25,6 +25,11 @@\n             <i data-feather=\"search\" class=\"center-button-icon\"></i>\n             Explore more datasets\n         </a>\n+        {% if dataset.user_id == current_user.id %}\n+             <a href=\"{{ url_for('dataset.edit_dataset', dataset_id=dataset.id) }}\" class=\"btn btn-primary\">Edit Dataset</a>\n+        {% endif %}\n+\n+\n     </div>\n \n </div>"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/77",
    "id": 2215859257,
    "node_id": "PR_kwDONB39G86EE1Q5",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/77",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/77.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/77.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/77",
    "number": 77,
    "state": "closed",
    "locked": false,
    "title": "Add doc politica de issues",
    "user": {
      "login": "luisgp9",
      "id": 73946660,
      "node_id": "MDQ6VXNlcjczOTQ2NjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/73946660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luisgp9",
      "html_url": "https://github.com/luisgp9",
      "followers_url": "https://api.github.com/users/luisgp9/followers",
      "following_url": "https://api.github.com/users/luisgp9/following{/other_user}",
      "gists_url": "https://api.github.com/users/luisgp9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luisgp9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luisgp9/subscriptions",
      "organizations_url": "https://api.github.com/users/luisgp9/orgs",
      "repos_url": "https://api.github.com/users/luisgp9/repos",
      "events_url": "https://api.github.com/users/luisgp9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luisgp9/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-04T17:37:00Z",
    "updated_at": "2024-12-04T17:38:47Z",
    "closed_at": "2024-12-04T17:38:47Z",
    "merged_at": "2024-12-04T17:38:47Z",
    "merge_commit_sha": "845870c4adfdb83141a5174a5ec6630871e4f078",
    "assignee": {
      "login": "luisgp9",
      "id": 73946660,
      "node_id": "MDQ6VXNlcjczOTQ2NjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/73946660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luisgp9",
      "html_url": "https://github.com/luisgp9",
      "followers_url": "https://api.github.com/users/luisgp9/followers",
      "following_url": "https://api.github.com/users/luisgp9/following{/other_user}",
      "gists_url": "https://api.github.com/users/luisgp9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luisgp9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luisgp9/subscriptions",
      "organizations_url": "https://api.github.com/users/luisgp9/orgs",
      "repos_url": "https://api.github.com/users/luisgp9/repos",
      "events_url": "https://api.github.com/users/luisgp9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luisgp9/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "luisgp9",
        "id": 73946660,
        "node_id": "MDQ6VXNlcjczOTQ2NjYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73946660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luisgp9",
        "html_url": "https://github.com/luisgp9",
        "followers_url": "https://api.github.com/users/luisgp9/followers",
        "following_url": "https://api.github.com/users/luisgp9/following{/other_user}",
        "gists_url": "https://api.github.com/users/luisgp9/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/luisgp9/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/luisgp9/subscriptions",
        "organizations_url": "https://api.github.com/users/luisgp9/orgs",
        "repos_url": "https://api.github.com/users/luisgp9/repos",
        "events_url": "https://api.github.com/users/luisgp9/events{/privacy}",
        "received_events_url": "https://api.github.com/users/luisgp9/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/77/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/77/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/77/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d28f5e063f4a49e5953bcc9198ac0066ad625c1a",
    "head": {
      "label": "TostaHub:addDocs",
      "ref": "addDocs",
      "sha": "d28f5e063f4a49e5953bcc9198ac0066ad625c1a",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "1cacc382ebfe21d6ab63a3d4c5d26f3e6a02cb21",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/77"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/77"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/77"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/77/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/77/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/77/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d28f5e063f4a49e5953bcc9198ac0066ad625c1a"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "001b7f1fa80d142ceb3d2c79d0a5aa663f681039",
        "filename": "docs/Pol\u00edticas de Issues.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d28f5e063f4a49e5953bcc9198ac0066ad625c1a/docs%2FPol%C3%ADticas%20de%20Issues.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d28f5e063f4a49e5953bcc9198ac0066ad625c1a/docs%2FPol%C3%ADticas%20de%20Issues.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FPol%C3%ADticas%20de%20Issues.pdf?ref=d28f5e063f4a49e5953bcc9198ac0066ad625c1a"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/76",
    "id": 2215826121,
    "node_id": "PR_kwDONB39G86EEtLJ",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/76",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/76.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/76.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/76",
    "number": 76,
    "state": "closed",
    "locked": false,
    "title": "Integration ",
    "user": {
      "login": "luisgp9",
      "id": 73946660,
      "node_id": "MDQ6VXNlcjczOTQ2NjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/73946660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luisgp9",
      "html_url": "https://github.com/luisgp9",
      "followers_url": "https://api.github.com/users/luisgp9/followers",
      "following_url": "https://api.github.com/users/luisgp9/following{/other_user}",
      "gists_url": "https://api.github.com/users/luisgp9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luisgp9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luisgp9/subscriptions",
      "organizations_url": "https://api.github.com/users/luisgp9/orgs",
      "repos_url": "https://api.github.com/users/luisgp9/repos",
      "events_url": "https://api.github.com/users/luisgp9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luisgp9/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-04T17:20:04Z",
    "updated_at": "2024-12-15T16:10:16Z",
    "closed_at": "2024-12-04T17:29:19Z",
    "merged_at": "2024-12-04T17:29:19Z",
    "merge_commit_sha": "1cacc382ebfe21d6ab63a3d4c5d26f3e6a02cb21",
    "assignee": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pabmatang",
        "id": 73099537,
        "node_id": "MDQ6VXNlcjczMDk5NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pabmatang",
        "html_url": "https://github.com/pabmatang",
        "followers_url": "https://api.github.com/users/pabmatang/followers",
        "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
        "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
        "organizations_url": "https://api.github.com/users/pabmatang/orgs",
        "repos_url": "https://api.github.com/users/pabmatang/repos",
        "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pabmatang/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/76/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/76/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/76/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d26540a51e1b55f1a20085dd0d90337228ed7262",
    "head": {
      "label": "TostaHub:downloadInDifferentFormats",
      "ref": "downloadInDifferentFormats",
      "sha": "d26540a51e1b55f1a20085dd0d90337228ed7262",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "16b054cbd9d802dc7f48b4d2928a4d5e56af0139",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/76"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/76"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/76"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/76/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/76/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/76/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d26540a51e1b55f1a20085dd0d90337228ed7262"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "73f0f0e1a40d0f77057c2d29eff47b3cb515e582",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 116,
        "deletions": 1,
        "changes": 117,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d26540a51e1b55f1a20085dd0d90337228ed7262/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d26540a51e1b55f1a20085dd0d90337228ed7262/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=d26540a51e1b55f1a20085dd0d90337228ed7262",
        "patch": "@@ -4,9 +4,15 @@\n import shutil\n import tempfile\n import uuid\n+import io\n+import zipfile\n+from flask import send_file\n from datetime import datetime, timezone\n from zipfile import ZipFile\n-\n+from werkzeug.exceptions import NotFound\n+from app.modules.hubfile.services import HubfileService\n+from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter, UVLWriter\n+from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n from flask import (\n     redirect,\n     render_template,\n@@ -252,6 +258,115 @@ def download_dataset(dataset_id):\n     return resp\n \n \n+def generate_glencoe_file(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.json', delete=False)\n+    try:\n+        hubfile = HubfileService().get_or_404(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm1 = UVLReader(file_path).transform()\n+        GlencoeWriter(temp_file.name, fm1).transform()\n+        return temp_file.name  # Retorna la ruta del archivo generado\n+    except Exception as e:\n+        raise RuntimeError(f\"Error generating Glencoe file: {e}\")\n+\n+\n+def generate_splot_file(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.splx', delete=False)\n+    try:\n+        hubfile = HubfileService().get_by_id(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n+        SPLOTWriter(temp_file.name, fm).transform()\n+        return temp_file.name  # Retorna la ruta del archivo generado\n+    except Exception as e:\n+        raise RuntimeError(f\"Error generating SPLOT file: {e}\")\n+\n+\n+def generate_cnf_file(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.cnf', delete=False)\n+    try:\n+        hubfile = HubfileService().get_by_id(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n+        sat = FmToPysat(fm).transform()\n+        DimacsWriter(temp_file.name, sat).transform()\n+        return temp_file.name  # Retorna la ruta del archivo generado\n+    except Exception as e:\n+        raise RuntimeError(f\"Error generating DIMACS file: {e}\")\n+\n+\n+def generate_uvl_file(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.uvl', delete=False)\n+    try:\n+        hubfile = HubfileService().get_by_id(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n+        UVLWriter(temp_file.name, fm).transform()\n+        return temp_file.name  # Retorna la ruta del archivo generado\n+    except Exception as e:\n+        raise RuntimeError(f\"Error generating UVL file: {e}\")\n+\n+\n+@dataset_bp.route('/download_all/<int:file_id>')\n+def download_all_formats(file_id):\n+    try:\n+        # Generar los archivos\n+        uvl_path = generate_uvl_file(file_id)\n+        glencoe_path = generate_glencoe_file(file_id)\n+        dimacs_path = generate_cnf_file(file_id)\n+        splot_path = generate_splot_file(file_id)\n+\n+        # Crear un archivo ZIP en memoria\n+        memory_file = io.BytesIO()\n+        with zipfile.ZipFile(memory_file, 'w') as zf:\n+            zf.write(uvl_path, os.path.basename(uvl_path))\n+            zf.write(glencoe_path, os.path.basename(glencoe_path))\n+            zf.write(dimacs_path, os.path.basename(dimacs_path))\n+            zf.write(splot_path, os.path.basename(splot_path))\n+\n+        memory_file.seek(0)\n+\n+        # Eliminar archivos temporales\n+        os.remove(uvl_path)\n+        os.remove(glencoe_path)\n+        os.remove(dimacs_path)\n+        os.remove(splot_path)\n+\n+        # Devolver archivo ZIP como respuesta\n+        return send_file(\n+            memory_file,\n+            mimetype='application/zip',\n+            as_attachment=True,\n+            download_name=f\"files_{file_id}.zip\"\n+        )\n+    except Exception as e:\n+        return jsonify({'error': str(e)}), 500\n+\n+\n @dataset_bp.route(\"/doi/<path:doi>/\", methods=[\"GET\"])\n def subdomain_index(doi):\n "
      },
      {
        "sha": "71689e17697c7db0cca3dd4071ee494994843d30",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d26540a51e1b55f1a20085dd0d90337228ed7262/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d26540a51e1b55f1a20085dd0d90337228ed7262/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=d26540a51e1b55f1a20085dd0d90337228ed7262",
        "patch": "@@ -326,11 +326,13 @@ <h4 style=\"margin-bottom: 0px;\"><span class=\"badge bg-dark\">{{ dataset.get_files\n                                                 SPLOT\n                                             </a>\n                                         </li>\n+                                        <li>\n+                                            <a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_all_formats', file_id=file.id) }}\">\n+                                                Descargar todos (ZIP)\n+                                            </a>\n+                                        </li>\n                                     </ul>\n                                 </div>\n-                                \n-                                \n-\n                             </div>\n                         </div>\n                     </div>"
      },
      {
        "sha": "b7b732b7c7cee1349fc3885dc7b31a3ccad92e5d",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "added",
        "additions": 101,
        "deletions": 0,
        "changes": 101,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d26540a51e1b55f1a20085dd0d90337228ed7262/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d26540a51e1b55f1a20085dd0d90337228ed7262/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=d26540a51e1b55f1a20085dd0d90337228ed7262",
        "patch": "@@ -0,0 +1,101 @@\n+import unittest\n+from unittest.mock import patch, MagicMock\n+import os\n+from app import app\n+\n+\n+class TestDownloadAllFormats(unittest.TestCase):\n+\n+    def setUp(self):\n+        # Configura una instancia de la aplicaci\u00f3n para pruebas\n+        self.app = app.test_client()\n+        self.app.testing = True\n+\n+    @patch('app.modules.dataset.routes.generate_uvl_file')\n+    @patch('app.modules.dataset.routes.generate_glencoe_file')\n+    @patch('app.modules.dataset.routes.generate_cnf_file')\n+    @patch('app.modules.dataset.routes.generate_splot_file')\n+    @patch('app.modules.dataset.routes.send_file')\n+    def test_download_all_formats_success(\n+        self,\n+        mock_send_file,\n+        mock_generate_splot,\n+        mock_generate_cnf,\n+        mock_generate_glencoe,\n+        mock_generate_uvl\n+    ):\n+        # Mockear las rutas de los archivos generados\n+        mock_generate_uvl.return_value = '/tmp/file.uvl'\n+        mock_generate_glencoe.return_value = '/tmp/file_glencoe.json'\n+        mock_generate_cnf.return_value = '/tmp/file.cnf'\n+        mock_generate_splot.return_value = '/tmp/file.splx'\n+\n+        # Mockear el comportamiento de send_file\n+        mock_send_file.return_value = MagicMock()\n+\n+        # Simular la existencia de los archivos\n+        for path in [\n+            mock_generate_uvl.return_value,\n+            mock_generate_glencoe.return_value,\n+            mock_generate_cnf.return_value,\n+            mock_generate_splot.return_value\n+        ]:\n+            with open(path, 'w') as f:\n+                f.write('mock content')\n+\n+        # Hacer la solicitud a la ruta\n+        response = self.app.get('/download_all/123')\n+\n+        # Validar que la respuesta sea exitosa\n+        self.assertEqual(response.status_code, 200)\n+        mock_send_file.assert_called_once()\n+\n+        # Verificar que los m\u00e9todos de generaci\u00f3n se llamaron con el ID correcto\n+        mock_generate_uvl.assert_called_once_with(123)\n+        mock_generate_glencoe.assert_called_once_with(123)\n+        mock_generate_cnf.assert_called_once_with(123)\n+        mock_generate_splot.assert_called_once_with(123)\n+\n+        # Limpiar los archivos temporales\n+        for path in [\n+            mock_generate_uvl.return_value,\n+            mock_generate_glencoe.return_value,\n+            mock_generate_cnf.return_value,\n+            mock_generate_splot.return_value\n+        ]:\n+            if os.path.exists(path):\n+                os.remove(path)\n+\n+    @patch('app.modules.dataset.routes.generate_uvl_file')\n+    @patch('app.modules.dataset.routes.generate_glencoe_file')\n+    @patch('app.modules.dataset.routes.generate_cnf_file')\n+    @patch('app.modules.dataset.routes.generate_splot_file')\n+    def test_download_all_formats_file_generation_failure(\n+        self,\n+        mock_generate_splot,\n+        mock_generate_cnf,\n+        mock_generate_glencoe,\n+        mock_generate_uvl\n+    ):\n+        # Simular que una de las funciones de generaci\u00f3n lanza un error\n+        mock_generate_uvl.side_effect = RuntimeError(\"UVL generation failed\")\n+        mock_generate_glencoe.return_value = '/tmp/file_glencoe.json'\n+        mock_generate_cnf.return_value = '/tmp/file.cnf'\n+        mock_generate_splot.return_value = '/tmp/file.splx'\n+\n+        # Hacer la solicitud a la ruta\n+        response = self.app.get('/download_all/123')\n+\n+        # Validar que la respuesta indique un error\n+        self.assertEqual(response.status_code, 500)\n+        self.assertIn(b'\"error\": \"UVL generation failed\"', response.data)\n+\n+        # Verificar que las funciones se llamaron\n+        mock_generate_uvl.assert_called_once_with(123)\n+        mock_generate_glencoe.assert_not_called()\n+        mock_generate_cnf.assert_not_called()\n+        mock_generate_splot.assert_not_called()\n+\n+\n+if __name__ == '__main__':\n+    unittest.main()"
      },
      {
        "sha": "1c6558ae112630b71753d03c3078bb9a986159a7",
        "filename": "app/modules/flamapy/tests/test_unit.py",
        "status": "modified",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d26540a51e1b55f1a20085dd0d90337228ed7262/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d26540a51e1b55f1a20085dd0d90337228ed7262/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py?ref=d26540a51e1b55f1a20085dd0d90337228ed7262",
        "patch": "@@ -1,4 +1,7 @@\n import pytest\n+from flask import Flask\n+from unittest.mock import patch, MagicMock\n+from app.modules.flamapy.routes import flamapy_bp\n from app.modules.common.dbutils import create_dataset_db\n \n \n@@ -24,6 +27,184 @@ def test_sample_assertion(test_client):\n     assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\"\n \n \n+# TEST DE GLENCOE\n+@pytest.fixture\n+def client():\n+    app = Flask(__name__)\n+    app.register_blueprint(flamapy_bp)  # Registra el blueprint con las rutas\n+    with app.test_client() as client:\n+        yield client\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.isfile')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.UVLReader')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.GlencoeWriter')\n+def test_to_glencoe_success(mock_glencoe_writer, mock_uvl_reader, mock_isfile, mock_get_or_404, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_or_404.return_value = mock_hubfile\n+    # Mock de UVLReader y GlencoeWriter\n+    mock_uvl_reader.return_value.transform.return_value = \"mocked_feature_model\"\n+    mock_glencoe_writer.return_value.transform.return_value = None\n+\n+    response = client.get('/flamapy/to_glencoe/10')\n+    assert response.status_code == 200\n+    assert response.headers[\"Content-Disposition\"] == \"attachment; filename=file10.uvl_glencoe.txt\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.isfile')\n+def test_to_glencoe_file_not_found(mock_isfile, mock_get_or_404, client):\n+    # Simula que el archivo no existe en el sistema de archivos\n+    mock_isfile.return_value = False\n+    # Mock de HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_or_404.return_value = mock_hubfile\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_glencoe/10')\n+    # Verifica que el c\u00f3digo de estado es 404\n+    assert response.status_code == 404\n+    assert response.json[\"error\"] == \"File file10.uvl not found\"\n+# Error inesperado dentro de la l\u00f3gica del c\u00f3digo de servicio\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.isfile')\n+def test_to_glencoe_unexpected(mock_isfile, mock_get_or_404, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = False  # No existe en el sistema de archivos\n+    # Mock de HubfileService para lanzar un error inesperado\n+    mock_get_or_404.side_effect = ValueError(\"Unexpected error\")  # Simula un error inesperado\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_glencoe/5')\n+    # Verifica que el c\u00f3digo de estado es 500\n+    assert response.status_code == 500\n+    assert response.json[\"error\"] == \"Internal Server Error\"\n+    assert response.json[\"details\"] == \"Unexpected error\"\n+\n+\n+# TEST DE SPLOT\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.UVLReader')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.SPLOTWriter')\n+def test_to_splot_success(mock_splot_writer, mock_uvl_reader, mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Mock de UVLReader y SPLOTWriter\n+    mock_uvl_reader.return_value.transform.return_value = \"mocked_feature_model\"\n+    mock_splot_writer.return_value.transform.return_value = None\n+\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_splot/10')\n+    # Verifica que el c\u00f3digo de estado es 200\n+    assert response.status_code == 200\n+    # Verifica que el archivo se est\u00e1 devolviendo como attachment\n+    assert response.headers[\"Content-Disposition\"] == \"attachment; filename=file10.uvl_splot.txt\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+def test_to_splot_file_not_found(mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo no existe en el sistema de archivos\n+    mock_isfile.return_value = False\n+    # Mock de HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_splot/10')\n+    # Verifica que el c\u00f3digo de estado es 404\n+    assert response.status_code == 404\n+    assert response.json[\"error\"] == \"File file10.uvl not found\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+def test_to_splot_unexpected(mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True  # El archivo existe en el sistema\n+    # Mock de HubfileService para lanzar un error inesperado\n+    mock_get_by_id.side_effect = ValueError(\"Unexpected error\")  # Simula un error inesperado\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_splot/5')\n+    # Verifica que el c\u00f3digo de estado es 500\n+    assert response.status_code == 500\n+    assert response.json[\"error\"] == \"Internal Server Error\"\n+    assert response.json[\"details\"] == \"Unexpected error\"\n+\n+\n+# TEST DE CNF\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.UVLReader')\n+@patch('flamapy.metamodels.pysat_metamodel.transformations.FmToPysat')\n+@patch('flamapy.metamodels.pysat_metamodel.transformations.DimacsWriter')\n+def test_to_cnf_success(mock_dimacs_writer, mock_fm_to_pysat, mock_uvl_reader, mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Mock de UVLReader, FmToPysat y DimacsWriter\n+    mock_uvl_reader.return_value.transform.return_value = \"mocked_feature_model\"\n+    mock_fm_to_pysat.return_value.transform.return_value = \"mocked_sat\"\n+    mock_dimacs_writer.return_value.transform.return_value = None\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_cnf/10')\n+    # Verifica que el c\u00f3digo de estado es 200\n+    assert response.status_code == 200\n+    # Verifica que el archivo se est\u00e1 devolviendo como attachment con el nombre correcto\n+    assert response.headers[\"Content-Disposition\"] == \"attachment; filename=file10.uvl_cnf.txt\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+def test_to_cnf_file_not_found(mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo no existe\n+    mock_isfile.return_value = False\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_cnf/10')\n+    # Verifica que el c\u00f3digo de estado es 404\n+    assert response.status_code == 404\n+    # Verifica el mensaje de error\n+    assert response.json[\"error\"] == \"File file10.uvl not found\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+def test_to_cnf_unexpected(mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True  # El archivo \"existe\"\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Simula un error inesperado al llamar al servicio\n+    mock_get_by_id.side_effect = ValueError(\"Unexpected error\")\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_cnf/10')\n+    # Verifica que el c\u00f3digo de estado es 500\n+    assert response.status_code == 500\n+    # Verifica el mensaje de error y los detalles\n+    assert response.json[\"error\"] == \"Internal Server Error\"\n+    assert response.json[\"details\"] == \"Unexpected error\"\n+\n+\n def test_num_configurations_get(test_client):\n     \"\"\"\n     Tests GET request of num of configurations of given file ids."
      },
      {
        "sha": "42b7e98ff5e111604385042f0b07667ac7d1a143",
        "filename": "app/modules/hubfile/tests/test_unit.py",
        "status": "modified",
        "additions": 76,
        "deletions": 0,
        "changes": 76,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d26540a51e1b55f1a20085dd0d90337228ed7262/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d26540a51e1b55f1a20085dd0d90337228ed7262/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_unit.py?ref=d26540a51e1b55f1a20085dd0d90337228ed7262",
        "patch": "@@ -1,4 +1,32 @@\n import pytest\n+from unittest.mock import patch, MagicMock\n+from app.modules.hubfile.services import HubfileService\n+from flask import Flask\n+from flask_login import UserMixin\n+from flask import abort\n+import os\n+\n+\n+# Crear un usuario simulado para las pruebas\n+class MockUser(UserMixin):\n+    def __init__(self, id):\n+        self.id = id\n+\n+\n+@pytest.fixture\n+def mock_user():\n+    user = MockUser(id=1)\n+    return user\n+\n+\n+@pytest.fixture\n+def test_client_with_user(mock_user, test_client):\n+    \"\"\"\n+    Configura el cliente de prueba con un usuario autenticado.\n+    \"\"\"\n+    with test_client.session_transaction() as session:\n+        session['_user_id'] = mock_user.id\n+    yield test_client\n \n \n @pytest.fixture(scope='module')\n@@ -22,3 +50,51 @@ def test_sample_assertion(test_client):\n     \"\"\"\n     greeting = \"Hello, World!\"\n     assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.exists')\n+@patch('flask.send_from_directory')\n+def test_download_file_success(mock_send_from_directory, mock_exists, mock_get_or_404, client):\n+    mock_exists.return_value = True\n+\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_or_404.return_value = mock_hubfile\n+\n+    mock_send_from_directory.return_value = MagicMock(status_code=200, data=b\"file content\")\n+\n+    response = client.get('/file/download/10')\n+    assert response.status_code == 200\n+\n+\n+@pytest.fixture\n+def client():\n+    app = Flask(__name__)\n+    app.testing = True\n+\n+    @app.route('/file/download/<int:file_id>')\n+    def download_file(file_id):\n+        # Simula la l\u00f3gica con abort para pruebas\n+        hubfile = HubfileService.get_or_404(file_id)\n+        if not os.path.exists(hubfile.name):\n+            abort(404)\n+        return \"file content\", 200\n+    return app.test_client()\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.exists')\n+def test_download_file_not_found(mock_exists, mock_get_or_404, client):\n+    # Simula que el archivo no existe\n+    mock_exists.return_value = False\n+\n+    # Simula el objeto de archivo\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_or_404.return_value = mock_hubfile\n+\n+    # Ejecuta el cliente de prueba en la ruta\n+    response = client.get('/file/download/10')\n+    # Valida el resultado esperado 404\n+    assert response.status_code == 404"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/74",
    "id": 2215821921,
    "node_id": "PR_kwDONB39G86EEsJh",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/74",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/74.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/74.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/74",
    "number": 74,
    "state": "closed",
    "locked": false,
    "title": "test: Add explore load test",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-04T17:17:44Z",
    "updated_at": "2024-12-04T17:25:55Z",
    "closed_at": "2024-12-04T17:25:51Z",
    "merged_at": "2024-12-04T17:25:51Z",
    "merge_commit_sha": "16b054cbd9d802dc7f48b4d2928a4d5e56af0139",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/74/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/74/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/74/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/1b404ccf9d06a9afa7dd1c35d114ed5a8f4e7f49",
    "head": {
      "label": "TostaHub:locustTestExplore",
      "ref": "locustTestExplore",
      "sha": "1b404ccf9d06a9afa7dd1c35d114ed5a8f4e7f49",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/74"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/74"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/74"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/74/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/74/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/74/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/1b404ccf9d06a9afa7dd1c35d114ed5a8f4e7f49"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "b8e01c2a7367cb51cd63aead610905c19ddad9bf",
        "filename": "app/modules/explore/tests/locustfile.py",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/1b404ccf9d06a9afa7dd1c35d114ed5a8f4e7f49/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/1b404ccf9d06a9afa7dd1c35d114ed5a8f4e7f49/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Flocustfile.py?ref=1b404ccf9d06a9afa7dd1c35d114ed5a8f4e7f49",
        "patch": "@@ -0,0 +1,21 @@\n+from locust import HttpUser, TaskSet, task\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class ExploreBehavior(TaskSet):\n+    def on_start(self):\n+        self.index()\n+\n+    @task\n+    def index(self):\n+        response = self.client.get(\"/explore\")\n+\n+        if response.status_code != 200:\n+            print(f\"Explore index failed: {response.status_code}\")\n+\n+\n+class ExploreUser(HttpUser):\n+    tasks = [ExploreBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n+    host = get_host_for_locust_testing()"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/72",
    "id": 2215764865,
    "node_id": "PR_kwDONB39G86EEeOB",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/72",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/72.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/72.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/72",
    "number": 72,
    "state": "closed",
    "locked": false,
    "title": "Develop",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-04T16:47:53Z",
    "updated_at": "2024-12-04T16:49:45Z",
    "closed_at": "2024-12-04T16:49:45Z",
    "merged_at": "2024-12-04T16:49:45Z",
    "merge_commit_sha": "2c0264bc2742a5b0b8e6b5aa8c2cf5ff605273f0",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/72/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/72/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/72/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "19d9a6b8d05d0ce8f80775303ed1e87108f62651",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/72"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/72"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/72"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/72/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/72/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/72/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/7701c26073813e1d3c96963e2bf3309b7fb6f6e5"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "35b73b75239de7429b2fd1d879bbaa650ee82630",
        "filename": "M01-incremento.pdf",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/47eef1a045e70bd79b1c7c17b249c3d68bfa5220/M01-incremento.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/47eef1a045e70bd79b1c7c17b249c3d68bfa5220/M01-incremento.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/M01-incremento.pdf?ref=47eef1a045e70bd79b1c7c17b249c3d68bfa5220"
      },
      {
        "sha": "2add39ddbef160ef469a7811c12a6035a5378cfa",
        "filename": "PoliticaCommits.pdf",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/47eef1a045e70bd79b1c7c17b249c3d68bfa5220/PoliticaCommits.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/47eef1a045e70bd79b1c7c17b249c3d68bfa5220/PoliticaCommits.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/PoliticaCommits.pdf?ref=47eef1a045e70bd79b1c7c17b249c3d68bfa5220"
      },
      {
        "sha": "b9b13db9858f20a553cdd448e1cc4c5b0ea2d468",
        "filename": "app/modules/common/dbutils.py",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fcommon%2Fdbutils.py?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "patch": "@@ -0,0 +1,83 @@\n+import os\n+import shutil\n+from app import db\n+from app.modules.auth.models import User\n+from app.modules.dataset.models import (\n+    DataSet,\n+    DSMetaData,\n+    PublicationType,\n+    DSMetrics)\n+from app.modules.hubfile.models import Hubfile\n+from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from datetime import datetime, timezone\n+from dotenv import load_dotenv\n+\n+\n+def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN, tags=\"\"):\n+    user_test = User(email=f'user{id}@example.com', password='test1234')\n+    db.session.add(user_test)\n+    db.session.commit()\n+\n+    ds_metrics = DSMetrics(number_of_models='1', number_of_features='5')\n+    db.session.add(ds_metrics)\n+    db.session.commit()\n+\n+    ds_meta_data = DSMetaData(\n+            deposition_id=id,\n+            title=f'Sample dataset {id}',\n+            description=f'Description for dataset {id}',\n+            publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n+            publication_doi=f'10.1234/dataset{id}',\n+            dataset_doi=f'10.1234/dataset{id}',\n+            tags='tag1, tag2',\n+            ds_metrics_id=ds_metrics.id\n+        )\n+    db.session.add(ds_meta_data)\n+    db.session.commit()\n+\n+    dataset = DataSet(\n+            user_id=user_test.id,\n+            ds_meta_data_id=ds_meta_data.id,\n+            created_at=datetime.now(timezone.utc)\n+        )\n+    db.session.add(dataset)\n+    db.session.commit()\n+\n+    fm_meta_data = FMMetaData(\n+            uvl_filename=f'file{id}.uvl',\n+            title=f'Feature Model {id}',\n+            description=f'Description for feature model {id}',\n+            publication_type=PublicationType.SOFTWARE_DOCUMENTATION,\n+            publication_doi='10.1234/fm1',\n+            tags=tags,\n+            uvl_version='1.0'\n+        )\n+    db.session.add(fm_meta_data)\n+    db.session.commit()\n+\n+    feature_model = FeatureModel(\n+            data_set_id=dataset.id,\n+            fm_meta_data_id=fm_meta_data.id\n+        )\n+    db.session.add(feature_model)\n+    db.session.commit()\n+\n+    load_dotenv()\n+    working_dir = os.getenv('WORKING_DIR', '')\n+    file_name = f'file{id}.uvl'\n+    src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n+\n+    dest_folder = os.path.join(working_dir, 'uploads', f'user_{user_test.id}', f'dataset_{dataset.id}')\n+    os.makedirs(dest_folder, exist_ok=True)\n+    shutil.copy(os.path.join(src_folder, file_name), dest_folder)\n+\n+    file_path = os.path.join(dest_folder, file_name)\n+\n+    uvl_file = Hubfile(\n+        name=file_name,\n+        checksum=f'checksum{id}',\n+        size=os.path.getsize(file_path),\n+        feature_model_id=feature_model.id\n+    )\n+    db.session.add(uvl_file)\n+    db.session.commit()"
      },
      {
        "sha": "6fdb6c955639c035f5a2d4c11caa2cf80ae26c74",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "patch": "@@ -34,6 +34,8 @@ function send_query() {\n             \n             setNumFilterMaxMin(filter, minNumConfg, maxNumConfg);\n \n+            byValidUvls = document.querySelector('#by_valid_uvls').checked ? \"on\" : \"off\"\n+\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n@@ -42,7 +44,7 @@ function send_query() {\n                 end_date: endDate.value,\n                 min_uvl: minUvl.value,\n                 max_uvl: maxUvl.value,\n-                by_valid_uvls: document.querySelector('#by_valid_uvls').value,\n+                by_valid_uvls: byValidUvls,\n                 min_num_configurations: minNumConfg.value,\n                 max_num_configurations: maxNumConfg.value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,"
      },
      {
        "sha": "ad264a81cdba31cc3ae6d4dcdcb163657625db8b",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "patch": "@@ -118,8 +118,8 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         if by_valid_uvls == \"on\":\n             results = [\n                 ds for ds in results\n-                if any(\n-                    any(\n+                if all(\n+                    all(\n                         check_uvl(file.id)[1] == 200\n                         for file in fm.files\n                     )\n@@ -147,7 +147,12 @@ def num_configurations_between(file_id, min_num_configurations, max_num_configur\n \n     if status_code == 200:\n         num = int(result.json[\"result\"])\n-        return (min_num_configurations.isdigit() and num >= int(min_num_configurations)\n-                and max_num_configurations.isdigit() and num <= int(max_num_configurations))\n+        valid_min = min_num_configurations.isdigit()\n+        valid_max = max_num_configurations.isdigit()\n+        if valid_min and valid_max:\n+            return num >= int(min_num_configurations) and num <= int(max_num_configurations)\n+        else:\n+            return (valid_min and num >= int(min_num_configurations)\n+                    or valid_max and num <= int(max_num_configurations))\n \n     return True"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/explore/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5"
      },
      {
        "sha": "c1ea8f4e1addfe632c8fe8156078750d32db453c",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "added",
        "additions": 93,
        "deletions": 0,
        "changes": 93,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "patch": "@@ -0,0 +1,93 @@\n+import pytest\n+from app.modules.dataset.models import PublicationType\n+from app.modules.common.dbutils import create_dataset_db\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        create_dataset_db(1, PublicationType.BOOK, \"tag1,tag2\")\n+        create_dataset_db(2, PublicationType.ANNOTATION_COLLECTION, \"tag2\")\n+        create_dataset_db(3, PublicationType.BOOK)\n+\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_explore_get(test_client):\n+    \"\"\"\n+    Tests access to explore GET request.\n+    \"\"\"\n+\n+    response = test_client.get(\"/explore\")\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+\n+\n+def test_explore_post(test_client):\n+    \"\"\"\n+    Tests access to explore POST request.\n+    \"\"\"\n+\n+    search_criteria = get_search_criteria()\n+\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    assert len(response.get_json()) == 3, \"Wrong number of datasets\"\n+\n+\n+def test_explore_filter_num_uvls_post(test_client):\n+    \"\"\"\n+    Tests access to explore POST request with a filter.\n+    \"\"\"\n+\n+    search_criteria = get_search_criteria(max_uvl=\"1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_ds = len(response.get_json())\n+    assert num_ds == 3, f\"Wrong number of datasets: {num_ds}\"\n+\n+    search_criteria = get_search_criteria(max_uvl=\"0\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_ds = len(response.get_json())\n+    assert num_ds == 0, f\"Wrong number of datasets: {num_ds}\"\n+\n+\n+def test_explore_filter_num_configurations_post(test_client):\n+    \"\"\"\n+    Tests access to explore POST request with a filter.\n+    \"\"\"\n+\n+    search_criteria = get_search_criteria(min_num_configurations=\"1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_conf = len(response.get_json())\n+    assert num_conf == 3, f\"Wrong number of datasets: {num_conf}\"\n+\n+    search_criteria = get_search_criteria(max_num_configurations=\"0\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_conf = len(response.get_json())\n+    assert num_conf == 0, f\"Wrong number of datasets: {num_conf}\"\n+\n+\n+def get_search_criteria(query=\"\", sorting=\"newest\", publication_type=\"any\",\n+                        start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\",\n+                        by_valid_uvls=\"off\", min_num_configurations=\"\", max_num_configurations=\"\"):\n+    search_criteria = {\n+        \"by_valid_uvls\": by_valid_uvls,\n+        \"end_date\": end_date,\n+        \"max_num_configurations\": max_num_configurations,\n+        \"max_uvl\": max_uvl,\n+        \"min_num_configurations\": min_num_configurations,\n+        \"min_uvl\": min_uvl,\n+        \"publication_type\": publication_type,\n+        \"query\": query,\n+        \"sorting\": sorting,\n+        \"start_date\": start_date,\n+    }\n+    return search_criteria"
      },
      {
        "sha": "d19bdb3f899a68de860ae19d69243d471fe42c97",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "patch": "@@ -154,6 +154,7 @@ def to_cnf(file_id):\n         return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n \n \n+@flamapy_bp.route('/flamapy/num_configurations/<int:file_id>', methods=['GET'])\n def get_num_configurations(file_id):\n     try:\n         hubfile = HubfileService().get_or_404(file_id)"
      },
      {
        "sha": "feedd31d107bf2e18cfbb65f739f73361806ecc8",
        "filename": "app/modules/flamapy/tests/test_unit.py",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "patch": "@@ -1,4 +1,5 @@\n import pytest\n+from app.modules.common.dbutils import create_dataset_db\n \n \n @pytest.fixture(scope='module')\n@@ -7,8 +8,7 @@ def test_client(test_client):\n     Extends the test_client fixture to add additional specific data for module testing.\n     \"\"\"\n     with test_client.application.app_context():\n-        # Add HERE new elements to the database that you want to exist in the test context.\n-        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        create_dataset_db(1)\n         pass\n \n     yield test_client\n@@ -22,3 +22,19 @@ def test_sample_assertion(test_client):\n     \"\"\"\n     greeting = \"Hello, World!\"\n     assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\"\n+\n+\n+def test_num_configurations_get(test_client):\n+    \"\"\"\n+    Tests GET request of num of configurations of given file ids.\n+    \"\"\"\n+\n+    num_configurations(test_client, 1, 200)\n+    num_configurations(test_client, 2, 404)\n+\n+\n+def num_configurations(client, file_id, expected_code):\n+    response = client.get(\"/flamapy/num_configurations/\" + str(file_id))\n+    msg = \"Get num configurations of file \" + str(file_id) + \" responded \" \\\n+        + str(response.status_code) + \" but expected \" + str(expected_code)\n+    assert response.status_code == expected_code, msg"
      },
      {
        "sha": "07d6301819c67131b12b8e64be44300e2163e1c9",
        "filename": "docs/Acta fundacional.pdf",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/docs%2FActa%20fundacional.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/docs%2FActa%20fundacional.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FActa%20fundacional.pdf?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "previous_filename": "Acta fundacional.pdf"
      },
      {
        "sha": "addfa7730d38966e592b71cc060a01899e536d65",
        "filename": "docs/Politica_Commits_UVLHUB.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/docs%2FPolitica_Commits_UVLHUB.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/docs%2FPolitica_Commits_UVLHUB.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FPolitica_Commits_UVLHUB.pdf?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5"
      },
      {
        "sha": "1b69034a47ea4f8d7d638fdd34767262d59c2071",
        "filename": "docs/Pol\u00edtica de ramas.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/docs%2FPol%C3%ADtica%20de%20ramas.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/docs%2FPol%C3%ADtica%20de%20ramas.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FPol%C3%ADtica%20de%20ramas.pdf?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5"
      },
      {
        "sha": "d8f8d46921aa81abc4c0d27703a8908333ae38c3",
        "filename": "docs/d",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/47eef1a045e70bd79b1c7c17b249c3d68bfa5220/docs%2Fd",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/47eef1a045e70bd79b1c7c17b249c3d68bfa5220/docs%2Fd",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2Fd?ref=47eef1a045e70bd79b1c7c17b249c3d68bfa5220",
        "patch": "@@ -1 +0,0 @@\n-docs"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/71",
    "id": 2215758001,
    "node_id": "PR_kwDONB39G86EEcix",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/71",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/71.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/71.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/71",
    "number": 71,
    "state": "closed",
    "locked": false,
    "title": "Integrate into production",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-04T16:44:20Z",
    "updated_at": "2024-12-04T16:46:31Z",
    "closed_at": "2024-12-04T16:46:31Z",
    "merged_at": "2024-12-04T16:46:31Z",
    "merge_commit_sha": "19d9a6b8d05d0ce8f80775303ed1e87108f62651",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/71/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/71/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/71/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "47eef1a045e70bd79b1c7c17b249c3d68bfa5220",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/71"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/71"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/71"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/71/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/71/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/71/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/7701c26073813e1d3c96963e2bf3309b7fb6f6e5"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "35b73b75239de7429b2fd1d879bbaa650ee82630",
        "filename": "M01-incremento.pdf",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/47eef1a045e70bd79b1c7c17b249c3d68bfa5220/M01-incremento.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/47eef1a045e70bd79b1c7c17b249c3d68bfa5220/M01-incremento.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/M01-incremento.pdf?ref=47eef1a045e70bd79b1c7c17b249c3d68bfa5220"
      },
      {
        "sha": "2add39ddbef160ef469a7811c12a6035a5378cfa",
        "filename": "PoliticaCommits.pdf",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/47eef1a045e70bd79b1c7c17b249c3d68bfa5220/PoliticaCommits.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/47eef1a045e70bd79b1c7c17b249c3d68bfa5220/PoliticaCommits.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/PoliticaCommits.pdf?ref=47eef1a045e70bd79b1c7c17b249c3d68bfa5220"
      },
      {
        "sha": "b9b13db9858f20a553cdd448e1cc4c5b0ea2d468",
        "filename": "app/modules/common/dbutils.py",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fcommon%2Fdbutils.py?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "patch": "@@ -0,0 +1,83 @@\n+import os\n+import shutil\n+from app import db\n+from app.modules.auth.models import User\n+from app.modules.dataset.models import (\n+    DataSet,\n+    DSMetaData,\n+    PublicationType,\n+    DSMetrics)\n+from app.modules.hubfile.models import Hubfile\n+from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from datetime import datetime, timezone\n+from dotenv import load_dotenv\n+\n+\n+def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN, tags=\"\"):\n+    user_test = User(email=f'user{id}@example.com', password='test1234')\n+    db.session.add(user_test)\n+    db.session.commit()\n+\n+    ds_metrics = DSMetrics(number_of_models='1', number_of_features='5')\n+    db.session.add(ds_metrics)\n+    db.session.commit()\n+\n+    ds_meta_data = DSMetaData(\n+            deposition_id=id,\n+            title=f'Sample dataset {id}',\n+            description=f'Description for dataset {id}',\n+            publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n+            publication_doi=f'10.1234/dataset{id}',\n+            dataset_doi=f'10.1234/dataset{id}',\n+            tags='tag1, tag2',\n+            ds_metrics_id=ds_metrics.id\n+        )\n+    db.session.add(ds_meta_data)\n+    db.session.commit()\n+\n+    dataset = DataSet(\n+            user_id=user_test.id,\n+            ds_meta_data_id=ds_meta_data.id,\n+            created_at=datetime.now(timezone.utc)\n+        )\n+    db.session.add(dataset)\n+    db.session.commit()\n+\n+    fm_meta_data = FMMetaData(\n+            uvl_filename=f'file{id}.uvl',\n+            title=f'Feature Model {id}',\n+            description=f'Description for feature model {id}',\n+            publication_type=PublicationType.SOFTWARE_DOCUMENTATION,\n+            publication_doi='10.1234/fm1',\n+            tags=tags,\n+            uvl_version='1.0'\n+        )\n+    db.session.add(fm_meta_data)\n+    db.session.commit()\n+\n+    feature_model = FeatureModel(\n+            data_set_id=dataset.id,\n+            fm_meta_data_id=fm_meta_data.id\n+        )\n+    db.session.add(feature_model)\n+    db.session.commit()\n+\n+    load_dotenv()\n+    working_dir = os.getenv('WORKING_DIR', '')\n+    file_name = f'file{id}.uvl'\n+    src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n+\n+    dest_folder = os.path.join(working_dir, 'uploads', f'user_{user_test.id}', f'dataset_{dataset.id}')\n+    os.makedirs(dest_folder, exist_ok=True)\n+    shutil.copy(os.path.join(src_folder, file_name), dest_folder)\n+\n+    file_path = os.path.join(dest_folder, file_name)\n+\n+    uvl_file = Hubfile(\n+        name=file_name,\n+        checksum=f'checksum{id}',\n+        size=os.path.getsize(file_path),\n+        feature_model_id=feature_model.id\n+    )\n+    db.session.add(uvl_file)\n+    db.session.commit()"
      },
      {
        "sha": "6fdb6c955639c035f5a2d4c11caa2cf80ae26c74",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "patch": "@@ -34,6 +34,8 @@ function send_query() {\n             \n             setNumFilterMaxMin(filter, minNumConfg, maxNumConfg);\n \n+            byValidUvls = document.querySelector('#by_valid_uvls').checked ? \"on\" : \"off\"\n+\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n@@ -42,7 +44,7 @@ function send_query() {\n                 end_date: endDate.value,\n                 min_uvl: minUvl.value,\n                 max_uvl: maxUvl.value,\n-                by_valid_uvls: document.querySelector('#by_valid_uvls').value,\n+                by_valid_uvls: byValidUvls,\n                 min_num_configurations: minNumConfg.value,\n                 max_num_configurations: maxNumConfg.value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,"
      },
      {
        "sha": "ad264a81cdba31cc3ae6d4dcdcb163657625db8b",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "patch": "@@ -118,8 +118,8 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         if by_valid_uvls == \"on\":\n             results = [\n                 ds for ds in results\n-                if any(\n-                    any(\n+                if all(\n+                    all(\n                         check_uvl(file.id)[1] == 200\n                         for file in fm.files\n                     )\n@@ -147,7 +147,12 @@ def num_configurations_between(file_id, min_num_configurations, max_num_configur\n \n     if status_code == 200:\n         num = int(result.json[\"result\"])\n-        return (min_num_configurations.isdigit() and num >= int(min_num_configurations)\n-                and max_num_configurations.isdigit() and num <= int(max_num_configurations))\n+        valid_min = min_num_configurations.isdigit()\n+        valid_max = max_num_configurations.isdigit()\n+        if valid_min and valid_max:\n+            return num >= int(min_num_configurations) and num <= int(max_num_configurations)\n+        else:\n+            return (valid_min and num >= int(min_num_configurations)\n+                    or valid_max and num <= int(max_num_configurations))\n \n     return True"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/explore/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5"
      },
      {
        "sha": "c1ea8f4e1addfe632c8fe8156078750d32db453c",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "added",
        "additions": 93,
        "deletions": 0,
        "changes": 93,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "patch": "@@ -0,0 +1,93 @@\n+import pytest\n+from app.modules.dataset.models import PublicationType\n+from app.modules.common.dbutils import create_dataset_db\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        create_dataset_db(1, PublicationType.BOOK, \"tag1,tag2\")\n+        create_dataset_db(2, PublicationType.ANNOTATION_COLLECTION, \"tag2\")\n+        create_dataset_db(3, PublicationType.BOOK)\n+\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_explore_get(test_client):\n+    \"\"\"\n+    Tests access to explore GET request.\n+    \"\"\"\n+\n+    response = test_client.get(\"/explore\")\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+\n+\n+def test_explore_post(test_client):\n+    \"\"\"\n+    Tests access to explore POST request.\n+    \"\"\"\n+\n+    search_criteria = get_search_criteria()\n+\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    assert len(response.get_json()) == 3, \"Wrong number of datasets\"\n+\n+\n+def test_explore_filter_num_uvls_post(test_client):\n+    \"\"\"\n+    Tests access to explore POST request with a filter.\n+    \"\"\"\n+\n+    search_criteria = get_search_criteria(max_uvl=\"1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_ds = len(response.get_json())\n+    assert num_ds == 3, f\"Wrong number of datasets: {num_ds}\"\n+\n+    search_criteria = get_search_criteria(max_uvl=\"0\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_ds = len(response.get_json())\n+    assert num_ds == 0, f\"Wrong number of datasets: {num_ds}\"\n+\n+\n+def test_explore_filter_num_configurations_post(test_client):\n+    \"\"\"\n+    Tests access to explore POST request with a filter.\n+    \"\"\"\n+\n+    search_criteria = get_search_criteria(min_num_configurations=\"1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_conf = len(response.get_json())\n+    assert num_conf == 3, f\"Wrong number of datasets: {num_conf}\"\n+\n+    search_criteria = get_search_criteria(max_num_configurations=\"0\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_conf = len(response.get_json())\n+    assert num_conf == 0, f\"Wrong number of datasets: {num_conf}\"\n+\n+\n+def get_search_criteria(query=\"\", sorting=\"newest\", publication_type=\"any\",\n+                        start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\",\n+                        by_valid_uvls=\"off\", min_num_configurations=\"\", max_num_configurations=\"\"):\n+    search_criteria = {\n+        \"by_valid_uvls\": by_valid_uvls,\n+        \"end_date\": end_date,\n+        \"max_num_configurations\": max_num_configurations,\n+        \"max_uvl\": max_uvl,\n+        \"min_num_configurations\": min_num_configurations,\n+        \"min_uvl\": min_uvl,\n+        \"publication_type\": publication_type,\n+        \"query\": query,\n+        \"sorting\": sorting,\n+        \"start_date\": start_date,\n+    }\n+    return search_criteria"
      },
      {
        "sha": "d19bdb3f899a68de860ae19d69243d471fe42c97",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "patch": "@@ -154,6 +154,7 @@ def to_cnf(file_id):\n         return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n \n \n+@flamapy_bp.route('/flamapy/num_configurations/<int:file_id>', methods=['GET'])\n def get_num_configurations(file_id):\n     try:\n         hubfile = HubfileService().get_or_404(file_id)"
      },
      {
        "sha": "feedd31d107bf2e18cfbb65f739f73361806ecc8",
        "filename": "app/modules/flamapy/tests/test_unit.py",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "patch": "@@ -1,4 +1,5 @@\n import pytest\n+from app.modules.common.dbutils import create_dataset_db\n \n \n @pytest.fixture(scope='module')\n@@ -7,8 +8,7 @@ def test_client(test_client):\n     Extends the test_client fixture to add additional specific data for module testing.\n     \"\"\"\n     with test_client.application.app_context():\n-        # Add HERE new elements to the database that you want to exist in the test context.\n-        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        create_dataset_db(1)\n         pass\n \n     yield test_client\n@@ -22,3 +22,19 @@ def test_sample_assertion(test_client):\n     \"\"\"\n     greeting = \"Hello, World!\"\n     assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\"\n+\n+\n+def test_num_configurations_get(test_client):\n+    \"\"\"\n+    Tests GET request of num of configurations of given file ids.\n+    \"\"\"\n+\n+    num_configurations(test_client, 1, 200)\n+    num_configurations(test_client, 2, 404)\n+\n+\n+def num_configurations(client, file_id, expected_code):\n+    response = client.get(\"/flamapy/num_configurations/\" + str(file_id))\n+    msg = \"Get num configurations of file \" + str(file_id) + \" responded \" \\\n+        + str(response.status_code) + \" but expected \" + str(expected_code)\n+    assert response.status_code == expected_code, msg"
      },
      {
        "sha": "07d6301819c67131b12b8e64be44300e2163e1c9",
        "filename": "docs/Acta fundacional.pdf",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/docs%2FActa%20fundacional.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/docs%2FActa%20fundacional.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FActa%20fundacional.pdf?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
        "previous_filename": "Acta fundacional.pdf"
      },
      {
        "sha": "addfa7730d38966e592b71cc060a01899e536d65",
        "filename": "docs/Politica_Commits_UVLHUB.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/docs%2FPolitica_Commits_UVLHUB.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/docs%2FPolitica_Commits_UVLHUB.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FPolitica_Commits_UVLHUB.pdf?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5"
      },
      {
        "sha": "1b69034a47ea4f8d7d638fdd34767262d59c2071",
        "filename": "docs/Pol\u00edtica de ramas.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/docs%2FPol%C3%ADtica%20de%20ramas.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7701c26073813e1d3c96963e2bf3309b7fb6f6e5/docs%2FPol%C3%ADtica%20de%20ramas.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FPol%C3%ADtica%20de%20ramas.pdf?ref=7701c26073813e1d3c96963e2bf3309b7fb6f6e5"
      },
      {
        "sha": "d8f8d46921aa81abc4c0d27703a8908333ae38c3",
        "filename": "docs/d",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/47eef1a045e70bd79b1c7c17b249c3d68bfa5220/docs%2Fd",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/47eef1a045e70bd79b1c7c17b249c3d68bfa5220/docs%2Fd",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2Fd?ref=47eef1a045e70bd79b1c7c17b249c3d68bfa5220",
        "patch": "@@ -1 +0,0 @@\n-docs"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/70",
    "id": 2215224008,
    "node_id": "PR_kwDONB39G86ECaLI",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/70",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/70.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/70.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/70",
    "number": 70,
    "state": "closed",
    "locked": false,
    "title": "Add tests for advance filters",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "- Added unit test for get_num_configurations of flamapy (used in the filters)\r\n- Added unit tests for explore module. Added a get /explore test and three post /explore tests",
    "created_at": "2024-12-04T13:13:36Z",
    "updated_at": "2024-12-04T13:42:25Z",
    "closed_at": "2024-12-04T13:42:21Z",
    "merged_at": "2024-12-04T13:42:21Z",
    "merge_commit_sha": "7701c26073813e1d3c96963e2bf3309b7fb6f6e5",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/70/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/70/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/70/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/df2282579342e3e6482e9ed7b91000ac79ffe886",
    "head": {
      "label": "TostaHub:tests-advance-filters",
      "ref": "tests-advance-filters",
      "sha": "df2282579342e3e6482e9ed7b91000ac79ffe886",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "25e7a5941c9d25da27c9415a7894c42b3079f2db",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/70"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/70"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/70"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/70/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/70/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/70/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/df2282579342e3e6482e9ed7b91000ac79ffe886"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "b9b13db9858f20a553cdd448e1cc4c5b0ea2d468",
        "filename": "app/modules/common/dbutils.py",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/df2282579342e3e6482e9ed7b91000ac79ffe886/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/df2282579342e3e6482e9ed7b91000ac79ffe886/app%2Fmodules%2Fcommon%2Fdbutils.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fcommon%2Fdbutils.py?ref=df2282579342e3e6482e9ed7b91000ac79ffe886",
        "patch": "@@ -0,0 +1,83 @@\n+import os\n+import shutil\n+from app import db\n+from app.modules.auth.models import User\n+from app.modules.dataset.models import (\n+    DataSet,\n+    DSMetaData,\n+    PublicationType,\n+    DSMetrics)\n+from app.modules.hubfile.models import Hubfile\n+from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from datetime import datetime, timezone\n+from dotenv import load_dotenv\n+\n+\n+def create_dataset_db(id, publication_type=PublicationType.DATA_MANAGEMENT_PLAN, tags=\"\"):\n+    user_test = User(email=f'user{id}@example.com', password='test1234')\n+    db.session.add(user_test)\n+    db.session.commit()\n+\n+    ds_metrics = DSMetrics(number_of_models='1', number_of_features='5')\n+    db.session.add(ds_metrics)\n+    db.session.commit()\n+\n+    ds_meta_data = DSMetaData(\n+            deposition_id=id,\n+            title=f'Sample dataset {id}',\n+            description=f'Description for dataset {id}',\n+            publication_type=PublicationType.DATA_MANAGEMENT_PLAN,\n+            publication_doi=f'10.1234/dataset{id}',\n+            dataset_doi=f'10.1234/dataset{id}',\n+            tags='tag1, tag2',\n+            ds_metrics_id=ds_metrics.id\n+        )\n+    db.session.add(ds_meta_data)\n+    db.session.commit()\n+\n+    dataset = DataSet(\n+            user_id=user_test.id,\n+            ds_meta_data_id=ds_meta_data.id,\n+            created_at=datetime.now(timezone.utc)\n+        )\n+    db.session.add(dataset)\n+    db.session.commit()\n+\n+    fm_meta_data = FMMetaData(\n+            uvl_filename=f'file{id}.uvl',\n+            title=f'Feature Model {id}',\n+            description=f'Description for feature model {id}',\n+            publication_type=PublicationType.SOFTWARE_DOCUMENTATION,\n+            publication_doi='10.1234/fm1',\n+            tags=tags,\n+            uvl_version='1.0'\n+        )\n+    db.session.add(fm_meta_data)\n+    db.session.commit()\n+\n+    feature_model = FeatureModel(\n+            data_set_id=dataset.id,\n+            fm_meta_data_id=fm_meta_data.id\n+        )\n+    db.session.add(feature_model)\n+    db.session.commit()\n+\n+    load_dotenv()\n+    working_dir = os.getenv('WORKING_DIR', '')\n+    file_name = f'file{id}.uvl'\n+    src_folder = os.path.join(working_dir, 'app', 'modules', 'dataset', 'uvl_examples')\n+\n+    dest_folder = os.path.join(working_dir, 'uploads', f'user_{user_test.id}', f'dataset_{dataset.id}')\n+    os.makedirs(dest_folder, exist_ok=True)\n+    shutil.copy(os.path.join(src_folder, file_name), dest_folder)\n+\n+    file_path = os.path.join(dest_folder, file_name)\n+\n+    uvl_file = Hubfile(\n+        name=file_name,\n+        checksum=f'checksum{id}',\n+        size=os.path.getsize(file_path),\n+        feature_model_id=feature_model.id\n+    )\n+    db.session.add(uvl_file)\n+    db.session.commit()"
      },
      {
        "sha": "ad264a81cdba31cc3ae6d4dcdcb163657625db8b",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/df2282579342e3e6482e9ed7b91000ac79ffe886/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/df2282579342e3e6482e9ed7b91000ac79ffe886/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=df2282579342e3e6482e9ed7b91000ac79ffe886",
        "patch": "@@ -120,7 +120,7 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n                 ds for ds in results\n                 if all(\n                     all(\n-                        check_uvl(file.id, ds)[1] == 200\n+                        check_uvl(file.id)[1] == 200\n                         for file in fm.files\n                     )\n                     for fm in ds.feature_models"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/explore/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/df2282579342e3e6482e9ed7b91000ac79ffe886/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/df2282579342e3e6482e9ed7b91000ac79ffe886/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2F__init__.py?ref=df2282579342e3e6482e9ed7b91000ac79ffe886"
      },
      {
        "sha": "c1ea8f4e1addfe632c8fe8156078750d32db453c",
        "filename": "app/modules/explore/tests/test_unit.py",
        "status": "added",
        "additions": 93,
        "deletions": 0,
        "changes": 93,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/df2282579342e3e6482e9ed7b91000ac79ffe886/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/df2282579342e3e6482e9ed7b91000ac79ffe886/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftests%2Ftest_unit.py?ref=df2282579342e3e6482e9ed7b91000ac79ffe886",
        "patch": "@@ -0,0 +1,93 @@\n+import pytest\n+from app.modules.dataset.models import PublicationType\n+from app.modules.common.dbutils import create_dataset_db\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        create_dataset_db(1, PublicationType.BOOK, \"tag1,tag2\")\n+        create_dataset_db(2, PublicationType.ANNOTATION_COLLECTION, \"tag2\")\n+        create_dataset_db(3, PublicationType.BOOK)\n+\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_explore_get(test_client):\n+    \"\"\"\n+    Tests access to explore GET request.\n+    \"\"\"\n+\n+    response = test_client.get(\"/explore\")\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+\n+\n+def test_explore_post(test_client):\n+    \"\"\"\n+    Tests access to explore POST request.\n+    \"\"\"\n+\n+    search_criteria = get_search_criteria()\n+\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    assert len(response.get_json()) == 3, \"Wrong number of datasets\"\n+\n+\n+def test_explore_filter_num_uvls_post(test_client):\n+    \"\"\"\n+    Tests access to explore POST request with a filter.\n+    \"\"\"\n+\n+    search_criteria = get_search_criteria(max_uvl=\"1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_ds = len(response.get_json())\n+    assert num_ds == 3, f\"Wrong number of datasets: {num_ds}\"\n+\n+    search_criteria = get_search_criteria(max_uvl=\"0\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_ds = len(response.get_json())\n+    assert num_ds == 0, f\"Wrong number of datasets: {num_ds}\"\n+\n+\n+def test_explore_filter_num_configurations_post(test_client):\n+    \"\"\"\n+    Tests access to explore POST request with a filter.\n+    \"\"\"\n+\n+    search_criteria = get_search_criteria(min_num_configurations=\"1\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_conf = len(response.get_json())\n+    assert num_conf == 3, f\"Wrong number of datasets: {num_conf}\"\n+\n+    search_criteria = get_search_criteria(max_num_configurations=\"0\")\n+    response = test_client.post(\"/explore\", json=search_criteria)\n+    assert response.status_code == 200, \"The explore page could not be accessed.\"\n+    num_conf = len(response.get_json())\n+    assert num_conf == 0, f\"Wrong number of datasets: {num_conf}\"\n+\n+\n+def get_search_criteria(query=\"\", sorting=\"newest\", publication_type=\"any\",\n+                        start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\",\n+                        by_valid_uvls=\"off\", min_num_configurations=\"\", max_num_configurations=\"\"):\n+    search_criteria = {\n+        \"by_valid_uvls\": by_valid_uvls,\n+        \"end_date\": end_date,\n+        \"max_num_configurations\": max_num_configurations,\n+        \"max_uvl\": max_uvl,\n+        \"min_num_configurations\": min_num_configurations,\n+        \"min_uvl\": min_uvl,\n+        \"publication_type\": publication_type,\n+        \"query\": query,\n+        \"sorting\": sorting,\n+        \"start_date\": start_date,\n+    }\n+    return search_criteria"
      },
      {
        "sha": "d19bdb3f899a68de860ae19d69243d471fe42c97",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/df2282579342e3e6482e9ed7b91000ac79ffe886/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/df2282579342e3e6482e9ed7b91000ac79ffe886/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=df2282579342e3e6482e9ed7b91000ac79ffe886",
        "patch": "@@ -154,6 +154,7 @@ def to_cnf(file_id):\n         return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n \n \n+@flamapy_bp.route('/flamapy/num_configurations/<int:file_id>', methods=['GET'])\n def get_num_configurations(file_id):\n     try:\n         hubfile = HubfileService().get_or_404(file_id)"
      },
      {
        "sha": "feedd31d107bf2e18cfbb65f739f73361806ecc8",
        "filename": "app/modules/flamapy/tests/test_unit.py",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/df2282579342e3e6482e9ed7b91000ac79ffe886/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/df2282579342e3e6482e9ed7b91000ac79ffe886/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py?ref=df2282579342e3e6482e9ed7b91000ac79ffe886",
        "patch": "@@ -1,4 +1,5 @@\n import pytest\n+from app.modules.common.dbutils import create_dataset_db\n \n \n @pytest.fixture(scope='module')\n@@ -7,8 +8,7 @@ def test_client(test_client):\n     Extends the test_client fixture to add additional specific data for module testing.\n     \"\"\"\n     with test_client.application.app_context():\n-        # Add HERE new elements to the database that you want to exist in the test context.\n-        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        create_dataset_db(1)\n         pass\n \n     yield test_client\n@@ -22,3 +22,19 @@ def test_sample_assertion(test_client):\n     \"\"\"\n     greeting = \"Hello, World!\"\n     assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\"\n+\n+\n+def test_num_configurations_get(test_client):\n+    \"\"\"\n+    Tests GET request of num of configurations of given file ids.\n+    \"\"\"\n+\n+    num_configurations(test_client, 1, 200)\n+    num_configurations(test_client, 2, 404)\n+\n+\n+def num_configurations(client, file_id, expected_code):\n+    response = client.get(\"/flamapy/num_configurations/\" + str(file_id))\n+    msg = \"Get num configurations of file \" + str(file_id) + \" responded \" \\\n+        + str(response.status_code) + \" but expected \" + str(expected_code)\n+    assert response.status_code == expected_code, msg"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/68",
    "id": 2213375692,
    "node_id": "PR_kwDONB39G86D7W7M",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/68",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/68.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/68.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/68",
    "number": 68,
    "state": "closed",
    "locked": false,
    "title": "fix: Fix number of configurations filter",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-12-03T17:52:49Z",
    "updated_at": "2024-12-03T21:11:58Z",
    "closed_at": "2024-12-03T21:11:56Z",
    "merged_at": "2024-12-03T21:11:56Z",
    "merge_commit_sha": "25e7a5941c9d25da27c9415a7894c42b3079f2db",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/68/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/68/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/68/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/5e0039b789ada94e9900e434cab5b2d4b6fce0ba",
    "head": {
      "label": "TostaHub:fixFlters",
      "ref": "fixFlters",
      "sha": "5e0039b789ada94e9900e434cab5b2d4b6fce0ba",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "5ea8cf83ed8d4142e083cb1d7c3ceb81f6ed6f04",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/68"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/68"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/68"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/68/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/68/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/68/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/5e0039b789ada94e9900e434cab5b2d4b6fce0ba"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "6fdb6c955639c035f5a2d4c11caa2cf80ae26c74",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5e0039b789ada94e9900e434cab5b2d4b6fce0ba/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5e0039b789ada94e9900e434cab5b2d4b6fce0ba/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=5e0039b789ada94e9900e434cab5b2d4b6fce0ba",
        "patch": "@@ -34,6 +34,8 @@ function send_query() {\n             \n             setNumFilterMaxMin(filter, minNumConfg, maxNumConfg);\n \n+            byValidUvls = document.querySelector('#by_valid_uvls').checked ? \"on\" : \"off\"\n+\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n@@ -42,7 +44,7 @@ function send_query() {\n                 end_date: endDate.value,\n                 min_uvl: minUvl.value,\n                 max_uvl: maxUvl.value,\n-                by_valid_uvls: document.querySelector('#by_valid_uvls').value,\n+                by_valid_uvls: byValidUvls,\n                 min_num_configurations: minNumConfg.value,\n                 max_num_configurations: maxNumConfg.value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,"
      },
      {
        "sha": "23e5c2ce7ceaebfee35ab5b485387f1d1d8617aa",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5e0039b789ada94e9900e434cab5b2d4b6fce0ba/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5e0039b789ada94e9900e434cab5b2d4b6fce0ba/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=5e0039b789ada94e9900e434cab5b2d4b6fce0ba",
        "patch": "@@ -118,9 +118,9 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         if by_valid_uvls == \"on\":\n             results = [\n                 ds for ds in results\n-                if any(\n-                    any(\n-                        check_uvl(file.id)[1] == 200\n+                if all(\n+                    all(\n+                        check_uvl(file.id, ds)[1] == 200\n                         for file in fm.files\n                     )\n                     for fm in ds.feature_models\n@@ -147,7 +147,12 @@ def num_configurations_between(file_id, min_num_configurations, max_num_configur\n \n     if status_code == 200:\n         num = int(result.json[\"result\"])\n-        return (min_num_configurations.isdigit() and num >= int(min_num_configurations)\n-                and max_num_configurations.isdigit() and num <= int(max_num_configurations))\n+        valid_min = min_num_configurations.isdigit()\n+        valid_max = max_num_configurations.isdigit()\n+        if valid_min and valid_max:\n+            return num >= int(min_num_configurations) and num <= int(max_num_configurations)\n+        else:\n+            return (valid_min and num >= int(min_num_configurations)\n+                    or valid_max and num <= int(max_num_configurations))\n \n     return True"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/60",
    "id": 2207568135,
    "node_id": "PR_kwDONB39G86DlNEH",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/60",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/60.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/60.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/60",
    "number": 60,
    "state": "closed",
    "locked": false,
    "title": "docs: Add doc politica de ramas",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-29T15:11:53Z",
    "updated_at": "2024-11-29T15:53:15Z",
    "closed_at": "2024-11-29T15:53:15Z",
    "merged_at": "2024-11-29T15:53:15Z",
    "merge_commit_sha": "5ea8cf83ed8d4142e083cb1d7c3ceb81f6ed6f04",
    "assignee": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "Ahydul",
        "id": 48711356,
        "node_id": "MDQ6VXNlcjQ4NzExMzU2",
        "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Ahydul",
        "html_url": "https://github.com/Ahydul",
        "followers_url": "https://api.github.com/users/Ahydul/followers",
        "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
        "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
        "organizations_url": "https://api.github.com/users/Ahydul/orgs",
        "repos_url": "https://api.github.com/users/Ahydul/repos",
        "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Ahydul/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/60/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/60/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/60/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/72268ff17d727fb73f1672e47757f2177a227c85",
    "head": {
      "label": "TostaHub:add-docs",
      "ref": "add-docs",
      "sha": "72268ff17d727fb73f1672e47757f2177a227c85",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "485ea6020413e971ec9b5604a8083a4c8ba2b858",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/60"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/60"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/60"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/60/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/60/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/60/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/72268ff17d727fb73f1672e47757f2177a227c85"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "1b69034a47ea4f8d7d638fdd34767262d59c2071",
        "filename": "docs/Pol\u00edtica de ramas.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/72268ff17d727fb73f1672e47757f2177a227c85/docs%2FPol%C3%ADtica%20de%20ramas.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/72268ff17d727fb73f1672e47757f2177a227c85/docs%2FPol%C3%ADtica%20de%20ramas.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FPol%C3%ADtica%20de%20ramas.pdf?ref=72268ff17d727fb73f1672e47757f2177a227c85"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/57",
    "id": 2205396410,
    "node_id": "PR_kwDONB39G86Dc626",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/57",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/57.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/57.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/57",
    "number": 57,
    "state": "closed",
    "locked": false,
    "title": "Add docs",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-28T10:18:24Z",
    "updated_at": "2024-11-28T18:07:43Z",
    "closed_at": "2024-11-28T18:07:43Z",
    "merged_at": "2024-11-28T18:07:43Z",
    "merge_commit_sha": "485ea6020413e971ec9b5604a8083a4c8ba2b858",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/57/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/57/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/57/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/f2fdc0166138d412c35c2ab4680744814da96d96",
    "head": {
      "label": "TostaHub:add-docs",
      "ref": "add-docs",
      "sha": "f2fdc0166138d412c35c2ab4680744814da96d96",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/57"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/57"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/57"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/57/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/57/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/57/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/f2fdc0166138d412c35c2ab4680744814da96d96"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "35b73b75239de7429b2fd1d879bbaa650ee82630",
        "filename": "M01-incremento.pdf",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/M01-incremento.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/M01-incremento.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/M01-incremento.pdf?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62"
      },
      {
        "sha": "2add39ddbef160ef469a7811c12a6035a5378cfa",
        "filename": "PoliticaCommits.pdf",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/PoliticaCommits.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/PoliticaCommits.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/PoliticaCommits.pdf?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62"
      },
      {
        "sha": "07d6301819c67131b12b8e64be44300e2163e1c9",
        "filename": "docs/Acta fundacional.pdf",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f2fdc0166138d412c35c2ab4680744814da96d96/docs%2FActa%20fundacional.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f2fdc0166138d412c35c2ab4680744814da96d96/docs%2FActa%20fundacional.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FActa%20fundacional.pdf?ref=f2fdc0166138d412c35c2ab4680744814da96d96",
        "previous_filename": "Acta fundacional.pdf"
      },
      {
        "sha": "addfa7730d38966e592b71cc060a01899e536d65",
        "filename": "docs/Politica_Commits_UVLHUB.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/f2fdc0166138d412c35c2ab4680744814da96d96/docs%2FPolitica_Commits_UVLHUB.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/f2fdc0166138d412c35c2ab4680744814da96d96/docs%2FPolitica_Commits_UVLHUB.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2FPolitica_Commits_UVLHUB.pdf?ref=f2fdc0166138d412c35c2ab4680744814da96d96"
      },
      {
        "sha": "d8f8d46921aa81abc4c0d27703a8908333ae38c3",
        "filename": "docs/d",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/docs%2Fd",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/docs%2Fd",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2Fd?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -1 +0,0 @@\n-docs"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/54",
    "id": 2203901813,
    "node_id": "PR_kwDONB39G86DXN91",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/54",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/54.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/54.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/54",
    "number": 54,
    "state": "closed",
    "locked": false,
    "title": "feat: Integrate changes to production",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-27T16:47:29Z",
    "updated_at": "2024-11-27T17:14:41Z",
    "closed_at": "2024-11-27T17:14:41Z",
    "merged_at": "2024-11-27T17:14:41Z",
    "merge_commit_sha": "47eef1a045e70bd79b1c7c17b249c3d68bfa5220",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/54/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/54/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/54/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "4a1a6d67240e32da2ffe0ef588e7f405f6a18472",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/54"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/54"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/54"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/54/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/54/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/54/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "c3d6b3d99ad4a306155c8c487c3f938daca12db5",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/README.md",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/README.md",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/README.md?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -16,3 +16,4 @@ Repository of feature models in UVL format integrated with Zenodo and flamapy fo\n ## Official documentation\n \n You can consult the official documentation of the project at [docs.uvlhub.io](https://docs.uvlhub.io/)\n+"
      },
      {
        "sha": "80dfdef38ad149303a93a2b321b24f8c8eaeaa00",
        "filename": "app/modules/dataset/models.py",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Fmodels.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fmodels.py?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -58,6 +58,7 @@ class DSMetaData(db.Model):\n     id = db.Column(db.Integer, primary_key=True)\n     deposition_id = db.Column(db.Integer)\n     title = db.Column(db.String(120), nullable=False)\n+    rating = db.Column(db.Float, default=0.0)\n     description = db.Column(db.Text, nullable=False)\n     publication_type = db.Column(SQLAlchemyEnum(PublicationType), nullable=False)\n     publication_doi = db.Column(db.String(120))\n@@ -67,6 +68,12 @@ class DSMetaData(db.Model):\n     ds_metrics = db.relationship('DSMetrics', uselist=False, backref='ds_meta_data', cascade=\"all, delete\")\n     authors = db.relationship('Author', backref='ds_meta_data', lazy=True, cascade=\"all, delete\")\n \n+    def update_rating(self):\n+        total_ratings = sum(rating.rating for rating in self.ratings)\n+        count = len(self.ratings)\n+        self.rating = total_ratings / count if count > 0 else 0\n+        db.session.commit()\n+\n \n class DataSet(db.Model):\n     id = db.Column(db.Integer, primary_key=True)\n@@ -111,6 +118,7 @@ def get_uvlhub_doi(self):\n     def to_dict(self):\n         return {\n             'title': self.ds_meta_data.title,\n+            'rating': self.ds_meta_data.rating,\n             'id': self.id,\n             'created_at': self.created_at,\n             'created_at_timestamp': int(self.created_at.timestamp()),\n@@ -164,3 +172,22 @@ class DOIMapping(db.Model):\n     id = db.Column(db.Integer, primary_key=True)\n     dataset_doi_old = db.Column(db.String(120))\n     dataset_doi_new = db.Column(db.String(120))\n+\n+\n+class DSRating(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)\n+    ds_meta_data_id = db.Column(db.Integer, db.ForeignKey('ds_meta_data.id'), nullable=False)\n+    rating = db.Column(db.Float, default=0, nullable=False)\n+    rated_date = db.Column(db.DateTime, nullable=False, default=datetime.utcnow)\n+\n+    ds_meta_data = db.relationship('DSMetaData', backref=db.backref('ratings', lazy=True))\n+\n+    def to_dict(self):\n+        return {\n+            'id': self.id,\n+            'user_id': self.user_id,\n+            'ds_meta_data_id': self.ds_meta_data_id,\n+            'rating': self.rating,\n+            'rated_date': self.rated_date\n+        }"
      },
      {
        "sha": "baa134356d82acf549bb864828fb4c571f062f9e",
        "filename": "app/modules/dataset/repositories.py",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -11,7 +11,8 @@\n     DSDownloadRecord,\n     DSMetaData,\n     DSViewRecord,\n-    DataSet\n+    DataSet,\n+    DSRating\n )\n from core.repositories.BaseRepository import BaseRepository\n \n@@ -121,3 +122,20 @@ def __init__(self):\n \n     def get_new_doi(self, old_doi: str) -> str:\n         return self.model.query.filter_by(dataset_doi_old=old_doi).first()\n+\n+\n+class DSRatingRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(DSRating)\n+\n+    def get_user_rating(self, ds_meta_data_id: int, user_id: int) -> Optional[DSRating]:\n+        return self.model.query.filter(DSRating.ds_meta_data_id == ds_meta_data_id, DSRating.user_id == user_id).first()\n+\n+    def get_average_rating(self, ds_meta_data_id: int) -> float:\n+\n+        average = self.model.query.with_entities(func.avg(DSRating.rating)).filter(\n+            DSRating.ds_meta_data_id == ds_meta_data_id).scalar()\n+        return average if average else 0.0\n+\n+    def count_ratings(self, ds_meta_data_id: int) -> int:\n+        return self.model.query.filter(DSRating.ds_meta_data_id == ds_meta_data_id).count()"
      },
      {
        "sha": "0fc48648f150604e0a02775a39af149880d9ee99",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 28,
        "deletions": 1,
        "changes": 29,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -30,7 +30,8 @@\n     DSMetaDataService,\n     DSViewRecordService,\n     DataSetService,\n-    DOIMappingService\n+    DOIMappingService,\n+    DSRatingService\n )\n from app.modules.zenodo.services import ZenodoService\n \n@@ -43,6 +44,7 @@\n zenodo_service = ZenodoService()\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n+ds_rating_service = DSRatingService()\n \n \n @dataset_bp.route(\"/dataset/upload\", methods=[\"GET\", \"POST\"])\n@@ -118,6 +120,15 @@ def list_dataset():\n     )\n \n \n+@dataset_bp.route(\"/dataset/user_id/<int:user_id>\", methods=[\"GET\"])\n+def user_dataset(user_id):\n+    return render_template(\n+        \"dataset/user_datasets.html\",\n+        datasets=dataset_service.get_synchronized(user_id),\n+        local_datasets=dataset_service.get_unsynchronized(user_id),\n+    )\n+\n+\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -278,3 +289,19 @@ def get_unsynchronized_dataset(dataset_id):\n         abort(404)\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+\n+\n+@dataset_bp.route(\"/datasets/<int:dataset_id>/rate\", methods=[\"POST\"])\n+@login_required\n+def rate_dataset(dataset_id):\n+    user_id = current_user.id\n+    rating_value = request.json.get('rating')\n+    rating = ds_rating_service.add_or_update_rating(dataset_id, user_id, rating_value)\n+    return jsonify({'message': 'Rating added', 'rating': rating.to_dict()}), 200\n+\n+\n+@dataset_bp.route('/datasets/<int:dataset_id>/average-rating', methods=['GET'])\n+@login_required\n+def get_dataset_average_rating(dataset_id):\n+    average_rating = ds_rating_service.get_dataset_average_rating(dataset_id)\n+    return jsonify({'average_rating': average_rating}), 200"
      },
      {
        "sha": "c2676ccf985c29fb503894161469ef6b8150c07a",
        "filename": "app/modules/dataset/services.py",
        "status": "modified",
        "additions": 32,
        "deletions": 2,
        "changes": 34,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fservices.py?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -8,14 +8,15 @@\n from flask import request\n \n from app.modules.auth.services import AuthenticationService\n-from app.modules.dataset.models import DSViewRecord, DataSet, DSMetaData\n+from app.modules.dataset.models import DSViewRecord, DataSet, DSMetaData, DSRating\n from app.modules.dataset.repositories import (\n     AuthorRepository,\n     DOIMappingRepository,\n     DSDownloadRecordRepository,\n     DSMetaDataRepository,\n     DSViewRecordRepository,\n-    DataSetRepository\n+    DataSetRepository,\n+    DSRatingRepository,\n )\n from app.modules.featuremodel.repositories import FMMetaDataRepository, FeatureModelRepository\n from app.modules.hubfile.repositories import (\n@@ -47,6 +48,7 @@ def __init__(self):\n         self.hubfiledownloadrecord_repository = HubfileDownloadRecordRepository()\n         self.hubfilerepository = HubfileRepository()\n         self.dsviewrecord_repostory = DSViewRecordRepository()\n+        self.dsrating_repository = DSRatingRepository()\n         self.hubfileviewrecord_repository = HubfileViewRecordRepository()\n \n     def move_feature_models(self, dataset: DataSet):\n@@ -198,6 +200,34 @@ def get_new_doi(self, old_doi: str) -> str:\n             return None\n \n \n+class DSRatingService(BaseService):\n+    def __init__(self):\n+        super().__init__(DSRatingRepository())\n+\n+    def add_or_update_rating(self, dsmetadata_id: int, user_id: int, rating_value: int) -> DSRating:\n+        rating = self.repository.get_user_rating(dsmetadata_id, user_id)\n+        if rating:\n+            print(\"Actualizando rating a {rating_value}\")\n+            rating.rating = rating_value\n+        else:\n+            print(\"Valor de rating en el servicio:\", rating_value)\n+            rating = self.repository.create(\n+             commit=False,\n+             ds_meta_data_id=dsmetadata_id,\n+             user_id=user_id,\n+             rating=rating_value\n+            )\n+            print(\"Valor de rating en el servicio:\", rating.rating)\n+        self.repository.session.commit()\n+        return rating\n+\n+    def get_dataset_average_rating(self, dsmetadata_id: int) -> float:\n+        return self.repository.get_average_rating(dsmetadata_id)\n+\n+    def get_total_ratings(self, dsmetadata_id: int) -> int:\n+        return self.repository.count_ratings(dsmetadata_id)\n+\n+\n class SizeService():\n \n     def __init__(self):"
      },
      {
        "sha": "79672bd9ab698dd103fcd5dadca68a7fa3924916",
        "filename": "app/modules/dataset/templates/dataset/list_datasets.html",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -18,6 +18,7 @@ <h1 class=\"h3 mb-3\">My datasets</h1>\n                             <th>Description</th>\n                             <th>Publication type</th>\n                             <th>Dataset DOI</th>\n+                            <th>Rating</th>\n                             <th>Options</th>\n                         </tr>\n                         </thead>\n@@ -33,6 +34,14 @@ <h1 class=\"h3 mb-3\">My datasets</h1>\n                                 <td>{{ dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n                                 <td><a href=\"{{ dataset.get_uvlhub_doi() }}\"\n                                        target=\"_blank\">{{ dataset.get_uvlhub_doi() }}</a></td>\n+                                <td>\n+                                    <div id=\"star-rating-{{ dataset.id }}\" style=\"color: gold; display: inline-block;\">\n+                                        {% for i in range(1, 6) %}\n+                                            <span data-value=\"{{ i }}\" style=\"font-size: 1.5rem;\">\u2605</span>\n+                                        {% endfor %}\n+                                    </div>\n+                                    <span id=\"average-rating-{{ dataset.id }}\" class=\"ms-2\">-</span>/5\n+                                </td>\n                                 <td>\n                                     <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n                                         <i data-feather=\"eye\"></i>\n@@ -41,6 +50,7 @@ <h1 class=\"h3 mb-3\">My datasets</h1>\n                                         <i data-feather=\"download\"></i>\n                                     </a>\n                                 </td>\n+                                </td>\n                             </tr>\n                         {% endfor %}\n                         </tbody>\n@@ -115,4 +125,33 @@ <h5 class=\"card-title\">Unsynchronized datasets</h5>\n             {% endif %}\n         </div>\n \n+\n+<script>\n+    document.addEventListener('DOMContentLoaded', function () {\n+        {% for dataset in datasets %}\n+            updateAverageRating({{ dataset.id }});\n+        {% endfor %}\n+\n+        // Funci\u00f3n para actualizar el promedio de calificaci\u00f3n en el frontend\n+        function updateAverageRating(datasetId) {\n+            fetch(`/datasets/${datasetId}/average-rating`)\n+            .then(response => response.json())\n+            .then(data => {\n+                const averageRating = data.average_rating.toFixed(1);\n+                document.getElementById('average-rating-' + datasetId).innerText = averageRating;\n+\n+                // Resaltar estrellas seg\u00fan el promedio de calificaci\u00f3n\n+                const starRatingContainer = document.getElementById('star-rating-' + datasetId);\n+                starRatingContainer.querySelectorAll('span').forEach(star => {\n+                    const starValue = parseInt(star.getAttribute('data-value'));\n+                    star.style.color = starValue <= Math.round(averageRating) ? '#FFD700' : '#ddd';\n+                });\n+            })\n+            .catch(error => console.error('Error fetching average rating:', error));\n+        }\n+    });\n+</script>\n+\n+\n {% endblock %}\n+"
      },
      {
        "sha": "1ebff4ffec038ee1e22e00bb0eac925580d8eb15",
        "filename": "app/modules/dataset/templates/dataset/user_datasets.html",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -0,0 +1,118 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}My datasets{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h3 mb-3\">Datasets de {{ datasets[0].user.profile.name }} {{ datasets[0].user.profile.surname }}</h1>\n+\n+    {% if datasets %}\n+        <div class=\" col-12\">\n+            <div class=\"card\">\n+\n+                <div class=\"card-body\">\n+                    <table class=\"table\">\n+                        <thead>\n+                        <tr>\n+                            <th>Title</th>\n+                            <th>Description</th>\n+                            <th>Publication type</th>\n+                            <th>Dataset DOI</th>\n+                            <th>Options</th>\n+                        </tr>\n+                        </thead>\n+                        <tbody>\n+                        {% for dataset in datasets %}\n+                            <tr>\n+                                <td>\n+                                    <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                        {{ dataset.ds_meta_data.title }}\n+                                    </a>\n+                                </td>\n+                                <td>{{ dataset.ds_meta_data.description }}</td>\n+                                <td>{{ dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n+                                <td><a href=\"{{ dataset.get_uvlhub_doi() }}\"\n+                                       target=\"_blank\">{{ dataset.get_uvlhub_doi() }}</a></td>\n+                                <td>\n+                                    <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                        <i data-feather=\"eye\"></i>\n+                                    </a>\n+                                    <a href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">\n+                                        <i data-feather=\"download\"></i>\n+                                    </a>\n+                                </td>\n+                            </tr>\n+                        {% endfor %}\n+                        </tbody>\n+                    </table>\n+                </div>\n+\n+            </div>\n+\n+        </div>\n+    {% else %}\n+        <div class=\"col-12 col-md-6\">\n+            <div class=\"card\">\n+                <div class=\"card-header\">\n+                    <h5 class=\"card-title mb-0\">No datasets found</h5>\n+                </div>\n+                <div class=\"card-body\">\n+                    <p class=\"card-text\">\n+                        You have not created any dataset synchronized with Zenodo, are you up for it?\n+                    </p>\n+                    <a href=\"{{ url_for('dataset.create_dataset') }}\" class=\"btn btn-primary\">\n+                        Upload dataset</a>\n+                </div>\n+            </div>\n+        </div>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+\n+        <div class=\"col-12\">\n+            {% if local_datasets %}\n+                <div class=\"card\">\n+                    <div class=\"card-body\">\n+                        <div class=\"card-header\">\n+                            <h5 class=\"card-title\">Unsynchronized datasets</h5>\n+                        </div>\n+                        <div class=\"card-body\">\n+                            <table class=\"table\">\n+                                <thead>\n+                                <tr>\n+                                    <th>Title</th>\n+                                    <th>Description</th>\n+                                    <th>Publication type</th>\n+                                    <th>Options</th>\n+                                </tr>\n+                                </thead>\n+                                <tbody>\n+                                {% for local_dataset in local_datasets %}\n+                                    <tr>\n+                                        <td>\n+                                            <a href=\"{{ url_for('dataset.get_unsynchronized_dataset', dataset_id=local_dataset.id) }}\">\n+                                                {{ local_dataset.ds_meta_data.title }}\n+                                            </a>\n+                                        </td>\n+                                        <td>{{ local_dataset.ds_meta_data.description }}</td>\n+                                        <td>{{ local_dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n+                                        <td>\n+                                            <a href=\"{{ url_for('dataset.get_unsynchronized_dataset', dataset_id=local_dataset.id) }}\">\n+                                                <i data-feather=\"eye\"></i>\n+                                            </a>\n+                                            <a href=\"{{ url_for('dataset.download_dataset', dataset_id=local_dataset.id) }}\">\n+                                                <i data-feather=\"download\"></i>\n+                                            </a>\n+                                        </td>\n+                                    </tr>\n+                                {% endfor %}\n+                                </tbody>\n+                            </table>\n+                        </div>\n+                    </div>\n+                </div>\n+            {% endif %}\n+        </div>\n+\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "fbbedbfef73e456f9c0a8bf982c2bdeed66570d1",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 81,
        "deletions": 4,
        "changes": 85,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -159,7 +159,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n \n             {% if dataset.ds_meta_data.dataset_doi %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; justify-content: space-between; gap: 50px;\">\n \n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n@@ -178,8 +178,22 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n                 </div>\n-                \n-            </div>\n+                <div style=\"display: flex; flex-direction: column;\">\n+                    <div style=\"margin-top: 0px; flex-direction: column;\">\n+                        <div style=\"display: inline-block; cursor: pointer; color: #ddd;\" id=\"star-rating-{{ dataset.id }}\">\n+                            {% for i in range(1, 6) %}\n+                                <span data-value=\"{{ i }}\" style=\"font-size: 1.5rem;\">\u2606</span>\n+                            {% endfor %}\n+                        </div>\n+                        <button onclick=\"submitRating('{{ dataset.id }}')\" style=\"display: inline-block; margin-left: 10px; font-size: 0.9rem;\">\n+                            Rate\n+                        </button>\n+                        </div>\n+                        <div>\n+                            Average Rating: <span id=\"average-rating-{{ dataset.id }}\">0</span>/5\n+                        </div>\n+                    </div>\n+                </div>\n             {% endif %}\n \n         </div>\n@@ -492,6 +506,69 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n             console.error('Failed to copy text: ', err);\n         });\n     }\n+\n+\n+    // Variables globales para almacenar las calificaciones seleccionadas\n+    const selectedRatings = {};\n+\n+    // Definir submitRating en el \u00e1mbito global\n+    function submitRating(datasetId) {\n+        const ratingValue = selectedRatings[datasetId]; // Obtiene la calificaci\u00f3n seleccionada del dataset\n+\n+        if (ratingValue > 0) { // Verifica que haya una calificaci\u00f3n seleccionada\n+            fetch(`/datasets/${datasetId}/rate`, {\n+                method: 'POST',\n+                headers: {\n+                    'Content-Type': 'application/json'\n+                },\n+                body: JSON.stringify({ rating: ratingValue })\n+            })\n+            .then(response => response.json())\n+            .then(data => {\n+                console.log('Rating submitted:', data);\n+                updateAverageRating(datasetId); // Actualiza el promedio de calificaci\u00f3n despu\u00e9s de enviar\n+            })\n+            .catch(error => console.error('Error submitting rating:', error));\n+        } else {\n+            alert('Please select a rating before submitting.');\n+        }\n+    }\n+\n+    // Definir updateAverageRating en el \u00e1mbito global\n+    function updateAverageRating(datasetId) {\n+        fetch(`/datasets/${datasetId}/average-rating`)\n+        .then(response => response.json())\n+        .then(data => {\n+            document.getElementById('average-rating-' + datasetId).innerText = data.average_rating.toFixed(1);\n+        })\n+        .catch(error => console.error('Error fetching average rating:', error));\n+    }\n+\n+    // Escuchar el evento DOMContentLoaded\n+    document.addEventListener('DOMContentLoaded', function () {\n+        const datasetId = {{ dataset.id }};\n+        const starRatingContainer = document.getElementById('star-rating-' + datasetId);\n+\n+        // Agregar evento a cada estrella para seleccionar la calificaci\u00f3n\n+        starRatingContainer.querySelectorAll('span').forEach(star => {\n+            star.addEventListener('click', function () {\n+                const ratingValue = this.getAttribute('data-value'); // Obtiene el valor de la estrella seleccionada\n+                selectedRatings[datasetId] = ratingValue; // Almacena la calificaci\u00f3n seleccionada en la variable global\n+                highlightStars(starRatingContainer, ratingValue); // Resaltar estrellas\n+            });\n+        });\n+\n+        // Actualizar el promedio de calificaci\u00f3n inicial\n+        updateAverageRating(datasetId);\n+\n+        // Funci\u00f3n para resaltar las estrellas seg\u00fan la calificaci\u00f3n seleccionada\n+        function highlightStars(container, rating) {\n+            container.querySelectorAll('span').forEach(star => {\n+                const starValue = star.getAttribute('data-value');\n+                star.style.color = starValue <= rating ? '#FFD700' : '#ddd'; // Cambia el color de la estrella\n+            });\n+        }\n+    });\n </script>\n \n-{% endblock %}\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "5cbb0cd3c2303b734219e777cb48ed528241f8ad",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 181,
        "deletions": 1,
        "changes": 182,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -3,6 +3,9 @@ document.addEventListener('DOMContentLoaded', () => {\n });\n \n function send_query() {\n+    setInitialNumUvlFilterMaxMin()\n+    setInitialDatesMaxMin()\n+    setInitialNumConfigurationsFilterMaxMin()\n \n     console.log(\"send query...\")\n \n@@ -16,10 +19,32 @@ function send_query() {\n         filter.addEventListener('input', () => {\n             const csrfToken = document.getElementById('csrf_token').value;\n \n+            const startDate = document.querySelector('#start_date');\n+            const endDate = document.querySelector('#end_date');\n+            \n+            setDatesMaxMin(filter, startDate, endDate);\n+\n+            const minUvl = document.querySelector('#min_uvl');\n+            const maxUvl = document.querySelector('#max_uvl');\n+            \n+            setNumFilterMaxMin(filter, minUvl, maxUvl);\n+\n+            const minNumConfg = document.querySelector('#min_num_configurations');\n+            const maxNumConfg = document.querySelector('#max_num_configurations');\n+            \n+            setNumFilterMaxMin(filter, minNumConfg, maxNumConfg);\n+\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n                 publication_type: document.querySelector('#publication_type').value,\n+                start_date: startDate.value,\n+                end_date: endDate.value,\n+                min_uvl: minUvl.value,\n+                max_uvl: maxUvl.value,\n+                by_valid_uvls: document.querySelector('#by_valid_uvls').value,\n+                min_num_configurations: minNumConfg.value,\n+                max_num_configurations: maxNumConfg.value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n             };\n \n@@ -104,6 +129,17 @@ function send_query() {\n                                             ${dataset.tags.map(tag => `<span class=\"badge bg-primary me-1\" style=\"cursor: pointer;\" onclick=\"set_tag_as_query('${tag}')\">${tag}</span>`).join('')}\n                                         </div>\n \n+                                    </div>\n+                                                <div class=\"row mb-2\">\n+                                        <div class=\"col-md-4 col-12\">\n+                                            <span class=\"text-secondary\">Rating</span>\n+                                        </div>\n+                                        <div class=\"col-md-8 col-12 d-flex align-items-center\">\n+                                            <div id=\"star-rating-${dataset.id}\" class=\"stars\" style=\"color: gold;\">\n+                                                ${'<span data-value=\"1\">\u2605</span>'.repeat(5)} <!-- Estrellas para interacci\u00f3n -->\n+                                            </div>\n+                                                <span id=\"average-rating-${dataset.id}\" class=\"ms-2\">-</span> <!-- Valor inicial vac\u00edo -->\n+                                        </div>\n                                     </div>\n \n                                     <div class=\"row\">\n@@ -130,10 +166,105 @@ function send_query() {\n                         document.getElementById('results').appendChild(card);\n                     });\n                 });\n+                updateAverageRating(dataset.id)\n         });\n     });\n }\n \n+function setInitialDatesMaxMin() {\n+    const startDateInput = document.querySelector('#start_date');\n+    const endDateInput = document.querySelector('#end_date');\n+    const today = new Date();\n+\n+    const startDate = new Date(startDateInput.value);\n+    if (!isNaN(startDate)) {\n+        const date = today > startDate ? startDate : today\n+        endDateInput.min = dateToString(date);\n+    } else {\n+        endDateInput.min = \"\"\n+    }\n+\n+    const endDate = new Date(endDateInput.value);\n+    if (!isNaN(endDate)) {\n+        const date = today > endDate ? endDate : today\n+        startDateInput.max = dateToString(date);    \n+    } else {\n+        startDateInput.max = dateToString(today);\n+    }\n+}\n+\n+function setDatesMaxMin(filter, startDateInput, endDateInput) {\n+    if (filter.id === startDateInput.id) {\n+        const startDate = new Date(startDateInput.value);\n+        if (isNaN(startDate)) {\n+            endDateInput.min = \"\";\n+        } else {\n+            endDateInput.min = dateToString(startDate);\n+        }\n+    } else if (filter.id === endDateInput.id) {\n+        const endDate = new Date(endDateInput.value);\n+        const today = new Date();\n+        if (isNaN(endDate)) {\n+            startDateInput.max = dateToString(today);\n+        } else {\n+            const date = today > endDate ? endDate : today\n+            startDateInput.max = dateToString(date);\n+        }\n+    }\n+}\n+\n+function dateToString(date) {\n+    return date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\n+}\n+\n+function setInitialNumUvlFilterMaxMin() {\n+    const minUvl = document.querySelector('#min_uvl');\n+    const maxUvl = document.querySelector('#max_uvl');\n+\n+    const numMin = parseInt(minUvl.value);\n+    if (!isNaN(numMin)) {\n+        maxUvl.min = numMin\n+    }\n+\n+    const numMax = parseInt(maxUvl.value);\n+    if (!isNaN(numMax)) {\n+        minUvl.max = numMax\n+    }\n+}\n+\n+function setInitialNumConfigurationsFilterMaxMin() {\n+    const minConf = document.querySelector('#min_num_configurations');\n+    const maxConf = document.querySelector('#max_num_configurations');\n+\n+    const numMin = parseInt(minConf.value);\n+    if (!isNaN(numMin)) {\n+        maxConf.min = numMin\n+    }\n+\n+    const numMax = parseInt(maxConf.value);\n+    if (!isNaN(numMax)) {\n+        minConf.max = numMax\n+    }\n+}\n+\n+function setNumFilterMaxMin(filter, min, max) {\n+    if (filter.id === min.id) {\n+        const num = parseInt(min.value);\n+        if (isNaN(num)) {\n+            max.min = 0;\n+        } else {\n+            max.min = num;\n+        }\n+    } else if (filter.id === max.id) {\n+        const num = parseInt(max.value);\n+        if (isNaN(num)) {\n+            min.max = \"\";\n+        } else {\n+            min.max = num;\n+        }\n+    } \n+}\n+\n function formatDate(dateString) {\n     const options = {day: 'numeric', month: 'long', year: 'numeric', hour: 'numeric', minute: 'numeric'};\n     const date = new Date(dateString);\n@@ -172,6 +303,30 @@ function clearFilters() {\n     publicationTypeSelect.value = \"any\"; // replace \"any\" with whatever your default value is\n     // publicationTypeSelect.dispatchEvent(new Event('input', {bubbles: true}));\n \n+    let validUvlCheckbox = document.querySelector('#by_valid_uvls');\n+    validUvlCheckbox.checked = false; \n+\n+    // Reset the dates to none\n+    let startDateInput = document.querySelector('#start_date');\n+    startDateInput.value = \"\";\n+\n+    let endDateInput = document.querySelector('#end_date');\n+    endDateInput.value = \"\";\n+    \n+    // Reset the number of uvl models filters\n+    let minUvlInput = document.querySelector('#min_uvl');\n+    minUvlInput.value = \"\";\n+\n+    let maxUvlInput = document.querySelector('#max_uvl');\n+    maxUvlInput.value = \"\";\n+    \n+    // Reset the number of configurations filters\n+    let maxConfigurationsInput = document.querySelector('#max_num_configurations');\n+    maxConfigurationsInput.value = \"\";\n+\n+    let minConfigurationsInput = document.querySelector('#min_num_configurations');\n+    minConfigurationsInput.value = \"\";\n+\n     // Reset the sorting option\n     let sortingOptions = document.querySelectorAll('[name=\"sorting\"]');\n     sortingOptions.forEach(option => {\n@@ -181,6 +336,9 @@ function clearFilters() {\n \n     // Perform a new search with the reset filters\n     queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n+\n+    setInitialNumUvlFilterMaxMin()\n+    setInitialDatesMaxMin()\n }\n \n document.addEventListener('DOMContentLoaded', () => {\n@@ -202,4 +360,26 @@ document.addEventListener('DOMContentLoaded', () => {\n         const queryInput = document.getElementById('query');\n         queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n     }\n-});\n\\ No newline at end of file\n+});\n+\n+\n+function updateAverageRating(datasetId) {\n+    fetch(`/datasets/${datasetId}/average-rating`)\n+        .then(response => response.json())\n+        .then(data => {\n+            const ratingValue = data.average_rating.toFixed(1);\n+            document.getElementById('average-rating-' + datasetId).innerText = ratingValue;\n+\n+            // Resaltar el n\u00famero correcto de estrellas en amarillo\n+            const starContainer = document.getElementById('star-rating-' + datasetId);\n+            highlightStars(starContainer, Math.round(data.average_rating));\n+        })\n+        .catch(error => console.error('Error fetching average rating:', error));\n+}\n+\n+function highlightStars(container, rating) {\n+    container.querySelectorAll('span').forEach(star => {\n+        const starValue = star.getAttribute('data-value');\n+        star.style.color = starValue <= rating ? '#FFD700' : '#ddd'; // Estrellas doradas seg\u00fan el rating\n+    });\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "35b45a02404d35b1dd93bbf090a77c8749f020c0",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 132,
        "deletions": 40,
        "changes": 172,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -1,61 +1,153 @@\n-import re\n-from sqlalchemy import any_, or_\n-import unidecode\n+from sqlalchemy import or_, func\n+from sqlalchemy.orm import aliased\n+from app import db\n from app.modules.dataset.models import Author, DSMetaData, DataSet, PublicationType\n-from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from app.modules.featuremodel.models import FeatureModel\n+from app.modules.hubfile.models import Hubfile\n+from app.modules.flamapy.routes import check_uvl, get_num_configurations\n from core.repositories.BaseRepository import BaseRepository\n+from datetime import datetime\n+\n+\n+def safe_parse_date(date, date_format, default_date=None):\n+    try:\n+        return datetime.strptime(date, date_format)\n+    except ValueError:\n+        return default_date\n \n \n class ExploreRepository(BaseRepository):\n     def __init__(self):\n         super().__init__(DataSet)\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n-        # Normalize and remove unwanted characters\n-        normalized_query = unidecode.unidecode(query).lower()\n-        cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n-\n-        filters = []\n-        for word in cleaned_query.split():\n-            filters.append(DSMetaData.title.ilike(f\"%{word}%\"))\n-            filters.append(DSMetaData.description.ilike(f\"%{word}%\"))\n-            filters.append(Author.name.ilike(f\"%{word}%\"))\n-            filters.append(Author.affiliation.ilike(f\"%{word}%\"))\n-            filters.append(Author.orcid.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.uvl_filename.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.title.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.description.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.publication_doi.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.tags.ilike(f\"%{word}%\"))\n-            filters.append(DSMetaData.tags.ilike(f\"%{word}%\"))\n-\n-        datasets = (\n-            self.model.query\n-            .join(DataSet.ds_meta_data)\n-            .join(DSMetaData.authors)\n-            .join(DataSet.feature_models)\n-            .join(FeatureModel.fm_meta_data)\n-            .filter(or_(*filters))\n-            .filter(DSMetaData.dataset_doi.isnot(None))  # Exclude datasets with empty dataset_doi\n-        )\n+    def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n+               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\",\n+               by_valid_uvls=\"\", min_num_configurations=\"\", max_num_configurations=\"\", **kwargs):\n+\n+        # Crear un alias para `ds_meta_data` para evitar conflictos de alias.\n+        ds_meta_data_alias = aliased(DSMetaData)\n+        author_meta_data_alias = aliased(DSMetaData)  # Nuevo alias para la segunda uni\u00f3n\n+        min_size_filter = None\n+        max_size_filter = None\n+\n+        # Inicia la consulta, usando el alias en la uni\u00f3n\n+        query = db.session.query(DataSet).join(ds_meta_data_alias, DataSet.ds_meta_data)\n \n+        # Filtrar por tipo de publicaci\u00f3n\n         if publication_type != \"any\":\n             matching_type = None\n             for member in PublicationType:\n                 if member.value.lower() == publication_type:\n                     matching_type = member\n                     break\n-\n             if matching_type is not None:\n-                datasets = datasets.filter(DSMetaData.publication_type == matching_type.name)\n+                query = query.filter(ds_meta_data_alias.publication_type == matching_type.name)\n+\n+        # Procesar el filtro de `query_string`\n+        query_filter = query_string.strip()\n+\n+        # Filtrar por autor\n+        if query_filter.startswith('author:'):\n+            author_filter = query_filter[7:].strip()\n+            query = query.join(author_meta_data_alias).join(Author).filter(Author.name.ilike(f'%{author_filter}%'))\n+\n+        # Filtrar por tama\u00f1o m\u00ednimo\n+        elif query_filter.startswith('min_size:'):\n+            try:\n+                min_size_filter = int(query_filter[9:].strip())\n+            except ValueError:\n+                min_size_filter = None\n+\n+        # Filtrar por tama\u00f1o m\u00e1ximo\n+        elif query_filter.startswith('max_size:'):\n+            try:\n+                max_size_filter = int(query_filter[9:].strip())\n+            except ValueError:\n+                max_size_filter = None\n+\n+        # Filtrar por etiquetas\n+        elif query_filter.startswith('tags:'):\n+            tags_filter = query_filter[5:].strip()\n+            query = query.filter(ds_meta_data_alias.tags.ilike(f'%{tags_filter}%'))\n+\n+        # Filtrar por t\u00edtulo o tag(consulta general)\n+        else:\n+            query = query.filter(\n+                or_(\n+                    ds_meta_data_alias.title.ilike(f\"%{query_filter}%\"),\n+                    ds_meta_data_alias.tags.ilike(f\"%{query_filter}%\")\n+                )\n+            )\n+\n+        date_format = '%Y-%m-%d'\n+        if start_date:\n+            date_obj = safe_parse_date(start_date, date_format)\n+            query = query.filter(func.date(DataSet.created_at) >= date_obj)\n \n-        if tags:\n-            datasets = datasets.filter(DSMetaData.tags.ilike(any_(f\"%{tag}%\" for tag in tags)))\n+        if end_date:\n+            date_obj = safe_parse_date(end_date, date_format)\n+            query = query.filter(func.date(DataSet.created_at) <= date_obj)\n \n-        # Order by created_at\n+        # Realizamos la uni\u00f3n con Hubfile a trav\u00e9s de FeatureModel\n+        query = query.join(FeatureModel, FeatureModel.data_set_id == DataSet.id)  # Uni\u00f3n con FeatureModel\n+        query = query.join(Hubfile, Hubfile.feature_model_id == FeatureModel.id)  # Uni\u00f3n con Hubfile\n+\n+        if min_uvl.isdigit():\n+            query = query.group_by(DataSet.id).having(func.count(Hubfile.id) >= int(min_uvl))\n+\n+        if max_uvl.isdigit():\n+            query = query.group_by(DataSet.id).having(func.count(Hubfile.id) <= int(max_uvl))\n+\n+        # Ordenar resultados\n         if sorting == \"oldest\":\n-            datasets = datasets.order_by(self.model.created_at.asc())\n+            query = query.order_by(DataSet.created_at.asc())\n         else:\n-            datasets = datasets.order_by(self.model.created_at.desc())\n+            query = query.order_by(DataSet.created_at.desc())\n+\n+        # Ejecutar la consulta y obtener todos los resultados\n+        results = query.all()\n+\n+        # Filtrar por tama\u00f1o m\u00ednimo despu\u00e9s de obtener los resultados\n+        if min_size_filter is not None:\n+            results = [ds for ds in results if ds.get_file_total_size() >= min_size_filter]\n+\n+        # Filtrar por tama\u00f1o m\u00e1ximo despu\u00e9s de obtener los resultados\n+        if max_size_filter is not None:\n+            results = [ds for ds in results if ds.get_file_total_size() <= max_size_filter]\n+\n+        if by_valid_uvls == \"on\":\n+            results = [\n+                ds for ds in results\n+                if any(\n+                    any(\n+                        check_uvl(file.id)[1] == 200\n+                        for file in fm.files\n+                    )\n+                    for fm in ds.feature_models\n+                )\n+            ]\n+\n+        if min_num_configurations.isdigit() or max_num_configurations.isdigit():\n+            results = [\n+                ds for ds in results\n+                if all(\n+                    all(\n+                        num_configurations_between(file.id, min_num_configurations, max_num_configurations)\n+                        for file in fm.files\n+                    )\n+                    for fm in ds.feature_models\n+                )\n+            ]\n+\n+        return results\n+\n+\n+def num_configurations_between(file_id, min_num_configurations, max_num_configurations):\n+    result, status_code = get_num_configurations(file_id)\n+\n+    if status_code == 200:\n+        num = int(result.json[\"result\"])\n+        return (min_num_configurations.isdigit() and num >= int(min_num_configurations)\n+                and max_num_configurations.isdigit() and num <= int(max_num_configurations))\n \n-        return datasets.all()\n+    return True"
      },
      {
        "sha": "7ccc1fa16fcccc18409951a201d2f9be663844fb",
        "filename": "app/modules/explore/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fexplore%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fexplore%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Froutes.py?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -1,5 +1,4 @@\n from flask import render_template, request, jsonify\n-\n from app.modules.explore import explore_bp\n from app.modules.explore.forms import ExploreForm\n from app.modules.explore.services import ExploreService\n@@ -8,7 +7,7 @@\n @explore_bp.route('/explore', methods=['GET', 'POST'])\n def index():\n     if request.method == 'GET':\n-        query = request.args.get('query', '')\n+        query = request.args.get('query', '')  # Obtener la consulta desde la URL\n         form = ExploreForm()\n         return render_template('explore/index.html', form=form, query=query)\n "
      },
      {
        "sha": "5122c640cd404380d3d3793e09c0ff14fc91339d",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -1,10 +1,14 @@\n from app.modules.explore.repositories import ExploreRepository\n-from core.services.BaseService import BaseService\n \n \n-class ExploreService(BaseService):\n+class ExploreService:\n     def __init__(self):\n-        super().__init__(ExploreRepository())\n+        self.repository = ExploreRepository()\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n-        return self.repository.filter(query, sorting, publication_type, tags, **kwargs)\n+    def filter(self, query: str, sorting=\"newest\", publication_type=\"any\",\n+               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", by_valid_uvls=\"\",\n+               min_num_configurations=\"\", max_num_configurations=\"\", **kwargs):\n+\n+        return self.repository.filter(query, sorting, publication_type, start_date,\n+                                      end_date, min_uvl, max_uvl, by_valid_uvls, min_num_configurations,\n+                                      max_num_configurations, **kwargs)"
      },
      {
        "sha": "5b1e2882731f8d2f7f0d93fe7eeaffe24a381261",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 56,
        "deletions": 1,
        "changes": 57,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -86,14 +86,69 @@ <h3 class=\"h3 mb-3\">\n \n                         </div>\n \n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"by_valid_uvls\">Filter by valid uvl models: </label>\n+                                <input type=\"checkbox\" name=\"by_valid_uvls\" id=\"by_valid_uvls\">\n+                            </div>\n+                        </div>\n+\n+                        <p style=\"margin-bottom: 0.2rem;\">Filter by date created at:</p>\n+\n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"start_date\">Start date</label>\n+                                <input class=\"form-control\" type=\"date\" name=\"start_date\" id=\"start_date\" required=\"\">\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"end_date\">End date</label>\n+                                <input class=\"form-control\" type=\"date\" name=\"end_date\" id=\"end_date\" required=\"\">                                   \n+                            </div>\n+                        </div>\n+                        \n+                        <p style=\"margin-bottom: 0.2rem;\">Filter number of uvl models:</p>\n+\n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"min_uvl\">Minimum</label>\n+                                <input class=\"form-control\" type=\"number\" name=\"min_uvl\" id=\"min_uvl\" min=\"0\" required=\"\">\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"max_uvl\">Maximum</label>\n+                                <input class=\"form-control\" type=\"number\" name=\"max_uvl\" id=\"max_uvl\" min=\"0\" required=\"\">                                   \n+                            </div>\n+                        </div>\n+\n+                        <p style=\"margin-bottom: 0.2rem;\">Filter number of configurations:</p>\n+\n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"min_num_configurations\">Minimum</label>\n+                                <input class=\"form-control\" type=\"number\" name=\"min_num_configurations\" id=\"min_num_configurations\" min=\"0\" required=\"\">\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"max_num_configurations\">Maximum</label>\n+                                <input class=\"form-control\" type=\"number\" name=\"max_num_configurations\" id=\"max_num_configurations\" min=\"0\" required=\"\">                                   \n+                            </div>\n+                        </div>\n+\n                     </div>\n \n                     <div class=\"row\">\n \n                         <div class=\"col-6\">\n \n                             <div>\n-                                Sort results by creation date\n+                                <p style=\"margin-bottom: 0.2rem;\">Sort results by creation date</p>\n                                 <label class=\"form-check\">\n                                     <input class=\"form-check-input\" type=\"radio\" value=\"newest\" name=\"sorting\"\n                                            checked=\"\">"
      },
      {
        "sha": "f73c7d15317242b3d2bf2a3ac0ec708c8f1c44f0",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 80,
        "deletions": 17,
        "changes": 97,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -4,13 +4,17 @@\n from app.modules.flamapy import flamapy_bp\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n+from flamapy.core.discover import DiscoverMetamodels\n+from flamapy.core.exceptions import OperationNotFound, ConfigurationNotFound\n import tempfile\n import os\n \n from antlr4 import CommonTokenStream, FileStream\n from uvl.UVLCustomLexer import UVLCustomLexer\n from uvl.UVLPythonParser import UVLPythonParser\n from antlr4.error.ErrorListener import ErrorListener\n+from werkzeug.exceptions import NotFound\n+\n \n logger = logging.getLogger(__name__)\n \n@@ -76,42 +80,101 @@ def to_glencoe(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.json', delete=False)\n     try:\n         hubfile = HubfileService().get_or_404(file_id)\n-        fm = UVLReader(hubfile.get_path()).transform()\n-        GlencoeWriter(temp_file.name, fm).transform()\n-\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+        # Agrega un mensaje de depuraci\u00f3n\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+        fm1 = UVLReader(file_path).transform()\n+        GlencoeWriter(temp_file.name, fm1).transform()\n         # Return the file in the response\n-        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_glencoe.txt')\n-    finally:\n-        # Clean up the temporary file\n-        os.remove(temp_file.name)\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_glencoe.txt',\n+                         mimetype='text/plain')\n+    except NotFound as e:\n+        # Manejar el caso en que el archivo no se encuentra\n+        # Solo devolver el mensaje sin el \"404 Not Found\" al principio\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except Exception as e:\n+        # Manejar cualquier otro error inesperado\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n \n \n @flamapy_bp.route('/flamapy/to_splot/<int:file_id>', methods=['GET'])\n def to_splot(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.splx', delete=False)\n     try:\n         hubfile = HubfileService().get_by_id(file_id)\n-        fm = UVLReader(hubfile.get_path()).transform()\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n         SPLOTWriter(temp_file.name, fm).transform()\n \n         # Return the file in the response\n-        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_splot.txt')\n-    finally:\n-        # Clean up the temporary file\n-        os.remove(temp_file.name)\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_splot.txt',\n+                         mimetype='text/plain')\n+    except NotFound as e:\n+        # Manejar el caso en que el archivo no se encuentra\n+        # Solo devolver el mensaje sin el \"404 Not Found\" al principio\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except Exception as e:\n+        # Manejar cualquier otro error inesperado\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n \n \n @flamapy_bp.route('/flamapy/to_cnf/<int:file_id>', methods=['GET'])\n def to_cnf(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.cnf', delete=False)\n     try:\n         hubfile = HubfileService().get_by_id(file_id)\n-        fm = UVLReader(hubfile.get_path()).transform()\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n         sat = FmToPysat(fm).transform()\n         DimacsWriter(temp_file.name, sat).transform()\n \n         # Return the file in the response\n-        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_cnf.txt')\n-    finally:\n-        # Clean up the temporary file\n-        os.remove(temp_file.name)\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_cnf.txt',\n+                         mimetype='text/plain')\n+    except NotFound as e:\n+        # Manejar el caso en que el archivo no se encuentra\n+        # Solo devolver el mensaje sin el \"404 Not Found\" al principio\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except Exception as e:\n+        # Manejar cualquier otro error inesperado\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n+\n+\n+def get_num_configurations(file_id):\n+    try:\n+        hubfile = HubfileService().get_or_404(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+        # Agrega un mensaje de depuraci\u00f3n\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        # Initiallize the dicover metamodel\n+        dm = DiscoverMetamodels()\n+        result = dm.use_operation_from_file(\"PySATConfigurationsNumber\", file_path)\n+\n+        return jsonify({\"result\": result}), 200\n+\n+    except NotFound as e:\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except OperationNotFound as e:\n+        return jsonify({\"error\": str(e).replace(\"Operation not found: \", \"\")}), 500\n+    except ConfigurationNotFound as e:\n+        return jsonify({\"error\": str(e).replace(\"Configuration not found: \", \"\")}), 500\n+    except Exception as e:\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500"
      },
      {
        "sha": "b94fd64147b6e112e958e67e6bd8310e4557cce1",
        "filename": "app/modules/hubfile/routes.py",
        "status": "modified",
        "additions": 41,
        "deletions": 33,
        "changes": 74,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fhubfile%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fhubfile%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fhubfile%2Froutes.py?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -1,52 +1,60 @@\n from datetime import datetime, timezone\n import os\n import uuid\n-from flask import current_app, jsonify, make_response, request, send_from_directory\n+from flask import current_app, jsonify, make_response, request, send_from_directory, abort\n from flask_login import current_user\n from app.modules.hubfile import hubfile_bp\n from app.modules.hubfile.models import HubfileDownloadRecord, HubfileViewRecord\n from app.modules.hubfile.services import HubfileDownloadRecordService, HubfileService\n-\n from app import db\n+import traceback\n \n \n @hubfile_bp.route(\"/file/download/<int:file_id>\", methods=[\"GET\"])\n def download_file(file_id):\n-    file = HubfileService().get_or_404(file_id)\n-    filename = file.name\n-\n-    directory_path = f\"uploads/user_{file.feature_model.data_set.user_id}/dataset_{file.feature_model.data_set_id}/\"\n-    parent_directory_path = os.path.dirname(current_app.root_path)\n-    file_path = os.path.join(parent_directory_path, directory_path)\n-\n-    # Get the cookie from the request or generate a new one if it does not exist\n-    user_cookie = request.cookies.get(\"file_download_cookie\")\n-    if not user_cookie:\n-        user_cookie = str(uuid.uuid4())\n-\n-    # Check if the download record already exists for this cookie\n-    existing_record = HubfileDownloadRecord.query.filter_by(\n-        user_id=current_user.id if current_user.is_authenticated else None,\n-        file_id=file_id,\n-        download_cookie=user_cookie\n-    ).first()\n-\n-    if not existing_record:\n-        # Record the download in your database\n-        HubfileDownloadRecordService().create(\n+    try:\n+        # Intentamos obtener el archivo del servicio\n+        file = HubfileService().get_or_404(file_id)\n+        # Configuraci\u00f3n de la ruta de descarga\n+        filename = file.name\n+        directory_path = \"app/modules/dataset/uvl_examples/\"\n+        parent_directory_path = os.path.dirname(current_app.root_path)\n+        file_path = os.path.join(parent_directory_path, directory_path)\n+\n+        # Verifica si el archivo existe\n+        if not os.path.exists(file_path):\n+            abort(404)\n+\n+        # Si el archivo existe, proceder con el proceso de descarga\n+        user_cookie = request.cookies.get(\"file_download_cookie\", str(uuid.uuid4()))\n+        existing_record = HubfileDownloadRecord.query.filter_by(\n             user_id=current_user.id if current_user.is_authenticated else None,\n             file_id=file_id,\n-            download_date=datetime.now(timezone.utc),\n-            download_cookie=user_cookie,\n-        )\n+            download_cookie=user_cookie\n+        ).first()\n+\n+        if not existing_record:\n+            HubfileDownloadRecordService().create(\n+                user_id=current_user.id if current_user.is_authenticated else None,\n+                file_id=file_id,\n+                download_date=datetime.now(timezone.utc),\n+                download_cookie=user_cookie,\n+            )\n \n-    # Save the cookie to the user's browser\n-    resp = make_response(\n-        send_from_directory(directory=file_path, path=filename, as_attachment=True)\n-    )\n-    resp.set_cookie(\"file_download_cookie\", user_cookie)\n+        resp = make_response(\n+            send_from_directory(directory=file_path, path=filename, as_attachment=True)\n+        )\n+        resp.set_cookie(\"file_download_cookie\", user_cookie)\n+        return resp\n \n-    return resp\n+    except Exception as e:\n+        # Si ocurre un error, capturamos la excepci\u00f3n y devolvemos 500\n+        current_app.logger.error(f\"Error inesperado al intentar descargar el archivo: {e}\")\n+        current_app.logger.error(traceback.format_exc())  # Esto imprime el traceback completo para mayor claridad\n+        return jsonify({\n+            \"error\": \"An unexpected error occurred\",\n+            \"message\": str(e)\n+        }), 500\n \n \n @hubfile_bp.route('/file/view/<int:file_id>', methods=['GET'])"
      },
      {
        "sha": "5f6e2ebcb454c7943b73bc67f8274eb02640951e",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 66,
        "deletions": 3,
        "changes": 69,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
        "patch": "@@ -83,7 +83,19 @@ <h2>\n                             </div>\n \n                         </div>\n-\n+                        <div class=\"row mb-2\">\n+                            <div class =\"col-md-4 col-12\">\n+                                <span class=\"text-center\">Rating</span>\n+                            </div>\n+                            <div class=\"col-md-8 col-12 d-flex align-items-center\">\n+                                <div id=\"star-rating-{{ dataset.id}}\" class=\"stars\" style=\"color: gold;\">\n+                                    {% for i in range(1,6) %}\n+                                    <span data-value=\"{{ i }}\">*</span>\n+                                    {% endfor %}\n+                                </div>\n+                                <span id=\"advange-rating-{{ dataset.id }}\" class=\"ms-2\"></span>\n+                            </div>\n+                        </div>\n                         <div class=\"row  mt-4\">\n                             <div class=\"col-12\">\n                                 <a href=\"{{ dataset.get_uvlhub_doi() }}\" class=\"btn btn-outline-primary btn-sm\"\n@@ -282,5 +294,56 @@ <h2 class=\"card-title card-title-light\">\n {% endblock %}\n \n {% block scripts %}\n-    <script src=\"{{ url_for('public.scripts') }}\"></script>\n-{% endblock %}\n\\ No newline at end of file\n+\n+<script>\n+    document.addEventListener('DOMContentLoaded', function () {\n+        // Generar una lista de IDs en Jinja\n+        const datasetIds = {{ datasets|map(attribute='id')|list|default([])|tojson }};\n+        \n+        // Validar que la lista no est\u00e9 vac\u00eda antes de iterar\n+        if (Array.isArray(datasetIds) && datasetIds.length > 0) {\n+            datasetIds.forEach(datasetId => {\n+                updateAverageRating(datasetId);\n+            });\n+        } else {\n+            console.warn('No datasets found to update ratings.');\n+        }\n+    });\n+        \n+    function updateAverageRating(datasetId) {\n+        fetch(`/datasets/${datasetId}/average-rating`)\n+            .then(response => {\n+                if (!response.ok) {\n+                    throw new Error('Network response was not ok');\n+                }\n+                return response.json();\n+            })\n+            .then(data => {\n+                // Redondear el valor de la calificaci\u00f3n promedio\n+                const ratingValue = data.average_rating.toFixed(1);\n+\n+                // Actualizar el texto del promedio\n+                const ratingElement = document.getElementById('average-rating-' + datasetId);\n+                if (ratingElement) {\n+                    ratingElement.innerText = ratingValue;\n+                }\n+\n+                // Actualizar el color de las estrellas\n+                const starContainer = document.getElementById('star-rating-' + datasetId);\n+                if (starContainer) {\n+                    highlightStars(starContainer, Math.round(data.average_rating));\n+                }\n+            })\n+            .catch(error => console.error('Error fetching average rating:', error));\n+    }\n+\n+    function highlightStars(container, rating) {\n+        container.querySelectorAll('span').forEach(star => {\n+            const starValue = parseInt(star.getAttribute('data-value'), 10);\n+            star.style.color = starValue <= rating ? '#FFD700' : '#ddd'; // Cambia el color de la estrella\n+        });\n+    }\n+</script>\n+\n+<script src=\"{{ url_for('public.scripts') }}\"></script>\n+{% endblock %}"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/53",
    "id": 2199858520,
    "node_id": "PR_kwDONB39G86DHy1Y",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/53",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/53.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/53.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/53",
    "number": 53,
    "state": "closed",
    "locked": false,
    "title": "Download in different formats",
    "user": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Add Unit tests of Hubfile and Flamapy",
    "created_at": "2024-11-26T02:55:27Z",
    "updated_at": "2024-12-04T13:45:40Z",
    "closed_at": "2024-12-04T13:45:39Z",
    "merged_at": null,
    "merge_commit_sha": "f3770bcaca507f6a357f2ac35047bfcffd7b0204",
    "assignee": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pabmatang",
        "id": 73099537,
        "node_id": "MDQ6VXNlcjczMDk5NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pabmatang",
        "html_url": "https://github.com/pabmatang",
        "followers_url": "https://api.github.com/users/pabmatang/followers",
        "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
        "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
        "organizations_url": "https://api.github.com/users/pabmatang/orgs",
        "repos_url": "https://api.github.com/users/pabmatang/repos",
        "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pabmatang/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/53/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/53/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/53/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/4742214bc257471750acdcf90cdf31bb1384f3da",
    "head": {
      "label": "TostaHub:download-in-different-formats",
      "ref": "download-in-different-formats",
      "sha": "4742214bc257471750acdcf90cdf31bb1384f3da",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/53"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/53"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/53"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/53/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/53/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/53/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/4742214bc257471750acdcf90cdf31bb1384f3da"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "f32bae7f27f764790cc812dabd725bc27bf116a4",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 116,
        "deletions": 1,
        "changes": 117,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4742214bc257471750acdcf90cdf31bb1384f3da/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4742214bc257471750acdcf90cdf31bb1384f3da/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=4742214bc257471750acdcf90cdf31bb1384f3da",
        "patch": "@@ -4,9 +4,15 @@\n import shutil\n import tempfile\n import uuid\n+import io\n+import zipfile\n+from flask import send_file\n from datetime import datetime, timezone\n from zipfile import ZipFile\n-\n+from werkzeug.exceptions import NotFound\n+from app.modules.hubfile.services import HubfileService\n+from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter, UVLWriter\n+from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n from flask import (\n     redirect,\n     render_template,\n@@ -250,6 +256,115 @@ def download_dataset(dataset_id):\n     return resp\n \n \n+def generate_glencoe_file(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.json', delete=False)\n+    try:\n+        hubfile = HubfileService().get_or_404(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm1 = UVLReader(file_path).transform()\n+        GlencoeWriter(temp_file.name, fm1).transform()\n+        return temp_file.name  # Retorna la ruta del archivo generado\n+    except Exception as e:\n+        raise RuntimeError(f\"Error generating Glencoe file: {e}\")\n+\n+\n+def generate_splot_file(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.splx', delete=False)\n+    try:\n+        hubfile = HubfileService().get_by_id(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n+        SPLOTWriter(temp_file.name, fm).transform()\n+        return temp_file.name  # Retorna la ruta del archivo generado\n+    except Exception as e:\n+        raise RuntimeError(f\"Error generating SPLOT file: {e}\")\n+\n+\n+def generate_cnf_file(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.cnf', delete=False)\n+    try:\n+        hubfile = HubfileService().get_by_id(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n+        sat = FmToPysat(fm).transform()\n+        DimacsWriter(temp_file.name, sat).transform()\n+        return temp_file.name  # Retorna la ruta del archivo generado\n+    except Exception as e:\n+        raise RuntimeError(f\"Error generating DIMACS file: {e}\")\n+\n+\n+def generate_uvl_file(file_id):\n+    temp_file = tempfile.NamedTemporaryFile(suffix='.uvl', delete=False)\n+    try:\n+        hubfile = HubfileService().get_by_id(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n+        UVLWriter(temp_file.name, fm).transform()\n+        return temp_file.name  # Retorna la ruta del archivo generado\n+    except Exception as e:\n+        raise RuntimeError(f\"Error generating UVL file: {e}\")\n+\n+\n+@dataset_bp.route('/download_all/<int:file_id>')\n+def download_all_formats(file_id):\n+    try:\n+        # Generar los archivos\n+        uvl_path = generate_uvl_file(file_id)\n+        glencoe_path = generate_glencoe_file(file_id)\n+        dimacs_path = generate_cnf_file(file_id)\n+        splot_path = generate_splot_file(file_id)\n+\n+        # Crear un archivo ZIP en memoria\n+        memory_file = io.BytesIO()\n+        with zipfile.ZipFile(memory_file, 'w') as zf:\n+            zf.write(uvl_path, os.path.basename(uvl_path))\n+            zf.write(glencoe_path, os.path.basename(glencoe_path))\n+            zf.write(dimacs_path, os.path.basename(dimacs_path))\n+            zf.write(splot_path, os.path.basename(splot_path))\n+\n+        memory_file.seek(0)\n+\n+        # Eliminar archivos temporales\n+        os.remove(uvl_path)\n+        os.remove(glencoe_path)\n+        os.remove(dimacs_path)\n+        os.remove(splot_path)\n+\n+        # Devolver archivo ZIP como respuesta\n+        return send_file(\n+            memory_file,\n+            mimetype='application/zip',\n+            as_attachment=True,\n+            download_name=f\"files_{file_id}.zip\"\n+        )\n+    except Exception as e:\n+        return jsonify({'error': str(e)}), 500\n+\n+\n @dataset_bp.route(\"/doi/<path:doi>/\", methods=[\"GET\"])\n def subdomain_index(doi):\n "
      },
      {
        "sha": "0afae5d7ff58596a49405cf05262f2c0ac4cd208",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4742214bc257471750acdcf90cdf31bb1384f3da/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4742214bc257471750acdcf90cdf31bb1384f3da/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=4742214bc257471750acdcf90cdf31bb1384f3da",
        "patch": "@@ -317,11 +317,13 @@ <h4 style=\"margin-bottom: 0px;\"><span class=\"badge bg-dark\">{{ dataset.get_files\n                                                 SPLOT\n                                             </a>\n                                         </li>\n+                                        <li>\n+                                            <a class=\"dropdown-item\" href=\"{{ url_for('dataset.download_all_formats', file_id=file.id) }}\">\n+                                                Descargar todos (ZIP)\n+                                            </a>\n+                                        </li>\n                                     </ul>\n                                 </div>\n-                                \n-                                \n-\n                             </div>\n                         </div>\n                     </div>"
      },
      {
        "sha": "b7b732b7c7cee1349fc3885dc7b31a3ccad92e5d",
        "filename": "app/modules/dataset/tests/test_unit.py",
        "status": "added",
        "additions": 101,
        "deletions": 0,
        "changes": 101,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4742214bc257471750acdcf90cdf31bb1384f3da/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4742214bc257471750acdcf90cdf31bb1384f3da/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftests%2Ftest_unit.py?ref=4742214bc257471750acdcf90cdf31bb1384f3da",
        "patch": "@@ -0,0 +1,101 @@\n+import unittest\n+from unittest.mock import patch, MagicMock\n+import os\n+from app import app\n+\n+\n+class TestDownloadAllFormats(unittest.TestCase):\n+\n+    def setUp(self):\n+        # Configura una instancia de la aplicaci\u00f3n para pruebas\n+        self.app = app.test_client()\n+        self.app.testing = True\n+\n+    @patch('app.modules.dataset.routes.generate_uvl_file')\n+    @patch('app.modules.dataset.routes.generate_glencoe_file')\n+    @patch('app.modules.dataset.routes.generate_cnf_file')\n+    @patch('app.modules.dataset.routes.generate_splot_file')\n+    @patch('app.modules.dataset.routes.send_file')\n+    def test_download_all_formats_success(\n+        self,\n+        mock_send_file,\n+        mock_generate_splot,\n+        mock_generate_cnf,\n+        mock_generate_glencoe,\n+        mock_generate_uvl\n+    ):\n+        # Mockear las rutas de los archivos generados\n+        mock_generate_uvl.return_value = '/tmp/file.uvl'\n+        mock_generate_glencoe.return_value = '/tmp/file_glencoe.json'\n+        mock_generate_cnf.return_value = '/tmp/file.cnf'\n+        mock_generate_splot.return_value = '/tmp/file.splx'\n+\n+        # Mockear el comportamiento de send_file\n+        mock_send_file.return_value = MagicMock()\n+\n+        # Simular la existencia de los archivos\n+        for path in [\n+            mock_generate_uvl.return_value,\n+            mock_generate_glencoe.return_value,\n+            mock_generate_cnf.return_value,\n+            mock_generate_splot.return_value\n+        ]:\n+            with open(path, 'w') as f:\n+                f.write('mock content')\n+\n+        # Hacer la solicitud a la ruta\n+        response = self.app.get('/download_all/123')\n+\n+        # Validar que la respuesta sea exitosa\n+        self.assertEqual(response.status_code, 200)\n+        mock_send_file.assert_called_once()\n+\n+        # Verificar que los m\u00e9todos de generaci\u00f3n se llamaron con el ID correcto\n+        mock_generate_uvl.assert_called_once_with(123)\n+        mock_generate_glencoe.assert_called_once_with(123)\n+        mock_generate_cnf.assert_called_once_with(123)\n+        mock_generate_splot.assert_called_once_with(123)\n+\n+        # Limpiar los archivos temporales\n+        for path in [\n+            mock_generate_uvl.return_value,\n+            mock_generate_glencoe.return_value,\n+            mock_generate_cnf.return_value,\n+            mock_generate_splot.return_value\n+        ]:\n+            if os.path.exists(path):\n+                os.remove(path)\n+\n+    @patch('app.modules.dataset.routes.generate_uvl_file')\n+    @patch('app.modules.dataset.routes.generate_glencoe_file')\n+    @patch('app.modules.dataset.routes.generate_cnf_file')\n+    @patch('app.modules.dataset.routes.generate_splot_file')\n+    def test_download_all_formats_file_generation_failure(\n+        self,\n+        mock_generate_splot,\n+        mock_generate_cnf,\n+        mock_generate_glencoe,\n+        mock_generate_uvl\n+    ):\n+        # Simular que una de las funciones de generaci\u00f3n lanza un error\n+        mock_generate_uvl.side_effect = RuntimeError(\"UVL generation failed\")\n+        mock_generate_glencoe.return_value = '/tmp/file_glencoe.json'\n+        mock_generate_cnf.return_value = '/tmp/file.cnf'\n+        mock_generate_splot.return_value = '/tmp/file.splx'\n+\n+        # Hacer la solicitud a la ruta\n+        response = self.app.get('/download_all/123')\n+\n+        # Validar que la respuesta indique un error\n+        self.assertEqual(response.status_code, 500)\n+        self.assertIn(b'\"error\": \"UVL generation failed\"', response.data)\n+\n+        # Verificar que las funciones se llamaron\n+        mock_generate_uvl.assert_called_once_with(123)\n+        mock_generate_glencoe.assert_not_called()\n+        mock_generate_cnf.assert_not_called()\n+        mock_generate_splot.assert_not_called()\n+\n+\n+if __name__ == '__main__':\n+    unittest.main()"
      },
      {
        "sha": "39869c778f3a1d5f3ef9a5bf23bda0ed7f64de28",
        "filename": "app/modules/flamapy/tests/test_unit.py",
        "status": "modified",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4742214bc257471750acdcf90cdf31bb1384f3da/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4742214bc257471750acdcf90cdf31bb1384f3da/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Ftests%2Ftest_unit.py?ref=4742214bc257471750acdcf90cdf31bb1384f3da",
        "patch": "@@ -1,4 +1,7 @@\n import pytest\n+from flask import Flask\n+from unittest.mock import patch, MagicMock\n+from app.modules.flamapy.routes import flamapy_bp\n \n \n @pytest.fixture(scope='module')\n@@ -22,3 +25,181 @@ def test_sample_assertion(test_client):\n     \"\"\"\n     greeting = \"Hello, World!\"\n     assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\"\n+\n+\n+# TEST DE GLENCOE\n+@pytest.fixture\n+def client():\n+    app = Flask(__name__)\n+    app.register_blueprint(flamapy_bp)  # Registra el blueprint con las rutas\n+    with app.test_client() as client:\n+        yield client\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.isfile')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.UVLReader')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.GlencoeWriter')\n+def test_to_glencoe_success(mock_glencoe_writer, mock_uvl_reader, mock_isfile, mock_get_or_404, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_or_404.return_value = mock_hubfile\n+    # Mock de UVLReader y GlencoeWriter\n+    mock_uvl_reader.return_value.transform.return_value = \"mocked_feature_model\"\n+    mock_glencoe_writer.return_value.transform.return_value = None\n+\n+    response = client.get('/flamapy/to_glencoe/10')\n+    assert response.status_code == 200\n+    assert response.headers[\"Content-Disposition\"] == \"attachment; filename=file10.uvl_glencoe.txt\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.isfile')\n+def test_to_glencoe_file_not_found(mock_isfile, mock_get_or_404, client):\n+    # Simula que el archivo no existe en el sistema de archivos\n+    mock_isfile.return_value = False\n+    # Mock de HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_or_404.return_value = mock_hubfile\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_glencoe/10')\n+    # Verifica que el c\u00f3digo de estado es 404\n+    assert response.status_code == 404\n+    assert response.json[\"error\"] == \"File file10.uvl not found\"\n+# Error inesperado dentro de la l\u00f3gica del c\u00f3digo de servicio\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.isfile')\n+def test_to_glencoe_unexpected(mock_isfile, mock_get_or_404, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = False  # No existe en el sistema de archivos\n+    # Mock de HubfileService para lanzar un error inesperado\n+    mock_get_or_404.side_effect = ValueError(\"Unexpected error\")  # Simula un error inesperado\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_glencoe/5')\n+    # Verifica que el c\u00f3digo de estado es 500\n+    assert response.status_code == 500\n+    assert response.json[\"error\"] == \"Internal Server Error\"\n+    assert response.json[\"details\"] == \"Unexpected error\"\n+\n+\n+# TEST DE SPLOT\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.UVLReader')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.SPLOTWriter')\n+def test_to_splot_success(mock_splot_writer, mock_uvl_reader, mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Mock de UVLReader y SPLOTWriter\n+    mock_uvl_reader.return_value.transform.return_value = \"mocked_feature_model\"\n+    mock_splot_writer.return_value.transform.return_value = None\n+\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_splot/10')\n+    # Verifica que el c\u00f3digo de estado es 200\n+    assert response.status_code == 200\n+    # Verifica que el archivo se est\u00e1 devolviendo como attachment\n+    assert response.headers[\"Content-Disposition\"] == \"attachment; filename=file10.uvl_splot.txt\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+def test_to_splot_file_not_found(mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo no existe en el sistema de archivos\n+    mock_isfile.return_value = False\n+    # Mock de HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_splot/10')\n+    # Verifica que el c\u00f3digo de estado es 404\n+    assert response.status_code == 404\n+    assert response.json[\"error\"] == \"File file10.uvl not found\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+def test_to_splot_unexpected(mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True  # El archivo existe en el sistema\n+    # Mock de HubfileService para lanzar un error inesperado\n+    mock_get_by_id.side_effect = ValueError(\"Unexpected error\")  # Simula un error inesperado\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_splot/5')\n+    # Verifica que el c\u00f3digo de estado es 500\n+    assert response.status_code == 500\n+    assert response.json[\"error\"] == \"Internal Server Error\"\n+    assert response.json[\"details\"] == \"Unexpected error\"\n+\n+\n+# TEST DE CNF\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+@patch('flamapy.metamodels.fm_metamodel.transformations.UVLReader')\n+@patch('flamapy.metamodels.pysat_metamodel.transformations.FmToPysat')\n+@patch('flamapy.metamodels.pysat_metamodel.transformations.DimacsWriter')\n+def test_to_cnf_success(mock_dimacs_writer, mock_fm_to_pysat, mock_uvl_reader, mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Mock de UVLReader, FmToPysat y DimacsWriter\n+    mock_uvl_reader.return_value.transform.return_value = \"mocked_feature_model\"\n+    mock_fm_to_pysat.return_value.transform.return_value = \"mocked_sat\"\n+    mock_dimacs_writer.return_value.transform.return_value = None\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_cnf/10')\n+    # Verifica que el c\u00f3digo de estado es 200\n+    assert response.status_code == 200\n+    # Verifica que el archivo se est\u00e1 devolviendo como attachment con el nombre correcto\n+    assert response.headers[\"Content-Disposition\"] == \"attachment; filename=file10.uvl_cnf.txt\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+def test_to_cnf_file_not_found(mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo no existe\n+    mock_isfile.return_value = False\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_cnf/10')\n+    # Verifica que el c\u00f3digo de estado es 404\n+    assert response.status_code == 404\n+    # Verifica el mensaje de error\n+    assert response.json[\"error\"] == \"File file10.uvl not found\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_by_id')\n+@patch('os.path.isfile')\n+def test_to_cnf_unexpected(mock_isfile, mock_get_by_id, client):\n+    # Simula que el archivo existe\n+    mock_isfile.return_value = True  # El archivo \"existe\"\n+    # Mock del HubfileService para devolver un archivo simulado\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_by_id.return_value = mock_hubfile\n+    # Simula un error inesperado al llamar al servicio\n+    mock_get_by_id.side_effect = ValueError(\"Unexpected error\")\n+    # Realiza la solicitud GET a la ruta\n+    response = client.get('/flamapy/to_cnf/10')\n+    # Verifica que el c\u00f3digo de estado es 500\n+    assert response.status_code == 500\n+    # Verifica el mensaje de error y los detalles\n+    assert response.json[\"error\"] == \"Internal Server Error\"\n+    assert response.json[\"details\"] == \"Unexpected error\""
      },
      {
        "sha": "42b7e98ff5e111604385042f0b07667ac7d1a143",
        "filename": "app/modules/hubfile/tests/test_unit.py",
        "status": "modified",
        "additions": 76,
        "deletions": 0,
        "changes": 76,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4742214bc257471750acdcf90cdf31bb1384f3da/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4742214bc257471750acdcf90cdf31bb1384f3da/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fhubfile%2Ftests%2Ftest_unit.py?ref=4742214bc257471750acdcf90cdf31bb1384f3da",
        "patch": "@@ -1,4 +1,32 @@\n import pytest\n+from unittest.mock import patch, MagicMock\n+from app.modules.hubfile.services import HubfileService\n+from flask import Flask\n+from flask_login import UserMixin\n+from flask import abort\n+import os\n+\n+\n+# Crear un usuario simulado para las pruebas\n+class MockUser(UserMixin):\n+    def __init__(self, id):\n+        self.id = id\n+\n+\n+@pytest.fixture\n+def mock_user():\n+    user = MockUser(id=1)\n+    return user\n+\n+\n+@pytest.fixture\n+def test_client_with_user(mock_user, test_client):\n+    \"\"\"\n+    Configura el cliente de prueba con un usuario autenticado.\n+    \"\"\"\n+    with test_client.session_transaction() as session:\n+        session['_user_id'] = mock_user.id\n+    yield test_client\n \n \n @pytest.fixture(scope='module')\n@@ -22,3 +50,51 @@ def test_sample_assertion(test_client):\n     \"\"\"\n     greeting = \"Hello, World!\"\n     assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\"\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.exists')\n+@patch('flask.send_from_directory')\n+def test_download_file_success(mock_send_from_directory, mock_exists, mock_get_or_404, client):\n+    mock_exists.return_value = True\n+\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_or_404.return_value = mock_hubfile\n+\n+    mock_send_from_directory.return_value = MagicMock(status_code=200, data=b\"file content\")\n+\n+    response = client.get('/file/download/10')\n+    assert response.status_code == 200\n+\n+\n+@pytest.fixture\n+def client():\n+    app = Flask(__name__)\n+    app.testing = True\n+\n+    @app.route('/file/download/<int:file_id>')\n+    def download_file(file_id):\n+        # Simula la l\u00f3gica con abort para pruebas\n+        hubfile = HubfileService.get_or_404(file_id)\n+        if not os.path.exists(hubfile.name):\n+            abort(404)\n+        return \"file content\", 200\n+    return app.test_client()\n+\n+\n+@patch('app.modules.hubfile.services.HubfileService.get_or_404')\n+@patch('os.path.exists')\n+def test_download_file_not_found(mock_exists, mock_get_or_404, client):\n+    # Simula que el archivo no existe\n+    mock_exists.return_value = False\n+\n+    # Simula el objeto de archivo\n+    mock_hubfile = MagicMock()\n+    mock_hubfile.name = \"file10.uvl\"\n+    mock_get_or_404.return_value = mock_hubfile\n+\n+    # Ejecuta el cliente de prueba en la ruta\n+    response = client.get('/file/download/10')\n+    # Valida el resultado esperado 404\n+    assert response.status_code == 404"
      },
      {
        "sha": "840b763a7289fb875622cf2b7850b8454825714e",
        "filename": "migrations/versions/001.py",
        "status": "added",
        "additions": 191,
        "deletions": 0,
        "changes": 191,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4742214bc257471750acdcf90cdf31bb1384f3da/migrations%2Fversions%2F001.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4742214bc257471750acdcf90cdf31bb1384f3da/migrations%2Fversions%2F001.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F001.py?ref=4742214bc257471750acdcf90cdf31bb1384f3da",
        "patch": "@@ -0,0 +1,191 @@\n+\"\"\"first migration\n+\n+Revision ID: 001\n+Revises: \n+Create Date: 2024-09-08 16:50:20.326640\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+\n+\n+# revision identifiers, used by Alembic.\n+revision = '001'\n+down_revision = None\n+branch_labels = None\n+depends_on = None\n+\n+\n+def upgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.create_table('doi_mapping',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('dataset_doi_old', sa.String(length=120), nullable=True),\n+    sa.Column('dataset_doi_new', sa.String(length=120), nullable=True),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('ds_metrics',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('number_of_models', sa.String(length=120), nullable=True),\n+    sa.Column('number_of_features', sa.String(length=120), nullable=True),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('fm_metrics',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('solver', sa.Text(), nullable=True),\n+    sa.Column('not_solver', sa.Text(), nullable=True),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('user',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('email', sa.String(length=256), nullable=False),\n+    sa.Column('password', sa.String(length=256), nullable=False),\n+    sa.Column('created_at', sa.DateTime(), nullable=False),\n+    sa.PrimaryKeyConstraint('id'),\n+    sa.UniqueConstraint('email')\n+    )\n+    op.create_table('webhook',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('zenodo',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('ds_meta_data',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('deposition_id', sa.Integer(), nullable=True),\n+    sa.Column('title', sa.String(length=120), nullable=False),\n+    sa.Column('description', sa.Text(), nullable=False),\n+    sa.Column('publication_type', sa.Enum('NONE', 'ANNOTATION_COLLECTION', 'BOOK', 'BOOK_SECTION', 'CONFERENCE_PAPER', 'DATA_MANAGEMENT_PLAN', 'JOURNAL_ARTICLE', 'PATENT', 'PREPRINT', 'PROJECT_DELIVERABLE', 'PROJECT_MILESTONE', 'PROPOSAL', 'REPORT', 'SOFTWARE_DOCUMENTATION', 'TAXONOMIC_TREATMENT', 'TECHNICAL_NOTE', 'THESIS', 'WORKING_PAPER', 'OTHER', name='publicationtype'), nullable=False),\n+    sa.Column('publication_doi', sa.String(length=120), nullable=True),\n+    sa.Column('dataset_doi', sa.String(length=120), nullable=True),\n+    sa.Column('tags', sa.String(length=120), nullable=True),\n+    sa.Column('ds_metrics_id', sa.Integer(), nullable=True),\n+    sa.ForeignKeyConstraint(['ds_metrics_id'], ['ds_metrics.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('fm_meta_data',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('uvl_filename', sa.String(length=120), nullable=False),\n+    sa.Column('title', sa.String(length=120), nullable=False),\n+    sa.Column('description', sa.Text(), nullable=False),\n+    sa.Column('publication_type', sa.Enum('NONE', 'ANNOTATION_COLLECTION', 'BOOK', 'BOOK_SECTION', 'CONFERENCE_PAPER', 'DATA_MANAGEMENT_PLAN', 'JOURNAL_ARTICLE', 'PATENT', 'PREPRINT', 'PROJECT_DELIVERABLE', 'PROJECT_MILESTONE', 'PROPOSAL', 'REPORT', 'SOFTWARE_DOCUMENTATION', 'TAXONOMIC_TREATMENT', 'TECHNICAL_NOTE', 'THESIS', 'WORKING_PAPER', 'OTHER', name='publicationtype'), nullable=False),\n+    sa.Column('publication_doi', sa.String(length=120), nullable=True),\n+    sa.Column('tags', sa.String(length=120), nullable=True),\n+    sa.Column('uvl_version', sa.String(length=120), nullable=True),\n+    sa.Column('fm_metrics_id', sa.Integer(), nullable=True),\n+    sa.ForeignKeyConstraint(['fm_metrics_id'], ['fm_metrics.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('user_profile',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=False),\n+    sa.Column('orcid', sa.String(length=19), nullable=True),\n+    sa.Column('affiliation', sa.String(length=100), nullable=True),\n+    sa.Column('name', sa.String(length=100), nullable=False),\n+    sa.Column('surname', sa.String(length=100), nullable=False),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id'),\n+    sa.UniqueConstraint('user_id')\n+    )\n+    op.create_table('author',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('name', sa.String(length=120), nullable=False),\n+    sa.Column('affiliation', sa.String(length=120), nullable=True),\n+    sa.Column('orcid', sa.String(length=120), nullable=True),\n+    sa.Column('ds_meta_data_id', sa.Integer(), nullable=True),\n+    sa.Column('fm_meta_data_id', sa.Integer(), nullable=True),\n+    sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+    sa.ForeignKeyConstraint(['fm_meta_data_id'], ['fm_meta_data.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('data_set',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=False),\n+    sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n+    sa.Column('created_at', sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('ds_download_record',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=True),\n+    sa.Column('dataset_id', sa.Integer(), nullable=True),\n+    sa.Column('download_date', sa.DateTime(), nullable=False),\n+    sa.Column('download_cookie', sa.String(length=36), nullable=False),\n+    sa.ForeignKeyConstraint(['dataset_id'], ['data_set.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('ds_view_record',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=True),\n+    sa.Column('dataset_id', sa.Integer(), nullable=True),\n+    sa.Column('view_date', sa.DateTime(), nullable=False),\n+    sa.Column('view_cookie', sa.String(length=36), nullable=False),\n+    sa.ForeignKeyConstraint(['dataset_id'], ['data_set.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('feature_model',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('data_set_id', sa.Integer(), nullable=False),\n+    sa.Column('fm_meta_data_id', sa.Integer(), nullable=True),\n+    sa.ForeignKeyConstraint(['data_set_id'], ['data_set.id'], ),\n+    sa.ForeignKeyConstraint(['fm_meta_data_id'], ['fm_meta_data.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('file',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('name', sa.String(length=120), nullable=False),\n+    sa.Column('checksum', sa.String(length=120), nullable=False),\n+    sa.Column('size', sa.Integer(), nullable=False),\n+    sa.Column('feature_model_id', sa.Integer(), nullable=False),\n+    sa.ForeignKeyConstraint(['feature_model_id'], ['feature_model.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('file_download_record',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=True),\n+    sa.Column('file_id', sa.Integer(), nullable=True),\n+    sa.Column('download_date', sa.DateTime(), nullable=False),\n+    sa.Column('download_cookie', sa.String(length=36), nullable=False),\n+    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('file_view_record',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=True),\n+    sa.Column('file_id', sa.Integer(), nullable=False),\n+    sa.Column('view_date', sa.DateTime(), nullable=True),\n+    sa.Column('view_cookie', sa.String(length=36), nullable=True),\n+    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    # ### end Alembic commands ###\n+\n+\n+def downgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.drop_table('file_view_record')\n+    op.drop_table('file_download_record')\n+    op.drop_table('file')\n+    op.drop_table('feature_model')\n+    op.drop_table('ds_view_record')\n+    op.drop_table('ds_download_record')\n+    op.drop_table('data_set')\n+    op.drop_table('author')\n+    op.drop_table('user_profile')\n+    op.drop_table('fm_meta_data')\n+    op.drop_table('ds_meta_data')\n+    op.drop_table('zenodo')\n+    op.drop_table('webhook')\n+    op.drop_table('user')\n+    op.drop_table('fm_metrics')\n+    op.drop_table('ds_metrics')\n+    op.drop_table('doi_mapping')\n+    # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/52",
    "id": 2198836726,
    "node_id": "PR_kwDONB39G86DD5X2",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/52",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/52.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/52.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/52",
    "number": 52,
    "state": "closed",
    "locked": false,
    "title": "7 fakenodo",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-25T16:12:37Z",
    "updated_at": "2024-12-04T13:43:48Z",
    "closed_at": "2024-11-27T17:27:55Z",
    "merged_at": null,
    "merge_commit_sha": "2e23dc41be0c65799c866b4a7904ba903b27416a",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/52/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/52/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/52/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/235cd34b9907d70cb0a091c0f0af1643b22cf070",
    "head": {
      "label": "TostaHub:7-fakenodo",
      "ref": "7-fakenodo",
      "sha": "235cd34b9907d70cb0a091c0f0af1643b22cf070",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "2e71aac6c9b7eb17c90bdc2d77c7caebae69d772",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/52"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/52"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/52"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/52/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/52/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/52/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/235cd34b9907d70cb0a091c0f0af1643b22cf070"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "57c20159d20707de998f985904b5d5391fceb8c6",
        "filename": ".moduleignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/.moduleignore",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/.moduleignore",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.moduleignore?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -1 +1 @@\n-webhook\n\\ No newline at end of file\n+webhook"
      },
      {
        "sha": "86bbe7ec8029b0e04375a49daec6e0e34ced9ab6",
        "filename": "app/modules/fakenodo/__init__.py",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2F__init__.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2F__init__.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2F__init__.py?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -0,0 +1,3 @@\n+from core.blueprints.base_blueprint import BaseBlueprint\n+\n+fakenodo_bp = BaseBlueprint('fakenodo', __name__, template_folder='templates')"
      },
      {
        "sha": "058465c87591a39d9baa9011257b0aa8cc160495",
        "filename": "app/modules/fakenodo/assets/scripts.js",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fassets%2Fscripts.js?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -0,0 +1 @@\n+console.log(\"Hi, I am a script loaded from fakenodo module\");"
      },
      {
        "sha": "59e8f8f73974717b24a8fe9500b84ebdf9e65d77",
        "filename": "app/modules/fakenodo/forms.py",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Fforms.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Fforms.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fforms.py?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -0,0 +1,6 @@\n+from flask_wtf import FlaskForm\n+from wtforms import SubmitField\n+\n+\n+class FakenodoForm(FlaskForm):\n+    submit = SubmitField('Save fakenodo')"
      },
      {
        "sha": "57b5d9166efeef47b3b5fae46af27cbc0538756e",
        "filename": "app/modules/fakenodo/models.py",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Fmodels.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fmodels.py?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -0,0 +1,11 @@\n+from app import db\n+\n+\n+class Fakenodo(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    dep_metadata = db.Column(db.JSON, nullable=False)\n+    status = db.Column(db.String(50), nullable=False, default=\"draft\")\n+    doi = db.Column(db.String(250), unique=True, nullable=True)\n+\n+    def __repr__(self):\n+        return f'Fakenodo<{self.id}>'"
      },
      {
        "sha": "a65d75d54f5d4cc326db872d899e6d1f3e537b35",
        "filename": "app/modules/fakenodo/repositories.py",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Frepositories.py?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -0,0 +1,11 @@\n+from app.modules.fakenodo.models import Fakenodo\n+from core.repositories.BaseRepository import BaseRepository\n+\n+\n+class FakenodoRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(Fakenodo)\n+\n+    def create_new_deposition(self, dep_metadata):\n+        return self.create(dep_metadata=dep_metadata)\n+"
      },
      {
        "sha": "8d776127d33b681a5ef8b1b960a9dd3353fd9666",
        "filename": "app/modules/fakenodo/routes.py",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Froutes.py?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -0,0 +1,49 @@\n+from flask import request, jsonify, send_file\n+from . import fakenodo_bp\n+import os\n+import tempfile\n+\n+\n+datasets = {}\n+dataset_counter = 1\n+\n+\n+@fakenodo_bp.route('/fakenodo/upload', methods=['POST'])\n+def upload_dataset():\n+    global dataset_counter\n+    file = request.files['file']\n+    if file:\n+        dataset_id = dataset_counter\n+        dataset_counter += 1\n+        temp_dir = tempfile.mkdtemp()\n+        file_path = os.path.join(temp_dir, file.filename)\n+        file.save(file_path)\n+        datasets[dataset_id] = {\n+            'id': dataset_id,\n+            'filename': file.filename,\n+            'file_path': file_path\n+        }\n+        return jsonify({'id': dataset_id, 'filename': file.filename}), 201\n+    return jsonify({'error': 'No file uploaded'}), 400\n+\n+\n+@fakenodo_bp.route('/fakenodo/download/<int:dataset_id>', methods=['GET'])\n+def download_dataset(dataset_id):\n+    dataset = datasets.get(dataset_id)\n+    if dataset:\n+        return send_file(dataset['file_path'], as_attachment=True, attachment_filename=dataset['filename'])\n+    return jsonify({'error': 'Dataset not found'}), 404\n+\n+\n+@fakenodo_bp.route('/fakenodo/datasets', methods=['GET'])\n+def list_datasets():\n+    return jsonify(list(datasets.values()))\n+\n+\n+@fakenodo_bp.route('/fakenodo/dataset/<int:dataset_id>', methods=['DELETE'])\n+def delete_dataset(dataset_id):\n+    dataset = datasets.pop(dataset_id, None)\n+    if dataset:\n+        os.remove(dataset['file_path'])\n+        return jsonify({'message': 'Dataset deleted'}), 200\n+    return jsonify({'error': 'Dataset not found'}), 404\n\\ No newline at end of file"
      },
      {
        "sha": "efce96ba7d7ce4bf7645ed5e77762c4a6648c077",
        "filename": "app/modules/fakenodo/seeders.py",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Fseeders.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Fseeders.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fseeders.py?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -0,0 +1,13 @@\n+# app/modules/fakenodo/seeders/fakenodo_seeder.py\n+\n+from core.seeders.BaseSeeder import BaseSeeder\n+\n+\n+class FakenodoSeeder(BaseSeeder):\n+\n+    def run(self):\n+        # Datos a insertar en la base de datos\n+        data = [\n+\n+        ]\n+        self.seed(data)"
      },
      {
        "sha": "4e5efc7fe55be575ce7a749a7a1d0e54d24eba70",
        "filename": "app/modules/fakenodo/services.py",
        "status": "added",
        "additions": 174,
        "deletions": 0,
        "changes": 174,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Fservices.py?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -0,0 +1,174 @@\n+import logging\n+import os\n+\n+from app.modules.dataset.models import DataSet\n+from app.modules.fakenodo.models import Deposition\n+from app.modules.fakenodo.repositories import DepositionRepository\n+from app.modules.featuremodel.models import FeatureModel\n+\n+from core.configuration.configuration import uploads_folder_name\n+from dotenv import load_dotenv\n+from flask_login import current_user\n+\n+\n+from core.services.BaseService import BaseService\n+\n+logger = logging.getLogger(__name__)\n+\n+load_dotenv()\n+\n+\n+class FakenodoService(BaseService):\n+\n+    def __init__(self):\n+        self.deposition_repository = DepositionRepository()\n+\n+    def create_new_deposition(self, dataset: DataSet) -> dict:\n+        \"\"\"\n+        Create a new deposition in Fakenodo.\n+\n+        Args:\n+            dataset (DataSet): The DataSet object containing the metadata of the deposition.\n+\n+        Returns:\n+            dict: The response in JSON format with the details of the created deposition.\n+        \"\"\"\n+\n+        logger.info(\"Dataset sending to Fakenodo...\")\n+        logger.info(f\"Publication type...{dataset.ds_meta_data.publication_type.value}\")\n+\n+        metadata = {\n+            \"title\": dataset.ds_meta_data.title,\n+            \"upload_type\": \"dataset\" if dataset.ds_meta_data.publication_type.value == \"none\" else \"publication\",\n+            \"publication_type\": (\n+                dataset.ds_meta_data.publication_type.value\n+                if dataset.ds_meta_data.publication_type.value != \"none\"\n+                else None\n+            ),\n+            \"description\": dataset.ds_meta_data.description,\n+            \"creators\": [\n+                {\n+                    \"name\": author.name,\n+                    **({\"affiliation\": author.affiliation} if author.affiliation else {}),\n+                    **({\"orcid\": author.orcid} if author.orcid else {}),\n+                }\n+                for author in dataset.ds_meta_data.authors\n+            ],\n+            \"keywords\": (\n+                [\"uvlhub\"] if not dataset.ds_meta_data.tags else dataset.ds_meta_data.tags.split(\", \") + [\"uvlhub\"]\n+            ),\n+            \"access_right\": \"open\",\n+            \"license\": \"CC-BY-4.0\",\n+        }\n+\n+        try:\n+            new_deposition = self.deposition_repository.create_new_deposition(dep_metadata=metadata)\n+\n+            return {\n+                \"conceptrecid\": f\"fakenodo-{new_deposition.id}\",\n+                \"id\": new_deposition.id,\n+                \"metadata\": metadata,\n+                \"message\": \"Dataset created successfully in fakenodo.\"\n+            }\n+        except Exception as e:\n+            raise Exception(f\"Failed to create local deposition: {str(e)}\")\n+\n+    def upload_file(self, dataset: DataSet, deposition_id: int, feature_model: FeatureModel, user=None) -> dict:\n+        \"\"\"\n+        Save a file to a deposition in Fakenodo.\n+\n+        Args:\n+            deposition_id (int): The ID of the deposition.\n+            feature_model (FeatureModel): The FeatureModel object representing the feature model.\n+            user (FeatureModel): The User object representing the file owner.\n+\n+        Returns:\n+            dict: The response in JSON format with the details of the uploaded file.\n+        \"\"\"\n+        uvl_filename = feature_model.fm_meta_data.uvl_filename\n+        user_id = current_user.id if user is None else user.id\n+        file_path = os.path.join(uploads_folder_name(), f\"user_{str(user_id)}\", f\"dataset_{dataset.id}/\", uvl_filename)\n+\n+        response = {\n+            \"id\": deposition_id,\n+            \"filename\": uvl_filename,\n+            \"filesize\": os.path.getsize(file_path),\n+            \"checksum\": calculate_checksum(file_path),\n+            \"message\": \"File uploaded successfully to fakenodo.\"\n+        }\n+\n+        return response\n+\n+    def publish_deposition(self, deposition_id: int) -> dict:\n+        \"\"\"\n+        Publish a deposition in Fakenodo.\n+\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+\n+        Returns:\n+            dict: The response in JSON format with the details of the published deposition.\n+        \"\"\"\n+        deposition = Deposition.query.get(deposition_id)\n+        if not deposition:\n+            raise Exception(\"Deposition not found\")\n+\n+        try:\n+            deposition.doi = f\"10.5281/fakenodo.{deposition_id}\"\n+            deposition.status = \"published\"\n+            self.deposition_repository.update(deposition)\n+\n+            response = {\n+                \"id\": deposition_id,\n+                \"status\": \"published\",\n+                \"conceptdoi\": f\"10.5281/fakenodo.{deposition_id}\",\n+                \"message\": \"Deposition published successfully in fakenodo.\"\n+            }\n+            return response\n+\n+        except Exception as e:\n+            raise Exception(f\"Failed to publish deposition: {str(e)}\")\n+\n+    def get_deposition(self, deposition_id: int) -> dict:\n+        \"\"\"\n+        Get a deposition from Fakenodo.\n+\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+\n+        Returns:\n+            dict: The response in JSON format with the details of the deposition.\n+        \"\"\"\n+        deposition = Deposition.query.get(deposition_id)\n+        if not deposition:\n+            raise Exception(\"Deposition not found\")\n+\n+        response = {\n+            \"id\": deposition.id,\n+            \"doi\": deposition.doi,\n+            \"metadata\": deposition.dep_metadata,\n+            \"status\": deposition.status,\n+            \"message\": \"Deposition retrieved successfully from fakenodo.\"\n+        }\n+        return response\n+\n+    def get_doi(self, deposition_id: int) -> str:\n+        \"\"\"\n+        Get the DOI of a deposition from Fakenodo.\n+\n+        Args:\n+            deposition_id (int): The ID of the deposition in Fakenodo.\n+\n+        Returns:\n+            str: The DOI of the deposition.\n+        \"\"\"\n+        return self.get_deposition(deposition_id).get(\"doi\")\n+\n+\n+def calculate_checksum(file_path):\n+    import hashlib\n+    hash_md5 = hashlib.md5()\n+    with open(file_path, \"rb\") as f:\n+        for chunk in iter(lambda: f.read(4096), b\"\"):\n+            hash_md5.update(chunk)\n+    return hash_md5.hexdigest()\n\\ No newline at end of file"
      },
      {
        "sha": "bb533486c0a1f1149ee71ba5057cae880bf34e1c",
        "filename": "app/modules/fakenodo/templates/fakenodo/index.html",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftemplates%2Ffakenodo%2Findex.html?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -0,0 +1,11 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}View fakenodo{% endblock %}\n+\n+{% block content %}\n+\n+{% endblock %}\n+\n+{% block scripts %}\n+    <script src=\"{{ url_for('fakenodo.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "app/modules/fakenodo/tests/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2F__init__.py?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070"
      },
      {
        "sha": "355e5809e151db3a7660d151233fffaae8fc6986",
        "filename": "app/modules/fakenodo/tests/locustfile.py",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Flocustfile.py?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -0,0 +1,21 @@\n+from locust import HttpUser, TaskSet, task\n+from core.environment.host import get_host_for_locust_testing\n+\n+\n+class FakenodoBehavior(TaskSet):\n+    def on_start(self):\n+        self.index()\n+\n+    @task\n+    def index(self):\n+        response = self.client.get(\"/fakenodo\")\n+\n+        if response.status_code != 200:\n+            print(f\"Fakenodo index failed: {response.status_code}\")\n+\n+\n+class FakenodoUser(HttpUser):\n+    tasks = [FakenodoBehavior]\n+    min_wait = 5000\n+    max_wait = 9000\n+    host = get_host_for_locust_testing()"
      },
      {
        "sha": "a33f0bb967501891fd46ff885dc25d13d985454f",
        "filename": "app/modules/fakenodo/tests/test_selenium.py",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_selenium.py?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -0,0 +1,35 @@\n+from selenium.common.exceptions import NoSuchElementException\n+import time\n+\n+from core.environment.host import get_host_for_selenium_testing\n+from core.selenium.common import initialize_driver, close_driver\n+\n+\n+def test_fakenodo_index():\n+\n+    driver = initialize_driver()\n+\n+    try:\n+        host = get_host_for_selenium_testing()\n+\n+        # Open the index page\n+        driver.get(f'{host}/fakenodo')\n+\n+        # Wait a little while to make sure the page has loaded completely\n+        time.sleep(4)\n+\n+        try:\n+\n+            pass\n+\n+        except NoSuchElementException:\n+            raise AssertionError('Test failed!')\n+\n+    finally:\n+\n+        # Close the browser\n+        close_driver(driver)\n+\n+\n+# Call the test function\n+test_fakenodo_index()"
      },
      {
        "sha": "950421eb7b4ee15f00b45f83730c55dd2dda9336",
        "filename": "app/modules/fakenodo/tests/test_unit.py",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Ffakenodo%2Ftests%2Ftest_unit.py?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -0,0 +1,24 @@\n+import pytest\n+\n+\n+@pytest.fixture(scope='module')\n+def test_client(test_client):\n+    \"\"\"\n+    Extends the test_client fixture to add additional specific data for module testing.\n+    \"\"\"\n+    with test_client.application.app_context():\n+        # Add HERE new elements to the database that you want to exist in the test context.\n+        # DO NOT FORGET to use db.session.add(<element>) and db.session.commit() to save the data.\n+        pass\n+\n+    yield test_client\n+\n+\n+def test_sample_assertion(test_client):\n+    \"\"\"\n+    Sample test to verify that the test framework and environment are working correctly.\n+    It does not communicate with the Flask application; it only performs a simple assertion to\n+    confirm that the tests in this module can be executed.\n+    \"\"\"\n+    greeting = \"Hello, World!\"\n+    assert greeting == \"Hello, World!\", \"The greeting does not coincide with 'Hello, World!'\""
      },
      {
        "sha": "147aa0d31fd9026b79737cf3ac30b34a2dbfffd7",
        "filename": "core/configuration/configuration.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/core%2Fconfiguration%2Fconfiguration.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/core%2Fconfiguration%2Fconfiguration.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/core%2Fconfiguration%2Fconfiguration.py?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -4,6 +4,9 @@\n load_dotenv()\n \n \n+USE_FAKENODE = True\n+\n+\n def uploads_folder_name():\n     return os.getenv('UPLOADS_DIR', \"uploads\")\n "
      },
      {
        "sha": "7212978273bc566c7eecb0794bdfcfd478058ad5",
        "filename": "migrations/versions/24dbfd49dec3_create_fakenodo_table.py",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/235cd34b9907d70cb0a091c0f0af1643b22cf070/migrations%2Fversions%2F24dbfd49dec3_create_fakenodo_table.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/235cd34b9907d70cb0a091c0f0af1643b22cf070/migrations%2Fversions%2F24dbfd49dec3_create_fakenodo_table.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F24dbfd49dec3_create_fakenodo_table.py?ref=235cd34b9907d70cb0a091c0f0af1643b22cf070",
        "patch": "@@ -0,0 +1,37 @@\n+\"\"\"Create fakenodo table\n+\n+Revision ID: 24dbfd49dec3\n+Revises: 001\n+Create Date: 2024-11-13 12:25:27.583555\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+\n+\n+# revision identifiers, used by Alembic.\n+revision = '24dbfd49dec3'\n+down_revision = '001'\n+branch_labels = None\n+depends_on = None\n+\n+\n+def upgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.create_table(\n+        'deposition',\n+        sa.Column('id', sa.Integer(), nullable=False),\n+        sa.Column('dep_metadata', sa.JSON(), nullable=False),\n+        sa.Column('status', sa.String(length=50), nullable=False),\n+        sa.Column('doi', sa.String(length=250), nullable=True),\n+        sa.PrimaryKeyConstraint('id'),\n+        sa.UniqueConstraint('doi')\n+    )\n+\n+    # ### end Alembic commands ###\n+\n+\n+def downgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.drop_table('depositions')\n+    # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/49",
    "id": 2198171866,
    "node_id": "PR_kwDONB39G86DBXDa",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/49",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/49.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/49.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/49",
    "number": 49,
    "state": "closed",
    "locked": false,
    "title": "fix: Delete migration",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "This fixes the deploy crash on develop",
    "created_at": "2024-11-25T11:16:17Z",
    "updated_at": "2024-11-25T11:23:54Z",
    "closed_at": "2024-11-25T11:23:51Z",
    "merged_at": "2024-11-25T11:23:51Z",
    "merge_commit_sha": "dba1d72868982e19cd1edcf0bbc2e9f870a040e3",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/49/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/49/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/49/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d1a6c466c42ff54811caa726e1c744c4ba0220a0",
    "head": {
      "label": "TostaHub:43-develop-server-doesnt-deploy",
      "ref": "43-develop-server-doesnt-deploy",
      "sha": "d1a6c466c42ff54811caa726e1c744c4ba0220a0",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "d424a9f85d035c5d951e8c5e2688a2fccc6133fd",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/49"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/49"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/49"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/49/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/49/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/49/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d1a6c466c42ff54811caa726e1c744c4ba0220a0"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "92cd836ca2e0107780723d8d6a5d2bd1c7050f8c",
        "filename": "migrations/versions/1494406ec4a6_.py",
        "status": "removed",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d424a9f85d035c5d951e8c5e2688a2fccc6133fd/migrations%2Fversions%2F1494406ec4a6_.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d424a9f85d035c5d951e8c5e2688a2fccc6133fd/migrations%2Fversions%2F1494406ec4a6_.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F1494406ec4a6_.py?ref=d424a9f85d035c5d951e8c5e2688a2fccc6133fd",
        "patch": "@@ -1,55 +0,0 @@\n-\"\"\"empty message\n-\n-Revision ID: 1494406ec4a6\n-Revises: 001\n-Create Date: 2024-11-21 17:49:45.388810\n-\n-\"\"\"\n-from alembic import op\n-import sqlalchemy as sa\n-from sqlalchemy.dialects import mysql\n-\n-# revision identifiers, used by Alembic.\n-revision = '1494406ec4a6'\n-down_revision = '001'\n-branch_labels = None\n-depends_on = None\n-\n-\n-def upgrade():\n-    # ### commands auto generated by Alembic - please adjust! ###\n-    op.create_table('ds_rating',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('user_id', sa.Integer(), nullable=False),\n-    sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n-    sa.Column('rating', sa.Float(), nullable=False),\n-    sa.Column('rated_date', sa.DateTime(), nullable=False),\n-    sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n-    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.drop_table('notepad')\n-    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n-        batch_op.add_column(sa.Column('rating', sa.Float(), nullable=True))\n-\n-    # ### end Alembic commands ###\n-\n-\n-def downgrade():\n-    # ### commands auto generated by Alembic - please adjust! ###\n-    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n-        batch_op.drop_column('rating')\n-\n-    op.create_table('notepad',\n-    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),\n-    sa.Column('title', mysql.VARCHAR(length=256), nullable=False),\n-    sa.Column('body', mysql.TEXT(), nullable=False),\n-    sa.Column('user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),\n-    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='notepad_ibfk_1'),\n-    sa.PrimaryKeyConstraint('id'),\n-    mysql_collate='utf8mb4_general_ci',\n-    mysql_default_charset='utf8mb4',\n-    mysql_engine='InnoDB'\n-    )\n-    op.drop_table('ds_rating')\n-    # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/48",
    "id": 2198120849,
    "node_id": "PR_kwDONB39G86DBKmR",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/48",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/48.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/48.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/48",
    "number": 48,
    "state": "closed",
    "locked": false,
    "title": "fix: Fixed rate",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-25T10:55:17Z",
    "updated_at": "2024-11-25T16:19:13Z",
    "closed_at": "2024-11-25T16:19:13Z",
    "merged_at": "2024-11-25T16:19:13Z",
    "merge_commit_sha": "8261f7e4c7db20b5ab23b5f1fc5fa91995db1d62",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/48/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/48/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/48/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/31a7027943a2b3ae451185231dcdd330e4997ad2",
    "head": {
      "label": "TostaHub:rateDatasets",
      "ref": "rateDatasets",
      "sha": "31a7027943a2b3ae451185231dcdd330e4997ad2",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "d424a9f85d035c5d951e8c5e2688a2fccc6133fd",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/48"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/48"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/48"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/48/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/48/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/48/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/31a7027943a2b3ae451185231dcdd330e4997ad2"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "baa134356d82acf549bb864828fb4c571f062f9e",
        "filename": "app/modules/dataset/repositories.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/31a7027943a2b3ae451185231dcdd330e4997ad2/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/31a7027943a2b3ae451185231dcdd330e4997ad2/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=31a7027943a2b3ae451185231dcdd330e4997ad2",
        "patch": "@@ -132,8 +132,9 @@ def get_user_rating(self, ds_meta_data_id: int, user_id: int) -> Optional[DSRati\n         return self.model.query.filter(DSRating.ds_meta_data_id == ds_meta_data_id, DSRating.user_id == user_id).first()\n \n     def get_average_rating(self, ds_meta_data_id: int) -> float:\n-        average = self.model.query.filter(\n-            (DSRating.ds_meta_data_id == ds_meta_data_id).with_entities(func.avg(DSRating.rating)).scalar())\n+\n+        average = self.model.query.with_entities(func.avg(DSRating.rating)).filter(\n+            DSRating.ds_meta_data_id == ds_meta_data_id).scalar()\n         return average if average else 0.0\n \n     def count_ratings(self, ds_meta_data_id: int) -> int:"
      },
      {
        "sha": "0fc48648f150604e0a02775a39af149880d9ee99",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/31a7027943a2b3ae451185231dcdd330e4997ad2/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/31a7027943a2b3ae451185231dcdd330e4997ad2/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=31a7027943a2b3ae451185231dcdd330e4997ad2",
        "patch": "@@ -30,7 +30,8 @@\n     DSMetaDataService,\n     DSViewRecordService,\n     DataSetService,\n-    DOIMappingService\n+    DOIMappingService,\n+    DSRatingService\n )\n from app.modules.zenodo.services import ZenodoService\n \n@@ -43,6 +44,7 @@\n zenodo_service = ZenodoService()\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n+ds_rating_service = DSRatingService()\n \n \n @dataset_bp.route(\"/dataset/upload\", methods=[\"GET\", \"POST\"])\n@@ -287,3 +289,19 @@ def get_unsynchronized_dataset(dataset_id):\n         abort(404)\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+\n+\n+@dataset_bp.route(\"/datasets/<int:dataset_id>/rate\", methods=[\"POST\"])\n+@login_required\n+def rate_dataset(dataset_id):\n+    user_id = current_user.id\n+    rating_value = request.json.get('rating')\n+    rating = ds_rating_service.add_or_update_rating(dataset_id, user_id, rating_value)\n+    return jsonify({'message': 'Rating added', 'rating': rating.to_dict()}), 200\n+\n+\n+@dataset_bp.route('/datasets/<int:dataset_id>/average-rating', methods=['GET'])\n+@login_required\n+def get_dataset_average_rating(dataset_id):\n+    average_rating = ds_rating_service.get_dataset_average_rating(dataset_id)\n+    return jsonify({'average_rating': average_rating}), 200"
      },
      {
        "sha": "fbbedbfef73e456f9c0a8bf982c2bdeed66570d1",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 82,
        "deletions": 10,
        "changes": 92,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/31a7027943a2b3ae451185231dcdd330e4997ad2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/31a7027943a2b3ae451185231dcdd330e4997ad2/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=31a7027943a2b3ae451185231dcdd330e4997ad2",
        "patch": "@@ -63,13 +63,8 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                             Uploaded by\n                         </span>\n                     </div>\n-                    <!-- #region div class=\"col-md-8 col-12\">\n-                        <a href=\"#\">{{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}</a>\n-                    </div>-->\n                     <div class=\"col-md-8 col-12\">\n-                        <a href=\"/dataset/user_id/{{ dataset.user.id }}\">\n-                            {{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}\n-                        </a>\n+                        <a href=\"#\">{{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}</a>\n                     </div>\n \n                 </div>\n@@ -164,7 +159,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n \n             {% if dataset.ds_meta_data.dataset_doi %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; justify-content: space-between; gap: 50px;\">\n \n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n@@ -183,8 +178,22 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n                 </div>\n-                \n-            </div>\n+                <div style=\"display: flex; flex-direction: column;\">\n+                    <div style=\"margin-top: 0px; flex-direction: column;\">\n+                        <div style=\"display: inline-block; cursor: pointer; color: #ddd;\" id=\"star-rating-{{ dataset.id }}\">\n+                            {% for i in range(1, 6) %}\n+                                <span data-value=\"{{ i }}\" style=\"font-size: 1.5rem;\">\u2606</span>\n+                            {% endfor %}\n+                        </div>\n+                        <button onclick=\"submitRating('{{ dataset.id }}')\" style=\"display: inline-block; margin-left: 10px; font-size: 0.9rem;\">\n+                            Rate\n+                        </button>\n+                        </div>\n+                        <div>\n+                            Average Rating: <span id=\"average-rating-{{ dataset.id }}\">0</span>/5\n+                        </div>\n+                    </div>\n+                </div>\n             {% endif %}\n \n         </div>\n@@ -497,6 +506,69 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n             console.error('Failed to copy text: ', err);\n         });\n     }\n+\n+\n+    // Variables globales para almacenar las calificaciones seleccionadas\n+    const selectedRatings = {};\n+\n+    // Definir submitRating en el \u00e1mbito global\n+    function submitRating(datasetId) {\n+        const ratingValue = selectedRatings[datasetId]; // Obtiene la calificaci\u00f3n seleccionada del dataset\n+\n+        if (ratingValue > 0) { // Verifica que haya una calificaci\u00f3n seleccionada\n+            fetch(`/datasets/${datasetId}/rate`, {\n+                method: 'POST',\n+                headers: {\n+                    'Content-Type': 'application/json'\n+                },\n+                body: JSON.stringify({ rating: ratingValue })\n+            })\n+            .then(response => response.json())\n+            .then(data => {\n+                console.log('Rating submitted:', data);\n+                updateAverageRating(datasetId); // Actualiza el promedio de calificaci\u00f3n despu\u00e9s de enviar\n+            })\n+            .catch(error => console.error('Error submitting rating:', error));\n+        } else {\n+            alert('Please select a rating before submitting.');\n+        }\n+    }\n+\n+    // Definir updateAverageRating en el \u00e1mbito global\n+    function updateAverageRating(datasetId) {\n+        fetch(`/datasets/${datasetId}/average-rating`)\n+        .then(response => response.json())\n+        .then(data => {\n+            document.getElementById('average-rating-' + datasetId).innerText = data.average_rating.toFixed(1);\n+        })\n+        .catch(error => console.error('Error fetching average rating:', error));\n+    }\n+\n+    // Escuchar el evento DOMContentLoaded\n+    document.addEventListener('DOMContentLoaded', function () {\n+        const datasetId = {{ dataset.id }};\n+        const starRatingContainer = document.getElementById('star-rating-' + datasetId);\n+\n+        // Agregar evento a cada estrella para seleccionar la calificaci\u00f3n\n+        starRatingContainer.querySelectorAll('span').forEach(star => {\n+            star.addEventListener('click', function () {\n+                const ratingValue = this.getAttribute('data-value'); // Obtiene el valor de la estrella seleccionada\n+                selectedRatings[datasetId] = ratingValue; // Almacena la calificaci\u00f3n seleccionada en la variable global\n+                highlightStars(starRatingContainer, ratingValue); // Resaltar estrellas\n+            });\n+        });\n+\n+        // Actualizar el promedio de calificaci\u00f3n inicial\n+        updateAverageRating(datasetId);\n+\n+        // Funci\u00f3n para resaltar las estrellas seg\u00fan la calificaci\u00f3n seleccionada\n+        function highlightStars(container, rating) {\n+            container.querySelectorAll('span').forEach(star => {\n+                const starValue = star.getAttribute('data-value');\n+                star.style.color = starValue <= rating ? '#FFD700' : '#ddd'; // Cambia el color de la estrella\n+            });\n+        }\n+    });\n </script>\n \n-{% endblock %}\n+{% endblock %}\n\\ No newline at end of file"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/47",
    "id": 2197007317,
    "node_id": "PR_kwDONB39G86C86vV",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/47",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/47.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/47.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/47",
    "number": 47,
    "state": "closed",
    "locked": false,
    "title": "feat: Add filter by valid uvl model and by numbers of configurations",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-24T22:22:46Z",
    "updated_at": "2024-11-27T17:59:55Z",
    "closed_at": "2024-11-25T11:58:02Z",
    "merged_at": "2024-11-25T11:58:02Z",
    "merge_commit_sha": "2e71aac6c9b7eb17c90bdc2d77c7caebae69d772",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/47/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/47/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/47/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/6f60fb4322011d2e377565896f2533731f50230e",
    "head": {
      "label": "TostaHub:advanced-filtering",
      "ref": "advanced-filtering",
      "sha": "6f60fb4322011d2e377565896f2533731f50230e",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "dba1d72868982e19cd1edcf0bbc2e9f870a040e3",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/47"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/47"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/47"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/47/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/47/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/47/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/6f60fb4322011d2e377565896f2533731f50230e"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "5cbb0cd3c2303b734219e777cb48ed528241f8ad",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 44,
        "deletions": 10,
        "changes": 54,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/6f60fb4322011d2e377565896f2533731f50230e/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/6f60fb4322011d2e377565896f2533731f50230e/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=6f60fb4322011d2e377565896f2533731f50230e",
        "patch": "@@ -5,6 +5,7 @@ document.addEventListener('DOMContentLoaded', () => {\n function send_query() {\n     setInitialNumUvlFilterMaxMin()\n     setInitialDatesMaxMin()\n+    setInitialNumConfigurationsFilterMaxMin()\n \n     console.log(\"send query...\")\n \n@@ -26,7 +27,12 @@ function send_query() {\n             const minUvl = document.querySelector('#min_uvl');\n             const maxUvl = document.querySelector('#max_uvl');\n             \n-            setNumUvlFilterMaxMin(filter, minUvl, maxUvl);\n+            setNumFilterMaxMin(filter, minUvl, maxUvl);\n+\n+            const minNumConfg = document.querySelector('#min_num_configurations');\n+            const maxNumConfg = document.querySelector('#max_num_configurations');\n+            \n+            setNumFilterMaxMin(filter, minNumConfg, maxNumConfg);\n \n             const searchCriteria = {\n                 csrf_token: csrfToken,\n@@ -36,6 +42,9 @@ function send_query() {\n                 end_date: endDate.value,\n                 min_uvl: minUvl.value,\n                 max_uvl: maxUvl.value,\n+                by_valid_uvls: document.querySelector('#by_valid_uvls').value,\n+                min_num_configurations: minNumConfg.value,\n+                max_num_configurations: maxNumConfg.value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n             };\n \n@@ -223,20 +232,35 @@ function setInitialNumUvlFilterMaxMin() {\n     }\n }\n \n-function setNumUvlFilterMaxMin(filter, minUvl, maxUvl) {\n-    if (filter.id === minUvl.id) {\n-        const num = parseInt(minUvl.value);\n+function setInitialNumConfigurationsFilterMaxMin() {\n+    const minConf = document.querySelector('#min_num_configurations');\n+    const maxConf = document.querySelector('#max_num_configurations');\n+\n+    const numMin = parseInt(minConf.value);\n+    if (!isNaN(numMin)) {\n+        maxConf.min = numMin\n+    }\n+\n+    const numMax = parseInt(maxConf.value);\n+    if (!isNaN(numMax)) {\n+        minConf.max = numMax\n+    }\n+}\n+\n+function setNumFilterMaxMin(filter, min, max) {\n+    if (filter.id === min.id) {\n+        const num = parseInt(min.value);\n         if (isNaN(num)) {\n-            maxUvl.min = 0;\n+            max.min = 0;\n         } else {\n-            maxUvl.min = num;\n+            max.min = num;\n         }\n-    } else if (filter.id === maxUvl.id) {\n-        const num = parseInt(maxUvl.value);\n+    } else if (filter.id === max.id) {\n+        const num = parseInt(max.value);\n         if (isNaN(num)) {\n-            minUvl.max = \"\"; // We suppose that more than this value is not feasible\n+            min.max = \"\";\n         } else {\n-            minUvl.max = num;\n+            min.max = num;\n         }\n     } \n }\n@@ -279,6 +303,9 @@ function clearFilters() {\n     publicationTypeSelect.value = \"any\"; // replace \"any\" with whatever your default value is\n     // publicationTypeSelect.dispatchEvent(new Event('input', {bubbles: true}));\n \n+    let validUvlCheckbox = document.querySelector('#by_valid_uvls');\n+    validUvlCheckbox.checked = false; \n+\n     // Reset the dates to none\n     let startDateInput = document.querySelector('#start_date');\n     startDateInput.value = \"\";\n@@ -293,6 +320,13 @@ function clearFilters() {\n     let maxUvlInput = document.querySelector('#max_uvl');\n     maxUvlInput.value = \"\";\n     \n+    // Reset the number of configurations filters\n+    let maxConfigurationsInput = document.querySelector('#max_num_configurations');\n+    maxConfigurationsInput.value = \"\";\n+\n+    let minConfigurationsInput = document.querySelector('#min_num_configurations');\n+    minConfigurationsInput.value = \"\";\n+\n     // Reset the sorting option\n     let sortingOptions = document.querySelectorAll('[name=\"sorting\"]');\n     sortingOptions.forEach(option => {"
      },
      {
        "sha": "35b45a02404d35b1dd93bbf090a77c8749f020c0",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 38,
        "deletions": 1,
        "changes": 39,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/6f60fb4322011d2e377565896f2533731f50230e/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/6f60fb4322011d2e377565896f2533731f50230e/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=6f60fb4322011d2e377565896f2533731f50230e",
        "patch": "@@ -4,6 +4,7 @@\n from app.modules.dataset.models import Author, DSMetaData, DataSet, PublicationType\n from app.modules.featuremodel.models import FeatureModel\n from app.modules.hubfile.models import Hubfile\n+from app.modules.flamapy.routes import check_uvl, get_num_configurations\n from core.repositories.BaseRepository import BaseRepository\n from datetime import datetime\n \n@@ -20,7 +21,8 @@ def __init__(self):\n         super().__init__(DataSet)\n \n     def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n-               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", **kwargs):\n+               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\",\n+               by_valid_uvls=\"\", min_num_configurations=\"\", max_num_configurations=\"\", **kwargs):\n \n         # Crear un alias para `ds_meta_data` para evitar conflictos de alias.\n         ds_meta_data_alias = aliased(DSMetaData)\n@@ -113,4 +115,39 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         if max_size_filter is not None:\n             results = [ds for ds in results if ds.get_file_total_size() <= max_size_filter]\n \n+        if by_valid_uvls == \"on\":\n+            results = [\n+                ds for ds in results\n+                if any(\n+                    any(\n+                        check_uvl(file.id)[1] == 200\n+                        for file in fm.files\n+                    )\n+                    for fm in ds.feature_models\n+                )\n+            ]\n+\n+        if min_num_configurations.isdigit() or max_num_configurations.isdigit():\n+            results = [\n+                ds for ds in results\n+                if all(\n+                    all(\n+                        num_configurations_between(file.id, min_num_configurations, max_num_configurations)\n+                        for file in fm.files\n+                    )\n+                    for fm in ds.feature_models\n+                )\n+            ]\n+\n         return results\n+\n+\n+def num_configurations_between(file_id, min_num_configurations, max_num_configurations):\n+    result, status_code = get_num_configurations(file_id)\n+\n+    if status_code == 200:\n+        num = int(result.json[\"result\"])\n+        return (min_num_configurations.isdigit() and num >= int(min_num_configurations)\n+                and max_num_configurations.isdigit() and num <= int(max_num_configurations))\n+\n+    return True"
      },
      {
        "sha": "5122c640cd404380d3d3793e09c0ff14fc91339d",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/6f60fb4322011d2e377565896f2533731f50230e/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/6f60fb4322011d2e377565896f2533731f50230e/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=6f60fb4322011d2e377565896f2533731f50230e",
        "patch": "@@ -6,6 +6,9 @@ def __init__(self):\n         self.repository = ExploreRepository()\n \n     def filter(self, query: str, sorting=\"newest\", publication_type=\"any\",\n-               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", **kwargs):\n+               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", by_valid_uvls=\"\",\n+               min_num_configurations=\"\", max_num_configurations=\"\", **kwargs):\n+\n         return self.repository.filter(query, sorting, publication_type, start_date,\n-                                      end_date, min_uvl, max_uvl, **kwargs)\n+                                      end_date, min_uvl, max_uvl, by_valid_uvls, min_num_configurations,\n+                                      max_num_configurations, **kwargs)"
      },
      {
        "sha": "5b1e2882731f8d2f7f0d93fe7eeaffe24a381261",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/6f60fb4322011d2e377565896f2533731f50230e/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/6f60fb4322011d2e377565896f2533731f50230e/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=6f60fb4322011d2e377565896f2533731f50230e",
        "patch": "@@ -86,6 +86,13 @@ <h3 class=\"h3 mb-3\">\n \n                         </div>\n \n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"by_valid_uvls\">Filter by valid uvl models: </label>\n+                                <input type=\"checkbox\" name=\"by_valid_uvls\" id=\"by_valid_uvls\">\n+                            </div>\n+                        </div>\n+\n                         <p style=\"margin-bottom: 0.2rem;\">Filter by date created at:</p>\n \n                         <div class=\"col-lg-6\">\n@@ -118,6 +125,22 @@ <h3 class=\"h3 mb-3\">\n                             </div>\n                         </div>\n \n+                        <p style=\"margin-bottom: 0.2rem;\">Filter number of configurations:</p>\n+\n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"min_num_configurations\">Minimum</label>\n+                                <input class=\"form-control\" type=\"number\" name=\"min_num_configurations\" id=\"min_num_configurations\" min=\"0\" required=\"\">\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"max_num_configurations\">Maximum</label>\n+                                <input class=\"form-control\" type=\"number\" name=\"max_num_configurations\" id=\"max_num_configurations\" min=\"0\" required=\"\">                                   \n+                            </div>\n+                        </div>\n+\n                     </div>\n \n                     <div class=\"row\">"
      },
      {
        "sha": "f73c7d15317242b3d2bf2a3ac0ec708c8f1c44f0",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/6f60fb4322011d2e377565896f2533731f50230e/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/6f60fb4322011d2e377565896f2533731f50230e/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=6f60fb4322011d2e377565896f2533731f50230e",
        "patch": "@@ -4,6 +4,8 @@\n from app.modules.flamapy import flamapy_bp\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n+from flamapy.core.discover import DiscoverMetamodels\n+from flamapy.core.exceptions import OperationNotFound, ConfigurationNotFound\n import tempfile\n import os\n \n@@ -150,3 +152,29 @@ def to_cnf(file_id):\n     except Exception as e:\n         # Manejar cualquier otro error inesperado\n         return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n+\n+\n+def get_num_configurations(file_id):\n+    try:\n+        hubfile = HubfileService().get_or_404(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+        # Agrega un mensaje de depuraci\u00f3n\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        # Initiallize the dicover metamodel\n+        dm = DiscoverMetamodels()\n+        result = dm.use_operation_from_file(\"PySATConfigurationsNumber\", file_path)\n+\n+        return jsonify({\"result\": result}), 200\n+\n+    except NotFound as e:\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except OperationNotFound as e:\n+        return jsonify({\"error\": str(e).replace(\"Operation not found: \", \"\")}), 500\n+    except ConfigurationNotFound as e:\n+        return jsonify({\"error\": str(e).replace(\"Configuration not found: \", \"\")}), 500\n+    except Exception as e:\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500"
      },
      {
        "sha": "92cd836ca2e0107780723d8d6a5d2bd1c7050f8c",
        "filename": "migrations/versions/1494406ec4a6_.py",
        "status": "removed",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/migrations%2Fversions%2F1494406ec4a6_.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/migrations%2Fversions%2F1494406ec4a6_.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F1494406ec4a6_.py?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -1,55 +0,0 @@\n-\"\"\"empty message\n-\n-Revision ID: 1494406ec4a6\n-Revises: 001\n-Create Date: 2024-11-21 17:49:45.388810\n-\n-\"\"\"\n-from alembic import op\n-import sqlalchemy as sa\n-from sqlalchemy.dialects import mysql\n-\n-# revision identifiers, used by Alembic.\n-revision = '1494406ec4a6'\n-down_revision = '001'\n-branch_labels = None\n-depends_on = None\n-\n-\n-def upgrade():\n-    # ### commands auto generated by Alembic - please adjust! ###\n-    op.create_table('ds_rating',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('user_id', sa.Integer(), nullable=False),\n-    sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n-    sa.Column('rating', sa.Float(), nullable=False),\n-    sa.Column('rated_date', sa.DateTime(), nullable=False),\n-    sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n-    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.drop_table('notepad')\n-    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n-        batch_op.add_column(sa.Column('rating', sa.Float(), nullable=True))\n-\n-    # ### end Alembic commands ###\n-\n-\n-def downgrade():\n-    # ### commands auto generated by Alembic - please adjust! ###\n-    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n-        batch_op.drop_column('rating')\n-\n-    op.create_table('notepad',\n-    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),\n-    sa.Column('title', mysql.VARCHAR(length=256), nullable=False),\n-    sa.Column('body', mysql.TEXT(), nullable=False),\n-    sa.Column('user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),\n-    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='notepad_ibfk_1'),\n-    sa.PrimaryKeyConstraint('id'),\n-    mysql_collate='utf8mb4_general_ci',\n-    mysql_default_charset='utf8mb4',\n-    mysql_engine='InnoDB'\n-    )\n-    op.drop_table('ds_rating')\n-    # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/46",
    "id": 2196999471,
    "node_id": "PR_kwDONB39G86C840v",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/46",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/46.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/46.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/46",
    "number": 46,
    "state": "closed",
    "locked": false,
    "title": "fix: Change render flow to deploy on push",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-24T22:04:09Z",
    "updated_at": "2024-11-24T22:07:04Z",
    "closed_at": "2024-11-24T22:07:04Z",
    "merged_at": "2024-11-24T22:07:04Z",
    "merge_commit_sha": "d424a9f85d035c5d951e8c5e2688a2fccc6133fd",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/46/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/46/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/46/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/4a1a6d67240e32da2ffe0ef588e7f405f6a18472",
    "head": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "4a1a6d67240e32da2ffe0ef588e7f405f6a18472",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "7f89bb09c2a8b173e9132d41107df4e0b01e343a",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/46"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/46"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/46"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/46/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/46/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/46/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/4a1a6d67240e32da2ffe0ef588e7f405f6a18472"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "8dad024da8ba1c0ae83e43701a08c2d2d91a1740",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4a1a6d67240e32da2ffe0ef588e7f405f6a18472/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4a1a6d67240e32da2ffe0ef588e7f405f6a18472/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=4a1a6d67240e32da2ffe0ef588e7f405f6a18472",
        "patch": "@@ -2,9 +2,7 @@ name: Deploy to Render\n \n on:\n   push:\n-    tags:\n-    - 'v*' \n-  pull_request:\n+    branches: [main, develop]\n \n jobs:\n \n@@ -58,21 +56,21 @@ jobs:\n         uses: actions/checkout@v4\n \n       - name: Deploy to Render (Develop)\n-        if: github.event.pull_request.base.ref == 'develop'\n+        if: github.ref_name == 'develop'\n         env:\n           deploy_url: ${{ secrets.RENDER_DEPLOY_DEVELOP_HOOK_URL }}\n         run: |\n           curl \"$deploy_url\"\n   \n       - name: Deploy to Render (Main)\n-        if: github.event.pull_request.base.ref == 'main'\n+        if: github.ref_name == 'main'\n         env:\n           deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n         run: |\n           curl \"$deploy_url\"\n   \n       - name: Monitor Develop Deployment Status\n-        if: github.event.pull_request.base.ref == 'develop'\n+        if: github.ref_name == 'develop'\n         env:\n           API_KEY: ${{ secrets.RENDER_DEVELOP_API_KEY }}\n           SERVICE_ID: ${{ secrets.RENDER_DEVELOP_SERVICE_ID }}\n@@ -96,7 +94,7 @@ jobs:\n           echo \"Deployment is live!\"\n   \n       - name: Monitor Main Deployment Status\n-        if: github.event.pull_request.base.ref == 'main'\n+        if: github.ref_name == 'main'\n         env:\n           API_KEY: ${{ secrets.RENDER_MAIN_API_KEY }}\n           SERVICE_ID: ${{ secrets.RENDER_MAIN_SERVICE_ID }}"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/45",
    "id": 2196995263,
    "node_id": "PR_kwDONB39G86C83y_",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/45",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/45.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/45.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/45",
    "number": 45,
    "state": "closed",
    "locked": false,
    "title": "fix: Change render flow to deploy on push",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-24T21:54:05Z",
    "updated_at": "2024-11-24T22:02:32Z",
    "closed_at": "2024-11-24T22:02:21Z",
    "merged_at": "2024-11-24T22:02:21Z",
    "merge_commit_sha": "4a1a6d67240e32da2ffe0ef588e7f405f6a18472",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/45/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/45/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/45/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/db75b75a1a4deecfdb09d769cb28c128d8fe98d3",
    "head": {
      "label": "TostaHub:Ahydul-patch-2",
      "ref": "Ahydul-patch-2",
      "sha": "db75b75a1a4deecfdb09d769cb28c128d8fe98d3",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "7a54bb6eb19daaa98e432426fff9389ce047627d",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/45"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/45"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/45"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/45/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/45/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/45/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/db75b75a1a4deecfdb09d769cb28c128d8fe98d3"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "8dad024da8ba1c0ae83e43701a08c2d2d91a1740",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/db75b75a1a4deecfdb09d769cb28c128d8fe98d3/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/db75b75a1a4deecfdb09d769cb28c128d8fe98d3/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=db75b75a1a4deecfdb09d769cb28c128d8fe98d3",
        "patch": "@@ -2,9 +2,7 @@ name: Deploy to Render\n \n on:\n   push:\n-    tags:\n-    - 'v*' \n-  pull_request:\n+    branches: [main, develop]\n \n jobs:\n \n@@ -58,21 +56,21 @@ jobs:\n         uses: actions/checkout@v4\n \n       - name: Deploy to Render (Develop)\n-        if: github.event.pull_request.base.ref == 'develop'\n+        if: github.ref_name == 'develop'\n         env:\n           deploy_url: ${{ secrets.RENDER_DEPLOY_DEVELOP_HOOK_URL }}\n         run: |\n           curl \"$deploy_url\"\n   \n       - name: Deploy to Render (Main)\n-        if: github.event.pull_request.base.ref == 'main'\n+        if: github.ref_name == 'main'\n         env:\n           deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n         run: |\n           curl \"$deploy_url\"\n   \n       - name: Monitor Develop Deployment Status\n-        if: github.event.pull_request.base.ref == 'develop'\n+        if: github.ref_name == 'develop'\n         env:\n           API_KEY: ${{ secrets.RENDER_DEVELOP_API_KEY }}\n           SERVICE_ID: ${{ secrets.RENDER_DEVELOP_SERVICE_ID }}\n@@ -96,7 +94,7 @@ jobs:\n           echo \"Deployment is live!\"\n   \n       - name: Monitor Main Deployment Status\n-        if: github.event.pull_request.base.ref == 'main'\n+        if: github.ref_name == 'main'\n         env:\n           API_KEY: ${{ secrets.RENDER_MAIN_API_KEY }}\n           SERVICE_ID: ${{ secrets.RENDER_MAIN_SERVICE_ID }}"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/42",
    "id": 2196724199,
    "node_id": "PR_kwDONB39G86C71nn",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/42",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/42.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/42.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/42",
    "number": 42,
    "state": "closed",
    "locked": false,
    "title": "fix: Integrate workflow changes to develop to fix not deploying on develop PR",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-24T11:04:16Z",
    "updated_at": "2024-11-24T13:28:11Z",
    "closed_at": "2024-11-24T13:28:11Z",
    "merged_at": "2024-11-24T13:28:11Z",
    "merge_commit_sha": "7f89bb09c2a8b173e9132d41107df4e0b01e343a",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/42/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/42/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/42/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/7a54bb6eb19daaa98e432426fff9389ce047627d",
    "head": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "7a54bb6eb19daaa98e432426fff9389ce047627d",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "fe0cc42195b50c54439c51e0faabf174ec3463d3",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/42"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/42"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/42"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/42/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/42/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/42/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/7a54bb6eb19daaa98e432426fff9389ce047627d"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "c81b3b2380c1b21c8ded0c25f49f02fce442a094",
        "filename": ".github/ISSUE_TEMPLATE/1-bug-report.yml",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7a54bb6eb19daaa98e432426fff9389ce047627d/.github%2FISSUE_TEMPLATE%2F1-bug-report.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7a54bb6eb19daaa98e432426fff9389ce047627d/.github%2FISSUE_TEMPLATE%2F1-bug-report.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2FISSUE_TEMPLATE%2F1-bug-report.yml?ref=7a54bb6eb19daaa98e432426fff9389ce047627d",
        "patch": "@@ -0,0 +1,41 @@\n+name: Bug report\n+description: Inform of an error. \n+labels: [bug]\n+\n+body:\n+  - type: markdown\n+    attributes:\n+      value: |\n+        Thanks for taking the time to fill out this bug report! Before continuing, please verify that there is [no bug report](https://github.com/TostaHub/tostahub-uvlhub/issues) that matches yours.\n+  - type: textarea\n+    attributes:\n+      label: Description\n+      description: A clear and concise description of the problem.\n+    validations:\n+      required: true\n+  - type: textarea\n+    attributes:\n+      label: Steps to reproduce\n+      description: Explain how we can reproduce the bug\n+    validations:\n+      required: true\n+  - type: textarea\n+    attributes:\n+      label: Expected behavior\n+      description: A clear and concise description of the desired behavior.\n+    validations:\n+      required: true\n+  - type: textarea\n+    attributes:\n+      label: Screenshots\n+      description: If applicable, screenshots that help explain the problem.\n+  - type: dropdown\n+    attributes:\n+      label: Server platform\n+      description: Platform on which you are running the server.\n+      options:\n+        - Linux\n+        - Windows\n+        - macOS\n+    validations:\n+      required: true"
      },
      {
        "sha": "5b8ad776bd267a51487a0838dadcb14a25df8f1f",
        "filename": ".github/ISSUE_TEMPLATE/2-feature-request.yml",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7a54bb6eb19daaa98e432426fff9389ce047627d/.github%2FISSUE_TEMPLATE%2F2-feature-request.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7a54bb6eb19daaa98e432426fff9389ce047627d/.github%2FISSUE_TEMPLATE%2F2-feature-request.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2FISSUE_TEMPLATE%2F2-feature-request.yml?ref=7a54bb6eb19daaa98e432426fff9389ce047627d",
        "patch": "@@ -0,0 +1,35 @@\n+name: Feature request\n+description: Propose new features. \n+labels: [enhancement]\n+\n+body:\n+  - type: markdown\n+    attributes:\n+      value: |\n+        Thanks for your interest in improving TostaHub! Before continuing, please verify that there is [no feature report](https://github.com/TostaHub/tostahub-uvlhub/issues) that matches yours.\n+  - type: textarea\n+    attributes:\n+      label: Description\n+      description: A clear and concise description of the problem.\n+    validations:\n+      required: true\n+  - type: dropdown\n+    attributes:\n+      label: Modules\n+      description: Add the related modules to the request if you can.\n+      multiple: true\n+      options:\n+        - Auth\n+        - Public\n+        - Teams\n+        - Webhook\n+        - Profile\n+        - Dataset\n+        - Explore\n+        - Flamapy\n+        - Hubfile\n+        - Feature Model\n+        - Fakenodo\n+        - New module\n+    validations:\n+      required: false"
      },
      {
        "sha": "ec4bb386bcf8a4946923eff961cc7cdf70c0aedf",
        "filename": ".github/ISSUE_TEMPLATE/config.yml",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7a54bb6eb19daaa98e432426fff9389ce047627d/.github%2FISSUE_TEMPLATE%2Fconfig.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7a54bb6eb19daaa98e432426fff9389ce047627d/.github%2FISSUE_TEMPLATE%2Fconfig.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fconfig.yml?ref=7a54bb6eb19daaa98e432426fff9389ce047627d",
        "patch": "@@ -0,0 +1 @@\n+blank_issues_enabled: false\n\\ No newline at end of file"
      },
      {
        "sha": "9f8c6c53b50ba7d3700bd63206e9ff408fddffaa",
        "filename": ".github/workflows/commits.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=e68373226a6e6c44fc7d048fc337329ee3febfce",
        "patch": "@@ -1,18 +0,0 @@\n-name: Commits Syntax Checker\n-\n-on:\n-  pull_request:\n-    branches: [main]\n-    types: [opened, reopened, edited, review_requested, synchronize]\n-  push:\n-    branches:\n-      - \"main\"\n-  workflow_call:\n-\n-jobs:\n-  check:\n-    name: Conventional Commits\n-    runs-on: ubuntu-latest\n-    steps:\n-      - uses: actions/checkout@v2\n-      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file"
      },
      {
        "sha": "c5b9dbad0e7570244cb84942b53b859bf041af6c",
        "filename": ".github/workflows/deloyment_on_webhook.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Fdeloyment_on_webhook.yml?ref=e68373226a6e6c44fc7d048fc337329ee3febfce",
        "patch": "@@ -1,32 +0,0 @@\n-name: Deploy on Webhook\n-\n-on:\n-  workflow_run:\n-    workflows: \n-      - \"Python Lint\"\n-      - \"Run tests\"\n-    types:\n-      - completed\n-\n-jobs:\n-  deploy:\n-    if: github.ref == 'refs/heads/main'\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Check lint and test results\n-      run: |\n-        if [ \"${{ github.event.workflow_run.conclusion }}\" != \"success\" ]; then\n-          echo \"Lint or Test workflow did not succeed. Exiting.\"\n-          exit 1\n-        fi\n-\n-    - name: Trigger Deployment Webhook\n-      env:\n-        WEBHOOK_DOMAIN: ${{ secrets.WEBHOOK_DOMAIN }}\n-        WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}\n-      run: |\n-        curl -X POST https://${{ secrets.WEBHOOK_DOMAIN }}/webhook/deploy -H \"Authorization: Bearer ${{ secrets.WEBHOOK_TOKEN }}\""
      },
      {
        "sha": "f7dfe75eb96badbdd3ee434377bee31f33a173df",
        "filename": ".github/workflows/deployment_on_dockerhub.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml?ref=e68373226a6e6c44fc7d048fc337329ee3febfce",
        "patch": "@@ -1,43 +0,0 @@\n-# This workflow uses actions that are not certified by GitHub.\n-# They are provided by a third-party and are governed by\n-# separate terms of service, privacy policy, and support\n-# documentation.\n-\n-# GitHub recommends pinning actions to a commit SHA.\n-# To get a newer version, you will need to update the SHA.\n-# You can also reference a tag or branch, but the action may change without warning.\n-\n-name: Publish image in Docker Hub\n-\n-on:\n-  release:\n-    types: [published]\n-\n-jobs:\n-  push_to_registry:\n-    name: Push Docker image to Docker Hub\n-    runs-on: ubuntu-latest\n-    steps:\n-      - name: Check out the repo\n-        uses: actions/checkout@v3\n-\n-      - name: Log in to Docker Hub\n-        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a\n-        with:\n-          username: ${{ secrets.DOCKER_USER }}\n-          password: ${{ secrets.DOCKER_PASSWORD }}\n-\n-      - name: Build and push Docker image\n-        run: docker build --build-arg VERSION_TAG=${{ github.event.release.tag_name }} -t drorganvidez/uvlhub:${{ github.event.release.tag_name }} -f docker/images/Dockerfile.prod .\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled\n-\n-      - name: Push Docker image to Docker Hub\n-        run: docker push drorganvidez/uvlhub:${{ github.event.release.tag_name }}\n-\n-      - name: Tag and push latest\n-        run: |\n-          docker tag drorganvidez/uvlhub:${{ github.event.release.tag_name }} drorganvidez/uvlhub:latest\n-          docker push drorganvidez/uvlhub:latest\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled"
      },
      {
        "sha": "13186125658d533505deb5b7c4f1ac2f42e0b413",
        "filename": ".github/workflows/render.yml",
        "status": "added",
        "additions": 120,
        "deletions": 0,
        "changes": 120,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7a54bb6eb19daaa98e432426fff9389ce047627d/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7a54bb6eb19daaa98e432426fff9389ce047627d/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=7a54bb6eb19daaa98e432426fff9389ce047627d",
        "patch": "@@ -0,0 +1,120 @@\n+name: Deploy to Render\n+\n+on:\n+  push:\n+    tags:\n+    - 'v*' \n+  pull_request:\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render (Develop)\n+        if: github.event.pull_request.base.ref == 'develop'\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_DEVELOP_HOOK_URL }}\n+        run: |\n+          curl \"$deploy_url\"\n+  \n+      - name: Deploy to Render (Main)\n+        if: github.event.pull_request.base.ref == 'main'\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+        run: |\n+          curl \"$deploy_url\"\n+  \n+      - name: Monitor Develop Deployment Status\n+        if: github.event.pull_request.base.ref == 'develop'\n+        env:\n+          API_KEY: ${{ secrets.RENDER_DEVELOP_API_KEY }}\n+          SERVICE_ID: ${{ secrets.RENDER_DEVELOP_SERVICE_ID }}\n+        run: |\n+          STATUS=\"\"\n+          while [ \"$STATUS\" != \"live\" ]; do\n+            DEPLOY_DATA=$(curl -s -H \"Authorization: Bearer $API_KEY\" \\\n+              \"https://api.render.com/v1/services/$SERVICE_ID/deploys\" | jq '.[0]')\n+  \n+            STATUS=$(echo \"$DEPLOY_DATA\" | jq -r '.deploy.status')\n+  \n+            if [[ \"$STATUS\" == \"build_failed\" || \"$STATUS\" == \"update_failed\" || \"$STATUS\" == \"canceled\" || \"$STATUS\" == \"pre_deploy_failed\" ]]; then\n+              echo \"Deployment failed with status: $STATUS\"\n+              exit 1\n+            fi\n+  \n+            echo \"Current status: $STATUS\"\n+            sleep 10\n+          done\n+  \n+          echo \"Deployment is live!\"\n+  \n+      - name: Monitor Main Deployment Status\n+        if: github.event.pull_request.base.ref == 'main'\n+        env:\n+          API_KEY: ${{ secrets.RENDER_MAIN_API_KEY }}\n+          SERVICE_ID: ${{ secrets.RENDER_MAIN_SERVICE_ID }}\n+        run: |\n+          STATUS=\"\"\n+          while [ \"$STATUS\" != \"live\" ]; do\n+            DEPLOY_DATA=$(curl -s -H \"Authorization: Bearer $API_KEY\" \\\n+              \"https://api.render.com/v1/services/$SERVICE_ID/deploys\" | jq '.[0]')\n+  \n+            STATUS=$(echo \"$DEPLOY_DATA\" | jq -r '.deploy.status')\n+  \n+            if [[ \"$STATUS\" == \"build_failed\" || \"$STATUS\" == \"update_failed\" || \"$STATUS\" == \"canceled\" || \"$STATUS\" == \"pre_deploy_failed\" ]]; then\n+              echo \"Deployment failed with status: $STATUS\"\n+              exit 1\n+            fi\n+  \n+            echo \"Current status: $STATUS\"\n+            sleep 10\n+          done\n+  \n+          echo \"Deployment is live!\""
      },
      {
        "sha": "2add39ddbef160ef469a7811c12a6035a5378cfa",
        "filename": "PoliticaCommits.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7a54bb6eb19daaa98e432426fff9389ce047627d/PoliticaCommits.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7a54bb6eb19daaa98e432426fff9389ce047627d/PoliticaCommits.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/PoliticaCommits.pdf?ref=7a54bb6eb19daaa98e432426fff9389ce047627d"
      },
      {
        "sha": "d8f8d46921aa81abc4c0d27703a8908333ae38c3",
        "filename": "docs/d",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/7a54bb6eb19daaa98e432426fff9389ce047627d/docs%2Fd",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/7a54bb6eb19daaa98e432426fff9389ce047627d/docs%2Fd",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2Fd?ref=7a54bb6eb19daaa98e432426fff9389ce047627d",
        "patch": "@@ -0,0 +1 @@\n+docs"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/41",
    "id": 2196243106,
    "node_id": "PR_kwDONB39G86C6AKi",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/41",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/41.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/41.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/41",
    "number": 41,
    "state": "closed",
    "locked": false,
    "title": "fix: Small change to update cache",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-23T13:29:25Z",
    "updated_at": "2024-11-23T13:30:16Z",
    "closed_at": "2024-11-23T13:30:12Z",
    "merged_at": "2024-11-23T13:30:12Z",
    "merge_commit_sha": "fe0cc42195b50c54439c51e0faabf174ec3463d3",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/41/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/41/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/41/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/31eced0552e27f5262c1e3b07f16ee2a5754cd16",
    "head": {
      "label": "TostaHub:Ahydul-patch-2",
      "ref": "Ahydul-patch-2",
      "sha": "31eced0552e27f5262c1e3b07f16ee2a5754cd16",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "433943f6ca37b7a75af00ebb39b3355f189f3bcd",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/41"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/41"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/41"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/41/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/41/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/41/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/31eced0552e27f5262c1e3b07f16ee2a5754cd16"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "c3d6b3d99ad4a306155c8c487c3f938daca12db5",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/31eced0552e27f5262c1e3b07f16ee2a5754cd16/README.md",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/31eced0552e27f5262c1e3b07f16ee2a5754cd16/README.md",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/README.md?ref=31eced0552e27f5262c1e3b07f16ee2a5754cd16",
        "patch": "@@ -16,3 +16,4 @@ Repository of feature models in UVL format integrated with Zenodo and flamapy fo\n ## Official documentation\n \n You can consult the official documentation of the project at [docs.uvlhub.io](https://docs.uvlhub.io/)\n+"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/40",
    "id": 2196238759,
    "node_id": "PR_kwDONB39G86C5_Gn",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/40",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/40.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/40.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/40",
    "number": 40,
    "state": "closed",
    "locked": false,
    "title": "fix: Fix not executing workflow on PR to develop",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-23T13:17:32Z",
    "updated_at": "2024-11-27T17:50:02Z",
    "closed_at": "2024-11-23T13:20:11Z",
    "merged_at": "2024-11-23T13:20:11Z",
    "merge_commit_sha": "79b00e73731896410f06d0dbd3a6f73f8ad2d5e1",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/40/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/40/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/40/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/a50d7e85ea4c5d7d455736bb64022bbdbf270865",
    "head": {
      "label": "TostaHub:Ahydul-patch-1",
      "ref": "Ahydul-patch-1",
      "sha": "a50d7e85ea4c5d7d455736bb64022bbdbf270865",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "d282d62e9cec5f6f6c392b9dcccc31b926e2ed96",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/40"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/40"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/40"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/40/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/40/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/40/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/a50d7e85ea4c5d7d455736bb64022bbdbf270865"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "65881db1296949afa30b7e28dd92a6407d0cb7f5",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a50d7e85ea4c5d7d455736bb64022bbdbf270865/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a50d7e85ea4c5d7d455736bb64022bbdbf270865/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=a50d7e85ea4c5d7d455736bb64022bbdbf270865",
        "patch": "@@ -5,7 +5,6 @@ on:\n     tags:\n     - 'v*' \n   pull_request:\n-    branches: [main, develop]\n \n jobs:\n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/39",
    "id": 2196235613,
    "node_id": "PR_kwDONB39G86C5-Vd",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/39",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/39.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/39.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/39",
    "number": 39,
    "state": "closed",
    "locked": false,
    "title": "feat: Add filter by valid uvl model and by numbers of configurations",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-23T13:08:36Z",
    "updated_at": "2024-11-24T22:21:54Z",
    "closed_at": "2024-11-24T22:21:54Z",
    "merged_at": null,
    "merge_commit_sha": "2c6db7a9e90570a5c4e79b389f6b7f7b5db09d1f",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/39/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/39/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/39/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/4731ca250fd6c0a0681be060826f91033fe819e5",
    "head": {
      "label": "TostaHub:advanced-filtering",
      "ref": "advanced-filtering",
      "sha": "4731ca250fd6c0a0681be060826f91033fe819e5",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "d424a9f85d035c5d951e8c5e2688a2fccc6133fd",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/39"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/39"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/39"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/39/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/39/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/39/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/4731ca250fd6c0a0681be060826f91033fe819e5"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "5cbb0cd3c2303b734219e777cb48ed528241f8ad",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 44,
        "deletions": 10,
        "changes": 54,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4731ca250fd6c0a0681be060826f91033fe819e5/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4731ca250fd6c0a0681be060826f91033fe819e5/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=4731ca250fd6c0a0681be060826f91033fe819e5",
        "patch": "@@ -5,6 +5,7 @@ document.addEventListener('DOMContentLoaded', () => {\n function send_query() {\n     setInitialNumUvlFilterMaxMin()\n     setInitialDatesMaxMin()\n+    setInitialNumConfigurationsFilterMaxMin()\n \n     console.log(\"send query...\")\n \n@@ -26,7 +27,12 @@ function send_query() {\n             const minUvl = document.querySelector('#min_uvl');\n             const maxUvl = document.querySelector('#max_uvl');\n             \n-            setNumUvlFilterMaxMin(filter, minUvl, maxUvl);\n+            setNumFilterMaxMin(filter, minUvl, maxUvl);\n+\n+            const minNumConfg = document.querySelector('#min_num_configurations');\n+            const maxNumConfg = document.querySelector('#max_num_configurations');\n+            \n+            setNumFilterMaxMin(filter, minNumConfg, maxNumConfg);\n \n             const searchCriteria = {\n                 csrf_token: csrfToken,\n@@ -36,6 +42,9 @@ function send_query() {\n                 end_date: endDate.value,\n                 min_uvl: minUvl.value,\n                 max_uvl: maxUvl.value,\n+                by_valid_uvls: document.querySelector('#by_valid_uvls').value,\n+                min_num_configurations: minNumConfg.value,\n+                max_num_configurations: maxNumConfg.value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n             };\n \n@@ -223,20 +232,35 @@ function setInitialNumUvlFilterMaxMin() {\n     }\n }\n \n-function setNumUvlFilterMaxMin(filter, minUvl, maxUvl) {\n-    if (filter.id === minUvl.id) {\n-        const num = parseInt(minUvl.value);\n+function setInitialNumConfigurationsFilterMaxMin() {\n+    const minConf = document.querySelector('#min_num_configurations');\n+    const maxConf = document.querySelector('#max_num_configurations');\n+\n+    const numMin = parseInt(minConf.value);\n+    if (!isNaN(numMin)) {\n+        maxConf.min = numMin\n+    }\n+\n+    const numMax = parseInt(maxConf.value);\n+    if (!isNaN(numMax)) {\n+        minConf.max = numMax\n+    }\n+}\n+\n+function setNumFilterMaxMin(filter, min, max) {\n+    if (filter.id === min.id) {\n+        const num = parseInt(min.value);\n         if (isNaN(num)) {\n-            maxUvl.min = 0;\n+            max.min = 0;\n         } else {\n-            maxUvl.min = num;\n+            max.min = num;\n         }\n-    } else if (filter.id === maxUvl.id) {\n-        const num = parseInt(maxUvl.value);\n+    } else if (filter.id === max.id) {\n+        const num = parseInt(max.value);\n         if (isNaN(num)) {\n-            minUvl.max = \"\"; // We suppose that more than this value is not feasible\n+            min.max = \"\";\n         } else {\n-            minUvl.max = num;\n+            min.max = num;\n         }\n     } \n }\n@@ -279,6 +303,9 @@ function clearFilters() {\n     publicationTypeSelect.value = \"any\"; // replace \"any\" with whatever your default value is\n     // publicationTypeSelect.dispatchEvent(new Event('input', {bubbles: true}));\n \n+    let validUvlCheckbox = document.querySelector('#by_valid_uvls');\n+    validUvlCheckbox.checked = false; \n+\n     // Reset the dates to none\n     let startDateInput = document.querySelector('#start_date');\n     startDateInput.value = \"\";\n@@ -293,6 +320,13 @@ function clearFilters() {\n     let maxUvlInput = document.querySelector('#max_uvl');\n     maxUvlInput.value = \"\";\n     \n+    // Reset the number of configurations filters\n+    let maxConfigurationsInput = document.querySelector('#max_num_configurations');\n+    maxConfigurationsInput.value = \"\";\n+\n+    let minConfigurationsInput = document.querySelector('#min_num_configurations');\n+    minConfigurationsInput.value = \"\";\n+\n     // Reset the sorting option\n     let sortingOptions = document.querySelectorAll('[name=\"sorting\"]');\n     sortingOptions.forEach(option => {"
      },
      {
        "sha": "35b45a02404d35b1dd93bbf090a77c8749f020c0",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 38,
        "deletions": 1,
        "changes": 39,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4731ca250fd6c0a0681be060826f91033fe819e5/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4731ca250fd6c0a0681be060826f91033fe819e5/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=4731ca250fd6c0a0681be060826f91033fe819e5",
        "patch": "@@ -4,6 +4,7 @@\n from app.modules.dataset.models import Author, DSMetaData, DataSet, PublicationType\n from app.modules.featuremodel.models import FeatureModel\n from app.modules.hubfile.models import Hubfile\n+from app.modules.flamapy.routes import check_uvl, get_num_configurations\n from core.repositories.BaseRepository import BaseRepository\n from datetime import datetime\n \n@@ -20,7 +21,8 @@ def __init__(self):\n         super().__init__(DataSet)\n \n     def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n-               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", **kwargs):\n+               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\",\n+               by_valid_uvls=\"\", min_num_configurations=\"\", max_num_configurations=\"\", **kwargs):\n \n         # Crear un alias para `ds_meta_data` para evitar conflictos de alias.\n         ds_meta_data_alias = aliased(DSMetaData)\n@@ -113,4 +115,39 @@ def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n         if max_size_filter is not None:\n             results = [ds for ds in results if ds.get_file_total_size() <= max_size_filter]\n \n+        if by_valid_uvls == \"on\":\n+            results = [\n+                ds for ds in results\n+                if any(\n+                    any(\n+                        check_uvl(file.id)[1] == 200\n+                        for file in fm.files\n+                    )\n+                    for fm in ds.feature_models\n+                )\n+            ]\n+\n+        if min_num_configurations.isdigit() or max_num_configurations.isdigit():\n+            results = [\n+                ds for ds in results\n+                if all(\n+                    all(\n+                        num_configurations_between(file.id, min_num_configurations, max_num_configurations)\n+                        for file in fm.files\n+                    )\n+                    for fm in ds.feature_models\n+                )\n+            ]\n+\n         return results\n+\n+\n+def num_configurations_between(file_id, min_num_configurations, max_num_configurations):\n+    result, status_code = get_num_configurations(file_id)\n+\n+    if status_code == 200:\n+        num = int(result.json[\"result\"])\n+        return (min_num_configurations.isdigit() and num >= int(min_num_configurations)\n+                and max_num_configurations.isdigit() and num <= int(max_num_configurations))\n+\n+    return True"
      },
      {
        "sha": "5122c640cd404380d3d3793e09c0ff14fc91339d",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4731ca250fd6c0a0681be060826f91033fe819e5/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4731ca250fd6c0a0681be060826f91033fe819e5/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=4731ca250fd6c0a0681be060826f91033fe819e5",
        "patch": "@@ -6,6 +6,9 @@ def __init__(self):\n         self.repository = ExploreRepository()\n \n     def filter(self, query: str, sorting=\"newest\", publication_type=\"any\",\n-               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", **kwargs):\n+               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", by_valid_uvls=\"\",\n+               min_num_configurations=\"\", max_num_configurations=\"\", **kwargs):\n+\n         return self.repository.filter(query, sorting, publication_type, start_date,\n-                                      end_date, min_uvl, max_uvl, **kwargs)\n+                                      end_date, min_uvl, max_uvl, by_valid_uvls, min_num_configurations,\n+                                      max_num_configurations, **kwargs)"
      },
      {
        "sha": "5b1e2882731f8d2f7f0d93fe7eeaffe24a381261",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4731ca250fd6c0a0681be060826f91033fe819e5/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4731ca250fd6c0a0681be060826f91033fe819e5/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=4731ca250fd6c0a0681be060826f91033fe819e5",
        "patch": "@@ -86,6 +86,13 @@ <h3 class=\"h3 mb-3\">\n \n                         </div>\n \n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"by_valid_uvls\">Filter by valid uvl models: </label>\n+                                <input type=\"checkbox\" name=\"by_valid_uvls\" id=\"by_valid_uvls\">\n+                            </div>\n+                        </div>\n+\n                         <p style=\"margin-bottom: 0.2rem;\">Filter by date created at:</p>\n \n                         <div class=\"col-lg-6\">\n@@ -118,6 +125,22 @@ <h3 class=\"h3 mb-3\">\n                             </div>\n                         </div>\n \n+                        <p style=\"margin-bottom: 0.2rem;\">Filter number of configurations:</p>\n+\n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"min_num_configurations\">Minimum</label>\n+                                <input class=\"form-control\" type=\"number\" name=\"min_num_configurations\" id=\"min_num_configurations\" min=\"0\" required=\"\">\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"max_num_configurations\">Maximum</label>\n+                                <input class=\"form-control\" type=\"number\" name=\"max_num_configurations\" id=\"max_num_configurations\" min=\"0\" required=\"\">                                   \n+                            </div>\n+                        </div>\n+\n                     </div>\n \n                     <div class=\"row\">"
      },
      {
        "sha": "f73c7d15317242b3d2bf2a3ac0ec708c8f1c44f0",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4731ca250fd6c0a0681be060826f91033fe819e5/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4731ca250fd6c0a0681be060826f91033fe819e5/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=4731ca250fd6c0a0681be060826f91033fe819e5",
        "patch": "@@ -4,6 +4,8 @@\n from app.modules.flamapy import flamapy_bp\n from flamapy.metamodels.fm_metamodel.transformations import UVLReader, GlencoeWriter, SPLOTWriter\n from flamapy.metamodels.pysat_metamodel.transformations import FmToPysat, DimacsWriter\n+from flamapy.core.discover import DiscoverMetamodels\n+from flamapy.core.exceptions import OperationNotFound, ConfigurationNotFound\n import tempfile\n import os\n \n@@ -150,3 +152,29 @@ def to_cnf(file_id):\n     except Exception as e:\n         # Manejar cualquier otro error inesperado\n         return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n+\n+\n+def get_num_configurations(file_id):\n+    try:\n+        hubfile = HubfileService().get_or_404(file_id)\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+        # Agrega un mensaje de depuraci\u00f3n\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        # Initiallize the dicover metamodel\n+        dm = DiscoverMetamodels()\n+        result = dm.use_operation_from_file(\"PySATConfigurationsNumber\", file_path)\n+\n+        return jsonify({\"result\": result}), 200\n+\n+    except NotFound as e:\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except OperationNotFound as e:\n+        return jsonify({\"error\": str(e).replace(\"Operation not found: \", \"\")}), 500\n+    except ConfigurationNotFound as e:\n+        return jsonify({\"error\": str(e).replace(\"Configuration not found: \", \"\")}), 500\n+    except Exception as e:\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/38",
    "id": 2194385488,
    "node_id": "PR_kwDONB39G86Cy6pQ",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/38",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/38.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/38.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/38",
    "number": 38,
    "state": "closed",
    "locked": false,
    "title": "Develop",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-22T10:26:21Z",
    "updated_at": "2024-11-22T10:26:40Z",
    "closed_at": "2024-11-22T10:26:40Z",
    "merged_at": null,
    "merge_commit_sha": "6c089c1d492c7f50576bd2cf063d79e1e78d8119",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/38/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/38/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/38/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/433943f6ca37b7a75af00ebb39b3355f189f3bcd",
    "head": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "433943f6ca37b7a75af00ebb39b3355f189f3bcd",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:feature/5-advance-filtering",
      "ref": "feature/5-advance-filtering",
      "sha": "22fdd0202b2973937852cffe628f886482b3f720",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/38"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/38"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/38"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/38/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/38/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/38/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/433943f6ca37b7a75af00ebb39b3355f189f3bcd"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "80dfdef38ad149303a93a2b321b24f8c8eaeaa00",
        "filename": "app/modules/dataset/models.py",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Fmodels.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fmodels.py?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -58,6 +58,7 @@ class DSMetaData(db.Model):\n     id = db.Column(db.Integer, primary_key=True)\n     deposition_id = db.Column(db.Integer)\n     title = db.Column(db.String(120), nullable=False)\n+    rating = db.Column(db.Float, default=0.0)\n     description = db.Column(db.Text, nullable=False)\n     publication_type = db.Column(SQLAlchemyEnum(PublicationType), nullable=False)\n     publication_doi = db.Column(db.String(120))\n@@ -67,6 +68,12 @@ class DSMetaData(db.Model):\n     ds_metrics = db.relationship('DSMetrics', uselist=False, backref='ds_meta_data', cascade=\"all, delete\")\n     authors = db.relationship('Author', backref='ds_meta_data', lazy=True, cascade=\"all, delete\")\n \n+    def update_rating(self):\n+        total_ratings = sum(rating.rating for rating in self.ratings)\n+        count = len(self.ratings)\n+        self.rating = total_ratings / count if count > 0 else 0\n+        db.session.commit()\n+\n \n class DataSet(db.Model):\n     id = db.Column(db.Integer, primary_key=True)\n@@ -111,6 +118,7 @@ def get_uvlhub_doi(self):\n     def to_dict(self):\n         return {\n             'title': self.ds_meta_data.title,\n+            'rating': self.ds_meta_data.rating,\n             'id': self.id,\n             'created_at': self.created_at,\n             'created_at_timestamp': int(self.created_at.timestamp()),\n@@ -164,3 +172,22 @@ class DOIMapping(db.Model):\n     id = db.Column(db.Integer, primary_key=True)\n     dataset_doi_old = db.Column(db.String(120))\n     dataset_doi_new = db.Column(db.String(120))\n+\n+\n+class DSRating(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)\n+    ds_meta_data_id = db.Column(db.Integer, db.ForeignKey('ds_meta_data.id'), nullable=False)\n+    rating = db.Column(db.Float, default=0, nullable=False)\n+    rated_date = db.Column(db.DateTime, nullable=False, default=datetime.utcnow)\n+\n+    ds_meta_data = db.relationship('DSMetaData', backref=db.backref('ratings', lazy=True))\n+\n+    def to_dict(self):\n+        return {\n+            'id': self.id,\n+            'user_id': self.user_id,\n+            'ds_meta_data_id': self.ds_meta_data_id,\n+            'rating': self.rating,\n+            'rated_date': self.rated_date\n+        }"
      },
      {
        "sha": "f97463f94bef21226ba1be320172d15c9189191b",
        "filename": "app/modules/dataset/repositories.py",
        "status": "modified",
        "additions": 18,
        "deletions": 1,
        "changes": 19,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -11,7 +11,8 @@\n     DSDownloadRecord,\n     DSMetaData,\n     DSViewRecord,\n-    DataSet\n+    DataSet,\n+    DSRating\n )\n from core.repositories.BaseRepository import BaseRepository\n \n@@ -121,3 +122,19 @@ def __init__(self):\n \n     def get_new_doi(self, old_doi: str) -> str:\n         return self.model.query.filter_by(dataset_doi_old=old_doi).first()\n+\n+\n+class DSRatingRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(DSRating)\n+\n+    def get_user_rating(self, ds_meta_data_id: int, user_id: int) -> Optional[DSRating]:\n+        return self.model.query.filter(DSRating.ds_meta_data_id == ds_meta_data_id, DSRating.user_id == user_id).first()\n+\n+    def get_average_rating(self, ds_meta_data_id: int) -> float:\n+        average = self.model.query.filter(\n+            (DSRating.ds_meta_data_id == ds_meta_data_id).with_entities(func.avg(DSRating.rating)).scalar())\n+        return average if average else 0.0\n+\n+    def count_ratings(self, ds_meta_data_id: int) -> int:\n+        return self.model.query.filter(DSRating.ds_meta_data_id == ds_meta_data_id).count()"
      },
      {
        "sha": "e9faaa440465181a5338792b3f0a61d363fdc1dd",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -118,6 +118,15 @@ def list_dataset():\n     )\n \n \n+@dataset_bp.route(\"/dataset/user_id/<int:user_id>\", methods=[\"GET\"])\n+def user_dataset(user_id):\n+    return render_template(\n+        \"dataset/user_datasets.html\",\n+        datasets=dataset_service.get_synchronized(user_id),\n+        local_datasets=dataset_service.get_unsynchronized(user_id),\n+    )\n+\n+\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():"
      },
      {
        "sha": "c2676ccf985c29fb503894161469ef6b8150c07a",
        "filename": "app/modules/dataset/services.py",
        "status": "modified",
        "additions": 32,
        "deletions": 2,
        "changes": 34,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fservices.py?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -8,14 +8,15 @@\n from flask import request\n \n from app.modules.auth.services import AuthenticationService\n-from app.modules.dataset.models import DSViewRecord, DataSet, DSMetaData\n+from app.modules.dataset.models import DSViewRecord, DataSet, DSMetaData, DSRating\n from app.modules.dataset.repositories import (\n     AuthorRepository,\n     DOIMappingRepository,\n     DSDownloadRecordRepository,\n     DSMetaDataRepository,\n     DSViewRecordRepository,\n-    DataSetRepository\n+    DataSetRepository,\n+    DSRatingRepository,\n )\n from app.modules.featuremodel.repositories import FMMetaDataRepository, FeatureModelRepository\n from app.modules.hubfile.repositories import (\n@@ -47,6 +48,7 @@ def __init__(self):\n         self.hubfiledownloadrecord_repository = HubfileDownloadRecordRepository()\n         self.hubfilerepository = HubfileRepository()\n         self.dsviewrecord_repostory = DSViewRecordRepository()\n+        self.dsrating_repository = DSRatingRepository()\n         self.hubfileviewrecord_repository = HubfileViewRecordRepository()\n \n     def move_feature_models(self, dataset: DataSet):\n@@ -198,6 +200,34 @@ def get_new_doi(self, old_doi: str) -> str:\n             return None\n \n \n+class DSRatingService(BaseService):\n+    def __init__(self):\n+        super().__init__(DSRatingRepository())\n+\n+    def add_or_update_rating(self, dsmetadata_id: int, user_id: int, rating_value: int) -> DSRating:\n+        rating = self.repository.get_user_rating(dsmetadata_id, user_id)\n+        if rating:\n+            print(\"Actualizando rating a {rating_value}\")\n+            rating.rating = rating_value\n+        else:\n+            print(\"Valor de rating en el servicio:\", rating_value)\n+            rating = self.repository.create(\n+             commit=False,\n+             ds_meta_data_id=dsmetadata_id,\n+             user_id=user_id,\n+             rating=rating_value\n+            )\n+            print(\"Valor de rating en el servicio:\", rating.rating)\n+        self.repository.session.commit()\n+        return rating\n+\n+    def get_dataset_average_rating(self, dsmetadata_id: int) -> float:\n+        return self.repository.get_average_rating(dsmetadata_id)\n+\n+    def get_total_ratings(self, dsmetadata_id: int) -> int:\n+        return self.repository.count_ratings(dsmetadata_id)\n+\n+\n class SizeService():\n \n     def __init__(self):"
      },
      {
        "sha": "79672bd9ab698dd103fcd5dadca68a7fa3924916",
        "filename": "app/modules/dataset/templates/dataset/list_datasets.html",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -18,6 +18,7 @@ <h1 class=\"h3 mb-3\">My datasets</h1>\n                             <th>Description</th>\n                             <th>Publication type</th>\n                             <th>Dataset DOI</th>\n+                            <th>Rating</th>\n                             <th>Options</th>\n                         </tr>\n                         </thead>\n@@ -33,6 +34,14 @@ <h1 class=\"h3 mb-3\">My datasets</h1>\n                                 <td>{{ dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n                                 <td><a href=\"{{ dataset.get_uvlhub_doi() }}\"\n                                        target=\"_blank\">{{ dataset.get_uvlhub_doi() }}</a></td>\n+                                <td>\n+                                    <div id=\"star-rating-{{ dataset.id }}\" style=\"color: gold; display: inline-block;\">\n+                                        {% for i in range(1, 6) %}\n+                                            <span data-value=\"{{ i }}\" style=\"font-size: 1.5rem;\">\u2605</span>\n+                                        {% endfor %}\n+                                    </div>\n+                                    <span id=\"average-rating-{{ dataset.id }}\" class=\"ms-2\">-</span>/5\n+                                </td>\n                                 <td>\n                                     <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n                                         <i data-feather=\"eye\"></i>\n@@ -41,6 +50,7 @@ <h1 class=\"h3 mb-3\">My datasets</h1>\n                                         <i data-feather=\"download\"></i>\n                                     </a>\n                                 </td>\n+                                </td>\n                             </tr>\n                         {% endfor %}\n                         </tbody>\n@@ -115,4 +125,33 @@ <h5 class=\"card-title\">Unsynchronized datasets</h5>\n             {% endif %}\n         </div>\n \n+\n+<script>\n+    document.addEventListener('DOMContentLoaded', function () {\n+        {% for dataset in datasets %}\n+            updateAverageRating({{ dataset.id }});\n+        {% endfor %}\n+\n+        // Funci\u00f3n para actualizar el promedio de calificaci\u00f3n en el frontend\n+        function updateAverageRating(datasetId) {\n+            fetch(`/datasets/${datasetId}/average-rating`)\n+            .then(response => response.json())\n+            .then(data => {\n+                const averageRating = data.average_rating.toFixed(1);\n+                document.getElementById('average-rating-' + datasetId).innerText = averageRating;\n+\n+                // Resaltar estrellas seg\u00fan el promedio de calificaci\u00f3n\n+                const starRatingContainer = document.getElementById('star-rating-' + datasetId);\n+                starRatingContainer.querySelectorAll('span').forEach(star => {\n+                    const starValue = parseInt(star.getAttribute('data-value'));\n+                    star.style.color = starValue <= Math.round(averageRating) ? '#FFD700' : '#ddd';\n+                });\n+            })\n+            .catch(error => console.error('Error fetching average rating:', error));\n+        }\n+    });\n+</script>\n+\n+\n {% endblock %}\n+"
      },
      {
        "sha": "1ebff4ffec038ee1e22e00bb0eac925580d8eb15",
        "filename": "app/modules/dataset/templates/dataset/user_datasets.html",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -0,0 +1,118 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}My datasets{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h3 mb-3\">Datasets de {{ datasets[0].user.profile.name }} {{ datasets[0].user.profile.surname }}</h1>\n+\n+    {% if datasets %}\n+        <div class=\" col-12\">\n+            <div class=\"card\">\n+\n+                <div class=\"card-body\">\n+                    <table class=\"table\">\n+                        <thead>\n+                        <tr>\n+                            <th>Title</th>\n+                            <th>Description</th>\n+                            <th>Publication type</th>\n+                            <th>Dataset DOI</th>\n+                            <th>Options</th>\n+                        </tr>\n+                        </thead>\n+                        <tbody>\n+                        {% for dataset in datasets %}\n+                            <tr>\n+                                <td>\n+                                    <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                        {{ dataset.ds_meta_data.title }}\n+                                    </a>\n+                                </td>\n+                                <td>{{ dataset.ds_meta_data.description }}</td>\n+                                <td>{{ dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n+                                <td><a href=\"{{ dataset.get_uvlhub_doi() }}\"\n+                                       target=\"_blank\">{{ dataset.get_uvlhub_doi() }}</a></td>\n+                                <td>\n+                                    <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                        <i data-feather=\"eye\"></i>\n+                                    </a>\n+                                    <a href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">\n+                                        <i data-feather=\"download\"></i>\n+                                    </a>\n+                                </td>\n+                            </tr>\n+                        {% endfor %}\n+                        </tbody>\n+                    </table>\n+                </div>\n+\n+            </div>\n+\n+        </div>\n+    {% else %}\n+        <div class=\"col-12 col-md-6\">\n+            <div class=\"card\">\n+                <div class=\"card-header\">\n+                    <h5 class=\"card-title mb-0\">No datasets found</h5>\n+                </div>\n+                <div class=\"card-body\">\n+                    <p class=\"card-text\">\n+                        You have not created any dataset synchronized with Zenodo, are you up for it?\n+                    </p>\n+                    <a href=\"{{ url_for('dataset.create_dataset') }}\" class=\"btn btn-primary\">\n+                        Upload dataset</a>\n+                </div>\n+            </div>\n+        </div>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+\n+        <div class=\"col-12\">\n+            {% if local_datasets %}\n+                <div class=\"card\">\n+                    <div class=\"card-body\">\n+                        <div class=\"card-header\">\n+                            <h5 class=\"card-title\">Unsynchronized datasets</h5>\n+                        </div>\n+                        <div class=\"card-body\">\n+                            <table class=\"table\">\n+                                <thead>\n+                                <tr>\n+                                    <th>Title</th>\n+                                    <th>Description</th>\n+                                    <th>Publication type</th>\n+                                    <th>Options</th>\n+                                </tr>\n+                                </thead>\n+                                <tbody>\n+                                {% for local_dataset in local_datasets %}\n+                                    <tr>\n+                                        <td>\n+                                            <a href=\"{{ url_for('dataset.get_unsynchronized_dataset', dataset_id=local_dataset.id) }}\">\n+                                                {{ local_dataset.ds_meta_data.title }}\n+                                            </a>\n+                                        </td>\n+                                        <td>{{ local_dataset.ds_meta_data.description }}</td>\n+                                        <td>{{ local_dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n+                                        <td>\n+                                            <a href=\"{{ url_for('dataset.get_unsynchronized_dataset', dataset_id=local_dataset.id) }}\">\n+                                                <i data-feather=\"eye\"></i>\n+                                            </a>\n+                                            <a href=\"{{ url_for('dataset.download_dataset', dataset_id=local_dataset.id) }}\">\n+                                                <i data-feather=\"download\"></i>\n+                                            </a>\n+                                        </td>\n+                                    </tr>\n+                                {% endfor %}\n+                                </tbody>\n+                            </table>\n+                        </div>\n+                    </div>\n+                </div>\n+            {% endif %}\n+        </div>\n+\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "eddf8bb7942593f5d367fdcb574dc71e43522f1b",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -63,8 +63,13 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                             Uploaded by\n                         </span>\n                     </div>\n-                    <div class=\"col-md-8 col-12\">\n+                    <!-- #region div class=\"col-md-8 col-12\">\n                         <a href=\"#\">{{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}</a>\n+                    </div>-->\n+                    <div class=\"col-md-8 col-12\">\n+                        <a href=\"/dataset/user_id/{{ dataset.user.id }}\">\n+                            {{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}\n+                        </a>\n                     </div>\n \n                 </div>"
      },
      {
        "sha": "e7dc228ca50072429be948630add20d0fd086540",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 35,
        "deletions": 1,
        "changes": 36,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -120,6 +120,17 @@ function send_query() {\n                                             ${dataset.tags.map(tag => `<span class=\"badge bg-primary me-1\" style=\"cursor: pointer;\" onclick=\"set_tag_as_query('${tag}')\">${tag}</span>`).join('')}\n                                         </div>\n \n+                                    </div>\n+                                                <div class=\"row mb-2\">\n+                                        <div class=\"col-md-4 col-12\">\n+                                            <span class=\"text-secondary\">Rating</span>\n+                                        </div>\n+                                        <div class=\"col-md-8 col-12 d-flex align-items-center\">\n+                                            <div id=\"star-rating-${dataset.id}\" class=\"stars\" style=\"color: gold;\">\n+                                                ${'<span data-value=\"1\">\u2605</span>'.repeat(5)} <!-- Estrellas para interacci\u00f3n -->\n+                                            </div>\n+                                                <span id=\"average-rating-${dataset.id}\" class=\"ms-2\">-</span> <!-- Valor inicial vac\u00edo -->\n+                                        </div>\n                                     </div>\n \n                                     <div class=\"row\">\n@@ -146,6 +157,7 @@ function send_query() {\n                         document.getElementById('results').appendChild(card);\n                     });\n                 });\n+                updateAverageRating(dataset.id)\n         });\n     });\n }\n@@ -314,4 +326,26 @@ document.addEventListener('DOMContentLoaded', () => {\n         const queryInput = document.getElementById('query');\n         queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n     }\n-});\n\\ No newline at end of file\n+});\n+\n+\n+function updateAverageRating(datasetId) {\n+    fetch(`/datasets/${datasetId}/average-rating`)\n+        .then(response => response.json())\n+        .then(data => {\n+            const ratingValue = data.average_rating.toFixed(1);\n+            document.getElementById('average-rating-' + datasetId).innerText = ratingValue;\n+\n+            // Resaltar el n\u00famero correcto de estrellas en amarillo\n+            const starContainer = document.getElementById('star-rating-' + datasetId);\n+            highlightStars(starContainer, Math.round(data.average_rating));\n+        })\n+        .catch(error => console.error('Error fetching average rating:', error));\n+}\n+\n+function highlightStars(container, rating) {\n+    container.querySelectorAll('span').forEach(star => {\n+        const starValue = star.getAttribute('data-value');\n+        star.style.color = starValue <= rating ? '#FFD700' : '#ddd'; // Estrellas doradas seg\u00fan el rating\n+    });\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "eb817bd94f16232dcfb8eb59bc3045026b439f05",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 74,
        "deletions": 46,
        "changes": 120,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -1,8 +1,8 @@\n-import re\n-from sqlalchemy import any_, or_, func\n-import unidecode\n+from sqlalchemy import or_, func\n+from sqlalchemy.orm import aliased\n+from app import db\n from app.modules.dataset.models import Author, DSMetaData, DataSet, PublicationType\n-from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from app.modules.featuremodel.models import FeatureModel\n from app.modules.hubfile.models import Hubfile\n from core.repositories.BaseRepository import BaseRepository\n from datetime import datetime\n@@ -19,70 +19,98 @@ class ExploreRepository(BaseRepository):\n     def __init__(self):\n         super().__init__(DataSet)\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[],\n+    def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n                start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", **kwargs):\n \n-        # Normalize and remove unwanted characters\n-        normalized_query = unidecode.unidecode(query).lower()\n-        cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n-\n-        filters = []\n-        for word in cleaned_query.split():\n-            filters.append(DSMetaData.title.ilike(f\"%{word}%\"))\n-            filters.append(DSMetaData.description.ilike(f\"%{word}%\"))\n-            filters.append(Author.name.ilike(f\"%{word}%\"))\n-            filters.append(Author.affiliation.ilike(f\"%{word}%\"))\n-            filters.append(Author.orcid.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.uvl_filename.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.title.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.description.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.publication_doi.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.tags.ilike(f\"%{word}%\"))\n-            filters.append(DSMetaData.tags.ilike(f\"%{word}%\"))\n-\n-        datasets = (\n-            self.model.query\n-            .join(DataSet.ds_meta_data)\n-            .join(DSMetaData.authors)\n-            .join(DataSet.feature_models)\n-            .join(FeatureModel.fm_meta_data)\n-            .join(FeatureModel.files)\n-            .filter(or_(*filters))\n-            .filter(DSMetaData.dataset_doi.isnot(None))  # Exclude datasets with empty dataset_doi\n-        )\n+        # Crear un alias para `ds_meta_data` para evitar conflictos de alias.\n+        ds_meta_data_alias = aliased(DSMetaData)\n+        author_meta_data_alias = aliased(DSMetaData)  # Nuevo alias para la segunda uni\u00f3n\n+        min_size_filter = None\n+        max_size_filter = None\n \n+        # Inicia la consulta, usando el alias en la uni\u00f3n\n+        query = db.session.query(DataSet).join(ds_meta_data_alias, DataSet.ds_meta_data)\n+\n+        # Filtrar por tipo de publicaci\u00f3n\n         if publication_type != \"any\":\n             matching_type = None\n             for member in PublicationType:\n                 if member.value.lower() == publication_type:\n                     matching_type = member\n                     break\n-\n             if matching_type is not None:\n-                datasets = datasets.filter(DSMetaData.publication_type == matching_type.name)\n-\n-        if tags:\n-            datasets = datasets.filter(DSMetaData.tags.ilike(any_(f\"%{tag}%\" for tag in tags)))\n+                query = query.filter(ds_meta_data_alias.publication_type == matching_type.name)\n+\n+        # Procesar el filtro de `query_string`\n+        query_filter = query_string.strip()\n+\n+        # Filtrar por autor\n+        if query_filter.startswith('author:'):\n+            author_filter = query_filter[7:].strip()\n+            query = query.join(author_meta_data_alias).join(Author).filter(Author.name.ilike(f'%{author_filter}%'))\n+\n+        # Filtrar por tama\u00f1o m\u00ednimo\n+        elif query_filter.startswith('min_size:'):\n+            try:\n+                min_size_filter = int(query_filter[9:].strip())\n+            except ValueError:\n+                min_size_filter = None\n+\n+        # Filtrar por tama\u00f1o m\u00e1ximo\n+        elif query_filter.startswith('max_size:'):\n+            try:\n+                max_size_filter = int(query_filter[9:].strip())\n+            except ValueError:\n+                max_size_filter = None\n+\n+        # Filtrar por etiquetas\n+        elif query_filter.startswith('tags:'):\n+            tags_filter = query_filter[5:].strip()\n+            query = query.filter(ds_meta_data_alias.tags.ilike(f'%{tags_filter}%'))\n+\n+        # Filtrar por t\u00edtulo o tag(consulta general)\n+        else:\n+            query = query.filter(\n+                or_(\n+                    ds_meta_data_alias.title.ilike(f\"%{query_filter}%\"),\n+                    ds_meta_data_alias.tags.ilike(f\"%{query_filter}%\")\n+                )\n+            )\n \n         date_format = '%Y-%m-%d'\n         if start_date:\n             date_obj = safe_parse_date(start_date, date_format)\n-            datasets = datasets.filter(func.date(DataSet.created_at) >= date_obj)\n+            query = query.filter(func.date(DataSet.created_at) >= date_obj)\n \n         if end_date:\n             date_obj = safe_parse_date(end_date, date_format)\n-            datasets = datasets.filter(func.date(DataSet.created_at) <= date_obj)\n+            query = query.filter(func.date(DataSet.created_at) <= date_obj)\n+\n+        # Realizamos la uni\u00f3n con Hubfile a trav\u00e9s de FeatureModel\n+        query = query.join(FeatureModel, FeatureModel.data_set_id == DataSet.id)  # Uni\u00f3n con FeatureModel\n+        query = query.join(Hubfile, Hubfile.feature_model_id == FeatureModel.id)  # Uni\u00f3n con Hubfile\n \n         if min_uvl.isdigit():\n-            datasets = datasets.group_by(DataSet.id).having(func.count(Hubfile.id) >= int(min_uvl))\n+            query = query.group_by(DataSet.id).having(func.count(Hubfile.id) >= int(min_uvl))\n \n         if max_uvl.isdigit():\n-            datasets = datasets.group_by(DataSet.id).having(func.count(Hubfile.id) <= int(max_uvl))\n+            query = query.group_by(DataSet.id).having(func.count(Hubfile.id) <= int(max_uvl))\n \n-        # Order by created_at\n+        # Ordenar resultados\n         if sorting == \"oldest\":\n-            datasets = datasets.order_by(self.model.created_at.asc())\n+            query = query.order_by(DataSet.created_at.asc())\n         else:\n-            datasets = datasets.order_by(self.model.created_at.desc())\n+            query = query.order_by(DataSet.created_at.desc())\n+\n+        # Ejecutar la consulta y obtener todos los resultados\n+        results = query.all()\n+\n+        # Filtrar por tama\u00f1o m\u00ednimo despu\u00e9s de obtener los resultados\n+        if min_size_filter is not None:\n+            results = [ds for ds in results if ds.get_file_total_size() >= min_size_filter]\n+\n+        # Filtrar por tama\u00f1o m\u00e1ximo despu\u00e9s de obtener los resultados\n+        if max_size_filter is not None:\n+            results = [ds for ds in results if ds.get_file_total_size() <= max_size_filter]\n \n-        return datasets.all()\n+        return results"
      },
      {
        "sha": "7ccc1fa16fcccc18409951a201d2f9be663844fb",
        "filename": "app/modules/explore/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fexplore%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fexplore%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Froutes.py?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -1,5 +1,4 @@\n from flask import render_template, request, jsonify\n-\n from app.modules.explore import explore_bp\n from app.modules.explore.forms import ExploreForm\n from app.modules.explore.services import ExploreService\n@@ -8,7 +7,7 @@\n @explore_bp.route('/explore', methods=['GET', 'POST'])\n def index():\n     if request.method == 'GET':\n-        query = request.args.get('query', '')\n+        query = request.args.get('query', '')  # Obtener la consulta desde la URL\n         form = ExploreForm()\n         return render_template('explore/index.html', form=form, query=query)\n "
      },
      {
        "sha": "3d1211f2cbcfd6fa7140592488aea11e8cda99d4",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -1,12 +1,11 @@\n from app.modules.explore.repositories import ExploreRepository\n-from core.services.BaseService import BaseService\n \n \n-class ExploreService(BaseService):\n+class ExploreService:\n     def __init__(self):\n-        super().__init__(ExploreRepository())\n+        self.repository = ExploreRepository()\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[],\n+    def filter(self, query: str, sorting=\"newest\", publication_type=\"any\",\n                start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", **kwargs):\n-        return self.repository.filter(query, sorting, publication_type, tags, start_date,\n+        return self.repository.filter(query, sorting, publication_type, start_date,\n                                       end_date, min_uvl, max_uvl, **kwargs)"
      },
      {
        "sha": "d52753555fe55d5de0bd23970d51aed2765c1aa9",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 52,
        "deletions": 17,
        "changes": 69,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -11,6 +11,8 @@\n from uvl.UVLCustomLexer import UVLCustomLexer\n from uvl.UVLPythonParser import UVLPythonParser\n from antlr4.error.ErrorListener import ErrorListener\n+from werkzeug.exceptions import NotFound\n+\n \n logger = logging.getLogger(__name__)\n \n@@ -76,42 +78,75 @@ def to_glencoe(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.json', delete=False)\n     try:\n         hubfile = HubfileService().get_or_404(file_id)\n-        fm = UVLReader(hubfile.get_path()).transform()\n-        GlencoeWriter(temp_file.name, fm).transform()\n-\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+        # Agrega un mensaje de depuraci\u00f3n\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+        fm1 = UVLReader(file_path).transform()\n+        GlencoeWriter(temp_file.name, fm1).transform()\n         # Return the file in the response\n-        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_glencoe.txt')\n-    finally:\n-        # Clean up the temporary file\n-        os.remove(temp_file.name)\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_glencoe.txt',\n+                         mimetype='text/plain')\n+    except NotFound as e:\n+        # Manejar el caso en que el archivo no se encuentra\n+        # Solo devolver el mensaje sin el \"404 Not Found\" al principio\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except Exception as e:\n+        # Manejar cualquier otro error inesperado\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n \n \n @flamapy_bp.route('/flamapy/to_splot/<int:file_id>', methods=['GET'])\n def to_splot(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.splx', delete=False)\n     try:\n         hubfile = HubfileService().get_by_id(file_id)\n-        fm = UVLReader(hubfile.get_path()).transform()\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n         SPLOTWriter(temp_file.name, fm).transform()\n \n         # Return the file in the response\n-        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_splot.txt')\n-    finally:\n-        # Clean up the temporary file\n-        os.remove(temp_file.name)\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_splot.txt',\n+                         mimetype='text/plain')\n+    except NotFound as e:\n+        # Manejar el caso en que el archivo no se encuentra\n+        # Solo devolver el mensaje sin el \"404 Not Found\" al principio\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except Exception as e:\n+        # Manejar cualquier otro error inesperado\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n \n \n @flamapy_bp.route('/flamapy/to_cnf/<int:file_id>', methods=['GET'])\n def to_cnf(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.cnf', delete=False)\n     try:\n         hubfile = HubfileService().get_by_id(file_id)\n-        fm = UVLReader(hubfile.get_path()).transform()\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n         sat = FmToPysat(fm).transform()\n         DimacsWriter(temp_file.name, sat).transform()\n \n         # Return the file in the response\n-        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_cnf.txt')\n-    finally:\n-        # Clean up the temporary file\n-        os.remove(temp_file.name)\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_cnf.txt',\n+                         mimetype='text/plain')\n+    except NotFound as e:\n+        # Manejar el caso en que el archivo no se encuentra\n+        # Solo devolver el mensaje sin el \"404 Not Found\" al principio\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except Exception as e:\n+        # Manejar cualquier otro error inesperado\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500"
      },
      {
        "sha": "b94fd64147b6e112e958e67e6bd8310e4557cce1",
        "filename": "app/modules/hubfile/routes.py",
        "status": "modified",
        "additions": 41,
        "deletions": 33,
        "changes": 74,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fhubfile%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fhubfile%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fhubfile%2Froutes.py?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -1,52 +1,60 @@\n from datetime import datetime, timezone\n import os\n import uuid\n-from flask import current_app, jsonify, make_response, request, send_from_directory\n+from flask import current_app, jsonify, make_response, request, send_from_directory, abort\n from flask_login import current_user\n from app.modules.hubfile import hubfile_bp\n from app.modules.hubfile.models import HubfileDownloadRecord, HubfileViewRecord\n from app.modules.hubfile.services import HubfileDownloadRecordService, HubfileService\n-\n from app import db\n+import traceback\n \n \n @hubfile_bp.route(\"/file/download/<int:file_id>\", methods=[\"GET\"])\n def download_file(file_id):\n-    file = HubfileService().get_or_404(file_id)\n-    filename = file.name\n-\n-    directory_path = f\"uploads/user_{file.feature_model.data_set.user_id}/dataset_{file.feature_model.data_set_id}/\"\n-    parent_directory_path = os.path.dirname(current_app.root_path)\n-    file_path = os.path.join(parent_directory_path, directory_path)\n-\n-    # Get the cookie from the request or generate a new one if it does not exist\n-    user_cookie = request.cookies.get(\"file_download_cookie\")\n-    if not user_cookie:\n-        user_cookie = str(uuid.uuid4())\n-\n-    # Check if the download record already exists for this cookie\n-    existing_record = HubfileDownloadRecord.query.filter_by(\n-        user_id=current_user.id if current_user.is_authenticated else None,\n-        file_id=file_id,\n-        download_cookie=user_cookie\n-    ).first()\n-\n-    if not existing_record:\n-        # Record the download in your database\n-        HubfileDownloadRecordService().create(\n+    try:\n+        # Intentamos obtener el archivo del servicio\n+        file = HubfileService().get_or_404(file_id)\n+        # Configuraci\u00f3n de la ruta de descarga\n+        filename = file.name\n+        directory_path = \"app/modules/dataset/uvl_examples/\"\n+        parent_directory_path = os.path.dirname(current_app.root_path)\n+        file_path = os.path.join(parent_directory_path, directory_path)\n+\n+        # Verifica si el archivo existe\n+        if not os.path.exists(file_path):\n+            abort(404)\n+\n+        # Si el archivo existe, proceder con el proceso de descarga\n+        user_cookie = request.cookies.get(\"file_download_cookie\", str(uuid.uuid4()))\n+        existing_record = HubfileDownloadRecord.query.filter_by(\n             user_id=current_user.id if current_user.is_authenticated else None,\n             file_id=file_id,\n-            download_date=datetime.now(timezone.utc),\n-            download_cookie=user_cookie,\n-        )\n+            download_cookie=user_cookie\n+        ).first()\n+\n+        if not existing_record:\n+            HubfileDownloadRecordService().create(\n+                user_id=current_user.id if current_user.is_authenticated else None,\n+                file_id=file_id,\n+                download_date=datetime.now(timezone.utc),\n+                download_cookie=user_cookie,\n+            )\n \n-    # Save the cookie to the user's browser\n-    resp = make_response(\n-        send_from_directory(directory=file_path, path=filename, as_attachment=True)\n-    )\n-    resp.set_cookie(\"file_download_cookie\", user_cookie)\n+        resp = make_response(\n+            send_from_directory(directory=file_path, path=filename, as_attachment=True)\n+        )\n+        resp.set_cookie(\"file_download_cookie\", user_cookie)\n+        return resp\n \n-    return resp\n+    except Exception as e:\n+        # Si ocurre un error, capturamos la excepci\u00f3n y devolvemos 500\n+        current_app.logger.error(f\"Error inesperado al intentar descargar el archivo: {e}\")\n+        current_app.logger.error(traceback.format_exc())  # Esto imprime el traceback completo para mayor claridad\n+        return jsonify({\n+            \"error\": \"An unexpected error occurred\",\n+            \"message\": str(e)\n+        }), 500\n \n \n @hubfile_bp.route('/file/view/<int:file_id>', methods=['GET'])"
      },
      {
        "sha": "5f6e2ebcb454c7943b73bc67f8274eb02640951e",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 66,
        "deletions": 3,
        "changes": 69,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -83,7 +83,19 @@ <h2>\n                             </div>\n \n                         </div>\n-\n+                        <div class=\"row mb-2\">\n+                            <div class =\"col-md-4 col-12\">\n+                                <span class=\"text-center\">Rating</span>\n+                            </div>\n+                            <div class=\"col-md-8 col-12 d-flex align-items-center\">\n+                                <div id=\"star-rating-{{ dataset.id}}\" class=\"stars\" style=\"color: gold;\">\n+                                    {% for i in range(1,6) %}\n+                                    <span data-value=\"{{ i }}\">*</span>\n+                                    {% endfor %}\n+                                </div>\n+                                <span id=\"advange-rating-{{ dataset.id }}\" class=\"ms-2\"></span>\n+                            </div>\n+                        </div>\n                         <div class=\"row  mt-4\">\n                             <div class=\"col-12\">\n                                 <a href=\"{{ dataset.get_uvlhub_doi() }}\" class=\"btn btn-outline-primary btn-sm\"\n@@ -282,5 +294,56 @@ <h2 class=\"card-title card-title-light\">\n {% endblock %}\n \n {% block scripts %}\n-    <script src=\"{{ url_for('public.scripts') }}\"></script>\n-{% endblock %}\n\\ No newline at end of file\n+\n+<script>\n+    document.addEventListener('DOMContentLoaded', function () {\n+        // Generar una lista de IDs en Jinja\n+        const datasetIds = {{ datasets|map(attribute='id')|list|default([])|tojson }};\n+        \n+        // Validar que la lista no est\u00e9 vac\u00eda antes de iterar\n+        if (Array.isArray(datasetIds) && datasetIds.length > 0) {\n+            datasetIds.forEach(datasetId => {\n+                updateAverageRating(datasetId);\n+            });\n+        } else {\n+            console.warn('No datasets found to update ratings.');\n+        }\n+    });\n+        \n+    function updateAverageRating(datasetId) {\n+        fetch(`/datasets/${datasetId}/average-rating`)\n+            .then(response => {\n+                if (!response.ok) {\n+                    throw new Error('Network response was not ok');\n+                }\n+                return response.json();\n+            })\n+            .then(data => {\n+                // Redondear el valor de la calificaci\u00f3n promedio\n+                const ratingValue = data.average_rating.toFixed(1);\n+\n+                // Actualizar el texto del promedio\n+                const ratingElement = document.getElementById('average-rating-' + datasetId);\n+                if (ratingElement) {\n+                    ratingElement.innerText = ratingValue;\n+                }\n+\n+                // Actualizar el color de las estrellas\n+                const starContainer = document.getElementById('star-rating-' + datasetId);\n+                if (starContainer) {\n+                    highlightStars(starContainer, Math.round(data.average_rating));\n+                }\n+            })\n+            .catch(error => console.error('Error fetching average rating:', error));\n+    }\n+\n+    function highlightStars(container, rating) {\n+        container.querySelectorAll('span').forEach(star => {\n+            const starValue = parseInt(star.getAttribute('data-value'), 10);\n+            star.style.color = starValue <= rating ? '#FFD700' : '#ddd'; // Cambia el color de la estrella\n+        });\n+    }\n+</script>\n+\n+<script src=\"{{ url_for('public.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "92cd836ca2e0107780723d8d6a5d2bd1c7050f8c",
        "filename": "migrations/versions/1494406ec4a6_.py",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/433943f6ca37b7a75af00ebb39b3355f189f3bcd/migrations%2Fversions%2F1494406ec4a6_.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/433943f6ca37b7a75af00ebb39b3355f189f3bcd/migrations%2Fversions%2F1494406ec4a6_.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F1494406ec4a6_.py?ref=433943f6ca37b7a75af00ebb39b3355f189f3bcd",
        "patch": "@@ -0,0 +1,55 @@\n+\"\"\"empty message\n+\n+Revision ID: 1494406ec4a6\n+Revises: 001\n+Create Date: 2024-11-21 17:49:45.388810\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+from sqlalchemy.dialects import mysql\n+\n+# revision identifiers, used by Alembic.\n+revision = '1494406ec4a6'\n+down_revision = '001'\n+branch_labels = None\n+depends_on = None\n+\n+\n+def upgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.create_table('ds_rating',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=False),\n+    sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n+    sa.Column('rating', sa.Float(), nullable=False),\n+    sa.Column('rated_date', sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.drop_table('notepad')\n+    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n+        batch_op.add_column(sa.Column('rating', sa.Float(), nullable=True))\n+\n+    # ### end Alembic commands ###\n+\n+\n+def downgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n+        batch_op.drop_column('rating')\n+\n+    op.create_table('notepad',\n+    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),\n+    sa.Column('title', mysql.VARCHAR(length=256), nullable=False),\n+    sa.Column('body', mysql.TEXT(), nullable=False),\n+    sa.Column('user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='notepad_ibfk_1'),\n+    sa.PrimaryKeyConstraint('id'),\n+    mysql_collate='utf8mb4_general_ci',\n+    mysql_default_charset='utf8mb4',\n+    mysql_engine='InnoDB'\n+    )\n+    op.drop_table('ds_rating')\n+    # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/37",
    "id": 2193304402,
    "node_id": "PR_kwDONB39G86CuytS",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/37",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/37.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/37.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/37",
    "number": 37,
    "state": "closed",
    "locked": false,
    "title": "Test",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-21T21:35:48Z",
    "updated_at": "2024-11-21T21:39:05Z",
    "closed_at": "2024-11-21T21:36:06Z",
    "merged_at": null,
    "merge_commit_sha": "b4c6bcb66837b2b085945df264eaa10f4989cd58",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/37/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/37/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/37/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
    "head": {
      "label": "TostaHub:test",
      "ref": "test",
      "sha": "0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "d282d62e9cec5f6f6c392b9dcccc31b926e2ed96",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/37"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/37"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/37"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/37/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/37/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/37/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/0451c54be5082f62ada0b9e358479cf9b4e4cfc9"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "80dfdef38ad149303a93a2b321b24f8c8eaeaa00",
        "filename": "app/modules/dataset/models.py",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Fmodels.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fmodels.py?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -58,6 +58,7 @@ class DSMetaData(db.Model):\n     id = db.Column(db.Integer, primary_key=True)\n     deposition_id = db.Column(db.Integer)\n     title = db.Column(db.String(120), nullable=False)\n+    rating = db.Column(db.Float, default=0.0)\n     description = db.Column(db.Text, nullable=False)\n     publication_type = db.Column(SQLAlchemyEnum(PublicationType), nullable=False)\n     publication_doi = db.Column(db.String(120))\n@@ -67,6 +68,12 @@ class DSMetaData(db.Model):\n     ds_metrics = db.relationship('DSMetrics', uselist=False, backref='ds_meta_data', cascade=\"all, delete\")\n     authors = db.relationship('Author', backref='ds_meta_data', lazy=True, cascade=\"all, delete\")\n \n+    def update_rating(self):\n+        total_ratings = sum(rating.rating for rating in self.ratings)\n+        count = len(self.ratings)\n+        self.rating = total_ratings / count if count > 0 else 0\n+        db.session.commit()\n+\n \n class DataSet(db.Model):\n     id = db.Column(db.Integer, primary_key=True)\n@@ -111,6 +118,7 @@ def get_uvlhub_doi(self):\n     def to_dict(self):\n         return {\n             'title': self.ds_meta_data.title,\n+            'rating': self.ds_meta_data.rating,\n             'id': self.id,\n             'created_at': self.created_at,\n             'created_at_timestamp': int(self.created_at.timestamp()),\n@@ -164,3 +172,22 @@ class DOIMapping(db.Model):\n     id = db.Column(db.Integer, primary_key=True)\n     dataset_doi_old = db.Column(db.String(120))\n     dataset_doi_new = db.Column(db.String(120))\n+\n+\n+class DSRating(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)\n+    ds_meta_data_id = db.Column(db.Integer, db.ForeignKey('ds_meta_data.id'), nullable=False)\n+    rating = db.Column(db.Float, default=0, nullable=False)\n+    rated_date = db.Column(db.DateTime, nullable=False, default=datetime.utcnow)\n+\n+    ds_meta_data = db.relationship('DSMetaData', backref=db.backref('ratings', lazy=True))\n+\n+    def to_dict(self):\n+        return {\n+            'id': self.id,\n+            'user_id': self.user_id,\n+            'ds_meta_data_id': self.ds_meta_data_id,\n+            'rating': self.rating,\n+            'rated_date': self.rated_date\n+        }"
      },
      {
        "sha": "f97463f94bef21226ba1be320172d15c9189191b",
        "filename": "app/modules/dataset/repositories.py",
        "status": "modified",
        "additions": 18,
        "deletions": 1,
        "changes": 19,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -11,7 +11,8 @@\n     DSDownloadRecord,\n     DSMetaData,\n     DSViewRecord,\n-    DataSet\n+    DataSet,\n+    DSRating\n )\n from core.repositories.BaseRepository import BaseRepository\n \n@@ -121,3 +122,19 @@ def __init__(self):\n \n     def get_new_doi(self, old_doi: str) -> str:\n         return self.model.query.filter_by(dataset_doi_old=old_doi).first()\n+\n+\n+class DSRatingRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(DSRating)\n+\n+    def get_user_rating(self, ds_meta_data_id: int, user_id: int) -> Optional[DSRating]:\n+        return self.model.query.filter(DSRating.ds_meta_data_id == ds_meta_data_id, DSRating.user_id == user_id).first()\n+\n+    def get_average_rating(self, ds_meta_data_id: int) -> float:\n+        average = self.model.query.filter(\n+            (DSRating.ds_meta_data_id == ds_meta_data_id).with_entities(func.avg(DSRating.rating)).scalar())\n+        return average if average else 0.0\n+\n+    def count_ratings(self, ds_meta_data_id: int) -> int:\n+        return self.model.query.filter(DSRating.ds_meta_data_id == ds_meta_data_id).count()"
      },
      {
        "sha": "e9faaa440465181a5338792b3f0a61d363fdc1dd",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -118,6 +118,15 @@ def list_dataset():\n     )\n \n \n+@dataset_bp.route(\"/dataset/user_id/<int:user_id>\", methods=[\"GET\"])\n+def user_dataset(user_id):\n+    return render_template(\n+        \"dataset/user_datasets.html\",\n+        datasets=dataset_service.get_synchronized(user_id),\n+        local_datasets=dataset_service.get_unsynchronized(user_id),\n+    )\n+\n+\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():"
      },
      {
        "sha": "c2676ccf985c29fb503894161469ef6b8150c07a",
        "filename": "app/modules/dataset/services.py",
        "status": "modified",
        "additions": 32,
        "deletions": 2,
        "changes": 34,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fservices.py?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -8,14 +8,15 @@\n from flask import request\n \n from app.modules.auth.services import AuthenticationService\n-from app.modules.dataset.models import DSViewRecord, DataSet, DSMetaData\n+from app.modules.dataset.models import DSViewRecord, DataSet, DSMetaData, DSRating\n from app.modules.dataset.repositories import (\n     AuthorRepository,\n     DOIMappingRepository,\n     DSDownloadRecordRepository,\n     DSMetaDataRepository,\n     DSViewRecordRepository,\n-    DataSetRepository\n+    DataSetRepository,\n+    DSRatingRepository,\n )\n from app.modules.featuremodel.repositories import FMMetaDataRepository, FeatureModelRepository\n from app.modules.hubfile.repositories import (\n@@ -47,6 +48,7 @@ def __init__(self):\n         self.hubfiledownloadrecord_repository = HubfileDownloadRecordRepository()\n         self.hubfilerepository = HubfileRepository()\n         self.dsviewrecord_repostory = DSViewRecordRepository()\n+        self.dsrating_repository = DSRatingRepository()\n         self.hubfileviewrecord_repository = HubfileViewRecordRepository()\n \n     def move_feature_models(self, dataset: DataSet):\n@@ -198,6 +200,34 @@ def get_new_doi(self, old_doi: str) -> str:\n             return None\n \n \n+class DSRatingService(BaseService):\n+    def __init__(self):\n+        super().__init__(DSRatingRepository())\n+\n+    def add_or_update_rating(self, dsmetadata_id: int, user_id: int, rating_value: int) -> DSRating:\n+        rating = self.repository.get_user_rating(dsmetadata_id, user_id)\n+        if rating:\n+            print(\"Actualizando rating a {rating_value}\")\n+            rating.rating = rating_value\n+        else:\n+            print(\"Valor de rating en el servicio:\", rating_value)\n+            rating = self.repository.create(\n+             commit=False,\n+             ds_meta_data_id=dsmetadata_id,\n+             user_id=user_id,\n+             rating=rating_value\n+            )\n+            print(\"Valor de rating en el servicio:\", rating.rating)\n+        self.repository.session.commit()\n+        return rating\n+\n+    def get_dataset_average_rating(self, dsmetadata_id: int) -> float:\n+        return self.repository.get_average_rating(dsmetadata_id)\n+\n+    def get_total_ratings(self, dsmetadata_id: int) -> int:\n+        return self.repository.count_ratings(dsmetadata_id)\n+\n+\n class SizeService():\n \n     def __init__(self):"
      },
      {
        "sha": "79672bd9ab698dd103fcd5dadca68a7fa3924916",
        "filename": "app/modules/dataset/templates/dataset/list_datasets.html",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -18,6 +18,7 @@ <h1 class=\"h3 mb-3\">My datasets</h1>\n                             <th>Description</th>\n                             <th>Publication type</th>\n                             <th>Dataset DOI</th>\n+                            <th>Rating</th>\n                             <th>Options</th>\n                         </tr>\n                         </thead>\n@@ -33,6 +34,14 @@ <h1 class=\"h3 mb-3\">My datasets</h1>\n                                 <td>{{ dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n                                 <td><a href=\"{{ dataset.get_uvlhub_doi() }}\"\n                                        target=\"_blank\">{{ dataset.get_uvlhub_doi() }}</a></td>\n+                                <td>\n+                                    <div id=\"star-rating-{{ dataset.id }}\" style=\"color: gold; display: inline-block;\">\n+                                        {% for i in range(1, 6) %}\n+                                            <span data-value=\"{{ i }}\" style=\"font-size: 1.5rem;\">\u2605</span>\n+                                        {% endfor %}\n+                                    </div>\n+                                    <span id=\"average-rating-{{ dataset.id }}\" class=\"ms-2\">-</span>/5\n+                                </td>\n                                 <td>\n                                     <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n                                         <i data-feather=\"eye\"></i>\n@@ -41,6 +50,7 @@ <h1 class=\"h3 mb-3\">My datasets</h1>\n                                         <i data-feather=\"download\"></i>\n                                     </a>\n                                 </td>\n+                                </td>\n                             </tr>\n                         {% endfor %}\n                         </tbody>\n@@ -115,4 +125,33 @@ <h5 class=\"card-title\">Unsynchronized datasets</h5>\n             {% endif %}\n         </div>\n \n+\n+<script>\n+    document.addEventListener('DOMContentLoaded', function () {\n+        {% for dataset in datasets %}\n+            updateAverageRating({{ dataset.id }});\n+        {% endfor %}\n+\n+        // Funci\u00f3n para actualizar el promedio de calificaci\u00f3n en el frontend\n+        function updateAverageRating(datasetId) {\n+            fetch(`/datasets/${datasetId}/average-rating`)\n+            .then(response => response.json())\n+            .then(data => {\n+                const averageRating = data.average_rating.toFixed(1);\n+                document.getElementById('average-rating-' + datasetId).innerText = averageRating;\n+\n+                // Resaltar estrellas seg\u00fan el promedio de calificaci\u00f3n\n+                const starRatingContainer = document.getElementById('star-rating-' + datasetId);\n+                starRatingContainer.querySelectorAll('span').forEach(star => {\n+                    const starValue = parseInt(star.getAttribute('data-value'));\n+                    star.style.color = starValue <= Math.round(averageRating) ? '#FFD700' : '#ddd';\n+                });\n+            })\n+            .catch(error => console.error('Error fetching average rating:', error));\n+        }\n+    });\n+</script>\n+\n+\n {% endblock %}\n+"
      },
      {
        "sha": "1ebff4ffec038ee1e22e00bb0eac925580d8eb15",
        "filename": "app/modules/dataset/templates/dataset/user_datasets.html",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -0,0 +1,118 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}My datasets{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h3 mb-3\">Datasets de {{ datasets[0].user.profile.name }} {{ datasets[0].user.profile.surname }}</h1>\n+\n+    {% if datasets %}\n+        <div class=\" col-12\">\n+            <div class=\"card\">\n+\n+                <div class=\"card-body\">\n+                    <table class=\"table\">\n+                        <thead>\n+                        <tr>\n+                            <th>Title</th>\n+                            <th>Description</th>\n+                            <th>Publication type</th>\n+                            <th>Dataset DOI</th>\n+                            <th>Options</th>\n+                        </tr>\n+                        </thead>\n+                        <tbody>\n+                        {% for dataset in datasets %}\n+                            <tr>\n+                                <td>\n+                                    <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                        {{ dataset.ds_meta_data.title }}\n+                                    </a>\n+                                </td>\n+                                <td>{{ dataset.ds_meta_data.description }}</td>\n+                                <td>{{ dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n+                                <td><a href=\"{{ dataset.get_uvlhub_doi() }}\"\n+                                       target=\"_blank\">{{ dataset.get_uvlhub_doi() }}</a></td>\n+                                <td>\n+                                    <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                        <i data-feather=\"eye\"></i>\n+                                    </a>\n+                                    <a href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">\n+                                        <i data-feather=\"download\"></i>\n+                                    </a>\n+                                </td>\n+                            </tr>\n+                        {% endfor %}\n+                        </tbody>\n+                    </table>\n+                </div>\n+\n+            </div>\n+\n+        </div>\n+    {% else %}\n+        <div class=\"col-12 col-md-6\">\n+            <div class=\"card\">\n+                <div class=\"card-header\">\n+                    <h5 class=\"card-title mb-0\">No datasets found</h5>\n+                </div>\n+                <div class=\"card-body\">\n+                    <p class=\"card-text\">\n+                        You have not created any dataset synchronized with Zenodo, are you up for it?\n+                    </p>\n+                    <a href=\"{{ url_for('dataset.create_dataset') }}\" class=\"btn btn-primary\">\n+                        Upload dataset</a>\n+                </div>\n+            </div>\n+        </div>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+\n+        <div class=\"col-12\">\n+            {% if local_datasets %}\n+                <div class=\"card\">\n+                    <div class=\"card-body\">\n+                        <div class=\"card-header\">\n+                            <h5 class=\"card-title\">Unsynchronized datasets</h5>\n+                        </div>\n+                        <div class=\"card-body\">\n+                            <table class=\"table\">\n+                                <thead>\n+                                <tr>\n+                                    <th>Title</th>\n+                                    <th>Description</th>\n+                                    <th>Publication type</th>\n+                                    <th>Options</th>\n+                                </tr>\n+                                </thead>\n+                                <tbody>\n+                                {% for local_dataset in local_datasets %}\n+                                    <tr>\n+                                        <td>\n+                                            <a href=\"{{ url_for('dataset.get_unsynchronized_dataset', dataset_id=local_dataset.id) }}\">\n+                                                {{ local_dataset.ds_meta_data.title }}\n+                                            </a>\n+                                        </td>\n+                                        <td>{{ local_dataset.ds_meta_data.description }}</td>\n+                                        <td>{{ local_dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n+                                        <td>\n+                                            <a href=\"{{ url_for('dataset.get_unsynchronized_dataset', dataset_id=local_dataset.id) }}\">\n+                                                <i data-feather=\"eye\"></i>\n+                                            </a>\n+                                            <a href=\"{{ url_for('dataset.download_dataset', dataset_id=local_dataset.id) }}\">\n+                                                <i data-feather=\"download\"></i>\n+                                            </a>\n+                                        </td>\n+                                    </tr>\n+                                {% endfor %}\n+                                </tbody>\n+                            </table>\n+                        </div>\n+                    </div>\n+                </div>\n+            {% endif %}\n+        </div>\n+\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "eddf8bb7942593f5d367fdcb574dc71e43522f1b",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -63,8 +63,13 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                             Uploaded by\n                         </span>\n                     </div>\n-                    <div class=\"col-md-8 col-12\">\n+                    <!-- #region div class=\"col-md-8 col-12\">\n                         <a href=\"#\">{{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}</a>\n+                    </div>-->\n+                    <div class=\"col-md-8 col-12\">\n+                        <a href=\"/dataset/user_id/{{ dataset.user.id }}\">\n+                            {{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}\n+                        </a>\n                     </div>\n \n                 </div>"
      },
      {
        "sha": "e7dc228ca50072429be948630add20d0fd086540",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 147,
        "deletions": 1,
        "changes": 148,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -3,6 +3,8 @@ document.addEventListener('DOMContentLoaded', () => {\n });\n \n function send_query() {\n+    setInitialNumUvlFilterMaxMin()\n+    setInitialDatesMaxMin()\n \n     console.log(\"send query...\")\n \n@@ -16,10 +18,24 @@ function send_query() {\n         filter.addEventListener('input', () => {\n             const csrfToken = document.getElementById('csrf_token').value;\n \n+            const startDate = document.querySelector('#start_date');\n+            const endDate = document.querySelector('#end_date');\n+            \n+            setDatesMaxMin(filter, startDate, endDate);\n+\n+            const minUvl = document.querySelector('#min_uvl');\n+            const maxUvl = document.querySelector('#max_uvl');\n+            \n+            setNumUvlFilterMaxMin(filter, minUvl, maxUvl);\n+\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n                 publication_type: document.querySelector('#publication_type').value,\n+                start_date: startDate.value,\n+                end_date: endDate.value,\n+                min_uvl: minUvl.value,\n+                max_uvl: maxUvl.value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n             };\n \n@@ -104,6 +120,17 @@ function send_query() {\n                                             ${dataset.tags.map(tag => `<span class=\"badge bg-primary me-1\" style=\"cursor: pointer;\" onclick=\"set_tag_as_query('${tag}')\">${tag}</span>`).join('')}\n                                         </div>\n \n+                                    </div>\n+                                                <div class=\"row mb-2\">\n+                                        <div class=\"col-md-4 col-12\">\n+                                            <span class=\"text-secondary\">Rating</span>\n+                                        </div>\n+                                        <div class=\"col-md-8 col-12 d-flex align-items-center\">\n+                                            <div id=\"star-rating-${dataset.id}\" class=\"stars\" style=\"color: gold;\">\n+                                                ${'<span data-value=\"1\">\u2605</span>'.repeat(5)} <!-- Estrellas para interacci\u00f3n -->\n+                                            </div>\n+                                                <span id=\"average-rating-${dataset.id}\" class=\"ms-2\">-</span> <!-- Valor inicial vac\u00edo -->\n+                                        </div>\n                                     </div>\n \n                                     <div class=\"row\">\n@@ -130,10 +157,90 @@ function send_query() {\n                         document.getElementById('results').appendChild(card);\n                     });\n                 });\n+                updateAverageRating(dataset.id)\n         });\n     });\n }\n \n+function setInitialDatesMaxMin() {\n+    const startDateInput = document.querySelector('#start_date');\n+    const endDateInput = document.querySelector('#end_date');\n+    const today = new Date();\n+\n+    const startDate = new Date(startDateInput.value);\n+    if (!isNaN(startDate)) {\n+        const date = today > startDate ? startDate : today\n+        endDateInput.min = dateToString(date);\n+    } else {\n+        endDateInput.min = \"\"\n+    }\n+\n+    const endDate = new Date(endDateInput.value);\n+    if (!isNaN(endDate)) {\n+        const date = today > endDate ? endDate : today\n+        startDateInput.max = dateToString(date);    \n+    } else {\n+        startDateInput.max = dateToString(today);\n+    }\n+}\n+\n+function setDatesMaxMin(filter, startDateInput, endDateInput) {\n+    if (filter.id === startDateInput.id) {\n+        const startDate = new Date(startDateInput.value);\n+        if (isNaN(startDate)) {\n+            endDateInput.min = \"\";\n+        } else {\n+            endDateInput.min = dateToString(startDate);\n+        }\n+    } else if (filter.id === endDateInput.id) {\n+        const endDate = new Date(endDateInput.value);\n+        const today = new Date();\n+        if (isNaN(endDate)) {\n+            startDateInput.max = dateToString(today);\n+        } else {\n+            const date = today > endDate ? endDate : today\n+            startDateInput.max = dateToString(date);\n+        }\n+    }\n+}\n+\n+function dateToString(date) {\n+    return date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\n+}\n+\n+function setInitialNumUvlFilterMaxMin() {\n+    const minUvl = document.querySelector('#min_uvl');\n+    const maxUvl = document.querySelector('#max_uvl');\n+\n+    const numMin = parseInt(minUvl.value);\n+    if (!isNaN(numMin)) {\n+        maxUvl.min = numMin\n+    }\n+\n+    const numMax = parseInt(maxUvl.value);\n+    if (!isNaN(numMax)) {\n+        minUvl.max = numMax\n+    }\n+}\n+\n+function setNumUvlFilterMaxMin(filter, minUvl, maxUvl) {\n+    if (filter.id === minUvl.id) {\n+        const num = parseInt(minUvl.value);\n+        if (isNaN(num)) {\n+            maxUvl.min = 0;\n+        } else {\n+            maxUvl.min = num;\n+        }\n+    } else if (filter.id === maxUvl.id) {\n+        const num = parseInt(maxUvl.value);\n+        if (isNaN(num)) {\n+            minUvl.max = \"\"; // We suppose that more than this value is not feasible\n+        } else {\n+            minUvl.max = num;\n+        }\n+    } \n+}\n+\n function formatDate(dateString) {\n     const options = {day: 'numeric', month: 'long', year: 'numeric', hour: 'numeric', minute: 'numeric'};\n     const date = new Date(dateString);\n@@ -172,6 +279,20 @@ function clearFilters() {\n     publicationTypeSelect.value = \"any\"; // replace \"any\" with whatever your default value is\n     // publicationTypeSelect.dispatchEvent(new Event('input', {bubbles: true}));\n \n+    // Reset the dates to none\n+    let startDateInput = document.querySelector('#start_date');\n+    startDateInput.value = \"\";\n+\n+    let endDateInput = document.querySelector('#end_date');\n+    endDateInput.value = \"\";\n+    \n+    // Reset the number of uvl models filters\n+    let minUvlInput = document.querySelector('#min_uvl');\n+    minUvlInput.value = \"\";\n+\n+    let maxUvlInput = document.querySelector('#max_uvl');\n+    maxUvlInput.value = \"\";\n+    \n     // Reset the sorting option\n     let sortingOptions = document.querySelectorAll('[name=\"sorting\"]');\n     sortingOptions.forEach(option => {\n@@ -181,6 +302,9 @@ function clearFilters() {\n \n     // Perform a new search with the reset filters\n     queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n+\n+    setInitialNumUvlFilterMaxMin()\n+    setInitialDatesMaxMin()\n }\n \n document.addEventListener('DOMContentLoaded', () => {\n@@ -202,4 +326,26 @@ document.addEventListener('DOMContentLoaded', () => {\n         const queryInput = document.getElementById('query');\n         queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n     }\n-});\n\\ No newline at end of file\n+});\n+\n+\n+function updateAverageRating(datasetId) {\n+    fetch(`/datasets/${datasetId}/average-rating`)\n+        .then(response => response.json())\n+        .then(data => {\n+            const ratingValue = data.average_rating.toFixed(1);\n+            document.getElementById('average-rating-' + datasetId).innerText = ratingValue;\n+\n+            // Resaltar el n\u00famero correcto de estrellas en amarillo\n+            const starContainer = document.getElementById('star-rating-' + datasetId);\n+            highlightStars(starContainer, Math.round(data.average_rating));\n+        })\n+        .catch(error => console.error('Error fetching average rating:', error));\n+}\n+\n+function highlightStars(container, rating) {\n+    container.querySelectorAll('span').forEach(star => {\n+        const starValue = star.getAttribute('data-value');\n+        star.style.color = starValue <= rating ? '#FFD700' : '#ddd'; // Estrellas doradas seg\u00fan el rating\n+    });\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "b5bea1307c2866669f07774888159a78f361001d",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 29,
        "deletions": 2,
        "changes": 31,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -1,16 +1,27 @@\n import re\n-from sqlalchemy import any_, or_\n+from sqlalchemy import any_, or_, func\n import unidecode\n from app.modules.dataset.models import Author, DSMetaData, DataSet, PublicationType\n from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from app.modules.hubfile.models import Hubfile\n from core.repositories.BaseRepository import BaseRepository\n+from datetime import datetime\n+\n+\n+def safe_parse_date(date, date_format, default_date=None):\n+    try:\n+        return datetime.strptime(date, date_format)\n+    except ValueError:\n+        return default_date\n \n \n class ExploreRepository(BaseRepository):\n     def __init__(self):\n         super().__init__(DataSet)\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n+    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[],\n+               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", **kwargs):\n+\n         # Normalize and remove unwanted characters\n         normalized_query = unidecode.unidecode(query).lower()\n         cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n@@ -35,6 +46,7 @@ def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **\n             .join(DSMetaData.authors)\n             .join(DataSet.feature_models)\n             .join(FeatureModel.fm_meta_data)\n+            .join(FeatureModel.files)\n             .filter(or_(*filters))\n             .filter(DSMetaData.dataset_doi.isnot(None))  # Exclude datasets with empty dataset_doi\n         )\n@@ -52,6 +64,21 @@ def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **\n         if tags:\n             datasets = datasets.filter(DSMetaData.tags.ilike(any_(f\"%{tag}%\" for tag in tags)))\n \n+        date_format = '%Y-%m-%d'\n+        if start_date:\n+            date_obj = safe_parse_date(start_date, date_format)\n+            datasets = datasets.filter(func.date(DataSet.created_at) >= date_obj)\n+\n+        if end_date:\n+            date_obj = safe_parse_date(end_date, date_format)\n+            datasets = datasets.filter(func.date(DataSet.created_at) <= date_obj)\n+\n+        if min_uvl.isdigit():\n+            datasets = datasets.group_by(DataSet.id).having(func.count(Hubfile.id) >= int(min_uvl))\n+\n+        if max_uvl.isdigit():\n+            datasets = datasets.group_by(DataSet.id).having(func.count(Hubfile.id) <= int(max_uvl))\n+\n         # Order by created_at\n         if sorting == \"oldest\":\n             datasets = datasets.order_by(self.model.created_at.asc())"
      },
      {
        "sha": "b88e7d95a3f556c1107a3ce11f2547903a86c451",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -6,5 +6,7 @@ class ExploreService(BaseService):\n     def __init__(self):\n         super().__init__(ExploreRepository())\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n-        return self.repository.filter(query, sorting, publication_type, tags, **kwargs)\n+    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[],\n+               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", **kwargs):\n+        return self.repository.filter(query, sorting, publication_type, tags, start_date,\n+                                      end_date, min_uvl, max_uvl, **kwargs)"
      },
      {
        "sha": "32c652ed4e96111e09c3f8979a3c2d7f7221f920",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 33,
        "deletions": 1,
        "changes": 34,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -86,14 +86,46 @@ <h3 class=\"h3 mb-3\">\n \n                         </div>\n \n+                        <p style=\"margin-bottom: 0.2rem;\">Filter by date created at:</p>\n+\n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"start_date\">Start date</label>\n+                                <input class=\"form-control\" type=\"date\" name=\"start_date\" id=\"start_date\" required=\"\">\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"end_date\">End date</label>\n+                                <input class=\"form-control\" type=\"date\" name=\"end_date\" id=\"end_date\" required=\"\">                                   \n+                            </div>\n+                        </div>\n+                        \n+                        <p style=\"margin-bottom: 0.2rem;\">Filter number of uvl models:</p>\n+\n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"min_uvl\">Minimum</label>\n+                                <input class=\"form-control\" type=\"number\" name=\"min_uvl\" id=\"min_uvl\" min=\"0\" required=\"\">\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"max_uvl\">Maximum</label>\n+                                <input class=\"form-control\" type=\"number\" name=\"max_uvl\" id=\"max_uvl\" min=\"0\" required=\"\">                                   \n+                            </div>\n+                        </div>\n+\n                     </div>\n \n                     <div class=\"row\">\n \n                         <div class=\"col-6\">\n \n                             <div>\n-                                Sort results by creation date\n+                                <p style=\"margin-bottom: 0.2rem;\">Sort results by creation date</p>\n                                 <label class=\"form-check\">\n                                     <input class=\"form-check-input\" type=\"radio\" value=\"newest\" name=\"sorting\"\n                                            checked=\"\">"
      },
      {
        "sha": "d52753555fe55d5de0bd23970d51aed2765c1aa9",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 52,
        "deletions": 17,
        "changes": 69,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -11,6 +11,8 @@\n from uvl.UVLCustomLexer import UVLCustomLexer\n from uvl.UVLPythonParser import UVLPythonParser\n from antlr4.error.ErrorListener import ErrorListener\n+from werkzeug.exceptions import NotFound\n+\n \n logger = logging.getLogger(__name__)\n \n@@ -76,42 +78,75 @@ def to_glencoe(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.json', delete=False)\n     try:\n         hubfile = HubfileService().get_or_404(file_id)\n-        fm = UVLReader(hubfile.get_path()).transform()\n-        GlencoeWriter(temp_file.name, fm).transform()\n-\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+        # Agrega un mensaje de depuraci\u00f3n\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+        fm1 = UVLReader(file_path).transform()\n+        GlencoeWriter(temp_file.name, fm1).transform()\n         # Return the file in the response\n-        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_glencoe.txt')\n-    finally:\n-        # Clean up the temporary file\n-        os.remove(temp_file.name)\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_glencoe.txt',\n+                         mimetype='text/plain')\n+    except NotFound as e:\n+        # Manejar el caso en que el archivo no se encuentra\n+        # Solo devolver el mensaje sin el \"404 Not Found\" al principio\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except Exception as e:\n+        # Manejar cualquier otro error inesperado\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n \n \n @flamapy_bp.route('/flamapy/to_splot/<int:file_id>', methods=['GET'])\n def to_splot(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.splx', delete=False)\n     try:\n         hubfile = HubfileService().get_by_id(file_id)\n-        fm = UVLReader(hubfile.get_path()).transform()\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n         SPLOTWriter(temp_file.name, fm).transform()\n \n         # Return the file in the response\n-        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_splot.txt')\n-    finally:\n-        # Clean up the temporary file\n-        os.remove(temp_file.name)\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_splot.txt',\n+                         mimetype='text/plain')\n+    except NotFound as e:\n+        # Manejar el caso en que el archivo no se encuentra\n+        # Solo devolver el mensaje sin el \"404 Not Found\" al principio\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except Exception as e:\n+        # Manejar cualquier otro error inesperado\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n \n \n @flamapy_bp.route('/flamapy/to_cnf/<int:file_id>', methods=['GET'])\n def to_cnf(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.cnf', delete=False)\n     try:\n         hubfile = HubfileService().get_by_id(file_id)\n-        fm = UVLReader(hubfile.get_path()).transform()\n+        file_name = hubfile.name\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n         sat = FmToPysat(fm).transform()\n         DimacsWriter(temp_file.name, sat).transform()\n \n         # Return the file in the response\n-        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_cnf.txt')\n-    finally:\n-        # Clean up the temporary file\n-        os.remove(temp_file.name)\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_cnf.txt',\n+                         mimetype='text/plain')\n+    except NotFound as e:\n+        # Manejar el caso en que el archivo no se encuentra\n+        # Solo devolver el mensaje sin el \"404 Not Found\" al principio\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except Exception as e:\n+        # Manejar cualquier otro error inesperado\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500"
      },
      {
        "sha": "b94fd64147b6e112e958e67e6bd8310e4557cce1",
        "filename": "app/modules/hubfile/routes.py",
        "status": "modified",
        "additions": 41,
        "deletions": 33,
        "changes": 74,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fhubfile%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fhubfile%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fhubfile%2Froutes.py?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -1,52 +1,60 @@\n from datetime import datetime, timezone\n import os\n import uuid\n-from flask import current_app, jsonify, make_response, request, send_from_directory\n+from flask import current_app, jsonify, make_response, request, send_from_directory, abort\n from flask_login import current_user\n from app.modules.hubfile import hubfile_bp\n from app.modules.hubfile.models import HubfileDownloadRecord, HubfileViewRecord\n from app.modules.hubfile.services import HubfileDownloadRecordService, HubfileService\n-\n from app import db\n+import traceback\n \n \n @hubfile_bp.route(\"/file/download/<int:file_id>\", methods=[\"GET\"])\n def download_file(file_id):\n-    file = HubfileService().get_or_404(file_id)\n-    filename = file.name\n-\n-    directory_path = f\"uploads/user_{file.feature_model.data_set.user_id}/dataset_{file.feature_model.data_set_id}/\"\n-    parent_directory_path = os.path.dirname(current_app.root_path)\n-    file_path = os.path.join(parent_directory_path, directory_path)\n-\n-    # Get the cookie from the request or generate a new one if it does not exist\n-    user_cookie = request.cookies.get(\"file_download_cookie\")\n-    if not user_cookie:\n-        user_cookie = str(uuid.uuid4())\n-\n-    # Check if the download record already exists for this cookie\n-    existing_record = HubfileDownloadRecord.query.filter_by(\n-        user_id=current_user.id if current_user.is_authenticated else None,\n-        file_id=file_id,\n-        download_cookie=user_cookie\n-    ).first()\n-\n-    if not existing_record:\n-        # Record the download in your database\n-        HubfileDownloadRecordService().create(\n+    try:\n+        # Intentamos obtener el archivo del servicio\n+        file = HubfileService().get_or_404(file_id)\n+        # Configuraci\u00f3n de la ruta de descarga\n+        filename = file.name\n+        directory_path = \"app/modules/dataset/uvl_examples/\"\n+        parent_directory_path = os.path.dirname(current_app.root_path)\n+        file_path = os.path.join(parent_directory_path, directory_path)\n+\n+        # Verifica si el archivo existe\n+        if not os.path.exists(file_path):\n+            abort(404)\n+\n+        # Si el archivo existe, proceder con el proceso de descarga\n+        user_cookie = request.cookies.get(\"file_download_cookie\", str(uuid.uuid4()))\n+        existing_record = HubfileDownloadRecord.query.filter_by(\n             user_id=current_user.id if current_user.is_authenticated else None,\n             file_id=file_id,\n-            download_date=datetime.now(timezone.utc),\n-            download_cookie=user_cookie,\n-        )\n+            download_cookie=user_cookie\n+        ).first()\n+\n+        if not existing_record:\n+            HubfileDownloadRecordService().create(\n+                user_id=current_user.id if current_user.is_authenticated else None,\n+                file_id=file_id,\n+                download_date=datetime.now(timezone.utc),\n+                download_cookie=user_cookie,\n+            )\n \n-    # Save the cookie to the user's browser\n-    resp = make_response(\n-        send_from_directory(directory=file_path, path=filename, as_attachment=True)\n-    )\n-    resp.set_cookie(\"file_download_cookie\", user_cookie)\n+        resp = make_response(\n+            send_from_directory(directory=file_path, path=filename, as_attachment=True)\n+        )\n+        resp.set_cookie(\"file_download_cookie\", user_cookie)\n+        return resp\n \n-    return resp\n+    except Exception as e:\n+        # Si ocurre un error, capturamos la excepci\u00f3n y devolvemos 500\n+        current_app.logger.error(f\"Error inesperado al intentar descargar el archivo: {e}\")\n+        current_app.logger.error(traceback.format_exc())  # Esto imprime el traceback completo para mayor claridad\n+        return jsonify({\n+            \"error\": \"An unexpected error occurred\",\n+            \"message\": str(e)\n+        }), 500\n \n \n @hubfile_bp.route('/file/view/<int:file_id>', methods=['GET'])"
      },
      {
        "sha": "5f6e2ebcb454c7943b73bc67f8274eb02640951e",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 66,
        "deletions": 3,
        "changes": 69,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -83,7 +83,19 @@ <h2>\n                             </div>\n \n                         </div>\n-\n+                        <div class=\"row mb-2\">\n+                            <div class =\"col-md-4 col-12\">\n+                                <span class=\"text-center\">Rating</span>\n+                            </div>\n+                            <div class=\"col-md-8 col-12 d-flex align-items-center\">\n+                                <div id=\"star-rating-{{ dataset.id}}\" class=\"stars\" style=\"color: gold;\">\n+                                    {% for i in range(1,6) %}\n+                                    <span data-value=\"{{ i }}\">*</span>\n+                                    {% endfor %}\n+                                </div>\n+                                <span id=\"advange-rating-{{ dataset.id }}\" class=\"ms-2\"></span>\n+                            </div>\n+                        </div>\n                         <div class=\"row  mt-4\">\n                             <div class=\"col-12\">\n                                 <a href=\"{{ dataset.get_uvlhub_doi() }}\" class=\"btn btn-outline-primary btn-sm\"\n@@ -282,5 +294,56 @@ <h2 class=\"card-title card-title-light\">\n {% endblock %}\n \n {% block scripts %}\n-    <script src=\"{{ url_for('public.scripts') }}\"></script>\n-{% endblock %}\n\\ No newline at end of file\n+\n+<script>\n+    document.addEventListener('DOMContentLoaded', function () {\n+        // Generar una lista de IDs en Jinja\n+        const datasetIds = {{ datasets|map(attribute='id')|list|default([])|tojson }};\n+        \n+        // Validar que la lista no est\u00e9 vac\u00eda antes de iterar\n+        if (Array.isArray(datasetIds) && datasetIds.length > 0) {\n+            datasetIds.forEach(datasetId => {\n+                updateAverageRating(datasetId);\n+            });\n+        } else {\n+            console.warn('No datasets found to update ratings.');\n+        }\n+    });\n+        \n+    function updateAverageRating(datasetId) {\n+        fetch(`/datasets/${datasetId}/average-rating`)\n+            .then(response => {\n+                if (!response.ok) {\n+                    throw new Error('Network response was not ok');\n+                }\n+                return response.json();\n+            })\n+            .then(data => {\n+                // Redondear el valor de la calificaci\u00f3n promedio\n+                const ratingValue = data.average_rating.toFixed(1);\n+\n+                // Actualizar el texto del promedio\n+                const ratingElement = document.getElementById('average-rating-' + datasetId);\n+                if (ratingElement) {\n+                    ratingElement.innerText = ratingValue;\n+                }\n+\n+                // Actualizar el color de las estrellas\n+                const starContainer = document.getElementById('star-rating-' + datasetId);\n+                if (starContainer) {\n+                    highlightStars(starContainer, Math.round(data.average_rating));\n+                }\n+            })\n+            .catch(error => console.error('Error fetching average rating:', error));\n+    }\n+\n+    function highlightStars(container, rating) {\n+        container.querySelectorAll('span').forEach(star => {\n+            const starValue = parseInt(star.getAttribute('data-value'), 10);\n+            star.style.color = starValue <= rating ? '#FFD700' : '#ddd'; // Cambia el color de la estrella\n+        });\n+    }\n+</script>\n+\n+<script src=\"{{ url_for('public.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "92cd836ca2e0107780723d8d6a5d2bd1c7050f8c",
        "filename": "migrations/versions/1494406ec4a6_.py",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/migrations%2Fversions%2F1494406ec4a6_.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/migrations%2Fversions%2F1494406ec4a6_.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F1494406ec4a6_.py?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -0,0 +1,55 @@\n+\"\"\"empty message\n+\n+Revision ID: 1494406ec4a6\n+Revises: 001\n+Create Date: 2024-11-21 17:49:45.388810\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+from sqlalchemy.dialects import mysql\n+\n+# revision identifiers, used by Alembic.\n+revision = '1494406ec4a6'\n+down_revision = '001'\n+branch_labels = None\n+depends_on = None\n+\n+\n+def upgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.create_table('ds_rating',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=False),\n+    sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n+    sa.Column('rating', sa.Float(), nullable=False),\n+    sa.Column('rated_date', sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.drop_table('notepad')\n+    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n+        batch_op.add_column(sa.Column('rating', sa.Float(), nullable=True))\n+\n+    # ### end Alembic commands ###\n+\n+\n+def downgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n+        batch_op.drop_column('rating')\n+\n+    op.create_table('notepad',\n+    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),\n+    sa.Column('title', mysql.VARCHAR(length=256), nullable=False),\n+    sa.Column('body', mysql.TEXT(), nullable=False),\n+    sa.Column('user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='notepad_ibfk_1'),\n+    sa.PrimaryKeyConstraint('id'),\n+    mysql_collate='utf8mb4_general_ci',\n+    mysql_default_charset='utf8mb4',\n+    mysql_engine='InnoDB'\n+    )\n+    op.drop_table('ds_rating')\n+    # ### end Alembic commands ###"
      },
      {
        "sha": "9daeafb9864cf43055ae93beb0afd6c7d144bfa4",
        "filename": "test",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/test",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/test",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/test?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -0,0 +1 @@\n+test"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/36",
    "id": 2193296123,
    "node_id": "PR_kwDONB39G86Cuwr7",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/36",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/36.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/36.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/36",
    "number": 36,
    "state": "closed",
    "locked": false,
    "title": "tmp test",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-21T21:31:30Z",
    "updated_at": "2024-11-21T21:39:05Z",
    "closed_at": "2024-11-21T21:38:26Z",
    "merged_at": null,
    "merge_commit_sha": "98cb0d7dbd5411b480c8ba9825dee34e5647d84c",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/36/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/36/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/36/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
    "head": {
      "label": "TostaHub:test",
      "ref": "test",
      "sha": "0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "3025a646f0a9e6d104a4c61cceda346869985671",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/36"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/36"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/36"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/36/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/36/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/36/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/0451c54be5082f62ada0b9e358479cf9b4e4cfc9"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "9daeafb9864cf43055ae93beb0afd6c7d144bfa4",
        "filename": "test",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/test",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/0451c54be5082f62ada0b9e358479cf9b4e4cfc9/test",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/test?ref=0451c54be5082f62ada0b9e358479cf9b4e4cfc9",
        "patch": "@@ -0,0 +1 @@\n+test"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/35",
    "id": 2193284690,
    "node_id": "PR_kwDONB39G86Cut5S",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/35",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/35.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/35.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/35",
    "number": 35,
    "state": "closed",
    "locked": false,
    "title": "fix: Modify render workflow",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-21T21:23:30Z",
    "updated_at": "2024-11-21T21:26:35Z",
    "closed_at": "2024-11-21T21:26:31Z",
    "merged_at": "2024-11-21T21:26:31Z",
    "merge_commit_sha": "d282d62e9cec5f6f6c392b9dcccc31b926e2ed96",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/35/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/35/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/35/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/e074d74de572b7f4c526ec41ebcf618a3680861a",
    "head": {
      "label": "TostaHub:workflow-patch",
      "ref": "workflow-patch",
      "sha": "e074d74de572b7f4c526ec41ebcf618a3680861a",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "d2bcde299e4c4aa8df62dd4464d2b0d70a159359",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/35"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/35"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/35"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/35/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/35/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/35/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/e074d74de572b7f4c526ec41ebcf618a3680861a"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "103d9a8df7509af0b30e3e3b247a7989db59cb59",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e074d74de572b7f4c526ec41ebcf618a3680861a/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e074d74de572b7f4c526ec41ebcf618a3680861a/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=e074d74de572b7f4c526ec41ebcf618a3680861a",
        "patch": "@@ -5,9 +5,7 @@ on:\n     tags:\n     - 'v*' \n   pull_request:\n-    branches:\n-      - main\n-      - develop\n+    branches: [main, develop]\n \n jobs:\n \n@@ -72,4 +70,4 @@ jobs:\n         env:\n           deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n         run: |\n-          curl \"$deploy_url\"\n\\ No newline at end of file\n+          curl \"$deploy_url\""
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/34",
    "id": 2192844577,
    "node_id": "PR_kwDONB39G86CtCch",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/34",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/34.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/34.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/34",
    "number": 34,
    "state": "closed",
    "locked": false,
    "title": "fix: Download in differents formats(flamapy)",
    "user": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-21T17:34:39Z",
    "updated_at": "2024-11-21T17:36:03Z",
    "closed_at": "2024-11-21T17:36:03Z",
    "merged_at": "2024-11-21T17:36:03Z",
    "merge_commit_sha": "3025a646f0a9e6d104a4c61cceda346869985671",
    "assignee": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pabmatang",
        "id": 73099537,
        "node_id": "MDQ6VXNlcjczMDk5NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pabmatang",
        "html_url": "https://github.com/pabmatang",
        "followers_url": "https://api.github.com/users/pabmatang/followers",
        "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
        "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
        "organizations_url": "https://api.github.com/users/pabmatang/orgs",
        "repos_url": "https://api.github.com/users/pabmatang/repos",
        "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pabmatang/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/34/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/34/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/34/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/a9c4cfe90309e27145c39c4c85524d3e716b735c",
    "head": {
      "label": "TostaHub:download-in-different-formats",
      "ref": "download-in-different-formats",
      "sha": "a9c4cfe90309e27145c39c4c85524d3e716b735c",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "33bd8c129e0271e9e988fea6506ddb76dafa1a5e",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/34"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/34"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/34"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/34/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/34/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/34/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/a9c4cfe90309e27145c39c4c85524d3e716b735c"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "d52753555fe55d5de0bd23970d51aed2765c1aa9",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a9c4cfe90309e27145c39c4c85524d3e716b735c/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a9c4cfe90309e27145c39c4c85524d3e716b735c/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=a9c4cfe90309e27145c39c4c85524d3e716b735c",
        "patch": "@@ -78,10 +78,10 @@ def to_glencoe(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.json', delete=False)\n     try:\n         hubfile = HubfileService().get_or_404(file_id)\n-        file_name = f\"file{file_id}.uvl\"\n+        file_name = hubfile.name\n         directory_path = \"app/modules/dataset/uvl_examples\"\n         file_path = os.path.join(directory_path, file_name)\n-\n+        # Agrega un mensaje de depuraci\u00f3n\n         if not os.path.isfile(file_path):\n             raise NotFound(f\"File {file_name} not found\")\n         fm1 = UVLReader(file_path).transform()\n@@ -103,7 +103,7 @@ def to_splot(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.splx', delete=False)\n     try:\n         hubfile = HubfileService().get_by_id(file_id)\n-        file_name = f\"file{file_id}.uvl\"\n+        file_name = hubfile.name\n         directory_path = \"app/modules/dataset/uvl_examples\"\n         file_path = os.path.join(directory_path, file_name)\n         if not os.path.isfile(file_path):\n@@ -129,7 +129,7 @@ def to_cnf(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.cnf', delete=False)\n     try:\n         hubfile = HubfileService().get_by_id(file_id)\n-        file_name = f\"file{file_id}.uvl\"\n+        file_name = hubfile.name\n         directory_path = \"app/modules/dataset/uvl_examples\"\n         file_path = os.path.join(directory_path, file_name)\n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/33",
    "id": 2192839396,
    "node_id": "PR_kwDONB39G86CtBLk",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/33",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/33.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/33.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/33",
    "number": 33,
    "state": "closed",
    "locked": false,
    "title": "fix: Fix render workflow errors",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-21T17:31:56Z",
    "updated_at": "2024-11-21T17:43:13Z",
    "closed_at": "2024-11-21T17:43:09Z",
    "merged_at": "2024-11-21T17:43:09Z",
    "merge_commit_sha": "d2bcde299e4c4aa8df62dd4464d2b0d70a159359",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/33/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/33/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/33/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/44c1112c60ea66d11feb3bbdb3af292b8bd67bcf",
    "head": {
      "label": "TostaHub:32-deploy-fix",
      "ref": "32-deploy-fix",
      "sha": "44c1112c60ea66d11feb3bbdb3af292b8bd67bcf",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "845368fa3de12b0167621c889efc4c52ee0db432",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/33"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/33"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/33"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/33/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/33/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/33/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/44c1112c60ea66d11feb3bbdb3af292b8bd67bcf"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "8168488f4ad664c0468d3fefee938754f96e5ce6",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/44c1112c60ea66d11feb3bbdb3af292b8bd67bcf/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/44c1112c60ea66d11feb3bbdb3af292b8bd67bcf/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=44c1112c60ea66d11feb3bbdb3af292b8bd67bcf",
        "patch": "@@ -1,13 +1,13 @@\n name: Deploy to Render\n \n on:\n-    push:\n-      tags:\n-      - 'v*' \n-    pull_request:\n-      branches:\n-        - main\n-        - develop\n+  push:\n+    tags:\n+    - 'v*' \n+  pull_request:\n+    branches:\n+      - main\n+      - develop\n \n jobs:\n \n@@ -61,14 +61,14 @@ jobs:\n         uses: actions/checkout@v4\n \n       - name: Deploy to Render (Develop)\n-        if: github.ref == 'refs/heads/develop'\n+        if: github.event.pull_request.base.ref == 'develop'\n         env:\n           deploy_url: ${{ secrets.RENDER_DEPLOY_DEVELOP_HOOK_URL }}\n         run: |\n           curl \"$deploy_url\"\n   \n       - name: Deploy to Render (Main)\n-        if: github.ref == 'refs/heads/main'\n+        if: github.event.pull_request.base.ref == 'main'\n         env:\n           deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n         run: |"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/31",
    "id": 2192773661,
    "node_id": "PR_kwDONB39G86CsxId",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/31",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/31.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/31.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/31",
    "number": 31,
    "state": "closed",
    "locked": false,
    "title": "fix: Fix migrations error",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "The error was that the versions folder had been deleted. This caused that you couldn't migrate the database migration changes and the application failed.",
    "created_at": "2024-11-21T16:57:38Z",
    "updated_at": "2024-11-21T17:01:56Z",
    "closed_at": "2024-11-21T17:00:10Z",
    "merged_at": "2024-11-21T17:00:10Z",
    "merge_commit_sha": "ba362631e49a07435c7ba2fe0cb35cd09ad847e4",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/31/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/31/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/31/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/998a43723f444695daa8cd73b08f99847887d218",
    "head": {
      "label": "TostaHub:30-application-crashes-on-develop",
      "ref": "30-application-crashes-on-develop",
      "sha": "998a43723f444695daa8cd73b08f99847887d218",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "2fad8fd017adb9039886ea7b1d0c6db32022c799",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/31"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/31"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/31"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/31/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/31/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/31/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/998a43723f444695daa8cd73b08f99847887d218"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "840b763a7289fb875622cf2b7850b8454825714e",
        "filename": "migrations/versions/001.py",
        "status": "added",
        "additions": 191,
        "deletions": 0,
        "changes": 191,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/998a43723f444695daa8cd73b08f99847887d218/migrations%2Fversions%2F001.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/998a43723f444695daa8cd73b08f99847887d218/migrations%2Fversions%2F001.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F001.py?ref=998a43723f444695daa8cd73b08f99847887d218",
        "patch": "@@ -0,0 +1,191 @@\n+\"\"\"first migration\n+\n+Revision ID: 001\n+Revises: \n+Create Date: 2024-09-08 16:50:20.326640\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+\n+\n+# revision identifiers, used by Alembic.\n+revision = '001'\n+down_revision = None\n+branch_labels = None\n+depends_on = None\n+\n+\n+def upgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.create_table('doi_mapping',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('dataset_doi_old', sa.String(length=120), nullable=True),\n+    sa.Column('dataset_doi_new', sa.String(length=120), nullable=True),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('ds_metrics',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('number_of_models', sa.String(length=120), nullable=True),\n+    sa.Column('number_of_features', sa.String(length=120), nullable=True),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('fm_metrics',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('solver', sa.Text(), nullable=True),\n+    sa.Column('not_solver', sa.Text(), nullable=True),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('user',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('email', sa.String(length=256), nullable=False),\n+    sa.Column('password', sa.String(length=256), nullable=False),\n+    sa.Column('created_at', sa.DateTime(), nullable=False),\n+    sa.PrimaryKeyConstraint('id'),\n+    sa.UniqueConstraint('email')\n+    )\n+    op.create_table('webhook',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('zenodo',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('ds_meta_data',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('deposition_id', sa.Integer(), nullable=True),\n+    sa.Column('title', sa.String(length=120), nullable=False),\n+    sa.Column('description', sa.Text(), nullable=False),\n+    sa.Column('publication_type', sa.Enum('NONE', 'ANNOTATION_COLLECTION', 'BOOK', 'BOOK_SECTION', 'CONFERENCE_PAPER', 'DATA_MANAGEMENT_PLAN', 'JOURNAL_ARTICLE', 'PATENT', 'PREPRINT', 'PROJECT_DELIVERABLE', 'PROJECT_MILESTONE', 'PROPOSAL', 'REPORT', 'SOFTWARE_DOCUMENTATION', 'TAXONOMIC_TREATMENT', 'TECHNICAL_NOTE', 'THESIS', 'WORKING_PAPER', 'OTHER', name='publicationtype'), nullable=False),\n+    sa.Column('publication_doi', sa.String(length=120), nullable=True),\n+    sa.Column('dataset_doi', sa.String(length=120), nullable=True),\n+    sa.Column('tags', sa.String(length=120), nullable=True),\n+    sa.Column('ds_metrics_id', sa.Integer(), nullable=True),\n+    sa.ForeignKeyConstraint(['ds_metrics_id'], ['ds_metrics.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('fm_meta_data',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('uvl_filename', sa.String(length=120), nullable=False),\n+    sa.Column('title', sa.String(length=120), nullable=False),\n+    sa.Column('description', sa.Text(), nullable=False),\n+    sa.Column('publication_type', sa.Enum('NONE', 'ANNOTATION_COLLECTION', 'BOOK', 'BOOK_SECTION', 'CONFERENCE_PAPER', 'DATA_MANAGEMENT_PLAN', 'JOURNAL_ARTICLE', 'PATENT', 'PREPRINT', 'PROJECT_DELIVERABLE', 'PROJECT_MILESTONE', 'PROPOSAL', 'REPORT', 'SOFTWARE_DOCUMENTATION', 'TAXONOMIC_TREATMENT', 'TECHNICAL_NOTE', 'THESIS', 'WORKING_PAPER', 'OTHER', name='publicationtype'), nullable=False),\n+    sa.Column('publication_doi', sa.String(length=120), nullable=True),\n+    sa.Column('tags', sa.String(length=120), nullable=True),\n+    sa.Column('uvl_version', sa.String(length=120), nullable=True),\n+    sa.Column('fm_metrics_id', sa.Integer(), nullable=True),\n+    sa.ForeignKeyConstraint(['fm_metrics_id'], ['fm_metrics.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('user_profile',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=False),\n+    sa.Column('orcid', sa.String(length=19), nullable=True),\n+    sa.Column('affiliation', sa.String(length=100), nullable=True),\n+    sa.Column('name', sa.String(length=100), nullable=False),\n+    sa.Column('surname', sa.String(length=100), nullable=False),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id'),\n+    sa.UniqueConstraint('user_id')\n+    )\n+    op.create_table('author',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('name', sa.String(length=120), nullable=False),\n+    sa.Column('affiliation', sa.String(length=120), nullable=True),\n+    sa.Column('orcid', sa.String(length=120), nullable=True),\n+    sa.Column('ds_meta_data_id', sa.Integer(), nullable=True),\n+    sa.Column('fm_meta_data_id', sa.Integer(), nullable=True),\n+    sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+    sa.ForeignKeyConstraint(['fm_meta_data_id'], ['fm_meta_data.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('data_set',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=False),\n+    sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n+    sa.Column('created_at', sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('ds_download_record',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=True),\n+    sa.Column('dataset_id', sa.Integer(), nullable=True),\n+    sa.Column('download_date', sa.DateTime(), nullable=False),\n+    sa.Column('download_cookie', sa.String(length=36), nullable=False),\n+    sa.ForeignKeyConstraint(['dataset_id'], ['data_set.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('ds_view_record',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=True),\n+    sa.Column('dataset_id', sa.Integer(), nullable=True),\n+    sa.Column('view_date', sa.DateTime(), nullable=False),\n+    sa.Column('view_cookie', sa.String(length=36), nullable=False),\n+    sa.ForeignKeyConstraint(['dataset_id'], ['data_set.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('feature_model',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('data_set_id', sa.Integer(), nullable=False),\n+    sa.Column('fm_meta_data_id', sa.Integer(), nullable=True),\n+    sa.ForeignKeyConstraint(['data_set_id'], ['data_set.id'], ),\n+    sa.ForeignKeyConstraint(['fm_meta_data_id'], ['fm_meta_data.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('file',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('name', sa.String(length=120), nullable=False),\n+    sa.Column('checksum', sa.String(length=120), nullable=False),\n+    sa.Column('size', sa.Integer(), nullable=False),\n+    sa.Column('feature_model_id', sa.Integer(), nullable=False),\n+    sa.ForeignKeyConstraint(['feature_model_id'], ['feature_model.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('file_download_record',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=True),\n+    sa.Column('file_id', sa.Integer(), nullable=True),\n+    sa.Column('download_date', sa.DateTime(), nullable=False),\n+    sa.Column('download_cookie', sa.String(length=36), nullable=False),\n+    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.create_table('file_view_record',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=True),\n+    sa.Column('file_id', sa.Integer(), nullable=False),\n+    sa.Column('view_date', sa.DateTime(), nullable=True),\n+    sa.Column('view_cookie', sa.String(length=36), nullable=True),\n+    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    # ### end Alembic commands ###\n+\n+\n+def downgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.drop_table('file_view_record')\n+    op.drop_table('file_download_record')\n+    op.drop_table('file')\n+    op.drop_table('feature_model')\n+    op.drop_table('ds_view_record')\n+    op.drop_table('ds_download_record')\n+    op.drop_table('data_set')\n+    op.drop_table('author')\n+    op.drop_table('user_profile')\n+    op.drop_table('fm_meta_data')\n+    op.drop_table('ds_meta_data')\n+    op.drop_table('zenodo')\n+    op.drop_table('webhook')\n+    op.drop_table('user')\n+    op.drop_table('fm_metrics')\n+    op.drop_table('ds_metrics')\n+    op.drop_table('doi_mapping')\n+    # ### end Alembic commands ###"
      },
      {
        "sha": "92cd836ca2e0107780723d8d6a5d2bd1c7050f8c",
        "filename": "migrations/versions/1494406ec4a6_.py",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/998a43723f444695daa8cd73b08f99847887d218/migrations%2Fversions%2F1494406ec4a6_.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/998a43723f444695daa8cd73b08f99847887d218/migrations%2Fversions%2F1494406ec4a6_.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F1494406ec4a6_.py?ref=998a43723f444695daa8cd73b08f99847887d218",
        "patch": "@@ -0,0 +1,55 @@\n+\"\"\"empty message\n+\n+Revision ID: 1494406ec4a6\n+Revises: 001\n+Create Date: 2024-11-21 17:49:45.388810\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+from sqlalchemy.dialects import mysql\n+\n+# revision identifiers, used by Alembic.\n+revision = '1494406ec4a6'\n+down_revision = '001'\n+branch_labels = None\n+depends_on = None\n+\n+\n+def upgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    op.create_table('ds_rating',\n+    sa.Column('id', sa.Integer(), nullable=False),\n+    sa.Column('user_id', sa.Integer(), nullable=False),\n+    sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n+    sa.Column('rating', sa.Float(), nullable=False),\n+    sa.Column('rated_date', sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n+    sa.PrimaryKeyConstraint('id')\n+    )\n+    op.drop_table('notepad')\n+    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n+        batch_op.add_column(sa.Column('rating', sa.Float(), nullable=True))\n+\n+    # ### end Alembic commands ###\n+\n+\n+def downgrade():\n+    # ### commands auto generated by Alembic - please adjust! ###\n+    with op.batch_alter_table('ds_meta_data', schema=None) as batch_op:\n+        batch_op.drop_column('rating')\n+\n+    op.create_table('notepad',\n+    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),\n+    sa.Column('title', mysql.VARCHAR(length=256), nullable=False),\n+    sa.Column('body', mysql.TEXT(), nullable=False),\n+    sa.Column('user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),\n+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='notepad_ibfk_1'),\n+    sa.PrimaryKeyConstraint('id'),\n+    mysql_collate='utf8mb4_general_ci',\n+    mysql_default_charset='utf8mb4',\n+    mysql_engine='InnoDB'\n+    )\n+    op.drop_table('ds_rating')\n+    # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/29",
    "id": 2192737159,
    "node_id": "PR_kwDONB39G86CsoOH",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/29",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/29.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/29.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/29",
    "number": 29,
    "state": "closed",
    "locked": false,
    "title": "Download in different formats",
    "user": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-21T16:39:37Z",
    "updated_at": "2024-11-21T17:00:46Z",
    "closed_at": "2024-11-21T17:00:46Z",
    "merged_at": "2024-11-21T17:00:46Z",
    "merge_commit_sha": "33bd8c129e0271e9e988fea6506ddb76dafa1a5e",
    "assignee": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pabmatang",
        "id": 73099537,
        "node_id": "MDQ6VXNlcjczMDk5NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pabmatang",
        "html_url": "https://github.com/pabmatang",
        "followers_url": "https://api.github.com/users/pabmatang/followers",
        "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
        "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
        "organizations_url": "https://api.github.com/users/pabmatang/orgs",
        "repos_url": "https://api.github.com/users/pabmatang/repos",
        "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pabmatang/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/29/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/29/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/29/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/a81fa834ca79908316500287d21bf0d3f7cb4878",
    "head": {
      "label": "TostaHub:download-in-different-formats",
      "ref": "download-in-different-formats",
      "sha": "a81fa834ca79908316500287d21bf0d3f7cb4878",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "2fad8fd017adb9039886ea7b1d0c6db32022c799",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/29"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/29"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/29"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/29/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/29/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/29/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/a81fa834ca79908316500287d21bf0d3f7cb4878"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "7525bd8cd14d6b2067e908dcf9e47d63579b8740",
        "filename": "app/modules/flamapy/routes.py",
        "status": "modified",
        "additions": 52,
        "deletions": 17,
        "changes": 69,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a81fa834ca79908316500287d21bf0d3f7cb4878/app%2Fmodules%2Fflamapy%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a81fa834ca79908316500287d21bf0d3f7cb4878/app%2Fmodules%2Fflamapy%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fflamapy%2Froutes.py?ref=a81fa834ca79908316500287d21bf0d3f7cb4878",
        "patch": "@@ -11,6 +11,8 @@\n from uvl.UVLCustomLexer import UVLCustomLexer\n from uvl.UVLPythonParser import UVLPythonParser\n from antlr4.error.ErrorListener import ErrorListener\n+from werkzeug.exceptions import NotFound\n+\n \n logger = logging.getLogger(__name__)\n \n@@ -76,42 +78,75 @@ def to_glencoe(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.json', delete=False)\n     try:\n         hubfile = HubfileService().get_or_404(file_id)\n-        fm = UVLReader(hubfile.get_path()).transform()\n-        GlencoeWriter(temp_file.name, fm).transform()\n-\n+        file_name = f\"file{file_id}.uvl\"\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+        fm1 = UVLReader(file_path).transform()\n+        GlencoeWriter(temp_file.name, fm1).transform()\n         # Return the file in the response\n-        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_glencoe.txt')\n-    finally:\n-        # Clean up the temporary file\n-        os.remove(temp_file.name)\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_glencoe.txt',\n+                         mimetype='text/plain')\n+    except NotFound as e:\n+        # Manejar el caso en que el archivo no se encuentra\n+        # Solo devolver el mensaje sin el \"404 Not Found\" al principio\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except Exception as e:\n+        # Manejar cualquier otro error inesperado\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n \n \n @flamapy_bp.route('/flamapy/to_splot/<int:file_id>', methods=['GET'])\n def to_splot(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.splx', delete=False)\n     try:\n         hubfile = HubfileService().get_by_id(file_id)\n-        fm = UVLReader(hubfile.get_path()).transform()\n+        file_name = f\"file{file_id}.uvl\"\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n         SPLOTWriter(temp_file.name, fm).transform()\n \n         # Return the file in the response\n-        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_splot.txt')\n-    finally:\n-        # Clean up the temporary file\n-        os.remove(temp_file.name)\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_splot.txt',\n+                         mimetype='text/plain')\n+    except NotFound as e:\n+        # Manejar el caso en que el archivo no se encuentra\n+        # Solo devolver el mensaje sin el \"404 Not Found\" al principio\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except Exception as e:\n+        # Manejar cualquier otro error inesperado\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500\n \n \n @flamapy_bp.route('/flamapy/to_cnf/<int:file_id>', methods=['GET'])\n def to_cnf(file_id):\n     temp_file = tempfile.NamedTemporaryFile(suffix='.cnf', delete=False)\n     try:\n         hubfile = HubfileService().get_by_id(file_id)\n-        fm = UVLReader(hubfile.get_path()).transform()\n+        file_name = f\"file{file_id}.uvl\"\n+        directory_path = \"app/modules/dataset/uvl_examples\"\n+        file_path = os.path.join(directory_path, file_name)\n+\n+        if not os.path.isfile(file_path):\n+            raise NotFound(f\"File {file_name} not found\")\n+\n+        fm = UVLReader(file_path).transform()\n         sat = FmToPysat(fm).transform()\n         DimacsWriter(temp_file.name, sat).transform()\n \n         # Return the file in the response\n-        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_cnf.txt')\n-    finally:\n-        # Clean up the temporary file\n-        os.remove(temp_file.name)\n+        return send_file(temp_file.name, as_attachment=True, download_name=f'{hubfile.name}_cnf.txt',\n+                         mimetype='text/plain')\n+    except NotFound as e:\n+        # Manejar el caso en que el archivo no se encuentra\n+        # Solo devolver el mensaje sin el \"404 Not Found\" al principio\n+        return jsonify({\"error\": str(e).replace(\"404 Not Found: \", \"\")}), 404\n+    except Exception as e:\n+        # Manejar cualquier otro error inesperado\n+        return jsonify({\"error\": \"Internal Server Error\", \"details\": str(e)}), 500"
      },
      {
        "sha": "b94fd64147b6e112e958e67e6bd8310e4557cce1",
        "filename": "app/modules/hubfile/routes.py",
        "status": "modified",
        "additions": 41,
        "deletions": 33,
        "changes": 74,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/a81fa834ca79908316500287d21bf0d3f7cb4878/app%2Fmodules%2Fhubfile%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/a81fa834ca79908316500287d21bf0d3f7cb4878/app%2Fmodules%2Fhubfile%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fhubfile%2Froutes.py?ref=a81fa834ca79908316500287d21bf0d3f7cb4878",
        "patch": "@@ -1,52 +1,60 @@\n from datetime import datetime, timezone\n import os\n import uuid\n-from flask import current_app, jsonify, make_response, request, send_from_directory\n+from flask import current_app, jsonify, make_response, request, send_from_directory, abort\n from flask_login import current_user\n from app.modules.hubfile import hubfile_bp\n from app.modules.hubfile.models import HubfileDownloadRecord, HubfileViewRecord\n from app.modules.hubfile.services import HubfileDownloadRecordService, HubfileService\n-\n from app import db\n+import traceback\n \n \n @hubfile_bp.route(\"/file/download/<int:file_id>\", methods=[\"GET\"])\n def download_file(file_id):\n-    file = HubfileService().get_or_404(file_id)\n-    filename = file.name\n-\n-    directory_path = f\"uploads/user_{file.feature_model.data_set.user_id}/dataset_{file.feature_model.data_set_id}/\"\n-    parent_directory_path = os.path.dirname(current_app.root_path)\n-    file_path = os.path.join(parent_directory_path, directory_path)\n-\n-    # Get the cookie from the request or generate a new one if it does not exist\n-    user_cookie = request.cookies.get(\"file_download_cookie\")\n-    if not user_cookie:\n-        user_cookie = str(uuid.uuid4())\n-\n-    # Check if the download record already exists for this cookie\n-    existing_record = HubfileDownloadRecord.query.filter_by(\n-        user_id=current_user.id if current_user.is_authenticated else None,\n-        file_id=file_id,\n-        download_cookie=user_cookie\n-    ).first()\n-\n-    if not existing_record:\n-        # Record the download in your database\n-        HubfileDownloadRecordService().create(\n+    try:\n+        # Intentamos obtener el archivo del servicio\n+        file = HubfileService().get_or_404(file_id)\n+        # Configuraci\u00f3n de la ruta de descarga\n+        filename = file.name\n+        directory_path = \"app/modules/dataset/uvl_examples/\"\n+        parent_directory_path = os.path.dirname(current_app.root_path)\n+        file_path = os.path.join(parent_directory_path, directory_path)\n+\n+        # Verifica si el archivo existe\n+        if not os.path.exists(file_path):\n+            abort(404)\n+\n+        # Si el archivo existe, proceder con el proceso de descarga\n+        user_cookie = request.cookies.get(\"file_download_cookie\", str(uuid.uuid4()))\n+        existing_record = HubfileDownloadRecord.query.filter_by(\n             user_id=current_user.id if current_user.is_authenticated else None,\n             file_id=file_id,\n-            download_date=datetime.now(timezone.utc),\n-            download_cookie=user_cookie,\n-        )\n+            download_cookie=user_cookie\n+        ).first()\n+\n+        if not existing_record:\n+            HubfileDownloadRecordService().create(\n+                user_id=current_user.id if current_user.is_authenticated else None,\n+                file_id=file_id,\n+                download_date=datetime.now(timezone.utc),\n+                download_cookie=user_cookie,\n+            )\n \n-    # Save the cookie to the user's browser\n-    resp = make_response(\n-        send_from_directory(directory=file_path, path=filename, as_attachment=True)\n-    )\n-    resp.set_cookie(\"file_download_cookie\", user_cookie)\n+        resp = make_response(\n+            send_from_directory(directory=file_path, path=filename, as_attachment=True)\n+        )\n+        resp.set_cookie(\"file_download_cookie\", user_cookie)\n+        return resp\n \n-    return resp\n+    except Exception as e:\n+        # Si ocurre un error, capturamos la excepci\u00f3n y devolvemos 500\n+        current_app.logger.error(f\"Error inesperado al intentar descargar el archivo: {e}\")\n+        current_app.logger.error(traceback.format_exc())  # Esto imprime el traceback completo para mayor claridad\n+        return jsonify({\n+            \"error\": \"An unexpected error occurred\",\n+            \"message\": str(e)\n+        }), 500\n \n \n @hubfile_bp.route('/file/view/<int:file_id>', methods=['GET'])"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/28",
    "id": 2192653283,
    "node_id": "PR_kwDONB39G86CsTvj",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/28",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/28.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/28.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/28",
    "number": 28,
    "state": "closed",
    "locked": false,
    "title": "View user profile",
    "user": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-21T16:02:32Z",
    "updated_at": "2024-12-06T02:07:30Z",
    "closed_at": "2024-11-21T16:09:41Z",
    "merged_at": "2024-11-21T16:09:41Z",
    "merge_commit_sha": "2fad8fd017adb9039886ea7b1d0c6db32022c799",
    "assignee": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pabmatang",
        "id": 73099537,
        "node_id": "MDQ6VXNlcjczMDk5NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pabmatang",
        "html_url": "https://github.com/pabmatang",
        "followers_url": "https://api.github.com/users/pabmatang/followers",
        "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
        "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
        "organizations_url": "https://api.github.com/users/pabmatang/orgs",
        "repos_url": "https://api.github.com/users/pabmatang/repos",
        "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pabmatang/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [
      {
        "id": 7619191830,
        "node_id": "LA_kwDONB39G88AAAABxiOkFg",
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      }
    ],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/28/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/28/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/28/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/b1a167090a9530a84a085c2e40c904dc96ba2d3b",
    "head": {
      "label": "TostaHub:view-user-profile",
      "ref": "view-user-profile",
      "sha": "b1a167090a9530a84a085c2e40c904dc96ba2d3b",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "0481a5a3fbaca4fcbccaf9fc4669c1835a66e127",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/28"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/28"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/28"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/28/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/28/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/28/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/b1a167090a9530a84a085c2e40c904dc96ba2d3b"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "e9faaa440465181a5338792b3f0a61d363fdc1dd",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 10,
        "deletions": 19,
        "changes": 29,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b1a167090a9530a84a085c2e40c904dc96ba2d3b/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b1a167090a9530a84a085c2e40c904dc96ba2d3b/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=b1a167090a9530a84a085c2e40c904dc96ba2d3b",
        "patch": "@@ -30,8 +30,7 @@\n     DSMetaDataService,\n     DSViewRecordService,\n     DataSetService,\n-    DOIMappingService,\n-    DSRatingService\n+    DOIMappingService\n )\n from app.modules.zenodo.services import ZenodoService\n \n@@ -44,7 +43,6 @@\n zenodo_service = ZenodoService()\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n-ds_rating_service = DSRatingService()\n \n \n @dataset_bp.route(\"/dataset/upload\", methods=[\"GET\", \"POST\"])\n@@ -120,6 +118,15 @@ def list_dataset():\n     )\n \n \n+@dataset_bp.route(\"/dataset/user_id/<int:user_id>\", methods=[\"GET\"])\n+def user_dataset(user_id):\n+    return render_template(\n+        \"dataset/user_datasets.html\",\n+        datasets=dataset_service.get_synchronized(user_id),\n+        local_datasets=dataset_service.get_unsynchronized(user_id),\n+    )\n+\n+\n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required\n def upload():\n@@ -280,19 +287,3 @@ def get_unsynchronized_dataset(dataset_id):\n         abort(404)\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n-\n-\n-@dataset_bp.route(\"/datasets/<int:dataset_id>/rate\", methods=[\"POST\"])\n-@login_required\n-def rate_dataset(dataset_id):\n-    user_id = current_user.id\n-    rating_value = request.json.get('rating')\n-    rating = ds_rating_service.add_or_update_rating(dataset_id, user_id, rating_value)\n-    return jsonify({'message': 'Rating added', 'rating': rating.to_dict}), 200\n-\n-\n-@dataset_bp.route('/datasets/<int:dataset_id>/average-rating', methods=['GET'])\n-@login_required\n-def get_dataset_average_rating(dataset_id):\n-    average_rating = ds_rating_service.get_dataset_average_rating(dataset_id)\n-    return jsonify({'average_rating': average_rating}), 200"
      },
      {
        "sha": "1ebff4ffec038ee1e22e00bb0eac925580d8eb15",
        "filename": "app/modules/dataset/templates/dataset/user_datasets.html",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b1a167090a9530a84a085c2e40c904dc96ba2d3b/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b1a167090a9530a84a085c2e40c904dc96ba2d3b/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html?ref=b1a167090a9530a84a085c2e40c904dc96ba2d3b",
        "patch": "@@ -0,0 +1,118 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}My datasets{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h3 mb-3\">Datasets de {{ datasets[0].user.profile.name }} {{ datasets[0].user.profile.surname }}</h1>\n+\n+    {% if datasets %}\n+        <div class=\" col-12\">\n+            <div class=\"card\">\n+\n+                <div class=\"card-body\">\n+                    <table class=\"table\">\n+                        <thead>\n+                        <tr>\n+                            <th>Title</th>\n+                            <th>Description</th>\n+                            <th>Publication type</th>\n+                            <th>Dataset DOI</th>\n+                            <th>Options</th>\n+                        </tr>\n+                        </thead>\n+                        <tbody>\n+                        {% for dataset in datasets %}\n+                            <tr>\n+                                <td>\n+                                    <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                        {{ dataset.ds_meta_data.title }}\n+                                    </a>\n+                                </td>\n+                                <td>{{ dataset.ds_meta_data.description }}</td>\n+                                <td>{{ dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n+                                <td><a href=\"{{ dataset.get_uvlhub_doi() }}\"\n+                                       target=\"_blank\">{{ dataset.get_uvlhub_doi() }}</a></td>\n+                                <td>\n+                                    <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                        <i data-feather=\"eye\"></i>\n+                                    </a>\n+                                    <a href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">\n+                                        <i data-feather=\"download\"></i>\n+                                    </a>\n+                                </td>\n+                            </tr>\n+                        {% endfor %}\n+                        </tbody>\n+                    </table>\n+                </div>\n+\n+            </div>\n+\n+        </div>\n+    {% else %}\n+        <div class=\"col-12 col-md-6\">\n+            <div class=\"card\">\n+                <div class=\"card-header\">\n+                    <h5 class=\"card-title mb-0\">No datasets found</h5>\n+                </div>\n+                <div class=\"card-body\">\n+                    <p class=\"card-text\">\n+                        You have not created any dataset synchronized with Zenodo, are you up for it?\n+                    </p>\n+                    <a href=\"{{ url_for('dataset.create_dataset') }}\" class=\"btn btn-primary\">\n+                        Upload dataset</a>\n+                </div>\n+            </div>\n+        </div>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+\n+        <div class=\"col-12\">\n+            {% if local_datasets %}\n+                <div class=\"card\">\n+                    <div class=\"card-body\">\n+                        <div class=\"card-header\">\n+                            <h5 class=\"card-title\">Unsynchronized datasets</h5>\n+                        </div>\n+                        <div class=\"card-body\">\n+                            <table class=\"table\">\n+                                <thead>\n+                                <tr>\n+                                    <th>Title</th>\n+                                    <th>Description</th>\n+                                    <th>Publication type</th>\n+                                    <th>Options</th>\n+                                </tr>\n+                                </thead>\n+                                <tbody>\n+                                {% for local_dataset in local_datasets %}\n+                                    <tr>\n+                                        <td>\n+                                            <a href=\"{{ url_for('dataset.get_unsynchronized_dataset', dataset_id=local_dataset.id) }}\">\n+                                                {{ local_dataset.ds_meta_data.title }}\n+                                            </a>\n+                                        </td>\n+                                        <td>{{ local_dataset.ds_meta_data.description }}</td>\n+                                        <td>{{ local_dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n+                                        <td>\n+                                            <a href=\"{{ url_for('dataset.get_unsynchronized_dataset', dataset_id=local_dataset.id) }}\">\n+                                                <i data-feather=\"eye\"></i>\n+                                            </a>\n+                                            <a href=\"{{ url_for('dataset.download_dataset', dataset_id=local_dataset.id) }}\">\n+                                                <i data-feather=\"download\"></i>\n+                                            </a>\n+                                        </td>\n+                                    </tr>\n+                                {% endfor %}\n+                                </tbody>\n+                            </table>\n+                        </div>\n+                    </div>\n+                </div>\n+            {% endif %}\n+        </div>\n+\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "eddf8bb7942593f5d367fdcb574dc71e43522f1b",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 8,
        "deletions": 80,
        "changes": 88,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b1a167090a9530a84a085c2e40c904dc96ba2d3b/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b1a167090a9530a84a085c2e40c904dc96ba2d3b/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=b1a167090a9530a84a085c2e40c904dc96ba2d3b",
        "patch": "@@ -63,8 +63,13 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                             Uploaded by\n                         </span>\n                     </div>\n-                    <div class=\"col-md-8 col-12\">\n+                    <!-- #region div class=\"col-md-8 col-12\">\n                         <a href=\"#\">{{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}</a>\n+                    </div>-->\n+                    <div class=\"col-md-8 col-12\">\n+                        <a href=\"/dataset/user_id/{{ dataset.user.id }}\">\n+                            {{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}\n+                        </a>\n                     </div>\n \n                 </div>\n@@ -159,7 +164,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n \n             {% if dataset.ds_meta_data.dataset_doi %}\n-            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; justify-content: space-between; gap: 50px;\">\n+            <div class=\"card-body\" style=\"padding-top: 0px\">\n \n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n@@ -179,22 +184,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                     {{ dataset.get_uvlhub_doi() }}\n                 </div>\n                 \n-                <div style=\"display: flex; flex-direction: column;\">\n-                    <div style=\"margin-top: 0px; flex-direction: column;\">\n-                        <div style=\"display: inline-block; cursor: pointer; color: #ddd;\" id=\"star-rating-{{ dataset.id }}\">\n-                            {% for i in range(1, 6) %}\n-                                <span data-value=\"{{ i }}\" style=\"font-size: 1.5rem;\">\u2606</span>\n-                            {% endfor %}\n-                        </div>\n-                        <button onclick=\"submitRating('{{ dataset.id }}')\" style=\"display: inline-block; margin-left: 10px; font-size: 0.9rem;\">\n-                            Rate\n-                        </button>\n-                        </div>\n-                        <div>\n-                            Average Rating: <span id=\"average-rating-{{ dataset.id }}\">0</span>/5\n-                        </div>\n-                    </div>\n-                </div>\n+            </div>\n             {% endif %}\n \n         </div>\n@@ -507,68 +497,6 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n             console.error('Failed to copy text: ', err);\n         });\n     }\n-\n-    // Variables globales para almacenar las calificaciones seleccionadas\n-    const selectedRatings = {};\n-\n-    // Definir submitRating en el \u00e1mbito global\n-    function submitRating(datasetId) {\n-        const ratingValue = selectedRatings[datasetId]; // Obtiene la calificaci\u00f3n seleccionada del dataset\n-\n-        if (ratingValue > 0) { // Verifica que haya una calificaci\u00f3n seleccionada\n-            fetch(`/datasets/${datasetId}/rate`, {\n-                method: 'POST',\n-                headers: {\n-                    'Content-Type': 'application/json'\n-                },\n-                body: JSON.stringify({ rating: ratingValue })\n-            })\n-            .then(response => response.json())\n-            .then(data => {\n-                console.log('Rating submitted:', data);\n-                updateAverageRating(datasetId); // Actualiza el promedio de calificaci\u00f3n despu\u00e9s de enviar\n-            })\n-            .catch(error => console.error('Error submitting rating:', error));\n-        } else {\n-            alert('Please select a rating before submitting.');\n-        }\n-    }\n-\n-    // Definir updateAverageRating en el \u00e1mbito global\n-    function updateAverageRating(datasetId) {\n-        fetch(`/datasets/${datasetId}/average-rating`)\n-        .then(response => response.json())\n-        .then(data => {\n-            document.getElementById('average-rating-' + datasetId).innerText = data.average_rating.toFixed(1);\n-        })\n-        .catch(error => console.error('Error fetching average rating:', error));\n-    }\n-\n-    // Escuchar el evento DOMContentLoaded\n-    document.addEventListener('DOMContentLoaded', function () {\n-        const datasetId = {{ dataset.id }};\n-        const starRatingContainer = document.getElementById('star-rating-' + datasetId);\n-\n-        // Agregar evento a cada estrella para seleccionar la calificaci\u00f3n\n-        starRatingContainer.querySelectorAll('span').forEach(star => {\n-            star.addEventListener('click', function () {\n-                const ratingValue = this.getAttribute('data-value'); // Obtiene el valor de la estrella seleccionada\n-                selectedRatings[datasetId] = ratingValue; // Almacena la calificaci\u00f3n seleccionada en la variable global\n-                highlightStars(starRatingContainer, ratingValue); // Resaltar estrellas\n-            });\n-        });\n-\n-        // Actualizar el promedio de calificaci\u00f3n inicial\n-        updateAverageRating(datasetId);\n-\n-        // Funci\u00f3n para resaltar las estrellas seg\u00fan la calificaci\u00f3n seleccionada\n-        function highlightStars(container, rating) {\n-            container.querySelectorAll('span').forEach(star => {\n-                const starValue = star.getAttribute('data-value');\n-                star.style.color = starValue <= rating ? '#FFD700' : '#ddd'; // Cambia el color de la estrella\n-            });\n-        }\n-    });\n </script>\n \n {% endblock %}"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/27",
    "id": 2192582562,
    "node_id": "PR_kwDONB39G86CsCei",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/27",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/27.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/27.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/27",
    "number": 27,
    "state": "closed",
    "locked": false,
    "title": "6 advanced search querys",
    "user": {
      "login": "Leonidas6000",
      "id": 73244549,
      "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leonidas6000",
      "html_url": "https://github.com/Leonidas6000",
      "followers_url": "https://api.github.com/users/Leonidas6000/followers",
      "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
      "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
      "repos_url": "https://api.github.com/users/Leonidas6000/repos",
      "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-21T15:30:43Z",
    "updated_at": "2024-12-04T11:17:37Z",
    "closed_at": "2024-11-22T10:23:37Z",
    "merged_at": "2024-11-22T10:23:37Z",
    "merge_commit_sha": "433943f6ca37b7a75af00ebb39b3355f189f3bcd",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/27/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/27/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/27/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/682a7f37d4c712fa65c05480062f603ec6753e68",
    "head": {
      "label": "TostaHub:6-advanced-search-querys",
      "ref": "6-advanced-search-querys",
      "sha": "682a7f37d4c712fa65c05480062f603ec6753e68",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "3025a646f0a9e6d104a4c61cceda346869985671",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/27"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/27"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/27"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/27/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/27/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/27/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/682a7f37d4c712fa65c05480062f603ec6753e68"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "eb817bd94f16232dcfb8eb59bc3045026b439f05",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 74,
        "deletions": 46,
        "changes": 120,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/682a7f37d4c712fa65c05480062f603ec6753e68/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/682a7f37d4c712fa65c05480062f603ec6753e68/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=682a7f37d4c712fa65c05480062f603ec6753e68",
        "patch": "@@ -1,8 +1,8 @@\n-import re\n-from sqlalchemy import any_, or_, func\n-import unidecode\n+from sqlalchemy import or_, func\n+from sqlalchemy.orm import aliased\n+from app import db\n from app.modules.dataset.models import Author, DSMetaData, DataSet, PublicationType\n-from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from app.modules.featuremodel.models import FeatureModel\n from app.modules.hubfile.models import Hubfile\n from core.repositories.BaseRepository import BaseRepository\n from datetime import datetime\n@@ -19,70 +19,98 @@ class ExploreRepository(BaseRepository):\n     def __init__(self):\n         super().__init__(DataSet)\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[],\n+    def filter(self, query_string, sorting=\"newest\", publication_type=\"any\",\n                start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", **kwargs):\n \n-        # Normalize and remove unwanted characters\n-        normalized_query = unidecode.unidecode(query).lower()\n-        cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n-\n-        filters = []\n-        for word in cleaned_query.split():\n-            filters.append(DSMetaData.title.ilike(f\"%{word}%\"))\n-            filters.append(DSMetaData.description.ilike(f\"%{word}%\"))\n-            filters.append(Author.name.ilike(f\"%{word}%\"))\n-            filters.append(Author.affiliation.ilike(f\"%{word}%\"))\n-            filters.append(Author.orcid.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.uvl_filename.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.title.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.description.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.publication_doi.ilike(f\"%{word}%\"))\n-            filters.append(FMMetaData.tags.ilike(f\"%{word}%\"))\n-            filters.append(DSMetaData.tags.ilike(f\"%{word}%\"))\n-\n-        datasets = (\n-            self.model.query\n-            .join(DataSet.ds_meta_data)\n-            .join(DSMetaData.authors)\n-            .join(DataSet.feature_models)\n-            .join(FeatureModel.fm_meta_data)\n-            .join(FeatureModel.files)\n-            .filter(or_(*filters))\n-            .filter(DSMetaData.dataset_doi.isnot(None))  # Exclude datasets with empty dataset_doi\n-        )\n+        # Crear un alias para `ds_meta_data` para evitar conflictos de alias.\n+        ds_meta_data_alias = aliased(DSMetaData)\n+        author_meta_data_alias = aliased(DSMetaData)  # Nuevo alias para la segunda uni\u00f3n\n+        min_size_filter = None\n+        max_size_filter = None\n \n+        # Inicia la consulta, usando el alias en la uni\u00f3n\n+        query = db.session.query(DataSet).join(ds_meta_data_alias, DataSet.ds_meta_data)\n+\n+        # Filtrar por tipo de publicaci\u00f3n\n         if publication_type != \"any\":\n             matching_type = None\n             for member in PublicationType:\n                 if member.value.lower() == publication_type:\n                     matching_type = member\n                     break\n-\n             if matching_type is not None:\n-                datasets = datasets.filter(DSMetaData.publication_type == matching_type.name)\n-\n-        if tags:\n-            datasets = datasets.filter(DSMetaData.tags.ilike(any_(f\"%{tag}%\" for tag in tags)))\n+                query = query.filter(ds_meta_data_alias.publication_type == matching_type.name)\n+\n+        # Procesar el filtro de `query_string`\n+        query_filter = query_string.strip()\n+\n+        # Filtrar por autor\n+        if query_filter.startswith('author:'):\n+            author_filter = query_filter[7:].strip()\n+            query = query.join(author_meta_data_alias).join(Author).filter(Author.name.ilike(f'%{author_filter}%'))\n+\n+        # Filtrar por tama\u00f1o m\u00ednimo\n+        elif query_filter.startswith('min_size:'):\n+            try:\n+                min_size_filter = int(query_filter[9:].strip())\n+            except ValueError:\n+                min_size_filter = None\n+\n+        # Filtrar por tama\u00f1o m\u00e1ximo\n+        elif query_filter.startswith('max_size:'):\n+            try:\n+                max_size_filter = int(query_filter[9:].strip())\n+            except ValueError:\n+                max_size_filter = None\n+\n+        # Filtrar por etiquetas\n+        elif query_filter.startswith('tags:'):\n+            tags_filter = query_filter[5:].strip()\n+            query = query.filter(ds_meta_data_alias.tags.ilike(f'%{tags_filter}%'))\n+\n+        # Filtrar por t\u00edtulo o tag(consulta general)\n+        else:\n+            query = query.filter(\n+                or_(\n+                    ds_meta_data_alias.title.ilike(f\"%{query_filter}%\"),\n+                    ds_meta_data_alias.tags.ilike(f\"%{query_filter}%\")\n+                )\n+            )\n \n         date_format = '%Y-%m-%d'\n         if start_date:\n             date_obj = safe_parse_date(start_date, date_format)\n-            datasets = datasets.filter(func.date(DataSet.created_at) >= date_obj)\n+            query = query.filter(func.date(DataSet.created_at) >= date_obj)\n \n         if end_date:\n             date_obj = safe_parse_date(end_date, date_format)\n-            datasets = datasets.filter(func.date(DataSet.created_at) <= date_obj)\n+            query = query.filter(func.date(DataSet.created_at) <= date_obj)\n+\n+        # Realizamos la uni\u00f3n con Hubfile a trav\u00e9s de FeatureModel\n+        query = query.join(FeatureModel, FeatureModel.data_set_id == DataSet.id)  # Uni\u00f3n con FeatureModel\n+        query = query.join(Hubfile, Hubfile.feature_model_id == FeatureModel.id)  # Uni\u00f3n con Hubfile\n \n         if min_uvl.isdigit():\n-            datasets = datasets.group_by(DataSet.id).having(func.count(Hubfile.id) >= int(min_uvl))\n+            query = query.group_by(DataSet.id).having(func.count(Hubfile.id) >= int(min_uvl))\n \n         if max_uvl.isdigit():\n-            datasets = datasets.group_by(DataSet.id).having(func.count(Hubfile.id) <= int(max_uvl))\n+            query = query.group_by(DataSet.id).having(func.count(Hubfile.id) <= int(max_uvl))\n \n-        # Order by created_at\n+        # Ordenar resultados\n         if sorting == \"oldest\":\n-            datasets = datasets.order_by(self.model.created_at.asc())\n+            query = query.order_by(DataSet.created_at.asc())\n         else:\n-            datasets = datasets.order_by(self.model.created_at.desc())\n+            query = query.order_by(DataSet.created_at.desc())\n+\n+        # Ejecutar la consulta y obtener todos los resultados\n+        results = query.all()\n+\n+        # Filtrar por tama\u00f1o m\u00ednimo despu\u00e9s de obtener los resultados\n+        if min_size_filter is not None:\n+            results = [ds for ds in results if ds.get_file_total_size() >= min_size_filter]\n+\n+        # Filtrar por tama\u00f1o m\u00e1ximo despu\u00e9s de obtener los resultados\n+        if max_size_filter is not None:\n+            results = [ds for ds in results if ds.get_file_total_size() <= max_size_filter]\n \n-        return datasets.all()\n+        return results"
      },
      {
        "sha": "7ccc1fa16fcccc18409951a201d2f9be663844fb",
        "filename": "app/modules/explore/routes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/682a7f37d4c712fa65c05480062f603ec6753e68/app%2Fmodules%2Fexplore%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/682a7f37d4c712fa65c05480062f603ec6753e68/app%2Fmodules%2Fexplore%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Froutes.py?ref=682a7f37d4c712fa65c05480062f603ec6753e68",
        "patch": "@@ -1,5 +1,4 @@\n from flask import render_template, request, jsonify\n-\n from app.modules.explore import explore_bp\n from app.modules.explore.forms import ExploreForm\n from app.modules.explore.services import ExploreService\n@@ -8,7 +7,7 @@\n @explore_bp.route('/explore', methods=['GET', 'POST'])\n def index():\n     if request.method == 'GET':\n-        query = request.args.get('query', '')\n+        query = request.args.get('query', '')  # Obtener la consulta desde la URL\n         form = ExploreForm()\n         return render_template('explore/index.html', form=form, query=query)\n "
      },
      {
        "sha": "3d1211f2cbcfd6fa7140592488aea11e8cda99d4",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/682a7f37d4c712fa65c05480062f603ec6753e68/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/682a7f37d4c712fa65c05480062f603ec6753e68/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=682a7f37d4c712fa65c05480062f603ec6753e68",
        "patch": "@@ -1,12 +1,11 @@\n from app.modules.explore.repositories import ExploreRepository\n-from core.services.BaseService import BaseService\n \n \n-class ExploreService(BaseService):\n+class ExploreService:\n     def __init__(self):\n-        super().__init__(ExploreRepository())\n+        self.repository = ExploreRepository()\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[],\n+    def filter(self, query: str, sorting=\"newest\", publication_type=\"any\",\n                start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", **kwargs):\n-        return self.repository.filter(query, sorting, publication_type, tags, start_date,\n+        return self.repository.filter(query, sorting, publication_type, start_date,\n                                       end_date, min_uvl, max_uvl, **kwargs)"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/26",
    "id": 2192580726,
    "node_id": "PR_kwDONB39G86CsCB2",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/26",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/26.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/26.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/26",
    "number": 26,
    "state": "closed",
    "locked": false,
    "title": "feat: Modify render.yml to deploy develop site",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-21T15:29:54Z",
    "updated_at": "2024-11-21T15:35:16Z",
    "closed_at": "2024-11-21T15:35:00Z",
    "merged_at": "2024-11-21T15:35:00Z",
    "merge_commit_sha": "845368fa3de12b0167621c889efc4c52ee0db432",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/26/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/26/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/26/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/741d65c91c3306dc807ed55d701451f1789f36d4",
    "head": {
      "label": "TostaHub:23-deploy-develop",
      "ref": "23-deploy-develop",
      "sha": "741d65c91c3306dc807ed55d701451f1789f36d4",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "4036bccacd96b68672aa8f0cfa37bc4e9b850939",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/26"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/26"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/26"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/26/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/26/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/26/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/741d65c91c3306dc807ed55d701451f1789f36d4"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "7e69edb05917dae4eff272ce89fdcf17ba643b99",
        "filename": ".github/workflows/render.yml",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/741d65c91c3306dc807ed55d701451f1789f36d4/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/741d65c91c3306dc807ed55d701451f1789f36d4/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=741d65c91c3306dc807ed55d701451f1789f36d4",
        "patch": "@@ -7,6 +7,7 @@ on:\n     pull_request:\n       branches:\n         - main\n+        - develop\n \n jobs:\n \n@@ -59,8 +60,16 @@ jobs:\n       - name: Check out the repo\n         uses: actions/checkout@v4\n \n-      - name: Deploy to Render\n+      - name: Deploy to Render (Develop)\n+        if: github.ref == 'refs/heads/develop'\n         env:\n-          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_DEVELOP_HOOK_URL }}\n         run: |\n           curl \"$deploy_url\"\n+  \n+      - name: Deploy to Render (Main)\n+        if: github.ref == 'refs/heads/main'\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+        run: |\n+          curl \"$deploy_url\"\n\\ No newline at end of file"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/25",
    "id": 2192558425,
    "node_id": "PR_kwDONB39G86Cr8lZ",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/25",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/25.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/25.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/25",
    "number": 25,
    "state": "closed",
    "locked": false,
    "title": "Rate datasets",
    "user": {
      "login": "Naredo",
      "id": 49791803,
      "node_id": "MDQ6VXNlcjQ5NzkxODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49791803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Naredo",
      "html_url": "https://github.com/Naredo",
      "followers_url": "https://api.github.com/users/Naredo/followers",
      "following_url": "https://api.github.com/users/Naredo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Naredo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Naredo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Naredo/subscriptions",
      "organizations_url": "https://api.github.com/users/Naredo/orgs",
      "repos_url": "https://api.github.com/users/Naredo/repos",
      "events_url": "https://api.github.com/users/Naredo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Naredo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-21T15:19:59Z",
    "updated_at": "2024-11-21T15:39:44Z",
    "closed_at": "2024-11-21T15:39:44Z",
    "merged_at": "2024-11-21T15:39:44Z",
    "merge_commit_sha": "0481a5a3fbaca4fcbccaf9fc4669c1835a66e127",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/25/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/25/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/25/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/5d0921ef607d2efea5df695339df6dd64cd3e2ff",
    "head": {
      "label": "TostaHub:rateDatasets",
      "ref": "rateDatasets",
      "sha": "5d0921ef607d2efea5df695339df6dd64cd3e2ff",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "c3fc148ac239b78a73b419802dca4ba9396b9e82",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/25"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/25"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/25"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/25/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/25/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/25/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/5d0921ef607d2efea5df695339df6dd64cd3e2ff"
      }
    },
    "author_association": "NONE",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "80dfdef38ad149303a93a2b321b24f8c8eaeaa00",
        "filename": "app/modules/dataset/models.py",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fdataset%2Fmodels.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fdataset%2Fmodels.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fmodels.py?ref=5d0921ef607d2efea5df695339df6dd64cd3e2ff",
        "patch": "@@ -58,6 +58,7 @@ class DSMetaData(db.Model):\n     id = db.Column(db.Integer, primary_key=True)\n     deposition_id = db.Column(db.Integer)\n     title = db.Column(db.String(120), nullable=False)\n+    rating = db.Column(db.Float, default=0.0)\n     description = db.Column(db.Text, nullable=False)\n     publication_type = db.Column(SQLAlchemyEnum(PublicationType), nullable=False)\n     publication_doi = db.Column(db.String(120))\n@@ -67,6 +68,12 @@ class DSMetaData(db.Model):\n     ds_metrics = db.relationship('DSMetrics', uselist=False, backref='ds_meta_data', cascade=\"all, delete\")\n     authors = db.relationship('Author', backref='ds_meta_data', lazy=True, cascade=\"all, delete\")\n \n+    def update_rating(self):\n+        total_ratings = sum(rating.rating for rating in self.ratings)\n+        count = len(self.ratings)\n+        self.rating = total_ratings / count if count > 0 else 0\n+        db.session.commit()\n+\n \n class DataSet(db.Model):\n     id = db.Column(db.Integer, primary_key=True)\n@@ -111,6 +118,7 @@ def get_uvlhub_doi(self):\n     def to_dict(self):\n         return {\n             'title': self.ds_meta_data.title,\n+            'rating': self.ds_meta_data.rating,\n             'id': self.id,\n             'created_at': self.created_at,\n             'created_at_timestamp': int(self.created_at.timestamp()),\n@@ -164,3 +172,22 @@ class DOIMapping(db.Model):\n     id = db.Column(db.Integer, primary_key=True)\n     dataset_doi_old = db.Column(db.String(120))\n     dataset_doi_new = db.Column(db.String(120))\n+\n+\n+class DSRating(db.Model):\n+    id = db.Column(db.Integer, primary_key=True)\n+    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)\n+    ds_meta_data_id = db.Column(db.Integer, db.ForeignKey('ds_meta_data.id'), nullable=False)\n+    rating = db.Column(db.Float, default=0, nullable=False)\n+    rated_date = db.Column(db.DateTime, nullable=False, default=datetime.utcnow)\n+\n+    ds_meta_data = db.relationship('DSMetaData', backref=db.backref('ratings', lazy=True))\n+\n+    def to_dict(self):\n+        return {\n+            'id': self.id,\n+            'user_id': self.user_id,\n+            'ds_meta_data_id': self.ds_meta_data_id,\n+            'rating': self.rating,\n+            'rated_date': self.rated_date\n+        }"
      },
      {
        "sha": "f97463f94bef21226ba1be320172d15c9189191b",
        "filename": "app/modules/dataset/repositories.py",
        "status": "modified",
        "additions": 18,
        "deletions": 1,
        "changes": 19,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fdataset%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fdataset%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Frepositories.py?ref=5d0921ef607d2efea5df695339df6dd64cd3e2ff",
        "patch": "@@ -11,7 +11,8 @@\n     DSDownloadRecord,\n     DSMetaData,\n     DSViewRecord,\n-    DataSet\n+    DataSet,\n+    DSRating\n )\n from core.repositories.BaseRepository import BaseRepository\n \n@@ -121,3 +122,19 @@ def __init__(self):\n \n     def get_new_doi(self, old_doi: str) -> str:\n         return self.model.query.filter_by(dataset_doi_old=old_doi).first()\n+\n+\n+class DSRatingRepository(BaseRepository):\n+    def __init__(self):\n+        super().__init__(DSRating)\n+\n+    def get_user_rating(self, ds_meta_data_id: int, user_id: int) -> Optional[DSRating]:\n+        return self.model.query.filter(DSRating.ds_meta_data_id == ds_meta_data_id, DSRating.user_id == user_id).first()\n+\n+    def get_average_rating(self, ds_meta_data_id: int) -> float:\n+        average = self.model.query.filter(\n+            (DSRating.ds_meta_data_id == ds_meta_data_id).with_entities(func.avg(DSRating.rating)).scalar())\n+        return average if average else 0.0\n+\n+    def count_ratings(self, ds_meta_data_id: int) -> int:\n+        return self.model.query.filter(DSRating.ds_meta_data_id == ds_meta_data_id).count()"
      },
      {
        "sha": "16cdd8ae0bfff83330c23d58c6b86a0bc5f4cd30",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=5d0921ef607d2efea5df695339df6dd64cd3e2ff",
        "patch": "@@ -30,7 +30,8 @@\n     DSMetaDataService,\n     DSViewRecordService,\n     DataSetService,\n-    DOIMappingService\n+    DOIMappingService,\n+    DSRatingService\n )\n from app.modules.zenodo.services import ZenodoService\n \n@@ -43,6 +44,7 @@\n zenodo_service = ZenodoService()\n doi_mapping_service = DOIMappingService()\n ds_view_record_service = DSViewRecordService()\n+ds_rating_service = DSRatingService()\n \n \n @dataset_bp.route(\"/dataset/upload\", methods=[\"GET\", \"POST\"])\n@@ -278,3 +280,19 @@ def get_unsynchronized_dataset(dataset_id):\n         abort(404)\n \n     return render_template(\"dataset/view_dataset.html\", dataset=dataset)\n+\n+\n+@dataset_bp.route(\"/datasets/<int:dataset_id>/rate\", methods=[\"POST\"])\n+@login_required\n+def rate_dataset(dataset_id):\n+    user_id = current_user.id\n+    rating_value = request.json.get('rating')\n+    rating = ds_rating_service.add_or_update_rating(dataset_id, user_id, rating_value)\n+    return jsonify({'message': 'Rating added', 'rating': rating.to_dict}), 200\n+\n+\n+@dataset_bp.route('/datasets/<int:dataset_id>/average-rating', methods=['GET'])\n+@login_required\n+def get_dataset_average_rating(dataset_id):\n+    average_rating = ds_rating_service.get_dataset_average_rating(dataset_id)\n+    return jsonify({'average_rating': average_rating}), 200"
      },
      {
        "sha": "c2676ccf985c29fb503894161469ef6b8150c07a",
        "filename": "app/modules/dataset/services.py",
        "status": "modified",
        "additions": 32,
        "deletions": 2,
        "changes": 34,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fdataset%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fdataset%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Fservices.py?ref=5d0921ef607d2efea5df695339df6dd64cd3e2ff",
        "patch": "@@ -8,14 +8,15 @@\n from flask import request\n \n from app.modules.auth.services import AuthenticationService\n-from app.modules.dataset.models import DSViewRecord, DataSet, DSMetaData\n+from app.modules.dataset.models import DSViewRecord, DataSet, DSMetaData, DSRating\n from app.modules.dataset.repositories import (\n     AuthorRepository,\n     DOIMappingRepository,\n     DSDownloadRecordRepository,\n     DSMetaDataRepository,\n     DSViewRecordRepository,\n-    DataSetRepository\n+    DataSetRepository,\n+    DSRatingRepository,\n )\n from app.modules.featuremodel.repositories import FMMetaDataRepository, FeatureModelRepository\n from app.modules.hubfile.repositories import (\n@@ -47,6 +48,7 @@ def __init__(self):\n         self.hubfiledownloadrecord_repository = HubfileDownloadRecordRepository()\n         self.hubfilerepository = HubfileRepository()\n         self.dsviewrecord_repostory = DSViewRecordRepository()\n+        self.dsrating_repository = DSRatingRepository()\n         self.hubfileviewrecord_repository = HubfileViewRecordRepository()\n \n     def move_feature_models(self, dataset: DataSet):\n@@ -198,6 +200,34 @@ def get_new_doi(self, old_doi: str) -> str:\n             return None\n \n \n+class DSRatingService(BaseService):\n+    def __init__(self):\n+        super().__init__(DSRatingRepository())\n+\n+    def add_or_update_rating(self, dsmetadata_id: int, user_id: int, rating_value: int) -> DSRating:\n+        rating = self.repository.get_user_rating(dsmetadata_id, user_id)\n+        if rating:\n+            print(\"Actualizando rating a {rating_value}\")\n+            rating.rating = rating_value\n+        else:\n+            print(\"Valor de rating en el servicio:\", rating_value)\n+            rating = self.repository.create(\n+             commit=False,\n+             ds_meta_data_id=dsmetadata_id,\n+             user_id=user_id,\n+             rating=rating_value\n+            )\n+            print(\"Valor de rating en el servicio:\", rating.rating)\n+        self.repository.session.commit()\n+        return rating\n+\n+    def get_dataset_average_rating(self, dsmetadata_id: int) -> float:\n+        return self.repository.get_average_rating(dsmetadata_id)\n+\n+    def get_total_ratings(self, dsmetadata_id: int) -> int:\n+        return self.repository.count_ratings(dsmetadata_id)\n+\n+\n class SizeService():\n \n     def __init__(self):"
      },
      {
        "sha": "79672bd9ab698dd103fcd5dadca68a7fa3924916",
        "filename": "app/modules/dataset/templates/dataset/list_datasets.html",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Flist_datasets.html?ref=5d0921ef607d2efea5df695339df6dd64cd3e2ff",
        "patch": "@@ -18,6 +18,7 @@ <h1 class=\"h3 mb-3\">My datasets</h1>\n                             <th>Description</th>\n                             <th>Publication type</th>\n                             <th>Dataset DOI</th>\n+                            <th>Rating</th>\n                             <th>Options</th>\n                         </tr>\n                         </thead>\n@@ -33,6 +34,14 @@ <h1 class=\"h3 mb-3\">My datasets</h1>\n                                 <td>{{ dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n                                 <td><a href=\"{{ dataset.get_uvlhub_doi() }}\"\n                                        target=\"_blank\">{{ dataset.get_uvlhub_doi() }}</a></td>\n+                                <td>\n+                                    <div id=\"star-rating-{{ dataset.id }}\" style=\"color: gold; display: inline-block;\">\n+                                        {% for i in range(1, 6) %}\n+                                            <span data-value=\"{{ i }}\" style=\"font-size: 1.5rem;\">\u2605</span>\n+                                        {% endfor %}\n+                                    </div>\n+                                    <span id=\"average-rating-{{ dataset.id }}\" class=\"ms-2\">-</span>/5\n+                                </td>\n                                 <td>\n                                     <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n                                         <i data-feather=\"eye\"></i>\n@@ -41,6 +50,7 @@ <h1 class=\"h3 mb-3\">My datasets</h1>\n                                         <i data-feather=\"download\"></i>\n                                     </a>\n                                 </td>\n+                                </td>\n                             </tr>\n                         {% endfor %}\n                         </tbody>\n@@ -115,4 +125,33 @@ <h5 class=\"card-title\">Unsynchronized datasets</h5>\n             {% endif %}\n         </div>\n \n+\n+<script>\n+    document.addEventListener('DOMContentLoaded', function () {\n+        {% for dataset in datasets %}\n+            updateAverageRating({{ dataset.id }});\n+        {% endfor %}\n+\n+        // Funci\u00f3n para actualizar el promedio de calificaci\u00f3n en el frontend\n+        function updateAverageRating(datasetId) {\n+            fetch(`/datasets/${datasetId}/average-rating`)\n+            .then(response => response.json())\n+            .then(data => {\n+                const averageRating = data.average_rating.toFixed(1);\n+                document.getElementById('average-rating-' + datasetId).innerText = averageRating;\n+\n+                // Resaltar estrellas seg\u00fan el promedio de calificaci\u00f3n\n+                const starRatingContainer = document.getElementById('star-rating-' + datasetId);\n+                starRatingContainer.querySelectorAll('span').forEach(star => {\n+                    const starValue = parseInt(star.getAttribute('data-value'));\n+                    star.style.color = starValue <= Math.round(averageRating) ? '#FFD700' : '#ddd';\n+                });\n+            })\n+            .catch(error => console.error('Error fetching average rating:', error));\n+        }\n+    });\n+</script>\n+\n+\n {% endblock %}\n+"
      },
      {
        "sha": "345bcb0e58932b5b5b3c1aec9964bd71bdaf7dc9",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 79,
        "deletions": 2,
        "changes": 81,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=5d0921ef607d2efea5df695339df6dd64cd3e2ff",
        "patch": "@@ -159,7 +159,7 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n             </div>\n \n             {% if dataset.ds_meta_data.dataset_doi %}\n-            <div class=\"card-body\" style=\"padding-top: 0px\">\n+            <div class=\"card-body\" style=\"padding-top: 0px; display: flex; justify-content: space-between; gap: 50px;\">\n \n                 <div id=\"dataset_doi_uvlhub\" style=\"display: none\">\n                     {{ dataset.get_uvlhub_doi() }}\n@@ -179,7 +179,22 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                     {{ dataset.get_uvlhub_doi() }}\n                 </div>\n                 \n-            </div>\n+                <div style=\"display: flex; flex-direction: column;\">\n+                    <div style=\"margin-top: 0px; flex-direction: column;\">\n+                        <div style=\"display: inline-block; cursor: pointer; color: #ddd;\" id=\"star-rating-{{ dataset.id }}\">\n+                            {% for i in range(1, 6) %}\n+                                <span data-value=\"{{ i }}\" style=\"font-size: 1.5rem;\">\u2606</span>\n+                            {% endfor %}\n+                        </div>\n+                        <button onclick=\"submitRating('{{ dataset.id }}')\" style=\"display: inline-block; margin-left: 10px; font-size: 0.9rem;\">\n+                            Rate\n+                        </button>\n+                        </div>\n+                        <div>\n+                            Average Rating: <span id=\"average-rating-{{ dataset.id }}\">0</span>/5\n+                        </div>\n+                    </div>\n+                </div>\n             {% endif %}\n \n         </div>\n@@ -492,6 +507,68 @@ <h5 class=\"modal-title\" id=\"fileViewerModalLabel\">Feature model view</h5>\n             console.error('Failed to copy text: ', err);\n         });\n     }\n+\n+    // Variables globales para almacenar las calificaciones seleccionadas\n+    const selectedRatings = {};\n+\n+    // Definir submitRating en el \u00e1mbito global\n+    function submitRating(datasetId) {\n+        const ratingValue = selectedRatings[datasetId]; // Obtiene la calificaci\u00f3n seleccionada del dataset\n+\n+        if (ratingValue > 0) { // Verifica que haya una calificaci\u00f3n seleccionada\n+            fetch(`/datasets/${datasetId}/rate`, {\n+                method: 'POST',\n+                headers: {\n+                    'Content-Type': 'application/json'\n+                },\n+                body: JSON.stringify({ rating: ratingValue })\n+            })\n+            .then(response => response.json())\n+            .then(data => {\n+                console.log('Rating submitted:', data);\n+                updateAverageRating(datasetId); // Actualiza el promedio de calificaci\u00f3n despu\u00e9s de enviar\n+            })\n+            .catch(error => console.error('Error submitting rating:', error));\n+        } else {\n+            alert('Please select a rating before submitting.');\n+        }\n+    }\n+\n+    // Definir updateAverageRating en el \u00e1mbito global\n+    function updateAverageRating(datasetId) {\n+        fetch(`/datasets/${datasetId}/average-rating`)\n+        .then(response => response.json())\n+        .then(data => {\n+            document.getElementById('average-rating-' + datasetId).innerText = data.average_rating.toFixed(1);\n+        })\n+        .catch(error => console.error('Error fetching average rating:', error));\n+    }\n+\n+    // Escuchar el evento DOMContentLoaded\n+    document.addEventListener('DOMContentLoaded', function () {\n+        const datasetId = {{ dataset.id }};\n+        const starRatingContainer = document.getElementById('star-rating-' + datasetId);\n+\n+        // Agregar evento a cada estrella para seleccionar la calificaci\u00f3n\n+        starRatingContainer.querySelectorAll('span').forEach(star => {\n+            star.addEventListener('click', function () {\n+                const ratingValue = this.getAttribute('data-value'); // Obtiene el valor de la estrella seleccionada\n+                selectedRatings[datasetId] = ratingValue; // Almacena la calificaci\u00f3n seleccionada en la variable global\n+                highlightStars(starRatingContainer, ratingValue); // Resaltar estrellas\n+            });\n+        });\n+\n+        // Actualizar el promedio de calificaci\u00f3n inicial\n+        updateAverageRating(datasetId);\n+\n+        // Funci\u00f3n para resaltar las estrellas seg\u00fan la calificaci\u00f3n seleccionada\n+        function highlightStars(container, rating) {\n+            container.querySelectorAll('span').forEach(star => {\n+                const starValue = star.getAttribute('data-value');\n+                star.style.color = starValue <= rating ? '#FFD700' : '#ddd'; // Cambia el color de la estrella\n+            });\n+        }\n+    });\n </script>\n \n {% endblock %}"
      },
      {
        "sha": "453bc10c21181126c4f5e362900a18e531828c5f",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 35,
        "deletions": 1,
        "changes": 36,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=5d0921ef607d2efea5df695339df6dd64cd3e2ff",
        "patch": "@@ -104,6 +104,17 @@ function send_query() {\n                                             ${dataset.tags.map(tag => `<span class=\"badge bg-primary me-1\" style=\"cursor: pointer;\" onclick=\"set_tag_as_query('${tag}')\">${tag}</span>`).join('')}\n                                         </div>\n \n+                                    </div>\n+                                                <div class=\"row mb-2\">\n+                                        <div class=\"col-md-4 col-12\">\n+                                            <span class=\"text-secondary\">Rating</span>\n+                                        </div>\n+                                        <div class=\"col-md-8 col-12 d-flex align-items-center\">\n+                                            <div id=\"star-rating-${dataset.id}\" class=\"stars\" style=\"color: gold;\">\n+                                                ${'<span data-value=\"1\">\u2605</span>'.repeat(5)} <!-- Estrellas para interacci\u00f3n -->\n+                                            </div>\n+                                                <span id=\"average-rating-${dataset.id}\" class=\"ms-2\">-</span> <!-- Valor inicial vac\u00edo -->\n+                                        </div>\n                                     </div>\n \n                                     <div class=\"row\">\n@@ -130,6 +141,7 @@ function send_query() {\n                         document.getElementById('results').appendChild(card);\n                     });\n                 });\n+                updateAverageRating(dataset.id)\n         });\n     });\n }\n@@ -202,4 +214,26 @@ document.addEventListener('DOMContentLoaded', () => {\n         const queryInput = document.getElementById('query');\n         queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n     }\n-});\n\\ No newline at end of file\n+});\n+\n+\n+function updateAverageRating(datasetId) {\n+    fetch(`/datasets/${datasetId}/average-rating`)\n+        .then(response => response.json())\n+        .then(data => {\n+            const ratingValue = data.average_rating.toFixed(1);\n+            document.getElementById('average-rating-' + datasetId).innerText = ratingValue;\n+\n+            // Resaltar el n\u00famero correcto de estrellas en amarillo\n+            const starContainer = document.getElementById('star-rating-' + datasetId);\n+            highlightStars(starContainer, Math.round(data.average_rating));\n+        })\n+        .catch(error => console.error('Error fetching average rating:', error));\n+}\n+\n+function highlightStars(container, rating) {\n+    container.querySelectorAll('span').forEach(star => {\n+        const starValue = star.getAttribute('data-value');\n+        star.style.color = starValue <= rating ? '#FFD700' : '#ddd'; // Estrellas doradas seg\u00fan el rating\n+    });\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "5f6e2ebcb454c7943b73bc67f8274eb02640951e",
        "filename": "app/modules/public/templates/public/index.html",
        "status": "modified",
        "additions": 66,
        "deletions": 3,
        "changes": 69,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/5d0921ef607d2efea5df695339df6dd64cd3e2ff/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fpublic%2Ftemplates%2Fpublic%2Findex.html?ref=5d0921ef607d2efea5df695339df6dd64cd3e2ff",
        "patch": "@@ -83,7 +83,19 @@ <h2>\n                             </div>\n \n                         </div>\n-\n+                        <div class=\"row mb-2\">\n+                            <div class =\"col-md-4 col-12\">\n+                                <span class=\"text-center\">Rating</span>\n+                            </div>\n+                            <div class=\"col-md-8 col-12 d-flex align-items-center\">\n+                                <div id=\"star-rating-{{ dataset.id}}\" class=\"stars\" style=\"color: gold;\">\n+                                    {% for i in range(1,6) %}\n+                                    <span data-value=\"{{ i }}\">*</span>\n+                                    {% endfor %}\n+                                </div>\n+                                <span id=\"advange-rating-{{ dataset.id }}\" class=\"ms-2\"></span>\n+                            </div>\n+                        </div>\n                         <div class=\"row  mt-4\">\n                             <div class=\"col-12\">\n                                 <a href=\"{{ dataset.get_uvlhub_doi() }}\" class=\"btn btn-outline-primary btn-sm\"\n@@ -282,5 +294,56 @@ <h2 class=\"card-title card-title-light\">\n {% endblock %}\n \n {% block scripts %}\n-    <script src=\"{{ url_for('public.scripts') }}\"></script>\n-{% endblock %}\n\\ No newline at end of file\n+\n+<script>\n+    document.addEventListener('DOMContentLoaded', function () {\n+        // Generar una lista de IDs en Jinja\n+        const datasetIds = {{ datasets|map(attribute='id')|list|default([])|tojson }};\n+        \n+        // Validar que la lista no est\u00e9 vac\u00eda antes de iterar\n+        if (Array.isArray(datasetIds) && datasetIds.length > 0) {\n+            datasetIds.forEach(datasetId => {\n+                updateAverageRating(datasetId);\n+            });\n+        } else {\n+            console.warn('No datasets found to update ratings.');\n+        }\n+    });\n+        \n+    function updateAverageRating(datasetId) {\n+        fetch(`/datasets/${datasetId}/average-rating`)\n+            .then(response => {\n+                if (!response.ok) {\n+                    throw new Error('Network response was not ok');\n+                }\n+                return response.json();\n+            })\n+            .then(data => {\n+                // Redondear el valor de la calificaci\u00f3n promedio\n+                const ratingValue = data.average_rating.toFixed(1);\n+\n+                // Actualizar el texto del promedio\n+                const ratingElement = document.getElementById('average-rating-' + datasetId);\n+                if (ratingElement) {\n+                    ratingElement.innerText = ratingValue;\n+                }\n+\n+                // Actualizar el color de las estrellas\n+                const starContainer = document.getElementById('star-rating-' + datasetId);\n+                if (starContainer) {\n+                    highlightStars(starContainer, Math.round(data.average_rating));\n+                }\n+            })\n+            .catch(error => console.error('Error fetching average rating:', error));\n+    }\n+\n+    function highlightStars(container, rating) {\n+        container.querySelectorAll('span').forEach(star => {\n+            const starValue = parseInt(star.getAttribute('data-value'), 10);\n+            star.style.color = starValue <= rating ? '#FFD700' : '#ddd'; // Cambia el color de la estrella\n+        });\n+    }\n+</script>\n+\n+<script src=\"{{ url_for('public.scripts') }}\"></script>\n+{% endblock %}"
      },
      {
        "sha": "840b763a7289fb875622cf2b7850b8454825714e",
        "filename": "migrations/versions/001.py",
        "status": "removed",
        "additions": 0,
        "deletions": 191,
        "changes": 191,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e68373226a6e6c44fc7d048fc337329ee3febfce/migrations%2Fversions%2F001.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e68373226a6e6c44fc7d048fc337329ee3febfce/migrations%2Fversions%2F001.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/migrations%2Fversions%2F001.py?ref=e68373226a6e6c44fc7d048fc337329ee3febfce",
        "patch": "@@ -1,191 +0,0 @@\n-\"\"\"first migration\n-\n-Revision ID: 001\n-Revises: \n-Create Date: 2024-09-08 16:50:20.326640\n-\n-\"\"\"\n-from alembic import op\n-import sqlalchemy as sa\n-\n-\n-# revision identifiers, used by Alembic.\n-revision = '001'\n-down_revision = None\n-branch_labels = None\n-depends_on = None\n-\n-\n-def upgrade():\n-    # ### commands auto generated by Alembic - please adjust! ###\n-    op.create_table('doi_mapping',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('dataset_doi_old', sa.String(length=120), nullable=True),\n-    sa.Column('dataset_doi_new', sa.String(length=120), nullable=True),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('ds_metrics',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('number_of_models', sa.String(length=120), nullable=True),\n-    sa.Column('number_of_features', sa.String(length=120), nullable=True),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('fm_metrics',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('solver', sa.Text(), nullable=True),\n-    sa.Column('not_solver', sa.Text(), nullable=True),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('user',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('email', sa.String(length=256), nullable=False),\n-    sa.Column('password', sa.String(length=256), nullable=False),\n-    sa.Column('created_at', sa.DateTime(), nullable=False),\n-    sa.PrimaryKeyConstraint('id'),\n-    sa.UniqueConstraint('email')\n-    )\n-    op.create_table('webhook',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('zenodo',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('ds_meta_data',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('deposition_id', sa.Integer(), nullable=True),\n-    sa.Column('title', sa.String(length=120), nullable=False),\n-    sa.Column('description', sa.Text(), nullable=False),\n-    sa.Column('publication_type', sa.Enum('NONE', 'ANNOTATION_COLLECTION', 'BOOK', 'BOOK_SECTION', 'CONFERENCE_PAPER', 'DATA_MANAGEMENT_PLAN', 'JOURNAL_ARTICLE', 'PATENT', 'PREPRINT', 'PROJECT_DELIVERABLE', 'PROJECT_MILESTONE', 'PROPOSAL', 'REPORT', 'SOFTWARE_DOCUMENTATION', 'TAXONOMIC_TREATMENT', 'TECHNICAL_NOTE', 'THESIS', 'WORKING_PAPER', 'OTHER', name='publicationtype'), nullable=False),\n-    sa.Column('publication_doi', sa.String(length=120), nullable=True),\n-    sa.Column('dataset_doi', sa.String(length=120), nullable=True),\n-    sa.Column('tags', sa.String(length=120), nullable=True),\n-    sa.Column('ds_metrics_id', sa.Integer(), nullable=True),\n-    sa.ForeignKeyConstraint(['ds_metrics_id'], ['ds_metrics.id'], ),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('fm_meta_data',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('uvl_filename', sa.String(length=120), nullable=False),\n-    sa.Column('title', sa.String(length=120), nullable=False),\n-    sa.Column('description', sa.Text(), nullable=False),\n-    sa.Column('publication_type', sa.Enum('NONE', 'ANNOTATION_COLLECTION', 'BOOK', 'BOOK_SECTION', 'CONFERENCE_PAPER', 'DATA_MANAGEMENT_PLAN', 'JOURNAL_ARTICLE', 'PATENT', 'PREPRINT', 'PROJECT_DELIVERABLE', 'PROJECT_MILESTONE', 'PROPOSAL', 'REPORT', 'SOFTWARE_DOCUMENTATION', 'TAXONOMIC_TREATMENT', 'TECHNICAL_NOTE', 'THESIS', 'WORKING_PAPER', 'OTHER', name='publicationtype'), nullable=False),\n-    sa.Column('publication_doi', sa.String(length=120), nullable=True),\n-    sa.Column('tags', sa.String(length=120), nullable=True),\n-    sa.Column('uvl_version', sa.String(length=120), nullable=True),\n-    sa.Column('fm_metrics_id', sa.Integer(), nullable=True),\n-    sa.ForeignKeyConstraint(['fm_metrics_id'], ['fm_metrics.id'], ),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('user_profile',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('user_id', sa.Integer(), nullable=False),\n-    sa.Column('orcid', sa.String(length=19), nullable=True),\n-    sa.Column('affiliation', sa.String(length=100), nullable=True),\n-    sa.Column('name', sa.String(length=100), nullable=False),\n-    sa.Column('surname', sa.String(length=100), nullable=False),\n-    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n-    sa.PrimaryKeyConstraint('id'),\n-    sa.UniqueConstraint('user_id')\n-    )\n-    op.create_table('author',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('name', sa.String(length=120), nullable=False),\n-    sa.Column('affiliation', sa.String(length=120), nullable=True),\n-    sa.Column('orcid', sa.String(length=120), nullable=True),\n-    sa.Column('ds_meta_data_id', sa.Integer(), nullable=True),\n-    sa.Column('fm_meta_data_id', sa.Integer(), nullable=True),\n-    sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n-    sa.ForeignKeyConstraint(['fm_meta_data_id'], ['fm_meta_data.id'], ),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('data_set',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('user_id', sa.Integer(), nullable=False),\n-    sa.Column('ds_meta_data_id', sa.Integer(), nullable=False),\n-    sa.Column('created_at', sa.DateTime(), nullable=False),\n-    sa.ForeignKeyConstraint(['ds_meta_data_id'], ['ds_meta_data.id'], ),\n-    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('ds_download_record',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('user_id', sa.Integer(), nullable=True),\n-    sa.Column('dataset_id', sa.Integer(), nullable=True),\n-    sa.Column('download_date', sa.DateTime(), nullable=False),\n-    sa.Column('download_cookie', sa.String(length=36), nullable=False),\n-    sa.ForeignKeyConstraint(['dataset_id'], ['data_set.id'], ),\n-    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('ds_view_record',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('user_id', sa.Integer(), nullable=True),\n-    sa.Column('dataset_id', sa.Integer(), nullable=True),\n-    sa.Column('view_date', sa.DateTime(), nullable=False),\n-    sa.Column('view_cookie', sa.String(length=36), nullable=False),\n-    sa.ForeignKeyConstraint(['dataset_id'], ['data_set.id'], ),\n-    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('feature_model',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('data_set_id', sa.Integer(), nullable=False),\n-    sa.Column('fm_meta_data_id', sa.Integer(), nullable=True),\n-    sa.ForeignKeyConstraint(['data_set_id'], ['data_set.id'], ),\n-    sa.ForeignKeyConstraint(['fm_meta_data_id'], ['fm_meta_data.id'], ),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('file',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('name', sa.String(length=120), nullable=False),\n-    sa.Column('checksum', sa.String(length=120), nullable=False),\n-    sa.Column('size', sa.Integer(), nullable=False),\n-    sa.Column('feature_model_id', sa.Integer(), nullable=False),\n-    sa.ForeignKeyConstraint(['feature_model_id'], ['feature_model.id'], ),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('file_download_record',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('user_id', sa.Integer(), nullable=True),\n-    sa.Column('file_id', sa.Integer(), nullable=True),\n-    sa.Column('download_date', sa.DateTime(), nullable=False),\n-    sa.Column('download_cookie', sa.String(length=36), nullable=False),\n-    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),\n-    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    op.create_table('file_view_record',\n-    sa.Column('id', sa.Integer(), nullable=False),\n-    sa.Column('user_id', sa.Integer(), nullable=True),\n-    sa.Column('file_id', sa.Integer(), nullable=False),\n-    sa.Column('view_date', sa.DateTime(), nullable=True),\n-    sa.Column('view_cookie', sa.String(length=36), nullable=True),\n-    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),\n-    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n-    sa.PrimaryKeyConstraint('id')\n-    )\n-    # ### end Alembic commands ###\n-\n-\n-def downgrade():\n-    # ### commands auto generated by Alembic - please adjust! ###\n-    op.drop_table('file_view_record')\n-    op.drop_table('file_download_record')\n-    op.drop_table('file')\n-    op.drop_table('feature_model')\n-    op.drop_table('ds_view_record')\n-    op.drop_table('ds_download_record')\n-    op.drop_table('data_set')\n-    op.drop_table('author')\n-    op.drop_table('user_profile')\n-    op.drop_table('fm_meta_data')\n-    op.drop_table('ds_meta_data')\n-    op.drop_table('zenodo')\n-    op.drop_table('webhook')\n-    op.drop_table('user')\n-    op.drop_table('fm_metrics')\n-    op.drop_table('ds_metrics')\n-    op.drop_table('doi_mapping')\n-    # ### end Alembic commands ###"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/24",
    "id": 2192558199,
    "node_id": "PR_kwDONB39G86Cr8h3",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/24",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/24.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/24.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/24",
    "number": 24,
    "state": "closed",
    "locked": false,
    "title": "11 view user profile",
    "user": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-21T15:19:53Z",
    "updated_at": "2024-12-04T11:17:36Z",
    "closed_at": "2024-11-21T15:57:38Z",
    "merged_at": null,
    "merge_commit_sha": "3c650090cf4809e13c8c92536c6267aced3aaaaf",
    "assignee": {
      "login": "pabmatang",
      "id": 73099537,
      "node_id": "MDQ6VXNlcjczMDk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabmatang",
      "html_url": "https://github.com/pabmatang",
      "followers_url": "https://api.github.com/users/pabmatang/followers",
      "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
      "organizations_url": "https://api.github.com/users/pabmatang/orgs",
      "repos_url": "https://api.github.com/users/pabmatang/repos",
      "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabmatang/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pabmatang",
        "id": 73099537,
        "node_id": "MDQ6VXNlcjczMDk5NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73099537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pabmatang",
        "html_url": "https://github.com/pabmatang",
        "followers_url": "https://api.github.com/users/pabmatang/followers",
        "following_url": "https://api.github.com/users/pabmatang/following{/other_user}",
        "gists_url": "https://api.github.com/users/pabmatang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pabmatang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pabmatang/subscriptions",
        "organizations_url": "https://api.github.com/users/pabmatang/orgs",
        "repos_url": "https://api.github.com/users/pabmatang/repos",
        "events_url": "https://api.github.com/users/pabmatang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pabmatang/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [
      {
        "id": 7619191830,
        "node_id": "LA_kwDONB39G88AAAABxiOkFg",
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      }
    ],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/24/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/24/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/24/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/9099f96e08ee101798fdf32a6aef272fa4379087",
    "head": {
      "label": "TostaHub:11-view-user-profile",
      "ref": "11-view-user-profile",
      "sha": "9099f96e08ee101798fdf32a6aef272fa4379087",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "c3fc148ac239b78a73b419802dca4ba9396b9e82",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/24"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/24"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/24"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/24/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/24/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/24/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/9099f96e08ee101798fdf32a6aef272fa4379087"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "c81b3b2380c1b21c8ded0c25f49f02fce442a094",
        "filename": ".github/ISSUE_TEMPLATE/1-bug-report.yml",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/9099f96e08ee101798fdf32a6aef272fa4379087/.github%2FISSUE_TEMPLATE%2F1-bug-report.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/9099f96e08ee101798fdf32a6aef272fa4379087/.github%2FISSUE_TEMPLATE%2F1-bug-report.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2FISSUE_TEMPLATE%2F1-bug-report.yml?ref=9099f96e08ee101798fdf32a6aef272fa4379087",
        "patch": "@@ -0,0 +1,41 @@\n+name: Bug report\n+description: Inform of an error. \n+labels: [bug]\n+\n+body:\n+  - type: markdown\n+    attributes:\n+      value: |\n+        Thanks for taking the time to fill out this bug report! Before continuing, please verify that there is [no bug report](https://github.com/TostaHub/tostahub-uvlhub/issues) that matches yours.\n+  - type: textarea\n+    attributes:\n+      label: Description\n+      description: A clear and concise description of the problem.\n+    validations:\n+      required: true\n+  - type: textarea\n+    attributes:\n+      label: Steps to reproduce\n+      description: Explain how we can reproduce the bug\n+    validations:\n+      required: true\n+  - type: textarea\n+    attributes:\n+      label: Expected behavior\n+      description: A clear and concise description of the desired behavior.\n+    validations:\n+      required: true\n+  - type: textarea\n+    attributes:\n+      label: Screenshots\n+      description: If applicable, screenshots that help explain the problem.\n+  - type: dropdown\n+    attributes:\n+      label: Server platform\n+      description: Platform on which you are running the server.\n+      options:\n+        - Linux\n+        - Windows\n+        - macOS\n+    validations:\n+      required: true"
      },
      {
        "sha": "5b8ad776bd267a51487a0838dadcb14a25df8f1f",
        "filename": ".github/ISSUE_TEMPLATE/2-feature-request.yml",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/9099f96e08ee101798fdf32a6aef272fa4379087/.github%2FISSUE_TEMPLATE%2F2-feature-request.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/9099f96e08ee101798fdf32a6aef272fa4379087/.github%2FISSUE_TEMPLATE%2F2-feature-request.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2FISSUE_TEMPLATE%2F2-feature-request.yml?ref=9099f96e08ee101798fdf32a6aef272fa4379087",
        "patch": "@@ -0,0 +1,35 @@\n+name: Feature request\n+description: Propose new features. \n+labels: [enhancement]\n+\n+body:\n+  - type: markdown\n+    attributes:\n+      value: |\n+        Thanks for your interest in improving TostaHub! Before continuing, please verify that there is [no feature report](https://github.com/TostaHub/tostahub-uvlhub/issues) that matches yours.\n+  - type: textarea\n+    attributes:\n+      label: Description\n+      description: A clear and concise description of the problem.\n+    validations:\n+      required: true\n+  - type: dropdown\n+    attributes:\n+      label: Modules\n+      description: Add the related modules to the request if you can.\n+      multiple: true\n+      options:\n+        - Auth\n+        - Public\n+        - Teams\n+        - Webhook\n+        - Profile\n+        - Dataset\n+        - Explore\n+        - Flamapy\n+        - Hubfile\n+        - Feature Model\n+        - Fakenodo\n+        - New module\n+    validations:\n+      required: false"
      },
      {
        "sha": "ec4bb386bcf8a4946923eff961cc7cdf70c0aedf",
        "filename": ".github/ISSUE_TEMPLATE/config.yml",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/9099f96e08ee101798fdf32a6aef272fa4379087/.github%2FISSUE_TEMPLATE%2Fconfig.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/9099f96e08ee101798fdf32a6aef272fa4379087/.github%2FISSUE_TEMPLATE%2Fconfig.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fconfig.yml?ref=9099f96e08ee101798fdf32a6aef272fa4379087",
        "patch": "@@ -0,0 +1 @@\n+blank_issues_enabled: false\n\\ No newline at end of file"
      },
      {
        "sha": "9f8c6c53b50ba7d3700bd63206e9ff408fddffaa",
        "filename": ".github/workflows/commits.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=e68373226a6e6c44fc7d048fc337329ee3febfce",
        "patch": "@@ -1,18 +0,0 @@\n-name: Commits Syntax Checker\n-\n-on:\n-  pull_request:\n-    branches: [main]\n-    types: [opened, reopened, edited, review_requested, synchronize]\n-  push:\n-    branches:\n-      - \"main\"\n-  workflow_call:\n-\n-jobs:\n-  check:\n-    name: Conventional Commits\n-    runs-on: ubuntu-latest\n-    steps:\n-      - uses: actions/checkout@v2\n-      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file"
      },
      {
        "sha": "c5b9dbad0e7570244cb84942b53b859bf041af6c",
        "filename": ".github/workflows/deloyment_on_webhook.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Fdeloyment_on_webhook.yml?ref=e68373226a6e6c44fc7d048fc337329ee3febfce",
        "patch": "@@ -1,32 +0,0 @@\n-name: Deploy on Webhook\n-\n-on:\n-  workflow_run:\n-    workflows: \n-      - \"Python Lint\"\n-      - \"Run tests\"\n-    types:\n-      - completed\n-\n-jobs:\n-  deploy:\n-    if: github.ref == 'refs/heads/main'\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Check lint and test results\n-      run: |\n-        if [ \"${{ github.event.workflow_run.conclusion }}\" != \"success\" ]; then\n-          echo \"Lint or Test workflow did not succeed. Exiting.\"\n-          exit 1\n-        fi\n-\n-    - name: Trigger Deployment Webhook\n-      env:\n-        WEBHOOK_DOMAIN: ${{ secrets.WEBHOOK_DOMAIN }}\n-        WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}\n-      run: |\n-        curl -X POST https://${{ secrets.WEBHOOK_DOMAIN }}/webhook/deploy -H \"Authorization: Bearer ${{ secrets.WEBHOOK_TOKEN }}\""
      },
      {
        "sha": "f7dfe75eb96badbdd3ee434377bee31f33a173df",
        "filename": ".github/workflows/deployment_on_dockerhub.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml?ref=e68373226a6e6c44fc7d048fc337329ee3febfce",
        "patch": "@@ -1,43 +0,0 @@\n-# This workflow uses actions that are not certified by GitHub.\n-# They are provided by a third-party and are governed by\n-# separate terms of service, privacy policy, and support\n-# documentation.\n-\n-# GitHub recommends pinning actions to a commit SHA.\n-# To get a newer version, you will need to update the SHA.\n-# You can also reference a tag or branch, but the action may change without warning.\n-\n-name: Publish image in Docker Hub\n-\n-on:\n-  release:\n-    types: [published]\n-\n-jobs:\n-  push_to_registry:\n-    name: Push Docker image to Docker Hub\n-    runs-on: ubuntu-latest\n-    steps:\n-      - name: Check out the repo\n-        uses: actions/checkout@v3\n-\n-      - name: Log in to Docker Hub\n-        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a\n-        with:\n-          username: ${{ secrets.DOCKER_USER }}\n-          password: ${{ secrets.DOCKER_PASSWORD }}\n-\n-      - name: Build and push Docker image\n-        run: docker build --build-arg VERSION_TAG=${{ github.event.release.tag_name }} -t drorganvidez/uvlhub:${{ github.event.release.tag_name }} -f docker/images/Dockerfile.prod .\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled\n-\n-      - name: Push Docker image to Docker Hub\n-        run: docker push drorganvidez/uvlhub:${{ github.event.release.tag_name }}\n-\n-      - name: Tag and push latest\n-        run: |\n-          docker tag drorganvidez/uvlhub:${{ github.event.release.tag_name }} drorganvidez/uvlhub:latest\n-          docker push drorganvidez/uvlhub:latest\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled"
      },
      {
        "sha": "ccbd3311ba585fae0de19dc7a96de461fce8de9c",
        "filename": ".github/workflows/lint.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Flint.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/e68373226a6e6c44fc7d048fc337329ee3febfce/.github%2Fworkflows%2Flint.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Flint.yml?ref=e68373226a6e6c44fc7d048fc337329ee3febfce",
        "patch": "@@ -1,28 +0,0 @@\n-name: Python Lint\n-\n-on:\n-  push:\n-    branches: [main, develop]\n-  pull_request:\n-    branches: [main, develop]\n-\n-jobs:\n-  lint:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - uses: actions/checkout@v2\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: '3.x'\n-\n-    - name: Install Dependencies\n-      run: |\n-        python -m pip install --upgrade pip\n-        pip install flake8\n-\n-    - name: Lint with flake8\n-      run: |\n-        flake8 app"
      },
      {
        "sha": "0da3759bf2760fc0a421d041e8cc8fdbd5be88d6",
        "filename": ".github/workflows/render.yml",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/9099f96e08ee101798fdf32a6aef272fa4379087/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/9099f96e08ee101798fdf32a6aef272fa4379087/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=9099f96e08ee101798fdf32a6aef272fa4379087",
        "patch": "@@ -0,0 +1,66 @@\n+name: Deploy to Render\n+\n+on:\n+    push:\n+      tags:\n+      - 'v*' \n+    pull_request:\n+      branches:\n+        - main\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+        run: |\n+          curl \"$deploy_url\""
      },
      {
        "sha": "2add39ddbef160ef469a7811c12a6035a5378cfa",
        "filename": "PoliticaCommits.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/9099f96e08ee101798fdf32a6aef272fa4379087/PoliticaCommits.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/9099f96e08ee101798fdf32a6aef272fa4379087/PoliticaCommits.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/PoliticaCommits.pdf?ref=9099f96e08ee101798fdf32a6aef272fa4379087"
      },
      {
        "sha": "ad20bb2b0409b8a56e354aad6d3fb93247eab0ec",
        "filename": "app/modules/dataset/routes.py",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/9099f96e08ee101798fdf32a6aef272fa4379087/app%2Fmodules%2Fdataset%2Froutes.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/9099f96e08ee101798fdf32a6aef272fa4379087/app%2Fmodules%2Fdataset%2Froutes.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Froutes.py?ref=9099f96e08ee101798fdf32a6aef272fa4379087",
        "patch": "@@ -117,6 +117,16 @@ def list_dataset():\n         local_datasets=dataset_service.get_unsynchronized(current_user.id),\n     )\n \n+@dataset_bp.route(\"/dataset/user_id/<int:user_id>\", methods=[\"GET\"])\n+def user_dataset(user_id):\n+    #dataset = dataset_service.get_or_404(dataset_id)\n+    return render_template(\n+        \"dataset/user_datasets.html\",\n+        datasets=dataset_service.get_synchronized(user_id),\n+        local_datasets=dataset_service.get_unsynchronized(user_id),\n+        \n+    )\n+\n \n @dataset_bp.route(\"/dataset/file/upload\", methods=[\"POST\"])\n @login_required"
      },
      {
        "sha": "1ebff4ffec038ee1e22e00bb0eac925580d8eb15",
        "filename": "app/modules/dataset/templates/dataset/user_datasets.html",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/9099f96e08ee101798fdf32a6aef272fa4379087/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/9099f96e08ee101798fdf32a6aef272fa4379087/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fuser_datasets.html?ref=9099f96e08ee101798fdf32a6aef272fa4379087",
        "patch": "@@ -0,0 +1,118 @@\n+{% extends \"base_template.html\" %}\n+\n+{% block title %}My datasets{% endblock %}\n+\n+{% block content %}\n+\n+    <h1 class=\"h3 mb-3\">Datasets de {{ datasets[0].user.profile.name }} {{ datasets[0].user.profile.surname }}</h1>\n+\n+    {% if datasets %}\n+        <div class=\" col-12\">\n+            <div class=\"card\">\n+\n+                <div class=\"card-body\">\n+                    <table class=\"table\">\n+                        <thead>\n+                        <tr>\n+                            <th>Title</th>\n+                            <th>Description</th>\n+                            <th>Publication type</th>\n+                            <th>Dataset DOI</th>\n+                            <th>Options</th>\n+                        </tr>\n+                        </thead>\n+                        <tbody>\n+                        {% for dataset in datasets %}\n+                            <tr>\n+                                <td>\n+                                    <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                        {{ dataset.ds_meta_data.title }}\n+                                    </a>\n+                                </td>\n+                                <td>{{ dataset.ds_meta_data.description }}</td>\n+                                <td>{{ dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n+                                <td><a href=\"{{ dataset.get_uvlhub_doi() }}\"\n+                                       target=\"_blank\">{{ dataset.get_uvlhub_doi() }}</a></td>\n+                                <td>\n+                                    <a href=\"{{ dataset.get_uvlhub_doi() }}\">\n+                                        <i data-feather=\"eye\"></i>\n+                                    </a>\n+                                    <a href=\"{{ url_for('dataset.download_dataset', dataset_id=dataset.id) }}\">\n+                                        <i data-feather=\"download\"></i>\n+                                    </a>\n+                                </td>\n+                            </tr>\n+                        {% endfor %}\n+                        </tbody>\n+                    </table>\n+                </div>\n+\n+            </div>\n+\n+        </div>\n+    {% else %}\n+        <div class=\"col-12 col-md-6\">\n+            <div class=\"card\">\n+                <div class=\"card-header\">\n+                    <h5 class=\"card-title mb-0\">No datasets found</h5>\n+                </div>\n+                <div class=\"card-body\">\n+                    <p class=\"card-text\">\n+                        You have not created any dataset synchronized with Zenodo, are you up for it?\n+                    </p>\n+                    <a href=\"{{ url_for('dataset.create_dataset') }}\" class=\"btn btn-primary\">\n+                        Upload dataset</a>\n+                </div>\n+            </div>\n+        </div>\n+    {% endif %}\n+\n+    <div class=\"row\">\n+\n+\n+        <div class=\"col-12\">\n+            {% if local_datasets %}\n+                <div class=\"card\">\n+                    <div class=\"card-body\">\n+                        <div class=\"card-header\">\n+                            <h5 class=\"card-title\">Unsynchronized datasets</h5>\n+                        </div>\n+                        <div class=\"card-body\">\n+                            <table class=\"table\">\n+                                <thead>\n+                                <tr>\n+                                    <th>Title</th>\n+                                    <th>Description</th>\n+                                    <th>Publication type</th>\n+                                    <th>Options</th>\n+                                </tr>\n+                                </thead>\n+                                <tbody>\n+                                {% for local_dataset in local_datasets %}\n+                                    <tr>\n+                                        <td>\n+                                            <a href=\"{{ url_for('dataset.get_unsynchronized_dataset', dataset_id=local_dataset.id) }}\">\n+                                                {{ local_dataset.ds_meta_data.title }}\n+                                            </a>\n+                                        </td>\n+                                        <td>{{ local_dataset.ds_meta_data.description }}</td>\n+                                        <td>{{ local_dataset.ds_meta_data.publication_type.name.replace('_', ' ').title() }}</td>\n+                                        <td>\n+                                            <a href=\"{{ url_for('dataset.get_unsynchronized_dataset', dataset_id=local_dataset.id) }}\">\n+                                                <i data-feather=\"eye\"></i>\n+                                            </a>\n+                                            <a href=\"{{ url_for('dataset.download_dataset', dataset_id=local_dataset.id) }}\">\n+                                                <i data-feather=\"download\"></i>\n+                                            </a>\n+                                        </td>\n+                                    </tr>\n+                                {% endfor %}\n+                                </tbody>\n+                            </table>\n+                        </div>\n+                    </div>\n+                </div>\n+            {% endif %}\n+        </div>\n+\n+{% endblock %}\n\\ No newline at end of file"
      },
      {
        "sha": "eddf8bb7942593f5d367fdcb574dc71e43522f1b",
        "filename": "app/modules/dataset/templates/dataset/view_dataset.html",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/9099f96e08ee101798fdf32a6aef272fa4379087/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/9099f96e08ee101798fdf32a6aef272fa4379087/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fdataset%2Ftemplates%2Fdataset%2Fview_dataset.html?ref=9099f96e08ee101798fdf32a6aef272fa4379087",
        "patch": "@@ -63,8 +63,13 @@ <h1><b>{{ dataset.ds_meta_data.title }}</b></h1>\n                             Uploaded by\n                         </span>\n                     </div>\n-                    <div class=\"col-md-8 col-12\">\n+                    <!-- #region div class=\"col-md-8 col-12\">\n                         <a href=\"#\">{{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}</a>\n+                    </div>-->\n+                    <div class=\"col-md-8 col-12\">\n+                        <a href=\"/dataset/user_id/{{ dataset.user.id }}\">\n+                            {{ dataset.user.profile.surname }}, {{ dataset.user.profile.name }}\n+                        </a>\n                     </div>\n \n                 </div>"
      },
      {
        "sha": "d8f8d46921aa81abc4c0d27703a8908333ae38c3",
        "filename": "docs/d",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/9099f96e08ee101798fdf32a6aef272fa4379087/docs%2Fd",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/9099f96e08ee101798fdf32a6aef272fa4379087/docs%2Fd",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/docs%2Fd?ref=9099f96e08ee101798fdf32a6aef272fa4379087",
        "patch": "@@ -0,0 +1 @@\n+docs"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/22",
    "id": 2191676403,
    "node_id": "PR_kwDONB39G86ColPz",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/22",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/22.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/22.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/22",
    "number": 22,
    "state": "closed",
    "locked": false,
    "title": "Feature/5 advance filtering",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-21T09:05:10Z",
    "updated_at": "2024-11-22T10:27:54Z",
    "closed_at": "2024-11-21T15:10:15Z",
    "merged_at": "2024-11-21T15:10:15Z",
    "merge_commit_sha": "c3fc148ac239b78a73b419802dca4ba9396b9e82",
    "assignee": {
      "login": "Leonidas6000",
      "id": 73244549,
      "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leonidas6000",
      "html_url": "https://github.com/Leonidas6000",
      "followers_url": "https://api.github.com/users/Leonidas6000/followers",
      "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
      "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
      "repos_url": "https://api.github.com/users/Leonidas6000/repos",
      "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "Leonidas6000",
        "id": 73244549,
        "node_id": "MDQ6VXNlcjczMjQ0NTQ5",
        "avatar_url": "https://avatars.githubusercontent.com/u/73244549?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Leonidas6000",
        "html_url": "https://github.com/Leonidas6000",
        "followers_url": "https://api.github.com/users/Leonidas6000/followers",
        "following_url": "https://api.github.com/users/Leonidas6000/following{/other_user}",
        "gists_url": "https://api.github.com/users/Leonidas6000/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Leonidas6000/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Leonidas6000/subscriptions",
        "organizations_url": "https://api.github.com/users/Leonidas6000/orgs",
        "repos_url": "https://api.github.com/users/Leonidas6000/repos",
        "events_url": "https://api.github.com/users/Leonidas6000/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Leonidas6000/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/22/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/22/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/22/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/22fdd0202b2973937852cffe628f886482b3f720",
    "head": {
      "label": "TostaHub:feature/5-advance-filtering",
      "ref": "feature/5-advance-filtering",
      "sha": "22fdd0202b2973937852cffe628f886482b3f720",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:develop",
      "ref": "develop",
      "sha": "e68373226a6e6c44fc7d048fc337329ee3febfce",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/22"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/22"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/22"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/22/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/22/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/22/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/22fdd0202b2973937852cffe628f886482b3f720"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "b4369cfb81ace223ce49cb637ee4b158a9714288",
        "filename": "app/modules/explore/assets/scripts.js",
        "status": "modified",
        "additions": 112,
        "deletions": 0,
        "changes": 112,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/22fdd0202b2973937852cffe628f886482b3f720/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/22fdd0202b2973937852cffe628f886482b3f720/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fassets%2Fscripts.js?ref=22fdd0202b2973937852cffe628f886482b3f720",
        "patch": "@@ -3,6 +3,8 @@ document.addEventListener('DOMContentLoaded', () => {\n });\n \n function send_query() {\n+    setInitialNumUvlFilterMaxMin()\n+    setInitialDatesMaxMin()\n \n     console.log(\"send query...\")\n \n@@ -16,10 +18,24 @@ function send_query() {\n         filter.addEventListener('input', () => {\n             const csrfToken = document.getElementById('csrf_token').value;\n \n+            const startDate = document.querySelector('#start_date');\n+            const endDate = document.querySelector('#end_date');\n+            \n+            setDatesMaxMin(filter, startDate, endDate);\n+\n+            const minUvl = document.querySelector('#min_uvl');\n+            const maxUvl = document.querySelector('#max_uvl');\n+            \n+            setNumUvlFilterMaxMin(filter, minUvl, maxUvl);\n+\n             const searchCriteria = {\n                 csrf_token: csrfToken,\n                 query: document.querySelector('#query').value,\n                 publication_type: document.querySelector('#publication_type').value,\n+                start_date: startDate.value,\n+                end_date: endDate.value,\n+                min_uvl: minUvl.value,\n+                max_uvl: maxUvl.value,\n                 sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n             };\n \n@@ -134,6 +150,85 @@ function send_query() {\n     });\n }\n \n+function setInitialDatesMaxMin() {\n+    const startDateInput = document.querySelector('#start_date');\n+    const endDateInput = document.querySelector('#end_date');\n+    const today = new Date();\n+\n+    const startDate = new Date(startDateInput.value);\n+    if (!isNaN(startDate)) {\n+        const date = today > startDate ? startDate : today\n+        endDateInput.min = dateToString(date);\n+    } else {\n+        endDateInput.min = \"\"\n+    }\n+\n+    const endDate = new Date(endDateInput.value);\n+    if (!isNaN(endDate)) {\n+        const date = today > endDate ? endDate : today\n+        startDateInput.max = dateToString(date);    \n+    } else {\n+        startDateInput.max = dateToString(today);\n+    }\n+}\n+\n+function setDatesMaxMin(filter, startDateInput, endDateInput) {\n+    if (filter.id === startDateInput.id) {\n+        const startDate = new Date(startDateInput.value);\n+        if (isNaN(startDate)) {\n+            endDateInput.min = \"\";\n+        } else {\n+            endDateInput.min = dateToString(startDate);\n+        }\n+    } else if (filter.id === endDateInput.id) {\n+        const endDate = new Date(endDateInput.value);\n+        const today = new Date();\n+        if (isNaN(endDate)) {\n+            startDateInput.max = dateToString(today);\n+        } else {\n+            const date = today > endDate ? endDate : today\n+            startDateInput.max = dateToString(date);\n+        }\n+    }\n+}\n+\n+function dateToString(date) {\n+    return date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\n+}\n+\n+function setInitialNumUvlFilterMaxMin() {\n+    const minUvl = document.querySelector('#min_uvl');\n+    const maxUvl = document.querySelector('#max_uvl');\n+\n+    const numMin = parseInt(minUvl.value);\n+    if (!isNaN(numMin)) {\n+        maxUvl.min = numMin\n+    }\n+\n+    const numMax = parseInt(maxUvl.value);\n+    if (!isNaN(numMax)) {\n+        minUvl.max = numMax\n+    }\n+}\n+\n+function setNumUvlFilterMaxMin(filter, minUvl, maxUvl) {\n+    if (filter.id === minUvl.id) {\n+        const num = parseInt(minUvl.value);\n+        if (isNaN(num)) {\n+            maxUvl.min = 0;\n+        } else {\n+            maxUvl.min = num;\n+        }\n+    } else if (filter.id === maxUvl.id) {\n+        const num = parseInt(maxUvl.value);\n+        if (isNaN(num)) {\n+            minUvl.max = \"\"; // We suppose that more than this value is not feasible\n+        } else {\n+            minUvl.max = num;\n+        }\n+    } \n+}\n+\n function formatDate(dateString) {\n     const options = {day: 'numeric', month: 'long', year: 'numeric', hour: 'numeric', minute: 'numeric'};\n     const date = new Date(dateString);\n@@ -172,6 +267,20 @@ function clearFilters() {\n     publicationTypeSelect.value = \"any\"; // replace \"any\" with whatever your default value is\n     // publicationTypeSelect.dispatchEvent(new Event('input', {bubbles: true}));\n \n+    // Reset the dates to none\n+    let startDateInput = document.querySelector('#start_date');\n+    startDateInput.value = \"\";\n+\n+    let endDateInput = document.querySelector('#end_date');\n+    endDateInput.value = \"\";\n+    \n+    // Reset the number of uvl models filters\n+    let minUvlInput = document.querySelector('#min_uvl');\n+    minUvlInput.value = \"\";\n+\n+    let maxUvlInput = document.querySelector('#max_uvl');\n+    maxUvlInput.value = \"\";\n+    \n     // Reset the sorting option\n     let sortingOptions = document.querySelectorAll('[name=\"sorting\"]');\n     sortingOptions.forEach(option => {\n@@ -181,6 +290,9 @@ function clearFilters() {\n \n     // Perform a new search with the reset filters\n     queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n+\n+    setInitialNumUvlFilterMaxMin()\n+    setInitialDatesMaxMin()\n }\n \n document.addEventListener('DOMContentLoaded', () => {"
      },
      {
        "sha": "b5bea1307c2866669f07774888159a78f361001d",
        "filename": "app/modules/explore/repositories.py",
        "status": "modified",
        "additions": 29,
        "deletions": 2,
        "changes": 31,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/22fdd0202b2973937852cffe628f886482b3f720/app%2Fmodules%2Fexplore%2Frepositories.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/22fdd0202b2973937852cffe628f886482b3f720/app%2Fmodules%2Fexplore%2Frepositories.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Frepositories.py?ref=22fdd0202b2973937852cffe628f886482b3f720",
        "patch": "@@ -1,16 +1,27 @@\n import re\n-from sqlalchemy import any_, or_\n+from sqlalchemy import any_, or_, func\n import unidecode\n from app.modules.dataset.models import Author, DSMetaData, DataSet, PublicationType\n from app.modules.featuremodel.models import FMMetaData, FeatureModel\n+from app.modules.hubfile.models import Hubfile\n from core.repositories.BaseRepository import BaseRepository\n+from datetime import datetime\n+\n+\n+def safe_parse_date(date, date_format, default_date=None):\n+    try:\n+        return datetime.strptime(date, date_format)\n+    except ValueError:\n+        return default_date\n \n \n class ExploreRepository(BaseRepository):\n     def __init__(self):\n         super().__init__(DataSet)\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n+    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[],\n+               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", **kwargs):\n+\n         # Normalize and remove unwanted characters\n         normalized_query = unidecode.unidecode(query).lower()\n         cleaned_query = re.sub(r'[,.\":\\'()\\[\\]^;!\u00a1\u00bf?]', \"\", normalized_query)\n@@ -35,6 +46,7 @@ def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **\n             .join(DSMetaData.authors)\n             .join(DataSet.feature_models)\n             .join(FeatureModel.fm_meta_data)\n+            .join(FeatureModel.files)\n             .filter(or_(*filters))\n             .filter(DSMetaData.dataset_doi.isnot(None))  # Exclude datasets with empty dataset_doi\n         )\n@@ -52,6 +64,21 @@ def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **\n         if tags:\n             datasets = datasets.filter(DSMetaData.tags.ilike(any_(f\"%{tag}%\" for tag in tags)))\n \n+        date_format = '%Y-%m-%d'\n+        if start_date:\n+            date_obj = safe_parse_date(start_date, date_format)\n+            datasets = datasets.filter(func.date(DataSet.created_at) >= date_obj)\n+\n+        if end_date:\n+            date_obj = safe_parse_date(end_date, date_format)\n+            datasets = datasets.filter(func.date(DataSet.created_at) <= date_obj)\n+\n+        if min_uvl.isdigit():\n+            datasets = datasets.group_by(DataSet.id).having(func.count(Hubfile.id) >= int(min_uvl))\n+\n+        if max_uvl.isdigit():\n+            datasets = datasets.group_by(DataSet.id).having(func.count(Hubfile.id) <= int(max_uvl))\n+\n         # Order by created_at\n         if sorting == \"oldest\":\n             datasets = datasets.order_by(self.model.created_at.asc())"
      },
      {
        "sha": "b88e7d95a3f556c1107a3ce11f2547903a86c451",
        "filename": "app/modules/explore/services.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/22fdd0202b2973937852cffe628f886482b3f720/app%2Fmodules%2Fexplore%2Fservices.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/22fdd0202b2973937852cffe628f886482b3f720/app%2Fmodules%2Fexplore%2Fservices.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Fservices.py?ref=22fdd0202b2973937852cffe628f886482b3f720",
        "patch": "@@ -6,5 +6,7 @@ class ExploreService(BaseService):\n     def __init__(self):\n         super().__init__(ExploreRepository())\n \n-    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[], **kwargs):\n-        return self.repository.filter(query, sorting, publication_type, tags, **kwargs)\n+    def filter(self, query=\"\", sorting=\"newest\", publication_type=\"any\", tags=[],\n+               start_date=\"\", end_date=\"\", min_uvl=\"\", max_uvl=\"\", **kwargs):\n+        return self.repository.filter(query, sorting, publication_type, tags, start_date,\n+                                      end_date, min_uvl, max_uvl, **kwargs)"
      },
      {
        "sha": "32c652ed4e96111e09c3f8979a3c2d7f7221f920",
        "filename": "app/modules/explore/templates/explore/index.html",
        "status": "modified",
        "additions": 33,
        "deletions": 1,
        "changes": 34,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/22fdd0202b2973937852cffe628f886482b3f720/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/22fdd0202b2973937852cffe628f886482b3f720/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/app%2Fmodules%2Fexplore%2Ftemplates%2Fexplore%2Findex.html?ref=22fdd0202b2973937852cffe628f886482b3f720",
        "patch": "@@ -86,14 +86,46 @@ <h3 class=\"h3 mb-3\">\n \n                         </div>\n \n+                        <p style=\"margin-bottom: 0.2rem;\">Filter by date created at:</p>\n+\n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"start_date\">Start date</label>\n+                                <input class=\"form-control\" type=\"date\" name=\"start_date\" id=\"start_date\" required=\"\">\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"end_date\">End date</label>\n+                                <input class=\"form-control\" type=\"date\" name=\"end_date\" id=\"end_date\" required=\"\">                                   \n+                            </div>\n+                        </div>\n+                        \n+                        <p style=\"margin-bottom: 0.2rem;\">Filter number of uvl models:</p>\n+\n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"min_uvl\">Minimum</label>\n+                                <input class=\"form-control\" type=\"number\" name=\"min_uvl\" id=\"min_uvl\" min=\"0\" required=\"\">\n+                            </div>\n+                        </div>\n+                        \n+                        <div class=\"col-lg-6\">\n+                            <div class=\"mb-3\">\n+                                <label class=\"form-label\" for=\"max_uvl\">Maximum</label>\n+                                <input class=\"form-control\" type=\"number\" name=\"max_uvl\" id=\"max_uvl\" min=\"0\" required=\"\">                                   \n+                            </div>\n+                        </div>\n+\n                     </div>\n \n                     <div class=\"row\">\n \n                         <div class=\"col-6\">\n \n                             <div>\n-                                Sort results by creation date\n+                                <p style=\"margin-bottom: 0.2rem;\">Sort results by creation date</p>\n                                 <label class=\"form-check\">\n                                     <input class=\"form-check-input\" type=\"radio\" value=\"newest\" name=\"sorting\"\n                                            checked=\"\">"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/17",
    "id": 2175253885,
    "node_id": "PR_kwDONB39G86Bp719",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/17",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/17.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/17.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/17",
    "number": 17,
    "state": "closed",
    "locked": false,
    "title": "fix: Fix yml files format",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Fixed the format of the template issue yml files.",
    "created_at": "2024-11-12T16:12:59Z",
    "updated_at": "2024-11-12T16:16:58Z",
    "closed_at": "2024-11-12T16:16:51Z",
    "merged_at": "2024-11-12T16:16:51Z",
    "merge_commit_sha": "4036bccacd96b68672aa8f0cfa37bc4e9b850939",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/17/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/17/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/17/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/44e1cdf24ff915c9ce7a2991f56862308d4dca33",
    "head": {
      "label": "TostaHub:16-fix-issue-templates-error",
      "ref": "16-fix-issue-templates-error",
      "sha": "44e1cdf24ff915c9ce7a2991f56862308d4dca33",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "cc6c6bdc64583703b4e742e2c6f31f5c93d5e967",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/17"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/17"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/17"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/17/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/17/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/17/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/44e1cdf24ff915c9ce7a2991f56862308d4dca33"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "c81b3b2380c1b21c8ded0c25f49f02fce442a094",
        "filename": ".github/ISSUE_TEMPLATE/1-bug-report.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/44e1cdf24ff915c9ce7a2991f56862308d4dca33/.github%2FISSUE_TEMPLATE%2F1-bug-report.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/44e1cdf24ff915c9ce7a2991f56862308d4dca33/.github%2FISSUE_TEMPLATE%2F1-bug-report.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2FISSUE_TEMPLATE%2F1-bug-report.yml?ref=44e1cdf24ff915c9ce7a2991f56862308d4dca33",
        "patch": "@@ -6,9 +6,7 @@ body:\n   - type: markdown\n     attributes:\n       value: |\n-\tThank you for your interest in improving TostaHub!\n-\n-\tBefore continuing, please verify that there is [no bug report](https://github.com/TostaHub/tostahub-uvlhub/issues) that matches yours.\n+        Thanks for taking the time to fill out this bug report! Before continuing, please verify that there is [no bug report](https://github.com/TostaHub/tostahub-uvlhub/issues) that matches yours.\n   - type: textarea\n     attributes:\n       label: Description"
      },
      {
        "sha": "5b8ad776bd267a51487a0838dadcb14a25df8f1f",
        "filename": ".github/ISSUE_TEMPLATE/2-feature-request.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/44e1cdf24ff915c9ce7a2991f56862308d4dca33/.github%2FISSUE_TEMPLATE%2F2-feature-request.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/44e1cdf24ff915c9ce7a2991f56862308d4dca33/.github%2FISSUE_TEMPLATE%2F2-feature-request.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2FISSUE_TEMPLATE%2F2-feature-request.yml?ref=44e1cdf24ff915c9ce7a2991f56862308d4dca33",
        "patch": "@@ -6,9 +6,7 @@ body:\n   - type: markdown\n     attributes:\n       value: |\n-\tThank you for your interest in improving TostaHub!\n-\n-\tBefore continuing, please verify that there is [no feature report](https://github.com/TostaHub/tostahub-uvlhub/issues) that matches yours.\n+        Thanks for your interest in improving TostaHub! Before continuing, please verify that there is [no feature report](https://github.com/TostaHub/tostahub-uvlhub/issues) that matches yours.\n   - type: textarea\n     attributes:\n       label: Description"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/15",
    "id": 2175221674,
    "node_id": "PR_kwDONB39G86Bpz-q",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/15",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/15.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/15.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/15",
    "number": 15,
    "state": "closed",
    "locked": false,
    "title": "feat: Add issue templates and configuration",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Added issue templates and a configuration to force new issues to use the templates.",
    "created_at": "2024-11-12T15:57:23Z",
    "updated_at": "2024-11-12T16:00:01Z",
    "closed_at": "2024-11-12T15:59:58Z",
    "merged_at": "2024-11-12T15:59:58Z",
    "merge_commit_sha": "cc6c6bdc64583703b4e742e2c6f31f5c93d5e967",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/15/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/15/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/15/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/4bd068d79de74ae39c1789a3ff08451f19ec36ec",
    "head": {
      "label": "TostaHub:14-add-issue-templates",
      "ref": "14-add-issue-templates",
      "sha": "4bd068d79de74ae39c1789a3ff08451f19ec36ec",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "94f8af2019d071fa24bd6e2e23dd331197bea25f",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/15"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/15"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/15"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/15/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/15/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/15/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/4bd068d79de74ae39c1789a3ff08451f19ec36ec"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "34eac8860ba1c241039e0d83791e1691d6b3f3e4",
        "filename": ".github/ISSUE_TEMPLATE/1-bug-report.yml",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4bd068d79de74ae39c1789a3ff08451f19ec36ec/.github%2FISSUE_TEMPLATE%2F1-bug-report.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4bd068d79de74ae39c1789a3ff08451f19ec36ec/.github%2FISSUE_TEMPLATE%2F1-bug-report.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2FISSUE_TEMPLATE%2F1-bug-report.yml?ref=4bd068d79de74ae39c1789a3ff08451f19ec36ec",
        "patch": "@@ -0,0 +1,43 @@\n+name: Bug report\n+description: Inform of an error. \n+labels: [bug]\n+\n+body:\n+  - type: markdown\n+    attributes:\n+      value: |\n+\tThank you for your interest in improving TostaHub!\n+\n+\tBefore continuing, please verify that there is [no bug report](https://github.com/TostaHub/tostahub-uvlhub/issues) that matches yours.\n+  - type: textarea\n+    attributes:\n+      label: Description\n+      description: A clear and concise description of the problem.\n+    validations:\n+      required: true\n+  - type: textarea\n+    attributes:\n+      label: Steps to reproduce\n+      description: Explain how we can reproduce the bug\n+    validations:\n+      required: true\n+  - type: textarea\n+    attributes:\n+      label: Expected behavior\n+      description: A clear and concise description of the desired behavior.\n+    validations:\n+      required: true\n+  - type: textarea\n+    attributes:\n+      label: Screenshots\n+      description: If applicable, screenshots that help explain the problem.\n+  - type: dropdown\n+    attributes:\n+      label: Server platform\n+      description: Platform on which you are running the server.\n+      options:\n+        - Linux\n+        - Windows\n+        - macOS\n+    validations:\n+      required: true"
      },
      {
        "sha": "788bc1ecc7caed2532adf9e31a454933f2ec260d",
        "filename": ".github/ISSUE_TEMPLATE/2-feature-request.yml",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4bd068d79de74ae39c1789a3ff08451f19ec36ec/.github%2FISSUE_TEMPLATE%2F2-feature-request.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4bd068d79de74ae39c1789a3ff08451f19ec36ec/.github%2FISSUE_TEMPLATE%2F2-feature-request.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2FISSUE_TEMPLATE%2F2-feature-request.yml?ref=4bd068d79de74ae39c1789a3ff08451f19ec36ec",
        "patch": "@@ -0,0 +1,37 @@\n+name: Feature request\n+description: Propose new features. \n+labels: [enhancement]\n+\n+body:\n+  - type: markdown\n+    attributes:\n+      value: |\n+\tThank you for your interest in improving TostaHub!\n+\n+\tBefore continuing, please verify that there is [no feature report](https://github.com/TostaHub/tostahub-uvlhub/issues) that matches yours.\n+  - type: textarea\n+    attributes:\n+      label: Description\n+      description: A clear and concise description of the problem.\n+    validations:\n+      required: true\n+  - type: dropdown\n+    attributes:\n+      label: Modules\n+      description: Add the related modules to the request if you can.\n+      multiple: true\n+      options:\n+        - Auth\n+        - Public\n+        - Teams\n+        - Webhook\n+        - Profile\n+        - Dataset\n+        - Explore\n+        - Flamapy\n+        - Hubfile\n+        - Feature Model\n+        - Fakenodo\n+        - New module\n+    validations:\n+      required: false"
      },
      {
        "sha": "ec4bb386bcf8a4946923eff961cc7cdf70c0aedf",
        "filename": ".github/ISSUE_TEMPLATE/config.yml",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/4bd068d79de74ae39c1789a3ff08451f19ec36ec/.github%2FISSUE_TEMPLATE%2Fconfig.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/4bd068d79de74ae39c1789a3ff08451f19ec36ec/.github%2FISSUE_TEMPLATE%2Fconfig.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2FISSUE_TEMPLATE%2Fconfig.yml?ref=4bd068d79de74ae39c1789a3ff08451f19ec36ec",
        "patch": "@@ -0,0 +1 @@\n+blank_issues_enabled: false\n\\ No newline at end of file"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/13",
    "id": 2175164988,
    "node_id": "PR_kwDONB39G86BpmI8",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/13",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/13.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/13.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/13",
    "number": 13,
    "state": "closed",
    "locked": false,
    "title": "feat: Add render workflow and delete unused workflows",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Added the render workflow and deleted other unused workflows.",
    "created_at": "2024-11-12T15:29:57Z",
    "updated_at": "2024-11-12T15:42:12Z",
    "closed_at": "2024-11-12T15:42:08Z",
    "merged_at": "2024-11-12T15:42:08Z",
    "merge_commit_sha": "94f8af2019d071fa24bd6e2e23dd331197bea25f",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/13/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/13/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/13/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/b443fc90a4f0f293f9a5997d46403863daa94ee9",
    "head": {
      "label": "TostaHub:12-add-workflows",
      "ref": "12-add-workflows",
      "sha": "b443fc90a4f0f293f9a5997d46403863daa94ee9",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "eef9b5001887c3eb6fc8a01b56e0a2331eddff46",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/13"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/13"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/13"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/13/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/13/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/13/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/b443fc90a4f0f293f9a5997d46403863daa94ee9"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "9f8c6c53b50ba7d3700bd63206e9ff408fddffaa",
        "filename": ".github/workflows/commits.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/eef9b5001887c3eb6fc8a01b56e0a2331eddff46/.github%2Fworkflows%2Fcommits.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/eef9b5001887c3eb6fc8a01b56e0a2331eddff46/.github%2Fworkflows%2Fcommits.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Fcommits.yml?ref=eef9b5001887c3eb6fc8a01b56e0a2331eddff46",
        "patch": "@@ -1,18 +0,0 @@\n-name: Commits Syntax Checker\n-\n-on:\n-  pull_request:\n-    branches: [main]\n-    types: [opened, reopened, edited, review_requested, synchronize]\n-  push:\n-    branches:\n-      - \"main\"\n-  workflow_call:\n-\n-jobs:\n-  check:\n-    name: Conventional Commits\n-    runs-on: ubuntu-latest\n-    steps:\n-      - uses: actions/checkout@v2\n-      - uses: webiny/action-conventional-commits@v1.0.3\n\\ No newline at end of file"
      },
      {
        "sha": "c5b9dbad0e7570244cb84942b53b859bf041af6c",
        "filename": ".github/workflows/deloyment_on_webhook.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/eef9b5001887c3eb6fc8a01b56e0a2331eddff46/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/eef9b5001887c3eb6fc8a01b56e0a2331eddff46/.github%2Fworkflows%2Fdeloyment_on_webhook.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Fdeloyment_on_webhook.yml?ref=eef9b5001887c3eb6fc8a01b56e0a2331eddff46",
        "patch": "@@ -1,32 +0,0 @@\n-name: Deploy on Webhook\n-\n-on:\n-  workflow_run:\n-    workflows: \n-      - \"Python Lint\"\n-      - \"Run tests\"\n-    types:\n-      - completed\n-\n-jobs:\n-  deploy:\n-    if: github.ref == 'refs/heads/main'\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Check lint and test results\n-      run: |\n-        if [ \"${{ github.event.workflow_run.conclusion }}\" != \"success\" ]; then\n-          echo \"Lint or Test workflow did not succeed. Exiting.\"\n-          exit 1\n-        fi\n-\n-    - name: Trigger Deployment Webhook\n-      env:\n-        WEBHOOK_DOMAIN: ${{ secrets.WEBHOOK_DOMAIN }}\n-        WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}\n-      run: |\n-        curl -X POST https://${{ secrets.WEBHOOK_DOMAIN }}/webhook/deploy -H \"Authorization: Bearer ${{ secrets.WEBHOOK_TOKEN }}\""
      },
      {
        "sha": "f7dfe75eb96badbdd3ee434377bee31f33a173df",
        "filename": ".github/workflows/deployment_on_dockerhub.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/eef9b5001887c3eb6fc8a01b56e0a2331eddff46/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/eef9b5001887c3eb6fc8a01b56e0a2331eddff46/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Fdeployment_on_dockerhub.yml?ref=eef9b5001887c3eb6fc8a01b56e0a2331eddff46",
        "patch": "@@ -1,43 +0,0 @@\n-# This workflow uses actions that are not certified by GitHub.\n-# They are provided by a third-party and are governed by\n-# separate terms of service, privacy policy, and support\n-# documentation.\n-\n-# GitHub recommends pinning actions to a commit SHA.\n-# To get a newer version, you will need to update the SHA.\n-# You can also reference a tag or branch, but the action may change without warning.\n-\n-name: Publish image in Docker Hub\n-\n-on:\n-  release:\n-    types: [published]\n-\n-jobs:\n-  push_to_registry:\n-    name: Push Docker image to Docker Hub\n-    runs-on: ubuntu-latest\n-    steps:\n-      - name: Check out the repo\n-        uses: actions/checkout@v3\n-\n-      - name: Log in to Docker Hub\n-        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a\n-        with:\n-          username: ${{ secrets.DOCKER_USER }}\n-          password: ${{ secrets.DOCKER_PASSWORD }}\n-\n-      - name: Build and push Docker image\n-        run: docker build --build-arg VERSION_TAG=${{ github.event.release.tag_name }} -t drorganvidez/uvlhub:${{ github.event.release.tag_name }} -f docker/images/Dockerfile.prod .\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled\n-\n-      - name: Push Docker image to Docker Hub\n-        run: docker push drorganvidez/uvlhub:${{ github.event.release.tag_name }}\n-\n-      - name: Tag and push latest\n-        run: |\n-          docker tag drorganvidez/uvlhub:${{ github.event.release.tag_name }} drorganvidez/uvlhub:latest\n-          docker push drorganvidez/uvlhub:latest\n-        env:\n-          DOCKER_CLI_EXPERIMENTAL: enabled"
      },
      {
        "sha": "ccbd3311ba585fae0de19dc7a96de461fce8de9c",
        "filename": ".github/workflows/lint.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/eef9b5001887c3eb6fc8a01b56e0a2331eddff46/.github%2Fworkflows%2Flint.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/eef9b5001887c3eb6fc8a01b56e0a2331eddff46/.github%2Fworkflows%2Flint.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Flint.yml?ref=eef9b5001887c3eb6fc8a01b56e0a2331eddff46",
        "patch": "@@ -1,28 +0,0 @@\n-name: Python Lint\n-\n-on:\n-  push:\n-    branches: [main, develop]\n-  pull_request:\n-    branches: [main, develop]\n-\n-jobs:\n-  lint:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - uses: actions/checkout@v2\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: '3.x'\n-\n-    - name: Install Dependencies\n-      run: |\n-        python -m pip install --upgrade pip\n-        pip install flake8\n-\n-    - name: Lint with flake8\n-      run: |\n-        flake8 app"
      },
      {
        "sha": "0da3759bf2760fc0a421d041e8cc8fdbd5be88d6",
        "filename": ".github/workflows/render.yml",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/b443fc90a4f0f293f9a5997d46403863daa94ee9/.github%2Fworkflows%2Frender.yml",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/b443fc90a4f0f293f9a5997d46403863daa94ee9/.github%2Fworkflows%2Frender.yml",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.github%2Fworkflows%2Frender.yml?ref=b443fc90a4f0f293f9a5997d46403863daa94ee9",
        "patch": "@@ -0,0 +1,66 @@\n+name: Deploy to Render\n+\n+on:\n+    push:\n+      tags:\n+      - 'v*' \n+    pull_request:\n+      branches:\n+        - main\n+\n+jobs:\n+\n+  testing:\n+\n+    name: Run Tests\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      mysql:\n+        image: mysql:5.7\n+        env:\n+          MYSQL_ROOT_PASSWORD: uvlhub_root_password\n+          MYSQL_DATABASE: uvlhubdb_test\n+          MYSQL_USER: uvlhub_user\n+          MYSQL_PASSWORD: uvlhub_password\n+        ports:\n+          - 3306:3306\n+        options: --health-cmd=\"mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3\n+\n+    steps:\n+\n+    - uses: actions/checkout@v4\n+\n+    - uses: actions/setup-python@v5\n+      with:\n+        python-version: '3.12'\n+\n+    - name: Install dependencies\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install -r requirements.txt\n+\n+    - name: Run Tests\n+      env:\n+        FLASK_ENV: testing\n+        MARIADB_HOSTNAME: 127.0.0.1\n+        MARIADB_PORT: 3306\n+        MARIADB_TEST_DATABASE: uvlhubdb_test\n+        MARIADB_USER: uvlhub_user\n+        MARIADB_PASSWORD: uvlhub_password\n+      run: |\n+        pytest app/modules/ --ignore-glob='*selenium*'\n+\n+  deploy:\n+    name: Deploy to Render\n+    needs: testing\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Check out the repo\n+        uses: actions/checkout@v4\n+\n+      - name: Deploy to Render\n+        env:\n+          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}\n+        run: |\n+          curl \"$deploy_url\""
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/4",
    "id": 2171535270,
    "node_id": "PR_kwDONB39G86Bbv-m",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/4",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/4.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/4.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/4",
    "number": 4,
    "state": "closed",
    "locked": false,
    "title": "feat: Add documents",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": null,
    "created_at": "2024-11-10T17:09:10Z",
    "updated_at": "2024-11-10T17:09:22Z",
    "closed_at": "2024-11-10T17:09:19Z",
    "merged_at": "2024-11-10T17:09:19Z",
    "merge_commit_sha": "96ace105aee2c55df05ccab19bedb5fa55b555cb",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/4/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/4/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/4/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/004820c8dbf327e06c942323dff0e547aaa09ff1",
    "head": {
      "label": "TostaHub:feature/3-add-documents",
      "ref": "feature/3-add-documents",
      "sha": "004820c8dbf327e06c942323dff0e547aaa09ff1",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "0fb6610e205d887d54d0d0e7046eece851bb5933",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/4"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/4"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/4"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/4/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/4/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/4/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/004820c8dbf327e06c942323dff0e547aaa09ff1"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "07d6301819c67131b12b8e64be44300e2163e1c9",
        "filename": "Acta fundacional.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/004820c8dbf327e06c942323dff0e547aaa09ff1/Acta%20fundacional.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/004820c8dbf327e06c942323dff0e547aaa09ff1/Acta%20fundacional.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/Acta%20fundacional.pdf?ref=004820c8dbf327e06c942323dff0e547aaa09ff1"
      },
      {
        "sha": "35b73b75239de7429b2fd1d879bbaa650ee82630",
        "filename": "M01-incremento.pdf",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/004820c8dbf327e06c942323dff0e547aaa09ff1/M01-incremento.pdf",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/004820c8dbf327e06c942323dff0e547aaa09ff1/M01-incremento.pdf",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/M01-incremento.pdf?ref=004820c8dbf327e06c942323dff0e547aaa09ff1"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/2",
    "id": 2171533880,
    "node_id": "PR_kwDONB39G86Bbvo4",
    "html_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/2",
    "diff_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/2.diff",
    "patch_url": "https://github.com/TostaHub/tostahub-uvlhub/pull/2.patch",
    "issue_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/2",
    "number": 2,
    "state": "closed",
    "locked": false,
    "title": "fix: Fix not finding chromedriver",
    "user": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "This fix changes the way the chrome driver is found. ",
    "created_at": "2024-11-10T17:05:20Z",
    "updated_at": "2024-11-10T17:17:20Z",
    "closed_at": "2024-11-10T17:17:17Z",
    "merged_at": "2024-11-10T17:17:17Z",
    "merge_commit_sha": "e68373226a6e6c44fc7d048fc337329ee3febfce",
    "assignee": {
      "login": "Ahydul",
      "id": 48711356,
      "node_id": "MDQ6VXNlcjQ4NzExMzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ahydul",
      "html_url": "https://github.com/Ahydul",
      "followers_url": "https://api.github.com/users/Ahydul/followers",
      "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
      "organizations_url": "https://api.github.com/users/Ahydul/orgs",
      "repos_url": "https://api.github.com/users/Ahydul/repos",
      "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ahydul/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "Ahydul",
        "id": 48711356,
        "node_id": "MDQ6VXNlcjQ4NzExMzU2",
        "avatar_url": "https://avatars.githubusercontent.com/u/48711356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Ahydul",
        "html_url": "https://github.com/Ahydul",
        "followers_url": "https://api.github.com/users/Ahydul/followers",
        "following_url": "https://api.github.com/users/Ahydul/following{/other_user}",
        "gists_url": "https://api.github.com/users/Ahydul/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Ahydul/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Ahydul/subscriptions",
        "organizations_url": "https://api.github.com/users/Ahydul/orgs",
        "repos_url": "https://api.github.com/users/Ahydul/repos",
        "events_url": "https://api.github.com/users/Ahydul/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Ahydul/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/2/commits",
    "review_comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/2/comments",
    "review_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/2/comments",
    "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d465baf2ce2b748f8f8305d8d7b043b075f666fe",
    "head": {
      "label": "TostaHub:hotfix/1-fix-selenium-error",
      "ref": "hotfix/1-fix-selenium-error",
      "sha": "d465baf2ce2b748f8f8305d8d7b043b075f666fe",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "TostaHub:main",
      "ref": "main",
      "sha": "0fb6610e205d887d54d0d0e7046eece851bb5933",
      "user": {
        "login": "TostaHub",
        "id": 185413513,
        "node_id": "O_kgDOCw0viQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TostaHub",
        "html_url": "https://github.com/TostaHub",
        "followers_url": "https://api.github.com/users/TostaHub/followers",
        "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
        "organizations_url": "https://api.github.com/users/TostaHub/orgs",
        "repos_url": "https://api.github.com/users/TostaHub/repos",
        "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TostaHub/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 874380571,
        "node_id": "R_kgDONB39Gw",
        "name": "tostahub-uvlhub",
        "full_name": "TostaHub/tostahub-uvlhub",
        "private": false,
        "owner": {
          "login": "TostaHub",
          "id": 185413513,
          "node_id": "O_kgDOCw0viQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/185413513?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TostaHub",
          "html_url": "https://github.com/TostaHub",
          "followers_url": "https://api.github.com/users/TostaHub/followers",
          "following_url": "https://api.github.com/users/TostaHub/following{/other_user}",
          "gists_url": "https://api.github.com/users/TostaHub/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TostaHub/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TostaHub/subscriptions",
          "organizations_url": "https://api.github.com/users/TostaHub/orgs",
          "repos_url": "https://api.github.com/users/TostaHub/repos",
          "events_url": "https://api.github.com/users/TostaHub/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TostaHub/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "description": "Repository of feature models in UVL format integrated with Zenodo and flamapy following Open Science principles - Developed by DiversoLab",
        "fork": true,
        "url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub",
        "forks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/forks",
        "keys_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/teams",
        "hooks_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/hooks",
        "issue_events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/events{/number}",
        "events_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/events",
        "assignees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/assignees{/user}",
        "branches_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/branches{/branch}",
        "tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/tags",
        "blobs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/languages",
        "stargazers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/stargazers",
        "contributors_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contributors",
        "subscribers_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscribers",
        "subscription_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/subscription",
        "commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/{+path}",
        "compare_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/merges",
        "archive_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/downloads",
        "issues_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues{/number}",
        "pulls_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/labels{/name}",
        "releases_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/releases{/id}",
        "deployments_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/deployments",
        "created_at": "2024-10-17T18:12:33Z",
        "updated_at": "2024-12-18T17:05:51Z",
        "pushed_at": "2024-12-18T17:05:46Z",
        "git_url": "git://github.com/TostaHub/tostahub-uvlhub.git",
        "ssh_url": "git@github.com:TostaHub/tostahub-uvlhub.git",
        "clone_url": "https://github.com/TostaHub/tostahub-uvlhub.git",
        "svn_url": "https://github.com/TostaHub/tostahub-uvlhub",
        "homepage": "https://docs.uvlhub.io",
        "size": 2551,
        "stargazers_count": 3,
        "watchers_count": 3,
        "language": "Python",
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": false,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 1,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 1,
        "watchers": 3,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/2"
      },
      "html": {
        "href": "https://github.com/TostaHub/tostahub-uvlhub/pull/2"
      },
      "issue": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/2"
      },
      "comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/issues/2/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/2/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/pulls/2/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/statuses/d465baf2ce2b748f8f8305d8d7b043b075f666fe"
      }
    },
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "files": [
      {
        "sha": "d990ad2a28243a658a6ea3914a20a57fee3e5b74",
        "filename": ".moduleignore",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d465baf2ce2b748f8f8305d8d7b043b075f666fe/.moduleignore",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d465baf2ce2b748f8f8305d8d7b043b075f666fe/.moduleignore",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/.moduleignore?ref=d465baf2ce2b748f8f8305d8d7b043b075f666fe",
        "patch": "@@ -0,0 +1 @@\n+webhook\n\\ No newline at end of file"
      },
      {
        "sha": "c46f2e8aedd30983a92718342cbbfb6ee4ca6b06",
        "filename": "core/selenium/common.py",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/TostaHub/tostahub-uvlhub/blob/d465baf2ce2b748f8f8305d8d7b043b075f666fe/core%2Fselenium%2Fcommon.py",
        "raw_url": "https://github.com/TostaHub/tostahub-uvlhub/raw/d465baf2ce2b748f8f8305d8d7b043b075f666fe/core%2Fselenium%2Fcommon.py",
        "contents_url": "https://api.github.com/repos/TostaHub/tostahub-uvlhub/contents/core%2Fselenium%2Fcommon.py?ref=d465baf2ce2b748f8f8305d8d7b043b075f666fe",
        "patch": "@@ -1,3 +1,4 @@\n+import os\n from selenium import webdriver\n from selenium.webdriver.chrome.service import Service\n from webdriver_manager.chrome import ChromeDriverManager\n@@ -8,10 +9,13 @@ def initialize_driver():\n     options = webdriver.ChromeOptions()\n \n     # Initialise the browser using WebDriver Manager\n-    service = Service(ChromeDriverManager().install())\n+    chrome_install = ChromeDriverManager().install()\n+    folder = os.path.dirname(chrome_install)\n+    chromedriver_path = os.path.join(folder, \"chromedriver\")\n+    service = Service(chromedriver_path)\n     driver = webdriver.Chrome(service=service, options=options)\n     return driver\n \n \n def close_driver(driver):\n-    driver.quit()\n\\ No newline at end of file\n+    driver.quit()"
      }
    ]
  }
]